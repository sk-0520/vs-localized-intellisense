<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Forms.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary>扩展组件的设计模式行为。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary>获取与设计器相关联的组件所支持的设计时操作列表。</summary>
      <returns>与设计器相关联的组件所支持的设计时操作列表。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary>获取与设计器所管理的组件关联的组件集合。</summary>
      <returns>与设计器所管理的组件关联的组件。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary>获取此设计器正在设计的组件。</summary>
      <returns>由该设计器管理的组件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary>在源代码文件中为组件的默认事件创建方法签名，并将用户的光标定位到该位置。</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">签出已签入源代码管理程序的文件的尝试失败。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary>尝试从设计器组件的设计模式站点检索指定类型的服务。</summary>
      <param name="serviceType">要请求的服务的类型。</param>
      <returns>实现所请求服务的对象，在无法解析服务时则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary>获取一个特性，该特性指示关联组件的继承类型。</summary>
      <returns>关联组件的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary>获取一个值，该值指示是否继承此组件。</summary>
      <returns>如果继承此组件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>使设计器准备查看、编辑和设计指定的组件。</summary>
      <param name="component">此设计器的组件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>重新初始化现有组件。</summary>
      <param name="defaultValues">要应用到属性的默认值的名称/值字典。 如果未指定默认值，可能为 <see langword="null" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>初始化新创建的组件。</summary>
      <param name="defaultValues">要应用到属性的默认值的名称/值字典。 如果未指定默认值，可能为 <see langword="null" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary>对已初始化为非默认设置的导入组件的设置进行初始化。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary>获取指定 <see cref="T:System.ComponentModel.InheritanceAttribute" /> 的 <see cref="T:System.ComponentModel.Design.ComponentDesigner" />。</summary>
      <param name="toInvoke">要检索其继承特性的 <see cref="T:System.ComponentModel.Design.ComponentDesigner" />。</param>
      <returns>指定设计器的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary>设置组件的默认属性。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary>获取此设计器的父组件。</summary>
      <returns>此设计器的父组件，或者如果此设计器为根组件，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>允许设计器从通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中更改或移除项。</summary>
      <param name="attributes">组件的类的特性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>允许设计器从通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中更改或移除项。</summary>
      <param name="events">组件的类的事件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>允许设计器从通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中更改或移除项。</summary>
      <param name="properties">组件的类的特性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中添加项。</summary>
      <param name="attributes">组件的类的特性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中添加项。</summary>
      <param name="events">组件的类的事件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中添加项。</summary>
      <param name="properties">组件的类的特性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>通知 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> 此组件已被更改。</summary>
      <param name="member">指示已更改的成员的 <see cref="T:System.ComponentModel.MemberDescriptor" />。</param>
      <param name="oldValue">该成员的旧值。</param>
      <param name="newValue">该成员的新值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary>通知 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> 此组件即将被更改。</summary>
      <param name="member">指示即将被更改的成员的 <see cref="T:System.ComponentModel.MemberDescriptor" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary>获取重写用户设置的属性值的集合。</summary>
      <returns>指示设计文档隐藏属性的 <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary>表示应重写特定属性的继承默认值或分配值的遮盖属性集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary>指示集合中是否存在匹配指定名称的属性。</summary>
      <param name="propertyName">要在集合中检查的属性的名称。</param>
      <returns>如果集合中存在此属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary>获取或设置指定索引处的对象。</summary>
      <param name="propertyName">要在集合中访问的属性的名称。</param>
      <returns>指定的属性值（如果该值存在于集合中）。 否则，将从非隐藏属性的当前值中检索该值。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="attributes">组件的类的 <see cref="T:System.Attribute" /> 对象。 特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="events">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。 事件字典中的关键字是事件名。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="properties">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。 属性字典中的关键字是属性名。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="attributes">组件的类的 <see cref="T:System.Attribute" /> 对象。 特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="events">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。 事件字典中的关键字是事件名。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="properties">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。 属性字典中的关键字是属性名。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary>有关此成员的说明，请参见 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> 属性。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />，其中包含在当前的父设计器中所包含的 <see cref="T:System.ComponentModel.Design.IDesigner" /> 设计器的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary>有关此成员的说明，请参见 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> 属性。</summary>
      <returns>表示父设计器的 <see cref="T:System.ComponentModel.Design.IDesigner" />，如果没有父设计器，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary>获取与设计器相关联的组件所支持的设计时谓词。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> 对象的 <see cref="T:System.ComponentModel.Design.DesignerVerb" />，在没有可用设计器谓词的情况下为 <see langword="null" />。 此默认实现始终返回 <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary>表示智能标记面板的静态标题项。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary>使用提供的名称字符串初始化 <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> 类的新实例。</summary>
      <param name="displayName">要显示在标题上的文本。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary>使用提供的名称和类别字符串初始化 <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> 类的新实例。</summary>
      <param name="displayName">要显示在标题上的文本。</param>
      <param name="category">区分大小写的 <see cref="T:System.String" />，它定义面板条目的分组。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary>为表示智能标记面板上的面板项的类型提供基类。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 类的新实例。</summary>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">区分大小写的 <see cref="T:System.String" />，它定义面板条目的分组。</param>
      <param name="description">此项的补充文本，可能用在工具提示或状态栏中。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary>获取或设置一个值，该值表示是否允许将此项放入具有相同 <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" /> 属性值的一组项中。</summary>
      <returns>如果该项可以组合，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary>获取某个项的组名。</summary>
      <returns>一个字符串，表示该项所属的组。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary>获取项的补充文本。</summary>
      <returns>
        <see cref="T:System.String" />，其中包含项的描述文本。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary>获取此项的文本。</summary>
      <returns>
        <see cref="T:System.String" />，其中包含项的显示文本。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary>获取对一个集合的引用，该集合可用于存储程序员定义的键/值对。</summary>
      <returns>可实现 <see cref="T:System.Collections.IDictionary" /> 的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary>获取或设置指示此项目是否在源代码视图中显示的值。</summary>
      <returns>如果该项显示在原始代码视图，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary>表示 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 对象集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary>将提供的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 添加到当前集合。</summary>
      <param name="value">要添加的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 索引，已在此处添加了值。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary>确定 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 是否包含特定元素。</summary>
      <param name="value">要在 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 中定位的 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />。</param>
      <returns>如果 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 包含指定值，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary>将当前集合的元素复制到提供的数组，从指定的数组索引开始。</summary>
      <param name="array">一维 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 数组，它是从当前集合复制的元素的目标位置。 该数组的索引必须从零开始。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary>确定集合中特定项的索引。</summary>
      <param name="value">要在集合中查找的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
      <returns>如果找到，则为整个 <paramref name="value" /> 中 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 第一个匹配项的从零开始的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary>将元素插入 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 的指定索引处。</summary>
      <param name="index">应插入 <paramref name="value" /> 的从零开始的索引。</param>
      <param name="value">要插入的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的元素。</summary>
      <param name="index">元素的索引（索引从零开始）。</param>
      <returns>位于指定索引处的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary>从 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 中移除特定对象的第一个匹配项。</summary>
      <param name="value">要从 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 移除的 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary>为定义用于创建智能标记面板的项列表的类型提供基类。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 类的新实例。</summary>
      <param name="component">与 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 相关的组件。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary>获取或设置一个值，该值表示智能标记面板在创建后是否应自动显示。</summary>
      <returns>如果在所属组件创建后应显示面板，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary>获取与 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 相关的组件。</summary>
      <returns>与 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 相关的组件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary>返回一个对象，该对象表示由与 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 相关联的组件提供的服务。</summary>
      <param name="serviceType">由 <see cref="T:System.ComponentModel.Component" /> 提供的服务。</param>
      <returns>一个 <see cref="T:System.Object" />，表示由 <see cref="T:System.ComponentModel.Component" /> 提供的服务。 如果 <see cref="T:System.ComponentModel.Component" /> 不提供指定的服务，则此值为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary>返回包含在列表中的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 数组，包含此列表中的项。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary>表示 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary>使用默认设置初始化 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary>用指定的面板项初始化 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 类的新实例。</summary>
      <param name="value">要填充到集合中的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary>将提供的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 添加到当前集合。</summary>
      <param name="value">要添加的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns>要将新元素插入到集合的内部列表中的位置。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary>将提供的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 数组的元素添加到当前集合的末尾。</summary>
      <param name="value">要添加的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>将提供的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 的元素添加到当前集合的末尾。</summary>
      <param name="value">要添加的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary>指示集合是否包含特定值。</summary>
      <param name="value">要搜索的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns>如果集合包含指定的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary>将当前集合的元素复制到提供的数组，从指定的数组索引开始。</summary>
      <param name="array">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 类型的一维数组，它是从当前集合复制的元素的目标数组。 该数组的索引必须从零开始。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于 0。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的。
或
当前集合中的元素数目大于从 <paramref name="index" /> 到目标数组的末尾的可用空间。</exception>
      <exception cref="T:System.InvalidCastException">将当前集合的元素强制转换为目标数组的类型时发生问题，可能是由于失败的向下转换造成的。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary>确定集合中特定项的索引。</summary>
      <param name="value">要在集合中查找的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns>如果在内部列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary>将提供的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 插入到集合中的指定位置。</summary>
      <param name="index">应插入 <paramref name="value" /> 的从零开始的索引。</param>
      <param name="value">要插入到集合中的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于 0 或大于当前集合中的元素计数。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的元素。</summary>
      <param name="index">元素的索引（索引从零开始）。</param>
      <returns>位于指定索引处的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary>当验证值时执行其他自定义进程。</summary>
      <param name="value">要验证的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>从集合中移除特定 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 的第一个匹配项。</summary>
      <param name="value">要从当前集合中移除的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> 类的新实例。</summary>
      <param name="relatedObject">与此集合相关联的对象。</param>
      <param name="changeType">指定是否已在此集合中添加或移除 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 的值。</param>
      <param name="actionLists">应用此操作后列表元素的集合。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary>获取与此事件关联的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象的集合。</summary>
      <returns>表示集合当前状态的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary>获取一个标志，该标志指示是否已在 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象的集合中添加或移除某个元素。</summary>
      <returns>指示更改类型的 <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary>获取与 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象的集合相关联的对象。</summary>
      <returns>与托管的 <see cref="T:System.Object" /> 关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary>表示将用来处理 <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> 的 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 事件的方法。 此类不能被继承。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary>指定发生于 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象集合中的更改类型。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary>一个或多个 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象已被添加到集合中。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary>一个或多个 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象已从集合中移除。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary>表示与从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的方法关联的智能标记面板项。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary>使用指定的方法和显示名称初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类的新实例。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />，包含与此项关联的方法。</param>
      <param name="memberName">要通过面板项调用的方法的名称，此方法是从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的一个方法，其方法名区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary>使用指定的方法和显示名称以及一个标志（用于指示此项是否应显示在其他用户界面上下文中），初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类的新实例。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />，包含与此项关联的方法。</param>
      <param name="memberName">要通过面板项调用的方法的名称，此方法是从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的一个方法，其方法名区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="includeAsDesignerVerb">一个标志，指定是否也将关联方法处理为设计器谓词。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary>使用指定的方法名称、显示名称和类别名称，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类的新实例。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />，包含与此项关联的方法。</param>
      <param name="memberName">要通过面板项调用的方法的名称，此方法是从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的一个方法，其方法名区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于对面板上的相似项进行分组的、区分大小写的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary>使用指定的方法名称、显示名称和类别名称，以及指示此项是否应显示在其他用户界面上下文中的标志，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类的新实例。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />，包含与此项关联的方法。</param>
      <param name="memberName">要通过面板项调用的方法的名称，此方法是从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的一个方法，其方法名区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于对面板上的相似项进行分组的、区分大小写的 <see cref="T:System.String" />。</param>
      <param name="includeAsDesignerVerb">一个标志，指定是否也将关联方法视为关联组件的设计器谓词。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary>使用指定的方法、类别名称以及显示和说明文本，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类的新实例。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />，包含与此项关联的方法。</param>
      <param name="memberName">要通过面板项调用的方法的名称，此方法是从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的一个方法，其方法名区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于对面板上的相似项进行分组的、区分大小写的 <see cref="T:System.String" />。</param>
      <param name="description">此项的补充文本，用在工具提示或状态栏中。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>使用指定的方法和类别名称、显示和说明文本，以及指示此项是否应显示在其他用户界面上下文中的标志，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类的新实例。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />，包含与此项关联的方法。</param>
      <param name="memberName">要通过面板项调用的方法的名称，此方法是从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的一个方法，其方法名区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于对面板上的相似项进行分组的、区分大小写的 <see cref="T:System.String" />。</param>
      <param name="description">此项的补充文本，用在工具提示或状态栏中。</param>
      <param name="includeAsDesignerVerb">一个标志，指定是否也将关联方法视为关联组件的设计器谓词。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary>获取一个值，该值指示 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 应显示在其他用户界面上下文中。</summary>
      <returns>如果此项要在快捷菜单中使用，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary>以编程方式执行与 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 关联的方法。</summary>
      <exception cref="T:System.InvalidOperationException">找不到在 <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> 中指定的方法。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary>获取与此 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 关联的方法的名称。</summary>
      <returns>
        <see cref="T:System.String" />，包含关联方法的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary>获取或设置为当前面板提供 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 对象的组件。</summary>
      <returns>提供对象的组件，它应有提供项的关联设计器。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary>表示与从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的属性相关的面板项。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary>用指定的属性和显示名称初始化 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 类的新实例。</summary>
      <param name="memberName">与此面板项关联的属性的名称（区分大小写）。</param>
      <param name="displayName">此项的面板文本。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary>使用指定的属性和类别名称以及显示文本，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 类的新实例。</summary>
      <param name="memberName">与此面板项关联的属性的名称（区分大小写）。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于对面板上的相似项进行分组的、区分大小写的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary>使用指定的属性名称和类别名称以及显示和说明文本，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 类的新实例。</summary>
      <param name="memberName">与此面板项关联的属性的名称（区分大小写）。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于对面板上的相似项进行分组的、区分大小写的 <see cref="T:System.String" />。</param>
      <param name="description">此项的补充文本，用在工具提示或状态栏中。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary>获取与此项关联的属性的名称。</summary>
      <returns>一个 <see cref="T:System.String" />，它包含关联属性的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary>获取或设置将其项供给当前面板的组件。</summary>
      <returns>供给组件，该组件应具有提供 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 对象的关联设计器。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary>建立管理组件的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 对象集合的设计时服务。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 类的新实例。</summary>
      <param name="serviceProvider">当前设计时环境的服务提供程序。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>将 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 添加到当前的托管智能标记集合。</summary>
      <param name="comp">要与智能标记关联的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="actionList">包含要添加的新智能标记项的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <exception cref="T:System.ArgumentNullException">两个参数之一或两个参数均为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>将 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 添加到当前的托管智能标记集合。</summary>
      <param name="comp">要与智能标记关联的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="designerActionListCollection">包含要添加的新智能标记项的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">两个参数之一或两个参数均为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary>解除所有组件的管理，并清除所有推模型智能标记列表。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary>确定当前智能标记服务是否管理指定组件的操作列表。</summary>
      <param name="comp">要搜索的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns>如果组件由当前服务管理，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary>为任何组件移除或添加 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary>释放 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 类使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary>返回与某个组件关联的智能标记项列表的集合。</summary>
      <param name="component">与智能标记关联的组件。</param>
      <returns>指定组件的智能标记集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.Windows.Forms.Design.ComponentActionsType)">
      <param name="component" />
      <param name="type" />
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>检索与组件关联的拉模型智能标记。</summary>
      <param name="component">与智能标记关联的组件。</param>
      <param name="actionLists">要添加关联智能标记的集合。</param>
      <exception cref="T:System.ArgumentNullException">两个参数之一或两个参数均为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>检索与组件关联的推模型智能标记。</summary>
      <param name="component">与智能标记关联的组件。</param>
      <param name="actionLists">要添加关联智能标记的集合。</param>
      <exception cref="T:System.ArgumentNullException">两个参数之一或两个参数均为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>从由当前服务管理的所有组件中移除指定的智能标记列表。</summary>
      <param name="actionList">要移除的智能标记列表。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actionList" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary>移除与指定组件关联的所有智能标记列表。</summary>
      <param name="comp">要与智能标记断开关联的组件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>从指定的组件移除指定的智能标记列表。</summary>
      <param name="comp">要与智能标记断开关联的组件。</param>
      <param name="actionList">要移除的智能标记列表。</param>
      <exception cref="T:System.ArgumentNullException">两个参数之一或两个参数均为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary>表示智能标记面板上的静态文本项。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" /> 类的新实例。</summary>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于组合面板上类似项的类别。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary>管理智能标记面板的用户界面 (UI)。 此类不能被继承。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary>当请求显示或隐藏智能标记面板时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary>释放 <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> 类使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary>隐藏组件的智能标记面板。</summary>
      <param name="component">应隐藏其智能标记面板的组件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary>更新智能标记面板。</summary>
      <param name="component">要刷新的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary>指示是否自动显示智能标记面板。</summary>
      <param name="component">要自动显示的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns>要自动显示智能标记面板，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary>显示组件的智能标记面板。</summary>
      <param name="component">应显示其智能标记面板的组件。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" /> 类的新实例。</summary>
      <param name="relatedObject">与面板相关联的对象。</param>
      <param name="changeType">指定面板正处于显示或隐藏状态的值。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary>获取指示智能标记面板处于显示还是隐藏状态的标志。</summary>
      <returns>指示面板状态的 <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary>获取与智能标记面板相关联的对象。</summary>
      <returns>与智能标记面板相关联的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary>表示将用来处理 <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> 的 <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> 事件的方法。</summary>
      <param name="sender">引发事件的 <see cref="T:System.Object" />。</param>
      <param name="e">事件特定的信息。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary>指定智能标记面板的显示状态。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary>智能标记面板正处于隐藏状态。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary>智能标记面板正在刷新。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary>智能标记面板正处于显示状态。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary>表示设计时工具的基类（不是从 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 派生的），它提供智能标记或设计器谓词能力。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerCommandSet" /> 类的实例。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary>获取与设计的组件关联的所有智能标记的集合。</summary>
      <returns>包含关联的设计的组件的智能标记的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary>返回命令对象的集合。</summary>
      <param name="name">要返回的集合的类型，指示 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 或 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。</param>
      <returns>包含命令对象的指定类型（<see cref="T:System.ComponentModel.Design.DesignerActionList" /> 或 <see cref="T:System.ComponentModel.Design.DesignerVerb" />）的集合。 此基实现总是返回 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary>获取与设计的组件关联的所有设计器谓词的集合。</summary>
      <returns>包含关联的设计组件的设计器谓词的 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary>为设计组件提供一个用户界面。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</summary>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</summary>
      <param name="parentProvider">父服务提供程序；如果不存在用于解决服务的父服务提供程序，则为 <see langword="null" />。</param>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</summary>
      <param name="parentProvider">父服务提供程序；如果不存在用于解决服务的父服务提供程序，则为 <see langword="null" />。</param>
      <param name="rootComponentType">要创建的根组件的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</summary>
      <param name="rootComponentType">要创建的根组件的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary>使用给定的设计器加载程序开始加载过程。</summary>
      <param name="loader">用于加载设计器的设计器加载程序。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loader" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary>开始加载过程。</summary>
      <param name="rootComponentType">要在设计模式中创建的组件的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponentType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary>获取设计图面中的 <see cref="T:System.ComponentModel.IContainer" /> 实现。</summary>
      <returns>设计图面中的 <see cref="T:System.ComponentModel.IContainer" /> 实现。</returns>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary>创建组件的实例。</summary>
      <param name="componentType">要创建的组件的类型。</param>
      <returns>新创建的组件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary>在将组件添加到容器时创建设计器。</summary>
      <param name="component">应为其创建设计器的组件。</param>
      <param name="rootDesigner">
        <see langword="true" /> 表示创建根设计器；<see langword="false" /> 表示创建普通设计器。</param>
      <returns>所请求的设计器的实例，如果找不到匹配的设计器，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary>创建给定类型的实例。</summary>
      <param name="type">要创建的类型。</param>
      <returns>新创建的对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary>创建一个适合嵌套控件或组件的容器。</summary>
      <param name="owningComponent">管理嵌套容器的组件。</param>
      <returns>嵌套容器。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary>创建一个适合嵌套控件或组件的容器。</summary>
      <param name="owningComponent">管理嵌套容器的组件。</param>
      <param name="containerName">嵌套容器的其他名称。</param>
      <returns>嵌套容器。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 占用的资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 占用的资源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary>在释放设计图面时发生。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary>获取一个值，该值指示是否正在加载“设计时错误列表”。</summary>
      <returns>
        <see langword="true" /> 加载设计时错误列表，则为; 否则为。否则，<see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary>序列化对设计图面的更改。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary>调用 <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> 的 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 方法时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary>从服务容器中获取服务。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>实现 <paramref name="serviceType" /> 或作为其派生类的对象，如果服务容器中不存在该服务，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary>获取一个值，该值指示当前是否正在加载设计图面。</summary>
      <returns>如果当前正在加载设计图面，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary>在设计器加载完成时发生。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary>返回加载错误的集合或空集合。</summary>
      <returns>加载错误的 <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary>在将要加载设计器时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary>获取服务容器。</summary>
      <returns>为设计图面中包含的设计器提供所有服务的服务容器。</returns>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary>在设计器完成卸载时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary>在设计器将要卸载时发生。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary>获取根设计器的视图。</summary>
      <returns>根设计器的视图。</returns>
      <exception cref="T:System.InvalidOperationException">设计图面当前未加载，设计器加载程序尚未创建根设计器，或者设计图面虽已完成加载，但加载失败。 在 <see cref="P:System.Exception.InnerException" /> 中可能提供了更多信息。</exception>
      <exception cref="T:System.NotSupportedException">设计器已加载，但是它没有提供与此设计图面兼容的视图。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary>在 <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> 上已调用 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 方法时发生。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary>表示异常的集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ExceptionCollection" /> 类的新实例。</summary>
      <param name="exceptions">
        <see cref="T:System.Exception" /> 类型的数组，包含要填充集合的对象。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary>获取表示异常集合的 <see cref="T:System.Exception" /> 对象的数组。</summary>
      <returns>表示异常集合的 <see cref="T:System.Exception" /> 数组。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 所需的数据来填充 <see cref="T:System.ComponentModel.Design.ExceptionCollection" />。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary>定义设计时环境中的多目标类型名称解析服务。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary>将目标框架的类型解析为程序集限定名称。</summary>
      <param name="type">要解析的类型。</param>
      <returns>目标框架中的 <paramref name="type" /> 的 <see cref="P:System.Type.AssemblyQualifiedName" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary>提供了一组用于标识继承的组件的方法。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>将由指定组件继承的组件添加到 <see cref="T:System.ComponentModel.Design.InheritanceService" />。</summary>
      <param name="component">用于搜索继承的组件以添加到指定容器中的组件。</param>
      <param name="container">要将继承的组件添加到其中的容器。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>将由指定组件继承的指定类型的组件添加到 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 中。</summary>
      <param name="type">要搜索的基类型。</param>
      <param name="component">用于搜索继承的组件以添加到指定容器中的组件。</param>
      <param name="container">要将继承的组件添加到其中的容器。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary>获取指定组件的继承特性。</summary>
      <param name="component">要为其检索继承特性的组件。</param>
      <returns>描述此组件的继承级别的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary>指示是否忽略指定的成员。</summary>
      <param name="member">要检查的成员。 此成员是 <see cref="T:System.Reflection.FieldInfo" /> 或 <see cref="T:System.Reflection.MethodInfo" />。</param>
      <param name="component">此成员所绑定到的组件实例。</param>
      <returns>如果指定的成员应该包含在继承的组件集中，为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件提供数据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> 类的新实例。</summary>
      <param name="succeeded">如果指示设计器加载已成功，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="errors">设计器加载时发生的错误的集合。</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary>获取设计器加载时发生的错误的集合。</summary>
      <returns>设计器加载时发生的错误的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary>获取一个值，该值指示设计器加载是否成功。</summary>
      <returns>如果设计器加载已成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary>表示将处理 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件的方法。 此类不能被继承。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary>指定项目的目标框架。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" /> 类的新实例。</summary>
      <param name="targetFrameworkMoniker">项目的目标框架。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary>获取项目的目标框架。</summary>
      <returns>项目的目标框架。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary>将一组组件序列化到一个序化列存储区中。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary>使用给定的服务提供程序初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> 类的新实例以解析服务。</summary>
      <param name="provider">用于解析服务的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary>创建一个新的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</summary>
      <returns>新序列化存储区。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary>将给定存储区反序列化以产生一个对象集合。</summary>
      <param name="store">将从中反序列化对象的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <returns>已反序列化的组件的集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 不是受支持的序列化存储区类型。 使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>将给定存储区反序列化，并使用反序列化的 <see cref="T:System.ComponentModel.IContainer" /> 对象填充给定的 <see cref="T:System.ComponentModel.IComponent" />。</summary>
      <param name="store">将从中反序列化对象的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="container">
        <see cref="T:System.ComponentModel.IComponent" /> 对象将要添加到的容器。</param>
      <returns>已反序列化的组件的集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 或 <paramref name="container" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 不是受支持的序列化存储区类型。 使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary>将给定 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 反序列化为给定容器，还可以应用默认属性值。</summary>
      <param name="store">将从中反序列化对象的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="container">数据将应用到的对象的容器。</param>
      <param name="validateRecycledTypes">如果要验证回收类型，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="applyDefaults">如果要应用默认属性值，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 或 <paramref name="container" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 不是受支持的序列化存储区类型。 使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary>从给定流加载 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</summary>
      <param name="stream">要从其加载 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 的流。</param>
      <returns>已加载的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="stream" /> 支持查找，其长度为 0。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>将给定的对象序列化为给定的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</summary>
      <param name="store">要将 <paramref name="value" /> 序列化为的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="value">要序列化的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 已关闭，或者 <paramref name="store" /> 不是序列化存储区的支持类型。 使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>根据默认属性值序列化给定对象。</summary>
      <param name="store">要将 <paramref name="value" /> 序列化为的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="value">要序列化的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 已关闭，或者 <paramref name="store" /> 不是序列化存储区的支持类型。 使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>在给定对象上序列化给定成员。</summary>
      <param name="store">要将 <paramref name="member" /> 序列化为的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="owningObject">拥有 <paramref name="member" /> 的对象。</param>
      <param name="member">给定成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 已关闭，或者 <paramref name="store" /> 不是序列化存储区的支持类型。 使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>在给定对象上序列化给定成员，但如果成员包含默认属性值，则也序列化该成员。</summary>
      <param name="store">要将 <paramref name="member" /> 序列化为的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="owningObject">拥有 <paramref name="member" /> 的对象。</param>
      <param name="member">给定成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 已关闭，或者 <paramref name="store" /> 不是序列化存储区的支持类型。 使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary>将对象图序列化为一系列 CodeDOM 语句。 此类提供序列化程序的抽象基类。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将指定的已序列化的 CodeDOM 对象反序列化为一个对象。</summary>
      <param name="manager">在反序列化进程中使用的序列化管理器接口。</param>
      <param name="codeObject">要进行反序列化的已序列化 CodeDOM 对象。</param>
      <returns>反序列化的 CodeDOM 对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="codeObject" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeObject" /> 是不受支持的代码元素。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>反序列化单条语句。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="statement">要反序列化的语句。</param>
      <returns>反序列化 <paramref name="statement" /> 所产生的对象实例。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary>确定给定的语句应属于的语句组。</summary>
      <param name="statement">要为其确定组的 <see cref="T:System.CodeDom.CodeStatement" />。</param>
      <param name="expression">
        <paramref name="statement" /> 已缩减成的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="targetType">
        <see cref="T:System.Type" /> 的 <paramref name="statement" />。</param>
      <returns>应与 <paramref name="statement" /> 分为一组的组件的名称。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将指定的对象序列化为 CodeDOM 对象。</summary>
      <param name="manager">要在序列化过程中使用的序列化管理器。</param>
      <param name="value">要序列化的对象。</param>
      <returns>一个 CodeDOM 对象，它表示已序列化的对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>序列化给定的对象（考虑默认值）。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="value">要序列化的对象。</param>
      <returns>一个 CodeDom 对象，表示 <paramref name="value" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>在给定对象上序列化给定成员。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="owningObject">
        <paramref name="member" /> 所附加到的对象。</param>
      <param name="member">要序列化的成员。</param>
      <returns>一个 <see cref="T:System.CodeDom.CodeStatementCollection" />，它表示 <paramref name="member" /> 的序列化状态。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> 是不可序列化的类型。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>考虑到默认值的情况下，序列化给定成员。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="owningObject">
        <paramref name="member" /> 所附加到的对象。</param>
      <param name="member">要序列化的成员。</param>
      <returns>一个 CodeDom 对象，表示 <paramref name="member" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> 是不可序列化的类型。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将指定值序列化为 CodeDOM 表达式。</summary>
      <param name="manager">要在序列化过程中使用的序列化管理器。</param>
      <param name="value">要序列化的对象。</param>
      <returns>已序列化的值。 如果无法获得指定值的引用表达式，或者无法序列化该值，则该方法返回 <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary>为 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 类提供基类。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary>将给定表达式反序列化为内存中的对象。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="name">从表达式生成的对象的名称。 如果不需要命名该对象，可以为 <see langword="null" />。</param>
      <param name="expression">要解释的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <returns>从 <paramref name="expression" /> 的解释生成的对象。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary>返回给定类型的实例。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="type">要返回的实例的 <see cref="T:System.Type" />。</param>
      <param name="parameters">要传递给 <paramref name="type" /> 的构造函数的参数。</param>
      <param name="name">反序列化的对象的名称。</param>
      <param name="addToContainer">要将该对象添加到设计容器，则为 <see langword="true" />；否则为 <see langword="false" />。 该对象必须实现 <see cref="T:System.ComponentModel.IComponent" /> 才能使此功能生效。</param>
      <returns>
        <paramref name="type" /> 的一个实例。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="type" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>在给定对象上将属性从固定区域性资源包反序列化。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要从其中对属性进行反序列化的对象。</param>
      <param name="filter">筛选将反序列化哪些属性的 <see cref="T:System.Attribute" /> 数组。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>通过解释并执行 CodeDOM 语句反序列化语句。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statement">要反序列化的 <see cref="T:System.CodeDom.CodeStatement" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>获取项目目标 .NET Framework 版本中定义的特性的集合。</summary>
      <param name="manager">序列化管理器。</param>
      <param name="type">目标类型。</param>
      <returns>项目目标 .NET Framework 版本中定义的特性的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>获取项目目标 .NET Framework 版本中定义的特性的集合。</summary>
      <param name="manager">序列化管理器。</param>
      <param name="instance">目标类型的对象。</param>
      <returns>项目目标 .NET Framework 版本中定义的特性的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>获取项目的 .NET Framework 的目标版本中定义的事件的集合。</summary>
      <param name="manager">序列化管理器。</param>
      <param name="instance">目标类型的对象。</param>
      <param name="attributes">要传递给目标 .NET Framework 版本的特性的数组。</param>
      <returns>项目的 .NET Framework 的目标版本中定义的事件的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>返回给定对象的表达式。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要为其获取表达式的对象。</param>
      <returns>表示 <paramref name="value" /> 的 <see cref="T:System.CodeDom.CodeExpression" />，或者，如果没有 <paramref name="value" /> 的现有表达式，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>获取项目的 .NET Framework 的目标版本中定义的属性的集合。</summary>
      <param name="manager">序列化管理器。</param>
      <param name="instance">目标类型的对象。</param>
      <param name="attributes">要传递给目标 .NET Framework 版本的特性的数组。</param>
      <returns>项目的 .NET Framework 的目标版本中定义的属性的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>获取从类型元数据生成的反射类型。</summary>
      <param name="manager">序列化管理器。</param>
      <param name="type">要从中使用元数据的类型。</param>
      <returns>从 <paramref name="type" /> 的元数据生成的反射类型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>获取从对象元数据生成的反射类型。</summary>
      <param name="manager">序列化管理器。</param>
      <param name="instance">要从中使用元数据的对象。</param>
      <returns>从 <paramref name="object" /> 的元数据生成的反射类型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>定位给定对象值的序列化程序。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">指定要检索的序列化程序的对象。</param>
      <returns>适合于 <paramref name="value" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>定位给定类型的序列化程序。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="valueType">指定要检索的序列化程序的 <see cref="T:System.Type" />。</param>
      <returns>适合于 <paramref name="valueType" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="valueType" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary>获取 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />，它可在类型筛选中用来识别 .NET Framework 的目标版本。</summary>
      <param name="provider">类型说明提供程序服务。</param>
      <param name="instance">如果 <paramref name="provider" /> 为 <see langword="null" />，则为一个可从中派生类型说明提供程序服务的对象。</param>
      <returns>一个可识别 .NET Framework 的类型说明提供程序。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>返回给定对象的唯一名称。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">将检索其名称的对象。</param>
      <returns>
        <paramref name="value" /> 的唯一名称。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>返回一个值，指示给定对象是否已序列化。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要为上面的序列化测试的对象。</param>
      <returns>如果已序列化 <paramref name="value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>返回一个值，指示给定对象是否已序列化，也可以考虑预设表达式。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要为上面的序列化测试的对象。</param>
      <param name="honorPreset">要包含预设表达式，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果已序列化 <paramref name="value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary>返回一个表示给定对象的创建的表达式。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <param name="isComplete">如果已完全序列化 <paramref name="value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>表示 <paramref name="value" /> 的创建的表达式。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary>将给定事件序列化为给定语句集合。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">要将事件序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">
        <paramref name="descriptor" /> 所绑定到的对象。</param>
      <param name="descriptor">一个 <see cref="T:System.ComponentModel.EventDescriptor" />，它指定要序列化的事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" /> 或 <paramref name="descriptor" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> 不可用。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>将指定的事件序列化为给定语句集合。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">要将事件序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">要在其上序列化事件的对象。</param>
      <param name="filter">一个 <see cref="T:System.Attribute" /> 数组，该数组筛选要进行序列化的事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>将给定对象上的属性序列化为给定语句集合。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">要将属性序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">要在其上序列化属性的对象。</param>
      <param name="filter">一个 <see cref="T:System.Attribute" /> 数组，该数组筛选要进行序列化的属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>在给定对象上将属性序列化为固定区域性的资源包。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">未使用。</param>
      <param name="value">将序列化其属性的对象。</param>
      <param name="filter">一个 <see cref="T:System.Attribute" /> 数组，该数组筛选要进行序列化的属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary>序列化给定对象上的属性。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">要将属性序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">要在其上序列化属性的对象。</param>
      <param name="propertyToSerialize">要序列化的属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" /> 或 <paramref name="propertyToSerialize" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>将给定对象序列化为使用给定资源名称的资源包。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="resourceName">
        <paramref name="value" /> 将被序列化到的资源包的名称。</param>
      <param name="value">要序列化的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>将给定对象序列化为使用给定资源名称的资源包。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="resourceName">
        <paramref name="value" /> 将被序列化到的资源包的名称。</param>
      <param name="value">要序列化的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将给定对象序列化为表达式。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。 可以为 <see langword="null" />。</param>
      <returns>如果 <paramref name="value" /> 可以序列化，则为 <see cref="T:System.CodeDom.CodeExpression" /> 对象；否则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将给定对象序列化为表达式。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <returns>将 <paramref name="value" /> 作为序列化的表达式包含在内的 <see cref="T:System.CodeDom.CodeExpression" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>将给定对象序列化为适合于固定区域性的表达式。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <param name="ensureInvariant">要序列化为固定区域性，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>将 <paramref name="value" /> 作为序列化的表达式包含在内的 <see cref="T:System.CodeDom.CodeExpression" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary>将一个对象与表达式相关联。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <param name="expression">要与 <paramref name="value" /> 相关联的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="expression" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary>将对象与表达式关联，并选择指定预设表达式。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <param name="expression">要与 <paramref name="value" /> 相关联的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="isPreset">要指定预设表达式，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary>当行号信息可用于序列化错误时引发的异常。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary>使用指定的异常和行信息初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类的新实例。</summary>
      <param name="ex">要引发的异常。</param>
      <param name="linePragma">指示异常发生位置的 <see cref="T:System.CodeDom.CodeLinePragma" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类的新实例。</summary>
      <param name="ex">要引发的异常。</param>
      <param name="manager">要从中提取上下文的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary>使用指定的消息和行信息初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类的新实例。</summary>
      <param name="message">描述异常的消息。</param>
      <param name="linePragma">指示异常发生位置的 <see cref="T:System.CodeDom.CodeLinePragma" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类的新实例。</summary>
      <param name="message">描述异常的消息。</param>
      <param name="manager">要从中提取上下文的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>设置带有参数名和附加异常信息的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info">存储正用于序列化或反序列化正由 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 序列化或反序列化的对象的数据。</param>
      <param name="context">描述生成该异常的流的源和目标，以及用于保留该上下文和附加的由调用方定义的上下文的序列化方法。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary>获取或设置与此异常关联的错误的行信息。</summary>
      <returns>指示该错误的行信息的 <see cref="T:System.CodeDom.CodeLinePragma" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary>序列化集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary>验证 <paramref name="method" /> 提供的序列化支持。</summary>
      <param name="method">要检查其序列化特性的 <see cref="T:System.Reflection.MethodInfo" />。</param>
      <returns>如果 <paramref name="method" /> 支持序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将给定集合序列化为 CodeDOM 对象。</summary>
      <param name="manager">在序列化过程中要使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <returns>表示 <paramref name="value" /> 的 CodeDOM 对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>序列化给定集合。</summary>
      <param name="manager">要在序列化期间使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="targetExpression">引用该集合的 <see cref="T:System.CodeDom.CodeExpression" /></param>
      <param name="targetType">集合的 <see cref="T:System.Type" />。</param>
      <param name="originalCollection">要序列化的集合。</param>
      <param name="valuesToSerialize">要序列化的值。</param>
      <returns>如果序列化过程成功，则为已序列化的集合；否则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="targetType" />、<paramref name="originalCollection" /> 或 <paramref name="valuesToSerialize" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary>提供 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 接口的实现。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary>使用给定的服务提供程序初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 类的新实例。</summary>
      <param name="provider">一个 <see cref="T:System.IServiceProvider" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary>获取或设置该序列化管理器的容器。</summary>
      <returns>序列化管理器将向其添加组件的 <see cref="T:System.ComponentModel.IContainer" />。</returns>
      <exception cref="T:System.InvalidOperationException">序列化管理器中有一个活动的序列化会话。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>创建类型的实例。</summary>
      <param name="type">要创建的实例的类型。</param>
      <param name="arguments">类型的构造函数的参数。 这可以为 <see langword="null" /> 或空集合，以调用无参数构造函数。</param>
      <param name="name">要为对象提供的名称。 如果为 <see langword="null" />，将不会为对象提供名称，除非将该对象添加到某个容器并且该容器为该对象提供名称。</param>
      <param name="addToContainer">如果要在对象实现 <see cref="T:System.ComponentModel.IComponent" /> 时向容器中添加对象，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>由 <paramref name="type" /> 指定的类型的新实例。</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="type" /> 不具有采用 <paramref name="arguments" /> 中包含的参数的构造函数。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary>创建新序列化会话。</summary>
      <returns>表示新序列化会话的 <see cref="T:System.IDisposable" />。</returns>
      <exception cref="T:System.InvalidOperationException">序列化管理器已经在一个会话中。 这一版的 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 不支持同时会话。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary>获取在序列化或反序列化期间发生的错误的列表。</summary>
      <returns>在序列化或反序列化期间发生的错误的列表。</returns>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary>获取与指定类型名称对应的类型。</summary>
      <param name="typeName">要获取的类型的名称。</param>
      <returns>指定的类型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>获取给定对象类型的序列化程序。</summary>
      <param name="objectType">要检索其序列化程序的对象的类型。</param>
      <param name="serializerType">要检索的序列化程序的类型。</param>
      <returns>
        <paramref name="objectType" /> 的序列化程序，或者，如果找不到序列化程序则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectType" /> 或 <paramref name="serializerType" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary>获取请求的服务。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>所请求的服务，或者在无法解析服务的情况下为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary>获取请求的类型。</summary>
      <param name="typeName">要检索的类型的名称。</param>
      <returns>请求的类型，或者在无法解析类型的情况下为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary>获取或设置一个值，指示 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 方法是否应该检查容器中是否存在给定名称。</summary>
      <returns>如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 将传递给定组件名称，则为 <see langword="true" />。如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 将检查容器中是否存在给定名称，则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
      <exception cref="T:System.InvalidOperationException">该属性已在序列化会话中发生更改。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary>获取应该用于为序列化管理器的 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 属性提供属性的对象。</summary>
      <returns>应该用于为序列化管理器的 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 属性提供属性的对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary>获取或设置一个值，该值指示 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 是否始终创建类型的新实例。</summary>
      <returns>如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 将返回现有实例，则为 <see langword="true" />。如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 将创建类型的新实例，则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">序列化管理器中有一个活动的序列化会话。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary>在创建会话时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary>在释放会话时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>向序列化管理器添加自定义的序列化提供程序。</summary>
      <param name="provider">要添加的序列化提供程序。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary>获取该序列化会话的上下文堆栈。</summary>
      <returns>存储数据的 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />。</returns>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>实现 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 方法。</summary>
      <param name="type">要创建的数据类型。</param>
      <param name="arguments">要传递到此类型的构造函数的参数。</param>
      <param name="name">对象的名称。 此名称可用于以后通过 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /> 访问该对象。 如果传递了 <see langword="null" />，则仍将创建该对象，但无法按名称访问它。</param>
      <param name="addToContainer">要将该对象添加到设计容器中，则为 <see langword="true" />。 该对象必须实现 <see cref="T:System.ComponentModel.IComponent" /> 才能使此功能生效。</param>
      <returns>新创建的对象实例。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary>检索具有指定名称的创建对象的实例。</summary>
      <param name="name">要检索的对象名。</param>
      <returns>具有给定名称的对象的实例，如果按该名称无法找到任何对象则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary>为指定的对象检索名称。</summary>
      <param name="value">要检索其名称的对象。</param>
      <returns>对象的名称，如果对象是未命名的，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary>为指定对象类型获取所请求类型的序列化程序。</summary>
      <param name="objectType">要为其获取序列化程序的对象类型。</param>
      <param name="serializerType">要检索的序列化程序的类型。</param>
      <returns>请求的序列化程序的实例，如果不能找到任何适当的序列化程序，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary>获取指定名称的类型。</summary>
      <param name="typeName">要加载的类型的完全限定名。</param>
      <returns>该类型的实例，如果无法加载该类型，则为 <see langword="null" />。</returns>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary>实现 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 属性。</summary>
      <returns>包含要进行序列化的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>移除以前添加的序列化提供程序。</summary>
      <param name="provider">要移除的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary>用于报告序列化中可以恢复的错误。</summary>
      <param name="errorInformation">包含错误信息的对象，其类型通常为 <see cref="T:System.String" /> 或 <see cref="T:System.Exception" />。</param>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary>当 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> 无法在序列化管理器的名称表中找到指定名称时发生。</summary>
      <exception cref="T:System.InvalidOperationException">序列化管理器没有活动的序列化会话。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary>在序列化完成时发生。</summary>
      <exception cref="T:System.InvalidOperationException">序列化管理器没有活动的序列化会话。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary>设置指定对象的名称。</summary>
      <param name="instance">要设置名称的对象。</param>
      <param name="name">用作对象名称的 <see cref="T:System.String" />。</param>
      <exception cref="T:System.ArgumentNullException">两个参数之一或两个参数均为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">实例指定的对象已经有名称，或者 <paramref name="name" /> 已被另一个命名对象使用。</exception>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> 方法。</summary>
      <param name="serviceType">一个对象，它指定要获取的服务对象的类型。</param>
      <returns>
        <paramref name="serviceType" /> 类型的服务对象。
或
如果没有 <paramref name="serviceType" /> 类型的服务对象，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary>获取或设置一个值，该值指示 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 方法是否验证匹配的名称表示同一类型。</summary>
      <returns>如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 验证类型，则为 <see langword="true" />；否则，如果不验证类型，则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
      <exception cref="T:System.InvalidOperationException">序列化管理器中有一个活动的序列化会话。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary>提供一种在序列化程序之间传递上下文状态的方法。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary>使用给定的表达式和所有者初始化 <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> 类的新实例。</summary>
      <param name="expression">给定代码表达式。</param>
      <param name="expressionType">给定代码表达式的类型。</param>
      <param name="owner">给定代码表达式的所有者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />、<paramref name="expressionType" /> 或 <paramref name="owner" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary>使用当前值初始化 <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> 类的新实例。</summary>
      <param name="expression">给定代码表达式。</param>
      <param name="expressionType">给定代码表达式的类型。</param>
      <param name="owner">给定代码表达式的所有者。</param>
      <param name="presetValue">给定代码表达式的预设值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />、<paramref name="expressionType" /> 或 <paramref name="owner" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary>获取此上下文表示的表达式。</summary>
      <returns>此上下文表示的表达式。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary>获取该表达式的 <see cref="T:System.Type" />。</summary>
      <returns>该表达式的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary>获取拥有此表达式的对象。</summary>
      <returns>拥有此表达式的对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary>获取表达式的预设值。</summary>
      <returns>此表达式的预设值，如果没有赋值，则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary>提供用于序列化对象图内的反射基元的基类。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary>将给定值的给定成员说明符序列化为一个语句集合。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="value">成员被绑定到的对象。</param>
      <param name="descriptor">要序列化的成员的说明符。</param>
      <param name="statements">
        <paramref name="descriptor" /> 会被序列化为 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>确定给定成员是否应序列化。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="value">成员被绑定到的对象。</param>
      <param name="descriptor">要序列化的成员的说明符。</param>
      <returns>如果由 <paramref name="descriptor" /> 描述的成员应序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary>保存一个由 <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> 提供的语句表。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary>确定表中是否包含给定的语句所有者。</summary>
      <param name="statementOwner">语句集合的所有者。</param>
      <returns>如果 <paramref name="statementOwner" /> 在表中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary>返回 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary>获取给定所有者的语句集合。</summary>
      <param name="statementOwner">语句集合的所有者。</param>
      <returns>
        <paramref name="statementOwner" /> 的语句集合，如果 <paramref name="statementOwner" /> 没在表中，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary>用语句所有者集合填充语句表。</summary>
      <param name="statementOwners">要添加到表的语句所有者集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary>用语句所有者填充语句表。</summary>
      <param name="owner">要添加到表的语句所有者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 可添加根上下文以提供根对象的定义。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.RootContext" /> 类的新实例。</summary>
      <param name="expression">表示对象图中的根对象的表达式。</param>
      <param name="value">对象图的根对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary>获取表示对象图中的根对象的表达式。</summary>
      <returns>表示对象图中的根对象的 <see cref="T:System.CodeDom.CodeExpression" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary>获取对象图的根对象。</summary>
      <returns>对象图的根对象。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary>指定序列化程序应处理默认值。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>使用到特定成员的绑定选项初始化 <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> 类的新实例。</summary>
      <param name="member">此上下文绑定到的成员。 可以为 <see langword="null" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary>获取此上下文绑定到的成员。</summary>
      <returns>此上下文绑定到的成员，或者如果上下文绑定到某个对象的所有成员，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary>获取一个值，指示在此上下文中是否应序列化给定成员。</summary>
      <param name="member">要检查序列化的成员。</param>
      <returns>如果在此上下文中应序列化给定成员，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary>提供可将语句序列化到的位置。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> 类的新实例。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary>获取由语句上下文提供的语句集合。</summary>
      <returns>包含由语句上下文提供的语句的 <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary>将对象序列化为新类型。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>将给定类型声明反序列化。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="declaration">用于序列化的类型声明。</param>
      <returns>根对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="typeDecl" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary>返回存储用于序列化成员的语句的方法。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="declaration">用于序列化的类型声明。</param>
      <param name="value">用于序列化的值。</param>
      <returns>用于为给定成员发出所有初始化代码的方法。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="typeDecl" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>返回要在反序列化期间解释的方法数组。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="declaration">用于序列化的类型声明。</param>
      <returns>要在反序列化期间解释的方法的 <see cref="T:System.CodeDom.CodeMemberMethod" /> 数组。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="typeDecl" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary>通过创建定义根的新类型声明将对象根序列化。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="root">要序列化的对象。</param>
      <param name="members">可选的成员集合。 可以为 <see langword="null" /> 或空。</param>
      <returns>定义根对象的 <see cref="T:System.CodeDom.CodeTypeDeclaration" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="root" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary>指定一般的设计时撤消/重复功能。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 类的新实例。</summary>
      <param name="provider">父级服务提供程序。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">找不到所需的服务。 有关所需的服务，请参见 <see cref="T:System.ComponentModel.Design.UndoEngine" />。 如果已移除此服务，请确保提供了替代服务。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>将 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 添加到撤消堆栈中。</summary>
      <param name="unit">要添加的撤消单元</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary>创建一个新的 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</summary>
      <param name="name">要创建的单元的名称。</param>
      <param name="primary">
        <see langword="true" /> 表示创建一系列嵌套单元的第一个单元；<see langword="false" /> 表示创建后续嵌套单元。</param>
      <returns>一个新的具有指定名称的 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>放弃 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</summary>
      <param name="unit">要放弃的单元。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary>启用或禁用 <see cref="T:System.ComponentModel.Design.UndoEngine" />。</summary>
      <returns>如果启用 <see cref="T:System.ComponentModel.Design.UndoEngine" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary>获取请求的服务。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>请求的服务（如果找到）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">需要 <paramref name="serviceType" />，但未找到。 如果已移除此服务，请确保提供了替代服务。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary>获取所请求的服务。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>所请求的服务，如果找不到所请求的服务，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary>紧挨在执行撤消操作之前发生。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary>指示撤消操作是否正在进行。</summary>
      <returns>如果撤消操作正在进行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary>在执行撤消操作之后立即发生。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary>封装用户可以撤消的工作单元。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 类的新实例。</summary>
      <param name="engine">拥有此撤消单元的撤消引擎。</param>
      <param name="name">此撤消单元的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="engine" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary>接收来自撤消引擎的调用以关闭此单元。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary>获取所请求服务的实例。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>给定服务的实例；或者如果无法解析服务，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary>获取一个值，该值指示 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 是否不包含事件。</summary>
      <returns>如果 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 不包含事件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary>获取 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 的名称。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 的名称。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary>返回 <see cref="T:System.String" />，它表示单元的当前名称。</summary>
      <returns>
        <see cref="T:System.String" />，表示单元的当前名称。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary>执行撤消或重复操作。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary>由 <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> 调用以执行撤消操作。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary>获取父 <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />。</summary>
      <returns>附加此 <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> 的 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxItemProvider">
      <summary>公开工具箱项的集合。</summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxItemProvider.Items">
      <summary>获取 <see cref="T:System.Drawing.Design.ToolboxItem" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 对象的集合。</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary>提供在开发环境下管理和查询工具箱的方法和属性。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary>为指定的数据格式添加新的工具箱项创建者。</summary>
      <param name="creator">
        <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />，它可在调用工具箱项时创建组件。</param>
      <param name="format">创建者处理的数据格式。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>为指定的数据格式和设计器宿主添加新的工具箱项创建者。</summary>
      <param name="creator">
        <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />，它可在调用工具箱项时创建组件。</param>
      <param name="format">创建者处理的数据格式。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />，表示与创建者相关联的设计器宿主。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary>将指定的与项目链接的工具箱项添加到工具箱。</summary>
      <param name="toolboxItem">要添加到工具箱中的已链接 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="host">当前设计文档的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>将指定的与项目链接的工具箱项添加到指定类别的工具箱。</summary>
      <param name="toolboxItem">要添加到工具箱中的已链接 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="category">要添加给工具箱项的工具箱项类别。</param>
      <param name="host">当前设计文档的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>将指定的工具箱项添加到工具箱中。</summary>
      <param name="toolboxItem">要添加到工具箱中的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>将指定的工具箱项添加到指定类别的工具箱。</summary>
      <param name="toolboxItem">要添加到工具箱中的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="category">要将 <see cref="T:System.Drawing.Design.ToolboxItem" /> 添加到其中的工具箱项类别。</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary>获取当前工具箱中所有工具类别的名称。</summary>
      <returns>包含工具类别的 <see cref="T:System.Drawing.Design.CategoryNameCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary>从以序列化形式表示工具箱项的指定对象获取工具箱项。</summary>
      <param name="serializedObject">包含要检索的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的对象。</param>
      <returns>从序列化对象创建的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>使用指定的设计器宿主，从以序列化形式表示工具箱项的指定对象获取工具箱项。</summary>
      <param name="serializedObject">包含要检索的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的对象。</param>
      <param name="host">要与此 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 关联的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>从反序列化创建的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary>获取当前选定的工具箱项。</summary>
      <returns>当前选定的 <see cref="T:System.Drawing.Design.ToolboxItem" />；如果未选定工具箱项，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary>如果当前选定的工具箱项对于所有设计器可用，或者它支持指定的设计器，则获取它。</summary>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />，选定工具必须与它关联才能返回。</param>
      <returns>当前选定的 <see cref="T:System.Drawing.Design.ToolboxItem" />；如果当前未选定工具箱项，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary>从工具箱获取工具箱项的整个集合。</summary>
      <returns>包含当前工具箱项的 <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary>从工具箱获取与指定的设计器宿主关联的工具箱项的集合。</summary>
      <param name="host">与要检索的工具箱项关联的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns>包含与指定设计器宿主关联的当前工具箱项的 <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary>从与指定类别相匹配的工具箱获取工具箱项的集合。</summary>
      <param name="category">要从其中检索所有工具箱项的工具箱项类别。</param>
      <returns>包含与指定类别关联的当前工具箱项的 <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>从工具箱获取与指定的设计器宿主和类别关联的工具箱项的集合。</summary>
      <param name="category">要从其中检索工具箱项的工具箱项类别。</param>
      <param name="host">与要检索的工具箱项关联的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns>包含与指定的类别和设计器宿主关联的当前工具箱项的 <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary>获取一个值，该值指示表示一个序列化工具箱项的指定对象是否与指定特性相匹配。</summary>
      <param name="serializedObject">包含要检索的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的对象。</param>
      <param name="filterAttributes">
        <see cref="T:System.Collections.ICollection" />，它包含要为其测试序列化对象的特性。</param>
      <returns>如果该对象与指定特性相匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>获取一个值，该值指示指定的设计器宿主是否可使用表示序列化工具箱项的指定对象。</summary>
      <param name="serializedObject">包含要检索的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的对象。</param>
      <param name="host">要测试其是否支持 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>如果指定对象与指定的设计器宿主兼容，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary>获取一个值，该值指示指定对象是否是序列化工具箱项。</summary>
      <param name="serializedObject">要检查的对象。</param>
      <returns>如果该对象包含工具箱项对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>获取一个值，指示在使用指定的设计器宿主时，指定对象是否是序列化工具箱项。</summary>
      <param name="serializedObject">要检查的对象。</param>
      <param name="host">正在发出此请求的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns>如果该对象包含工具箱项对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary>刷新工具箱项的状态。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary>移除以前添加的指定数据格式的工具箱项创建者。</summary>
      <param name="format">要移除的创建者的数据格式。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>移除以前添加的与指定数据格式和指定设计器宿主相关联的工具箱创建者。</summary>
      <param name="format">要移除的创建者的数据格式。</param>
      <param name="host">与要移除的创建者关联的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>从工具箱中移除指定的工具箱项。</summary>
      <param name="toolboxItem">要从工具箱中移除的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>从工具箱中移除指定的工具箱项。</summary>
      <param name="toolboxItem">要从工具箱中移除的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="category">要从其中移除 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的工具箱项的类别。</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary>获取或设置当前从工具箱中选定的工具类别的名称。</summary>
      <returns>当前选定类别的名称。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary>通知工具箱服务，选定工具已被使用。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>获取表示指定的工具箱项的可序列化对象。</summary>
      <param name="toolboxItem">要序列化的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>表示指定 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的对象。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary>将当前应用程序的光标设置为表示当前选定工具的光标。</summary>
      <returns>如果光标由当前选定的工具设置，则为 <see langword="true" />；如果未选定任何工具且光标被设置为标准的 Windows 光标，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>选择指定的工具箱项。</summary>
      <param name="toolboxItem">要选择的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary>定义一个接口，此接口用于设置当前选定的工具箱项以及指示设计器是否支持特定的工具箱项。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>获取一个值，该值指示当前设计器是否支持指定工具。</summary>
      <param name="tool">要进行工具箱支持测试的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>如果工具箱支持该工具而且该工具可启用，则为 <see langword="true" />；如果该文档设计器不知道如何使用该工具，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>选择指定的工具。</summary>
      <param name="tool">要选择的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary>为向工具箱添加组件时发生的 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary>初始化 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> 类的新实例。</summary>
      <param name="components">要包括在工具箱中的组件。</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary>获取或设置包含要添加到工具箱中的组件的数组。</summary>
      <returns>类型 <see cref="T:System.ComponentModel.IComponent" /> 的数组，指示要添加到工具箱中的组件。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary>表示 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> 事件的处理方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">为事件提供数据的 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary>为向工具箱添加组件时发生的 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>初始化 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> 类的新实例。</summary>
      <param name="host">发出该请求的设计器宿主。</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary>获取或设置发出创建工具箱组件请求的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 的实例。</summary>
      <returns>发出创建工具箱组件请求的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />，或者如果未向工具箱项提供设计器宿主，则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary>表示 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> 事件的处理方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">为事件提供数据的 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary>提供工具箱项的基实现。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Design.ToolboxItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Drawing.Design.ToolboxItem" /> 类的新实例，它将创建组件的指定类型。</summary>
      <param name="toolType">工具箱项创建的 <see cref="T:System.ComponentModel.IComponent" /> 的类型。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 已被锁定。</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary>获取或者设置程序集的名称，该程序集中包含工具箱项创建的一个或多个类型。</summary>
      <returns>
        <see cref="T:System.Reflection.AssemblyName" />，它指示包含将创建的一个或多个类型的程序集。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary>获取或设置表示工具箱中的工具箱项的位图。</summary>
      <returns>表示工具箱中该工具箱项的 <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary>如果工具箱项当前被锁定，则引发异常。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 被锁定。</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Company">
      <summary>获取或设置此 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的公司名称。</summary>
      <returns>指定此 <see cref="T:System.String" /> 的公司的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary>组件创建后立即发生。</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary>即将创建组件时发生。</summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.ComponentType">
      <summary>获取此 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的组件类型。</summary>
      <returns>指定此 <see cref="T:System.String" /> 的组件类型的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary>创建工具箱项的配置中指定要创建的组件。</summary>
      <returns>创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary>使用指定的设计器宿主创建工具箱项的配置中指定要创建的组件。</summary>
      <param name="host">创建组件时要使用的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns>创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary>使用指定的设计器宿主和默认值创建工具箱项的配置中指定要创建的组件。</summary>
      <param name="host">创建组件时要使用的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <param name="defaultValues">初始化组件时所用的默认值的属性名称/值对字典。</param>
      <returns>创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>调用工具箱项时创建组件或者组件数组。</summary>
      <param name="host">要承载工具箱项的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns>创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary>调用工具箱项时创建组件数组。</summary>
      <param name="host">创建组件时要使用的设计器宿主。</param>
      <param name="defaultValues">初始化组件时所用的默认值的属性名称/值对字典。</param>
      <returns>创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DependentAssemblies">
      <summary>获取或设置工具箱项的 <see cref="T:System.Reflection.AssemblyName" />。</summary>
      <returns>一个 <see cref="T:System.Reflection.AssemblyName" /> 对象数组。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Description">
      <summary>获取或设置此 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的说明。</summary>
      <returns>指定此 <see cref="T:System.String" /> 的说明的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>从指定的序列化信息对象中加载工具箱项的状态。</summary>
      <param name="info">要从其加载的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">指示流特征的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary>获取或设置此工具箱项的显示名称。</summary>
      <returns>工具箱项的显示名称。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Equals(System.Object)">
      <summary>确定两个 <see cref="T:System.Drawing.Design.ToolboxItem" /> 实例是否相等。</summary>
      <param name="obj">要与当前的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 进行比较的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>如果指定的 <see langword="true" /> 等于当前的 <see cref="T:System.Drawing.Design.ToolboxItem" />，则为 <see cref="T:System.Drawing.Design.ToolboxItem" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary>获取或设置确定工具箱项是否可以用于目标组件的筛选器。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 对象的 <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.FilterPropertyValue(System.String,System.Object)">
      <summary>在返回属性值之前先对其进行筛选。</summary>
      <param name="propertyName">要筛选的属性的名称。</param>
      <param name="value">要根据其对属性进行筛选的值。</param>
      <returns>筛选的属性值。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>当前 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost)">
      <summary>允许访问与工具箱项关联的类型。</summary>
      <param name="host">要查询 <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> 的设计器宿主。</param>
      <returns>与工具箱项关联的类型。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary>创建指定类型的实例（可以使用指定的设计器宿主和程序集名称）。</summary>
      <param name="host">当前文档的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。 它可以是 <see langword="null" />。</param>
      <param name="assemblyName">
        <see cref="T:System.Reflection.AssemblyName" />，它指示包含要加载的类型的程序集。 它可以是 <see langword="null" />。</param>
      <param name="typeName">要为其创建实例的类型的名称。</param>
      <param name="reference">一个值，它指示是否将对包含指定类型的程序集的引用添加到设计器宿主的引用集中。</param>
      <returns>指定类型的实例（如果可以找到的话）。</returns>
      <exception cref="T:System.ArgumentNullException">未指定 <paramref name="typeName" />。</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary>使用将创建的指定类型初始化当前工具箱项。</summary>
      <param name="type">工具箱项创建的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 已被锁定。</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.IsTransient">
      <summary>获取一个值，该值指示工具箱项是否为临时工具箱项。</summary>
      <returns>当关闭提供工具箱的应用程序时，如果此工具箱项不应存储在任何工具箱数据库中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary>锁定工具箱项，防止更改其属性。</summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary>获取一个值，该值指示 <see cref="T:System.Drawing.Design.ToolboxItem" /> 当前是否处于锁定状态。</summary>
      <returns>如果工具箱项是锁定的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary>引发 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> 事件。</summary>
      <param name="args">为事件提供数据的 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary>引发 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> 事件。</summary>
      <param name="args">为事件提供数据的 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />。</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.OriginalBitmap">
      <summary>获取或设置将在工具箱中用于此项的原始位图。</summary>
      <returns>表示工具箱中该工具箱项的 <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Properties">
      <summary>获取属性的字典。</summary>
      <returns>名称/值对字典，其中名称为属性名称，值为属性值。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>将此工具箱项的状态保存到指定的序列化信息对象中。</summary>
      <param name="info">要保存到的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">指示流特征的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary>返回一个 <see cref="T:System.String" />，表示当前的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</summary>
      <returns>一个 <see cref="T:System.String" />，表示当前的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary>获取或设置 <see cref="T:System.ComponentModel.IComponent" /> 类型的完全限定名，调用工具箱项将由工具箱创建该名称。</summary>
      <returns>此工具箱项创建的组件类型的完全限定类型名。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyType(System.String,System.Object,System.Type,System.Boolean)">
      <summary>验证对象是否属于给定类型。</summary>
      <param name="propertyName">要验证的属性的名称。</param>
      <param name="value">要根据其进行验证的可选值。</param>
      <param name="expectedType">属性的期望类型。</param>
      <param name="allowNull">如果允许为 <see langword="true" />，则为 <see langword="null" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 <see langword="null" /> 且 <paramref name="allowNull" /> 为 <see langword="false" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是 <paramref name="expectedType" /> 所指定的类型。</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyValue(System.String,System.Object)">
      <summary>在将属性分配给属性字典前先对其进行验证。</summary>
      <param name="propertyName">要验证的属性的名称。</param>
      <param name="value">要根据其进行验证的值。</param>
      <returns>用于执行验证的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 <see langword="null" /> 且 <paramref name="propertyName" /> 为“IsTransient”。</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Version">
      <summary>获取此 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的版本。</summary>
      <returns>指定此 <see cref="T:System.String" /> 的版本的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary>表示工具箱项的集合。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary>使用指定的工具箱项数组初始化 <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> 类的新实例。</summary>
      <param name="value">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 类型的数组，其中包含用以填充集合的工具箱项。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary>使用指定的集合初始化 <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> 类的新实例。</summary>
      <param name="value">用以填充新集合的 <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary>指示集合中是否包含指定的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</summary>
      <param name="value">要在集合中搜索的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>当集合包含指定的对象时为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary>将集合复制到指定的数组，从指定的目标索引开始。</summary>
      <param name="array">要复制到的数组。</param>
      <param name="index">起始复制位置的索引。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary>获取指定 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的索引（如果它存在于集合中）。</summary>
      <param name="value">要在集合中获取其索引的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>指定的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的索引。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary>获取位于指定索引处的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</summary>
      <param name="index">要获取或设置的对象的索引。</param>
      <returns>集合中每个有效索引处的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary>提供可以创建 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的一种回调机制。</summary>
      <param name="serializedObject">包含将为其创建 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的数据的对象。</param>
      <param name="format">将为其创建 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的剪贴板数据格式名称。</param>
      <returns>由 <paramref name="serializedObject" /> 指定的反序列化 <see cref="T:System.Drawing.Design.ToolboxItem" /> 对象。</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UCOMITypeLib">
      <summary>请改用 <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />。</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>检索库的文档字符串、完整的帮助文件名和路径以及帮助文件中的库帮助主题的上下文标识符。</summary>
      <param name="index">要返回其文档的类型说明的索引。</param>
      <param name="strName">返回包含指定项名称的字符串。</param>
      <param name="strDocString">返回包含指定项文档字符串的字符串。</param>
      <param name="dwHelpContext">返回与指定项关联的帮助上下文标识符。</param>
      <param name="strHelpFile">返回包含帮助文件的完全限定名的字符串。</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)">
      <summary>检索包含库的特性的结构。</summary>
      <param name="ppTLibAttr">成功返回时包含库的特性的结构。</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoCount">
      <summary>返回类型库中的类型说明的数量。</summary>
      <returns>类型库中的类型说明的数量。</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary>检索类型说明的类型。</summary>
      <param name="index">类型库中类型说明的索引</param>
      <param name="pTKind">对类型说明的 <see langword="TYPEKIND" /> 枚举的引用。</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.IsName(System.String,System.Int32)">
      <summary>指示传入的字符串是否包含库中描述的类型或成员的名称。</summary>
      <param name="szNameBuf">要测试的字符串。</param>
      <param name="lHashVal">
        <paramref name="szNameBuf" /> 的哈希值。</param>
      <returns>如果在类型库中找到 <paramref name="szNameBuf" /> 则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary>释放最初从 <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> 获取的 <see cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)" />。</summary>
      <param name="pTLibAttr">要释放的 <see langword="TLIBATTR" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary>导入 ActiveX 控件并生成可由设计器访问的包装。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.AxImporter" /> 类的新实例。</summary>
      <param name="options">
        <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />，指示要使用的 ActiveX 控件导入程序的选项。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary>提供方法来解析对 ActiveX 库、COM 类型库或程序集或托管程序集的引用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>解析对包含 ActiveX 控件的指定类型库的引用。</summary>
      <param name="typeLib">要解析对其引用的 <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />。</param>
      <returns>程序集的完全限定路径。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary>解析对包含 COM 组件的指定程序集的引用。</summary>
      <param name="name">
        <see cref="T:System.Reflection.AssemblyName" />，指示要解析对其的引用的程序集。</param>
      <returns>程序集的完全限定路径。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>解析对包含 COM 组件的指定类型库的引用。</summary>
      <param name="typeLib">要解析对其引用的 <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />。</param>
      <returns>程序集的完全限定路径。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary>解析对指定程序集的引用。</summary>
      <param name="assemName">要解析对其的引用的程序集名称。</param>
      <returns>程序集的完全限定路径。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary>表示 <see cref="T:System.Windows.Forms.Design.AxImporter" /> 的一组选项。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> 类的新实例。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary>指定所生成程序集是否具有强名称，以及以后是否将对其签名。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary>指定是否应为类型库包装生成源。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary>指定是否使用从命令行代替依靠已注册版本的唯一输入。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary>为生成的程序集指定包含强名称密钥容器的文件的路径。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary>为生成的程序集指定包含强名称密钥的文件的路径。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary>指定用于所生成程序集的强名称。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary>指定是否以 Microsoft Build Engine (MSBuild) 格式输出错误。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary>指示 ActiveX 导入程序工具徽标在导入控件时是否显示。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary>指定将在其中创建所生成程序集的目录的路径。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary>指定生成 ActiveX 控件包装要使用的文件名。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary>指定生成程序集时是否覆盖现有文件。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary>指定用于为所生成程序集签名的公钥。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary>指定 <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" />，在生成程序集时用于解析类型和引用。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary>指定是否以静态模式编译，这种模式在编译时生成的显示信息较少。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary>指定是否以详细模式编译，这种模式在编译时生成的显示信息较多。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary>管理与用户界面相关的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary>获取或设置与 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</summary>
      <returns>与 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 是否能够启用。</summary>
      <returns>如果启用了 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 集合。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary>强制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 刷新其装饰器窗口。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary>强制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 在给定的 <see cref="T:System.Drawing.Rectangle" /> 内刷新其装饰器窗口。</summary>
      <param name="rectangle">要使之无效的区域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary>强制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 在给定的 <see cref="T:System.Drawing.Region" /> 内刷新其装饰器窗口。</summary>
      <param name="region">要使之无效的 <see cref="T:System.Drawing.Region" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary>表示由 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 管理的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 对象。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>用给定的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 类的新实例。</summary>
      <param name="callParentBehavior">如果应该调用父行为（如果存在），则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="behaviorService">要使用的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callParentBehavior" /> 为 <see langword="true" /> 且 <paramref name="behaviorService" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary>获取应为此行为显示的光标。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.Cursor" /> 表示应为此行为显示的光标。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary>获取一个值，该值指示是否应该禁用 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 对象。</summary>
      <returns>
        <see langword="true" />如果设计<see cref="T:System.ComponentModel.Design.MenuCommand" />器接收的所有对象都应在此<see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />处于活动状态时将状态设置为<c>Enabled = false</c> ， <see langword="false" />则为; 否则为。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>截获命令。</summary>
      <param name="commandId">一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 对象。</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.MenuCommand" />。 默认情况下，<see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> 返回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>允许自定义的拖放行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象，拖放行为对其调用。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>允许自定义的拖入行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，拖入行为对其调用。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>允许自定义的拖离行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，拖离行为对其调用。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>允许自定义的拖过行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，拖过行为对其调用。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>允许自定义的拖放反馈行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，拖放行为对其调用。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>在丢失鼠标捕获时由装饰器窗口调用。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，拖放行为对其调用。</param>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>在任何双击消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">一个 <see cref="T:System.Windows.Forms.MouseButtons" /> 值，指示单击了哪个按钮。</param>
      <param name="mouseLoc">发生单击的位置。</param>
      <returns>如果消息已处理，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>在任何鼠标按下消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">一个 <see cref="T:System.Windows.Forms.MouseButtons" /> 值，指示单击了哪个按钮。</param>
      <param name="mouseLoc">发生单击的位置。</param>
      <returns>如果消息已处理，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>在任何鼠标输入消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>如果消息已处理，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary>在任何鼠标悬停消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="mouseLoc">发生悬停的位置。</param>
      <returns>如果消息已处理，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>在任何鼠标离开消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>如果消息已处理，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>在任何鼠标移动消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">一个 <see cref="T:System.Windows.Forms.MouseButtons" /> 值，指示单击了哪个按钮。</param>
      <param name="mouseLoc">发生移动的位置。</param>
      <returns>如果消息已处理，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary>在任何鼠标弹起消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">一个 <see cref="T:System.Windows.Forms.MouseButtons" /> 值，指示单击了哪个按钮。</param>
      <returns>如果消息已处理，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>将此拖放事件从装饰器窗口发送到相应的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 或经过命中测试的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary>提供有关 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> 和 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> 事件的数据。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> 类的新实例。</summary>
      <param name="dragComponents">当前正被拖动的 <see cref="T:System.Collections.ICollection" /> 对象的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary>获取当前正被拖动的 <see cref="T:System.ComponentModel.IComponent" /> 对象的列表。</summary>
      <returns>当前正被拖动的 <see cref="T:System.Collections.ICollection" /> 对象的 <see cref="T:System.ComponentModel.IComponent" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary>表示将处理 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> 的 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> 和 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 事件的方法。 此类不能被继承。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary>在设计器中管理用户界面。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <returns>修饰工具的集合。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary>获取修饰器窗口的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <returns>装饰器窗口的 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary>将装饰器窗口中的 <see cref="T:System.Drawing.Point" /> 转换为屏幕坐标。</summary>
      <param name="p">要转换的 <see cref="T:System.Drawing.Point" /> 值。</param>
      <returns>屏幕坐标中已转换的 <see cref="T:System.Drawing.Point" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary>获取装饰器窗口在屏幕坐标中的位置。</summary>
      <returns>在屏幕坐标中相对于装饰器窗口的左上角的位置。</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary>当 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 启动拖放操作时发生。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary>返回 <see cref="T:System.Drawing.Rectangle" /> 的边界 <see cref="T:System.Windows.Forms.Control" />。</summary>
      <param name="c">要平移的 <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns>已转换为装饰器窗口坐标的 <see cref="T:System.Drawing.Rectangle" /> 的边界 <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary>返回转换为装饰器窗口坐标的 <see cref="T:System.Windows.Forms.Control" /> 的位置。</summary>
      <param name="c">要平移的 <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns>一个 <see cref="T:System.Drawing.Point" /> 值，该值指示 <paramref name="c" /> 在装饰器窗口坐标中的位置。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary>获取位于行为堆栈顶部的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />，但不移除它。</summary>
      <returns>位于行为堆栈顶部的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 使用的所有资源。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary>当 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 完成拖动操作时发生。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>返回行为堆栈中紧接在给定 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 之后的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</summary>
      <param name="behavior">位于要返回的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 之前的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <returns>行为堆栈中紧接在 <paramref name="behavior" /> 之后的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />，或者，如果后面不存在行为，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary>使 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口无效。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary>在装饰器窗口中，使 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的指定区域无效。</summary>
      <param name="rect">要使之无效的矩形区域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary>在装饰器窗口中，使 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的指定区域无效。</summary>
      <param name="r">要使之无效的区域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary>将调整柄的坐标系统中的点转换为装饰器窗口坐标。</summary>
      <param name="handle">装饰器窗口的调整柄。</param>
      <param name="pt">调整柄坐标系统中的 <see cref="T:System.Drawing.Point" />。</param>
      <returns>装饰器窗口坐标中的 <see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>移除并返回位于堆栈顶部的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</summary>
      <param name="behavior">要从堆栈移除的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <returns>从堆栈移除的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 堆栈为空。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 压到行为堆栈上。</summary>
      <param name="behavior">要压入的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 压到该行为堆栈上，并为该行为分配鼠标捕获。</summary>
      <param name="behavior">要压入的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary>将屏幕坐标中的点转换为 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口坐标。</summary>
      <param name="p">要转换的 <see cref="T:System.Drawing.Point" /> 值。</param>
      <returns>装饰器窗口坐标中已转换的 <see cref="T:System.Drawing.Point" /> 值。</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary>在应刷新当前所选内容时发生。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary>同步所有选择标志符号。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary>在强类型集合中存储 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 对象。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>使用给定的数组初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 类的新实例。</summary>
      <param name="value">用于填充集合的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 类型的数组。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>使用给定的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 引用初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 类的新实例。</summary>
      <param name="behaviorService">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 引用。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>从现有的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 类的新实例。</summary>
      <param name="value">要用其填充该集合的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>向该 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 添加带有指定值的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <param name="value">要添加到集合末尾的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns>新元素位置处插入的索引。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>将数组的元素复制到 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的末尾。</summary>
      <param name="value">要复制到集合末尾的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 类型的数组</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>将另一个 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的内容添加到集合末尾。</summary>
      <param name="value">要添加到集合末尾的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 是否包含指定的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</summary>
      <param name="value">要查找的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns>如果 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 包含在集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 值复制到一个一维 <see cref="T:System.Array" /> 中的指定索引位置。</summary>
      <param name="array">一维 <see cref="T:System.Array" />，是从 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 复制的值的目标。</param>
      <param name="index">
        <paramref name="array" /> 中复制开始处的索引。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的。
或
<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 中的元素数目大于 <paramref name="index" /> 和 <paramref name="array" /> 结尾之间的可用空间。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> 小于 <paramref name="array" /> 的下限。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary>返回可循环访问 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 实例的枚举器。</summary>
      <returns>用于 <see cref="T:System.Collections.IEnumerator" /> 实例的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>返回 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 中的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的索引。</summary>
      <param name="value">要查找的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns>如果找到 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 中 <paramref name="value" /> 的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的索引则返回该索引；否则返回 -1。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 插入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 中的指定索引位置。</summary>
      <param name="index">应插入 <paramref name="value" /> 处的从零开始的索引。</param>
      <param name="value">要插入的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的元素。</summary>
      <param name="index">元素的索引（索引从零开始）。</param>
      <returns>由 <paramref name="index" /> 指定的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>从 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 中移除特定的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <param name="value">要从 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 移除的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
      <exception cref="T:System.ArgumentException">集合中找不到 <paramref name="value" />。</exception>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary>支持对 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 进行迭代。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" /> 类的新实例。</summary>
      <param name="mappings">要为其创建枚举数的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 中的当前元素。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 中的当前元素。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary>使枚举数前进到 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的下一个元素。</summary>
      <returns>如果枚举数成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数越过集合的结尾，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary>将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IEnumerator.Current" /> 属性。</summary>
      <returns>集合中的当前 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 与其组件关联。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> 类的新实例。</summary>
      <param name="relatedComponent">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联的组件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> 类的新实例。</summary>
      <param name="relatedComponent">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联的组件。</param>
      <param name="behavior">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary>指示对指定点的鼠标单击是否应由 <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> 处理。</summary>
      <param name="p">要进行命中测试的点。</param>
      <returns>如果 <see cref="T:System.Windows.Forms.Cursor" /> 与 <paramref name="p" /> 关联，则为 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />；否则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>提供绘制逻辑。</summary>
      <param name="pe">一个 <see cref="T:System.Windows.Forms.PaintEventArgs" />，包含 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的 <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary>获取与该 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 关联的组件。</summary>
      <returns>与 <see cref="T:System.ComponentModel.IComponent" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 与其控件关联。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 类的新实例。</summary>
      <param name="bounds">表示 <see cref="T:System.Drawing.Rectangle" /> 的边界的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="cursor">一个 <see cref="T:System.Windows.Forms.Cursor" />，表示当鼠标指针位于 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 上时显示的光标。</param>
      <param name="relatedComponent">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联的组件。</param>
      <param name="behavior">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 类的新实例。</summary>
      <param name="bounds">表示 <see cref="T:System.Drawing.Rectangle" /> 的边界的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="cursor">一个 <see cref="T:System.Windows.Forms.Cursor" />，表示当鼠标指针位于 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 上时显示的光标。</param>
      <param name="relatedComponent">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联的组件。</param>
      <param name="designer">与 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 相关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的边界。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" />，表示 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的边界。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary>指示对指定点的鼠标单击是否应由 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 处理。</summary>
      <param name="p">要进行命中测试的点。</param>
      <returns>如果 <see cref="T:System.Windows.Forms.Cursor" /> 与 <paramref name="p" /> 关联，则为 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />；否则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary>表示一个由 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 管理的用户界面 (UI) 实体。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 类的新实例。</summary>
      <param name="behavior">与 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。 可以为 <see langword="null" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary>获取与 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <returns>与 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，或者，如果不存在任何行为，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的边界。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" />，表示 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的边界。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary>提供命中测试逻辑。</summary>
      <param name="p">要进行命中测试的点。</param>
      <returns>如果 <see cref="T:System.Windows.Forms.Cursor" /> 与 <paramref name="p" /> 关联，则为 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />；否则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>提供绘制逻辑。</summary>
      <param name="pe">包含事件数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>更改与 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <param name="behavior">要与该 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary>在强类型集合中存储 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>使用给定的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 数组初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 类的新实例。</summary>
      <param name="value">用于填充集合的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 类型的数组。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>基于另一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 初始化 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 类的新实例。</summary>
      <param name="value">要用于填充集合的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>向该 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 添加带有指定值的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</summary>
      <param name="value">要添加到集合末尾的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>新元素位置处插入的索引。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>将数组的元素复制到 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 的末尾。</summary>
      <param name="value">将复制到集合末尾的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 类型的数组。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>将另一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 的内容添加到集合末尾。</summary>
      <param name="value">要添加到集合末尾的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 是否包含指定的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <param name="value">要查找的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>如果 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 包含在集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 值复制到一个一维 <see cref="T:System.Array" /> 中的指定索引位置。</summary>
      <param name="array">一维 <see cref="T:System.Array" />，是从 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 复制的值的目标。</param>
      <param name="index">
        <paramref name="array" /> 中复制开始处的索引。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>返回 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 中的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 的索引。</summary>
      <param name="value">要查找的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>如果找到 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 中 <paramref name="value" /> 的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 的索引则返回该索引；否则返回 -1。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 插入到 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 中的指定索引位置处。</summary>
      <param name="index">应插入 <paramref name="value" /> 处的从零开始的索引。</param>
      <param name="value">要插入的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的元素。</summary>
      <param name="index">元素的索引（索引从零开始）。</param>
      <returns>指定索引处的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 元素。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>从 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 中移除特定的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</summary>
      <param name="value">要从 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 移除的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary>描述 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的设计器选择状态。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 未选定。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 已选定。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 为主选择。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary>表示在用户界面 (UI) 中动态创建以便在容器中辅助控件的设计时布局的水平和垂直线段。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary>使用指定对齐线类型和偏移量初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 类的新实例。</summary>
      <param name="type">要创建的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述视图轮廓线的相对位置和方向。</param>
      <param name="offset">对齐线相对于所属控件左上角原点的位置，单位是像素。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary>使用指定的对齐线类型、偏移量和筛选器名称初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 类的新实例。</summary>
      <param name="type">要创建的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述视图轮廓线的相对位置和方向。</param>
      <param name="offset">对齐线相对于所属控件左上角原点的位置，单位是像素。</param>
      <param name="filter">一个 <see cref="T:System.String" /> 用于指定由程序员定义的对齐线类别。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>使用指定的对齐线类型、偏移量、筛选器名称和优先级初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 类的新实例。</summary>
      <param name="type">要创建的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述视图轮廓线的相对位置和方向。</param>
      <param name="offset">对齐线相对于所属控件左上角原点的位置，单位是像素。</param>
      <param name="filter">一个 <see cref="T:System.String" /> 用于指定由程序员定义的对齐线类别。</param>
      <param name="priority">对齐线的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>使用指定的对齐线类型、偏移量和优先级初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 类的新实例。</summary>
      <param name="type">要创建的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述视图轮廓线的相对位置和方向。</param>
      <param name="offset">对齐线相对于所属控件左上角原点的位置，单位是像素。</param>
      <param name="priority">对齐线的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary>调整对齐线的 <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> 属性。</summary>
      <param name="adjustment">对齐线偏移量更改的像素数。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary>获取与此对齐线关联的由程序员定义的筛选器类别。</summary>
      <returns>一个 <see cref="T:System.String" /> 定义筛选器类别。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary>获取一个值，该值指示对齐线是否有水平方向。</summary>
      <returns>如果对齐线是水平的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary>获取一个值，该值指示对齐线是否有垂直方向。</summary>
      <returns>如果对齐线是垂直的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary>获取对齐线偏离关联控件的原点的像素数。</summary>
      <returns>对齐线的偏移量（单位为像素）。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary>获取指示对齐线的相对重要性的值。</summary>
      <returns>表示对齐线优先级类别的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary>返回一个值，该值指示指定的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 是否应与另一 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 对齐。</summary>
      <param name="line1">指定的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</param>
      <param name="line2">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />，指定的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 应与其对齐。</param>
      <returns>如果 <paramref name="line1" /> 应与 <paramref name="line2" /> 对齐，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary>获取对齐线的类型，它指示一般位置和方向。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />，它表示对齐线相对于控件边缘的方向和一般位置。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary>返回当前对齐线的字符串表示形式。</summary>
      <returns>一个 <see cref="T:System.String" />，表示当前的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary>指定对齐线的相对重要性。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary>等效于所有当前对齐线的最高优先级的优先级类别。 指示此类别的对齐线应始终是活动的。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary>最高优先级类别。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary>最低优先级类别。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary>中等优先级类别。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary>指定对齐线的方向和相对位置。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary>通常与控件的主要内部功能关联的水平对齐线；例如，<see cref="T:System.Windows.Forms.Label" /> 控件中的文本字符串的基线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary>通常与控件的下边缘对齐的水平对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary>通常不与控件的边缘关联的水平对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary>通常与控件的左边缘对齐的垂直对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary>通常与控件的右边缘对齐的垂直对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary>通常与控件的上边缘对齐的水平对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary>通常不与控件的边缘关联的垂直对齐线。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentActionsType" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.All" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Component" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Service" />
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary>基本设计器类，用于扩展根设计文档中支持嵌套组件的设计模式行为。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary>为设计器获取控件。</summary>
      <returns>设计器正在编辑的 <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>获取一个值，该值指示设计器是否支持指定工具。</summary>
      <param name="tool">要对其进行工具箱支持测试的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>如果应在工具箱上启用该工具，则为 <see langword="true" />；如果文档设计器不知道如何使用该工具，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用指定的组件初始化设计器。</summary>
      <param name="component">要与设计器关联的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整该组件将通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />，包含组件的类的属性。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>有关此成员的说明，请参见 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</summary>
      <param name="technology">指示特定视图技术的 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</param>
      <returns>表示此设计器的视图的对象。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>有关此成员的说明，请参见 <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />。</summary>
      <returns>受支持的 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 值的数组。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />。</summary>
      <param name="component">要筛选其特性的组件。</param>
      <param name="attributes">可修改的特性字典。</param>
      <returns>如果将缓存经过筛选的特性集，则为 <see langword="true" />；如果筛选服务必须再次查询，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />。</summary>
      <param name="component">要为其筛选事件的组件。</param>
      <param name="events">可修改的事件字典。</param>
      <returns>如果将缓存经过筛选的事件集，则为 <see langword="true" />；如果筛选服务必须再次查询，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />。</summary>
      <param name="component">要筛选其属性的组件。</param>
      <param name="properties">可修改的属性字典。</param>
      <returns>如果将缓存经过筛选的属性集，则为 <see langword="true" />；如果筛选服务必须再次查询，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool">要进行工具箱支持测试的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>如果工具箱支持该工具而且该工具可启用，则为 <see langword="true" />；如果该文档设计器不知道如何使用该工具，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool">要选择的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary>获取或设置一个值，该值指示设计器的组件栏是否处于自动排列模式。</summary>
      <returns>如果设计器的组件栏处于自动排列模式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary>获取或设置一个值，该值指示设计器的组件栏处是否处于大图标模式。</summary>
      <returns>如果设计器的组件栏处于大图标模式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary>为设计器的组件栏提供行为。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary>使用指定的设计器和服务提供程序初始化 <see cref="T:System.Windows.Forms.Design.ComponentTray" /> 类的新实例。</summary>
      <param name="mainDesigner">
        <see cref="T:System.ComponentModel.Design.IDesigner" />，它是当前项目的主设计器或文档设计器。</param>
      <param name="serviceProvider">可用于获得设计时服务的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary>向组件栏添加组件。</summary>
      <param name="component">要添加到组件栏的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary>获取或设置一个值，该值指示是否自动对齐组件栏项。</summary>
      <returns>如果组件栏项自动排列，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>获取一个值，该值指示指定的工具是否可用于创建新组件。</summary>
      <param name="tool">要测试的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>如果指定的工具可用于创建组件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary>获取一个值，该值指示是否可显示指定的组件。</summary>
      <param name="component">要测试的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns>如果可以显示该组件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary>获取包含在组件栏中的组件数。</summary>
      <returns>组件栏中的组件数。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>从指定的工具箱项中创建一个组件，然后将该组件添至当前文档，并在组件栏中显示该组件的表示形式。</summary>
      <param name="tool">要从中创建组件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary>向用户显示错误信息，其中包括有关指定的异常的信息。</summary>
      <param name="e">要显示其相关信息的异常。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.ComponentTray" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary>获取指定组件相对于组件栏的左上角的位置。</summary>
      <param name="receiver">要检索其位置的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns>指示所指定组件的坐标的 <see cref="T:System.Drawing.Point" />；或者，如果未能在组件栏中找到指定的组件，则为空 <see cref="T:System.Drawing.Point" />。 空 <see cref="T:System.Drawing.Point" /> 具有等于 <see langword="true" /> 的 <see cref="P:System.Drawing.Point.IsEmpty" /> 属性，并且，通常具有分别都等于零的 <see cref="P:System.Drawing.Point.X" /> 属性和 <see cref="P:System.Drawing.Point.Y" /> 属性。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary>类似于 <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />，给定一个起始组件时，该方法返回组件栏中的下一个组件。</summary>
      <param name="component">从其开始枚举的组件。</param>
      <param name="forward">如果为 <see langword="true" />，则向前枚举列表；否则（为 <see langword="false" /> 时）向后枚举列表。</param>
      <returns>组件栏中的下一个组件，如果遇到列表末尾（在 <paramref name="forward" /> 为 <see langword="null" /> 时为列表的开头），则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary>获取所请求的服务类型。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>所请求的服务类型实例，如果未能找到服务，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary>获取 <see langword="Location" /> 扩展程序属性的值。</summary>
      <param name="receiver">接收位置扩展程序属性的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns>一个 <see cref="T:System.Drawing.Point" />，表示 <paramref name="receiver" /> 的位置。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary>测试某组件是否存在于组件栏中。</summary>
      <param name="comp">要测试其是否存在于组件栏中的组件。</param>
      <returns>如果组件栏上显示有 <paramref name="comp" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>在将已拖动对象放到组件栏上时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>在组件栏上拖动对象且对象已进入组件栏上的区域时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary>在将对象拖出组件栏上的区域时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>在将对象拖动到组件栏上时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>在 OLE 拖放操作期间调用，向组件栏提供机会来向用户反馈有关将对象置于指定点的结果。</summary>
      <param name="gfevent">为事件提供数据的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Forms.Control.Layout" /> 事件。</summary>
      <param name="levent">包含事件数据的 <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary>在取消鼠标拖动选择操作时调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>在组件栏上双击鼠标时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>在按下鼠标键时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>在鼠标光标位置发生更改时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>在已释放鼠标键时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>在应该刷新组件栏视图时调用。</summary>
      <param name="pe">为事件提供数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary>调用以设置鼠标光标。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary>从组件栏中移除指定的组件。</summary>
      <param name="component">要从组件栏中移除的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>将所指定组件的位置设置为指定的位置。</summary>
      <param name="receiver">要设置其位置的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="location">
        <see cref="T:System.Drawing.Point" />，指示所指定组件的新位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>设置 <see langword="Location" /> 扩展程序属性的值。</summary>
      <param name="receiver">接收位置扩展程序属性的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="location">一个 <see cref="T:System.Drawing.Point" />，表示 <paramref name="receiver" /> 的位置。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary>获取或设置一个值，该值指示组件栏是否显示大图标来表示组件栏中的各个组件。</summary>
      <returns>如果显示大图标，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />。</summary>
      <param name="extendee">要接收扩展程序属性的对象。</param>
      <returns>如果此对象可以扩展程序属性提供给指定对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary>扩展 <see cref="T:System.Windows.Forms.Control" /> 的设计模式行为。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary>为设计器指定可访问对象。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary>获取分配给该控件的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
      <returns>分配给控件的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary>获取与设计器所管理的组件关联的组件集合。</summary>
      <returns>与设计器所管理的组件关联的组件。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary>获取或设置一个值，该值指示调整手柄的分配是否取决于 <see cref="P:System.Windows.Forms.Control.AutoSize" /> 属性的值。</summary>
      <returns>如果调整手柄的分配取决于 <see cref="P:System.Windows.Forms.Control.AutoSize" /> 和 <see langword="true" /> 属性的值，则为 <see langword="AutoSizeMode" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary>从设计环境获取 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />，若该服务不可用则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary>指示指定设计器的控件是否可以成为此设计器控件的父级。</summary>
      <param name="parentDesigner">
        <see cref="T:System.ComponentModel.Design.IDesigner" />，它可管理要检查的控件。</param>
      <returns>如果由指定设计器管理的控件可以成为由此设计器管理的控件的父级，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary>获取设计器正在设计的控件。</summary>
      <returns>设计器正在设计的控件。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary>为 <see cref="T:System.Windows.Forms.AccessibleObject" /> 提供 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary>使用指定的设计器和控件初始化 <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> 类的新实例。</summary>
      <param name="designer">辅助性对象的 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</param>
      <param name="control">辅助性对象的 <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary>获取定义设计器的辅助性对象的边界的点。</summary>
      <returns>指示设计器的辅助性对象的边界的 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary>获取描述指定对象默认操作的字符串。</summary>
      <returns>指定对象默认操作的说明。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary>获取说明指定对象可视外观的字符串。</summary>
      <returns>用户可看到的对象外观的说明，或者，如果该对象没有说明，则是 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>检索与指定索引对应的可访问子级。</summary>
      <param name="index">可访问子级的从零开始的索引。</param>
      <returns>一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，表示与指定索引对应的辅助性子级。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary>检索属于可访问对象的子级的个数。</summary>
      <returns>属于可访问对象的子级的个数。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary>检索具有键盘焦点的对象。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" />，指定当前已设定焦点的子级。 如果对象本身设定了焦点，此方法返回调用对象。 如果没有对象具有焦点，则返回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary>检索当前选定的子级。</summary>
      <returns>表示当前选定子级的 <see cref="T:System.Windows.Forms.AccessibleObject" />。 如果选定了对象本身，则此方法返回调用对象。 如果当前没有选定子级且对象本身没有焦点，则返回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary>检索位于指定屏幕坐标的子对象。</summary>
      <param name="x">水平屏幕坐标。</param>
      <param name="y">垂直屏幕坐标。</param>
      <returns>一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，表示位于给定屏幕坐标位置的子对象。 如果对象本身位于指定位置，则此方法返回调用对象。 如果测试位置没有对象，则返回 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary>获取或设置对象名。</summary>
      <returns>对象名，或者，如果尚未设置属性，则是 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary>获取辅助性对象的父级。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" />，表示辅助性对象的父级，或者，如果没有父对象，则是 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary>获取此辅助性对象的角色。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleRole" /> 值之一，或者，如果没有指定角色，则是 <see cref="F:System.Windows.Forms.AccessibleRole.None" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary>获取此辅助性对象的状态。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleStates" /> 值之一，或者，如果没有设置状态，则是 <see cref="F:System.Windows.Forms.AccessibleStates.None" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary>获取或设置辅助性对象的值。</summary>
      <returns>可访问对象的值，或如果该对象未设值，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary>提供对 Windows 消息的默认处理。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary>向用户显示有关所指定异常的信息。</summary>
      <param name="e">要显示的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary>启用子控件的设计时功能。</summary>
      <param name="child">要为其启用设计模式的子控件。</param>
      <param name="name">为最终用户公开的 <paramref name="child" /> 名称。</param>
      <returns>如果可以启用子控件的设计时功能，则为 <see langword="true" />；如果宿主基础结构不支持这一功能，则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> 或 <paramref name="name" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary>启用或禁用对正在设计的控件的拖放支持。</summary>
      <param name="value">要启用对控件的拖放支持，则为 <see langword="true" />；如果该控件不应有拖放支持，则为 <see langword="false" />。 默认值为 <see langword="false" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary>获取一个值，该值指示是否可以在该设计器组件上绘制拖动矩形。</summary>
      <returns>如果可以绘制拖动矩形，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>返回表示此控件的边界的 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />。</summary>
      <param name="selectionType">一个指定选择状态的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值。</param>
      <returns>表示此控件的边界的 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>获取一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合，其中的 Glyph 对象表示标准控件的选择边框和抓取手柄。</summary>
      <param name="selectionType">一个指定选择状态的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>指示该控件是否应处理在指定点单击鼠标的操作。</summary>
      <param name="point">
        <see cref="T:System.Drawing.Point" />，它指示屏幕坐标中单击鼠标的位置。</param>
      <returns>如果在指定点单击的操作将由该控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary>将来自指定控件的子控件的消息路由到设计器。</summary>
      <param name="firstChild">要处理的第一个子级 <see cref="T:System.Windows.Forms.Control" />。 此方法可以为控件的子级递归地调用其自身。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary>获取设计器的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</summary>
      <returns>如果设计器是根设计器，则为 <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" />；否则，为父设计器的 <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用指定的组件初始化设计器。</summary>
      <param name="component">要与设计器关联的 <see cref="T:System.ComponentModel.IComponent" />。 此组件必须始终为 <see cref="T:System.Windows.Forms.Control" /> 的一个实例，或从其中派生。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>重新初始化现有组件。</summary>
      <param name="defaultValues">要应用到属性的默认值的名称/值字典。 如果未指定默认值，则可能为 <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>初始化新创建的组件。</summary>
      <param name="defaultValues">要应用到属性的默认值的名称/值字典。 如果未指定默认值，可能为 <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary>返回 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 中具有指定索引的内部控件设计器。</summary>
      <param name="internalControlIndex">一个用于选择内部控件设计器的指定索引。 索引是从零开始的。</param>
      <returns>指定索引处的 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</returns>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary>定义一个本地 <see cref="T:System.Drawing.Point" />，它表示无效 <see cref="T:System.Drawing.Point" /> 的值。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary>返回 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 中内部控件设计器的数目。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 中内部控件设计器的数目。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>显示上下文菜单，并提供在上下文菜单将要显示时执行附加处理的机会。</summary>
      <param name="x">上下文菜单显示处的 x 坐标。</param>
      <param name="y">上下文菜单显示处的 y 坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary>提供在创建控件处理程序之后立即执行附加处理的机会。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>接收调用以清理拖放操作。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>在将拖放对象放置到控件设计器视图上时接收调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>在拖放操作进入控件设计器视图时接收调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>在拖放操作离开控件设计器视图时接收调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>在控件设计器视图上拖动拖放对象时接收调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>在进行拖放操作时接收调用，以在拖动操作进行的同时基于鼠标的位置提供可视提示。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>当响应在组件上按住鼠标左键不放这一操作时接收调用。</summary>
      <param name="x">屏幕坐标中鼠标的 x 位置。</param>
      <param name="y">屏幕坐标中鼠标的 y 位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>在拖放操作结束时接收调用，以完成或取消此次操作。</summary>
      <param name="cancel">要取消拖动，为 <see langword="true" />；要提交拖动，为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>为拖放操作期间的每一次鼠标移动接收调用。</summary>
      <param name="x">屏幕坐标中鼠标的 x 位置。</param>
      <param name="y">屏幕坐标中鼠标的 y 位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary>当鼠标首次进入控件时接收调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary>鼠标在控件上悬停后接收调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary>当鼠标首次进入控件时接收调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>当设计器正在管理的控件绘制了它的图面时接收调用，这样设计器就可以在控件顶部绘制任意附加装饰。</summary>
      <param name="pe">
        <see cref="T:System.Windows.Forms.PaintEventArgs" />，设计器可以使用它在控件上绘制。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary>在设计器初始化时调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary>在每次需要设置光标时接收调用。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 的父组件。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 的父组件；否则（没有父组件时）为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary>获取一个值，该值指示在拖动操作期间 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 是否允许按对齐线对齐。</summary>
      <returns>如果在主要拖动控件位于该设计器之上时 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 允许在拖动操作期间按对齐线对齐，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整组件通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />，包含组件的类的属性。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary>获取指示组件的移动功能的选择规则。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 值的按位组合。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary>获取表示此控件的重要对齐点的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 对象的列表。</summary>
      <returns>表示此控件的重要对齐点的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 对象的列表。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary>将所指定控件的子级的消息路由到每个控件而不是路由到父级设计器。</summary>
      <param name="firstChild">要处理的第一个子级 <see cref="T:System.Windows.Forms.Control" />。 此方法可以为控件的子级递归地调用其自身。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息，并可以选择将其路由到控件。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary>提供对设计器的获取选项值和设置选项值的访问。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary>获取或设置一个值，该值指示启用或禁用 <see cref="T:System.Windows.Forms.ToolStrip" /> 控件的就地编辑。</summary>
      <returns>如果启用 <see cref="T:System.Windows.Forms.ToolStrip" /> 控件的就地编辑，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary>获取或设置表示网格单元尺寸的 <see cref="T:System.Drawing.Size" />。</summary>
      <returns>一个表示网格单元尺寸的 <see cref="T:System.Drawing.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary>获取或设置一个值，该值指定在创建组件时设计器是否自动显示组件的智能标记面板。</summary>
      <returns>如果允许组件的智能标记面板在创建时自动打开，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary>获取或设置一个值，该值指示启用或禁用设计器中的网格。</summary>
      <returns>如果启用网格，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary>获取或设置一个值，该值指示控件是否自动放置于网格坐标处。</summary>
      <returns>如果启用对齐功能，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary>获取或设置一个值，该值指示启用或禁用组件缓存。</summary>
      <returns>如果启用组件缓存，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary>获取或设置一个值，该值指示启用或禁用设计器中的智能标记。</summary>
      <returns>如果启用设计器中的智能标记，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary>获取或设置一个值，该值指示启用或禁用设计器中的对齐线。</summary>
      <returns>如果启用设计器中的对齐线，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary>设计器基类，用于扩展支持嵌套控件并应接收滚动消息的 <see cref="T:System.Windows.Forms.Control" /> 的设计模式行为，并为其提供根级别设计模式视图。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>检查是否存在菜单编辑器服务，如果尚未存在，则创建一个。</summary>
      <param name="c">
        <see cref="T:System.ComponentModel.IComponent" />，要确保具有上下文菜单服务。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>获取表示 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 对象的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <param name="selectionType">一个指定选择状态的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>指示设计器是否支持指定的工具。</summary>
      <param name="tool">要对其进行工具箱支持测试的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>如果应在工具箱上启用该工具，则为 <see langword="true" />；如果文档设计器不知道如何使用该工具，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用指定的组件初始化设计器。</summary>
      <param name="component">要与设计器关联的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="F:System.Windows.Forms.Design.DocumentDesigner.menuEditorService">
      <summary>将 menuEditorService 变量初始化为 <see langword="null" />。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>在应显示上下文菜单时调用。</summary>
      <param name="x">上下文菜单显示位置的水平屏幕坐标。</param>
      <param name="y">上下文菜单显示位置的垂直屏幕坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary>在创建设计器的句柄后立即进行调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整组件通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />，包含组件的类的属性。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary>获取设计器的 <see cref="T:System.Windows.Forms.Design.SelectionRules" />。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 值的按位组合。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>有关此成员的说明，请参见 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</summary>
      <param name="technology">指示特定视图技术的 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</param>
      <returns>表示此设计器的视图的对象。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>有关此成员的说明，请参见 <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />。</summary>
      <returns>受支持的 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 值的数组。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool">要进行工具箱支持测试的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>如果工具箱支持该工具而且该工具可启用，则为 <see langword="true" />；如果该文档设计器不知道如何使用该工具，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool">要选择的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>选择指定的工具。</summary>
      <param name="tool">要为其创建组件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary>为当前文档提供管理事件处理程序的系统方法。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.EventHandlerService" /> 类的新实例。</summary>
      <param name="focusWnd">正在设计的 <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary>触发 OnEventHandlerChanged 事件。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary>获取附加了事件处理程序的控件。</summary>
      <returns>通过构造函数附加的 <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary>获取具有指定类型的当前活动事件处理程序。</summary>
      <param name="handlerType">要获取的处理程序的类型。</param>
      <returns>处理程序的实例，或者 <see langword="null" />（如果没有请求类型的处理程序）。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary>从堆栈中弹出给定处理程序。</summary>
      <param name="handler">要从堆栈移除的处理程序。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary>将一个新的事件处理程序推入堆栈。</summary>
      <param name="handler">要添加到堆栈的处理程序。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary>定义有关获得当窗口的滚动条在 Visual Studio 设计器中显示时需要如何主题化的信息的方法。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" /> 对象的枚举，这些对象表示窗口以及当在 Visual Studio 设计器中显示时其滚动条如何主题化。</summary>
      <returns>代表窗口以及当在 Visual Studio 设计器中显示时其滚动条如何主题化的对象的枚举。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary>序列化字符串字典。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将指定的已序列化代码文档对象模型 (CodeDOM) 对象反序列化为一个对象。</summary>
      <param name="manager">在反序列化进程中使用的序列化管理器接口。</param>
      <param name="codeObject">要进行反序列化的已序列化 CodeDOM 对象。</param>
      <returns>反序列化的 CodeDOM 对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="codeObject" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将指定对象序列化为一个代码文档对象模型 (CodeDOM) 对象。</summary>
      <param name="manager">要在序列化过程中使用的序列化管理器。</param>
      <param name="value">要序列化的对象。</param>
      <returns>一个 CodeDOM 对象，它表示已序列化的对象。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.IMenuEditorService">
      <summary>提供对菜单编辑服务的访问。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.GetMenu">
      <summary>获取当前菜单。</summary>
      <returns>当前的 <see cref="T:System.Windows.Forms.Menu" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.IsActive">
      <summary>指示当前菜单是否处于活动状态。</summary>
      <returns>如果当前菜单当前处于活动状态，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.MessageFilter(System.Windows.Forms.Message@)">
      <summary>允许编辑器服务截获 Win32 消息。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
      <returns>如果消息是针对控件的，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetMenu(System.Windows.Forms.Menu)">
      <summary>设置指定菜单在窗体上是可见的。</summary>
      <param name="menu">要呈现的 <see cref="T:System.Windows.Forms.Menu" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetSelection(System.Windows.Forms.MenuItem)">
      <summary>设置当前菜单的选定菜单项。</summary>
      <param name="item">要设置为当前选定菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary>定义一组 <see cref="T:System.ComponentModel.Design.CommandID" /> 字段，每个字段都与宿主环境提供的命令函数相对应。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.MenuCommands" /> 类的新实例。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary>可用于访问组件栏菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary>可用于访问容器菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary>可用于访问设计器的属性页的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary>可用于访问编辑标签处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary>可用于访问取消按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary>可用于访问默认按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary>可用于访问 End 按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary>可用于访问 Home 按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary>可用于访问智能标记调用处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary>可用于访问下移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary>可用于访问左移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary>可用于访问右移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary>可用于访问上移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary>可用于访问向下微移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary>可用于访问微移高度减小按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary>可用于访问微移高度增加按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary>可用于访问向左微移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary>可用于访问向右微移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary>可用于访问向上微移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary>可用于访问微移宽度减小按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary>可用于访问微移宽度增加按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary>可用于访问反向取消按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary>可用于访问选择下一个按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary>可用于访问选择上一个按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary>可用于访问 Shift-End 按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary>可用于访问 Shift-Home 按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary>可用于访问尺寸高度减小按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary>可用于访问尺寸高度增加按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary>可用于访问尺寸宽度减小按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary>可用于访问尺寸宽度增加按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary>可用于访问 Tab 键顺序选择按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary>可用于访问选择菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary>可用于设置状态矩形的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary>可用于设置状态矩形文本的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary>可用于访问组件栏选择菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary>扩展支持嵌套控件的 <see cref="T:System.Windows.Forms.Control" /> 的设计模式行为。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary>添加填充对齐线。</summary>
      <param name="snapLines">包含 <see cref="T:System.Collections.ArrayList" /> 对象的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary>获取一个值，该值指示选择的控件是否重新设置为父级。</summary>
      <returns>如果要将设计器图面上以“套索”选择方式选择的控件重新设置为此设计器的控件的父级，则为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary>获取一个值，指示拖动工具箱项悬停于设计器图面上时是否应绘制一般拖动框。</summary>
      <returns>如果拖动工具箱项悬停于设计器图面上时应绘制一般拖动框，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary>获取一个值，指示控件拖放到 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 上时是否应保持其 z-顺序。</summary>
      <returns>如果控件放到 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 上时应保持其 z-顺序，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary>向父容器添加组件时调用。</summary>
      <param name="component">要测试是否有错误的组件。</param>
      <returns>如果可以添加 <paramref name="component" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary>指示指定的控件是否可以是由此设计器管理的控件的子级。</summary>
      <param name="control">要测试的 <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns>如果指定的控件可以是由此设计器管理的控件的子级，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary>指示由指定设计器管理的控件是否可以是由此设计器管理的控件的子级。</summary>
      <param name="controlDesigner">待测控件的设计器。</param>
      <returns>如果由指定设计器管理的控件可以是由此设计器管理的控件的子级，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary>从指定工具创建一个组件或控件并将其添加到当前的设计文档。</summary>
      <param name="tool">要从中创建组件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary>从指定工具创建组件或控件，并将其添至当前设计文档中的指定位置。</summary>
      <param name="tool">要从中创建组件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="location">设计时视图屏幕坐标中的 <see cref="T:System.Drawing.Point" />，此位置将作为组件的中心。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary>从指定工具创建组件或控件，并将其添至当前设计文档中所指定矩形的界限内。</summary>
      <param name="tool">要从中创建组件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="bounds">
        <see cref="T:System.Drawing.Rectangle" />，指示从工具中创建的组件的位置和大小。 <see cref="P:System.Drawing.Rectangle.X" /> 的 <see cref="P:System.Drawing.Rectangle.Y" /> 和 <see cref="T:System.Drawing.Rectangle" /> 值指示组件左上角的设计时视图屏幕坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>为所有的 <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" /> 方法提供核心功能。</summary>
      <param name="tool">要从中创建组件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="x">如果指定了大小，则为工具的左边缘位置在设计时视图坐标中的水平位置；如果没有指定大小，则为工具的中心在设计时视图坐标中的水平位置。</param>
      <param name="y">如果指定了大小，则为工具的上边缘位置在设计时视图坐标中的垂直位置；如果没有指定大小，则为工具的中心在设计时视图坐标中的垂直位置。</param>
      <param name="width">工具的宽度。 如果 <paramref name="hasSize" /> 参数被设置为 <see langword="false" />，则忽略此参数。</param>
      <param name="height">工具的高度。 如果 <paramref name="hasSize" /> 参数被设置为 <see langword="false" />，则忽略此参数。</param>
      <param name="hasLocation">如果为组件指定了位置，则为 <see langword="true" />；如果组件将定位于当前所选控件的中心，则为 <see langword="false" />。</param>
      <param name="hasSize">如果为组件指定了大小，则为 <see langword="true" />；如果使用组件的默认高度值和宽度值，则为 <see langword="false" />。</param>
      <returns>从工具中创建的组件的数组。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary>获取已添至设计器的控件的默认位置。</summary>
      <returns>
        <see cref="T:System.Drawing.Point" />，指示已添至设计器的控件的默认位置。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary>获取或设置一个值，该值指示是否应为此设计器在控件上绘制网格。</summary>
      <returns>如果应在此设计器中的控件上绘制网格，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary>获取一个值，该值指示设计器是否绘制拖动矩形。</summary>
      <returns>如果绘制拖动矩形，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary>从所指定组件的设计器中获取控件。</summary>
      <param name="component">要为其检索控件的组件。</param>
      <returns>指定组件所属的 <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>获取表示控件的边界的主体标志符号。</summary>
      <param name="selectionType">一个指定选择状态的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值。</param>
      <returns>表示控件的边界的主体标志符号。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>获取一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合，其中的 Glyph 对象表示标准控件的选择边框和抓取手柄。</summary>
      <param name="selectionType">一个指定选择状态的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary>由基类用来确定在向其添加组件时是否返回正在设计的控件或其他某个 <see cref="T:System.ComponentModel.Container" />。</summary>
      <param name="component">为其检索父 <see cref="T:System.Windows.Forms.Control" /> 的组件。</param>
      <returns>组件的父 <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary>更新所指定矩形的位置，如果启用了网格对齐模式，则对其进行调整以便对齐网格。</summary>
      <param name="originalRect">
        <see cref="T:System.Drawing.Rectangle" />，指示更新的组件的初始位置。</param>
      <param name="dragRect">
        <see cref="T:System.Drawing.Rectangle" />，指示组件的新位置。</param>
      <param name="updateSize">如果已做出更改，则为 <see langword="true" />，以更新矩形的大小；否则为 <see langword="false" />。</param>
      <returns>指示设计时视图屏幕坐标中组件位置的矩形。 如果未做更改，此方法会返回原始矩形。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary>获取或设置网格的各个方格的大小，该网格在设计器处于网格绘制模式时绘制。</summary>
      <returns>
        <see cref="T:System.Drawing.Size" />，表示在窗体或用户控件上绘制的网格的各个方格的大小。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Size" /> 超出了 <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" /> 的允许范围。 默认的最小值是 2，而默认的最大值是 200。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用指定的组件初始化设计器。</summary>
      <param name="component">要与设计器关联的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>初始化新创建的组件。</summary>
      <param name="defaultValues">要应用到属性的默认值的名称/值字典。 如果未指定默认值，可能为 <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary>从指定的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 创建工具。</summary>
      <param name="toInvoke">要与该工具一起使用的 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />。</param>
      <param name="tool">要从其创建工具的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary>获取一个值，该值指示在拖动操作过程中设计器是否具有一个有效工具。</summary>
      <returns>如果创建组件，则为拖动的工具，如果没有任何工具，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>按顺序调用以清理拖放操作。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>在将拖放对象放置到控件设计器视图上时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>在拖放操作进入控件设计器视图时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>在拖放操作离开控件设计器视图时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>在控件设计器视图上拖动拖放对象时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>调用以响应在组件上时按下鼠标左键并按住不放这一操作。</summary>
      <param name="x">屏幕坐标中鼠标的 x 坐标。</param>
      <param name="y">屏幕坐标中鼠标的 y 坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>在拖放操作结束时调用，以完成或取消此次操作。</summary>
      <param name="cancel">要取消拖动操作，为 <see langword="true" />；要提交操作，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>为拖放操作期间鼠标的每一次移动而调用。</summary>
      <param name="x">屏幕坐标中鼠标的 x 坐标。</param>
      <param name="y">屏幕坐标中鼠标的 y 坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>当设计器正在管理的控件绘制了它的表面时调用，这样设计器就可以在控件顶部绘制任意附加装饰。</summary>
      <param name="pe">为事件提供数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary>提供更改当前鼠标光标的机会。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整该组件将通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />，包含组件的类的属性。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary>获取表示此控件的重要对齐点的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 对象的列表。</summary>
      <returns>表示此控件的重要对齐点的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 对象的列表。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary>用于扩展应接受滚动消息的 <see cref="T:System.Windows.Forms.Control" /> 的设计模式行为的基本设计器类。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>指示该控件是否应处理在指定点单击鼠标的操作。</summary>
      <param name="pt">
        <see cref="T:System.Drawing.Point" />，它指示屏幕坐标中单击鼠标的位置。</param>
      <returns>如果在指定点单击的操作将由该控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息并将 WM_HSCROLL 和 WM_VSCROLL 消息传递给设计时的控件。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary>定义用于指示组件的选择规则的标识符。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary>指示组件支持在各个方向调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary>指示组件支持从底端调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary>指示组件支持从左边调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary>指示组件被锁定到其容器。 重写此枚举的 <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" /> 和 <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> 位标志。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary>指示组件支持允许将它移动到屏幕上的位置属性。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary>指示没有特殊选择特性。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary>指示组件支持从右边调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary>指示组件支持从顶端调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary>指示组件具有某种形式的可视用户界面并且选择服务正围绕此用户界面绘制选择边框。 如果所选组件具有此规则集，可假定此组件实现 <see cref="T:System.ComponentModel.IComponent" />，并且它与对应的设计器实例关联。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary>一个值，指示窗口及其子窗口的滚动条当在 Visual Studio 设计器中显示时是否主题化。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary>窗口及其所有子窗口都具有主题化的滚动条。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary>窗口及其所有子窗口都不主题化。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary>窗口具有主题化的滚动条，但其所有子窗口都不主题化。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary>表示一个窗口和一个值，指示窗口滚动条当在 Visual Studio 设计器中显示时如何主题化。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary>窗口句柄。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary>一个值，指示窗口滚动条当在 Visual Studio 设计器中显示时如何主题化。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary>提供对 Windows 窗体设计器的获取选项值和设置选项值的访问。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary>获取由 <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> 公开的 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />。</summary>
      <returns>由 <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> 公开的 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>填充 <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />。</summary>
      <param name="options">要填充的集合。</param>
    </member>
  </members>
</doc>