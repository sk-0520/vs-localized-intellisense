<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>WindowsBase</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Fournit une implémentation <see cref="T:System.Windows.WeakEventManager" /> afin que vous puissiez utiliser le modèle « écouteur d'événements faible » pour joindre des écouteurs à l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Ajoute le gestionnaire d'événements spécifié, qui est appelé lorsque la source spécifiée déclenche l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> .</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Objet source qui déclenche l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Délégué qui gère l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">Ajoute l'écouteur spécifié à l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> de la source spécifiée.</summary>
      <param name="source" vsli:raw="The object with the event.">Objet avec l'événement.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Objet à ajouter comme écouteur.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Retourne un nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Supprime le gestionnaire d'événements spécifié de la source spécifiée.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Objet source qui déclenche l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Délégué qui gère l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">Supprime l'écouteur spécifié de l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> de la source spécifiée.</summary>
      <param name="source" vsli:raw="The object with the event.">Objet avec l'événement.</param>
      <param name="listener" vsli:raw="The listener to remove.">Écouteur à supprimer.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">Commence à écouter l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> sur la source spécifiée.</summary>
      <param name="source" vsli:raw="The object with the event.">Objet avec l'événement.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">Arrête d'écouter l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> sur la source spécifiée.</summary>
      <param name="source" vsli:raw="The object with the event.">Objet avec l'événement.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Fournit une implémentation <see cref="T:System.Windows.WeakEventManager" /> afin que vous puissiez utiliser le modèle « écouteur d'événements faible » pour joindre des écouteurs à l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Ajoute le gestionnaire d'événements spécifié, qui est appelé lorsque la source spécifiée déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> .</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">Ajoute l'écouteur spécifié à l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> de la source spécifiée.</summary>
      <param name="source" vsli:raw="The object with the event.">Objet avec l'événement.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Objet à ajouter comme écouteur.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Retourne un nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Supprime le gestionnaire d'événements spécifié de la source spécifiée.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Délégué qui gère l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">Supprime l'écouteur spécifié de l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> de la source spécifiée.</summary>
      <param name="source" vsli:raw="The object with the event.">Objet avec l'événement.</param>
      <param name="listener" vsli:raw="The listener to remove.">Écouteur à supprimer.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">Commence à écouter l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> sur la source spécifiée.</summary>
      <param name="source" vsli:raw="The object with the event.">Objet avec l'événement.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">Arrête d'écouter l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> sur la source spécifiée.</summary>
      <param name="source" vsli:raw="The object with the event.">Objet avec l'événement.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary vsli:raw="Provides information for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Fournit des informations sur l’événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.CurrentChangingEventArgs" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class with the specified &lt;paramref name=&quot;isCancelable&quot; /&gt; value.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> avec la valeur <paramref name="isCancelable" /> spécifiée.</summary>
      <param name="isCancelable" vsli:raw="A value that indicates whether the event is cancelable.">Valeur qui indique si l’événement peut être annulé.</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary vsli:raw="Gets or sets a value that indicates whether to cancel the event.">Obtient ou définit une valeur qui indique si l’événement doit être annulé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is to be canceled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’événement doit être annulé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="If the value of &lt;see cref=&quot;P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Si la valeur de <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> est <see langword="false" />.</exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary vsli:raw="Gets a value that indicates whether the event is cancelable.">Obtient une valeur qui indique si l’élément peut être annulé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is cancelable, otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si l'événement peut être annulé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Data.CollectionView.CurrentChanging&quot; /&gt; event.">Représente la méthode qui gère l’événement <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">Objet ayant déclenché l'événement.</param>
      <param name="e" vsli:raw="Information about the event.">Informations relatives à l'événement.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Fournit une implémentation <see cref="T:System.Windows.WeakEventManager" /> afin que vous puissiez utiliser le modèle « écouteur d'événements faible » pour joindre des écouteurs à l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Ajoute le gestionnaire d'événements spécifié, qui est appelé lorsque la source spécifiée déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> .</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Délégué qui gère l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">Ajoute l'écouteur spécifié à l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> de la source spécifiée.</summary>
      <param name="source" vsli:raw="The object with the event.">Objet avec l'événement.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Objet à ajouter comme écouteur.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Retourne un nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Supprime le gestionnaire d'événements spécifié de la source spécifiée.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Délégué qui gère l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">Supprime l'écouteur spécifié de l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> de la source spécifiée.</summary>
      <param name="source" vsli:raw="The object with the event.">Objet avec l'événement.</param>
      <param name="listener" vsli:raw="The listener to remove.">Écouteur à supprimer.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">Commence à écouter l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> sur la source spécifiée.</summary>
      <param name="source" vsli:raw="The object with the event.">Objet avec l'événement.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">Arrête d'écouter l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> sur la source spécifiée.</summary>
      <param name="source" vsli:raw="The object with the event.">Objet avec l'événement.</param>
    </member>
    <member name="T:System.ComponentModel.DependencyPropertyDescriptor">
      <summary vsli:raw="Provides an extension of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that accounts for the additional property characteristics of a dependency property.">Fournit une extension de <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui tient compte des caractéristiques de propriété supplémentaires d’une propriété de dépendance.</summary>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">Permet à d'autres objets d'être avertis en cas de modification de cette propriété.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">Composant pour lequel ajouter le gestionnaire.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">Délégué à ajouter en tant qu'écouteur.</param>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <summary vsli:raw="Gets the collection of attributes for this member.">Obtient la collection des attributs de ce membre.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; collection of attributes.">Collection d'attributs <see cref="T:System.ComponentModel.AttributeCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <summary vsli:raw="Returns whether resetting an object changes its value.">Retourne une valeur indiquant si la réinitialisation d'un objet modifie sa valeur.</summary>
      <param name="component" vsli:raw="The component to test for reset capability.">Composant dont la fonction de réinitialisation doit être testée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resetting the component changes its value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la réinitialisation du composant modifie sa valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <summary vsli:raw="Gets the name of the category that the member belongs to, as specified in the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;.">Obtient le nom de la catégorie à laquelle le membre appartient, comme spécifié dans <see cref="T:System.ComponentModel.CategoryAttribute" />.</summary>
      <returns vsli:raw="The name of the category to which the member belongs. If there is no &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;, the category name is set to the default category, &lt;see langword=&quot;Misc&quot; /&gt;.">Nom de la catégorie à laquelle le membre appartient. S'il n'existe aucun <see cref="T:System.ComponentModel.CategoryAttribute" />, le nom de la catégorie est celui de la catégorie par défaut, <see langword="Misc" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <summary vsli:raw="Gets the type of the component this property is bound to.">Obtient le type du composant auquel cette propriété est liée.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type of component this property is bound to. When &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt; are invoked, the object specified might be an instance of this type.">
        <see cref="T:System.Type" /> représentant le type du composant auquel cette propriété est liée. Lors de l'appel des méthodes <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> ou <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />, l'objet spécifié peut être une instance de ce type.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <summary vsli:raw="Gets the type converter for this property.">Obtient le convertisseur de type pour cette propriété.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is used to convert the &lt;see cref=&quot;T:System.Type&quot; /&gt; of this property.">
        <see cref="T:System.ComponentModel.TypeConverter" /> utilisé pour convertir le <see cref="T:System.Type" /> de cette propriété.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <summary vsli:raw="Returns the dependency property identifier.">Retourne l’identificateur de la propriété de dépendance.</summary>
      <returns vsli:raw="The dependency property identifier.">Identificateur de la propriété de dépendance.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <summary vsli:raw="Gets the description of the member, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;.">Obtient la description du membre, telle qu'elle est spécifiée dans <see cref="T:System.ComponentModel.DescriptionAttribute" />.</summary>
      <returns vsli:raw="The description of the member. If there is no &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;, the property value is set to the default, which is an empty string (&quot;&quot;).">Description du membre. S'il n'existe aucun <see cref="T:System.ComponentModel.DescriptionAttribute" />, la valeur de la propriété est la valeur par défaut, c'est-à-dire une chaîne vide ("").</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <summary vsli:raw="Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">Obtient ou définit un rappel utilisé par les concepteurs pour modifier la valeur effective d'une propriété de dépendance avant que la valeur de propriété de dépendance ne soit stockée dans le moteur de propriété de dépendance.</summary>
      <returns vsli:raw="A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">Rappel utilisé par les concepteurs pour modifier la valeur effective d'une propriété de dépendance avant que la valeur de propriété de dépendance ne soit stockée dans le moteur de propriété de dépendance.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <summary vsli:raw="Gets whether this member should be set only at design time, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">Obtient une valeur indiquant si ce membre ne doit être défini qu'au moment du design, comme spécifié dans <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this member should be set only at design time; &lt;see langword=&quot;false&quot; /&gt; if the member can be set during run time. If there is no &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;, the return value is the default, which is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce membre ne doit être défini qu'au moment du design ; <see langword="false" /> si le membre peut être défini pendant l'exécution. S'il n'existe aucun <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, la valeur de retour est la valeur par défaut, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <summary vsli:raw="Gets the name that can be displayed in a window, such as a Properties window.">Obtient le nom qui peut être affiché dans une fenêtre, telle qu'une fenêtre Propriétés.</summary>
      <returns vsli:raw="The name to display for the property.">Nom de la propriété à afficher.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; instances for equality.">Compare si deux instances <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> sont égales.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; to compare with the current instance.">
        <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> à comparer à l'instance actuelle.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les valeurs sont équivalentes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">Retourne un <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour un nom de propriété fourni.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">Nom enregistré d'une propriété de dépendance ou propriété jointe.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">
        <see cref="T:System.Type" /> de l'objet possédant la définition de la propriété.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">
        <see cref="T:System.Type" /> de l'objet pour lequel vous souhaitez définir la propriété.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Objet <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> demandé.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">Retourne un <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour un nom de propriété fourni.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">Nom enregistré d'une propriété de dépendance ou propriété jointe.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">
        <see cref="T:System.Type" /> de l'objet possédant la définition de la propriété.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">
        <see cref="T:System.Type" /> de l'objet pour lequel vous souhaitez définir la propriété.</param>
      <param name="ignorePropertyType" vsli:raw="Specifies to ignore the property type.">Demander d'ignorer le type de propriété.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Objet <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> demandé.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Retourne <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour le <see cref="T:System.ComponentModel.PropertyDescriptor" /> fourni.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to check.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> à vérifier.</param>
      <returns vsli:raw="If the property described by &lt;paramref name=&quot;property&quot; /&gt; is a dependency property, returns a valid &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;. Otherwise, returns a &lt;see langword=&quot;null&quot; /&gt;&lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Si la propriété décrite par <paramref name="property" /> est une propriété de dépendance, retourne un <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> valide. Sinon, retourne <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided dependency property and target type.">Retourne <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour un type de cible et une propriété de dépendance fournis.</summary>
      <param name="dependencyProperty" vsli:raw="The identifier for a dependency property.">Identificateur de la propriété de dépendance.</param>
      <param name="targetType" vsli:raw="The type of the object where the property is set.">Type de l'objet dans lequel la propriété est définie.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for the provided dependency property.">
        <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour la propriété de dépendance fournie.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt;.">Retourne <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</summary>
      <param name="instance" vsli:raw="A component to get the properties for.">Composant pour lequel obtenir les propriétés.</param>
      <param name="filter" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; to use as a filter.">Tableau de type <see cref="T:System.Attribute" /> à utiliser comme filtre.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; with the properties that match the specified attributes for the specified component.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> avec les propriétés qui correspondent aux attributs spécifiés pour le composant indiqué.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <summary vsli:raw="Gets an editor of the specified type.">Obtient un éditeur du type spécifié.</summary>
      <param name="editorBaseType" vsli:raw="The base type of editor, which is used to differentiate between multiple editors that a property supports.">Type de base de l'éditeur, utilisé pour différencier plusieurs éditeurs pris en charge par une propriété.</param>
      <returns vsli:raw="An instance of the requested editor type, or &lt;see langword=&quot;null&quot; /&gt; if an editor cannot be found.">Instance du type d'éditeur demandé, ou <see langword="null" /> si l'éditeur est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Retourne le code de hachage pour ce <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <summary vsli:raw="Returns the current value of the property on a component.">Retourne la valeur actuelle de la propriété d'un composant.</summary>
      <param name="component" vsli:raw="The component instance.">Instance du composant.</param>
      <returns vsli:raw="The requested value.">Valeur demandée.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <summary vsli:raw="Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.">Obtient une valeur indiquant si la propriété est enregistrée comme une propriété jointe et est utilisée à travers une utilisation de propriété jointe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété est une propriété jointe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <summary vsli:raw="Gets a value that indicates the value of the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; on the property.">Obtient une valeur indiquant la valeur de du <see cref="T:System.ComponentModel.BrowsableAttribute" /> de la propriété.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; was specified on the property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.ComponentModel.BrowsableAttribute" /> a été spécifié dans la propriété ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <summary vsli:raw="Gets a value indicating whether this property should be localized, as specified in the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">Obtient une valeur indiquant si cette propriété doit être localisée, comme spécifié dans <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is marked with the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt; constructor of the value true; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le membre est marqué avec le constructeur <see cref="T:System.ComponentModel.LocalizableAttribute" /> de la valeur true ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether this property is read-only.">Obtient une valeur indiquant si cette propriété est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <summary vsli:raw="Gets the metadata associated with the dependency property.">Obtient les métadonnées qui sont associées à la propriété de dépendance.</summary>
      <returns vsli:raw="The dependency property metadata.">Métadonnées de propriété de dépendance.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <summary vsli:raw="Gets the represented &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">Obtient le <see cref="T:System.Type" /> représenté de la propriété de dépendance.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">
        <see cref="T:System.Type" /> de la propriété de dépendance.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">Permet à d'autres objets d'être avertis en cas de modification de cette propriété.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">Composant pour lequel ajouter le gestionnaire.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">Délégué à ajouter en tant qu'écouteur.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <summary vsli:raw="Resets the value for this property of the component to the default value.">Rétablit la valeur par défaut pour la valeur de cette propriété du composant.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be reset to the default value.">Composant dont la valeur par défaut de la propriété doit être rétablie.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets the value of the component to a different value.">Affecte une autre valeur au composant.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be set.">Composant dont la valeur de la propriété doit être définie.</param>
      <param name="value" vsli:raw="The new value.">Nouvelle valeur.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value of this property needs to be persisted by serialization processes.">Indique si la valeur de cette propriété doit être rendue persistante par des processus de sérialisation.</summary>
      <param name="component" vsli:raw="The component with the property to be examined for persistence.">Composant possédant la propriété dont la persistance doit être examinée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property should be persisted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété doit être persistante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <summary vsli:raw="Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">Indique si les notifications de modification des valeurs pour cette propriété peuvent provenir de l'extérieur du descripteur de propriété, comme par exemple du composant lui-même, ou si les notifications proviendront seulement d'appels directs à la méthode <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if notifications for this property may originate from outside the property descriptor, such as from the component itself. &lt;see langword=&quot;false&quot; /&gt; if notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">
        <see langword="true" /> si les notifications pour cette propriété peuvent provenir de l'extérieur du descripteur de propriété, comme par exemple du composant lui-même. <see langword="false" /> si les notifications proviendront uniquement des appels directs à <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <summary vsli:raw="Converts the value of this instance to its equivalent string representation.">Convertit la valeur de cette instance en sa représentation sous forme de chaîne équivalente.</summary>
      <returns vsli:raw="Returns the &lt;see cref=&quot;P:System.ComponentModel.MemberDescriptor.Name&quot; /&gt; value.">Retourne la valeur <see cref="P:System.ComponentModel.MemberDescriptor.Name" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ErrorsChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the weak event listener pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Fournit une implémentation <see cref="T:System.Windows.WeakEventManager" /> afin que vous puissiez utiliser le modèle « écouteur d'événements faible » pour joindre des écouteurs à l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Ajoute le gestionnaire d'événements spécifié, qui est appelé lorsque la source spécifiée déclenche l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> .</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Délégué qui gère l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Retourne un nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Supprime le gestionnaire d'événements spécifié de la source spécifiée.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Délégué qui gère l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">Commence à écouter l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> sur la source spécifiée.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">Arrête d'écouter l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> sur la source spécifiée.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary vsli:raw="Provides an abstract base class for types that describe how to divide the items in a collection into groups.">Fournit une classe de base abstraite pour les types qui décrivent comment diviser les éléments d’une collection en groupes.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.GroupDescription" />.</summary>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.CustomSort">
      <summary vsli:raw="Gets or sets a custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">Récupère ou définit un comparateur personnalisé qui trie les groupes à l’aide d’un objet qui implémente <see cref="T:System.Collections.IComparer" />.</summary>
      <returns vsli:raw="A custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">Comparateur personnalisé qui trie les groupes à l’aide d’un objet qui implémente <see cref="T:System.Collections.IComparer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns the group name(s) for the given item.">Retourne le ou les noms de groupes pour l’élément donné.</summary>
      <param name="item" vsli:raw="The item to return group names for.">Élément pour lequel retourner les noms de groupes.</param>
      <param name="level" vsli:raw="The level of grouping.">Niveau de regroupement.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to supply to the converter.">
        <see cref="T:System.Globalization.CultureInfo" /> à fournir au convertisseur.</param>
      <returns vsli:raw="The group name(s) for the given item.">Le ou les noms de groupes pour l’élément donné.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary vsli:raw="Gets the collection of names that are used to initialize a group with a set of subgroups with the given names.">Obtient la collection des noms qui sont utilisés pour initialiser un groupe avec un ensemble de sous-groupes avec les noms donnés.</summary>
      <returns vsli:raw="The collection of names that are used to initialize a group with a set of subgroups with the given names.">Collection des noms qui sont utilisés pour initialiser un groupe avec un ensemble de sous-groupes avec les noms donnés.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the group name and the item name match such that the item belongs to the group.">Retourne une valeur qui indique si le nom du groupe et le nom de l’élément correspondent, ce qui signifie que l’élément appartient au groupe.</summary>
      <param name="groupName" vsli:raw="The name of the group to check.">Nom du groupe à vérifier.</param>
      <param name="itemName" vsli:raw="The name of the item to check.">Nom de l’élément à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the names match and the item belongs to the group; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les noms correspondent et que l’élément appartient au groupe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.GroupDescription.PropertyChanged&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" />.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">Arguments de l’événement déclenché.</param>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Se produit en cas de modification d'une valeur de propriété.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property on instances of this class.">Retourne une valeur qui indique si les processus de sérialisation doivent sérialiser la valeur effective de la propriété <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> au niveau des instances de cette classe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de la propriété <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> doit être sérialisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeSortDescriptions">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property on instances of this class.">Retourne une valeur qui indique si les processus de sérialisation doivent sérialiser la valeur effective de la propriété <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> au niveau des instances de cette classe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de la propriété <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> doit être sérialisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.SortDescriptions">
      <summary vsli:raw="Gets the collection of sort criteria in which to sort the groups.">Obtient la collection de critères de tri des groupes.</summary>
      <returns vsli:raw="The collection of sort criteria in which to sort the groups.">Collection de critères de tri des groupes.</returns>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Se produit en cas de modification d'une valeur de propriété.</summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary vsli:raw="Enables collections to have the functionalities of current record management, custom sorting, filtering, and grouping.">Permet aux collections de bénéficier des fonctionnalités de gestion, de tri personnalisé, de filtrage et de regroupement de l’enregistrement actif.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary vsli:raw="Gets a value that indicates whether this view supports filtering via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.Filter&quot; /&gt; property.">Obtient une valeur qui indique si cette vue prend en charge le filtrage par l’intermédiaire de la propriété <see cref="P:System.ComponentModel.ICollectionView.Filter" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view support filtering; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cette vue prend en charge le filtrage ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary vsli:raw="Gets a value that indicates whether this view supports grouping via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.GroupDescriptions&quot; /&gt; property.">Obtient une valeur qui indique si cette vue prend en charge le regroupement par l’intermédiaire de la propriété <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports grouping; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cette vue prend en charge le regroupement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary vsli:raw="Gets a value that indicates whether this view supports sorting via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.SortDescriptions&quot; /&gt; property.">Obtient une valeur qui indique si cette vue prend en charge le tri par l’intermédiaire de la propriété <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports sorting; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cette vue prend en charge le tri ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether a given item belongs to this collection view.">Retourne une valeur qui indique si un élément donné appartient à cette vue de collection.</summary>
      <param name="item" vsli:raw="The object to check.">Objet à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item belongs to this collection view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’élément appartient à cette vue de collection ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary vsli:raw="Gets or sets the cultural info for any operations of the view that may differ by culture, such as sorting.">Obtient ou définit les informations culturelles pour les opérations de la vue dont la culture peut être différente, telles que le tri.</summary>
      <returns vsli:raw="The culture to use during sorting.">Culture à utiliser pendant le tri.</returns>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary vsli:raw="When implementing this interface, raise this event after the current item has been changed.">Lors de l’implémentation de cette interface, déclenche cet événement après la modification de l’élément actif.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary vsli:raw="When implementing this interface, raise this event before changing the current item. Event handler can cancel this event.">Quand vous implémentez cette interface, déclenchez cet événement avant de modifier l’élément actuel. Le gestionnaire d’événements peut annuler cet événement.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary vsli:raw="Gets the current item in the view.">Obtient l'élément actif de la vue.</summary>
      <returns vsli:raw="The current item of the view or &lt;see langword=&quot;null&quot; /&gt; if there is no current item.">Élément actif de la vue, ou <see langword="null" /> s’il n’y a pas d’élément actif.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary vsli:raw="Gets the ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">Obtient la position ordinale de <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dans la vue.</summary>
      <returns vsli:raw="The ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">Position ordinale de <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dans la vue.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.">Entre dans un cycle différé que vous pouvez utiliser pour fusionner des modifications de la vue et retarder l’actualisation automatique.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">Objet <see cref="T:System.IDisposable" /> que vous pouvez utiliser pour supprimer l’objet appelant.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary vsli:raw="Gets or sets a callback used to determine if an item is suitable for inclusion in the view.">Obtient ou définit un rappel utilisé pour déterminer si un élément peut être inclus dans la vue.</summary>
      <returns vsli:raw="A method used to determine if an item is suitable for inclusion in the view.">Méthode utilisée pour déterminer si un élément peut être inclus dans la vue.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">Obtient une collection d’objets <see cref="T:System.ComponentModel.GroupDescription" /> qui décrivent comment les éléments de la collection sont regroupés dans la vue.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">Collection d'objets <see cref="T:System.ComponentModel.GroupDescription" /> qui décrivent comment les éléments de la collection sont regroupés dans la vue.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary vsli:raw="Gets the top-level groups.">Obtient les groupes de niveau supérieur.</summary>
      <returns vsli:raw="A read-only collection of the top-level groups or &lt;see langword=&quot;null&quot; /&gt; if there are no groups.">Collection en lecture seule des groupes de niveau supérieur ou <see langword="null" /> s’il n’y a pas de groupes.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection.">Obtient une valeur qui indique si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue est au-delà de la fin de la collection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue est au-delà de la fin de la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection.">Obtient une valeur qui indique si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue est au-delà du début de la collection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue est au-delà du début de la collection ; <see langword="false" />sinon,.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary vsli:raw="Returns a value that indicates whether the resulting view is empty.">Retourne une valeur qui indique si la vue résultante est vide.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting view is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la vue résultante est vide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary vsli:raw="Sets the specified item to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">Définit l'élément spécifié de façon à ce qu'il soit l'<see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue.</summary>
      <param name="item" vsli:raw="The item to set as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Élément à définir comme <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> résultant est dans la vue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary vsli:raw="Sets the first item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Définit le premier élément de la vue comme le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> obtenu est un élément de la vue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary vsli:raw="Sets the last item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Définit le dernier élément de la vue comme le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> résultant est un élément présent dans la vue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary vsli:raw="Sets the item after the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Définit l'élément qui suit le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dans la vue comme le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> obtenu est un élément de la vue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary vsli:raw="Sets the item at the specified index to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">Définit l'élément situé à l'index spécifié comme devant être le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue.</summary>
      <param name="position" vsli:raw="The index to set the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; to.">Index auquel affecter la valeur <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> obtenu est un élément de la vue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary vsli:raw="Sets the item before the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Définit l'élément qui vient avant l'<see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dans la vue en tant qu'<see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> obtenu est un élément de l’affichage ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary vsli:raw="Recreates the view.">Recrée la vue.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">Obtient une collection d’objets <see cref="T:System.ComponentModel.SortDescription" /> qui décrivent le mode de tri des éléments de la collection dans la vue.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">Collection d’objets <see cref="T:System.ComponentModel.SortDescription" /> qui décrivent le mode de tri des éléments de la collection dans la vue.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary vsli:raw="Returns the underlying collection.">Retourne la collection sous-jacente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; object that is the underlying collection.">Objet <see cref="T:System.Collections.IEnumerable" /> qui est la collection sous-jacente.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary vsli:raw="An interface that enables implementing collections to create a view to their data. Normally, user code does not call methods on this interface.">Interface qui active l'implémentation de collections pour créer une vue de leurs données. Normalement, le code utilisateur n'appelle pas de méthodes sur cette interface.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary vsli:raw="Creates a new view on the collection that implements this interface. Typically, user code does not call this method.">Crée une nouvelle vue de la collection qui implémente cette interface. En général, le code utilisateur n'appelle pas cette méthode.</summary>
      <returns vsli:raw="The newly created view.">Nouvelle vue créée.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewLiveShaping">
      <summary vsli:raw="Defines properties that enables sorting, grouping, and filtering on a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; in real time.">Définit des propriétés qui permettent de trier, regrouper et filtrer sur la base d'une <see cref="T:System.Windows.Data.CollectionView" /> en temps réel.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.">Obtient une valeur qui indique si la vue de collection prend en charge l’activation ou la désactivation du filtrage des données en temps réel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live filtering on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la vue de collection prend en charge l’activation ou l’activation du filtrage en direct ; dans le cas contraire, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.">Obtient une valeur qui indique si cette vue de collection prend en charge l'activation et la désactivation du groupage des données en temps réel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live grouping on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la vue de collection prend en charge l'activation et la désactivation du regroupement actif ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.">Obtient une valeur qui indique si cette vue de collection prend en charge l'activation et la désactivation du tri des données en temps réel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live sorting on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la vue de collection prend en charge l'activation et la désactivation du tri actif ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering data in real time is enabled.">Obtient ou définit une valeur qui indique si le filtrage des données en temps réel est activé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if filtering data in real time is enabled; &lt;see langword=&quot;false&quot; /&gt; if live filtering is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live filtering.">
        <see langword="true" /> si le filtrage des données en temps réel est activé ; <see langword="false" /> si le filtrage actif n'est pas activé ; <see langword="null" /> s'il ne peut pas être déterminé et si la vue de collection implémente le filtrage actif.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
      <summary vsli:raw="Gets or sets a value that indicates whether grouping data in real time is enabled.">Obtient ou définit une valeur qui indique si le groupage des données en temps réel est activé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if grouping data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live grouping is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live grouping.">
        <see langword="true" /> si le regroupement des données en temps réel est activé ; <see langword="false" /> si le regroupement actif n'est pas activé ; <see langword="null" /> s'il ne peut pas être déterminé et si la vue de collection implémente le regroupement actif.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
      <summary vsli:raw="Gets or sets a value that indicates whether sorting in real time is enabled.">Obtient ou définit une valeur qui indique si le tri en temps réel est activé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if sorting data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live sorting is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live sorting.">
        <see langword="true" /> si le tri des données en temps réel est activé ; <see langword="false" /> si le tri actif n'est pas activé ; <see langword="null" /> s'il ne peut pas être déterminé et si la vue de collection implémente le tri actif.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in filtering data in real time.">Obtient une collection de chaînes qui spécifient les propriétés qui participent au filtrage des données en temps réel.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in filtering data in real time.">Collection de chaînes qui spécifient les propriétés qui participent au filtrage des données en temps réel.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in grouping data in real time.">Obtient une collection de chaînes qui spécifient les propriétés qui participent au groupage des données en temps réel.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in grouping data in real time.">Collection de chaînes qui spécifient les propriétés qui participent au groupage des données en temps réel.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in sorting data in real time.">Obtient une collection de chaînes qui spécifient les propriétés qui participent au tri des données en temps réel.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in sorting data in real time.">Une collection de chaînes qui spécifient les propriétés qui participent au tri des données en temps réel.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to provide editing capabilities to a collection.">Définit les méthodes et propriétés qu'un <see cref="T:System.Windows.Data.CollectionView" /> implémente pour procurer des fonctionnalités d'édition à une collection.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary vsli:raw="Adds a new item to the collection.">Ajoute un nouvel élément à la collection.</summary>
      <returns vsli:raw="The new item that is added to the collection.">Nouvel élément ajouté à la collection.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary vsli:raw="Gets a value that indicates whether a new item can be added to the collection.">Obtient une valeur qui indique si un nouvel élément peut être ajouté à la collection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a new item can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un nouvel élément peut être ajouté à la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary vsli:raw="Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.">Obtient une valeur qui indique si la vue de collection peut ignorer les modifications en attente et restaurer les valeurs d'origine d'un objet modifié.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view can discard pending changes and restore the original values of an edited object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la vue de collection peut ignorer les modifications en attente et restaurer les valeurs d’origine d’un objet modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary vsli:raw="Ends the edit transaction and, if possible, restores the original value to the item.">Met fin à la transaction de modification et, si possible, restaure la valeur d’origine de l’élément.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary vsli:raw="Ends the add transaction and discards the pending new item.">Met fin à la transaction d'ajout et ignore le nouvel élément en attente.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary vsli:raw="Gets a value that indicates whether an item can be removed from the collection.">Obtient une valeur qui indique si un élément peut être supprimé de la collection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item can be removed from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un élément peut être supprimé de la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary vsli:raw="Ends the edit transaction and saves the pending changes.">Met fin à la transaction de modification et enregistre les modifications en attente.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary vsli:raw="Ends the add transaction and saves the pending new item.">Met fin à la transaction d'ajout et enregistre le nouvel élément en attente.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary vsli:raw="Gets the item that is being added during the current add transaction.">Obtient l'élément ajouté pendant la transaction d'ajout en cours.</summary>
      <returns vsli:raw="The item that is being added if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsAddingNew&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Élément qui est ajouté si <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> a la valeur <see langword="true" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary vsli:raw="Gets the item in the collection that is being edited.">Obtient l'élément de la collection qui est modifié.</summary>
      <returns vsli:raw="The item in the collection that is being edited if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsEditingItem&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Élément de la collection qui est modifié si <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> est <see langword="true" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary vsli:raw="Begins an edit transaction of the specified item.">Commence une transaction de modification de l'élément spécifié.</summary>
      <param name="item" vsli:raw="The item to edit.">Élément à modifier.</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary vsli:raw="Gets a value that indicates whether an add transaction is in progress.">Obtient une valeur qui indique si une transaction d'ajout est en cours.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an add transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une transaction d'ajout est en cours ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary vsli:raw="Gets a value that indicates whether an edit transaction is in progress.">Obtient une valeur qui indique si une transaction de modification est en cours.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an edit transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une transaction de modification est en cours ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary vsli:raw="Gets or sets the position of the new item placeholder in the collection view.">Obtient ou définit la position du nouvel espace réservé d'élément dans la vue de collection.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the position of the new item placeholder in the collection view.">L'une des valeurs d'énumération qui spécifie la position du nouvel espace réservé d'élément dans la vue de collection.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary vsli:raw="Removes the specified item from the collection.">Supprime l’élément spécifié de la collection.</summary>
      <param name="item" vsli:raw="The item to remove.">Élément à supprimer.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the item at the specified position from the collection.">Supprime de la collection l’élément situé à la position spécifiée.</summary>
      <param name="index" vsli:raw="The position of the item to remove.">Position de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the number of items in the collection view.">
        <paramref name="index" /> est inférieur à 0 ou supérieur au nombre d'éléments dans la vue de collection.</exception>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to enable specifying adding items of a specific type.">Définit les méthodes et les propriétés qu'un <see cref="T:System.Windows.Data.CollectionView" /> implémente pour permettre de spécifier des ajouts d'éléments d'un type spécifique.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <summary vsli:raw="Adds the specified object to the collection.">Ajoute l’objet spécifié à la collection.</summary>
      <param name="newItem" vsli:raw="The object to add to the collection.">Objet à ajouter à la collection.</param>
      <returns vsli:raw="The object that is added to the collection.">Objet  qui est ajouté à la collection.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <summary vsli:raw="Gets a value that indicates whether a specified object can be added to the collection.">Obtient une valeur qui indique si un objet spécifié peut être ajouté à la collection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a specified object can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un objet spécifié peut être ajouté à la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IItemProperties">
      <summary vsli:raw="Defines a property that provides information about an object's properties.">Définit une propriété qui fournit des informations à propos des propriétés d'un objet.</summary>
    </member>
    <member name="P:System.ComponentModel.IItemProperties.ItemProperties">
      <summary vsli:raw="Gets a collection that contains information about the properties that are available on the items in a collection.">Obtient une collection qui contient des informations à propos des propriétés disponibles sur les éléments dans une collection.</summary>
      <returns vsli:raw="A collection that contains information about the properties that are available on the items in a collection.">Collection qui contient des informations à propos des propriétés disponibles sur les éléments dans une collection.</returns>
    </member>
    <member name="T:System.ComponentModel.ItemPropertyInfo">
      <summary vsli:raw="Contains information about a property.">Contient des informations sur une propriété.</summary>
    </member>
    <member name="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ItemPropertyInfo&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ItemPropertyInfo" />.</summary>
      <param name="name" vsli:raw="The name of the property.">Nom de la propriété.</param>
      <param name="type" vsli:raw="The type of the property.">Type de la propriété.</param>
      <param name="descriptor" vsli:raw="An object that contains additional information about the property.">Objet qui contient des informations supplémentaires sur la propriété.</param>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <summary vsli:raw="Gets an object that contains additional information about the property.">Obtient un objet qui contient des informations supplémentaires sur la propriété.</summary>
      <returns vsli:raw="An object that contains additional information about the property.">Objet qui contient des informations supplémentaires sur la propriété.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Name">
      <summary vsli:raw="Gets the name of the property.">Obtient le nom de la propriété.</summary>
      <returns vsli:raw="The name of the property.">Nom de la propriété.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <summary vsli:raw="Gets the type of the property.">Obtient le type de la propriété.</summary>
      <returns vsli:raw="The type of the property.">Type de la propriété.</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary vsli:raw="Specifies where the placeholder for a new item appears in the collection.">Spécifie l’emplacement de l’espace réservé pour un nouvel élément dans la collection.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <summary vsli:raw="The placeholder for a new item appears at the beginning of the collection.  New items are at the beginning of the collection, after the new item placeholder.">L’espace réservé pour un nouvel élément est affiché au début de la collection.  Les nouveaux éléments figurent au début de la collection, après l’espace réservé de nouvel élément.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary vsli:raw="The placeholder for a new item appears at the end of the collection. New items are added at the end of the collection, before the new item placeholder.">L’espace réservé pour un nouvel élément est affiché à la fin de la collection. Les nouveaux éléments sont ajoutés à la fin de la collection, avant l’espace réservé de nouvel élément.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary vsli:raw="The collection does not use a new item placeholder. The position of items that are added depends on the underlying collection.  Usually, they are added at the end of the collection.">La collection n’utilise pas d’espace réservé pour les nouveaux éléments. La position des éléments ajoutés dépend de la collection sous-jacente.  En règle générale, ils sont ajoutés à la fin de la collection.</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Fournit une implémentation <see cref="T:System.Windows.WeakEventManager" /> afin que vous puissiez utiliser le modèle « écouteur d'événements faible » pour joindre des écouteurs à l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event for the specified property.">Ajoute le gestionnaire d'événements spécifié, qui est appelé lorsque la source spécifiée déclenche l'événement de <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> pour la propriété spécifiée.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Délégué qui gère l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Nom de la propriété qui existe sur la <paramref name="source" /> depuis laquelle écouter des modifications. Choisissez la valeur <see cref="F:System.String.Empty" /> pour lui affecter « n'importe quelle propriété ».</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">Plusieurs méthodes sont associées au <paramref name="handler" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Adds the specified listener to the list of listeners on the specified source.">Ajoute l'écouteur spécifié à la liste d'écouteurs sur la source spécifiée.</summary>
      <param name="source" vsli:raw="The object with the event.">Objet avec l'événement.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Objet à ajouter comme écouteur.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Nom de la propriété qui existe sur la <paramref name="source" /> depuis laquelle écouter des modifications. Choisissez la valeur <see cref="F:System.String.Empty" /> pour lui affecter « n'importe quelle propriété ».</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Retourne un nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes listeners that are no longer active from the data for the provided source.">Supprime des écouteurs qui ne sont plus actifs des données de la source fournie.</summary>
      <param name="source" vsli:raw="Source object to remove all listeners from.">Objet source duquel supprimer tous les écouteurs.</param>
      <param name="data" vsli:raw="The data to purge. This is expected to be a &lt;see cref=&quot;T:System.Collections.Specialized.HybridDictionary&quot; /&gt;.">Données à purger. Cela est supposé être un <see cref="T:System.Collections.Specialized.HybridDictionary" />.</param>
      <param name="purgeAll" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to stop listening and to completely remove all data.">Choisissez la valeur <see langword="true" /> pour cesser d'écouter et supprimer complètement toutes les données.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si certaines entrées ont été supprimées ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Supprime le gestionnaire d'événements spécifié de la source spécifiée.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Délégué qui gère l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Nom de la propriété qui existe sur la <paramref name="source" /> depuis laquelle arrêter l'écoute des modifications. Choisissez la valeur <see cref="F:System.String.Empty" /> pour lui affecter « n'importe quelle propriété ».</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">Plusieurs méthodes sont associées au <paramref name="handler" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Removes the specified listener from the list of listeners on the provided source.">Supprime l'écouteur spécifié de la liste d'écouteurs sur la source fournie.</summary>
      <param name="source" vsli:raw="The object to remove the listener from.">Objet duquel supprimer l'écouteur.</param>
      <param name="listener" vsli:raw="The listener to remove.">Écouteur à supprimer.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Nom de la propriété qui existe sur la <paramref name="source" /> depuis laquelle arrêter l'écoute des modifications. Choisissez la valeur <see cref="F:System.String.Empty" /> pour lui affecter « n'importe quelle propriété ».</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">Commence à écouter l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> sur la source fournie.</summary>
      <param name="source" vsli:raw="The object on which to start listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">Objet sur lequel commencer l'écoute pour <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">Arrête d'écouter l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> sur la source fournie.</summary>
      <param name="source" vsli:raw="The source object on which to stop listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">Objet source sur lequel arrêter l'écoute pour <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterAttribute">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method.">Spécifie les propriétés qui doivent être signalées par les descripteurs de type, en particulier la méthode <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</summary>
      <param name="filter" vsli:raw="The options that describe this property filter.">Options décrivant ce filtre de propriétés.</param>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Retourne une valeur indiquant si le <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> attribut .NET Framework actuel est égal à un objet spécifié.</summary>
      <param name="value" vsli:raw="The object to compare to this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">Objet à comparer à ce <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> spécifié est égal au <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <summary vsli:raw="Gets the filter options for this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">Obtient les options de filtrage pour ce <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> attribut .NET Framework.</summary>
      <returns vsli:raw="The property filter options.">Options de filtrage des propriétés.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">Retourne le code de hachage pour le <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> attribut .NET Framework actif.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">Valeur d’entier 32 bits signé.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the property filter options of the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute match the property filter options of the provided object.">Retourne une valeur indiquant si les options de filtrage des propriétés du <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> attribut .NET Framework actuel correspondent aux options de filtrage des propriétés de l'objet fourni.</summary>
      <param name="value" vsli:raw="The object to compare. This object is expected to be a &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">Objet à comparer. Cet objet est normalement un <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a match exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il y a correspondance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterOptions">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method. This enumeration is used to specify the value of the &lt;see cref=&quot;P:System.ComponentModel.PropertyFilterAttribute.Filter&quot; /&gt; property.">Spécifie les propriétés qui doivent être signalées par les descripteurs de type, en particulier la méthode <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />. Cette énumération est utilisée pour spécifier la valeur de la propriété <see cref="P:System.ComponentModel.PropertyFilterAttribute.Filter" />.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.All">
      <summary vsli:raw="Return all properties.">Retourne toutes les propriétés</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <summary vsli:raw="Return only those properties that are not valid given the current context of the object.">Retourne uniquement les propriétés qui ne sont pas valides compte tenu du contexte actuel de l’objet.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.None">
      <summary vsli:raw="Return no properties.">Ne retourne aucune propriété.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <summary vsli:raw="Return only those properties that have local values currently set.">Retourne uniquement les propriétés auxquelles des valeurs locales sont actuellement affectées.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <summary vsli:raw="Return only those properties whose local values are not set, or do not have properties set in an external expression store (such as binding or deferred resource).">Retourne uniquement les propriétés dont les valeurs locales ne sont pas définies ou n’ayant pas de propriétés affectées dans un magasin d’expressions externe (tel qu’une ressource de liaison ou différée).</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <summary vsli:raw="Return any property that is valid on the object in the current scope.">Retourne toute propriété valide sur l’objet dans la portée actuelle.</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary vsli:raw="Defines the direction and the property name to be used as the criteria for sorting a collection.">Définit la direction et le nom de propriété à utiliser comme critères de tri d'une collection.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; structure.">Initialise une nouvelle instance de la structure <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <param name="propertyName" vsli:raw="The name of the property to sort the list by. If the collection contains strings or value types, set this parameter to the empty string (&quot;&quot;).">Nom de la propriété sur la base de laquelle effectuer le tri de la liste.</param>
      <param name="direction" vsli:raw="The sort order.">Ordre de tri.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The &lt;paramref name=&quot;direction&quot; /&gt; parameter does not specify a valid value.">Le paramètre <paramref name="direction" /> ne spécifie pas une valeur valide.</exception>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether to sort in ascending or descending order.">Obtient ou définit une valeur qui indique s'il faut trier en ordre croissant ou décroissant.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; value to indicate whether to sort in ascending or descending order.">Valeur <see cref="T:System.ComponentModel.ListSortDirection" /> qui indique s'il faut trier en ordre croissant ou décroissant.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary vsli:raw="Compares the specified instance and the current instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; for value equality.">Compare l'instance spécifiée et l'instance actuelle de <see cref="T:System.ComponentModel.SortDescription" /> pour vérifier l'égalité des valeurs.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; instance to compare.">Instance de <see cref="T:System.ComponentModel.SortDescription" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; have the same values.">
        <see langword="true" /> si <paramref name="obj" /> et cette instance de <see cref="T:System.ComponentModel.SortDescription" /> ont la même valeur.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">Retourne le code de hachage de cette instance de la <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">Code de hachage de cette instance de la <see cref="T:System.ComponentModel.SortDescription" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this object is in an immutable state.">Obtient une valeur qui indique si cet objet est dans un état immuable.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object is in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet objet est en cours d'utilisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value equality.">Compare deux objets <see cref="T:System.ComponentModel.SortDescription" /> pour vérifier l'égalité de leur valeur.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">Première instance à comparer.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">Deuxième instance à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux objets sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value inequality.">Compare deux objets <see cref="T:System.ComponentModel.SortDescription" /> pour détecter s'ils présentent des valeurs différentes.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">Première instance à comparer.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">Deuxième instance à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ces valeurs sont différentes ; <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary vsli:raw="Gets or sets the property name being used as the sorting criteria.">Obtient ou définit le nom de propriété qui est utilisé comme critère de tri.</summary>
      <returns vsli:raw="The default value is null.">La valeur par défaut est null.</returns>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects.">Représente une collection d'objets <see cref="T:System.ComponentModel.SortDescription" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary vsli:raw="Removes all items from the collection.">Supprime tous les éléments de la collection.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">Se produit quand un élément est ajouté ou supprimé.</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary vsli:raw="Gets an empty and non-modifiable instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt;.">Obtient une instance vide et non modifiable de <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Inserts an item into the collection at the specified index.">Insère un élément dans la collection au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index where the &lt;paramref name=&quot;item&quot; /&gt; is inserted.">Index de base zéro où l’<paramref name="item" /> est inséré.</param>
      <param name="item" vsli:raw="The object to insert.">Objet à insérer.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary vsli:raw="Removes the item at the specified index in the collection.">Supprime l’élément à l’index spécifié dans la collection.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">Index de base zéro de l'élément à supprimer.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Replaces the element at the specified index.">Remplace l'élément à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to replace.">Index de base zéro de l'élément à remplacer.</param>
      <param name="item" vsli:raw="The new value for the element at the specified index.">Nouvelle valeur de l'élément à l'index spécifié.</param>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">Se produit quand un élément est ajouté ou supprimé.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceLevel">
      <summary vsli:raw="Describes the level of detail to trace about a particular object.">Décrit le niveau de détail de traçage relatif à un objet particulier.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.High">
      <summary vsli:raw="Traces all additional information.">Effectue le traçage de toutes les informations supplémentaires.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Low">
      <summary vsli:raw="Traces some additional information.">Effectue le traçage de certaines informations supplémentaires.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <summary vsli:raw="Traces a medium amount of additional information.">Effectue le traçage d'une quantité moyenne d'informations supplémentaires.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.None">
      <summary vsli:raw="Traces no available additional information.">N'effectue le traçage d'aucune information supplémentaire disponible.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceSources">
      <summary vsli:raw="Provides debug tracing support that is specifically targeted for Windows Presentation Foundation (WPF) applications.">Fournit la prise en charge du suivi du débogage spécifiquement ciblé pour les applications WPF (Windows Presentation Foundation).</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <summary vsli:raw="Gets an animation trace source.">Obtient une source de la trace de l'animation.</summary>
      <returns vsli:raw="An animation trace source.">Source de la trace de l'animation.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <summary vsli:raw="Gets a data-binding trace source.">Obtient une source de la trace de la liaison de données.</summary>
      <returns vsli:raw="A data-binding trace source.">Source de la trace de la liaison de données.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <summary vsli:raw="Gets a dependency property trace source.">Obtient la source de suivi d’une propriété de dépendance.</summary>
      <returns vsli:raw="A dependency property trace source.">Source de suivi d’une propriété de dépendance.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <summary vsli:raw="Gets a document trace source.">Obtient une source de la trace du document.</summary>
      <returns vsli:raw="A document trace source.">Source de la trace du document.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <summary vsli:raw="Gets a Freezable trace source.">Obtient une source de la trace Freezable.</summary>
      <returns vsli:raw="A Freezable trace source.">Source de la trace Freezable.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property for a specified element.">Obtient la valeur de la propriété jointe <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" /> pour un élément spécifié.</summary>
      <param name="element" vsli:raw="The element from which the property value is read.">Élément à partir duquel la valeur de la propriété est lue.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; property value for the element.">Valeur de la propriété <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" /> pour l’élément.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <summary vsli:raw="Gets an hwnd host trace source.">Obtient une source de suivi hôte hwnd.</summary>
      <returns vsli:raw="An hwnd host trace source.">Source de suivi hôte hwnd.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <summary vsli:raw="Gets a markup trace source.">Obtient une source de la trace de la balise.</summary>
      <returns vsli:raw="A markup trace source.">Source de la trace de la balise.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <summary vsli:raw="Gets a name scope trace source.">Obtient une source de la trace de la portée de nom.</summary>
      <returns vsli:raw="A name scope trace source.">Source de la trace de la portée de nom.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <summary vsli:raw="Refreshes trace sources, by forcing the app.config file to be re-read.">Actualise des sources de trace, en forçant la relecture du fichier app.config.</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <summary vsli:raw="Gets a resource dictionary trace source.">Obtient une source de la trace du dictionnaire de ressources.</summary>
      <returns vsli:raw="A resource dictionary trace source.">Source de la trace du dictionnaire de ressources.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <summary vsli:raw="Gets a routed event trace source.">Obtient une source de suivi d’événements routés.</summary>
      <returns vsli:raw="A routed event trace source.">Source de suivi d’événements routés.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <summary vsli:raw="Sets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property to a specified element.">Définit la valeur de la propriété attachée <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" /> sur un élément spécifié.</summary>
      <param name="element" vsli:raw="The element to which the attached property is written.">Élément dans lequel la propriété jointe est écrite.</param>
      <param name="traceLevel" vsli:raw="The needed &lt;see cref=&quot;T:System.Diagnostics.PresentationTraceLevel&quot; /&gt; value.">Valeur <see cref="T:System.Diagnostics.PresentationTraceLevel" /> nécessaire.</param>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <summary vsli:raw="Gets a shell trace source.">Obtient la source de la trace d'un interpréteur de commandes.</summary>
      <returns vsli:raw="A shell trace source.">Source de la trace d'un interpréteur de commandes.</returns>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property.">Identifie la propriété jointe <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" />.</summary>
    </member>
    <member name="T:System.IO.FileFormatException">
      <summary>Exception levée quand un fichier d’entrée ou un flux de données supposé se conformer à une certaine spécification de format de fichier est incorrect.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.IO.FileFormatException" />.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Crée une instance de la classe <see cref="T:System.IO.FileFormatException" /> et l’initialise avec des données sérialisées. Ce constructeur est appelé lors de la désérialisation pour reconstituer l’objet exception transmis sur un flux.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.IO.FileFormatException" /> avec un message d’erreur spécifié.</summary>
      <param name="message">Valeur <see cref="T:System.String" /> qui représente le message d’erreur.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>Crée une instance de la classe <see cref="T:System.IO.FileFormatException" /> avec un message d’erreur et un type d’exception spécifiés.</summary>
      <param name="message">Valeur <see cref="T:System.String" /> qui représente le message d’erreur.</param>
      <param name="innerException">Valeur de la propriété <see cref="P:System.Exception.InnerException" />, qui représente la cause de l’exception actuelle.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>Crée une nouvelle instance de la classe <see cref="T:System.IO.FileFormatException" /> avec une valeur d’URI source.</summary>
      <param name="sourceUri">Valeur <see cref="T:System.Uri" /> du fichier qui a provoqué cette erreur.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>Crée une nouvelle instance de la classe <see cref="T:System.IO.FileFormatException" /> avec une valeur d’URI source et un type d’exception.</summary>
      <param name="sourceUri">Valeur <see cref="T:System.Uri" /> du fichier qui a provoqué cette erreur.</param>
      <param name="innerException">Valeur de la propriété <see cref="P:System.Exception.InnerException" />, qui représente la cause de l’exception actuelle.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>Crée une nouvelle instance de la classe <see cref="T:System.IO.FileFormatException" /> avec une valeur d’URI source et un message d’erreur spécifié.</summary>
      <param name="sourceUri">Valeur <see cref="T:System.Uri" /> du fichier qui a provoqué cette erreur.</param>
      <param name="message">Valeur <see cref="T:System.String" /> qui représente le message d’erreur.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>Crée une nouvelle instance de la classe <see cref="T:System.IO.FileFormatException" /> avec une valeur d’URI source, un message d’erreur spécifié et un type d’exception.</summary>
      <param name="sourceUri">Valeur <see cref="T:System.Uri" /> du fichier qui a provoqué cette erreur.</param>
      <param name="message">Valeur <see cref="T:System.String" /> qui représente le message d’erreur.</param>
      <param name="innerException">Valeur de la propriété <see cref="P:System.Exception.InnerException" />, qui représente la cause de l’exception actuelle.</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à l'aide du nom de fichier et d'autres informations se rapportant à l'exception.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>Obtient le nom d’un fichier ayant provoqué <see cref="T:System.IO.FileFormatException" />.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui représente le nom du fichier ayant provoqué l'exception.</returns>
    </member>
    <member name="T:System.IO.Packaging.CertificateEmbeddingOption">
      <summary vsli:raw="Specifies the location where the X.509 certificate that is used in signing is stored.">Spécifie l’emplacement où est stocké le certificat X.509 utilisé dans la signature.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart">
      <summary vsli:raw="The certificate is embedded in its own &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">Le certificat est incorporé dans son propre <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart">
      <summary vsli:raw="The certificate is embedded in the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SignaturePart&quot; /&gt; that is created for the signature being added.">Le certificat est incorporé dans le <see cref="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" /> qui est créé pour la signature ajoutée.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded">
      <summary vsli:raw="The certificate in not embedded in the package.">Le certificat n’est pas incorporé dans le package.</summary>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>Spécifie le niveau de compression pour le contenu qui est stocké dans un <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>La compression est optimisée pour les performances.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>La compression est optimisée pour la taille.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>La compression est optimisée pour atteindre un équilibre entre la taille et les performances.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>La compression est désactivée.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>La compression est optimisée pour de hautes performances.</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptedPackageEnvelope">
      <summary vsli:raw="Represents an OLE compound file that contains an encrypted package.">Représente un fichier composé OLE qui contient un package chiffré.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
      <summary vsli:raw="Closes the encrypted package and the OLE compound file that holds it.">Ferme le package chiffré et le fichier composé OLE qui le contient.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; on the specified stream.">Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> sur le flux de données spécifié.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">Flux de données sur lequel créer le fichier.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Licence de publication incorporée dans le fichier composé.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Objet <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> nouvellement créé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> ne fournit pas d'accès en lecture/écriture.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and gives it the specified file name.">Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> et lui donne le nom de fichier spécifié.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">Nom du fichier composé OLE.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Licence de publication incorporée dans le fichier composé.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Objet <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> nouvellement créé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; (on the specified stream) that uses the specified unencrypted package as its content.">Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (sur le flux de données spécifié) qui utilise le package non chiffré spécifié comme son contenu.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">Flux de données sur lequel créer le fichier.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">Flux de données qui représente le package non chiffré existant.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Licence de publication incorporée dans le fichier composé.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Objet <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> nouvellement créé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> ou <paramref name="packageStream" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> ne fournit pas d'accès en lecture/écriture.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that uses the specified unencrypted package as its content, and gives it the specified file name.">Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> qui utilise le package non chiffré spécifié comme son contenu et lui donne le nom de fichier spécifié.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">Nom du fichier composé OLE.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">Flux de données qui représente le package non chiffré existant.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Licence de publication incorporée dans le fichier composé.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Objet <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> nouvellement créé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" /> ou <paramref name="packageStream" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</param>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
      <summary vsli:raw="Gets a value that specifies whether the file was opened with access to read, write, or both.">Obtient une valeur qui spécifie si le fichier s'est ouvert avec accès en lecture, en écriture ou les deux.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; value that was used to open the file.">Valeur <see cref="T:System.IO.FileAccess" /> utilisée pour ouvrir le fichier.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
      <summary vsli:raw="Flush the stream for both the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and its package content.">Videz le flux de données pour l'<see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> et le contenu de son package à la fois.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
      <summary vsli:raw="Gets the encrypted package inside the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Obtient le package chiffré à l'intérieur de l'<see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; in the envelope.">
        <see cref="T:System.IO.Packaging.Package" /> dans l'enveloppe.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
      <summary vsli:raw="Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.">Obtient une valeur qui spécifie si le flux de données spécifié est un fichier composé OLE avec un flux de données de package chiffré.</summary>
      <param name="stream" vsli:raw="The stream that is tested.">Flux de données testé.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified stream is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le flux de données spécifié est un fichier composé OLE avec un flux de données de package chiffré ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
      <summary vsli:raw="Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.">Obtient une valeur qui spécifie si le fichier spécifié est un fichier composé OLE avec un flux de données de package chiffré.</summary>
      <param name="fileName" vsli:raw="The file that is tested.">Fichier testé.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified file is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le fichier spécifié est un fichier composé OLE avec un flux de données de package chiffré ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
      <summary vsli:raw="Open the encrypted package in the specified stream.">Ouvrez le package chiffré dans le flux de données spécifié.</summary>
      <param name="envelopeStream" vsli:raw="The stream containing the encrypted package.">Flux de données qui contient le package chiffré.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ouverte.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
      <summary vsli:raw="Open the encrypted package in the specified file as read only and unshared.">Ouvrez uniquement le package chiffré dans le fichier spécifié en lecture seule et sans partage.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">Fichier contenant le package chiffré.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ouverte.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
      <summary vsli:raw="Open the encrypted package in the specified file as unshared and with the specified access.">Ouvre uniquement le package chiffré dans le fichier spécifié avec l'accès spécifié et sans partage.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">Fichier contenant le package chiffré.</param>
      <param name="access" vsli:raw="The type of access.">Type d'accès.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ouverte.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
      <summary vsli:raw="Open the encrypted package in the specified file and gives it the specified access and sharing.">Ouvre le package chiffré dans le fichier spécifié et lui donne l'accès et le niveau de partage spécifié.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">Fichier contenant le package chiffré.</param>
      <param name="access" vsli:raw="The type of access.">Type d'accès.</param>
      <param name="sharing" vsli:raw="The type of sharing.">Type de partage.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ouverte.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
      <summary vsli:raw="Gets the core package properties (such as Title and Subject) of the rights managed document.">Obtient les propriétés principales de package (telles que le titre et le sujet) du document managé par des droits.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; for the package.">
        <see cref="T:System.IO.Packaging.PackageProperties" /> pour le package.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
      <summary vsli:raw="Gets the rights management information stored in the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;; specifically, the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;s stored in the OLE compound file that embodies the rights-management protected package.">Obtient les informations de gestion des droits stockées dans <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ; en particulier, la <see cref="T:System.Security.RightsManagement.PublishLicense" /> et la <see cref="T:System.Security.RightsManagement.UseLicense" /> stockées dans le fichier composé OLE qui personnifie le package protégé de gestion des droits.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.RightsManagementInformation&quot; /&gt; for the package.">
        <see cref="T:System.IO.Packaging.RightsManagementInformation" /> pour le package.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
      <summary vsli:raw="Gets an object that provides access to the compound file streams outside the encrypted package.">Obtient un objet qui fournit l'accès au flux de données du fichier composé à l'extérieur du package chiffré.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; representing streams in the OLE compound file that are outside the encrypted package.">
        <see cref="T:System.IO.Packaging.StorageInfo" /> représentant les flux de données dans le fichier composé OLE qui sont à l'extérieur du package chiffré.</returns>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>Spécifie l'option de chiffrement pour les parties d'un <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>Pas de chiffrement.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>Chiffrement pris en charge à travers la gestion des droits.</summary>
    </member>
    <member name="T:System.IO.Packaging.InvalidSignatureEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent&quot; /&gt; that is raised when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; detects an invalid signature.">Représente la méthode qui gère l'<see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" /> déclenché lorsque <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> détecte une signature non valide.</summary>
      <param name="sender" vsli:raw="The invalid &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; source of the event.">Source <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> de l'événement non valide.</param>
      <param name="e" vsli:raw="The event data.">Données d'événement.</param>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>Représente un conteneur qui peut stocker plusieurs objets de données.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.Package" /> qui utilise un <see cref="T:System.IO.FileAccess" /> donné.</summary>
      <param name="openFileAccess">Autorisations E/S de fichier pour le package.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de <paramref name="openFileAccess" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>Enregistre et ferme le package ainsi que tout flux sous-jacent des composants.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>Crée un nouveau composant non compressé avec un URI et un type de contenu donnés.</summary>
      <param name="partUri">URI (Uniform Resource Identifier) du nouveau composant.</param>
      <param name="contentType">Type de contenu du flux de données.</param>
      <returns>Nouveau composant créé.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ou <paramref name="contentType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n’est pas un URI de <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
      <exception cref="T:System.InvalidOperationException">Un composant  avec le <paramref name="partUri" /> spécifié est déjà présent dans le package.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule (un nouveau composant ne peut pas être ajouté).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Crée un nouveau composant avec un URI, un type de contenu et une option de compression donnés.</summary>
      <param name="partUri">URI du nouveau composant.</param>
      <param name="contentType">Type de contenu du flux de données.</param>
      <param name="compressionOption">Option de compression pour le flux de données, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> ou compression <see cref="F:System.IO.Packaging.CompressionOption.Normal" />.</param>
      <returns>Nouveau composant créé.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ou <paramref name="contentType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n’est pas un URI (Uniform Resource Identifier) de <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
      <exception cref="T:System.InvalidOperationException">Un composant  avec le <paramref name="partUri" /> spécifié est déjà présent dans le package.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <paramref name="compressionOption" /> n'est pas valide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule (un nouveau composant ne peut pas être ajouté).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>En cas de substitution dans une classe dérivée, crée un nouveau composant dans le package.</summary>
      <param name="partUri">URI (Uniform Resource Identifier) du composant en cours de création.</param>
      <param name="contentType">Type de contenu du flux de données.</param>
      <param name="compressionOption">Option de compression pour le flux de données.</param>
      <returns>Composant créé.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Crée une relation au niveau du package avec un composant avec URI, mode cible et type de relation donnés.</summary>
      <param name="targetUri">URI (Uniform Resource Identifier) du composant cible.</param>
      <param name="targetMode">Indique si le composant cible est <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> au package.</param>
      <param name="relationshipType">URI qui définit de façon unique le rôle de la relation.</param>
      <returns>Relation au niveau du package avec le composant spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> ou <paramref name="relationshipType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le composant <paramref name="targetUri" /> est un <see cref="T:System.IO.Packaging.PackageRelationship" />, ou <paramref name="targetMode" /> est <see cref="F:System.IO.Packaging.TargetMode.Internal" /> et <paramref name="targetUri" /> est un URI absolu.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de <paramref name="targetMode" /> n'est pas valide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Crée une relation au niveau du package avec un composant avec URI, mode cible, type de relation et identificateur (ID) donnés.</summary>
      <param name="targetUri">URI (Uniform Resource Identifier) du composant cible.</param>
      <param name="targetMode">Indique si le composant cible est <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> au package.</param>
      <param name="relationshipType">URI qui définit de façon unique le rôle de la relation.</param>
      <param name="id">Identificateur XML unique.</param>
      <returns>Relation au niveau du package avec le composant spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> ou <paramref name="relationshipType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le composant <paramref name="targetUri" /> est un <see cref="T:System.IO.Packaging.PackageRelationship" />, ou <paramref name="targetMode" /> est <see cref="F:System.IO.Packaging.TargetMode.Internal" /> et <paramref name="targetUri" /> est un URI absolu.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de <paramref name="targetMode" /> n'est pas valide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide; ou bien un composant avec l'<paramref name="id" /> spécifié est déjà présent dans le package.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>Supprime du package un composant avec un URI donné.</summary>
      <param name="partUri">URI du composant à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n’est pas un URI de <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>En cas de substitution dans une classe dérivée, supprime un composant avec un URI donné.</summary>
      <param name="partUri">
        <see cref="P:System.IO.Packaging.PackagePart.Uri" /> du <see cref="T:System.IO.Packaging.PackagePart" /> à supprimer.</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>Supprime une relation au niveau du package.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> du <see cref="T:System.IO.Packaging.PackageRelationship" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>Vide et enregistre le contenu de tous les composants et relations, ferme le package et libère toutes les ressources.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>Obtient le paramètre d'accès au fichier pour le package.</summary>
      <returns>Une des valeurs <see cref="T:System.IO.FileAccess" /> : <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" /> ou <see cref="F:System.IO.FileAccess.ReadWrite" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>Enregistre le contenu de tous les composants et relations contenus dans le package.</summary>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule et ne peut pas être modifié.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>En cas de substitution dans une classe dérivée, enregistre le contenu de tous les composants et relations dans le magasin de classes dérivées.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>Retourne le composant avec un URI donné.</summary>
      <param name="partUri">URI (Uniform Resource Identifier) du composant à retourner.</param>
      <returns>Composant avec le <paramref name="partUri" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n’est pas un URI (Uniform Resource Identifier) de <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
      <exception cref="T:System.InvalidOperationException">Un composant avec le <paramref name="partUri" /> spécifié n'est pas dans le package.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>En cas de substitution dans une classe dérivée, retourne le composant adressé par un URI donné.</summary>
      <param name="partUri">URI (Uniform Resource Identifier) du composant à récupérer.</param>
      <returns>Le composant demandé; ou <see langword="null" />, si un composant avec le <paramref name="partUri" /> spécifié n'est pas dans le package.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>Retourne une collection de tous les composants dans le package.</summary>
      <returns>Collection de tous les éléments <see cref="T:System.IO.Packaging.PackagePart" /> contenus dans le package.</returns>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>Lors d'une substitution dans une classe dérivée, retourne un tableau contenant tous les composants dans le package.</summary>
      <returns>Tableau de tous les composants contenus dans le package.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>Retourne la relation au niveau du package avec un identificateur donné.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> de la relation à retourner.</param>
      <returns>Relation au niveau du package avec l'<paramref name="id" />spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une relation avec l'<paramref name="id" /> spécifié n'est pas dans le package.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>Retourne une collection de toutes les relations au niveau du package.</summary>
      <returns>Collection de toutes les relations au niveau du package contenues dans le package.</returns>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>Retourne une collection de toutes les relations au niveau du package correspondant à un <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> donné.</summary>
      <param name="relationshipType">
        <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> à faire correspondre et à retourner dans la collection.</param>
      <returns>Collection de relations au niveau du package correspondant au <paramref name="relationshipType" />spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> est une chaîne vide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>Ouvre un package sur un flux de données E/S donné.</summary>
      <param name="stream">Flux E/S sur lequel le package doit être ouvert.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Le package à ouvrir requiert une autorisation de lecture ou de lecture/écriture et le <paramref name="stream" /> spécifié est en écriture seule ; ou bien le package à ouvrir requiert une autorisation d'écriture ou de lecture/écriture et le <paramref name="stream" /> spécifié est en lecture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>Ouvre un package avec un flux de données E/S et un mode de fichier donnés.</summary>
      <param name="stream">Flux E/S sur lequel le package doit être ouvert.</param>
      <param name="packageMode">Mode de fichier dans lequel le package doit être ouvert.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <paramref name="packageMode" /> n'est pas valide.</exception>
      <exception cref="T:System.IO.IOException">Le package à ouvrir requiert une autorisation de lecture ou de lecture/écriture et le <paramref name="stream" /> spécifié est en écriture seule ; ou bien le package à ouvrir requiert une autorisation d'écriture ou de lecture/écriture et le <paramref name="stream" /> spécifié est en lecture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Ouvre un package avec un flux de données E/S, un mode de fichier et un paramètre d'accès au fichier donnés.</summary>
      <param name="stream">Flux E/S sur lequel le package doit être ouvert.</param>
      <param name="packageMode">Mode de fichier dans lequel le package doit être ouvert.</param>
      <param name="packageAccess">Chemin d'accès dans lequel le package doit être ouvert.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de <paramref name="packageMode" /> ou <paramref name="packageAccess" /> n'est pas valide.</exception>
      <exception cref="T:System.IO.IOException">Le package à ouvrir requiert une autorisation de lecture ou de lecture/écriture et le <paramref name="stream" /> spécifié est en écriture seule ; ou bien, le package à ouvrir requiert une autorisation d'écriture ou de lecture/écriture et le <paramref name="stream" /> spécifié est en lecture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>Ouvre un package à un chemin d'accès et nom de fichier donnés.</summary>
      <param name="path">Nom et chemin d'accès du package.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>Ouvre un package à un chemin d'accès donné au moyen d'un mode de fichier donné.</summary>
      <param name="path">Nom et chemin d'accès du package.</param>
      <param name="packageMode">Mode de fichier dans lequel le package doit être ouvert.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur pour <paramref name="packageMode" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Ouvre un package à un chemin d'accès donné à l'aide d'un mode de fichier et d'un paramètre d'accès au fichier donnés.</summary>
      <param name="path">Nom et chemin d'accès du package.</param>
      <param name="packageMode">Mode de fichier dans lequel le package doit être ouvert.</param>
      <param name="packageAccess">Chemin d'accès dans lequel le package doit être ouvert.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de <paramref name="packageMode" /> ou <paramref name="packageAccess" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Ouvre un package à un chemin d'accès donné à l'aide d'un mode de fichier, d'un chemin d'accès et d'un paramètre de partage de fichier donnés.</summary>
      <param name="path">Nom et chemin d'accès du package.</param>
      <param name="packageMode">Mode de fichier dans lequel le package doit être ouvert.</param>
      <param name="packageAccess">Chemin d'accès dans lequel le package doit être ouvert.</param>
      <param name="packageShare">Mode de partage de fichier dans lequel le package doit être ouvert.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de <paramref name="packageMode" />, <paramref name="packageAccess" /> ou <paramref name="packageShare" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>Obtient les propriétés principales du package.</summary>
      <returns>Propriétés principales du package.</returns>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>Indique si un composant avec un URI donné est dans le package.</summary>
      <param name="partUri">Objet <see cref="T:System.Uri" /> du composant à vérifier.</param>
      <returns>
        <see langword="true" /> si un composant avec le <paramref name="partUri" /> spécifié se trouve dans le package ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n’est pas un URI (Uniform Resource Identifier) de <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule (impossible de lire les informations).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>Indique si une relation au niveau du package avec un ID donné est contenue dans le package.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> de la relation à vérifier.</param>
      <returns>
        <see langword="true" /> si une relation au niveau du package avec l'<paramref name="id" /> spécifié se trouve dans le package ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>Ce membre prend en charge l'infrastructure Windows Presentation Foundation (WPF) et n'est pas conçu pour l'utilisation de l'application.  Utilisez plutôt la méthode de type sécurisé <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignature">
      <summary vsli:raw="Represents a digital signature that is applied to a set of package parts and relationships.">Représente une signature numérique appliquée à un ensemble de relations et de parties de package.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption">
      <summary vsli:raw="Gets the X.509 certificate embedding option.">Obtient l’option d’incorporation du certificat X.509.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values that specifies the option for the digital signature.">Une des valeurs de <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> spécifiant l’option pour la signature numérique.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
      <summary vsli:raw="Returns an ordered list of the &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt; operations applied to a given part.">Retourne une liste ordonnée des opérations <see cref="T:System.Security.Cryptography.Xml.Transform" /> appliquées à une partie donnée.</summary>
      <param name="partName" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to return the transform list for.">
        <see cref="T:System.Uri" /> de la <see cref="T:System.IO.Packaging.PackagePart" /> pour laquelle retourner la liste transform.</param>
      <returns vsli:raw="An ordered list of URI strings, such as &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&quot; /&gt; or &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;, that represents the canonical XML transformations applied to the part with the given &lt;paramref name=&quot;partName&quot; /&gt; URI.">Liste ordonnée de chaînes d'URI, telles que <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> ou <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />, représentant les transformations XML canoniques appliquées à la partie avec l'URI <paramref name="partName" /> donné.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signature">
      <summary vsli:raw="Gets or sets the XML digital signature.">Obtient ou définit la signature numérique XML.</summary>
      <returns vsli:raw="The XML digital signature.">Signature numérique XML.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; that contains the signature.">Obtient la <see cref="T:System.IO.Packaging.PackagePart" /> qui contient la signature.</summary>
      <returns vsli:raw="The package part that contains the signature.">Le partie du package qui contient la signature.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
      <summary vsli:raw="Gets the URI string that identifies the signature type.">Obtient la chaîne d’URI qui identifie le type de signature.</summary>
      <returns vsli:raw="A URI string that identifies the signature type. The default is &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;.">Chaîne d’URI qui identifie le type de signature. La valeur par défaut est <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue">
      <summary vsli:raw="Gets the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">Obtient la valeur de hachage chiffrée de la <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</summary>
      <returns vsli:raw="A byte array that contains the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">Tableau d'octets contenant la valeur de hachage chiffrée de la <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
      <summary vsli:raw="Gets a collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects signed with the signature.">Obtient une collection de tous les objets <see cref="T:System.IO.Packaging.PackagePart" /> signée avec la signature.</summary>
      <returns vsli:raw="A collection that contains all the package parts signed with the signature.">Collection contenant toutes les parties de package signées avec la signature.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
      <summary vsli:raw="Gets the list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">Obtient la liste des parties <see cref="T:System.IO.Packaging.PackageRelationship" /> signées avec la signature.</summary>
      <returns vsli:raw="The list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">Liste des parties <see cref="T:System.IO.Packaging.PackageRelationship" /> signées avec la signature.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signer">
      <summary vsli:raw="Gets the X.509 certificate of the signer.">Obtient le certificat X.509 du signataire.</summary>
      <returns vsli:raw="The digital certificate of the signer, or &lt;see langword=&quot;null&quot; /&gt; if the certificate is not stored in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Certificat numérique du signataire, ou <see langword="null" /> si le certificat n’est pas stocké dans <see cref="T:System.IO.Packaging.Package" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SigningTime">
      <summary vsli:raw="Gets the date and time that the signature was created.">Obtient la date et l'heure de création de la signature.</summary>
      <returns vsli:raw="The date and time that the signature was created.">Date et heure de création de la signature.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat">
      <summary vsli:raw="Gets the format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">Obtient le format de la date et de l'heure retournées par la propriété <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
      <returns vsli:raw="The format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">Format de la date et de l'heure retournées par la propriété <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify">
      <summary vsli:raw="Verifies the digital signature against an X.509 certificate.">Vérifie la signature numérique par rapport à un certificat X.509.</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> si la vérification a réussi ; sinon, l’une des valeurs <see cref="T:System.IO.Packaging.VerifyResult" /> qui identifie un problème.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies the digital signature against a given X.509 certificate.">Vérifie la signature numérique par rapport à un certificat X.509 donné.</summary>
      <param name="signingCertificate" vsli:raw="The signer's X.509 certificate to verify the digital signature against.">Certificat X.509 du signataire par rapport auquel la signature numérique doit être vérifiée.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> si la vérification a réussi ; sinon, l’une des valeurs <see cref="T:System.IO.Packaging.VerifyResult" /> qui identifie un problème.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignatureManager">
      <summary vsli:raw="Provides a utility class for the creation and verification of digital signatures in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Fournit une classe utilitaire pour la création et la vérification de signatures numériques dans un <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignatureManager&quot; /&gt; class for use with a specified &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> à utiliser avec le <see cref="T:System.IO.Packaging.Package" /> spécifié.</summary>
      <param name="package" vsli:raw="The package associated with this signature manager.">Package associé à ce gestionnaire de signature.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption">
      <summary vsli:raw="Gets or sets the X.509 certificate embedding option used by the &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})&quot; /&gt; method to digitally sign package parts.">Obtient ou définit l’option d’incorporation du certificat X.509 utilisée par la méthode <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> pour signer numériquement des parties de package.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
      <summary vsli:raw="Countersigns all the signatures in the package with a user-selected X.509 certificate.">Contresigne toutes les signatures dans le package avec un certificat X.509 sélectionné par l’utilisateur.</summary>
      <returns vsli:raw="The signature that was added as a countersign; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be located or the user canceled the certificate selection dialog.">Signature qui a été ajoutée comme contre-signature ; ou <see langword="null" /> si aucun certificat n’a été trouvé ou si l’utilisateur a annulé la boîte de dialogue de sélection de certificat.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Countersigns all the signatures in the package with a specified X.509 certificate.">Contresigne toutes les signatures dans le package avec un certificat X.509 spécifié.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to add as a countersign signature.">Certificat X.509 à ajouter comme contre-signature.</param>
      <returns vsli:raw="The signature that was added as a countersign.">Signature ajoutée comme contre-signature.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;certificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="certificate" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Countersigns a list of signatures with a given X.509 certificate.">Contresigne une liste de signatures avec un certificat X.509 donné.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to countersign each of the specified &lt;paramref name=&quot;signatures&quot; /&gt;.">Certificat X.509 utilisé pour contresigner chacun des <paramref name="signatures" /> spécifiés.</param>
      <param name="signatures" vsli:raw="The list of signatures to countersign.">Liste des signatures à contresigner.</param>
      <returns vsli:raw="The digital signature used to countersign each of the &lt;paramref name=&quot;signatures&quot; /&gt;.">Signature numérique utilisée pour contresigner chacun des <paramref name="signatures" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;certificate&quot; /&gt; or &lt;paramref name=&quot;signatures&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="certificate" /> ou le paramètre <paramref name="signatures" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The package contains no signed &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects.">Le package ne contient pas d’objets <see cref="T:System.IO.Packaging.PackagePart" /> signés.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The package contains no &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; parts.">Le package ne contient pas de composants <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> signés.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm">
      <summary vsli:raw="Gets a URI string that identifies the default hash algorithm used to create and verify signatures.">Obtient une chaîne d’URI qui identifie l’algorithme de hachage par défaut utilisé pour créer et vérifier des signatures.</summary>
      <returns vsli:raw="A URI string that identifies the default hash algorithm used to create and verify signatures.">Chaîne d’URI qui identifie l’algorithme de hachage par défaut utilisé pour créer et vérifier des signatures.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
      <summary vsli:raw="Returns the digital signature for a given signature uniform resource identifier (URI).">Retourne la signature numérique pour un URI (Uniform Resource Identifier) de signature donné.</summary>
      <param name="signatureUri" vsli:raw="The URI of the digital signature to return.">URI de la signature numérique à retourner.</param>
      <returns vsli:raw="The digital signature for the specified &lt;paramref name=&quot;signatureUri&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if a signature for the given &lt;paramref name=&quot;signatureUri&quot; /&gt; cannot be found.">Signature numérique du <paramref name="signatureUri" /> spécifié ou <see langword="null" /> si une signature pour le <paramref name="signatureUri" /> donné ne peut pas être trouvée.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm">
      <summary vsli:raw="Gets or sets the URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">Obtient ou définit l’identificateur URI de l’instance <see cref="T:System.Security.Cryptography.HashAlgorithm" /> utilisée pour créer et vérifier des signatures.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Xml.SignedXml&quot; /&gt; URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">Identificateur URI <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> pour l’instance <see cref="T:System.Security.Cryptography.HashAlgorithm" /> utilisée pour créer et vérifier des signatures.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string for the URI to set is &lt;see langword=&quot;null&quot; /&gt;.">La chaîne de l’URI à définir est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The string for the URI to set is empty.">La chaîne de l’URI à définir est vide.</exception>
    </member>
    <member name="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; encounters an invalid signature.">Se produit lorsque <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> rencontre une signature non valide.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned">
      <summary vsli:raw="Gets a value that indicates whether the package contains any signatures.">Obtient une valeur indiquant si le package contient des signatures.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the package contains signatures; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le package contient des signatures ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow">
      <summary vsli:raw="Gets or sets a handle to the parent window for displaying a certificate selection dialog box.">Obtient ou définit un handle vers la fenêtre parente pour l'affichage d'une boîte de dialogue de sélection de certificat.</summary>
      <returns vsli:raw="The handle of the parent window to use to display the certificate selection dialog box.">Handle de la fenêtre parente à utiliser pour afficher la boîte de dialogue de sélection du certificat.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures">
      <summary vsli:raw="Removes all digital signatures from the package.">Supprime toutes les signatures numériques du package.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
      <summary vsli:raw="Removes the digital signature with a given signature uniform resource identifier (URI).">Supprime la signature numérique avec un URI (Uniform Resource Identifier) de signature donné.</summary>
      <param name="signatureUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; to remove.">URI de la <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> à supprimer.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.">Invite l’utilisateur à fournir un certificat X.509, qui est ensuite utilisé pour signer numériquement une liste spécifiée de parties du package.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">Liste des URI (Uniform Resource Identifier) pour les éléments de <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
      <returns vsli:raw="The digital signature used to sign the list of &lt;paramref name=&quot;parts&quot; /&gt;.">Signature numérique utilisée pour signer la liste de <paramref name="parts" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Signs a list of package parts with a given X.509 certificate.">Signe une liste de parties de package avec un certificat X.509 donné.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">Liste des URI (Uniform Resource Identifier) pour les éléments de <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified &lt;paramref name=&quot;parts&quot; /&gt;.">Certificat X.509 à utiliser pour signer numériquement chacun des <paramref name="parts" /> spécifiés.</param>
      <returns vsli:raw="The digital signature used to sign the given list of &lt;paramref name=&quot;parts&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be found or the user clicked &quot;Cancel&quot; in the certificate selection dialog box.">Signature numérique utilisée pour signer la liste donnée de <paramref name="parts" />, ou <see langword="null" /> si aucun certificat n’est trouvé ou si l’utilisateur a cliqué sur « Annuler » dans la boîte de dialogue de sélection du certificat.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate.">Signe une liste de parties et de relations de package avec un certificat X.509 donné.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Liste des URI (Uniform Resource Identifier) pour les objets de <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Certificat X.509 à utiliser pour signer numériquement chacun des composants et des relations spécifiés.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Liste d’objets <see cref="T:System.IO.Packaging.PackageRelationship" /> à signer.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Signature numérique utilisée pour signer les éléments spécifiés dans les listes <paramref name="parts" /> et <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any objects to sign.">Ni <paramref name="parts" /> ni <paramref name="relationshipSelectors" /> ne spécifient d’objets à signer.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate and identifier (ID).">Signe une liste de parties de package et de relations de package avec un certificat X.509 et un identificateur (ID) donnés.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Liste des URI (Uniform Resource Identifier) pour les objets de <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Certificat X.509 à utiliser pour signer numériquement chacun des composants et des relations spécifiés.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Liste d’objets <see cref="T:System.IO.Packaging.PackageRelationship" /> à signer.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">Chaîne d’identification à associer à la signature.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Signature numérique utilisée pour signer les éléments spécifiés dans les listes <paramref name="parts" /> et <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any elements to sign.">Ni <paramref name="parts" /> ni <paramref name="relationshipSelectors" /> ne spécifient d’éléments à signer.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
      <summary vsli:raw="Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature identifier (ID).">Signe une liste de parties de package, de relations de package ou d’objets personnalisés avec un certificat X.509 et un identificateur (ID) de signature spécifiés.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Liste des URI (Uniform Resource Identifier) pour les objets de <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Certificat X.509 à utiliser pour signer numériquement chacun des composants et des relations spécifiés.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Liste d’objets <see cref="T:System.IO.Packaging.PackageRelationship" /> à signer.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">Chaîne d’identification à associer à la signature.</param>
      <param name="signatureObjects" vsli:raw="A list of custom data objects to sign.">Liste d’objets de données personnalisés à signer.</param>
      <param name="objectReferences" vsli:raw="A list of references to custom objects to sign.">Liste de références aux objets personnalisés à signer.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Signature numérique utilisée pour signer les éléments spécifiés dans les listes <paramref name="parts" /> et <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt;, &lt;paramref name=&quot;relationshipSelectors&quot; /&gt;, &lt;paramref name=&quot;signatureObjects&quot; /&gt;, nor &lt;paramref name=&quot;objectReferences&quot; /&gt; specify any elements to sign.">Ni <paramref name="parts" />, ni <paramref name="relationshipSelectors" />, ni <paramref name="signatureObjects" /> ni <paramref name="objectReferences" /> ne spécifient d’éléments à signer.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; of a part being signed references an empty, &lt;see langword=&quot;null&quot; /&gt;, or undefined &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping&quot; /&gt;.">Un <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> d’un composant en cours de signature fait référence à un <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" /> vide, <see langword="null" /> ou non défini.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;signatureId&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and is not a valid XML schema ID (for example, begins with a leading numeric digit).">
        <paramref name="signatureId" /> n’a pas la valeur <see langword="null" /> et n’est pas un ID de schéma XML valide (par exemple, il commence par un chiffre).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin">
      <summary vsli:raw="Gets the uniform resource identifier (URI) of the signature origin part.">Obtient l’URI (Uniform Resource Identifier) du composant d’origine de signature.</summary>
      <returns vsli:raw="The URI of the signature origin part.">URI de la partie d’origine de la signature.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType">
      <summary vsli:raw="Gets the type of default signature origin relationship.">Obtient le type de la relation d'origine de la signature par défaut.</summary>
      <returns vsli:raw="The type of default signature origin relationship.">Type de la relation d'origine de la signature par défaut.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
      <summary vsli:raw="Gets a collection of all the signatures contained in the package.">Obtient une collection de toutes les signatures contenues dans le package.</summary>
      <returns vsli:raw="A collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; objects.">Collection de tous les objets <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat">
      <summary vsli:raw="Gets or sets the date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">Obtient ou définit le format date/heure utilisé pour créer une signature <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
      <returns vsli:raw="The date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">Format date/heure utilisé pour créer une signature <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping">
      <summary vsli:raw="Gets a dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">Obtient un dictionnaire contenant chaque <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> défini et son identificateur <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> XML associé .</summary>
      <returns vsli:raw="A dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">Dictionnaire qui contient chaque <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> défini et son <see cref="T:System.Security.Cryptography.Xml.Transform" />XML associé.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> .</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies a given X.509 certificate.">Vérifie un certificat X.509 donné.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to verify.">Certificat X.509 à vérifier.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError&quot; /&gt; (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags.">
        <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (valeur 0) si le certificat a été vérifié avec succès ; sinon, énumération au niveau du bit des indicateurs d’erreurs.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)">
      <summary vsli:raw="Verifies the signatures on all signed parts within the package.">Vérifie les signatures sur tous les composants signés dans le package.</summary>
      <param name="exitOnFailure" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to exit on first failure; otherwise, &lt;see langword=&quot;false&quot; /&gt; to continue and check all signatures.">
        <see langword="true" /> pour quitter lors du premier échec ; sinon, <see langword="false" /> pour continuer et vérifier toutes les signatures.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (valeur 0) si toutes les signatures sont vérifiées avec succès ; sinon, une énumération qui identifie l’erreur.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>Fournit une classe de base pour les composants stockés dans un <see cref="T:System.IO.Packaging.Package" />.  Cette classe est abstraite.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.PackagePart" /> avec un <see cref="P:System.IO.Packaging.PackagePart.Package" /> parent spécifié et un URI de composant.</summary>
      <param name="package">
        <see cref="T:System.IO.Packaging.Package" /> parent du composant.</param>
      <param name="partUri">URI du composant, relatif à la racine du <see cref="T:System.IO.Packaging.Package" /> parent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> ou <paramref name="partUri" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.PackagePart" /> avec un <see cref="P:System.IO.Packaging.PackagePart.Package" /> parent spécifié, un URI de composant et un type de contenu MIME.</summary>
      <param name="package">
        <see cref="T:System.IO.Packaging.Package" /> parent du composant.</param>
      <param name="partUri">URI du composant, relatif à la racine du <see cref="T:System.IO.Packaging.Package" /> parent.</param>
      <param name="contentType">Type de contenu MIME du flux de données du composant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> ou <paramref name="partUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n’est pas un URI de <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.PackagePart" /> avec un <see cref="P:System.IO.Packaging.PackagePart.Package" /> parent spécifié, un URI de composant, un type de contenu MIME et une <see cref="T:System.IO.Packaging.CompressionOption" />.</summary>
      <param name="package">
        <see cref="T:System.IO.Packaging.Package" /> parent du composant.</param>
      <param name="partUri">URI du composant, relatif à la racine du <see cref="T:System.IO.Packaging.Package" /> parent.</param>
      <param name="contentType">Type de contenu MIME du flux de données du composant.</param>
      <param name="compressionOption">Option de compression du flux de données du composant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> ou <paramref name="partUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n’est pas un URI de <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <paramref name="compressionOption" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>Obtient l'option de compression du flux de contenu du composant.</summary>
      <returns>Option de compression du flux de contenu du composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>Obtient le type MIME du flux de contenu.</summary>
      <returns>Type MIME du flux de données de contenu de ce composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).

ou -
La chaîne retournée par la méthode <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> de classe dérivée est vide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Crée une relation au niveau du composant entre ce <see cref="T:System.IO.Packaging.PackagePart" /> et un <see cref="T:System.IO.Packaging.PackagePart" /> cible spécifié ou une ressource externe.</summary>
      <param name="targetUri">URI du composant cible.</param>
      <param name="targetMode">Une des valeurs de l'énumération. Par exemple, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> si le composant cible est à l'intérieur du <see cref="T:System.IO.Packaging.Package" /> ; ou <see cref="F:System.IO.Packaging.TargetMode.External" /> si la cible est une ressource à l'extérieur du <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="relationshipType">Rôle de la relation.</param>
      <returns>Relation au niveau du composant entre ce <see cref="T:System.IO.Packaging.PackagePart" /> et le <see cref="T:System.IO.Packaging.PackagePart" /> cible ou la ressource externe.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> ou <paramref name="relationshipType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="targetMode" /> n'est pas une valeur d'énumération <see cref="T:System.IO.Packaging.TargetMode" /> valide.</exception>
      <exception cref="T:System.ArgumentException">Le composant identifié par l'<paramref name="targetUri" /> est une relation (la cible d'une relation ne peut pas être une autre relation).

ou -
<paramref name="targetMode" /> est spécifié comme <see cref="F:System.IO.Packaging.TargetMode.Internal" /> mais <paramref name="targetUri" /> est un URI externe absolu.</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule (une nouvelle relation ne peut pas être ajoutée).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Crée une relation au niveau du composant entre ce <see cref="T:System.IO.Packaging.PackagePart" /> et un <see cref="T:System.IO.Packaging.PackagePart" /> cible spécifié ou une ressource externe.</summary>
      <param name="targetUri">URI du composant cible.</param>
      <param name="targetMode">Une des valeurs de l'énumération. Par exemple, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> si le composant cible est à l'intérieur du <see cref="T:System.IO.Packaging.Package" /> ; ou <see cref="F:System.IO.Packaging.TargetMode.External" /> si la cible est une ressource à l'extérieur du <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="relationshipType">Rôle de la relation.</param>
      <param name="id">ID unique pour la relation.</param>
      <returns>Relation au niveau du composant entre ce <see cref="T:System.IO.Packaging.PackagePart" /> et le <see cref="T:System.IO.Packaging.PackagePart" /> cible ou la ressource externe.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> ou <paramref name="relationshipType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="targetMode" /> n'est pas une valeur d'énumération <see cref="T:System.IO.Packaging.TargetMode" /> valide.</exception>
      <exception cref="T:System.ArgumentException">Le composant identifié par l'<paramref name="targetUri" /> est une relation (la cible d'une relation ne peut pas être une autre relation).

ou -
<paramref name="targetMode" /> est spécifié comme <see cref="F:System.IO.Packaging.TargetMode.Internal" /> mais <paramref name="targetUri" /> est un URI externe absolu.</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule (une nouvelle relation ne peut pas être ajoutée).</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.

ou -
Un composant avec l'<paramref name="id" /> spécifié existe déjà.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>Supprime un <see cref="T:System.IO.Packaging.PackageRelationship" /> au niveau du composant spécifié.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> de la relation à supprimer.</param>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule (les relations ne peuvent pas être supprimées).</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>En cas de substitution dans une classe dérivée, retourne le type MIME du contenu du composant.</summary>
      <returns>Type MIME du contenu du composant.</returns>
      <exception cref="T:System.NotSupportedException">La classe dérivée ne fournit pas une implémentation de substitution requise pour la méthode <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>Retourne la relation avec l'<see cref="P:System.IO.Packaging.PackageRelationship.Id" /> spécifié.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> de la relation à retourner.</param>
      <returns>Relation correspondant à l'<paramref name="id" />spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> est une chaîne vide.</exception>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).

ou -
Une relation avec l'<paramref name="id" /> spécifié n'existe pas dans le package.</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule (impossible de lire les informations de relation).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>Retourne une collection de toutes les relations que possède ce composant.</summary>
      <returns>Collection de toutes les relations que possède le composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule (impossible de lire les informations de relation).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>Retourne une collection de relations qui correspondent à un <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> spécifié.</summary>
      <param name="relationshipType">
        <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> des relations à trouver et à retourner dans la collection.</param>
      <returns>Collection de relations correspondant à un <paramref name="relationshipType" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> est une chaîne vide.</exception>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule (impossible de lire les informations de relation).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>Retourne le flux du contenu du composant.</summary>
      <returns>Flux de données du contenu pour le composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">L'objet de flux retourné par la méthode <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> de la sous-classe dérivée est <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>Retourne le flux de contenu ouvert dans un <see cref="T:System.IO.FileMode" /> E/S spécifié.</summary>
      <param name="mode">Mode d'E/S utilisé pour ouvrir le flux de contenu.</param>
      <returns>Flux de contenu du composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="mode" /> n'est pas une valeur d'énumération <see cref="T:System.IO.FileMode" /> valide.</exception>
      <exception cref="T:System.IO.IOException">Le paramètre <paramref name="mode" /> n'est pas compatible avec le package ni avec le flux de données du composant.

ou -
L'objet de flux retourné par la méthode <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> de la sous-classe dérivée est <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Retourne le flux de contenu du composant ouvert avec un <see cref="T:System.IO.FileMode" /> et un <see cref="T:System.IO.FileAccess" /> spécifiés.</summary>
      <param name="mode">Mode d'E/S utilisé pour ouvrir le flux de contenu.</param>
      <param name="access">Autorisations d'accès à utiliser lors de l'ouverture du flux de contenu.</param>
      <returns>Flux de contenu du composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="mode" /> n'est pas une valeur d'énumération <see cref="T:System.IO.FileMode" /> valide.

ou -
Le paramètre <paramref name="access" /> n'est pas une valeur d'énumération <see cref="T:System.IO.FileAccess" /> valide.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> ou <paramref name="access" /> n'est pas compatible avec le package ni avec le flux de données du composant.

ou -
Le paramètre <paramref name="access" /> est spécifié comme <see cref="F:System.IO.FileAccess.Read" /> mais le paramètre <paramref name="mode" /> requiert l'accès en écriture.  (Les valeurs <see cref="T:System.IO.FileMode" /> pour <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, <see cref="F:System.IO.FileMode.Truncate" /> et <see cref="F:System.IO.FileMode.Append" /> requièrent un accès en <see cref="F:System.IO.FileAccess.Write" /> ou en <see cref="F:System.IO.FileAccess.ReadWrite" />.)
ou -
L'objet de flux retourné par la méthode <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> de la sous-classe dérivée est <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>En cas de substitution dans une classe dérivée, retourne le flux de contenu du composant ouvert avec un <see cref="T:System.IO.FileMode" /> et un <see cref="T:System.IO.FileAccess" /> spécifiés.</summary>
      <param name="mode">Mode d'E/S utilisé pour ouvrir le flux de contenu.</param>
      <param name="access">Autorisations d'accès à utiliser lors de l'ouverture du flux de contenu.</param>
      <returns>Flux de contenu du composant.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>Obtient le <see cref="T:System.IO.Packaging.Package" /> parent du composant.</summary>
      <returns>Package parent du composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>Retourne une valeur indiquant si ce composant possède une relation avec un <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> spécifié.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> de la relation à vérifier.</param>
      <returns>
        <see langword="true" /> si ce composant possède une relation avec l'<paramref name="id" />spécifié ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.</exception>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule (impossible de lire les informations de relation).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>Obtient l’URI du composant.</summary>
      <returns>URI du composant relatif à la racine du package.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.

ou -
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>Représente une collection d'objets <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>Retourne un énumérateur pour l'itération au sein des parties de la collection.</summary>
      <returns>Énumérateur pour l'itération au sein des éléments <see cref="T:System.IO.Packaging.PackagePart" /> de la collection.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de la collection.</summary>
      <returns>Objet <see cref="T:System.Collections.Generic.IEnumerator`1" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>Représente les propriétés principales d'un <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.PackageProperties" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la catégorie du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Catégorie du contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui représente l'état du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>État du contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui représente le type du contenu du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Type de contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la date et l'heure à laquelle le <see cref="T:System.IO.Packaging.Package" /> a été créé.</summary>
      <returns>Date et heure de création du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui identifie l'individu ou entité qui a créé le <see cref="T:System.IO.Packaging.Package" /> et son contenu.</summary>
      <returns>Individu ou entité qui a créé le <see cref="T:System.IO.Packaging.Package" /> et son contenu.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une description du contenu du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Description du contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>Libère toutes les ressources utilisées par l'instance <see cref="T:System.IO.Packaging.PackageProperties" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par l'instance <see cref="T:System.IO.Packaging.PackageProperties" /> et éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui identifie clairement le <see cref="T:System.IO.Packaging.Package" /> et son contenu.</summary>
      <returns>Valeur qui identifie clairement le <see cref="T:System.IO.Packaging.Package" /> et son contenu.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui définit un jeu délimité de mots clés pour prendre en charge la recherche et l'indexation du <see cref="T:System.IO.Packaging.Package" /> et son contenu.</summary>
      <returns>Jeu délimité de mots clés pour prendre en charge la recherche et l'indexation du <see cref="T:System.IO.Packaging.Package" /> et de son contenu.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui identifie le langage du contenu du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Valeur qui identifie le langage du contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui identifie l'utilisateur qui a modifié dernièrement le contenu du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Utilisateur qui a modifié dernièrement le contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la date et l'heure à laquelle le contenu du <see cref="T:System.IO.Packaging.Package" /> a été imprimé pour la dernière fois.</summary>
      <returns>Date et heure à laquelle le contenu du <see cref="T:System.IO.Packaging.Package" /> a été imprimé pour la dernière fois.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la date et l'heure à laquelle le <see cref="T:System.IO.Packaging.Package" /> a été modifié pour la dernière fois.</summary>
      <returns>Date et heure à laquelle le <see cref="T:System.IO.Packaging.Package" /> a été modifié pour la dernière fois.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit le numéro de révision du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Numéro de révision de <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la rubrique du contenu du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Rubrique du contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit le nom donné au <see cref="T:System.IO.Packaging.Package" /> et son contenu.</summary>
      <returns>Nom donné au <see cref="T:System.IO.Packaging.Package" /> et son contenu.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit le numéro de version du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Numéro de version du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>Représente une association entre un <see cref="T:System.IO.Packaging.Package" /> ou une <see cref="T:System.IO.Packaging.PackagePart" />, source et un objet cible qui peut être une <see cref="T:System.IO.Packaging.PackagePart" /> ou une ressource externe.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>Obtient une chaîne qui identifie la relation.</summary>
      <returns>Chaîne qui identifie la relation.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>Obtient le <see cref="T:System.IO.Packaging.Package" /> qui contient cette relation.</summary>
      <returns>Package qui contient cette relation.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>Obtient le nom de type qualifié de la relation.</summary>
      <returns>Nom de type qualifié de la relation.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>Obtient l’URI du package ou du composant propriétaire de la relation.</summary>
      <returns>URI du <see cref="T:System.IO.Packaging.Package" /> ou <see cref="T:System.IO.Packaging.PackagePart" /> qui possède la relation.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>Obtient une valeur qui indique si la cible de la relation est <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> à <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Valeur d’énumération qui indique si <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> fait référence à une ressource <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> à <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>Obtient l’URI de la ressource cible de la relation.</summary>
      <returns>URI de la ressource cible.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>Représente une collection d'éléments <see cref="T:System.IO.Packaging.PackageRelationship" /> possédés par une <see cref="T:System.IO.Packaging.PackagePart" /> donnée ou le <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>Retourne un énumérateur pour l'itération au sein des relations de la collection.</summary>
      <returns>Énumérateur pour l'itération au sein des éléments <see cref="T:System.IO.Packaging.PackageRelationship" /> de la collection.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ce type ou ce membre prend en charge l’infrastructure Windows Presentation Foundation et n’est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Ne pas utiliser - utiliser plutôt <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>Définit les critères <see cref="T:System.IO.Packaging.PackageRelationship" /> de sélection des relations au niveau de la partie ou package.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.</summary>
      <param name="sourceUri">URI (uniform resource identifier) de <see cref="T:System.IO.Packaging.PackagePart" /> ou de <see cref="T:System.IO.Packaging.Package" /> (<c>SourceUri</c>="/") qui possède la relation.</param>
      <param name="selectorType">Type de <paramref name="selectionCriteria" />, par relation <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> ou par relation <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />.</param>
      <param name="selectionCriteria">Chaîne de qualification utilisée pour sélectionner les relations basées sur le <paramref name="selectorType" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceUri" /> ou <paramref name="selectionCriteria" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="selectorType" /> n’est pas valide.</exception>
      <exception cref="T:System.Xml.XmlException">Le paramètre <paramref name="selectorType" /> est <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> mais <paramref name="selectionCriteria" /> n'est pas un langage de définition de schéma XML (XSD)identificateur (ID) valide.</exception>
      <exception cref="T:System.ArgumentException">Le <paramref name="selectionCriteria" /> n'est pas valide pour le <paramref name="selectorType" /> spécifié.

ou -

Le <paramref name="sourceUri" /> n’est pas la racine <see cref="T:System.IO.Packaging.Package" /> ("/") et n’est pas non plus un URI <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>Retourne une liste d'objets <see cref="T:System.IO.Packaging.PackageRelationship" /> qui correspondent au <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" /> défini, <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> et <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" />.</summary>
      <param name="package">Package à partir duquel sélectionner les relations basées sur les critères de sélection.</param>
      <returns>Liste des relations qui correspondent aux paramètres de sélection spécifiés au constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>Obtient les critères de sélection spécifiés au constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</summary>
      <returns>Les critères de sélection basés sur le <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> de <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> ou <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> spécifiés au constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>Obtient le <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" /> spécifié pour le constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</summary>
      <returns>Le type de sélecteur de <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> ou <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> spécifié au constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>Obtient l'URI du package racine ("/") ou <see cref="P:System.IO.Packaging.PackagePart.Uri" /> de la partie spécifié au constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> comme le propriétaire de la relation.</summary>
      <returns>URI du package racine ("/") ou <see cref="P:System.IO.Packaging.PackagePart.Uri" /> de la partie spécifié au constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> comme le propriétaire de la relation.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>Spécifie le type de critères de sélection utilisés pour faire correspondre et retourner des sélections <see cref="T:System.IO.Packaging.PackageRelationship" /> à travers un <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>Les sélections <see cref="T:System.IO.Packaging.PackageRelationship" /> se font par <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>Les sélections <see cref="T:System.IO.Packaging.PackageRelationship" /> se font par <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>Fournit des méthodes utilitaires pour composer et analyser des objets URI à en-tête pack.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>Retourne une valeur qui indique si deux URI à en-tête pack sont équivalents.</summary>
      <param name="firstPackUri">Premier URI à en-tête pack.</param>
      <param name="secondPackUri">Deuxième URI à en-tête pack.</param>
      <returns>Entier signé indiquant la relation entre <paramref name="firstPackUri" /> et <paramref name="secondPackUri" />.
  Value 
  Signification 
  Inférieure à 0 
 <paramref name="firstPackUri" /> est inférieur à <paramref name="secondPackUri" />.  
  
  0 
 <paramref name="firstPackUri" /> équivaut à <paramref name="secondPackUri" />.  
  
  Supérieure à 0 
 <paramref name="firstPackUri" /> est supérieur à <paramref name="secondPackUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPackUri" /> ou <paramref name="secondPackUri" /> n’est pas un URI absolu.

ou -
<paramref name="firstPackUri" /> ou <paramref name="secondPackUri" /> ne commence pas par un schéma “pack://”.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>Retourne une valeur qui indique si deux URI de composant de package sont équivalents.</summary>
      <param name="firstPartUri">URI du premier <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <param name="secondPartUri">URI du deuxième <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <returns>Valeur indiquant la relation entre <paramref name="firstPartUri" /> et <paramref name="secondPartUri" />.
  Value 
  Signification 
  Inférieure à 0 
 <paramref name="firstPartUri" /> est inférieur à <paramref name="secondPartUri" />.  
  
  0 
 <paramref name="firstPartUri" /> équivaut à <paramref name="secondPartUri" />.  
  
  Supérieure à 0 
 <paramref name="firstPartUri" /> est supérieur à <paramref name="secondPartUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPartUri" /> ou <paramref name="secondPartUri" /> n’est pas une syntaxe d’URI de composant valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>Crée un URI à en-tête pack qui pointe vers un package.</summary>
      <param name="packageUri">URI du <see cref="T:System.IO.Packaging.Package" /> référencé.</param>
      <returns>URI à en-tête pack pour le <see cref="T:System.IO.Packaging.Package" /> référencé par le <paramref name="packageUri" /> donné.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> n’est pas un URI absolu.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>Crée un URI de pack en fonction d’un URI de <see cref="T:System.IO.Packaging.Package" /> et de l’URI d’un composant dans le package.</summary>
      <param name="packageUri">L'URI du <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">URI du <see cref="T:System.IO.Packaging.PackagePart" /> dans le package.</param>
      <returns>URI à en-tête pack du <see cref="T:System.IO.Packaging.PackagePart" /> donné.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> n’est pas un URI absolu.

ou -
<paramref name="partUri" /> n’est pas une syntaxe d’URI de partie valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>Crée un URI de pack en fonction d’un URI de <see cref="T:System.IO.Packaging.Package" />, de l’URI d’un composant dans le package et d’un fragment « # » à ajouter.</summary>
      <param name="packageUri">L'URI du <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">URI du <see cref="T:System.IO.Packaging.PackagePart" /> dans le package.</param>
      <param name="fragment">Référence « # » qui identifie un élément dans la partie du package.</param>
      <returns>URI à en-tête pack qui identifie le package spécifié, la partie du package et le fragment.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> n’est pas un URI absolu.

ou -
<paramref name="partUri" /> n’est pas une syntaxe d’URI de partie valide.

ou -
<paramref name="fragment" /> est vide ou commence par « # ».</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>Crée un URI de <see cref="T:System.IO.Packaging.PackagePart" /> mis en forme.</summary>
      <param name="partUri">URI du <see cref="T:System.IO.Packaging.PackagePart" /> dans le package.</param>
      <returns>URI de <see cref="T:System.IO.Packaging.PackagePart" /> mis en forme.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n’est pas un <see cref="T:System.Uri" /> absolu.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>Retourne la forme normalisée d'un URI de <see cref="T:System.IO.Packaging.PackagePart" /> spécifié.</summary>
      <param name="partUri">URI de <see cref="T:System.IO.Packaging.PackagePart" /> à normaliser.</param>
      <returns>Forme normalisée de l'<paramref name="partUri" /> donné.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n’a pas une syntaxe <see cref="T:System.Uri" /> valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>Retourne l’URI interne qui pointe vers le package entier d’un URI à en-tête pack spécifié.</summary>
      <param name="packUri">URI à en-tête pack à partir duquel retourner l’URI de <see cref="T:System.IO.Packaging.Package" />.</param>
      <returns>URI de <see cref="T:System.IO.Packaging.Package" /> à partir du <paramref name="packUri" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" /> n’est pas un <see cref="T:System.Uri" /> absolu.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>Retourne l’URI d’un <see cref="T:System.IO.Packaging.PackagePart" /> dans un URI à en-tête pack spécifié.</summary>
      <param name="packUri">URI à en-tête pack à partir duquel retourner l’URI de <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <returns>L’URI de <see cref="T:System.IO.Packaging.PackagePart" /> dans le <paramref name="packUri" /> donné, ou <see langword="null" /> si <paramref name="packUri" /> pointe vers un package plutôt que vers un <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
      <exception cref="T:System.ArgumentNullException">Si la <paramref name="packUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Si <paramref name="packUri" /> n’est pas un <see cref="T:System.Uri" /> absolu.

ou -

<paramref name="packUri" /> n’a pas le schéma « pack:// ».

ou -
Le partUri extrait de <paramref name="packUri" /> n’est pas conforme à la syntaxe partUri valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>Retourne l’URI du composant de relation associé à un <see cref="T:System.IO.Packaging.PackagePart" /> spécifié.</summary>
      <param name="partUri">
        <see cref="P:System.IO.Packaging.PackagePart.Uri" /> du <see cref="T:System.IO.Packaging.PackagePart" /> dont l'URI du <see cref="T:System.IO.Packaging.PackageRelationship" /> associé doit être retourné.</param>
      <returns>URI du composant <see cref="T:System.IO.Packaging.PackageRelationship" /> associé au <see cref="T:System.IO.Packaging.PackagePart" /> identifié par <paramref name="partUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La syntaxe de <paramref name="partUri" /> n'est pas valide pour un URI de composant de package.

ou -
<paramref name="partUri" /> est un URI absolu.

ou -
<paramref name="partUri" /> fait référence à un composant de relation.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>Retourne l’URI relatif entre deux URI de <see cref="T:System.IO.Packaging.PackagePart" /> spécifiés.</summary>
      <param name="sourcePartUri">URI du composant source.</param>
      <param name="targetPartUri">URI du composant cible.</param>
      <returns>URI relatif de <paramref name="sourcePartUri" /> à <paramref name="targetPartUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> ou <paramref name="targetPartUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> ou <paramref name="targetPartUri" /> n’a pas une syntaxe <see cref="T:System.Uri" /> valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>Retourne l’<see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> à partir de la <see cref="T:System.IO.Packaging.PackageRelationship" /> avec un URI spécifié.</summary>
      <param name="relationshipPartUri">URI du composant de relation à partir duquel retourner l’<see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />.</param>
      <returns>
        <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> du <see cref="T:System.IO.Packaging.PackagePart" /> à partir de la relation avec le <paramref name="relationshipPartUri" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipPartUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipPartUri" /> est un URI absolu.

ou -
La syntaxe <paramref name="relationshipPartUri" /> n'est pas valide pour une <see cref="T:System.IO.Packaging.PackagePart" />.

ou -
<paramref name="relationshipPartUri" /> ne fait pas référence à un composant de relation.

ou -
Le <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> de la partie de relation référence une autre partie de relation (non valide).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>Retourne une valeur qui indique si un URI spécifié est l’URI d’un composant <see cref="T:System.IO.Packaging.PackageRelationship" />.</summary>
      <param name="partUri">URI dans lequel rechercher un composant de <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="partUri" /> identifie un composant <see cref="T:System.IO.Packaging.PackageRelationship" /> ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> est un URI absolu.

ou -
<paramref name="partUri" /> n'est pas une syntaxe de <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>Retourne un URI de composant à partir d'un URI de composant source et d'un URI avec chemin d'accès relatif à un composant cible.</summary>
      <param name="sourcePartUri">URI du composant source, ou « / » pour désigner la racine du <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="targetUri">URI relatif vers le composant cible.</param>
      <returns>URI du composant cible résolu entre le <paramref name="SourcePartUri" /> spécifié et les paramètres <paramref name="targetUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> ou <paramref name="targetUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> n'est pas un URI de composant valide.

ou -
<paramref name="targetUri" /> n'est pas un URI relatif valide.</exception>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>Définit le nom de schéma URI à en-tête pack “pack”.</summary>
    </member>
    <member name="T:System.IO.Packaging.RightsManagementInformation">
      <summary vsli:raw="Represents Digital Rights Management (DRM) information that is stored in an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Représente les informations de gestion des droits numériques (DRM) stockées dans un <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the package's encrypted rights management data stream.">Obtient ou définit le <see cref="T:System.Security.RightsManagement.CryptoProvider" /> pour accéder au flux de données chiffré de gestion des droits du package.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the rights management information.">
        <see cref="T:System.Security.RightsManagement.CryptoProvider" /> d'accès aux informations de gestion des droits.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user from the encrypted rights management data stream.">Supprime la <see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur spécifié du flux de données chiffré de gestion des droits.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; to be deleted.">Utilisateur de la <see cref="T:System.Security.RightsManagement.UseLicense" /> à supprimer.</param>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
      <summary vsli:raw="Returns a dictionary collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs from the encrypted rights management data stream.">Retourne une collection de dictionnaires d'utilisateurs et de paires clé/valeur <see cref="T:System.Security.RightsManagement.UseLicense" /> du flux de données chiffré de gestion des droits.</summary>
      <returns vsli:raw="A collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs that are contained in the rights managed protected package.">Collection d'utilisateurs et de paires clé/valeur <see cref="T:System.Security.RightsManagement.UseLicense" /> contenus dans le package protégé managé par des droits.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
      <summary vsli:raw="Returns the embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; from the encrypted rights management data stream.">Retourne la <see cref="T:System.Security.RightsManagement.PublishLicense" /> incorporée depuis le flux de données chiffré de gestion des droits.</summary>
      <returns vsli:raw="The embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.PublishLicense" /> incorporée ; ou <see langword="null" />, si le package ne contient pas de <see cref="T:System.Security.RightsManagement.PublishLicense" />.</returns>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">Les informations de gestion de droits dans ce package ne peuvent pas être lues par la version actuelle de cette classe.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Returns a specified user's embedded &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; from the encrypted rights management data stream.">Retourne une <see cref="T:System.Security.RightsManagement.UseLicense" /> incorporée d'un utilisateur spécifié depuis le flux de données chiffré de gestion des droits.</summary>
      <param name="userKey" vsli:raw="The user or user group to return the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for.">Utilisateur ou groupe d'utilisateurs pour lequel retourner la <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the specified user; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; that matches the given &lt;paramref name=&quot;userKey&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.UseLicense" /> pour l'utilisateur spécifié ; ou <see langword="null" />, si le package ne contient pas une <see cref="T:System.Security.RightsManagement.UseLicense" /> qui correspond à la <paramref name="userKey" /> donnée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;userKey&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="userKey" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">Les informations de gestion de droits dans ce package ne peuvent pas être lues par la version actuelle de cette classe.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; to the encrypted rights management data stream.">Enregistre une <see cref="T:System.Security.RightsManagement.PublishLicense" /> donnée sur le flux de données chiffré de gestion des droits.</summary>
      <param name="publishLicense" vsli:raw="The publish license to store and embed in the package.">Licence de publication à stocker et incorporer dans le package.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;publishLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="publishLicense" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">Les informations de gestion de droits dans ce package ne peuvent pas être lues par la version actuelle de cette classe.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user to the encrypted rights management data stream.">Enregistre une <see cref="T:System.Security.RightsManagement.UseLicense" /> donnée pour un utilisateur spécifié sur le flux de données chiffré de gestion des droits.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">Utilisateur de la <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <param name="useLicense" vsli:raw="The use license to store and embed in the package.">Licence d'utilisation à stocker et incorporer dans le package.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;userKey&quot; /&gt; or &lt;paramref name=&quot;useLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="userKey" /> ou le paramètre <paramref name="useLicense" /> est <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">Les informations de gestion de droits dans ce package ne peuvent pas être lues par la version actuelle de cette classe.</exception>
    </member>
    <member name="T:System.IO.Packaging.SignatureVerificationEventArgs">
      <summary vsli:raw="Specifies the event args provided to the &lt;see cref=&quot;T:System.IO.Packaging.InvalidSignatureEventHandler&quot; /&gt;.">Spécifie les arguments d'événement fournis au <see cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.Signature">
      <summary vsli:raw="Gets the digital signature being verified.">Obtient la signature numérique vérifiée.</summary>
      <returns vsli:raw="The digital signature being verified.">Signature numérique vérifiée.</returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.VerifyResult">
      <summary vsli:raw="Gets the signature verification error.">Obtient l'erreur de vérification de la signature.</summary>
      <returns vsli:raw="The signature verification error.">Erreur de vérification de la signature.</returns>
    </member>
    <member name="T:System.IO.Packaging.StorageInfo">
      <summary vsli:raw="Provides access and information for manipulating data stores in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Fournit un accès et des informations pour manipuler des magasins de données dans un <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
      <summary vsli:raw="Creates a new stream with a given name.">Crée un flux de données avec un nom donné.</summary>
      <param name="name" vsli:raw="The name for the new stream.">Nom du nouveau flux de données.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Nouveau flux de données avec le <paramref name="name" /> spécifié.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
      <summary vsli:raw="Creates a new stream with a given name, &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt;, and &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt;.">Crée un flux de données avec un nom donné, <see cref="T:System.IO.Packaging.CompressionOption" /> et <see cref="T:System.IO.Packaging.EncryptionOption" />.</summary>
      <param name="name" vsli:raw="The name for the new stream.">Nom du nouveau flux de données.</param>
      <param name="compressionOption" vsli:raw="The compression option for the data stream.">Option de compression pour le flux de données.</param>
      <param name="encryptionOption" vsli:raw="The encryption option for the data stream.">Option de chiffrement du flux de données.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;, &lt;paramref name=&quot;compressionOption&quot; /&gt;, and &lt;paramref name=&quot;encryptionOption&quot; /&gt;.">Nouveau flux de données avec les <paramref name="name" />, <paramref name="compressionOption" /> et <paramref name="encryptionOption" /> spécifiés.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
      <summary vsli:raw="Creates a new child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; with this &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; as the parent.">Crée un <see cref="T:System.IO.Packaging.StorageInfo" /> enfant avec ce <see cref="T:System.IO.Packaging.StorageInfo" /> comme parent.</summary>
      <param name="name" vsli:raw="The name for the new child data store.">Nom du nouveau magasin de données enfant.</param>
      <returns vsli:raw="The new child data store.">Nouveau magasin de données enfant.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the stream with a specified name.">Supprime le flux de données du nom spécifié.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name of the stream to delete.">Nom <see cref="T:System.IO.Packaging.StreamInfo" /> du flux de données à supprimer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
      <summary vsli:raw="Deletes a specified sub-store.">Supprime un sous-magasin spécifié.</summary>
      <param name="name" vsli:raw="The name of the sub-store to delete.">Nom du sous-magasin à supprimer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance with the given name.">Retourne l'instance <see cref="T:System.IO.Packaging.StreamInfo" /> portant le nom donné.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance to return.">Nom de l'instance de <see cref="T:System.IO.Packaging.StreamInfo" /> à retourner.</param>
      <returns vsli:raw="The stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Flux de données avec le <paramref name="name" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreams">
      <summary vsli:raw="Returns an array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instances that are currently contained in this store.">Retourne un tableau des instances <see cref="T:System.IO.Packaging.StreamInfo" /> contenues actuellement dans ce magasin.</summary>
      <returns vsli:raw="An array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; objects, each pointing to an I/O steam defined within this store.">Tableau des objets <see cref="T:System.IO.Packaging.StreamInfo" />, chacun pointant vers un flux d'E/S défini dans ce magasin.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
      <summary vsli:raw="Returns the child sub-store with a given name.">Retourne le sous-magasin enfant avec un nom donné.</summary>
      <param name="name" vsli:raw="The name of the sub-store to return.">Nom du sous-magasin à retourner.</param>
      <returns vsli:raw="The child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Sous-magasin enfant ayant le <paramref name="name" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorages">
      <summary vsli:raw="Returns an array of the child sub-stores that are currently contained in this store.">Retourne un tableau des sous-magasins enfants actuellement contenus dans ce magasin.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; objects, each pointing to a sub-store defined within this store.">Un tableau d'objets <see cref="T:System.IO.Packaging.StorageInfo" />, chacun pointant vers un sous-magasin défini dans ce magasin.</returns>
    </member>
    <member name="P:System.IO.Packaging.StorageInfo.Name">
      <summary vsli:raw="Gets the name of the store.">Obtient le nom du magasin.</summary>
      <returns vsli:raw="The name of this store.">Nom de ce magasin.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given stream exists.">Retourne une valeur qui indique si un flux de données donné existe.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name to check for.">Nom de <see cref="T:System.IO.Packaging.StreamInfo" /> à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a stream with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un flux de données existe avec le <paramref name="name" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given child sub-store exists.">Retourne une valeur qui indique si un sous-magasin enfant donné existe.</summary>
      <param name="name" vsli:raw="The child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; name to check for.">Nom de <see cref="T:System.IO.Packaging.StorageInfo" /> enfant à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un sous-magasin enfant avec le <paramref name="name" /> spécifié existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.StreamInfo">
      <summary vsli:raw="Provides access and information for manipulating I/O streams within a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Fournit un accès et des informations pour manipuler des flux de données E/S dans un <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.CompressionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt; setting for the stream.">Reçoit le paramètre <see cref="T:System.IO.Packaging.CompressionOption" /> pour le flux de données.</summary>
      <returns vsli:raw="The compression option setting for the package stream.">Paramètre de compression pour le flux de données du package.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.EncryptionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt; setting for the stream.">Reçoit le paramètre <see cref="T:System.IO.Packaging.EncryptionOption" /> pour le flux de données.</summary>
      <returns vsli:raw="The encryption option setting for the package stream.">Paramètre de chiffrement pour le flux de données du package.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream">
      <summary vsli:raw="Returns a stream opened in a default &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Retourne un flux de données ouvert dans un <see cref="T:System.IO.FileMode" /> par défaut et <see cref="T:System.IO.FileAccess" />.</summary>
      <returns vsli:raw="The I/O stream opened in a default &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Flux de données E/S ouvert dans une racine <see cref="T:System.IO.Packaging.Package" /> par défaut <see cref="T:System.IO.FileMode" /> et <see cref="T:System.IO.FileAccess" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt;.">Retourne un flux de données E/S ouvert dans un <see cref="T:System.IO.FileMode" /> spécifié.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">Mode de fichier dans lequel ouvrir le flux de données.</param>
      <returns vsli:raw="The stream opened in the specified file &lt;paramref name=&quot;mode&quot; /&gt;.">Flux de données ouvert dans le <paramref name="mode" /> de fichier spécifié.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Retourne un flux de données E/S ouvert dans un <see cref="T:System.IO.FileMode" /> spécifié et avec un <see cref="T:System.IO.FileAccess" />donné.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">Mode de fichier dans lequel ouvrir le flux de données.</param>
      <param name="access" vsli:raw="The file access mode in which to read or write to the stream.">Mode d'accès au fichier dans lequel lire ou écrire le flux de données.</param>
      <returns vsli:raw="The I/O stream opened in the specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Flux de données E/S ouvert dans le <see cref="T:System.IO.FileMode" /> spécifié et avec un <see cref="T:System.IO.FileAccess" /> donné.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.Name">
      <summary vsli:raw="Gets the name of the stream.">Obtient le nom du flux de données.</summary>
      <returns vsli:raw="The name of this stream.">Nom de ce flux de données.</returns>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>Spécifie si la cible d'un <see cref="T:System.IO.Packaging.PackageRelationship" /> se trouve à l'intérieur ou à l'extérieur de <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>La relation référence une ressource qui est externe au package.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>La relation référence un composant qui se trouve à l'intérieur du package.</summary>
    </member>
    <member name="T:System.IO.Packaging.VerifyResult">
      <summary vsli:raw="Specifies the result of a certificate or signature verification.">Spécifie le résultat d’une vérification de certificat ou de signature.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.CertificateRequired">
      <summary vsli:raw="The X.509 certificate is not available to verify the signature.">Le certificat X.509 n’est pas disponible pour vérifier la signature.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidCertificate">
      <summary vsli:raw="The X.509 certificate is not valid.">Le certificat X.509 n’est pas valide.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidSignature">
      <summary vsli:raw="The signature is not valid.">La signature n'est pas valide.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.NotSigned">
      <summary vsli:raw="The specified package or part has no signature.">Le package ou composant spécifié n’a pas de signature.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.ReferenceNotFound">
      <summary vsli:raw="A reference relationship to the signature was not found.">Une relation de référence à la signature est introuvable.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.Success">
      <summary vsli:raw="The verification was successful.">La vérification a réussi.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>Implémente une sous-classe dérivée de la classe de base <see cref="T:System.IO.Packaging.Package" /> abstraite. La classe <see cref="T:System.IO.Packaging.ZipPackage" /> utilise un fichier d’archives .zip comme magasin conteneur. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>Représente un composant qui est stocké dans un <see cref="T:System.IO.Packaging.ZipPackage" />.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> décrit un jeu d’autorisations de sécurité qui contrôle la capacité des médias audio, des supports d’images et des médias vidéo à fonctionner dans une application Windows Presentation Foundation (WPF) de confiance partielle.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" /> en spécifiant le niveau d’autorisation audio.</summary>
      <param name="permissionAudio">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />, en spécifiant les niveaux d’autorisation audio, vidéo et d’image.</summary>
      <param name="permissionAudio">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
      <param name="permissionVideo">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
      <param name="permissionImage">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />, en spécifiant le niveau d’autorisation d’image.</summary>
      <param name="permissionImage">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />, en spécifiant le niveau d’autorisation vidéo.</summary>
      <param name="permissionVideo">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />, en spécifiant un état d’autorisation.</summary>
      <param name="state">Valeur énumérée de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>Obtient la valeur actuelle du niveau d’autorisation audio.</summary>
      <returns>Niveau d’autorisation audio.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="securityElement">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>Obtient la valeur actuelle du niveau d’autorisation d’image.</summary>
      <returns>Niveau d’autorisation d’image.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>L'intersection de deux autorisations est une autorisation qui décrit l'état qu'elles décrivent en commun. Seule une demande qui transmet les deux autorisations d’origine est valide pour l’autorisation croisée.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si les autorisations audio, image et vidéo sont toutes non restreintes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>Obtient la valeur actuelle du niveau d’autorisation sur les vidéos.</summary>
      <returns>Niveau d’autorisation sur le support.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.MediaPermission" /> au code à l’aide de la sécurité déclarative.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>Obtient ou définit le niveau d’autorisation audio pour l’élément <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>État de l’élément <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>Obtient ou définit le niveau d’autorisation d’image pour <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>État de l’élément <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>Obtient ou définit le niveau d’autorisation pour le <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>État de l’élément <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>Spécifie le niveau d'autorisation audio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>Autorisation qui permet une lecture audio non restreinte.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>Autorisation qui refuse toute lecture audio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>Autorisation qui permet une lecture audio sûre et limitée, ce qui implique de refuser l'accès en continu au fichier audio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>Autorisation qui permet uniquement la lecture audio des fichiers localisés sur le site d'origine de l'application.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>Spécifie le niveau d'autorisation pour les images.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>Autorisation qui permet l'affichage non restreint des images.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>Autorisation qui refuse l'affichage de toutes les images.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>Autorisation qui permet l'affichage d'images sûr et limité, ce qui implique de refuser l'accès en continu au fichier image.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>Autorisation qui permet uniquement l'affichage des images localisées sur le site d'origine de l'application.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>Spécifie le niveau d'autorisation vidéo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>Autorisation qui permet une lecture vidéo non restreinte.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>Autorisation qui refuse toute lecture vidéo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>Autorisation qui permet une lecture vidéo sûre et limitée, ce qui implique de refuser l'accès en continu au fichier vidéo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>Autorisation qui permet uniquement la lecture vidéo des fichiers localisés sur le site d'origine de l'application.</summary>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>L’objet <see cref="T:System.Security.Permissions.WebBrowserPermission" /> contrôle la capacité à créer le contrôle WebBrowser.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />, en spécifiant un état d’autorisation.</summary>
      <param name="state">Valeur énumérée de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />, en spécifiant le niveau d’autorisation du navigateur web.</summary>
      <param name="webBrowserPermissionLevel">Valeur énumérée de <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="securityElement">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>L'intersection de deux autorisations est une autorisation qui décrit l'état qu'elles décrivent en commun. Seule une demande qui transmet les deux autorisations d’origine est valide pour l’autorisation croisée.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si la propriété <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> a la valeur <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>Obtient ou définit la valeur actuelle du niveau d’autorisation du navigateur web.</summary>
      <returns>Valeur actuelle du niveau d’autorisation du navigateur web.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.WebBrowserPermission" /> au code à l’aide de la sécurité déclarative.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>Crée et retourne une instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> correspondant à la déclaration de sécurité.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>Obtient ou définit le niveau d’autorisation du navigateur web actuel pour <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />.</summary>
      <returns>État du niveau d’autorisation pour le navigateur web actuel.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>Spécifie le niveau d'autorisation pour un navigateur Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>Un navigateur Web qui ne peut pas naviguer au sein de cadres jusqu'à HTML.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>Un navigateur Web qui peut naviguer sans risque au sein de cadres jusqu'à HTML mais avec plusieurs restrictions.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>Un navigateur Web qui peut naviguer sans restrictions.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.AuthenticationType">
      <summary vsli:raw="Specifies the method of rights management authentication.">Spécifie la méthode d’authentification de la gestion des droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Internal">
      <summary vsli:raw="Implicit authentication to any requesting user.">Authentification implicite pour tout utilisateur demandeur.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Passport">
      <summary vsli:raw="Windows Live ID authentication.">Authentification Windows Live ID.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Windows">
      <summary vsli:raw="Windows authentication in a corporate domain environment.">Authentification Windows dans un environnement de domaine d’entreprise.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.WindowsPassport">
      <summary vsli:raw="Either Windows authentication or Windows Live ID authentication.">Authentification Windows ou authentification Windows Live ID.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentGrant">
      <summary vsli:raw="Represents a right granted to a user to access information in a rights managed document.">Représente un droit accordé à un utilisateur pour accéder aux informations contenues dans un document soumis à la Gestion des droits.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.ContentGrant" /> qui accorde un <see cref="T:System.Security.RightsManagement.ContentUser" />spécifié à un <see cref="T:System.Security.RightsManagement.ContentRight" /> spécifié.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">L'utilisateur à qui le droit d'accès est accordé.</param>
      <param name="right" vsli:raw="The access right that is granted.">Le droit d'accès qui est accordé.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; for a specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; duration.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.ContentGrant" /> qui accorde un <see cref="T:System.Security.RightsManagement.ContentUser" /> spécifié à un <see cref="T:System.Security.RightsManagement.ContentRight" /> spécifié pour une durée <see cref="T:System.DateTime" /> spécifiée.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">L'utilisateur à qui le droit d'accès est accordé.</param>
      <param name="right" vsli:raw="The access right that is granted.">Le droit d'accès qui est accordé.</param>
      <param name="validFrom" vsli:raw="The starting date and time that the right begins.">La date et l'heure de début d'exercice du droit.</param>
      <param name="validUntil" vsli:raw="The ending date and time that the right expires.">La date et l'heure d'expiration du droit.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.Right">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; that is granted.">Obtient le <see cref="T:System.Security.RightsManagement.ContentRight" /> qui est accordé.</summary>
      <returns vsli:raw="The access right that is granted to the &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.User&quot; /&gt;, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">Le droit d'accès qui est accordé au <see cref="P:System.Security.RightsManagement.ContentGrant.User" />, comme spécifié au constructeur <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.User">
      <summary vsli:raw="Gets the user who is granted the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt;.">Obtient l'utilisateur à qui est accordé le <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> d'accès.</summary>
      <returns vsli:raw="The user that the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; is granted to, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">L'utilisateur à qui le <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> d'accès est accordé, comme spécifié au constructeur <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidFrom">
      <summary vsli:raw="Gets the starting date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins.">Obtient la date et l'heure de début d'exercice du<see cref="P:System.Security.RightsManagement.ContentGrant.Right" />.</summary>
      <returns vsli:raw="The start date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MinValue&quot;&gt;DateTime.MinValue&lt;/see&gt; if there is there is no starting limitation.">Date et heure de début auxquelles l’accord <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> a commencé, <see cref="T:System.DateTime" />ou.<see cref="F:System.DateTime.MinValue" /> s’il n’existe aucune limitation de démarrage.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidUntil">
      <summary vsli:raw="Gets the ending date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires.">Obtient la date et l'heure d'expiration du <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />.</summary>
      <returns vsli:raw="The end date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MaxValue&quot;&gt;DateTime.MaxValue&lt;/see&gt; if there is no ending limitation.">Date et heure de fin auxquelles l’accord <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> a expiré, ou <see cref="T:System.DateTime" />.<see cref="F:System.DateTime.MaxValue" /> s’il n’existe aucune limitation de terminaison.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.ContentRight">
      <summary vsli:raw="Specifies rights that can be granted to users for accessing content in a rights managed document.">Spécifie les droits qui peuvent être accordés aux utilisateurs concernant l’accès au contenu d’un document managé par des droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.DocumentEdit">
      <summary vsli:raw="The user can edit the document that contains the protected content.">L’utilisateur peut modifier le document qui contient le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Edit">
      <summary vsli:raw="The user can edit and encrypt the protected content.">L’utilisateur peut modifier et chiffrer le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Export">
      <summary vsli:raw="The user can export the protected content.">L’utilisateur peut exporter le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Extract">
      <summary vsli:raw="The user can extract (copy and paste) the protected content.">L’utilisateur peut extraire (copier et coller) le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Forward">
      <summary vsli:raw="The user can forward the protected content to another user.">L’utilisateur peut transférer le contenu protégé à un autre utilisateur.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ObjectModel">
      <summary vsli:raw="The user can control programmed access to the protected content.">L’utilisateur peut contrôler l’accès programmé au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Owner">
      <summary vsli:raw="The user is the content owner.  The owner can edit and encrypt the protected content, and decrypt the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">L’utilisateur est le propriétaire du contenu.  Le propriétaire peut modifier et chiffrer le contenu protégé, et déchiffrer le <see cref="T:System.Security.RightsManagement.PublishLicense" /> signé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Print">
      <summary vsli:raw="The user can print the protected content.">L’utilisateur peut imprimer le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Reply">
      <summary vsli:raw="The user can reply to the sender of the protected content.">L’utilisateur peut répondre à l’expéditeur du contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ReplyAll">
      <summary vsli:raw="The user can &quot;reply all&quot; to recipients of the protected content.">L’utilisateur peut « répondre à tous » les destinataires du contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Sign">
      <summary vsli:raw="The user can digitally sign the protected content.">L’utilisateur peut signer numériquement le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.View">
      <summary vsli:raw="The user can view the protected content.">L’utilisateur peut afficher le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ViewRightsData">
      <summary vsli:raw="The user can decrypt and view the rights specified in the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">L’utilisateur peut déchiffrer et afficher les droits spécifiés dans le <see cref="T:System.Security.RightsManagement.PublishLicense" /> signé.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentUser">
      <summary vsli:raw="Represents a user or user-group for granting access to rights managed content.">Représente un utilisateur ou un groupe d’utilisateurs auquel accorder l’accès au contenu géré par des droits.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.ContentUser" />.</summary>
      <param name="name" vsli:raw="The user or group name.">Nom de l'utilisateur ou du groupe.</param>
      <param name="authenticationType" vsli:raw="The method for authentication.">Méthode d'authentification.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AnyoneUser">
      <summary vsli:raw="Gets an instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Obtient une instance du personnage "Tous" <see cref="T:System.Security.RightsManagement.ContentUser" /> persona.</summary>
      <returns vsli:raw="An instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Instance du personnage "Tous" <see cref="T:System.Security.RightsManagement.ContentUser" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Obtient le <see cref="T:System.Security.RightsManagement.AuthenticationType" /> spécifié pour le constructeur <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">
        <see cref="T:System.Security.RightsManagement.AuthenticationType" /> spécifié pour le constructeur <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; is equivalent to another given instance.">Retourne une valeur qui indique si ce <see cref="T:System.Security.RightsManagement.ContentUser" /> est équivalent à une autre instance donnée.</summary>
      <param name="obj" vsli:raw="The user instance to compare for equality.">Instance d'utilisateur dont l'égalité doit être testée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt; are the same for both this user and the given user; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> et <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> sont les mêmes pour cet utilisateur et pour l'utilisateur donné ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.GetHashCode">
      <summary vsli:raw="Returns a computed hash code based on the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">Retourne un code de hachage calculé basé sur l'utilisateur <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> et le <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</summary>
      <returns vsli:raw="A hash code computed from the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">Code de hachage calculé à partir de l'utilisateur <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> et du <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.IsAuthenticated">
      <summary vsli:raw="Returns a value that indicates whether the user is currently authenticated.">Retourne une valeur qui indique si l'utilisateur est actuellement authentifié.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user is currently authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt; until authenticated.">
        <see langword="true" /> si l'utilisateur est actuellement authentifié ; sinon, <see langword="false" />.  La valeur par défaut est <see langword="false" /> jusqu'à l'authentification.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.Name">
      <summary vsli:raw="Gets the user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Obtient l'utilisateur ou le nom de groupe spécifié pour le constructeur <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns vsli:raw="The user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Utilisateur ou nom de groupe spécifié pour le constructeur <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.OwnerUser">
      <summary vsli:raw="Gets an instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Obtient une instance du personnage <see cref="T:System.Security.RightsManagement.ContentUser" /> "Propriétaire".</summary>
      <returns vsli:raw="An instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Instance du personnage <see cref="T:System.Security.RightsManagement.ContentUser" /> "Propriétaire".</returns>
    </member>
    <member name="T:System.Security.RightsManagement.CryptoProvider">
      <summary vsli:raw="Provides digital rights management services for encrypting and decrypting protected content.">Fournit des services de gestion des droits numériques pour chiffrer et déchiffrer du contenu protégé.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BlockSize">
      <summary vsli:raw="Gets the cipher block size, in bytes.">Obtient la taille des blocs de chiffrement, en octets.</summary>
      <returns vsli:raw="The cipher block size, in bytes.  The default block size for Advanced Encryption Standard (AES) is 8.">La taille des blocs de chiffrement, en octets.  La taille de bloc par défaut pour Advanced Encryption Standard (AES) est 8.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
      <summary vsli:raw="Gets a collection listing the rights that passed verification and that are granted to the user.">Obtient une collection qui répertorie les droits qui ont été vérifiés et accordés à l'utilisateur.</summary>
      <returns vsli:raw="A collection enumerating the rights that passed verification and that are granted to the user.">Une collection énumérant les droits qui ont été vérifiés et accordés à l'utilisateur.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to decrypt.">Obtient une valeur qui indique si l'utilisateur possède les droits de déchiffrement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to decrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si le <see cref="T:System.Security.RightsManagement.UseLicense" /> autorise l’utilisateur à déchiffrer ; sinon <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to encrypt.">Obtient une valeur qui indique si l'utilisateur possède les droits de chiffrement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to encrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si le <see cref="T:System.Security.RightsManagement.UseLicense" /> autorise l’utilisateur à chiffrer ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks">
      <summary vsli:raw="Gets a value that indicates whether &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; can accept buffers that are different block sizes in length.">Obtient une valeur qui indique si <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> et <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> peuvent accepter des mémoires tampon ayant des tailles de bloc différentes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; can be a different length from the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the buffers passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; must be the exact same length.  For AES the default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Si la mémoire tampon <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> transmise à peut être une longueur différente de celle de la mémoire tampon passée à <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; sinon, <see langword="false" /> si <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> les <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> mémoires tampon transmises à et doivent avoir la même longueur.  Pour AES, la valeur <see langword="true" />par défaut est.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
      <summary vsli:raw="Decrypts cipher text to clear text.">Déchiffre le texte chiffré en texte clair.</summary>
      <param name="cryptoText" vsli:raw="The cipher text to decrypt.">Le texte chiffré à déchiffrer.</param>
      <returns vsli:raw="The decrypted clear text of &lt;paramref name=&quot;cryptoText&quot; /&gt;.">Le texte clair déchiffré de <paramref name="cryptoText" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cipherText&quot; /&gt; is null.">
        <paramref name="cipherText" /> a la valeur null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Decryption right not granted.">Droit de déchiffrement non accordé.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Security.RightsManagement.CryptoProvider" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</param>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
      <summary vsli:raw="Encrypts clear text to cipher text.">Chiffre un texte clair en texte de chiffrement.</summary>
      <param name="clearText" vsli:raw="The clear text content to encrypt.">Contenu de texte clair à chiffrer.</param>
      <returns vsli:raw="Encrypted cipher text of the given &lt;paramref name=&quot;clearText&quot; /&gt;.">Texte de chiffrement chiffré du <paramref name="clearText" /> donné.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;clearText&quot; /&gt; is null.">
        <paramref name="clearText" /> a la valeur null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Encryption is not permitted.">Le chiffrement n’est pas autorisé.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Finalize">
      <summary vsli:raw="Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.">Libère des ressources et effectue un nettoyage interne avant que l’instance ne soit récupérée par le garbage collection.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.LocalizedNameDescriptionPair">
      <summary vsli:raw="Represents an immutable (read-only) pair of &quot;Name&quot; and &quot;Description&quot; strings.">Représente une paire (en lecture seule) immuable de chaînes “Name” et “Description”.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="name" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; property.">Valeur de la propriété <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> des paramètres régionaux.</param>
      <param name="description" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; property.">Valeur de la propriété <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> des paramètres régionaux.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;name&quot; /&gt; parameter or &lt;paramref name=&quot;description&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="name" /> ou le paramètre <paramref name="description" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description">
      <summary vsli:raw="Gets the locale description.">Obtient la description des paramètres régionaux.</summary>
      <returns vsli:raw="The locale description.">Description des paramètres régionaux.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of a given object match those of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">Indique si les propriétés <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> et <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> d'un objet donné correspondent à celles de cette <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="obj" vsli:raw="The object to compare the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of.">Objet dont les propriétés <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> et <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> doivent être comparées.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of the given object match those of this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les propriétés <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> et <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> d'un objet donné correspondent à celles de cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.GetHashCode">
      <summary vsli:raw="Gets a computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties.">Obtient un code de hachage calculé basé sur les propriétés <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> et <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />.</summary>
      <returns vsli:raw="A computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">Code de hachage calculé basé sur les propriétés <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> et <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> de ce <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name">
      <summary vsli:raw="Gets the locale name.">Obtient le nom des paramètres régionaux.</summary>
      <returns vsli:raw="The locale name.">Nom des paramètres régionaux.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.PublishLicense">
      <summary vsli:raw="Represents a signed rights managed publish license.">Représente une licence de publication signée gérée par des droits.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; class from a specified serialized and signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.PublishLicense" /> à partir d'une <see cref="T:System.Security.RightsManagement.PublishLicense" />sérialisée et signée spécifiée.</summary>
      <param name="signedPublishLicense" vsli:raw="A signed and serialized publish license.">Licence de publication signée et sérialisée.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;signedPublishLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="signedPublishLicense" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The license is invalid.">Le chemin d'accès n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Tente d'acquérir une <see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur ou groupe d'utilisateurs dans un <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> spécifié.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Environnement sécurisé pour la liaison et l'activation de la licence.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur ou groupe d'utilisateurs dans le <paramref name="secureEnvironment" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">L'authentification a échoué.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Tente d'acquérir une <see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur ou groupe d'utilisateurs dans un <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> spécifié.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Environnement sécurisé pour la liaison et l'activation de la licence.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur ou groupe d'utilisateurs dans le <paramref name="secureEnvironment" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">L'authentification a échoué.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ContentId">
      <summary vsli:raw="Gets the publisher-created content identifier.">Obtient l'identificateur de contenu créé par éditeur.</summary>
      <returns vsli:raw="The publisher-created content identifier.">L'identificateur de contenu créé par éditeur.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Returns a decrypted &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; version of this signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Retourne une version <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> déchiffrée de cette <see cref="T:System.Security.RightsManagement.PublishLicense" /> signée.</summary>
      <param name="cryptoProvider" vsli:raw="The rights management service to use for decrypting the license.">Service de gestion des droits à utiliser pour déchiffrer la licence.</param>
      <returns vsli:raw="A decrypted, unsigned version of this license.">Une version de cette licence déchiffrée et non signée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cryptoProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cryptoProvider" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets the contact name for the author or publisher of the content.">Obtient le nom de contact pour l'auteur ou l'éditeur du contenu.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">Nom de contact pour l'auteur ou l'éditeur du contenu.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets the contact URI for the author or publisher of the content.">Obtient l’URI de contact pour l’auteur ou l’éditeur du contenu.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">L’URI (Uniform Resource Identifier) du contact pour l’auteur ou l’éditeur du contenu.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string that was used to create this license.">Retourne la chaîne XrML sérialisée qui a été utilisée pour créer cette licence.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string that was used to create this license.">Chaîne XrML (Extensible Rights Markup Language) sérialisée qui a été utilisée pour créer cette licence.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl">
      <summary vsli:raw="Gets the URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">Obtient l’URI à utiliser pour acquérir une <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <returns vsli:raw="The URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">URI à utiliser pour acquérir un <see cref="T:System.Security.RightsManagement.UseLicense" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementException">
      <summary vsli:raw="Represents an error condition when a rights management operation cannot complete successfully.">Représente une condition d'erreur lorsqu'une opération de gestion des droits ne peut se terminer correctement.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class and sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with information about the exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> et définit le magasin <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les informations à propos de l'exception.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">Objet qui contient les données sérialisées.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> avec un <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> donné.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Le code d'erreur pour l'exception.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> avec des propriétés <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> et <see cref="P:System.Exception.InnerException" /> données.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Le code d'erreur pour l'exception.</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">L'instance d'exception qui a provoqué l'erreur.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> avec des propriétés <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> et <see cref="P:System.Exception.Message" /> données.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Le code d'erreur pour l'exception.</param>
      <param name="message" vsli:raw="A message that describes the error.">Message qui décrit l'erreur.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> avec les <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />, <see cref="P:System.Exception.Message" /> et <see cref="P:System.Exception.InnerException" /> donnés.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Le code d'erreur pour l'exception.</param>
      <param name="message" vsli:raw="A message that describes the error.">Message qui décrit l'erreur.</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">L'instance d'exception qui a provoqué l'erreur.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given message.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> avec un message donné.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Message qui décrit l'erreur.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> avec des propriétés <see cref="P:System.Exception.Message" /> et <see cref="P:System.Exception.InnerException" /> données.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Message qui décrit l'erreur.</param>
      <param name="innerException" vsli:raw="The exception instance that caused this exception.">L'instance d'exception qui a entraîné la levée de cette exception.</param>
    </member>
    <member name="P:System.Security.RightsManagement.RightsManagementException.FailureCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; for the error.">Obtient le <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> pour l'erreur.</summary>
      <returns vsli:raw="The failure code for the error.">Le code d'erreur pour l'exception.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with the parameter name and information about the exception.">Définit le magasin <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à l'aide du nom du paramètre et des informations se rapportant à l'exception.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">Objet qui contient les données sérialisées.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementFailureCode">
      <summary vsli:raw="Specifies error conditions that can occur when performing a rights management operation.">Spécifie les conditions d’erreur qui peuvent se produire lors d’une opération de gestion des droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Aborted">
      <summary vsli:raw="Asynchronous operation canceled, or a non-recoverable error has occurred.">Opération asynchrone annulée ou une erreur non récupérable s’est produite.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ActivationFailed">
      <summary vsli:raw="License activation failed; rights management services are not properly configured.">L’activation de la licence a échoué. Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AdEntryNotFound">
      <summary vsli:raw="The current user was not found in the Active Directory (AD) for certification under Windows authentication.">L’utilisateur actuel est introuvable dans Active Directory (AD) pour la certification sous authentification Windows.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AlreadyInProgress">
      <summary vsli:raw="The requested operation is already in progress.">L’opération demandée est déjà en cours.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AuthenticationFailed">
      <summary vsli:raw="Possible authentication error (HTTP error 401) returned by an Internet request. Or, the current user does not have valid domain credentials in a silent user activation attempt. Or, the certification server in silent user activation is not in the local intranet or trusted sites zone.">Erreur d’authentification possible (erreur HTTP 401) retournée par une demande Internet. Ou, l’utilisateur actuel n’a pas d’informations d’identification de domaine valides pour une tentative d’activation utilisateur en mode silencieux. Ou, le serveur de certification avec activation utilisateur en mode silencieux n’est pas dans l’intranet local ou la zone des sites de confiance.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BadGetInfoQuery">
      <summary vsli:raw="An invalid constant was passed.">Une constante non valide a été transmise.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessPrincipalNotEnabling">
      <summary vsli:raw="The access condition is not matched to the enabling principal that is handed into the bind.">La condition d’accès n’est pas mise en correspondance avec l’activation du principal qui est transmis dans la liaison.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessUnsatisfied">
      <summary vsli:raw="The current user does not satisfy the conditions defined in the End Use License (EUL).">L’utilisateur actuel ne satisfait pas aux conditions définies dans la licence d’utilisateur final (LUF).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindContentNotInEndUseLicense">
      <summary vsli:raw="The specified resource is not contained in any WORK node of the license.">La ressource spécifiée n’est contenue dans aucun nœud de TRAVAIL de la licence.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIndicatedPrincipalMissing">
      <summary vsli:raw="The enabling principal does not match the issued principal of the End Use License (EUL).">L’activation du principal ne correspond pas au principal émis de la licence d’utilisateur final (LUF).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIntervalTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">La période définie pour le contenu protégé a expiré ; l’accès n’est plus autorisé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindMachineNotFoundInGroupIdentity">
      <summary vsli:raw="The current machine is not defined within the rights managed group identity.">L’ordinateur actuel n’est pas défini dans l’identité du groupe géré par les droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoApplicableRevocationList">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoSatisfiedRightsGroup">
      <summary vsli:raw="The specified rights group is not contained in the End Use License (EUL).">Le groupe de droits spécifié n’est pas contenu dans la licence d’utilisateur final (LUF).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindPolicyViolation">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevocationListStale">
      <summary vsli:raw="The license requires that a new revocation list must be acquired.">La licence requiert qu’une nouvelle liste de révocation soit acquise.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedIssuer">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedLicense">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedModule">
      <summary vsli:raw="Rights management services are not properly configured.">Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedPrincipal">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedResource">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindSpecifiedWorkMissing">
      <summary vsli:raw="The End Use License (EUL) contains no WORK node.">La licence d’utilisateur final (LUF) ne contient aucun nœud TRAVAIL.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindValidityTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">La période définie pour le contenu protégé a expiré ; l’accès n’est plus autorisé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BrokenCertChain">
      <summary vsli:raw="The rights management certificate chain is broken.">La chaîne de certificats de gestion des droits est rompue.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ClockRollbackDetected">
      <summary vsli:raw="Clock rollback has been detected. Protected content cannot be accessed.">La restauration d’horloge a été détectée. Impossible d’accéder au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.CryptoOperationUnsupported">
      <summary vsli:raw="A cryptographic operation that was requested is not supported. For example, passing an RMS encrypting object for decrypting purposes.">Une opération de chiffrement demandée n’est pas prise en charge. Par exemple, la transmission d’un objet de chiffrement RMS à des fins de déchiffrement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.DebuggerDetected">
      <summary vsli:raw="Cannot open or publish content with restricted permissions because a debugger has been detected.">Impossible d’ouvrir ou de publier du contenu avec des autorisations restreintes parce qu’un programme de débogage a été détecté.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EmailNotVerified">
      <summary vsli:raw="The user's email address cannot be verified.">L’adresse électronique de l’utilisateur ne peut pas être vérifiée.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnablingPrincipalFailure">
      <summary vsli:raw="The specified principal cannot be enabled.">Impossible d’activer le principal spécifié.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EncryptionNotPermitted">
      <summary vsli:raw="Encryption is not permitted.">Le chiffrement n’est pas autorisé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentCannotLoad">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">Impossible de charger <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentNotLoaded">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">Impossible de charger <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ExpiredOfficialIssuanceLicenseTemplate">
      <summary vsli:raw="The authorized time period defined in the issuance license template has expired; access is no longer permitted.">La période autorisée définie dans le modèle de licence d’émission a expiré ; l’accès n’est plus autorisé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GlobalOptionAlreadySet">
      <summary vsli:raw="The option specified has already been set.">L’option spécifiée a déjà été définie.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GroupIdentityNotSet">
      <summary vsli:raw="A user name was not specified for the client session.">Aucun nom d’utilisateur n’a été spécifié pour la session cliente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidCorrupted">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is incorrectly formatted. Rights management services are not properly configured.">Le format de l’ID matériel (HID) utilisé lors d’une tentative d’activation d’ordinateur est incorrect. Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidInvalid">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is invalid. Rights management services are not properly configured.">L’ID matériel (HID) utilisé lors d’une tentative d’activation d’ordinateur n’est pas valide. Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IdMismatch">
      <summary vsli:raw="The content ID from the license does not match the content ID the license storage session.">L’ID de contenu de la licence ne correspond pas à l’ID de contenu de la session de stockage de licence.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IncompatibleObjects">
      <summary vsli:raw="An object type passed is incompatible with this operation.">Un type d’objet transmis est incompatible avec cette opération.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotInLicense">
      <summary vsli:raw="When creating a bound license, an issuance license, not an end-use license, was specified.">Lors de la création d’une licence limitée, une licence d’émission et pas une licence utilisateur final, a été spécifiée.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotPresent">
      <summary vsli:raw="Some information is missing.">Certaines informations sont manquantes.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InstallationFailed">
      <summary vsli:raw="An installation operation failed.">Une opération d’installation a échoué.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidAlgorithmType">
      <summary vsli:raw="The algorithm type specified is invalid.">Le type d’algorithme spécifié n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidClientLicensorCertificate">
      <summary vsli:raw="Rights management services are not properly configured.">Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEmail">
      <summary vsli:raw="RMS Server email address verification failed.">Échec de la vérification de l’adresse électronique du serveur RMS.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEncodingType">
      <summary vsli:raw="The specified encoding type is invalid.">Le type d’encodage spécifié n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidHandle">
      <summary vsli:raw="Either the environment or the enabling principal handle is invalid.">L’environnement ou le handle d’activation du principal n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidIssuanceLicenseTemplate">
      <summary vsli:raw="The Rights Management Services template contains one or more errors.">Le modèle Services de gestion des droits contient une ou plusieurs erreurs.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidKeyLength">
      <summary vsli:raw="The key length specified in a key/value pair is invalid.">La longueur de clé spécifiée dans une paire clé/valeur n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicense">
      <summary vsli:raw="The license structure in one of the certificates is invalid.">La structure de licence dans l’un des certificats n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicenseSignature">
      <summary vsli:raw="Rights management signed digital certificate cannot be validated. (The signed certificate may have been tampered.)">Impossible de valider le certificat numérique signé de gestion des droits. (Le certificat signé a peut-être été altéré.)</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxPath">
      <summary vsli:raw="Rights management services are not properly configured.">Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxType">
      <summary vsli:raw="Rights management services are not properly configured.">Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidNumericalValue">
      <summary vsli:raw="The numeric value specified is invalid.">La valeur numérique spécifiée n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidRegistryPath">
      <summary vsli:raw="The specified registry path is invalid.">Le chemin d’accès de registre spécifié n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidServerResponse">
      <summary vsli:raw="Rights management services are not properly configured.">Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidTimeInfo">
      <summary vsli:raw="The time information specified is invalid.">Les informations d’heure spécifiées ne sont pas valides.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidVersion">
      <summary vsli:raw="The rights management version is incorrect.">La version de gestion des droits est incorrecte.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.KeyTypeUnsupported">
      <summary vsli:raw="The key type specified in a key/value pair is not supported.">Le type de clé spécifié dans une paire clé/valeur n’est pas pris en charge.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryFail">
      <summary vsli:raw="A library operation failed.">Une opération de la bibliothèque a échoué.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryUnsupportedPlugIn">
      <summary vsli:raw="The specified library plug-in is not supported.">Le plug-in de bibliothèque spécifié n’est pas pris en charge.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseAcquisitionFailed">
      <summary vsli:raw="An End Use License (EUL) could not be acquired from the rights management server.">Impossible d’acquérir une licence d’utilisateur final (LUF) à partir du serveur de gestion des droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseBindingToWindowsIdentityFailed">
      <summary vsli:raw="The current user credentials are not valid for acquiring a license.">Les informations d’identification de l’utilisateur actuel ne sont pas valides pour acquérir une licence.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ManifestPolicyViolation">
      <summary vsli:raw="An operation is in violation of the rights management manifest policy.">Une opération ne respecte pas la stratégie du manifeste de gestion des drois.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.MetadataNotSet">
      <summary vsli:raw="The specified metadata could net be set.">Impossible de définir les métadonnées.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsGroupIdentityActivation">
      <summary vsli:raw="The user is not activated, or no Rights Account Certificate (RAC) was submitted and none was found in the license store to match the license associated with this session.">L’utilisateur n’est pas activé ou aucun certificat de compte de droits (RAC) n’a été envoyé et aucun n’a été trouvé dans le magasin de licences pour correspondre à la licence associée à cette session.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsMachineActivation">
      <summary vsli:raw="The computer must be activated before the user can be activated.">L’ordinateur doit être activé avant l’activation de l’utilisateur.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoAesCryptoProvider">
      <summary vsli:raw="Rights management services are not properly configured.">Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoConnect">
      <summary vsli:raw="Rights management cannot connect to the URI specified for the license server.">La gestion des droits ne peut pas se connecter à l’URI spécifié pour le serveur de licences.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoDistributionPointUrlFound">
      <summary vsli:raw="The protected content is corrupted.">Le contenu protégé est endommagé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoLicense">
      <summary vsli:raw="A required license is not available.">Une licence requise n’est pas disponible.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoMoreData">
      <summary vsli:raw="No license or certificate exists at the specified index.">Aucune licence ou certificat n’existe à l’index spécifié.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotAChain">
      <summary vsli:raw="Rights managed content is corrupted.">Le contenu géré par les droits est endommagé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotSet">
      <summary vsli:raw="The item requested to delete does not exist.">L’élément demandé pour suppression n’existe pas.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutdatedModule">
      <summary vsli:raw="Rights management services are not properly configured.">Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutOfQuota">
      <summary vsli:raw="The license server's maximum quota of End Use Licenses (EULs) has been reached.">Le quota maximal de licences d’utilisateur final (LUF) du serveur de licences a été atteint.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OwnerLicenseNotFound">
      <summary vsli:raw="The document does not contain an Owner License.">Le document ne contient pas de licence de propriétaire.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.QueryReportsNoResults">
      <summary vsli:raw="No instances of the requested attribute exist.">Aucune instance de l’attribut demandé n’existe.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RecordNotFound">
      <summary vsli:raw="The specified license was not found.">La licence spécifiée est introuvable.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RequestDenied">
      <summary vsli:raw="The Rights Management server does not allow temporary certification of the current user.">Le serveur de gestion des droits n’autorise pas la certification temporaire de l’utilisateur actuel.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RevocationInfoNotSet">
      <summary vsli:raw="Certificate or license revocation information has not been set.">Les informations de révocation de certificat ou de licence n’ont pas été définies.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotGranted">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotSet">
      <summary vsli:raw="The requested right was not specified when the content was published with rights management.">Le droit demandé n’a été spécifié quand le contenu a été publié avec la gestion des droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerError">
      <summary vsli:raw="Rights management services are not properly configured.">Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceGone">
      <summary vsli:raw="Rights management services are not properly configured.">Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceMoved">
      <summary vsli:raw="Rights management services are not properly configured.">Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Success">
      <summary vsli:raw="Operation has competed successfully.">Opération terminée avec succès.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyCertificates">
      <summary vsli:raw="The number of certificates has exceeded the maximum number allowed.">Le nombre de certificats a dépassé le nombre maximal autorisé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyLoadedEnvironments">
      <summary vsli:raw="Too many &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; instance have been created.">Trop d’instances <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> ont été créées.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UnexpectedException">
      <summary vsli:raw="An unspecified error occurred.  Also thrown when an application runs in debug mode.">Une erreur non spécifiée s'est produite.  Également levé lorsqu’une application s’exécute en mode débogage.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault">
      <summary vsli:raw="If a request is made for computer activation or a rights account certificate, receiving &lt;see cref=&quot;F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault&quot; /&gt; indicates that the application should pass &lt;see langword=&quot;null&quot; /&gt; into the ActServInfo parameter.">Si une demande d’activation d’ordinateur ou d’un certificat de compte de droits est faite, la réception de <see cref="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault" /> indique que l’application doit passer <see langword="null" /> dans le paramètre ActServInfo.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ValidityTimeViolation">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">La période définie pour le contenu protégé a expiré ; l’accès n’est plus autorisé.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.SecureEnvironment">
      <summary vsli:raw="Represents a secure client session for user activation, license binding, and other rights management operations.">Représente une session cliente sécurisée pour l’activation utilisateur, la liaison de licence et d’autres opérations de gestion des droits.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest&quot; /&gt; specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Obtient le <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" /> spécifié lors de la création de <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns vsli:raw="The application manifest specified to the &lt;see cref=&quot;Overload:System.Security.RightsManagement.SecureEnvironment.Create&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; is created.">Le manifeste d'application spécifié pour la méthode <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" /> lors de la création de <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
      <summary vsli:raw="Creates a secure client session given an application rights manifest, &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt;, and &lt;see cref=&quot;T:System.Security.RightsManagement.UserActivationMode&quot; /&gt;.">Crée une session cliente sécurisée en fonction des éléments suivants : manifeste des droits de l’application, <see cref="T:System.Security.RightsManagement.AuthenticationType" /> et <see cref="T:System.Security.RightsManagement.UserActivationMode" />.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">Manifeste des droits de l’application.</param>
      <param name="authentication" vsli:raw="The method of authentication.">Méthode d’authentification.</param>
      <param name="userActivationMode" vsli:raw="The type of the user rights account certificate.">Type du certificat de compte de droits de l’utilisateur.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">Session cliente sécurisée pour l’activation, la liaison de licence et d’autres opérations de gestion des droits.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Creates a secure client session for a specified user with a given rights manifest.">Crée une session cliente sécurisée pour un utilisateur spécifié avec un manifeste de droits donné.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">Manifeste des droits de l’application.</param>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">Utilisateur ou groupe d’utilisateurs auquel accorder l’accès au contenu géré par des droits.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">Session cliente sécurisée pour l’activation, la liaison de licence et d’autres opérations de gestion des droits.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
      <summary vsli:raw="Returns a list of the activated users.">Retourne une liste des utilisateurs activés.</summary>
      <returns vsli:raw="A list of the currently activated users.">La liste des utilisateurs actuellement activés.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Indicates whether a given user has been activated for accessing rights managed content.">Indique si un utilisateur donné a été activé pour accéder au contenu géré par des droits.</summary>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">Utilisateur ou groupe d’utilisateurs auquel accorder l’accès au contenu géré par des droits.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given &lt;paramref name=&quot;user&quot; /&gt; has been activated for accessing rights managed content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <paramref name="user" /> donné a été activé pour accéder au contenu géré par des droits ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Removes the license activation for a specified user.">Supprime l’activation de la licence pour un utilisateur spécifié.</summary>
      <param name="user" vsli:raw="The user to remove the license activation for.">Utilisateur pour lequel supprimer l’activation de la licence.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;user&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="user" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The given &lt;paramref name=&quot;user&quot; /&gt; is not authenticated with either Windows authentication or Passport authentication.">Le <paramref name="user" /> donné n'est pas authentifié avec l’authentification Windows ou l’authentification Passport.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.User">
      <summary vsli:raw="Gets the user or user-group specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Obtient l'utilisateur ou le groupe d'utilisateurs spécifié lors de la création de <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns vsli:raw="The user or user-group specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">L'utilisateur ou le groupe d'utilisateurs spécifié pour la méthode <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" /> lors de la création de <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UnsignedPublishLicense">
      <summary vsli:raw="Represents an unsigned rights managed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; or an unsigned &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; template.">Représente un <see cref="T:System.Security.RightsManagement.PublishLicense" /> géré de droits non signés ou un modèle <see cref="T:System.Security.RightsManagement.PublishLicense" /> non signé.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class from a specified XrML publish-license template.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> à partir d’un modèle de publication de licence XrML spécifié.</summary>
      <param name="publishLicenseTemplate" vsli:raw="The Extensible Rights Markup Language (XrML) publish-license template to use to create this license.">Modèle de publication de licence XrML (Extensible Rights Markup Language) à utiliser pour créer cette licence.</param>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId">
      <summary vsli:raw="Gets or sets the publisher-created content identifier.">Obtient ou définit l’identificateur du contenu créé par un serveur de publication.</summary>
      <returns vsli:raw="The publisher-created rights-managed content identifier.">Identificateur du contenu géré par des droits créé par un serveur de publication.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Grants">
      <summary vsli:raw="Gets a collection of assigned user rights.">Obtient une collection de droits d'utilisateur assignés.</summary>
      <returns vsli:raw="A collection of the assigned user rights that are provided in this license.">Collection des droits d'utilisateur assignés fournis par cette licence.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
      <summary vsli:raw="Gets a collection of name and description pairs.">Obtient une collection de paires de noms et descriptions.</summary>
      <returns vsli:raw="A collection of name and description pairs.">Collection de paires de noms et descriptions.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Owner">
      <summary vsli:raw="Gets or sets the content owner.">Obtient ou définit le propriétaire du contenu.</summary>
      <returns vsli:raw="The user who owns the published content.">L'utilisateur qui possède le contenu publié.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets or sets the contact name for the author or publisher of the content.">Obtient ou définit le nom de contact pour l'auteur ou l'éditeur du contenu.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">Nom de contact pour l'auteur ou l'éditeur du contenu.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets or sets the contact URI for the author or publisher of the content.">Obtient ou définit l’URI de contact pour l’auteur ou l’éditeur du contenu.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">L’URI (Uniform Resource Identifier) du contact pour l’auteur ou l’éditeur du contenu.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
      <summary vsli:raw="Creates a signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and returns a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">Crée une <see cref="T:System.Security.RightsManagement.PublishLicense" /> signée et retourne une <see cref="T:System.Security.RightsManagement.UseLicense" /> pour l'auteur du document.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Environnement sécurisé pour la liaison et l'activation de la licence.</param>
      <param name="authorUseLicense" vsli:raw="A returned &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">
        <see cref="T:System.Security.RightsManagement.UseLicense" /> retournée pour l'auteur du document.</param>
      <returns vsli:raw="The signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; that is created by signing this &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.PublishLicense" /> signée qui est créée en signant cette <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.ToString">
      <summary vsli:raw="Returns a serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Retourne un modèle sérialisé créé à partir du XrML de <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
      <returns vsli:raw="A serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Modèle sérialisé créé à partir du XrML de <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UseLicense">
      <summary vsli:raw="Represents a license that enables access to protected rights managed content.">Représente une licence qui active l’accès au contenu protégé géré par des droits.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <param name="useLicense" vsli:raw="A use license in serialized Extensible Rights Markup Language (XrML) form.">Une licence d'utilisation dans un formulaire XrML (Extensible Rights Markup Language) sérialisé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="useLicense" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is invalid.">
        <paramref name="useLicense" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ApplicationData">
      <summary vsli:raw="Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">Obtient le dictionnaire de données d'application qui contient des paires clé/valeur transmises de l'application d'édition à l'application consommateur.</summary>
      <returns vsli:raw="The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">Le dictionnaire de données d'application qui contient des paires clé/valeur transmises de l'application d'édition à l'application consommateur.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Binds the license to a given &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Lie la licence à un <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> donné.</summary>
      <param name="secureEnvironment" vsli:raw="The environment to bind the license to.">L’environnement auquel lier la licence.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; instance if the license binding succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Une instance de <see cref="T:System.Security.RightsManagement.CryptoProvider" /> si la liaison de la licence a réussi ; sinon, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ContentId">
      <summary vsli:raw="Gets the content identifier created by the publisher.">Obtient l'identificateur de contenu créé par l'éditeur.</summary>
      <returns vsli:raw="The content identifier created by the publisher.">L'identificateur de contenu créé par l'éditeur.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
      <summary vsli:raw="Indicates if this license is equivalent to another given license.">Indique si cette licence est équivalente à une autre licence donnée.</summary>
      <param name="x" vsli:raw="The license to compare.">La licence à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both licenses are the equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux licences sont équivalentes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.GetHashCode">
      <summary vsli:raw="Returns the hash code associated with this license.">Retourne le code de hachage associé à cette licence.</summary>
      <returns vsli:raw="A hash code for this license.">Code de hachage de cette licence.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.Owner">
      <summary vsli:raw="Gets the owner of the license.">Obtient le propriétaire de la licence.</summary>
      <returns vsli:raw="The owner of the license.">Le propriétaire de la licence.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string used to create this license.">Retourne la chaîne XrML sérialisée utilisée pour créer cette licence.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string originally passed to the &lt;see cref=&quot;M:System.Security.RightsManagement.UseLicense.#ctor(System.String)&quot; /&gt; constructor.">La chaîne XrML (Extensible Rights Markup Language) sérialisée est transmise à l'origine au constructeur <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UserActivationMode">
      <summary vsli:raw="Specifies the type of user Rights Account Certificate to request for rights management activation.">Spécifie le type de certificat de compte de droits d'utilisateur à demander pour l'activation de la gestion des droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Permanent">
      <summary vsli:raw="A permanent Rights Account Certificate.">Un certificat de compte de droits permanents.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Temporary">
      <summary vsli:raw="A temporary Rights Account Certificate.">Un certificat de compte de droits temporaires.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableAttribute">
      <summary vsli:raw="Provides a base class for .NET attributes that report the use scope of attached properties.">Fournit une classe de base pour les attributs .NET Framework qui signale la portée d’utilisation de propriétés jointes.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.AttachedPropertyBrowsableAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute">
      <summary vsli:raw="Specifies that an attached property is browsable only for elements that derive from a specified type.">Indique qu’une propriété jointe ne peut être explorée que pour les éléments qui dérivent d’un type spécifié.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; class, using the provided &lt;paramref name=&quot;targetType&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> à l'aide du <paramref name="targetType" /> fourni.</summary>
      <param name="targetType" vsli:raw="The intended type that scopes the use of the attached property where this .NET Framework attribute applies.">Le type prévu qui définit la portée de l’utilisation de la propriété jointe où cet attribut .NET Framework s’applique.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Détermine si le attribut .NET Framework <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> en cours est identique à un objet spécifié.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">
        <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> à comparer à l'objet <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> spécifié est égal au <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">Retourne le code de hachage pour ce <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> attribut .NET Framework.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">Valeur d'entier 32 bits non signé.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType">
      <summary vsli:raw="Gets the base type that scopes the use of the attached property where this .NET Framework attribute applies.">Obtient le type de base qui définit la portée de l’utilisation de la propriété jointe où cet attribut .NET Framework s’applique.</summary>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Objet <see cref="T:System.Type" /> demandé.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
      <summary vsli:raw="Gets a unique type identifier for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">Reçoit un identificateur de type unique pour ce attribut .NET Framework <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />.</summary>
      <returns vsli:raw="An object that is a unique identifier for the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">Objet qui est un identificateur unique pour le <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />.</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute">
      <summary vsli:raw="Specifies that an attached property is only browsable on an element that also has another specific .NET attribute applied to its class definition.">Spécifie qu’une propriété jointe ne peut être explorée que sur un élément qui a également un autre attribut .NET Framework spécifique appliqué à sa définition de classe.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</summary>
      <param name="attributeType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the  .NET Framework attribute that must also be applied on a class in order for the attached property to be browsable on the class where &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is applied.">
        <see cref="T:System.Type" /> de l’attribut .NET Framework qui doit également être appliqué à une classe pour que la propriété jointe soit consultable dans la classe où <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> est appliqué.</param>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeType">
      <summary vsli:raw="Gets the type of the  .NET Framework attribute that must also be applied on a class.">Obtient le type du attribut .NET Framework qui doit également être appliqué à une classe.</summary>
      <returns vsli:raw="The  .NET Framework attribute type.">attribut .NET Framework Type.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Détermine si le attribut .NET Framework <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> en cours est identique à un objet spécifié.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;.">
        <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> à comparer à l'objet <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> spécifié est égal au <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute.">Retourne le code de hachage pour ce <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> attribut .NET Framework.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">Valeur d'entier 32 bits non signé.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences">
      <summary vsli:raw="Contains properties that specify how an application should behave relative to new WPF features that are in the WindowsBase assembly.">Contient des propriétés qui spécifient comment une application doit se comporter par rapport aux nouvelles fonctionnalités WPF qui se trouvent dans l'assembly WindowsBase.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority">
      <summary vsli:raw="Gets or sets a value that indicates whether information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">Obtient ou définit une valeur indiquant si les informations sur <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> sont enregistrées dans <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si des informations sur <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> sont enregistrées dans <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure">
      <summary vsli:raw="Defines how the dispatcher reacts to failures encountered when it requests processing.">Définit comment le répartiteur réagit aux échecs rencontrés lors des demandes de traitement.</summary>
      <returns vsli:raw="A value that defines how the dispatcher reacts to failures.">Valeur qui définit comment le répartiteur réagit aux échecs.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions">
      <summary vsli:raw="Provides a set of values that describes how the dispatcher responds to failures that are encountered while requesting processing.">Fournit un ensemble de valeurs qui décrivent comment le répartiteur répond aux échecs rencontrées lors de la demande de traitement.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Continue">
      <summary vsli:raw="Continue after the failure.  &#xA;  &#xA; This is the default value. It defines the behavior of the Windows Presentation Foundation dispatcher prior to the .NET Framework 4.7.1. The dispatcher may become unresponsive when this option is selected.">Continuer après l’échec.
Valeur par défaut. Définit le comportement du répartiteur Windows Presentation Foundation avant le .NET Framework 4.7.1. Quand cette option est sélectionnée, le répartiteur peut cesser de répondre.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Reset">
      <summary vsli:raw="Reset the dispatcher's state to try another request the next time one is needed.  &#xA;  &#xA; While this option can sometimes &quot;repair&quot; unresponsiveness, it cannot honor the usual timing of processing, which can be crucial. Selecting this option can lead to unexpected behavior.">Réinitialiser l’état du répartiteur pour essayer une autre requête la prochaine fois.
Même si cette option peut parfois éliminer le problème de blocage, elle ne peut pas honorer le minutage habituel du traitement, ce qui peut être essentiel. Cette option peut entraîner un comportement inattendu.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Throw">
      <summary vsli:raw="Throw an exception.  &#xA;  &#xA; This option immediately brings the problem to the application developer's attention.">Levée d'une exception.
Cette option porte immédiatement le problème à l’attention du développeur de l’application.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked.">Obtient ou définit une valeur qui indique si la méthode de <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> place les délégués dans la file d'attente de répartiteur ou si le délégué est appelé directement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la méthode <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> place les délégués dans la file d'attente de répartiteur ou si le délégué est appelé directement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance">
      <summary vsli:raw="Gets or sets a value that indicates whether a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations.">Obtient ou définit une valeur qui indique si un <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> unique est utilisé pour plusieurs opérations de répartiteur.</summary>
      <returns vsli:raw="true if a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">true si un <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> unique est utilisé pour plusieurs opérations de répartiteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.CoerceValueCallback">
      <summary vsli:raw="Provides a template for a method that is called whenever a dependency property value is being re-evaluated, or coercion is specifically requested.">Fournit un modèle pour une méthode appelée toutes les fois qu'une valeur de propriété de dépendance est réévaluée, ou que la contrainte est demandée spécifiquement.</summary>
      <param name="d" vsli:raw="The object that the property exists on. When the callback is invoked, the property system will pass this value.">L'objet sur lequel existe la propriété. Lorsque le rappel est appelé, le système de propriétés passe cette valeur.</param>
      <param name="baseValue" vsli:raw="The new value of the property, prior to any coercion attempt.">La nouvelle valeur de la propriété, avant toute tentative de contrainte.</param>
      <returns vsli:raw="The coerced value (with appropriate type).">La valeur forcée (avec type approprié).</returns>
    </member>
    <member name="T:System.Windows.Converters.Int32RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Int32Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.Int32RectValueSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Converters.Int32RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Détermine si la <see cref="T:System.String" /> spécifiée peut être convertie en une instance de <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Chaîne à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Détermine si le <see cref="T:System.Windows.Int32Rect" /> spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objet à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Windows.Int32Rect" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une instance de <see cref="T:System.Windows.Int32Rect" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objet à convertir en chaîne.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Représentation sous forme de chaîne du <see cref="T:System.Windows.Int32Rect" /> spécifié.</returns>
    </member>
    <member name="T:System.Windows.Converters.PointValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Point" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.PointValueSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Converters.PointValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Détermine si la <see cref="T:System.String" /> spécifiée peut être convertie en une instance de <see cref="T:System.Windows.Point" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Chaîne à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Détermine si le <see cref="T:System.Windows.Point" /> spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objet à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Point" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Windows.Point" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une instance de <see cref="T:System.Windows.Point" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objet à convertir en chaîne.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Représentation sous forme de chaîne du <see cref="T:System.Windows.Point" /> spécifié.</returns>
    </member>
    <member name="T:System.Windows.Converters.RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.RectValueSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Converters.RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Détermine si la <see cref="T:System.String" /> spécifiée peut être convertie en une instance de <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Chaîne à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Détermine si le <see cref="T:System.Windows.Rect" /> spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objet à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Windows.Rect" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une instance de <see cref="T:System.Windows.Rect" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objet à convertir en chaîne.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Représentation sous forme de chaîne du <see cref="T:System.Windows.Rect" /> spécifié.</returns>
    </member>
    <member name="T:System.Windows.Converters.SizeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Size" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.SizeValueSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Converters.SizeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Détermine si la <see cref="T:System.String" /> spécifiée peut être convertie en une instance de <see cref="T:System.Windows.Size" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Chaîne à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Détermine si le <see cref="T:System.Windows.Size" /> spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objet à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Size" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Windows.Size" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une instance de <see cref="T:System.Windows.Size" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objet à convertir en chaîne.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Représentation sous forme de chaîne du <see cref="T:System.Windows.Size" /> spécifié.</returns>
    </member>
    <member name="T:System.Windows.Converters.VectorValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.VectorValueSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Converters.VectorValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Détermine si la <see cref="T:System.String" /> spécifiée peut être convertie en une instance de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Chaîne à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Détermine si le <see cref="T:System.Windows.Vector" /> spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objet à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Windows.Vector" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une instance de <see cref="T:System.Windows.Vector" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objet à convertir en chaîne.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Représentation sous forme de chaîne du <see cref="T:System.Windows.Vector" /> spécifié.</returns>
    </member>
    <member name="T:System.Windows.Data.DataSourceProvider">
      <summary vsli:raw="Common base class and contract for &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; objects, which are factories that execute some queries to produce a single object or a list of objects that you can use as binding source objects.">Classe de base et contrat communs pour des objets <see cref="T:System.Windows.Data.DataSourceProvider" />, qui sont des fabriques exécutant des requêtes pour produire un seul objet ou une liste d’objets que vous pouvez utiliser comme objets de source de liaison.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; class. This is a protected constructor.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Data.DataSourceProvider" />. Il s'agit d'un constructeur protégé.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <summary vsli:raw="Indicates that initialization of this object is about to begin; no implicit &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; occurs until the matched &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.EndInit&quot; /&gt; method is called.">Indique que l'initialisation de cet objet va commencer ; aucun <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> implicite ne se produit jusqu'à ce que la méthode <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" /> correspondante soit appelée.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <summary vsli:raw="When overridden in a derived class, this base class calls this method when &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.InitialLoad&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; has been called. The base class delays the call if refresh is deferred or initial load is disabled.">En cas de substitution dans une classe dérivée, cette classe de base appelle cette méthode lorsque <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> ou <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> a été appelé. La classe de base diffère l'appel si l'actualisation est différée ou si la charge initiale est désactivée.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Data">
      <summary vsli:raw="Gets the underlying data object.">Obtient l’objet de données sous-jacent.</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the underlying data object.">Valeur de type <see cref="T:System.Object" /> qui est l’objet de données sous-jacent.</returns>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property has a new value.">Se produit lorsque la propriété <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> a une nouvelle valeur.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to change properties of the provider and delay automatic refresh.">Entre un cycle différé que vous pouvez utiliser pour modifier les propriétés du fournisseur et retarder l'actualisation automatique.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">Objet <see cref="T:System.IDisposable" /> que vous pouvez utiliser pour supprimer l’objet appelant.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <summary vsli:raw="Gets or sets the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use.">Obtient ou définit l'objet <see cref="T:System.Windows.Threading.Dispatcher" /> actif pour le thread Interface utilisateur à utiliser.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use. By default, this is the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object that is associated with the thread on which this instance was created.">Objet <see cref="T:System.Windows.Threading.Dispatcher" /> actuel à l' Interface utilisateur thread à utiliser. Par défaut, il s'agit de l'objet <see cref="T:System.Windows.Threading.Dispatcher" /> qui est associé au thread sur lequel cette instance a été créée.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.EndInit">
      <summary vsli:raw="Indicates that the initialization of this object has completed; this causes a &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; if no other &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; is outstanding.">Indique que l'initialisation de cet objet est terminée, ce qui provoque un <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> si aucun autre <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> n'est en attente.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Error">
      <summary vsli:raw="Gets the error of the last query operation.">Obtient l'erreur de la dernière opération de requête.</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the error of the last query operation, or &lt;see langword=&quot;null&quot; /&gt; if there was no error.">Valeur de type <see cref="T:System.Exception" /> qui est l'erreur de la dernière opération de requête ou <see langword="null" /> s'il n'y avait aucune erreur.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <summary vsli:raw="Starts the initial query to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">Démarre la requête initiale destinée au modèle de données sous-jacent. Le résultat est retourné sur la propriété <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.">Obtient ou définit une valeur qui indique s'il faut empêcher ou différer le chargement automatique des données.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; to prevent or delay the automatic loading of data; otherwise, &lt;see langword=&quot;true&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="false" /> pour empêcher ou différer le chargement automatique des données ; sinon, <see langword="true" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <summary vsli:raw="Gets a value that indicates whether there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use.">Obtient une valeur qui indique s'il y a un <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> en cours d'utilisation.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il y a un <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> en cours d'utilisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Data.DataSourceProvider.PropertyChanged&quot; /&gt; event with the provided arguments.">Déclenche l’événement <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> avec les arguments fournis.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">Arguments de l’événement déclenché.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">Les classes dérivées appellent cette méthode pour indiquer qu'une requête est terminée.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">Données qui sont le résultat de la requête.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">Les classes dérivées appellent cette méthode pour indiquer qu'une requête est terminée.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">Données qui sont le résultat de la requête.</param>
      <param name="error" vsli:raw="The error that occurred while running the query. This value is &lt;see langword=&quot;null&quot; /&gt; if there is no error.">Erreur qui s'est produite lors de l'exécution de la requête. Cette valeur est <see langword="null" /> s'il n'y a aucune erreur.</param>
      <param name="completionWork" vsli:raw="Optional delegate that is used to execute completion work on the UI thread, for example, to set additional properties.">Délégué optionnel qui est utilisé pour exécuter le travail d'achèvement sur le thread d'Interface utilisateur, par exemple pour définir des propriétés supplémentaires.</param>
      <param name="callbackArguments" vsli:raw="Optional arguments to send as a parameter with the &lt;paramref name=&quot;completionWork&quot; /&gt; delegate.">Arguments optionnels à envoyer en tant que paramètres avec le délégué <paramref name="completionWork" />.</param>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Se produit en cas de modification d'une valeur de propriété.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.Refresh">
      <summary vsli:raw="Initiates a refresh operation to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">Initialise une opération d'actualisation sur le modèle de données sous-jacent. Le résultat est retourné sur la propriété <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Se produit en cas de modification d'une valeur de propriété.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary vsli:raw="Represents an object that participates in the dependency property system.">Représente un objet qui participe au système des propriétés de dépendance.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Clears the local value of a property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier.">Efface la valeur locale d’une propriété. La propriété à effacer est spécifiée par un identificateur <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <param name="dp" vsli:raw="The dependency property to be cleared, identified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; object reference.">Propriété de dépendance à effacer, identifiée par une référence d’objet <see cref="T:System.Windows.DependencyProperty" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Tentative d’appel à <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> sur un <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Clears the local value of a read-only property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt;.">Efface la valeur locale d’une propriété en lecture seule. La propriété à effacer est spécifiée par <see cref="T:System.Windows.DependencyPropertyKey" />.</summary>
      <param name="key" vsli:raw="The key for the dependency property to be cleared.">Clé de la propriété de dépendance à effacer.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Tentative d’appel à <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> sur un <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Coerces the value of the specified dependency property. This is accomplished by invoking any &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; function specified in property metadata for the dependency property as it exists on the calling &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Convertit la valeur de la propriété de dépendance spécifiée. Pour cela, on appelle toute fonction <see cref="T:System.Windows.CoerceValueCallback" /> spécifiée dans les métadonnées de propriété pour la propriété de dépendance telle qu’elle existe sur le <see cref="T:System.Windows.DependencyObject" /> appelant.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property to coerce.">Identificateur de la propriété de dépendance à forcer.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value were invalid or do not exist.">Le <paramref name="dp" /> spécifié ou sa valeur n’est pas valide ou n’existe pas.</exception>
    </member>
    <member name="P:System.Windows.DependencyObject.DependencyObjectType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">Obtient le <see cref="T:System.Windows.DependencyObjectType" /> qui encapsule le type CLR de cette instance.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">Un <see cref="T:System.Windows.DependencyObjectType" /> qui encapsule le type CLR de cette instance.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.Equals(System.Object)">
      <summary vsli:raw="Determines whether a provided &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Détermine si un <see cref="T:System.Windows.DependencyObject" /> fourni est équivalent au <see cref="T:System.Windows.DependencyObject" /> réel.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; to compare to the current instance.">
        <see cref="T:System.Windows.DependencyObject" /> à comparer à l'instance en cours.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances are the same; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux instances sont identiques ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Obtient un code de hachage pour ce <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Code de hachage d’un entier 32 bits signé.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
      <summary vsli:raw="Creates a specialized enumerator for determining which dependency properties have locally set values on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Crée un énumérateur spécialisé pour déterminer quelles propriétés de dépendance ont des valeurs définies localement sur ce <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns vsli:raw="A specialized local value enumerator.">Un énumérateur de valeur de proximité spécialisé.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the current effective value of a dependency property on this instance of a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Retourne la valeur effective actuelle d’une propriété de dépendance sur cette instance d’un <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">Identificateur <see cref="T:System.Windows.DependencyProperty" /> de la propriété pour laquelle récupérer la valeur.</param>
      <returns vsli:raw="Returns the current effective value.">Retourne la valeur effective actuelle.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value was invalid, or the specified &lt;paramref name=&quot;dp&quot; /&gt; does not exist.">Le <paramref name="dp" /> spécifié ou sa valeur n’était pas valide, ou le <paramref name="dp" /> spécifié n’existe pas.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Re-evaluates the effective value for the specified dependency property.">Réévalue la valeur effective de la propriété de dépendance spécifiée.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to invalidate.">L'identificateur <see cref="T:System.Windows.DependencyProperty" /> de la propriété à invalider.</param>
    </member>
    <member name="P:System.Windows.DependencyObject.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this instance is currently sealed (read-only).">Récupère une valeur qui indique si cette instance est actuellement sealed (en lecture seule).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance is sealed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cette instance est sealed ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Invoked whenever the effective value of any dependency property on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; has been updated. The specific dependency property that changed is reported in the event data.">Méthode appelée chaque fois que la valeur effective d’une propriété de dépendance sur ce <see cref="T:System.Windows.DependencyObject" /> a été mise à jour. La propriété de dépendance spécifique qui a changé est signalée dans les données d’événement.</summary>
      <param name="e" vsli:raw="Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.">Données d’événement qui contiennent l’identificateur de propriété de dépendance présentant un intérêt, les métadonnées de propriété pour le type ainsi que les valeurs anciennes et nouvelles.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the local value of a dependency property, if it exists.">Retourne la valeur locale d’une propriété de dépendance, si elle existe.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">Identificateur <see cref="T:System.Windows.DependencyProperty" /> de la propriété pour laquelle récupérer la valeur.</param>
      <returns vsli:raw="Returns the local value, or returns the sentinel value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; if no local value is set.">Retourne la valeur locale ou la valeur de la sentinelle <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> si aucune valeur locale n’est définie.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the value of a dependency property without changing its value source.">Définit la valeur d’une propriété de dépendance sans modifier sa valeur source.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">Identificateur de la propriété de dépendance à définir.</param>
      <param name="value" vsli:raw="The new local value.">Nouvelle valeur locale.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Vous avez tenté de modifier une propriété de dépendance en lecture seule ou une propriété sur un <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> ne correspond pas au type inscrit pour la propriété <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the local value of a dependency property, specified by its dependency property identifier.">Définit la valeur locale d’une propriété de dépendance, spécifiée par son identificateur de propriété de dépendance.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">Identificateur de la propriété de dépendance à définir.</param>
      <param name="value" vsli:raw="The new local value.">Nouvelle valeur locale.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Vous avez tenté de modifier une propriété de dépendance en lecture seule ou une propriété sur un <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> n'était pas le type correct enregistré pour la propriété <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
      <summary vsli:raw="Sets the local value of a read-only dependency property, specified by the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the dependency property.">Définit la valeur locale d’une propriété de dépendance en lecture seule, spécifiée par l’identificateur <see cref="T:System.Windows.DependencyPropertyKey" /> de la propriété de dépendance.</summary>
      <param name="key" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the property to set.">L'identificateur <see cref="T:System.Windows.DependencyPropertyKey" /> de la propriété à définir.</param>
      <param name="value" vsli:raw="The new local value.">La nouvelle valeur de proximité.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.">Retourne une valeur qui indique si les processus de sérialisation doivent sérialiser la valeur de la propriété de dépendance fournie.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property that should be serialized.">Identificateur de la propriété de dépendance qui doit être sérialisé.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property that is supplied should be value-serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété de dépendance fournie doit être sérialisée par valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyObjectType">
      <summary vsli:raw="Implements an underlying type cache for all &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; derived types.">Implémente un cache de type sous-jacent pour tous les types dérivés <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="P:System.Windows.DependencyObjectType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; of the immediate base class of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Obtient le <see cref="T:System.Windows.DependencyObjectType" /> de la classe de base immédiate du <see cref="T:System.Windows.DependencyObjectType" /> actuel.</summary>
      <returns vsli:raw="The type of the base class.">Type de la classe de base.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents a given system (CLR) type.">Retourne un <see cref="T:System.Windows.DependencyObjectType" /> qui représente un type (CLR) de système donné.</summary>
      <param name="systemType" vsli:raw="The system (CLR) type to convert.">Type CLR de système à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents the system (CLR) type.">
        <see cref="T:System.Windows.DependencyObjectType" /> qui représente le type (CLR) de système.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Retourne le code de hachage pour ce <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Id">
      <summary vsli:raw="Gets a zero-based unique identifier for constant-time array lookup operations.">Obtient un identificateur unique de base zéro pour les opérations de recherche dans des tableaux en temps constant.</summary>
      <returns vsli:raw="An internal identifier.">Identificateur interne.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
      <summary vsli:raw="Determines whether the specified object is an instance of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Détermine si l'objet spécifié est une instance du <see cref="T:System.Windows.DependencyObjectType" /> actuel.</summary>
      <param name="dependencyObject" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Objet à comparer au <see cref="T:System.Windows.DependencyObjectType" /> actif.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; is in the inheritance hierarchy of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; passed as &lt;paramref name=&quot;d&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la classe représentée par le <see cref="T:System.Windows.DependencyObjectType" /> actuel est dans la hiérarchie d'héritage du <see cref="T:System.Windows.DependencyObject" /> passé comme <paramref name="d" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the specified &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Détermine si le <see cref="T:System.Windows.DependencyObjectType" /> actuel dérive du <see cref="T:System.Windows.DependencyObjectType" /> spécifié.</summary>
      <param name="dependencyObjectType" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; to compare.">
        <see cref="T:System.Windows.DependencyObjectType" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; parameter and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent types of classes, and the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the class represented by &lt;paramref name=&quot;dependencyObjectType&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent the same class.">
        <see langword="true" /> si le paramètre <paramref name="dependencyObjectType" /> et le <see cref="T:System.Windows.DependencyObjectType" /> actuel représentent des types de classes et si la classe représentée par le <see cref="T:System.Windows.DependencyObjectType" /> actuel dérive de la classe représentée par <paramref name="dependencyObjectType" />. Sinon, <see langword="false" />. Cette méthode retourne également <see langword="false" /> si <paramref name="dependencyObjectType" /> et le <see cref="T:System.Windows.DependencyObjectType" /> actuel représentent la même classe.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Name">
      <summary vsli:raw="Gets the name of the represented common language runtime (CLR) system type.">Obtient le nom du type de système Common Language Runtime (CLR) représenté.</summary>
      <returns vsli:raw="The name of the represented CLR system type.">Nom du type de système CLR représenté.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.SystemType">
      <summary vsli:raw="Gets the common language runtime (CLR) system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Obtient le type de système Common Language Runtime (CLR) représenté par <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns vsli:raw="The CLR system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Type de système CLR représenté par <see cref="T:System.Windows.DependencyObjectType" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary vsli:raw="Represents a property that can be set through methods such as, styling, data binding, animation, and inheritance.">Représente une propriété qui peut être définie par le biais de méthodes, par exemple style, liaison de données, animation et héritage.</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered.">Ajoute un autre type en tant que propriétaire d’une propriété de dépendance qui a déjà été inscrite.</summary>
      <param name="ownerType" vsli:raw="The type to add as an owner of this dependency property.">Type à ajouter en tant que propriétaire de cette propriété de dépendance.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">Référence à l’identificateur <see cref="T:System.Windows.DependencyProperty" /> d’origine qui identifie la propriété de dépendance. Cet identificateur doit être exposé par la classe d’ajout en tant que champ <see langword="public static readonly" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered, providing dependency property metadata for the dependency property as it will exist on the provided owner type.">Ajoute un autre type en tant que propriétaire d’une propriété de dépendance déjà inscrite, et fournit des métadonnées de propriété de dépendance à la propriété de dépendance telle qu’elle existe sur le type de propriétaire fourni.</summary>
      <param name="ownerType" vsli:raw="The type to add as owner of this dependency property.">Type à ajouter en tant que propriétaire de cette propriété de dépendance.</param>
      <param name="typeMetadata" vsli:raw="The metadata that qualifies the dependency property as it exists on the provided type.">Métadonnées qui qualifient la propriété de dépendance telle qu’elle existe sur le type fourni.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">Référence à l’identificateur <see cref="T:System.Windows.DependencyProperty" /> d’origine qui identifie la propriété de dépendance. Cet identificateur doit être exposé par la classe d’ajout en tant que champ <see langword="public static readonly" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.DefaultMetadata">
      <summary vsli:raw="Gets the default metadata of the dependency property.">Obtient les métadonnées par défaut de la propriété de dépendance.</summary>
      <returns vsli:raw="The default metadata of the dependency property.">Métadonnées par défaut de la propriété de dépendance.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetHashCode">
      <summary vsli:raw="Returns a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Retourne un code de hachage pour ce <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Code de hachage pour cette <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified existing type.">Retourne les métadonnées pour cette propriété de dépendance telle qu’elles existent sur un type existant spécifié.</summary>
      <param name="forType" vsli:raw="The specific type from which to retrieve the dependency property metadata.">Type spécifique à partir duquel récupérer les métadonnées de propriété de dépendance.</param>
      <returns vsli:raw="A property metadata object.">Objet de métadonnées de propriété.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on the specified object instance.">Retourne les métadonnées pour cette propriété de dépendance telle qu’elles existent sur l’instance d’objet spécifiée.</summary>
      <param name="dependencyObject" vsli:raw="A dependency object that is checked for type, to determine which type-specific version of the dependency property the metadata should come from.">Objet de dépendance dont le type est vérifié pour déterminer de quelle version spécifique au type de la propriété de dépendance les métadonnées doivent provenir.</param>
      <returns vsli:raw="A property metadata object.">Objet de métadonnées de propriété.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified type.">Retourne les métadonnées pour cette propriété de dépendance telle qu’elles existent sur un type spécifié.</summary>
      <param name="dependencyObjectType" vsli:raw="A specific object that records the dependency object type from which the dependency property metadata is desired.">Objet spécifique qui enregistre le type d’objet de dépendance à partir duquel les métadonnées de propriété de dépendance sont souhaitées.</param>
      <returns vsli:raw="A property metadata object.">Objet de métadonnées de propriété.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.GlobalIndex">
      <summary vsli:raw="Gets an internally generated value that uniquely identifies the dependency property.">Obtient une valeur générée en interne qui identifie uniquement la propriété de dépendance.</summary>
      <returns vsli:raw="A unique numeric identifier.">Identificateur numérique unique.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object)">
      <summary vsli:raw="Determines whether a specified value is acceptable for this dependency property's type, as checked against the property type provided in the original dependency property registration.">Détermine si une valeur spécifiée est acceptable pour le type de cette propriété de dépendance, comme vérifié par rapport au type de propriété fourni dans l'inscription de propriété de dépendance d'origine.</summary>
      <param name="value" vsli:raw="The value to check.">Valeur à contrôler.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is the registered property type or an acceptable derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur spécifiée est le type de propriété inscrit ou un type dérivé acceptable ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidValue(System.Object)">
      <summary vsli:raw="Determines whether the provided value is accepted for the type of property through basic type checking, and also potentially if it is within the allowed range of values for that type.">Détermine si la valeur fournie est acceptée pour le type de propriété à travers la vérification de type de base, et également si elle se trouve dans la plage de valeurs autorisée pour ce type.</summary>
      <param name="value" vsli:raw="The value to check.">Valeur à contrôler.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is acceptable and is of the correct type or a derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur est acceptable et est du type correct ou un type dérivé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.Name">
      <summary vsli:raw="Gets the name of the dependency property.">Obtient le nom de la propriété de dépendance.</summary>
      <returns vsli:raw="The name of the property.">Nom de la propriété.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Specifies alternate metadata for this dependency property when it is present on instances of a specified type, overriding the metadata that existed for the dependency property as it was inherited from base types.">Spécifie les métadonnées de remplacement pour cette propriété de dépendance quand elle est présente sur des instances d’un type spécifié, substituant les métadonnées qui existaient pour la propriété de dépendance quand elle a été héritée de types de base.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">Type où cette propriété de dépendance est héritée et emplacement où les métadonnées de remplacement fournies seront appliquées.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">Métadonnées à appliquer à la propriété de dépendance sur le type de substitution.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to override metadata on a read-only dependency property (that operation cannot be done using this signature).">Vous avez essayé de substituer des métadonnées sur une propriété de dépendance en lecture seule (vous ne pouvez pas effectuer cette opération à l’aide de cette signature).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the dependency property as it exists on the provided type.">Des métadonnées ont déjà été établies pour la propriété de dépendance telle qu’elle existe sur le type fourni.</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Supplies alternate metadata for a read-only dependency property when it is present on instances of a specified type, overriding the metadata that was provided in the initial dependency property registration. You must pass the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; for the read-only dependency property to avoid raising an exception.">Fournit des métadonnées de remplacement pour une propriété de dépendance en lecture seule quand elle est présente sur des instances d’un type spécifié, substituant les métadonnées fournies dans l’inscription de la propriété de dépendance initiale. Vous devez passer <see cref="T:System.Windows.DependencyPropertyKey" /> pour la propriété de dépendance en lecture seule pour éviter de lever une exception.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">Type où cette propriété de dépendance est héritée et emplacement où les métadonnées de remplacement fournies sont appliquées.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">Métadonnées à appliquer à la propriété de dépendance sur le type de substitution.</param>
      <param name="key" vsli:raw="The access key for a read-only dependency property.">Clé d’accès pour une propriété de dépendance en lecture seule.</param>
    </member>
    <member name="P:System.Windows.DependencyProperty.OwnerType">
      <summary vsli:raw="Gets the type of the object that registered the dependency property with the property system, or added itself as owner of the property.">Obtient le type de l’objet qui a inscrit la propriété de dépendance avec le système de propriétés ou qui s’est ajouté comme propriétaire de la propriété.</summary>
      <returns vsli:raw="The type of the object that registered the property or added itself as owner of the property.">Type de l’objet qui a inscrit la propriété ou qui s’est ajouté comme propriétaire de la propriété.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.PropertyType">
      <summary vsli:raw="Gets the type that the dependency property uses for its value.">Obtient le type que la propriété de dépendance utilise pour sa valeur.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the property value.">
        <see cref="T:System.Type" /> de la valeur de la propriété.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the dependency property identified by this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; instance is a read-only dependency property.">Obtient une valeur qui indique si la propriété de dépendance identifié par cette instance <see cref="T:System.Windows.DependencyProperty" /> est une propriété de dépendance en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété de dépendance est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, and owner type.">Inscrit une propriété de dépendance avec le nom de propriété, le type de propriété et le type de propriétaire spécifiés.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register. The name must be unique within the registration namespace of the owner type.">Nom de la propriété de dépendance à inscrire. Le nom doit être unique dans l’espace de noms d’inscription du type de propriétaire.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Type de la propriété.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificateur de propriété de dépendance qui doit être utilisé pour définir la valeur d’un champ <see langword="public static readonly" /> dans votre classe. Cet identificateur est ensuite utilisé pour faire référence ultérieurement à la propriété de dépendance, pour des opérations comme la définition de sa valeur par programmation ou l’obtention de métadonnées.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, and property metadata.">Inscrit une propriété de dépendance avec le nom de propriété, le type de propriété, le type de propriétaire et les métadonnées de propriété spécifiés.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Type de la propriété.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Métadonnées de propriété pour la propriété de dépendance.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificateur de propriété de dépendance qui doit être utilisé pour définir la valeur d’un champ <see langword="public static readonly" /> dans votre classe. Cet identificateur est ensuite utilisé pour faire référence ultérieurement à la propriété de dépendance, pour des opérations comme la définition de sa valeur par programmation ou l’obtention de métadonnées.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, property metadata, and a value validation callback for the property.">Inscrit une propriété de dépendance avec le nom de propriété, le type de propriétaire et les métadonnées de propriété spécifiés, ainsi qu’un rappel de validation de valeur pour la propriété.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Type de la propriété.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Métadonnées de propriété pour la propriété de dépendance.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">Référence à un rappel qui doit exécuter toute validation personnalisée de la valeur de propriété de dépendance au-delà de la validation de type standard.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificateur de propriété de dépendance qui doit être utilisé pour définir la valeur d’un champ <see langword="public static readonly" /> dans votre classe. Cet identificateur est ensuite utilisé pour faire référence ultérieurement à la propriété de dépendance, pour des opérations comme la définition de sa valeur par programmation ou l’obtention de métadonnées.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, and owner type.">Inscrit une propriété jointe avec le nom de propriété, le type de propriété et le type de propriétaire spécifiés.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Type de la propriété.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificateur de propriété de dépendance qui doit être utilisé pour définir la valeur d’un champ <see langword="public static readonly" /> dans votre classe. Cet identificateur est ensuite utilisé pour faire référence ultérieurement à la propriété de dépendance, pour des opérations comme la définition de sa valeur par programmation ou l’obtention de métadonnées.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, owner type, and property metadata.">Inscrit une propriété jointe avec le nom de propriété, le type de propriété, le type de propriétaire et les métadonnées de propriété spécifiés.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Type de la propriété.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">Métadonnées de propriété pour la propriété de dépendance. Cela peut inclure la valeur par défaut, ainsi que d’autres caractéristiques.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificateur de propriété de dépendance qui doit être utilisé pour définir la valeur d’un champ <see langword="public static readonly" /> dans votre classe. Cet identificateur est ensuite utilisé pour faire référence ultérieurement à la propriété de dépendance, pour des opérations comme la définition de sa valeur par programmation ou l’obtention de métadonnées.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers an attached property with the specified property type, owner type, property metadata, and value validation callback for the property.">Inscrit une propriété jointe avec le type de propriété, le type de propriétaire, les métadonnées de propriété et le rappel de validation de valeur spécifiés pour la propriété.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Type de la propriété.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">Métadonnées de propriété pour la propriété de dépendance. Cela peut inclure la valeur par défaut, ainsi que d’autres caractéristiques.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">Référence à un rappel qui doit exécuter toute validation personnalisée de la valeur de propriété de dépendance au-delà de la validation de type standard.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificateur de propriété de dépendance qui doit être utilisé pour définir la valeur d’un champ <see langword="public static readonly" /> dans votre classe. Cet identificateur est ensuite utilisé pour faire référence ultérieurement à la propriété de dépendance, pour des opérations comme la définition de sa valeur par programmation ou l’obtention de métadonnées.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, and property metadata.">Inscrit une propriété jointe en lecture seule, avec le type de propriété, le type de propriétaire et les métadonnées de propriété spécifiés.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Type de la propriété.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">Métadonnées de propriété pour la propriété de dépendance.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">Clé de propriété de dépendance qui doit être utilisée pour définir la valeur d’un champ statique en lecture seule dans votre classe, qui est ensuite utilisée pour faire référence à la propriété de dépendance.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, property metadata, and a validation callback.">Inscrit une propriété jointe en lecture seule, avec le type de propriété, le type de propriétaire et les métadonnées de propriété spécifiés, ainsi qu’un rappel de validation.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Type de la propriété.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">Métadonnées de propriété de la propriété de dépendance.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">Référence à un rappel créé par l’utilisateur qui doit exécuter les validations personnalisées de la valeur de la propriété de dépendance au-delà de la validation de type standard.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">Clé de propriété de dépendance qui doit être utilisée pour définir la valeur d’un champ statique en lecture seule dans votre classe, qui est ensuite utilisée pour faire référence à la propriété de dépendance.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, and property metadata.">Inscrit une propriété de dépendance en lecture seule, avec le type de propriété, le type de propriétaire et les métadonnées de propriété spécifiés.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Type de la propriété.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Métadonnées de propriété pour la propriété de dépendance.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">Clé de propriété de dépendance qui doit être utilisée pour définir la valeur d’un champ statique en lecture seule dans votre classe, qui est ensuite utilisée pour faire référence à la propriété de dépendance.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, property metadata, and a validation callback.">Inscrit une propriété de dépendance en lecture seule, avec le type de propriété, le type de propriétaire et les métadonnées de propriété spécifiés, ainsi qu’un rappel de validation.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Type de la propriété.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Métadonnées de propriété de la propriété de dépendance.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">Référence à un rappel créé par l’utilisateur qui doit exécuter toute validation personnalisée de la valeur de propriété de dépendance au-delà de la validation de type standard.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">Clé de propriété de dépendance qui doit être utilisée pour définir la valeur d’un champ statique en lecture seule dans votre classe, qui est ensuite utilisée pour faire référence à la propriété de dépendance.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.ToString">
      <summary vsli:raw="Returns the string representation of the dependency property.">Retourne la représentation sous forme de chaîne de la propriété de dépendance.</summary>
      <returns vsli:raw="The string representation of the dependency property.">Représentation sous forme de chaîne de la propriété de dépendance.</returns>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary vsli:raw="Specifies a static value that is used by the WPF property system rather than &lt;see langword=&quot;null&quot; /&gt; to indicate that the property exists, but does not have its value set by the property system.">Spécifie une valeur statique qui est utilisée par le système de propriétés WPF plutôt que <see langword="null" /> pour indiquer que la propriété existe, mais sa valeur n'est pas définie par le système de propriétés.</summary>
    </member>
    <member name="P:System.Windows.DependencyProperty.ValidateValueCallback">
      <summary vsli:raw="Gets the value validation callback for the dependency property.">Obtient le rappel de validation de valeur pour la propriété de dépendance.</summary>
      <returns vsli:raw="The value validation callback for this dependency property, as provided for the &lt;paramref name=&quot;validateValueCallback&quot; /&gt; parameter in the original dependency property registration.">Rappel de validation de valeur pour cette propriété de dépendance, comme fourni pour le paramètre <paramref name="validateValueCallback" /> dans l'inscription de propriété de dépendance d'origine.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary vsli:raw="Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation.">Fournit des données pour différents événements de modification de propriété. En général, ces événements font état des modifications effectives de valeurs dans la valeur d’une propriété de dépendance en lecture seule. Il est aussi possible de l’utiliser dans le cadre d’une implémentation de <see cref="T:System.Windows.PropertyChangedCallback" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <param name="property" vsli:raw="The identifier for the dependency property that changed.">Identificateur de la propriété de dépendance modifiée.</param>
      <param name="oldValue" vsli:raw="The value of the property before the change reported by the relevant event or state change.">Valeur de la propriété avant la modification signalée par l'événement ou la modification d'état concerné(e).</param>
      <param name="newValue" vsli:raw="The value of the property after the change reported by the relevant event or state change.">Valeur de la propriété après la modification signalée par l'événement ou la modification d'état concerné(e).</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Détermine si l'objet fourni est équivalent au <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Objet à comparer au <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> en cours.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet fourni est équivalent au <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Détermine si le <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> spécifié est équivalent au <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actuel.</summary>
      <param name="args" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">
        <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> à comparer au <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> fourni est équivalent au <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode">
      <summary vsli:raw="Gets a hash code  for this &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Obtient un code de hachage pour ce <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary vsli:raw="Gets the value of the property after the change.">Obtient ou définit la propriété après modification.</summary>
      <returns vsli:raw="The property value after the change.">Valeur de propriété après modification.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary vsli:raw="Gets the value of the property before the change.">Obtient la valeur de la propriété avant modification.</summary>
      <returns vsli:raw="The property value before the change.">Valeur de propriété avant modification.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects have the same value.">Détermine si deux objets <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> spécifiés ont la même valeur.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Premier <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> à comparer.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Deuxième <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux instances <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> sont équivalentes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects are different.">Détermine si deux objets <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> spécifiés sont différents.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Premier <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> à comparer.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Deuxième <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux instances de <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> sont différentes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary vsli:raw="Gets the identifier for the dependency property where the value change occurred.">Obtient l'identificateur pour la propriété de dépendance où la valeur a été modifiée.</summary>
      <returns vsli:raw="The identifier field of the dependency property where the value change occurred.">Champ d'identificateur de la propriété de dépendance où la valeur a été modifiée.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle events raised when a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; is changed on a particular &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation.">Représente la méthode qui gère les événements déclenchés en cas de modification de <see cref="T:System.Windows.DependencyProperty" /> sur une implémentation de <see cref="T:System.Windows.DependencyObject" /> donnée.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="The event data.">Données d'événement.</param>
    </member>
    <member name="T:System.Windows.DependencyPropertyKey">
      <summary vsli:raw="Provides a dependency property identifier for limited write access to a read-only dependency property.">Fournit un identificateur de propriété de dépendance pour un accès en écriture limité à une propriété de dépendance en lecture seule.</summary>
    </member>
    <member name="P:System.Windows.DependencyPropertyKey.DependencyProperty">
      <summary vsli:raw="Gets the dependency property identifier associated with this specialized read-only dependency property identifier.">Obtient l'identificateur de propriété de dépendance associé à cet identificateur de propriété de dépendance en lecture seule spécialisé.</summary>
      <returns vsli:raw="The relevant dependency property identifier.">Identificateur de propriété de dépendance pertinent.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Overrides the metadata of a read-only dependency property that is represented by this dependency property identifier.">Substitue les métadonnées d'une propriété de dépendance en lecture seule représentée par cet identificateur de propriété de dépendance.</summary>
      <param name="forType" vsli:raw="The type on which this dependency property exists and metadata should be overridden.">Type sur lequel cette propriété de dépendance est basée et dont les métadonnées doivent être substituées.</param>
      <param name="typeMetadata" vsli:raw="Metadata supplied for this type.">Métadonnées fournies pour ce type.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted metadata override on a read-write dependency property (cannot be done using this signature).">A tenté de substituer des métadonnées sur une propriété de dépendance en lecture-écriture (cette opération ne peut pas être exécutée à l'aide de cette signature).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the property as it exists on the provided type.">Les métadonnées ont déjà été établies pour la propriété telle que définie par le type fourni.</exception>
    </member>
    <member name="T:System.Windows.Expression">
      <summary vsli:raw="This type supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Ce type prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destinée à être utilisée directement à partir de votre code.</summary>
    </member>
    <member name="T:System.Windows.ExpressionConverter">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; to and from other types.">Convertit des instances de <see cref="T:System.Windows.Expression" /> vers et à partir d'autres types.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.ExpressionConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.ExpressionConverter" />.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert from a source object to an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object.">Retourne une valeur indiquant si ce convertisseur peut effectuer la conversion d'un objet source vers un objet <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert from.">
        <see cref="T:System.Type" /> qui représente le type à partir duquel vous voulez effectuer la conversion.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to a specific destination type.">Retourne une valeur indiquant si ce convertisseur peut effectuer la conversion d'un objet <see cref="T:System.Windows.Expression" /> vers un type de destination spécifique.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">
        <see cref="T:System.Type" /> qui représente le type vers lequel vous souhaitez effectuer la conversion.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided value to the &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; type.">Convertit la valeur fournie en type <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">
        <see cref="T:System.Globalization.CultureInfo" /> à utiliser comme culture actuelle.</param>
      <param name="value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">Lève toujours une exception et retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the provided &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to the specified type.">Convertit l'objet <see cref="T:System.Windows.Expression" /> fourni dans le type spécifié.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">
        <see cref="T:System.Globalization.CultureInfo" /> à utiliser comme culture actuelle.</param>
      <param name="value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">
        <see cref="T:System.Type" /> qui représente le type vers lequel vous souhaitez effectuer la conversion.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">Lève toujours une exception et retourne <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Freezable">
      <summary vsli:raw="Defines an object that has a modifiable state and a read-only (frozen) state. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; provide detailed change notification, can be made immutable, and can clone themselves.">Définit un objet qui a un état modifiable et un état en lecture seule (figé). Les classes qui dérivent de <see cref="T:System.Windows.Freezable" /> fournissent une notification de modifications détaillée, peuvent être rendues immuables et peuvent être clonées.</summary>
    </member>
    <member name="M:System.Windows.Freezable.#ctor">
      <summary vsli:raw="Initializes a new instance of a &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">Initialise une nouvelle instance d'une classe dérivée de <see cref="T:System.Windows.Freezable" />.</summary>
    </member>
    <member name="P:System.Windows.Freezable.CanFreeze">
      <summary vsli:raw="Gets a value that indicates whether the object can be made unmodifiable.">Obtient une valeur qui indique si l’objet peut être rendu non modifiable.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object can be made unmodifiable or is already unmodifiable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’objet actif peut être rendu non modifiable ou s’il l’est déjà ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Freezable.Changed">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; or an object it contains is modified.">Se produit lorsque <see cref="T:System.Windows.Freezable" /> ou un objet qu'il contient est modifié.</summary>
    </member>
    <member name="M:System.Windows.Freezable.Clone">
      <summary vsli:raw="Creates a modifiable clone of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.">Crée un clone modifiable de <see cref="T:System.Windows.Freezable" />, en créant des copies complètes des valeurs de l’objet. Lors de la copie des propriétés de dépendance de l’objet, cette méthode copie les expressions (qui peuvent ne plus se résoudre), mais pas les animations ni leurs valeurs actuelles.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Clone modifiable de l'objet actif. La valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l’objet cloné est <see langword="false" />, même si la valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source est <see langword="true." />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">Fait de l’instance un clone (copie complète) du <see cref="T:System.Windows.Freezable" /> spécifié utilisant des valeurs de propriété (non animée) de base.</summary>
      <param name="sourceFreezable" vsli:raw="The object to clone.">Objet à cloner.</param>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValue">
      <summary vsli:raw="Creates a modifiable clone (deep copy) of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using its current values.">Crée un clone modifiable (copie complète) de <see cref="T:System.Windows.Freezable" /> en utilisant ses valeurs actuelles.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Clone modifiable de l'objet actif. La valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l’objet cloné est <see langword="false" />, même si la valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source est <see langword="true." />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a modifiable clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values.">Fait de l’instance un clone (copie complète) modifiable du <see cref="T:System.Windows.Freezable" /> spécifié à l’aide des valeurs de propriété actuelles.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to be cloned.">
        <see cref="T:System.Windows.Freezable" /> à cloner.</param>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstance">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Freezable" />.</summary>
      <returns vsli:raw="The new instance.">Nouvelle instance.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstanceCore">
      <summary vsli:raw="When implemented in a derived class, creates a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">Une fois implémentée dans une classe dérivée, initialise une nouvelle instance de la classe dérivée <see cref="T:System.Windows.Freezable" />.</summary>
      <returns vsli:raw="The new instance.">Nouvelle instance.</returns>
    </member>
    <member name="M:System.Windows.Freezable.Freeze">
      <summary vsli:raw="Makes the current object unmodifiable and sets its &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt;.">Rend l’objet actif non modifiable et attribue à sa propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> la valeur <see langword="true" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be made unmodifiable.">Le <see cref="T:System.Windows.Freezable" /> ne peut pas être rendu non modifiable.</exception>
    </member>
    <member name="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)">
      <summary vsli:raw="If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;, this method indicates whether the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable. If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;false&quot; /&gt;, this method attempts to make the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; unmodifiable and indicates whether the operation succeeded.">Si le paramètre <paramref name="isChecking" /> est <see langword="true" />, cette méthode indique si le <see cref="T:System.Windows.Freezable" /> spécifié peut être rendu non modifiable ou pas. Si le paramètre <paramref name="isChecking" /> est <see langword="false" />, cette méthode essaie de rendre le <see cref="T:System.Windows.Freezable" /> spécifié non modifiable et indique si l'opération a réussi.</summary>
      <param name="freezable" vsli:raw="The object to check or make unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the object is checked to determine whether it can be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the object is made unmodifiable, if possible.">Objet à vérifier ou à rendre non modifiable. Si <paramref name="isChecking" /> est <see langword="true" />, l'objet est vérifié pour déterminer s'il peut être rendu non modifiable ou pas. Si <paramref name="isChecking" /> est <see langword="false" />, l'objet est rendu non modifiable, si possible.</param>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">
        <see langword="true" /> pour retourner une indication de la possibilité ou non de figer l'objet (sans le figer réellement) ; <see langword="false" /> pour figer réellement l'objet.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">Si <paramref name="isChecking" /> est <see langword="true" />, cette méthode retourne <see langword="true" /> si le <see cref="T:System.Windows.Freezable" /> spécifié peut être rendu non modifiable, ou <see langword="false" /> si cette opération est impossible. Si <paramref name="isChecking" /> est <see langword="false" />, cette méthode retourne <see langword="true" /> si le <see cref="T:System.Windows.Freezable" /> spécifié est désormais non modifiable, ou <see langword="false" /> si cette opération est impossible.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="When &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the attempt to make &lt;paramref name=&quot;freezable&quot; /&gt; unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).">Lorsque <paramref name="isChecking" /> est <see langword="false" />, la tentative de rendre <paramref name="freezable" /> non modifiable a échoué ; l'objet est maintenant dans un état inconnu (il peut être partiellement figé).</exception>
    </member>
    <member name="M:System.Windows.Freezable.FreezeCore(System.Boolean)">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object unmodifiable or tests whether it can be made unmodifiable.">Rend l'objet <see cref="T:System.Windows.Freezable" /> non modifiable ou vérifie si celui-ci peut être rendu non modifiable ou pas.</summary>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">
        <see langword="true" /> pour retourner une indication de la possibilité ou non de figer l'objet (sans le figer réellement) ; <see langword="false" /> pour figer réellement l'objet.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">Si <paramref name="isChecking" /> est <see langword="true" />, cette méthode retourne <see langword="true" /> si le <see cref="T:System.Windows.Freezable" /> peut être rendu non modifiable, ou <see langword="false" /> si cette opération est impossible. Si <paramref name="isChecking" /> est <see langword="false" />, cette méthode retourne <see langword="true" /> si le <see cref="T:System.Windows.Freezable" /> spécifié est désormais non modifiable, ou <see langword="false" /> si cette opération est impossible.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, using base (non-animated) property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">Crée une copie figée de <see cref="T:System.Windows.Freezable" />, à l'aide des valeurs de propriété (non-animées) de base. Étant donné que la copie est figée, tous les sous-objets figés sont copiés par référence.</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Copie figée de <see cref="T:System.Windows.Freezable" />. La propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la copie a la valeur <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be frozen because it contains expressions or animated properties.">
        <see cref="T:System.Windows.Freezable" /> ne peut pas être figé parce qu'il contient des expressions ou des propriétés animées.</exception>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">Transforme l’instance en clone figé du <see cref="T:System.Windows.Freezable" /> spécifié utilisant des valeurs de propriété (non animée) de base.</summary>
      <param name="sourceFreezable" vsli:raw="The instance to copy.">Instance à copier.</param>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">Crée une copie figée de <see cref="T:System.Windows.Freezable" /> à l'aide des valeurs de propriété actuelles. Étant donné que la copie est figée, tous les sous-objets figés sont copiés par référence.</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Copie figée de <see cref="T:System.Windows.Freezable" />. La propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la copie a la valeur <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the current instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. If the object has animated dependency properties, their current animated values are copied.">Convertit l'instance actuelle en un clone figé du <see cref="T:System.Windows.Freezable" /> spécifié. Si l’objet a des propriétés de dépendance animées, leurs valeurs animées actuelles sont copiées.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to copy and freeze.">
        <see cref="T:System.Windows.Freezable" /> à copier et figer.</param>
    </member>
    <member name="P:System.Windows.Freezable.IsFrozen">
      <summary vsli:raw="Gets a value that indicates whether the object is currently modifiable.">Obtient une valeur qui indique si l’objet est actuellement modifiable.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is frozen and cannot be modified; &lt;see langword=&quot;false&quot; /&gt; if the object can be modified.">
        <see langword="true" /> si l’objet est figé et ne peut pas être modifié ; <see langword="false" /> si l’objet peut être modifié.</returns>
    </member>
    <member name="M:System.Windows.Freezable.OnChanged">
      <summary vsli:raw="Called when the current &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object is modified.">Appelé lorsque l’objet <see cref="T:System.Windows.Freezable" /> actuel est modifié.</summary>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary vsli:raw="Ensures that appropriate context pointers are established for a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; data member that has just been set.">Garantit que les pointeurs de contexte appropriés sont établis pour un membre de données de type <see cref="T:System.Windows.DependencyObjectType" /> qui vient juste d'être défini.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">Valeur précédente du membre de données.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">Valeur actuelle du membre de données.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destiné à être directement utilisé à partir de votre code.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">Valeur précédente du membre de données.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">Valeur actuelle du membre de données.</param>
      <param name="property" vsli:raw="The property that changed.">Propriété ayant changé.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation of &lt;see cref=&quot;M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)&quot; /&gt; to also invoke any &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; handlers in response to a changing dependency property of type &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;.">Substitue l’implémentation <see cref="T:System.Windows.DependencyObject" /> de <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> pour appeler également tous les gestionnaires <see cref="E:System.Windows.Freezable.Changed" /> en réponse à une propriété de dépendance variable de type <see cref="T:System.Windows.Freezable" />.</summary>
      <param name="e" vsli:raw="Event data that contains information about which property changed, and its old and new values.">Données d’événement qui contiennent des informations sur les propriétés modifiées, les anciennes valeurs et les nouvelles.</param>
    </member>
    <member name="M:System.Windows.Freezable.ReadPreamble">
      <summary vsli:raw="Ensures that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is being accessed from a valid thread. Inheritors of &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; must call this method at the beginning of any API that reads data members that are not dependency properties.">Garantit que <see cref="T:System.Windows.Freezable" /> est accessible à partir d'un thread valide. Les héritiers de <see cref="T:System.Windows.Freezable" /> doivent appeler cette méthode au début de toute API lisant les membres de données qui ne sont pas des propriétés de dépendance.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePostscript">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; event for the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; and invokes its &lt;see cref=&quot;M:System.Windows.Freezable.OnChanged&quot; /&gt; method. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; should call this method at the end of any API that modifies class members that are not stored as dependency properties.">Déclenche l’événement <see cref="E:System.Windows.Freezable.Changed" /> pour le <see cref="T:System.Windows.Freezable" /> et appelle sa méthode <see cref="M:System.Windows.Freezable.OnChanged" />. Les classes qui dérivent de <see cref="T:System.Windows.Freezable" /> doivent appeler cette méthode à la fin de toute API qui modifie des membres de classe qui ne sont pas stockés en tant que propriétés de dépendance.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePreamble">
      <summary vsli:raw="Verifies that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is not frozen and that it is being accessed from a valid threading context. &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; inheritors should call this method at the beginning of any API that writes to data members that are not dependency properties.">Vérifie que le <see cref="T:System.Windows.Freezable" /> n'est pas figé et que son accès s'effectue à partir d'un contexte de thread valide. Les héritiers de <see cref="T:System.Windows.Freezable" /> doivent appeler cette méthode au début de toute API écrivant dans les membres de données qui ne sont pas des propriétés de dépendance.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; instance is frozen and cannot have its members written to.">L'instance de <see cref="T:System.Windows.Freezable" /> est figée et ses membres ne sont pas accessibles en écriture.</exception>
    </member>
    <member name="T:System.Windows.Input.FocusNavigationDirection">
      <summary vsli:raw="Specifies the direction within a user interface (UI) in which a desired focus change request is attempted. The direction is either based on tab order or by relative direction in layout.">Spécifie la direction dans une interface utilisateur où une demande de modification du focus souhaitée est tentée. La direction est soit basée sur l'ordre de tabulation, soit par direction relative dans la disposition.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Down">
      <summary vsli:raw="Move focus to another focusable element downwards from the currently focused element.">Déplacer le focus sur un autre élément pouvant être actif et situé plus bas par rapport à l'élément ayant actuellement le focus.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.First">
      <summary vsli:raw="Move focus to the first focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Déplacer le focus sur le premier élément pouvant être actif dans l'ordre de tabulation. Non pris en charge pour <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Last">
      <summary vsli:raw="Move focus to the last focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Déplacer le focus sur le dernier élément pouvant être actif dans l'ordre de tabulation. Non pris en charge pour <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Left">
      <summary vsli:raw="Move focus to another focusable element to the left of the currently focused element.">Déplacer le focus sur un autre élément pouvant être actif et situé à gauche de l'élément ayant actuellement le focus.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Next">
      <summary vsli:raw="Move focus to the next focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Déplacer le focus sur l'élément pouvant être actif suivant dans l'ordre de tabulation. Non pris en charge pour <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Previous">
      <summary vsli:raw="Move focus to the previous focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Déplacer le focus sur l'élément pouvant être actif précédent dans l'ordre de tabulation. Non pris en charge pour <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Right">
      <summary vsli:raw="Move focus to another focusable element to the right of the currently focused element.">Déplacer le focus sur un autre élément pouvant être actif et situé à droite de l'élément ayant actuellement le focus.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Up">
      <summary vsli:raw="Move focus to another focusable element upwards from the currently focused element.">Déplacer le focus sur un autre élément pouvant être actif et situé plus haut par rapport à l'élément ayant actuellement le focus.</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary vsli:raw="Specifies the possible key values on a keyboard.">Spécifie les valeurs de clés possibles sur un clavier.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary vsli:raw="The A key.">Touche A.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC1">
      <summary vsli:raw="The ABNT_C1 (Brazilian) key.">Touche ABNT_C1 (Brésil).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC2">
      <summary vsli:raw="The ABNT_C2 (Brazilian) key.">Touche ABNT_C2 (Brésil).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary vsli:raw="The Add key.">Touche Ajouter.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Apps">
      <summary vsli:raw="The Application key (Microsoft Natural Keyboard). Also known as the Menu key, as it displays an application-specific context menu.">Touche Application (clavier Microsoft Natural Keyboard). Également appelée touche de menu car elle affiche un menu contextuel spécifique à l'application.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Attn">
      <summary vsli:raw="The ATTN key.">Touche ATTN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary vsli:raw="The B key.">Touche B.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary vsli:raw="The Backspace key.">Touche Retour arrière.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserBack">
      <summary vsli:raw="The Browser Back key.">Touche de page précédente du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserFavorites">
      <summary vsli:raw="The Browser Favorites key.">Touche des Favoris du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserForward">
      <summary vsli:raw="The Browser Forward key.">Touche de page suivante du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserHome">
      <summary vsli:raw="The Browser Home key.">Touche de début du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserRefresh">
      <summary vsli:raw="The Browser Refresh key.">Touche d’actualisation du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserSearch">
      <summary vsli:raw="The Browser Search key.">Touche de recherche du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserStop">
      <summary vsli:raw="The Browser Stop key.">Touche d’arrêt du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary vsli:raw="The C key.">Touche C.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Cancel">
      <summary vsli:raw="The Cancel key.">Touche d’annulation.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Capital">
      <summary vsli:raw="The Caps Lock key.">Touche Verr. maj.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary vsli:raw="The Caps Lock key.">Touche Verr. maj.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Clear">
      <summary vsli:raw="The Clear key.">Touche Effacer.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CrSel">
      <summary vsli:raw="The CRSEL key.">Touche CRSEL.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary vsli:raw="The D key.">Touche D.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary vsli:raw="The 0 (zero) key.">Touche 0 (zéro).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary vsli:raw="The 1 (one) key.">Touche 1 (un).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary vsli:raw="The 2 key.">Touche 2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary vsli:raw="The 3 key.">Touche 3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary vsli:raw="The 4 key.">Touche 4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary vsli:raw="The 5 key.">Touche 5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary vsli:raw="The 6 key.">Touche 6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary vsli:raw="The 7 key.">Touche 7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary vsli:raw="The 8 key.">Touche 8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary vsli:raw="The 9 key.">Touche 9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeAlphanumeric">
      <summary vsli:raw="The DBE_ALPHANUMERIC key.">Touche DBE_ALPHANUMERIC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeCodeInput">
      <summary vsli:raw="The DBE_CODEINPUT key.">Touche DBE_CODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDbcsChar">
      <summary vsli:raw="The DBE_DBCSCHAR key.">Touche DBE_DBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDetermineString">
      <summary vsli:raw="The DBE_DETERMINESTRING key.">Touche DBE_DETERMINESTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterDialogConversionMode">
      <summary vsli:raw="The DBE_ENTERDLGCONVERSIONMODE key.">Touche DBE_ENTERDLGCONVERSIONMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterImeConfigureMode">
      <summary vsli:raw="The DBE_ENTERIMECONFIGMODE key.">Touche DBE_ENTERIMECONFIGMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterWordRegisterMode">
      <summary vsli:raw="The DBE_ENTERWORDREGISTERMODE key.">Touche DBE_ENTERWORDREGISTERMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeFlushString">
      <summary vsli:raw="The DBE_FLUSHSTRING key.">Touche DBE_FLUSHSTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeHiragana">
      <summary vsli:raw="The DBE_HIRAGANA key.">Touche DBE_HIRAGANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeKatakana">
      <summary vsli:raw="The DBE_KATAKANA key.">Touche DBE_KATAKANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoCodeInput">
      <summary vsli:raw="The DBE_NOCODEINPUT key.">Touche DBE_NOCODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoRoman">
      <summary vsli:raw="The DBE_NOROMAN key.">Touche DBE_NOROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeRoman">
      <summary vsli:raw="The DBE_ROMAN key.">Touche DBE_ROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeSbcsChar">
      <summary vsli:raw="The DBE_SBCSCHAR key.">Touche DBE_SBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DeadCharProcessed">
      <summary vsli:raw="The key is used with another key to create a single combined character.">La touche est utilisée avec une autre touche pour créer un caractère combiné unique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary vsli:raw="The Decimal key.">Touche de décimale.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary vsli:raw="The Delete key.">Touche Suppression.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary vsli:raw="The Divide key.">Touche de division.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary vsli:raw="The Down Arrow key.">Touche Bas.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary vsli:raw="The E key.">Touche E.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary vsli:raw="The End key.">Touche Fin.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary vsli:raw="The Enter key.">Touche Entrée.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.EraseEof">
      <summary vsli:raw="The ERASE EOF key.">Touche ERASE EOF.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary vsli:raw="The ESC key.">Touche Échap.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Execute">
      <summary vsli:raw="The Execute key.">Touche Exécuter.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ExSel">
      <summary vsli:raw="The EXSEL key.">Touche EXSEL.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary vsli:raw="The F key.">Touche F.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary vsli:raw="The F1 key.">Touche F1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary vsli:raw="The F10 key.">Touche F10.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary vsli:raw="The F11 key.">Touche F11.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary vsli:raw="The F12 key.">Touche F12.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F13">
      <summary vsli:raw="The F13 key.">Touche F13.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F14">
      <summary vsli:raw="The F14 key.">Touche F14.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F15">
      <summary vsli:raw="The F15 key.">Touche F15.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F16">
      <summary vsli:raw="The F16 key.">Touche F16.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F17">
      <summary vsli:raw="The F17 key.">Touche F17.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F18">
      <summary vsli:raw="The F18 key.">Touche F18.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F19">
      <summary vsli:raw="The F19 key.">Touche F19.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary vsli:raw="The F2 key.">Touche F2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F20">
      <summary vsli:raw="The F20 key.">Touche F20.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F21">
      <summary vsli:raw="The F21 key.">Touche F21.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F22">
      <summary vsli:raw="The F22 key.">Touche F22.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F23">
      <summary vsli:raw="The F23 key.">Touche F23.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F24">
      <summary vsli:raw="The F24 key.">Touche F24.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary vsli:raw="The F3 key.">Touche F3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary vsli:raw="The F4 key.">Touche F4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary vsli:raw="The F5 key.">Touche F5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary vsli:raw="The F6 key.">Touche F6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary vsli:raw="The F7 key.">Touche F7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary vsli:raw="The F8 key.">Touche F8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary vsli:raw="The F9 key.">Touche F9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.FinalMode">
      <summary vsli:raw="The IME Final mode key.">Touche mode final IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary vsli:raw="The G key.">Touche G.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary vsli:raw="The H key.">Touche H.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HangulMode">
      <summary vsli:raw="The IME Hangul mode key.">Touche mode Hangul IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HanjaMode">
      <summary vsli:raw="The IME Hanja mode key.">Touche mode Hanja IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Help">
      <summary vsli:raw="The Help key.">Touche Aide.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary vsli:raw="The Home key.">Touche Début.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary vsli:raw="The I key.">Touche I.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeAccept">
      <summary vsli:raw="The IME Accept key.">Touche Accepter IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeConvert">
      <summary vsli:raw="The IME Convert key.">Touche de conversion IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeModeChange">
      <summary vsli:raw="The IME Mode change request.">Touche de demande de changement de mode IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeNonConvert">
      <summary vsli:raw="The IME NonConvert key.">Touche NonConvert IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeProcessed">
      <summary vsli:raw="A special key masking the real key being processed by an IME.">Touche spéciale qui masque la touche réelle traitée par un IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary vsli:raw="The Insert key.">Touche Insertion.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary vsli:raw="The J key.">Touche J.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.JunjaMode">
      <summary vsli:raw="The IME Junja mode key.">Touche mode Junja IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary vsli:raw="The K key.">Touche K.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanaMode">
      <summary vsli:raw="The IME Kana mode key.">Touche mode Kana IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanjiMode">
      <summary vsli:raw="The IME Kanji mode key.">Touche mode Kanji IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary vsli:raw="The L key.">Touche L.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication1">
      <summary vsli:raw="The Launch Application1 key.">Touche de lancement de l’application1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication2">
      <summary vsli:raw="The Launch Application2 key.">Touche de lancement de l’application2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchMail">
      <summary vsli:raw="The Launch Mail key.">Touche de démarrage de la messagerie.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary vsli:raw="The Left Arrow key.">Touche Gauche.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftAlt">
      <summary vsli:raw="The left ALT key.">Touche ALT de gauche.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftCtrl">
      <summary vsli:raw="The left CTRL key.">Touche CTRL de gauche.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftShift">
      <summary vsli:raw="The left Shift key.">Touche Maj de gauche.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LineFeed">
      <summary vsli:raw="The Linefeed key.">Touche Saut de ligne.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LWin">
      <summary vsli:raw="The left Windows logo key (Microsoft Natural Keyboard).">Touche du logo Windows de gauche (clavier Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary vsli:raw="The M key.">Touche M.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaNextTrack">
      <summary vsli:raw="The Media Next Track key.">Touche de piste suivante du média.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPlayPause">
      <summary vsli:raw="The Media Play Pause key.">Touche de lecture/pause du média.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPreviousTrack">
      <summary vsli:raw="The Media Previous Track key.">Touche de piste précédente du média.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaStop">
      <summary vsli:raw="The Media Stop key.">Touche d’arrêt du média.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary vsli:raw="The Multiply key.">Touche de multiplication.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary vsli:raw="The N key.">Touche N.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Next">
      <summary vsli:raw="The Page Down key.">Touche Page suivante.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NoName">
      <summary vsli:raw="A constant reserved for future use.">Constante réservée à un usage ultérieur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary vsli:raw="No key pressed.">Aucune touche enfoncée.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumLock">
      <summary vsli:raw="The Num Lock key.">Touche Verr. num.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary vsli:raw="The 0 key on the numeric keypad.">Touche 0 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary vsli:raw="The 1 key on the numeric keypad.">Touche 1 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary vsli:raw="The 2 key on the numeric keypad.">Touche 2 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary vsli:raw="The 3 key on the numeric keypad.">Touche 3 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary vsli:raw="The 4 key on the numeric keypad.">Touche 4 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary vsli:raw="The 5 key on the numeric keypad.">Touche 5 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary vsli:raw="The 6 key on the numeric keypad.">Touche 6 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary vsli:raw="The 7 key on the numeric keypad.">Touche 7 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary vsli:raw="The 8 key on the numeric keypad.">Touche 8 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary vsli:raw="The 9 key on the numeric keypad.">Touche 9 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary vsli:raw="The O key.">Touche O.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem1">
      <summary vsli:raw="The OEM 1 key.">Touche OEM 1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem102">
      <summary vsli:raw="The OEM 102 key.">Touche OEM 102.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem2">
      <summary vsli:raw="The OEM 2 key.">Touche OEM 2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem3">
      <summary vsli:raw="The OEM 3 key.">Touche OEM 3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem4">
      <summary vsli:raw="The OEM 4 key.">Touche OEM 4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem5">
      <summary vsli:raw="The OEM 5 key.">Touche OEM 5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem6">
      <summary vsli:raw="The OEM 6 key.">Touche OEM 6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem7">
      <summary vsli:raw="The OEM 7 key.">Touche OEM 7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem8">
      <summary vsli:raw="The OEM 8 key.">Touche OEM 8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAttn">
      <summary vsli:raw="The OEM ATTN key.">Touche OEM ATTN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAuto">
      <summary vsli:raw="The OEM AUTO key.">Touche OEM AUTO.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackslash">
      <summary vsli:raw="The OEM Backslash key.">Touche OEM de barre oblique inverse.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackTab">
      <summary vsli:raw="The OEM BACKTAB key.">Touche OEM BACKTAB.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemClear">
      <summary vsli:raw="The OEM Clear key.">Touche OEM d’effacement.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCloseBrackets">
      <summary vsli:raw="The OEM Close Brackets key.">Touche OEM de crochets fermants.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemComma">
      <summary vsli:raw="The OEM Comma key.">Touche OEM de virgule.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCopy">
      <summary vsli:raw="The OEM COPY key.">Touche OEM de copie.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemEnlw">
      <summary vsli:raw="The OEM ENLW key.">Touche OEM ENLW.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemFinish">
      <summary vsli:raw="The OEM FINISH key.">Touche OEM de fin.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemMinus">
      <summary vsli:raw="The OEM Minus key.">Touche OEM de soustraction.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemOpenBrackets">
      <summary vsli:raw="The OEM Open Brackets key.">Touche OEM de crochets ouvrants.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPeriod">
      <summary vsli:raw="The OEM Period key.">Touche OEM de point.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPipe">
      <summary vsli:raw="The OEM Pipe key.">Touche OEM de barre verticale.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPlus">
      <summary vsli:raw="The OEM Addition key.">Touche OEM d’addition.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuestion">
      <summary vsli:raw="The OEM Question key.">Touche OEM de question.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuotes">
      <summary vsli:raw="The OEM Quotes key.">Touche OEM de guillemets.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemSemicolon">
      <summary vsli:raw="The OEM Semicolon key.">Touche OEM de point-virgule.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemTilde">
      <summary vsli:raw="The OEM Tilde key.">Touche OEM de tilde.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary vsli:raw="The P key.">Touche P.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pa1">
      <summary vsli:raw="The PA1 key.">Touche PA1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary vsli:raw="The Page Down key.">Touche Page suivante.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary vsli:raw="The Page Up key.">Touche Page précédente.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pause">
      <summary vsli:raw="The Pause key.">Touche Pause.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Play">
      <summary vsli:raw="The PLAY key.">Touche de lecture.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Print">
      <summary vsli:raw="The Print key.">Touche Imprimer.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PrintScreen">
      <summary vsli:raw="The Print Screen key.">Touche Impression écran.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Prior">
      <summary vsli:raw="The Page Up key.">Touche Page précédente.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary vsli:raw="The Q key.">Touche Q.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary vsli:raw="The R key.">Touche R.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Return">
      <summary vsli:raw="The Return key.">Touche Retour.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary vsli:raw="The Right Arrow key.">Touche Droite.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightAlt">
      <summary vsli:raw="The right ALT key.">Touche ALT de droite.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightCtrl">
      <summary vsli:raw="The right CTRL key.">Touche CTRL de droite.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightShift">
      <summary vsli:raw="The right Shift key.">Touche Maj de droite.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RWin">
      <summary vsli:raw="The right Windows logo key (Microsoft Natural Keyboard).">Touche du logo Windows de droite (clavier Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary vsli:raw="The S key.">Touche S.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Scroll">
      <summary vsli:raw="The Scroll Lock key.">Touche Arrêt défil.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Select">
      <summary vsli:raw="The Select key.">Touche de sélection.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.SelectMedia">
      <summary vsli:raw="The Select Media key.">Touche de sélection du média.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Separator">
      <summary vsli:raw="The Separator key.">Touche du séparateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Sleep">
      <summary vsli:raw="The Computer Sleep key.">Touche de mise en veille de l’ordinateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Snapshot">
      <summary vsli:raw="The Print Screen key.">Touche Impression écran.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary vsli:raw="The Spacebar key.">Touche Espace.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary vsli:raw="The Subtract key.">Touche de soustraction.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.System">
      <summary vsli:raw="A special key masking the real key being processed as a system key.">Touche spéciale qui masque la touche réelle traitée par une touche système.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary vsli:raw="The T key.">Touche T.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary vsli:raw="The Tab key.">Touche Tabulation.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary vsli:raw="The U key.">Touche U.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary vsli:raw="The Up Arrow key.">Touche Haut.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary vsli:raw="The V key.">Touche V.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeDown">
      <summary vsli:raw="The Volume Down key.">Touche de réduction du volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeMute">
      <summary vsli:raw="The Volume Mute key.">Touche de désactivation du volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeUp">
      <summary vsli:raw="The Volume Up key.">Touche d’augmentation du volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary vsli:raw="The W key.">Touche W.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary vsli:raw="The X key.">Touche X.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary vsli:raw="The Y key.">Touche Y.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary vsli:raw="The Z key.">Touche Z.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Zoom">
      <summary vsli:raw="The ZOOM key.">Touche ZOOM.</summary>
    </member>
    <member name="T:System.Windows.Input.KeyConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; object to and from other types.">Convertit un objet <see cref="T:System.Windows.Input.Key" /> en et depuis d'autres types.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">Détermine si un objet du type spécifié peut être converti en une instance de <see cref="T:System.Windows.Input.Key" /> à l'aide du contexte indiqué.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Type évalué pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="sourceType" /> est de type <see cref="T:System.String" />, sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to the specified type, using the specified context.">Détermine si une instance de <see cref="T:System.Windows.Input.Key" /> peut être convertie vers le type spécifié, à l'aide du contexte indiqué.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Type évalué pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="destinationType" /> est de type <see cref="T:System.String" />, sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">Tente de convertir l'objet spécifié en <see cref="T:System.Windows.Input.Key" />, à l'aide du contexte indiqué.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informations propres à la culture.</param>
      <param name="source" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The converted object.">Objet converti.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">
        <paramref name="source" /> ne peut pas être converti.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to the specified type, using the specified context.">Tente de convertir <see cref="T:System.Windows.Input.Key" /> vers le type spécifié, à l'aide du contexte indiqué.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informations propres à la culture.</param>
      <param name="value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Type dans lequel convertir l'objet.</param>
      <returns vsli:raw="The converted object.">Objet converti.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;.">
        <paramref name="value" /> ne peut pas être converti en <paramref name="destinationType" />.</exception>
    </member>
    <member name="T:System.Windows.Input.KeyInterop">
      <summary vsli:raw="Provides static methods to convert between Win32 Virtual-Keys and the WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; enumeration.">Fournit des méthodes statiques pour effectuer des conversions entre les touches virtuelles Win32 et l’énumération <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.KeyFromVirtualKey(System.Int32)">
      <summary vsli:raw="Converts a Win32 Virtual-Key into WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Convertit une touche virtuelle Win32 en <see cref="T:System.Windows.Input.Key" /> WPF.</summary>
      <param name="virtualKey" vsli:raw="The virtual key to convert.">La touche virtuelle à convertir.</param>
      <returns vsli:raw="The WPF key.">La touche WPF.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.VirtualKeyFromKey(System.Windows.Input.Key)">
      <summary vsli:raw="Converts a WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; into a Win32 Virtual-Key.">Convertit WPF <see cref="T:System.Windows.Input.Key" /> en touche virtuelle Win32.</summary>
      <param name="key" vsli:raw="The WPF to convert.">WPF à convertir.</param>
      <returns vsli:raw="The Win32 Virtual-Key.">La touche virtuelle Win32.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.KeyValueSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.KeyValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Détermine si le <see cref="T:System.String" /> spécifié peut être converti en instance de <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Chaîne à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Détermine si le <see cref="T:System.Windows.Input.Key" /> spécifié peut être converti en  <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to evaluate for conversion.">La clé à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Chaîne à convertir en <see cref="T:System.Windows.Input.Key" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Windows.Input.Key" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une instance de <see cref="T:System.Windows.Input.Key" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">La clé à convertir en une chaîne.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Représentation sous forme de chaîne indifférente du <see cref="T:System.Windows.Input.Key" /> spécifié.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary vsli:raw="Specifies the set of modifier keys.">Spécifie le jeu de touches de modification.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary vsli:raw="The ALT key.">Touche ALT.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary vsli:raw="The CTRL key.">Touche CTRL.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary vsli:raw="No modifiers are pressed.">Aucun modificateur n'est enfoncé.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary vsli:raw="The SHIFT key.">Touche MAJ (MAJUSCULE).</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary vsli:raw="The Windows logo key.">La touche du logo Windows.</summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; object to and from other types.">Convertit un objet <see cref="T:System.Windows.Input.ModifierKeys" /> en et depuis d'autres types.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.ModifierKeysConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">Détermine si un objet du type spécifié peut être converti en une instance de <see cref="T:System.Windows.Input.ModifierKeys" /> à l'aide du contexte indiqué.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Type évalué pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="sourceType" /> est de type <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to the specified type, using the specified context.">Détermine si une instance de <see cref="T:System.Windows.Input.ModifierKeys" /> peut être convertie vers le type spécifié, à l'aide du contexte indiqué.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Type évalué pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="destinationType" /> est de type <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">Tente de convertir l'objet spécifié en <see cref="T:System.Windows.Input.ModifierKeys" />, à l'aide du contexte indiqué.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informations propres à la culture.</param>
      <param name="source" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The converted object.">Objet converti.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">
        <paramref name="source" /> ne peut pas être converti.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to the specified type, using the specified context.">Tente de convertir <see cref="T:System.Windows.Input.ModifierKeys" /> vers le type spécifié, à l'aide du contexte indiqué.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informations propres à la culture.</param>
      <param name="value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Type dans lequel convertir l'objet.</param>
      <returns vsli:raw="The converted object.">Objet converti.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not map to a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">
        <paramref name="value" /> n'est pas mappé sur un objet <see cref="T:System.Windows.Input.ModifierKeys" /> valide.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> ne peut pas être converti.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Determines whether the specified value is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Détermine si la valeur spécifiée est une valeur <see cref="T:System.Windows.Input.ModifierKeys" /> valide.</summary>
      <param name="modifierKeys" vsli:raw="The value to check for validity.">Valeur dont la validité doit être vérifiée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if input is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'entrée est une valeur <see cref="T:System.Windows.Input.ModifierKeys" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysValueSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.ModifierKeysValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Détermine si le <see cref="T:System.String" /> spécifié peut être converti en instance de <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Chaîne à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Détermine si le <see cref="T:System.Windows.Input.ModifierKeys" /> spécifié peut être converti en  <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The modifier keys to evaluate for conversion.">Les touches de modification à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Convertit <see cref="T:System.String" /> en une valeur <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Chaîne à convertir en <see cref="T:System.Windows.Input.ModifierKeys" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Windows.Input.ModifierKeys" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une instance de <see cref="T:System.Windows.Input.ModifierKeys" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">La clé à convertir en une chaîne.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Représentation sous forme de chaîne indifférente de la valeur <see cref="T:System.Windows.Input.ModifierKeys" /> spécifiée.</returns>
    </member>
    <member name="T:System.Windows.Input.TraversalRequest">
      <summary vsli:raw="Represents a request to move focus to another control.">Représente une demande de déplacement du focus vers un autre contrôle.</summary>
    </member>
    <member name="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.TraversalRequest&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.TraversalRequest" />.</summary>
      <param name="focusNavigationDirection" vsli:raw="The intended direction of the focus traversal, as a value of the enumeration.">Direction prévue du parcours du focus, en tant que valeur de l'énumération.</param>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection">
      <summary vsli:raw="Gets the traversal direction.">Obtient la direction du parcours.</summary>
      <returns vsli:raw="One of the traversal direction enumeration values.">Une des valeurs de l'énumération de la direction du parcours.</returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.Wrapped">
      <summary vsli:raw="Gets or sets a value that indicates whether focus traversal has reached the end of child elements that can have focus.">Obtient ou définit une valeur qui indique si le parcours du focus a atteint la fin des éléments enfants qui peuvent avoir le focus.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this traversal has reached the end of child elements that can have focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce parcours a atteint la fin des éléments enfants qui peuvent avoir le focus ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Int32Rect">
      <summary vsli:raw="Describes the width, height, and location of an integer rectangle.">Décrit la largeur, la hauteur et l’emplacement d’un rectangle entier.</summary>
    </member>
    <member name="M:System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; coordinates and the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;.">Initialise une nouvelle instance d'un <see cref="T:System.Windows.Int32Rect" /> avec les coordonnées <see cref="P:System.Windows.Int32Rect.X" /> et <see cref="P:System.Windows.Int32Rect.Y" /> et les <see cref="P:System.Windows.Int32Rect.Width" /> et <see cref="P:System.Windows.Int32Rect.Height" /> spécifiées.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the x-coordinate of the top-left corner of the rectangle.">Le <see cref="P:System.Windows.Int32Rect.X" /> de la nouvelle instance <see cref="T:System.Windows.Int32Rect" /> qui spécifie la coordonnée x de l'angle supérieur gauche du rectangle.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the y-coordinate of the top-left corner of the rectangle.">Le <see cref="P:System.Windows.Int32Rect.Y" /> de la nouvelle instance <see cref="T:System.Windows.Int32Rect" /> qui spécifie la coordonnée y de l'angle supérieur gauche du rectangle.</param>
      <param name="width" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the width of the rectangle.">La <see cref="P:System.Windows.Int32Rect.Width" /> de la nouvelle instance <see cref="T:System.Windows.Int32Rect" /> qui spécifie la largeur du rectangle.</param>
      <param name="height" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the height of the rectangle.">La <see cref="P:System.Windows.Int32Rect.Height" /> de la nouvelle instance <see cref="T:System.Windows.Int32Rect" /> qui spécifie la hauteur du rectangle.</param>
    </member>
    <member name="P:System.Windows.Int32Rect.Empty">
      <summary vsli:raw="Gets the empty rectangle, a special value that represents a rectangle with no position or area.">Obtient un rectangle vide, valeur spéciale qui représente un rectangle sans position ni zone.</summary>
      <returns vsli:raw="An empty rectangle with no position or area.">Un rectangle vide sans position ni zone.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">Détermine si le rectangle spécifié est égal à ce rectangle.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">Objet à comparer avec le rectangle actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="o" /> est un <see cref="T:System.Windows.Int32Rect" /> et a les mêmes <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> et <see cref="P:System.Windows.Int32Rect.Height" /> que ce rectangle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">Détermine si le rectangle spécifié est égal à ce rectangle.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">Le rectangle à comparer avec le rectangle actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> a le même <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> et <see cref="P:System.Windows.Int32Rect.Height" /> que ce rectangle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangles are equal.">Détermine si les rectangles spécifiés sont égaux.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Premier rectangle à comparer.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Deuxième rectangle à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="int32Rect1" /> et <paramref name="int32Rect2" /> ont les mêmes <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, et <see cref="P:System.Windows.Int32Rect.Height" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code from this rectangle's &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values.">Crée un code de hachage à partir des <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> et valeurs <see cref="P:System.Windows.Int32Rect.Height" /> de ce rectangle.</summary>
      <returns vsli:raw="This rectangle's hash code.">Code de hachage de ce rectangle.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.HasArea">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0.">Obtient une valeur qui indique si les propriétés <see cref="P:System.Windows.Int32Rect.Width" /> et <see cref="P:System.Windows.Int32Rect.Height" /> de <see cref="T:System.Windows.Int32Rect" /> sont supérieures à 0.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si les <see cref="P:System.Windows.Int32Rect.Width" /> propriétés <see cref="P:System.Windows.Int32Rect.Height" /> et de <see cref="T:System.Windows.Int32Rect" /> sont supérieures à 0 ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">Obtient ou définit la hauteur du rectangle.</summary>
      <returns vsli:raw="The height of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Hauteur du rectangle. La valeur par défaut est <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the rectangle is empty.">Obtient une valeur qui indique si le rectangle est vide.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Si le rectangle est vide ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">Compare l'égalité exacte de deux rectangles.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Premier rectangle à comparer.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Deuxième rectangle à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="int32Rect1" /> et <paramref name="int32Rect2" /> ont les mêmes <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, et <see cref="P:System.Windows.Int32Rect.Height" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">Compare si deux rectangles sont inégaux.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Premier rectangle à comparer.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Deuxième rectangle à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, if all of these values are the same, then &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="false" /> si <paramref name="int32Rect1" /> et <paramref name="int32Rect2" /> ont les mêmes <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, et <see cref="P:System.Windows.Int32Rect.Height" /> ; sinon, si toutes ces valeurs sont identiques, alors <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Parse(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation.">Crée une structure <see cref="T:System.Windows.Int32Rect" /> à partir de la représentation <see cref="T:System.String" /> spécifiée.</summary>
      <param name="source" vsli:raw="A string representation of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Représentation sous forme de chaîne d'un <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">Structure <see cref="T:System.Windows.Int32Rect" /> équivalente.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Met en forme la valeur de l'instance actuelle à l'aide du format spécifié.</summary>
      <param name="format" vsli:raw="The format to use.">Format à utiliser.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">Fournisseur à utiliser pour mettre en forme la valeur</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Valeur de l'instance actuelle au format spécifié.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Crée une représentation sous forme de chaîne de ce <see cref="T:System.Windows.Int32Rect" />.</summary>
      <returns vsli:raw="A string containing the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">Chaîne contenant les mêmes valeurs <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> et <see cref="P:System.Windows.Int32Rect.Height" /> que cette structure <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;see cref=&quot;T:System.IFormatProvider&quot; /&gt;.">Crée une représentation sous forme de chaîne de ce <see cref="T:System.Windows.Int32Rect" /> basée sur le <see cref="T:System.IFormatProvider" /> fourni.</summary>
      <param name="provider" vsli:raw="The format provider to use. If provider is &lt;see langword=&quot;null&quot; /&gt;, the current culture is used.">Fournisseur de format à utiliser. Si le fournisseur a la valeur <see langword="null" />, la culture actuelle est alors utilisée.</param>
      <returns vsli:raw="A string representation of this instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Représentation sous forme de chaîne de cette instance de <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">Obtient ou définit la largeur du rectangle.</summary>
      <returns vsli:raw="The width of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Largeur du rectangle. La valeur par défaut est <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.X">
      <summary vsli:raw="Gets or sets the x-coordinate of the top-left corner of the rectangle.">Obtient ou définit la coordonnée X du coin supérieur gauche du rectangle.</summary>
      <returns vsli:raw="The x-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Coordonnée X du coin supérieur gauche du rectangle. La valeur par défaut est <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Y">
      <summary vsli:raw="Gets or sets the y-coordinate of the top-left corner of the rectangle.">Obtient ou définit la coordonnée y du coin supérieur gauche du rectangle.</summary>
      <returns vsli:raw="The y-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Coordonnée y du coin supérieur gauche du rectangle. La valeur par défaut est <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.Int32RectConverter">
      <summary vsli:raw="Converts instances of other types to and from an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Convertit les instances d'autres types vers et à partir de <see cref="T:System.Windows.Int32Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Int32RectConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Int32RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Détermine si un objet peut être converti à partir d'un type donné en une instance de <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Décrit les informations de contexte d’un type.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Type de la source qui est en cours d'évaluation pour conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le type peut être converti en <see cref="T:System.Windows.Int32Rect" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a different type.">Détermine si une instance de <see cref="T:System.Windows.Int32Rect" /> peut être convertie en un type différent.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Décrit les informations de contexte d’un type.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; is being evaluated for conversion.">Type souhaité pour lequel <see cref="T:System.Windows.Int32Rect" /> est évalué à des fins de conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.Int32Rect" /> peut être converti en <paramref name="destinationType" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified type to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Tente de convertir le type spécifié en <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Informations culturelles à respecter pendant la conversion.</param>
      <param name="value" vsli:raw="The object being converted.">Objet en cours de conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.Windows.Int32Rect" /> créé à partir de la conversion de <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Levée si l'objet spécifié est NULL ou s'il s'agit d'un type qui ne peut pas être converti en <see cref="T:System.Windows.Int32Rect" />.</exception>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a specified type.">Tente de convertir <see cref="T:System.Windows.Int32Rect" /> en un type spécifié.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Informations culturelles à respecter pendant la conversion.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to convert.">
        <see cref="T:System.Windows.Int32Rect" /> à convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to.">Type vers lequel convertir <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Objet créé à partir de la conversion de cette <see cref="T:System.Windows.Int32Rect" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">Levée si <paramref name="value" /> est <see langword="null" /> ou n'est pas <see cref="T:System.Windows.Int32Rect" /> ou si <paramref name="destinationType" /> ne fait pas partie des types valides pour conversion.</exception>
    </member>
    <member name="T:System.Windows.Interop.ComponentDispatcher">
      <summary vsli:raw="Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.">Active le contrôle partagé de la pompe de messages entre Win32 et WPF dans les scénarios d'interopérabilité.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <summary vsli:raw="Gets the last message that was raised.">Obtient le dernier message déclenché.</summary>
      <returns vsli:raw="The last message.">Dernier message.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <summary vsli:raw="Occurs when a thread becomes modal.">Se produit lorsqu'un thread devient modal.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <summary vsli:raw="Gets a value that indicates whether the thread is modal.">Obtient une valeur qui indique si le thread est modal.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread is modal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le thread est modal ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <summary vsli:raw="Occurs when a modal thread becomes nonmodal.">Se produit lorsqu'un thread modal devient non modal.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <summary vsli:raw="Called to indicate that a modal thread is no longer modal.">Appelé pour indiquer qu'un thread modal n'est plus modal.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <summary vsli:raw="Called to indicate that the thread is modal.">Appelé pour indiquer que le thread est modal.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <summary vsli:raw="Called to indicate that a thread is idle.">Appelé pour indiquer qu'un thread est inactif.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <summary vsli:raw="Indicates that a new message is available for possible handling.">Indique qu'un nouveau message est disponible pour une gestion éventuelle.</summary>
      <param name="msg" vsli:raw="The message and its associated data.">Message et ses données associées.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if one of the modules listening to the message loop processed the message. The owner of the message loop should ignore the message. &lt;see langword=&quot;false&quot; /&gt;, if the message was not processed. In this case, the owner of the message pump should call the Win32 function TranslateMessage followed by DispatchMessage.">
        <see langword="true" />, si l'un des modules qui écoutent la boucle de message a traité le message. Le propriétaire de la boucle de messages doit ignorer le message. <see langword="false" />, si le message n'a pas été traité. Dans ce cas, le propriétaire de la pompe de messages doit appeler la fonction Win32 TranslateMessage suivie de DispatchMessage.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">Se produit lorsque la pompe de messages reçoit un message du clavier.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <summary vsli:raw="Occurs when the thread is idle.">Se produit lorsque le thread est inactif.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">Se produit lorsque la pompe de messages reçoit un message du clavier.</summary>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSink">
      <summary vsli:raw="Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">Fournit un récepteur de clavier pour les composants qui gèrent les opérations de tabulation, les accélérateurs et les mnémoniques au-delà des limites d'interopérabilité et entre les HWND. Cette interface implémente la gestion des messages de clavier dans les scénarios d'interopérabilité WPF-Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <summary vsli:raw="Gets a value that indicates whether the sink or one of its contained components has focus.">Obtient une valeur qui indique si le récepteur ou un de ses composants contenus a le focus.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sink or one of its contained components has focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le récepteur ou un de ses composants contenus a le focus ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <summary vsli:raw="Gets or sets a reference to the component's container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">Obtient ou définit une référence à l'interface <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> du conteneur du composant.</summary>
      <returns vsli:raw="A reference to the container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">Référence à l'interface <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> du conteneur.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Called when one of the mnemonics (access keys) for this sink is invoked.">Appelé lorsque l'un des mnémoniques (touches d'accès rapide) pour ce récepteur est appelé.</summary>
      <param name="msg" vsli:raw="The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.">Message pour le mnémonique et les données associées. Ne modifiez pas cette structure de message. Elle est passée par référence pour des raisons de performances uniquement.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Touches de modification.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface of a contained component.">Enregistre l'interface <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> d'un composant contenu.</summary>
      <param name="sink" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; sink of the contained component.">Récepteur <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> du composant contenu.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; site of the contained component.">Site <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> du composant contenu.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Sets focus on either the first tab stop or the last tab stop of the sink.">Définit le focus sur le premier ou le dernier taquet de tabulation du récepteur.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">Spécifie si le focus doit avoir pour valeur le premier ou le dernier taquet de tabulation.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the focus has been set as requested; &lt;see langword=&quot;false&quot; /&gt;, if there are no tab stops.">
        <see langword="true" />, si le focus a été défini comme demandé ; <see langword="false" />, s'il n'y a pas de taquets de tabulation.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes keyboard input at the keydown message level.">Traite l'entrée au clavier au niveau du message keydown.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">Message et données associées. Ne modifiez pas cette structure. Elle est passée par référence pour des raisons de performances uniquement.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Touches de modification.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled by the method implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le message a été géré par l'implémentation de la méthode ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; is called.">Traite les messages d'entrée WM_CHAR, WM_SYSCHAR, WM_DEADCHAR et WM_SYSDEADCHAR avant que <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> ne soit appelé.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">Message et données associées. Ne modifiez pas cette structure. Elle est passée par référence pour des raisons de performances uniquement.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Touches de modification.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was processed and &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; should not be called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le message a été traité et <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> ne doit pas être appelé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSite">
      <summary vsli:raw="Manages keyboard focus within the container.  This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">Gère le focus clavier dans le conteneur.  Cette interface implémente la gestion des messages de clavier dans les scénarios d'interopérabilité WPF-Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Called by a contained component when it has reached its last tab stop and has no further items to tab to.">Appelé par un composant contenu lorsqu'il a atteint son dernier taquet de tabulation et ne peut plus passer à aucun autre élément.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">Spécifie si le focus doit avoir pour valeur le premier ou le dernier taquet de tabulation.</param>
      <returns vsli:raw="If this method returns &lt;see langword=&quot;true&quot; /&gt;, the site has shifted focus to another component. If this method returns &lt;see langword=&quot;false&quot; /&gt;, focus is still within the calling component. The component should &quot;wrap around&quot; and set focus to its first contained tab stop.">Si cette méthode retourne <see langword="true" />, le site a déplacé le focus vers un autre composant. Si cette méthode retourne <see langword="false" />, le focus est toujours dans le composant appelant. Le composant doit « décrire une boucle » et définir le focus sur son premier taquet de tabulation contenu.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <summary vsli:raw="Gets the keyboard sink associated with this site.">Obtient le récepteur de clavier associé à ce site.</summary>
      <returns vsli:raw="The current site's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface.">Interface <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> du site actuel.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <summary vsli:raw="Unregisters a child keyboard input sink from this site.">Annule l'enregistrement d'un récepteur d'entrée au clavier enfant de ce site.</summary>
    </member>
    <member name="T:System.Windows.Interop.MSG">
      <summary vsli:raw="Contains message information from a thread's message queue.">Contient des informations sur les messages de la file d'attente de messages d'un thread.</summary>
    </member>
    <member name="P:System.Windows.Interop.MSG.hwnd">
      <summary vsli:raw="Gets or sets the window handle (HWND) to the window whose window procedure receives the message.">Obtient ou définit le handle de fenêtre (HWND) sur la fenêtre dont la procédure de fenêtre reçoit le message.</summary>
      <returns vsli:raw="The window handle (HWND).">Handle de fenêtre (HWND).</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.lParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;lParam&quot; /&gt; value that specifies additional information about the message. The exact meaning depends on the value of the &lt;see cref=&quot;P:System.Windows.Interop.MSG.message&quot; /&gt; member.">Obtient ou définit la valeur <paramref name="lParam" /> qui spécifie des informations supplémentaires sur le message. La signification exacte dépend de la valeur du membre <see cref="P:System.Windows.Interop.MSG.message" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;lParam&quot; /&gt; value for the message.">Valeur <paramref name="lParam" /> du message.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.message">
      <summary vsli:raw="Gets or sets the message identifier.">Obtient ou définit l'identificateur de message.</summary>
      <returns vsli:raw="The message identifier.">Identificateur de message.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_x">
      <summary vsli:raw="Gets or sets the x coordinate of the cursor position on the screen, when the message was posted.">Obtient ou définit la coordonnée x de la position du curseur sur l'écran, lorsque le message a été publié.</summary>
      <returns vsli:raw="The x coordinate of the cursor position.">Coordonnée x de la position du curseur.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_y">
      <summary vsli:raw="Gets or sets the y coordinate of the cursor position on the screen, when the message was posted.">Obtient ou définit la coordonnée y de la position du curseur sur l'écran, lorsque le message a été publié.</summary>
      <returns vsli:raw="The y coordinate of the cursor position.">Coordonnée y de la position du curseur.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.time">
      <summary vsli:raw="Gets or sets the time at which the message was posted.">Obtient ou définit l'heure de publication du message.</summary>
      <returns vsli:raw="The time that the message was posted.">Heure de publication du message.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.wParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;wParam&quot; /&gt; value for the message, which specifies additional information about the message. The exact meaning depends on the value of the message.">Obtient ou définit la valeur <paramref name="wParam" /> du message qui spécifie des informations supplémentaires sur le message. La signification exacte dépend de la valeur du message.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;wParam&quot; /&gt; value for the message.">Valeur <paramref name="wParam" /> du message.</returns>
    </member>
    <member name="T:System.Windows.Interop.ThreadMessageEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage&quot; /&gt; events.">Représente la méthode qui gère les événements <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" /> et <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />.</summary>
      <param name="msg" vsli:raw="A structure with the message data.">Structure comprenant les données du message.</param>
      <param name="handled" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.IWeakEventListener">
      <summary vsli:raw="Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">Prend en charge l'écoute d'événements pour les classes qui doivent recevoir des événements à travers le modèle WeakEvent et <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary vsli:raw="Receives events from the centralized event manager.">Reçoit des événements du gestionnaire d'événements centralisé.</summary>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; calling this method.">Le type du <see cref="T:System.Windows.WeakEventManager" /> qui appelle cette méthode.</param>
      <param name="sender" vsli:raw="Object that originated the event.">Objet à l'origine de l'événement.</param>
      <param name="e" vsli:raw="Event data.">Donnée d’événement.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the listener handled the event. It is considered an error by the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; handling in WPF to register a listener for an event that the listener does not handle. Regardless, the method should return &lt;see langword=&quot;false&quot; /&gt; if it receives an event that it does not recognize or handle.">
        <see langword="true" /> si l'écouteur a géré l'événement. L’enregistrement d’un écouteur pour un événement que l’écouteur ne gère pas est considéré comme une erreur par la gestion de <see cref="T:System.Windows.WeakEventManager" /> dans WPF. La méthode doit néanmoins toujours retourner la valeur <see langword="false" /> si elle reçoit un événement qu'elle ne reconnaît ou ne gère pas.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEntry">
      <summary vsli:raw="Represents a property identifier and the property value for a locally set dependency property.">Représente un identificateur de propriété et la valeur de propriété d’une propriété de dépendance définie localement.</summary>
    </member>
    <member name="M:System.Windows.LocalValueEntry.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances are equal.">Détermine si deux instances <see cref="T:System.Windows.LocalValueEntry" /> sont égales.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">
        <see cref="T:System.Windows.LocalValueEntry" /> à comparer avec l'objet <see cref="T:System.Windows.LocalValueEntry" /> actuel.</param>
      <returns vsli:raw="This &lt;see cref=&quot;M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)&quot; /&gt; implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt;, and potentially compares the values of &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is a value type, so will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type. For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it just uses the == operator on the two values internally. By default, this would be a reference equality of the values and thus the equality of the entire &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; would become a reference equality.">Cette implémentation <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> compare les valeurs de <see cref="P:System.Windows.LocalValueEntry.Property" /> et éventuellement de <see cref="P:System.Windows.LocalValueEntry.Value" />. Le composant <see cref="P:System.Windows.LocalValueEntry.Property" /> de <see cref="T:System.Windows.LocalValueEntry" /> est un type valeur. Il s'agit donc toujours d'une comparaison de bits. Pour le composant <see cref="P:System.Windows.LocalValueEntry.Value" />, cette implémentation emploie une comparaison de bits s'il s'agit d'un type valeur. Pour les propriétés localement définies qui ont des types référence, le comportement est différé aux mécanismes de détermination de l'égalité de ce type, car l'opérateur == est utilisé en interne sur les deux valeurs. Par défaut, il s'agirait d'une égalité de référence des valeurs. Par conséquent, l'égalité de la totalité de <see cref="T:System.Windows.LocalValueEntry" /> deviendrait une égalité de référence.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">Retourne le code de hachage pour ce <see cref="T:System.Windows.LocalValueEntry" />.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">Valeur d’entier 32 bits signé.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances to determine whether they are the same.">Compare les instances <see cref="T:System.Windows.LocalValueEntry" /> spécifiées pour déterminer si elles sont identiques.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">Première instance à comparer.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">Deuxième instance à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.LocalValueEntry" /><paramref name="obj1" /> est égal à <see cref="T:System.Windows.LocalValueEntry" /><paramref name="obj2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; instances to determine whether they are different.">Compare les instances <see cref="T:System.Windows.LocalValueEnumerator" /> spécifiées pour déterminer si elles sont différentes.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">Première instance à comparer.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">Deuxième instance à comparer.</param>
      <returns vsli:raw="This implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; components of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is always a value type, so this comparison will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type.  &#xA;  &#xA; For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the &lt;see langword=&quot;==&quot; /&gt; operator on the two values internally. By default, this is a reference equality of the values.">Cette implémentation compare les valeurs de <see cref="P:System.Windows.LocalValueEntry.Property" /> et les composants <see cref="P:System.Windows.LocalValueEntry.Value" /> de <see cref="T:System.Windows.LocalValueEntry" />. Le composant <see cref="P:System.Windows.LocalValueEntry.Property" /> de <see cref="T:System.Windows.LocalValueEntry" /> est toujours un type valeur. Cette comparaison est donc toujours une comparaison de bits. Pour le composant <see cref="P:System.Windows.LocalValueEntry.Value" />, cette implémentation emploie une comparaison de bits s'il s'agit d'un type valeur.
Pour les propriétés localement définies qui ont des types référence, le comportement est différé aux mécanismes de détermination de l'égalité de ce type, car l'opérateur <see langword="==" /> est utilisé en interne sur les deux valeurs. Par défaut, il s'agit d'une égalité de référence des valeurs.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Property">
      <summary vsli:raw="Gets the identifier for the locally set dependency property that is represented by this entry.">Obtient l’identificateur de la propriété de dépendance définie localement qui est représentée par cette entrée.</summary>
      <returns vsli:raw="The identifier for the locally set dependency property.">Identificateur de la propriété de dépendance définie localement.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Value">
      <summary vsli:raw="Gets the value of the locally set dependency property.">Obtient la valeur de la propriété de dépendance définie localement.</summary>
      <returns vsli:raw="The value of the locally set dependency property as an object.">Valeur de la propriété de dépendance définie localement en tant qu’objet.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEnumerator">
      <summary vsli:raw="Provides enumeration support for the local values of any dependency properties that exist on a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Fournit la prise en charge de l’énumération pour les valeurs locales de toutes les propriétés de dépendance qui existent sur un <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Count">
      <summary vsli:raw="Gets the number of items that are represented in the collection.">Obtient le nombre des éléments représentés dans la collection.</summary>
      <returns vsli:raw="The number of items in the collection.">Nombre d’éléments dans la collection</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Obtient l’élément actuel dans la collection.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; in the collection.">
        <see cref="T:System.Windows.LocalValueEntry" /> en cours dans la collection.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equivalent to this &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Détermine si l'attribut <see cref="T:System.Windows.LocalValueEnumerator" /> fourni équivaut à cet attribut <see cref="T:System.Windows.LocalValueEnumerator" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">
        <see cref="T:System.Windows.LocalValueEnumerator" /> à comparer avec l'objet <see cref="T:System.Windows.LocalValueEnumerator" /> actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Windows.LocalValueEnumerator" /> spécifié est égal au <see cref="T:System.Windows.LocalValueEnumerator" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Retourne un code de hachage pour le <see cref="T:System.Windows.LocalValueEnumerator" /> actuel.</summary>
      <returns vsli:raw="A 32-bit integer hash code.">Code de hachage entier 32 bits.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">Avance l’énumérateur à l’élément suivant de la collection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares whether two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects are the same.">Compare si deux objets <see cref="T:System.Windows.LocalValueEnumerator" /> spécifiés sont les mêmes.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">Premier objet à comparer.</param>
      <param name="obj2" vsli:raw="The second object to compare.">Deuxième objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.LocalValueEnumerator" /><paramref name="obj1" /> est égal à <see cref="T:System.Windows.LocalValueEnumerator" /><paramref name="obj2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects to determine whether they are not the same.">Compare deux objets <see cref="T:System.Windows.LocalValueEnumerator" /> spécifiés pour déterminer s'ils ne sont pas les mêmes.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">Premier objet à comparer.</param>
      <param name="obj2" vsli:raw="The second object to compare.">Deuxième objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les instances ne sont pas égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Rétablit l'énumérateur à sa position initiale, qui précède le premier élément de la collection.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this members, see &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns vsli:raw="The current element in the collection.">Élément actuel dans la collection.</returns>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptions">
      <summary vsli:raw="Specifies how a property is to be serialized.">Spécifie la méthode de sérialisation d'une propriété.</summary>
    </member>
    <member name="F:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute">
      <summary vsli:raw="The property should be serialized as an attribute.">La propriété doit être sérialisée comme un attribut.</summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptionsAttribute">
      <summary vsli:raw="Specifies the serialization flags for a property.">Spécifie les indicateurs de sérialisation d'une propriété.</summary>
    </member>
    <member name="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptionsAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" />.</summary>
      <param name="designerSerializationOptions" vsli:raw="Specifies how the property is to be serialized.">Spécifie la méthode de sérialisation de la propriété.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;designerSerializationOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; value.">
        <paramref name="designerSerializationOptions" /> n’est pas une valeur de <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> valide.</exception>
    </member>
    <member name="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; set on the attribute.">Obtient <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> défini sur l'attribut.</summary>
      <returns vsli:raw="The serialization option, as a value of the enumeration.">Option de sérialisation, sous forme de valeur de l'énumération.</returns>
    </member>
    <member name="T:System.Windows.Markup.InternalTypeHelper">
      <summary vsli:raw="Abstract class used internally by the WPF XAML compiler to support the use of internal types.">Classe abstraite utilisée en interne par le compilateur XAML WPF pour prendre en charge l'utilisation de types internes.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.InternalTypeHelper&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.InternalTypeHelper" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary vsli:raw="When overridden in a derived (generated) class, attaches an event handler delegate to an internal event.">En cas de substitution dans une classe dérivée (générée), joint un délégué de gestionnaires d'événements à un événement interne.</summary>
      <param name="eventInfo" vsli:raw="The event information for the event (CLR reflection information).">Informations sur l'événement (informations de réflexion CLR).</param>
      <param name="target" vsli:raw="The target where the handler is attached.">Cible à laquelle le gestionnaire est attaché.</param>
      <param name="handler" vsli:raw="The event handler.">Gestionnaire d'événements.</param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an event delegate referencing a non-public handler method.">En cas de substitution dans une classe dérivée (générée), crée un délégué d'événement qui référence une méthode de gestionnaire non publique.</summary>
      <param name="delegateType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the delegate.">
        <see cref="T:System.Type" /> du délégué.</param>
      <param name="target" vsli:raw="The target where the handler is attached.">Cible à laquelle le gestionnaire est attaché.</param>
      <param name="handler" vsli:raw="The name of the handler implementation.">Nom de l'implémentation de gestionnaire.</param>
      <returns vsli:raw="The delegate reference.">Référence de délégué.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an instance of an internal type.">En cas de substitution dans une classe dérivée (générée=, crée une instance d'un type interne.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to create.">
        <see cref="T:System.Type" /> à créer.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informations propres à la culture.</param>
      <returns vsli:raw="The created instance.">Instance créée.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, gets the value of an internal property on the target object.">En cas de substitution dans une classe dérivée (générée), obtient la valeur d’une propriété interne sur l’objet cible.</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to get.">Informations sur la propriété à obtenir.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">Objet qui contient la valeur de propriété souhaitée.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informations propres à la culture.</param>
      <returns vsli:raw="The value of the property.">Valeur de la propriété.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, sets the value on an internal property on the target object.">En cas de substitution dans une classe dérivée (générée), définit la valeur d'une propriété interne sur l'objet cible.</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to set.">Informations sur la propriété à définir.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">Objet qui contient la valeur de propriété souhaitée.</param>
      <param name="value" vsli:raw="The value to set.">Valeur à définir.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informations propres à la culture.</param>
    </member>
    <member name="T:System.Windows.Markup.IReceiveMarkupExtension">
      <summary vsli:raw="Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for .NET Framework 4 implementations.">Fournit un mécanisme permettant aux types de déclarer qu'ils peuvent recevoir une expression (ou une autre classe) d'une extension de balisage, où la sortie est un type de propriété différent de la propriété cible. Ne pas utiliser pour les implémentations du .NET Framework 4.</summary>
    </member>
    <member name="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Provides the handling for markup extensions that provide property values. Do not use for .NET Framework 4 implementations; see &lt;see cref=&quot;T:System.Windows.Markup.IReceiveMarkupExtension&quot; /&gt;.">Fournit la gestion pour les extensions de balisage qui fournissent des valeurs de propriété. Ne pas utiliser pour les implémentations du .NET Framework 4 ; consultez <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</summary>
      <param name="property" vsli:raw="The name of the target property.">Nom de la propriété cible.</param>
      <param name="markupExtension" vsli:raw="The markup extension instance of the incoming data.">Instance d'extension de balisage des données entrantes.</param>
      <param name="serviceProvider" vsli:raw="Can provide additional services that should be performed when processing the markup extension data for a property value.">Peut fournir des services supplémentaires qui doivent être exécutés lors du traitement des données d'extension de balisage pour une valeur de propriété.</param>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupObject">
      <summary vsli:raw="Abstract class that represents an object that can be used to navigate a tree of objects.">Classe abstraite qui représente un objet permettant de parcourir une arborescence d'objets.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, assigns a root context for &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; classes.">En cas de substitution dans une classe dérivée, assigne un contexte racine pour les classes <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.IValueSerializerContext&quot; /&gt; to assign a root context for.">
        <see cref="T:System.Windows.Markup.IValueSerializerContext" /> pour lequel assigner un contexte racine.</param>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient les attributs associés à ce <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The collection of attributes.">Collection d’attributs.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Instance">
      <summary vsli:raw="When overridden in a derived class, gets the instance of the object represented by this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient l'instance de l'objet représentée par ce <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The instance of the object.">Instance de l'objet.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType">
      <summary vsli:raw="When overridden in a derived class, gets the type of the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance.">En cas de substitution dans une classe dérivée, obtient le type de l'instance <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The type of the object.">Type de l'objet.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Properties">
      <summary vsli:raw="When overridden in a derived class, gets the properties of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance that should be written to XAML.">En cas de substitution dans une classe dérivée, obtient les propriétés de cette instance <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> qui doit être écrite en XAML.</summary>
      <returns vsli:raw="The properties.">Propriétés.</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupProperty">
      <summary vsli:raw="Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.">Classe abstraite qui fournit une description de propriété à utiliser lors de l'écriture dans le balisage pour encapsuler l'accès aux propriétés et à leurs valeurs.</summary>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient les attributs associés à ce <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The collection of attributes.">Collection d’attributs.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier for the markup property if the property is implemented as a dependency property.">En cas de substitution dans une classe dérivée, obtient l’identificateur <see cref="T:System.Windows.DependencyProperty" /> de la propriété de balisage, si celle-ci est implémentée en tant que propriété de dépendance.</summary>
      <returns vsli:raw="The dependency property identifier.">Identificateur de la propriété de dépendance.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">En cas de substitution dans une classe dérivée, détermine si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> est une <see cref="T:System.Windows.DependencyProperty" /> attachée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété est une <see cref="T:System.Windows.DependencyProperty" /> attachée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is a composite property.">En cas de substitution dans une classe dérivée, détermine si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> est une propriété composite.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; is this property is a composite property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il s'agit d'une propriété composite ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a constructor argument.">En cas de substitution dans une classe dérivée, détermine si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> représente un argument de constructeur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a constructor argument; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cette propriété représente un argument de constructeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents direct content of a collection.">En cas de substitution dans une classe dérivée, détermine si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> représente le contenu direct d'une collection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property represents direct content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété représente le contenu direct ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents the key used by the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; to store the item in a dictionary.">En cas de substitution dans une classe dérivée, détermine si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> représente la clé utilisée par l'<see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> pour stocker l'élément dans un dictionnaire.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cette propriété représente une clé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.">En cas de substitution dans une classe dérivée, détermine si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> représente le texte passé à un convertisseur de type pour créer une instance de la propriété ou si un constructeur doit être utilisé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> représente une chaîne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
      <summary vsli:raw="When overridden in a derived class, gets the items that make up the value of this property.">En cas de substitution dans une classe dérivée, obtient les éléments qui constituent la valeur de cette propriété.</summary>
      <returns vsli:raw="The items that make up the value of this property.">Éléments qui constituent la valeur de cette propriété.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
      <summary vsli:raw="When overridden in a derived class, gets a name that is used for diagnostics and error reporting.">En cas de substitution dans une classe dérivée, obtient un nom utilisé pour le diagnostic et le signalement d'erreurs.</summary>
      <returns vsli:raw="The identifier property name.">Nom de la propriété d'identificateur.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; for the markup property.">En cas de substitution dans une classe dérivée, obtient le <see cref="T:System.ComponentModel.PropertyDescriptor" /> pour la propriété de balisage.</summary>
      <returns vsli:raw="The property descriptor.">Descripteur de propriété.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
      <summary vsli:raw="When overridden in a derived class, gets the CLR type of the property.">En cas de substitution dans une classe dérivée, obtient le type CLR de la propriété.</summary>
      <returns vsli:raw="The CLR type.">Type CLR.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
      <summary vsli:raw="When overridden in a derived class, gets the string value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de chaîne de cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The string value.">Valeur de chaîne.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
      <summary vsli:raw="When overridden in a derived class, gets the set of types that this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; will reference when it serializes its value as a string.">En cas de substitution dans une classe dérivée, obtient le jeu des types que cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> référencera lors de la sérialisation de sa valeur sous forme de chaîne.</summary>
      <returns vsli:raw="The set of types.">Jeu de types.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
      <summary vsli:raw="When overridden in a derived class, gets the current value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur actuelle de <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The current value.">Valeur en cours.</returns>
    </member>
    <member name="T:System.Windows.Markup.ServiceProviders">
      <summary vsli:raw="Provides an implementation for the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface with methods that enable adding services.">Fournit une implémentation pour l'interface <see cref="T:System.IServiceProvider" /> avec des méthodes permettant d'ajouter des services.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ServiceProviders&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ServiceProviders" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
      <summary vsli:raw="Adds a service to the list.">Ajoute un service à la liste.</summary>
      <param name="serviceType" vsli:raw="Service type of the new service.">Type de service du nouveau service.</param>
      <param name="service" vsli:raw="The service implementation class.">Classe d'implémentation du service.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; or &lt;paramref name=&quot;service&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> ou <paramref name="service" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Attempted to add a service that already exists in the dictionary.">Tentative d'ajout d'un service qui existe déjà dans le dictionnaire.</exception>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
      <summary vsli:raw="Gets the service object of the specified type.">Obtient l'objet service du type spécifié.</summary>
      <param name="serviceType" vsli:raw="The type of service object to get.">Type de l’objet de service à obtenir.</param>
      <returns vsli:raw="A service implementation for the type &lt;paramref name=&quot;serviceType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if there is no service stored for type &lt;paramref name=&quot;serviceType&quot; /&gt;.">Implémentation de service pour le type <paramref name="serviceType" />. Peut être <see langword="null" /> s'il n'y a aucun service stocké pour le type <paramref name="serviceType" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Converters.MatrixValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Media.Matrix" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Converters.MatrixValueSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.Converters.MatrixValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if conversion from a given &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is possible.">Détermine si la conversion d'une <see cref="T:System.String" /> donnée en une instance de <see cref="T:System.Windows.Media.Matrix" /> est possible.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Chaîne à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Informations contextuelles utilisées pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur peut être convertie ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Détermine si une instance de <see cref="T:System.Windows.Media.Matrix" /> peut être convertie en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">Instance de <see cref="T:System.Windows.Media.Matrix" /> à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Informations contextuelles utilisées pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Occurs when &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Media.Int32Collection&quot; /&gt;.">Se produit lorsque <paramref name="value" /> n'est pas <see cref="T:System.Windows.Media.Int32Collection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="value" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; value to convert into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Valeur <see cref="T:System.String" /> à convertir en <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Informations contextuelles utilisées pour la conversion.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Windows.Media.Matrix" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une instance de <see cref="T:System.Windows.Media.Matrix" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">Instance de <see cref="T:System.Windows.Media.Matrix" /> à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Informations contextuelles utilisées pour la conversion.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the supplied &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; object.">Une représentation <see cref="T:System.String" /> de l'objet <see cref="T:System.Windows.Media.Matrix" /> fourni.</returns>
    </member>
    <member name="T:System.Windows.Media.DisableDpiAwarenessAttribute">
      <summary vsli:raw="Allows WPF applications to disable dots per inch (dpi) awareness for all user interface elements.">Permet aux applications WPF de désactiver la prise en compte des points par pouce (ppp) pour tous les éléments de l'interface utilisateur.</summary>
    </member>
    <member name="M:System.Windows.Media.DisableDpiAwarenessAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.DisableDpiAwarenessAttribute&quot; /&gt;.">Initialise une nouvelle instance de <see cref="T:System.Windows.Media.DisableDpiAwarenessAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary vsli:raw="Represents a 3x3 affine transformation matrix used for transformations in 2-D space.">Représente une matrice de transformation affine 3x3 utilisée pour les transformations dans un espace 2D.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="m11" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt; coefficient.">Coefficient <see cref="P:System.Windows.Media.Matrix.M11" /> de la nouvelle structure <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m12" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt; coefficient.">Coefficient <see cref="P:System.Windows.Media.Matrix.M12" /> de la nouvelle structure <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m21" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt; coefficient.">Coefficient <see cref="P:System.Windows.Media.Matrix.M21" /> de la nouvelle structure <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m22" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt; coefficient.">Coefficient <see cref="P:System.Windows.Media.Matrix.M22" /> de la nouvelle structure <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetX" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt; coefficient.">Coefficient <see cref="P:System.Windows.Media.Matrix.OffsetX" /> de la nouvelle structure <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetY" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; coefficient.">Coefficient <see cref="P:System.Windows.Media.Matrix.OffsetY" /> de la nouvelle structure <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)">
      <summary vsli:raw="Appends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ajoute la structure <see cref="T:System.Windows.Media.Matrix" /> spécifiée à cette <see cref="T:System.Windows.Media.Matrix" /> structure.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to append to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">La structure <see cref="T:System.Windows.Media.Matrix" /> à ajouter à cette structure <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="P:System.Windows.Media.Matrix.Determinant">
      <summary vsli:raw="Gets the determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtient le déterminant de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Le déterminant de cette <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Détermine si le <see cref="T:System.Object" /> spécifié est une structure <see cref="T:System.Windows.Media.Matrix" /> identique à cette <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="o" /> est une structure <see cref="T:System.Windows.Media.Matrix" /> identique à cette structure <see cref="T:System.Windows.Media.Matrix" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is identical to this instance.">Détermine si la structure <see cref="T:System.Windows.Media.Matrix" /> spécifiée est identique à cette instance.</summary>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to compare to this instance.">Instance de <see cref="T:System.Windows.Media.Matrix" /> à comparer à cette instance.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les instances sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">Détermine si les deux structures <see cref="T:System.Windows.Media.Matrix" /> spécifiées sont identiques.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Première structure <see cref="T:System.Windows.Media.Matrix" /> à comparer.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Deuxième structure <see cref="T:System.Windows.Media.Matrix" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="matrix1" /> et <paramref name="matrix2" /> sont identiques ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Retourne le code de hachage pour cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The hash code for this instance.">Code de hachage de cette instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.HasInverse">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is invertible.">Obtient une valeur qui indique si cette structure <see cref="T:System.Windows.Media.Matrix" /> est réversible.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; has an inverse; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si la <see cref="T:System.Windows.Media.Matrix" /> a un inverse ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary vsli:raw="Gets an identity &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Obtient une identité <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="An identity matrix.">Matrice d'identité.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Invert">
      <summary vsli:raw="Inverts this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Inverse cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is not invertible.">La structure <see cref="T:System.Windows.Media.Matrix" /> n'est pas réversible.</exception>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix.">Obtient une valeur qui indique si cette structure <see cref="T:System.Windows.Media.Matrix" /> est une matrice d'identité.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si la structure <see cref="T:System.Windows.Media.Matrix" /> est une matrice d'identité ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary vsli:raw="Gets or sets the value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtient ou définit la valeur de la première ligne et de la première colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 1.">Valeur de la première ligne et de la première colonne de cette <see cref="T:System.Windows.Media.Matrix" />. La valeur par défaut est 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary vsli:raw="Gets or sets the value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtient ou définit la valeur de la première ligne et de la deuxième colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">Valeur de la première ligne et de la deuxième colonne de cette <see cref="T:System.Windows.Media.Matrix" />. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary vsli:raw="Gets or sets the value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtient ou définit la valeur de la deuxième ligne et de la première colonne pour cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">Valeur de la deuxième ligne et de la première colonne de cette <see cref="T:System.Windows.Media.Matrix" />. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary vsli:raw="Gets or sets the value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtient ou définit la valeur de la deuxième ligne et de la deuxième colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 1.">Valeur de la deuxième ligne et de la deuxième colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />. La valeur par défaut est 1.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Multiplie une structure <see cref="T:System.Windows.Media.Matrix" /> par une autre structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">La première structure <see cref="T:System.Windows.Media.Matrix" /> à multiplier.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">La deuxième structure <see cref="T:System.Windows.Media.Matrix" /> à multiplier.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">Résultat de la multiplication de <paramref name="trans1" /> par <paramref name="trans2" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary vsli:raw="Gets or sets the value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtient ou définit la valeur de la troisième ligne et de la première colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">Valeur de la troisième ligne et de la première colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary vsli:raw="Gets or sets the value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtient ou définit la valeur de la troisième ligne et de la deuxième colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">Valeur de la troisième ligne et de la deuxième colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />. La valeur par défaut est 0.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">Détermine si les deux structures <see cref="T:System.Windows.Media.Matrix" /> spécifiées sont identiques.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Première structure <see cref="T:System.Windows.Media.Matrix" /> à comparer.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Deuxième structure <see cref="T:System.Windows.Media.Matrix" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="matrix1" /> et <paramref name="matrix2" /> sont identiques ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are not identical.">Détermine si les deux structures <see cref="T:System.Windows.Media.Matrix" /> spécifiées ne sont pas identiques.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Première structure <see cref="T:System.Windows.Media.Matrix" /> à comparer.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Deuxième structure <see cref="T:System.Windows.Media.Matrix" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are not identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="matrix1" /> et <paramref name="matrix2" /> ne sont pas identiques ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Multiplie une structure <see cref="T:System.Windows.Media.Matrix" /> par une autre structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">La première structure <see cref="T:System.Windows.Media.Matrix" /> à multiplier.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">La deuxième structure <see cref="T:System.Windows.Media.Matrix" /> à multiplier.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">Résultat de la multiplication de <paramref name="trans1" /> par <paramref name="trans2" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a matrix into the equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Convertit une représentation de matrice <see cref="T:System.String" /> en la structure <see cref="T:System.Windows.Media.Matrix" /> équivalente.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the matrix.">La représentation <see cref="T:System.String" /> de la matrice.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Structure <see cref="T:System.Windows.Media.Matrix" /> équivalente.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)">
      <summary vsli:raw="Prepends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure onto this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ajoute la structure <see cref="T:System.Windows.Media.Matrix" /> spécifiée au début de cette structure<see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to prepend to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">La structure <see cref="T:System.Windows.Media.Matrix" /> à ajouter au début de cette structure <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Rotate(System.Double)">
      <summary vsli:raw="Applies a rotation of the specified angle about the origin of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Applique une rotation d'un angle spécifié par rapport à l'origine de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle" vsli:raw="The angle of rotation.">Angle de rotation.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Rotates this matrix about the specified point.">Fait pivoter cette matrice par rapport au point spécifié.</summary>
      <param name="angle" vsli:raw="The angle, in degrees, by which to rotate this matrix.">L'angle, en degrés, selon lequel faire pivoter cette matrice.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which to rotate this matrix.">La coordonnée x du point par rapport auquel faire pivoter cette matrice.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which to rotate this matrix.">La coordonnée y du point par rapport auquel faire pivoter cette matrice.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle at the specified point to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ajoute une rotation d'angle spécifié à un point spécifié au début de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle" vsli:raw="The rotation angle, in degrees.">L'angle de rotation, en degrés.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the rotation center.">La coordonnée x du centre de rotation.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the rotation center.">La coordonnée y du centre de rotation.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ajoute une rotation d'un angle spécifié au début de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle" vsli:raw="The angle of rotation to prepend.">L'angle de rotation à ajouter au début.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)">
      <summary vsli:raw="Appends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ajoute le vecteur d'échelle spécifié à cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">La valeur à laquelle mettre à l'échelle cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe x.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">La valeur à laquelle mettre à l'échelle cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Scales this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; by the specified amount about the specified point.">Met à l'échelle cette <see cref="T:System.Windows.Media.Matrix" /> au taux spécifié par rapport du point spécifié.</summary>
      <param name="scaleX" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">L'échelle à appliquer à cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe x.</param>
      <param name="scaleY" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">L'échelle à appliquer à cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe y.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the scale operation's center point.">La coordonnée x du point central de la mise à l'échelle.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the scale operation's center point.">La coordonnée y du point central de la mise à l'échelle.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale about the specified point of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Ajoute l'échelle spécifiée par rapport au point spécifié au début de cette <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX" vsli:raw="The x-axis scale factor.">Facteur d'échelle de l'axe-x.</param>
      <param name="scaleY" vsli:raw="The y-axis scale factor.">Facteur d'échelle de l'axe-y</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which the scale operation is performed.">La coordonnée x du point par rapport auquel la mise à l'échelle est exécutée.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which the scale operation is performed.">La coordonnée y du point par rapport auquel la mise à l'échelle est exécutée.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ajoute le vecteur d'échelle spécifié au début de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the x-axis.">La valeur à laquelle mettre à l'échelle cette structure <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe x.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the y-axis.">La valeur à laquelle mettre à l'échelle cette structure <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SetIdentity">
      <summary vsli:raw="Changes this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure into an identity matrix.">Change cette structure <see cref="T:System.Windows.Media.Matrix" /> en une matrice d'identité.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)">
      <summary vsli:raw="Appends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ajoute une inclinaison des degrés spécifiés dans les dimensions x et y à cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">L'angle dans la dimension x selon lequel incliner cette <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">L'angle dans la dimension y selon lequel incliner cette <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ajoute une inclinaison des degrés spécifiés dans les dimensions x et y au début de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">L'angle dans la dimension x selon lequel incliner cette <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">L'angle dans la dimension y selon lequel incliner cette <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Met en forme la valeur de l'instance actuelle à l'aide du format spécifié.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Format à utiliser.

ou -
Référence null (<see langword="Nothing" /> en Visual Basic) pour utiliser le format par défaut défini pour le type de l'implémentation <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">Fournisseur à utiliser pour mettre en forme la valeur.

ou -
Référence null (<see langword="Nothing" /> en Visual Basic) pour obtenir les informations de mise en forme des nombres à partir des paramètres régionaux définis dans le système d'exploitation.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Valeur de l'instance actuelle au format spécifié.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Crée une représentation <see cref="T:System.String" /> de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">
        <see cref="T:System.String" /> contenant les valeurs <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, et <see cref="P:System.Windows.Media.Matrix.OffsetY" /> de cette <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure with culture-specific formatting information.">Crée une représentation <see cref="T:System.String" /> de cette structure <see cref="T:System.Windows.Media.Matrix" /> avec des informations de mise en forme propres à la culture.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">Informations de mise en forme propres à la culture.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">
        <see cref="T:System.String" /> contenant les valeurs <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, et <see cref="P:System.Windows.Media.Matrix.OffsetY" /> de cette <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary vsli:raw="Transforms the specified point by the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; and returns the result.">Transforme le point spécifié par la <see cref="T:System.Windows.Media.Matrix" /> et renvoie le résultat.</summary>
      <param name="point" vsli:raw="The point to transform.">Point à transformer.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;point&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Résultat de la transformation de <paramref name="point" /> par cette structure <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])">
      <summary vsli:raw="Transforms the specified points by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforme les points spécifiés par cette <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="points" vsli:raw="The points to transform. The original points in the array are replaced by their transformed values.">Points à transformer. Les points d'origine du tableau sont remplacés par leurs valeurs transformées.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)">
      <summary vsli:raw="Transforms the specified vector by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforme le vecteur spécifié par cette <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector" vsli:raw="The vector to transform.">Vecteur à transformer.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Résultat de la transformation de <paramref name="vector" /> par cette structure <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])">
      <summary vsli:raw="Transforms the specified vectors by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforme les vecteurs spécifiés par cette <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vectors" vsli:raw="The vectors to transform. The original vectors in the array are replaced by their transformed values.">Vecteurs à transformer. Les vecteurs d'origine du tableau sont remplacés par leurs valeurs transformées.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)">
      <summary vsli:raw="Appends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ajoute une traduction des offsets spécifiés à cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">La valeur de l'offset de cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe x.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">La valeur de l'offset de cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ajoute une traduction des offsets spécifiés au début de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">La valeur de l'offset de cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe x.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">La valeur de l'offset de cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe y.</param>
    </member>
    <member name="T:System.Windows.Media.MatrixConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Convertit des instances d'autres types vers et à partir de <see cref="T:System.Windows.Media.Matrix" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.MatrixConverter&quot; /&gt;.">Initialise une nouvelle instance de <see cref="T:System.Windows.Media.MatrixConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a specific type to an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Détermine si un objet peut être converti à partir d'un type spécifique en une instance de <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context" vsli:raw="The context information of a type.">Informations de contexte d'un type.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Type de la source qui est en cours d'évaluation pour conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le type peut être converti en <see cref="T:System.Windows.Media.Matrix" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a different type.">Détermine si une instance de <see cref="T:System.Windows.Media.Matrix" /> peut être convertie en un type différent.</summary>
      <param name="context" vsli:raw="The context information of a type.">Informations de contexte d'un type.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is being evaluated for conversion.">Type souhaité pour lequel <see cref="T:System.Windows.Media.Matrix" /> est évalué à des fins de conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.Media.Matrix" /> peut être converti en <paramref name="destinationType" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Tente de convertir l'objet spécifié en <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context" vsli:raw="The context information of a type.">Informations de contexte d'un type.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">
        <see cref="T:System.Globalization.CultureInfo" /> du type converti.</param>
      <param name="value" vsli:raw="The object being converted.">Objet en cours de conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.Windows.Media.Matrix" /> créé à partir de la conversion de <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is null or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">L'objet spécifié est nul ou est un type qui ne peut pas être converti en <see cref="T:System.Windows.Media.Matrix" />.</exception>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a specified type.">Tente de convertir <see cref="T:System.Windows.Media.Matrix" /> en un type spécifié.</summary>
      <param name="context" vsli:raw="The context information of a type.">Informations de contexte d'un type.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">
        <see cref="T:System.Globalization.CultureInfo" /> du type converti.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to convert.">
        <see cref="T:System.Windows.Media.Matrix" /> à convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to.">Type vers lequel convertir <see cref="T:System.Windows.Media.Matrix" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Objet créé à partir de la conversion de cette <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is null or is not a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;, or the &lt;paramref name=&quot;destinationType&quot; /&gt; is not a valid conversion type.">La <paramref name="value" /> est nulle ou n'est pas un <see cref="T:System.Windows.Media.Matrix" />, ou le <paramref name="destinationType" /> n'est pas un type de conversion valide.</exception>
    </member>
    <member name="T:System.Windows.Media.TextFormattingMode">
      <summary vsli:raw="Defines the formatting methods supported by the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; class.">Définit les méthodes de mise en forme prises en charge par la classe <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Display">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using GDI-compatible font metrics.">Indique que <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> expose le texte à l'aide de mesures de polices compatibles GDI.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Ideal">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using ideal font metrics.">Indique que <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> expose le texte à l'aide de mesures de polices idéales.</summary>
    </member>
    <member name="T:System.Windows.NameScope">
      <summary vsli:raw="Implements base WPF support for the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; methods that store or retrieve name-object mappings into a particular XAML namescope. Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level.">Implémente la prise en charge de WPF de base pour les méthodes <see cref="T:System.Windows.Markup.INameScope" /> qui stockent ou récupèrent des mappages nom-objet dans une portée de nom XAML particulière. Ajoute la prise en charge de propriété jointe pour simplifier la récupération ou la définition des noms de portées de nom XAML de manière dynamique au niveau de l’élément.</summary>
    </member>
    <member name="M:System.Windows.NameScope.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Adds an item to the collection.">Ajoute un élément à la collection.</summary>
      <param name="item" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;) that represents the name mapping to add to the XAML namescope.">
        <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la clé est <see cref="T:System.String" />, la valeur est <see cref="T:System.Object" />) qui représente le mappage de nom à ajouter à la portée de nom XAML.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Either or both components of &lt;paramref name=&quot;item&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">L'un des deux composants de <paramref name="item" /> ou les deux sont <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an item to the collection.">Ajoute un élément à la collection.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to add.">Clé de chaîne, qui est le nom du mappage de la portée de nom XAML à ajouter.</param>
      <param name="value" vsli:raw="The object value, which is the object reference of the XAML namescope mapping to add.">Valeur d'objet, qui est la référence d'objet du mappage de la portée de nom XAML à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Clear">
      <summary vsli:raw="Removes all items from the collection.">Supprime tous les éléments de la collection.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Determines whether the collection contains a specified item.">Détermine si la collection contient l'élément spécifié.</summary>
      <param name="item" vsli:raw="The item to find in the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">Élément à rechercher dans la collection, spécifié comme un <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la clé est <see cref="T:System.String" />, la valeur est <see cref="T:System.Object" />).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; identifies an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; . &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Collections.Generic.KeyValuePair`2" /> spécifié identifie un mappage existant dans ce <see cref="T:System.Windows.NameScope" />. <see langword="false" /> si <see cref="T:System.Collections.Generic.KeyValuePair`2" /> spécifié n'existe pas dans le <see cref="T:System.Windows.NameScope" /> actuel.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
      <summary vsli:raw="Returns whether a provided name already exists in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Retourne une valeur qui indique si un nom fourni existe déjà dans ce <see cref="T:System.Windows.NameScope" />.</summary>
      <param name="key" vsli:raw="The string key to find.">Clé de chaîne à rechercher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; identifies a name for an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">
        <see langword="true" /> si le <paramref name="key" /> spécifié identifie un nom pour un mappage existant dans ce <see cref="T:System.Windows.NameScope" />. <see langword="false" /> si <paramref name="key" /> spécifié n'existe pas dans le <see cref="T:System.Windows.NameScope" /> actuel.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an array, starting at a particular array index.">Copie les éléments de la collection dans un tableau, en commençant au niveau d’un index de tableau particulier.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.">Tableau unidimensionnel qui représente la destination des éléments copiés à partir de la collection. Le tableau doit avoir une indexation de base zéro.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="P:System.Windows.NameScope.Count">
      <summary vsli:raw="Returns the number of items in the collection of mapped names in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Retourne le nombre d'éléments dans la collection de noms mappés dans ce <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="The number of items in the collection.">Nombre d’éléments dans la collection</returns>
    </member>
    <member name="M:System.Windows.NameScope.FindName(System.String)">
      <summary vsli:raw="Returns the corresponding object in the XAML namescope maintained by this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;, based on a provided name string.">Retourne l’objet correspondant dans la portée de nom XAML gérée par ce <see cref="T:System.Windows.NameScope" />, en fonction d’une chaîne de nom fournie.</summary>
      <param name="name" vsli:raw="Name portion of an existing mapping to retrieve the object portion for.">Partie nom d’un mappage existant pour lequel récupérer la partie objet.</param>
      <returns vsli:raw="The requested object that is mapped with &lt;paramref name=&quot;name&quot; /&gt;. Can return &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt; or empty string, or if no matching object was found.">Objet demandé qui est mappé avec <paramref name="name" />. Peut retourner <see langword="null" /> si <paramref name="name" /> a été fourni sous la forme d’une valeur <see langword="null" /> ou d’une chaîne vide, ou si aucun objet correspondant n’a été trouvé.</returns>
    </member>
    <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
      <summary vsli:raw="Provides the attached property get accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Fournit l’accesseur get de propriété jointe pour la propriété jointe <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject" vsli:raw="The object to get the XAML namescope from.">Objet duquel obtenir la portée de nom XAML.</param>
      <returns vsli:raw="A XAML namescope, as an &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; instance.">Portée de nom XAML, comme une instance de <see cref="T:System.Windows.Markup.INameScope" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the collection is read-only.">Obtient une valeur indiquant si la collection est en lecture seule.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.Item(System.String)">
      <summary vsli:raw="Gets or sets the item with the specified key.">Obtient ou définit l'élément avec la clé spécifiée.</summary>
      <param name="key" vsli:raw="The string name for the XAML name mapping to get or set.">Nom de chaîne pour le mappage de nom XAML à obtenir ou définir.</param>
      <returns vsli:raw="The value of the object mapped by the XAML name provided as &lt;paramref name=&quot;key&quot; /&gt;.">Valeur de l'objet mappé par le nom XAML fourni comme <paramref name="key" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt; for a set operation.">
        <paramref name="key" /> est fourni comme <see langword="null" />.

ou -
<paramref name="value" /> est fourni comme <see langword="null" /> pour une opération Set.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Keys">
      <summary vsli:raw="Gets a collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Obtient une collection des clés dans le dictionnaire <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="A collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Collection des clés dans le dictionnaire <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.NameScope">
      <summary vsli:raw="Gets or sets dynamically attached &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; instances.">Obtient ou définit des instances <see cref="T:System.Windows.NameScope" /> attachées dynamiquement.</summary>
    </member>
    <member name="F:System.Windows.NameScope.NameScopeProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Identifie la propriété jointe <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers a new name-object pair into the current XAML namescope.">Inscrit une nouvelle paire nom-objet dans la portée de nom XAML actuelle.</summary>
      <param name="name" vsli:raw="The name to use for mapping the given object.">Nom à utiliser pour le mappage de l’objet donné.</param>
      <param name="scopedElement" vsli:raw="The object to be mapped to the provided name.">Objet à mapper au nom fourni.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;scopedElement&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> ou <paramref name="scopedElement" /> a été fourni comme <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided was rejected by the parser, because it contained characters that are invalid for a XAML name  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided would result in a duplicate name registration.">
        <paramref name="name" /> a été fourni en tant que chaîne vide.

ou -
Le <paramref name="name" /> fourni a été rejeté par l’analyseur, car il contenait des caractères non valides pour un nom XAML.
ou -
Le <paramref name="name" /> fourni entraînerait une inscription de nom en double.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Removes the specific object from the collection.">Supprime l'objet spécifique de la collection.</summary>
      <param name="item" vsli:raw="The object to remove from the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">Objet à supprimer de la collection, spécifié comme un <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la clé est <see cref="T:System.String" />, la valeur est <see cref="T:System.Object" />).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">
        <see langword="true" /> si l'élément a été supprimé avec succès de la collection ; sinon, <see langword="false" />. Retourne également <see langword="false" /> si l'élément est introuvable dans la collection.</returns>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.String)">
      <summary vsli:raw="Removes a mapping for a specified name from the collection.">Supprime de la collection un mappage pour un nom spécifié.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to remove.">Clé de chaîne, qui est le nom du mappage de la portée de nom XAML à supprimer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">
        <see langword="true" /> si l'élément a été supprimé avec succès de la collection ; sinon, <see langword="false" />. Retourne également <see langword="false" /> si l'élément est introuvable dans la collection.</returns>
    </member>
    <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
      <summary vsli:raw="Provides the attached property set accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Fournit l’accesseur set de propriété jointe pour la propriété jointe <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject" vsli:raw="Object to change XAML namescope for.">Objet pour lequel modifier la portée de nom XAML.</param>
      <param name="value" vsli:raw="The new XAML namescope, using an interface cast.">Nouvelle portée de nom XAML, utilisant un transtypage d’interface.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Retourne un énumérateur qui itère au sein d’une collection.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">Énumérateur qui itère au sein d’une collection.</returns>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Retourne un énumérateur qui itère au sein d’une collection.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">Énumérateur qui itère au sein d’une collection.</returns>
    </member>
    <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Gets the value associated with the specified key.">Obtient la valeur associée à la clé spécifiée.</summary>
      <param name="key" vsli:raw="The key of the value to get.">Clé de la valeur à obtenir.</param>
      <param name="value" vsli:raw="When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object. This parameter is passed uninitialized.">Cette méthode retourne la valeur associée à la clé spécifiée, si la clé est trouvée ; sinon, un objet null. Ce paramètre est passé sans être initialisé.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; contains a mapping for the name provided as &lt;paramref name=&quot;key&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Windows.NameScope" /> contient un mappage pour le nom fourni en tant que <paramref name="key" />. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
      <summary vsli:raw="Removes a name-object mapping from the XAML namescope.">Supprime un mappage nom-objet de la portée de nom XAML.</summary>
      <param name="name" vsli:raw="The name of the mapping to remove.">Nom du mappage à supprimer.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided had not been registered.">
        <paramref name="name" /> a été fourni en tant que chaîne vide.

ou -
Le <paramref name="name" /> fourni n’a pas été inscrit.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Values">
      <summary vsli:raw="Gets a collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Obtient une collection des valeurs dans le dictionnaire <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="A collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Collection des valeurs dans le dictionnaire <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="T:System.Windows.Point">
      <summary vsli:raw="Represents an x- and y-coordinate pair in two-dimensional space.">Représente une paire de coordonnées x et y dans l'espace à deux dimensions.</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure that contains the specified coordinates.">Crée une structure <see cref="T:System.Windows.Point" /> qui contient les coordonnées spécifiées.</summary>
      <param name="x" vsli:raw="The x-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Coordonnée x de la nouvelle structure <see cref="T:System.Windows.Point" />.</param>
      <param name="y" vsli:raw="The y-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Coordonnée y de la nouvelle structure <see cref="T:System.Windows.Point" />.</param>
    </member>
    <member name="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the result as a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Ajoute <see cref="T:System.Windows.Vector" /> à un <see cref="T:System.Windows.Point" /> et retourne le résultat sous forme de structure <see cref="T:System.Windows.Point" />.</summary>
      <param name="point" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to add.">Structure <see cref="T:System.Windows.Point" /> à ajouter.</param>
      <param name="vector" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure to add.">Structure <see cref="T:System.Windows.Vector" /> à ajouter.</param>
      <returns vsli:raw="Returns the sum of &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Retourne la somme de <paramref name="point" /> et <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and whether it contains the same coordinates as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Détermine si l'<see cref="T:System.Object" /> spécifié est un <see cref="T:System.Windows.Point" /> et s'il contient les mêmes coordonnées que ce <see cref="T:System.Windows.Point" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and contains the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="o" /> est un <see cref="T:System.Windows.Point" /> et qu'il reprend les mêmes valeurs <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> que <see cref="T:System.Windows.Point" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Compare l'égalité de deux structures <see cref="T:System.Windows.Point" />.</summary>
      <param name="value" vsli:raw="The point to compare to this instance.">Point à comparer à cette instance.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux structures <see cref="T:System.Windows.Point" /> contiennent les mêmes valeurs de <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Compare l'égalité de deux structures <see cref="T:System.Windows.Point" />.</summary>
      <param name="point1" vsli:raw="The first point to compare.">Premier point à comparer.</param>
      <param name="point2" vsli:raw="The second point to compare.">Deuxième point à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="point1" /> et <paramref name="point2" /> contiennent les mêmes valeurs respectives <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Retourne le code de hachage pour ce <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Code de hachage pour cette structure <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Transforme la structure <see cref="T:System.Windows.Point" /> spécifiée par la structure <see cref="T:System.Windows.Media.Matrix" /> indiquée.</summary>
      <param name="point" vsli:raw="The point to transform.">Point à transformer.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Matrice de transformation.</param>
      <returns vsli:raw="The transformed point.">Point transformé.</returns>
    </member>
    <member name="M:System.Windows.Point.Offset(System.Double,System.Double)">
      <summary vsli:raw="Offsets a point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates by the specified amounts.">Décale les coordonnées <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> d'un point des valeurs spécifiées.</summary>
      <param name="offsetX" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; coordinate.">Décalage de la coordonnée <see cref="P:System.Windows.Point.X" /> du point.</param>
      <param name="offsetY" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinate.">Décalage de la coordonnée <see cref="P:System.Windows.Point.Y" /> du point.</param>
    </member>
    <member name="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Translates the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and returns the result.">Translate le <see cref="T:System.Windows.Point" /> spécifié de <see cref="T:System.Windows.Vector" /> et renvoie le résultat.</summary>
      <param name="point" vsli:raw="The point to translate.">Point à translater.</param>
      <param name="vector" vsli:raw="The amount by which to translate &lt;paramref name=&quot;point&quot; /&gt;.">Valeur de translation de <paramref name="point" />.</param>
      <returns vsli:raw="The result of translating the specified point by the specified vector.">Résultat de la translation du point spécifié du vecteur indiqué.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Compare l'égalité de deux structures <see cref="T:System.Windows.Point" />.</summary>
      <param name="point1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">Première structure <see cref="T:System.Windows.Point" /> à comparer.</param>
      <param name="point2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">Deuxième structure <see cref="T:System.Windows.Point" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates of &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les coordonnées <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> de <paramref name="point1" /> et de <paramref name="point2" /> sont respectivement égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Crée une structure <see cref="T:System.Windows.Size" /> avec <see cref="P:System.Windows.Size.Width" /> égal à la valeur <see cref="P:System.Windows.Point.X" /> de ce point et <see cref="P:System.Windows.Size.Height" /> égal à sa valeur <see cref="P:System.Windows.Point.Y" />.</summary>
      <param name="point" vsli:raw="The point to convert.">Point à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Une structure <see cref="T:System.Windows.Size" /> avec <see cref="P:System.Windows.Size.Width" /> égal à la valeur <see cref="P:System.Windows.Point.X" /> de ce point et <see cref="P:System.Windows.Size.Height" /> égal à sa valeur <see cref="P:System.Windows.Point.Y" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Crée une structure <see cref="T:System.Windows.Vector" /> avec une valeur <see cref="P:System.Windows.Vector.X" /> égale à la valeur <see cref="P:System.Windows.Point.X" /> du point et <see cref="P:System.Windows.Vector.Y" /> égal à <see cref="P:System.Windows.Point.Y" /> du point.</summary>
      <param name="point" vsli:raw="The point to convert.">Point à convertir.</param>
      <returns vsli:raw="A vector with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Vecteur avec une valeur <see cref="P:System.Windows.Vector.X" /> égale à la valeur <see cref="P:System.Windows.Point.X" /> du point et <see cref="P:System.Windows.Vector.Y" /> égal à <see cref="P:System.Windows.Point.Y" /> du point.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for inequality.">Compare l'inégalité de deux structures <see cref="T:System.Windows.Point" />.</summary>
      <param name="point1" vsli:raw="The first point to compare.">Premier point à comparer.</param>
      <param name="point2" vsli:raw="The second point to compare.">Deuxième point à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have different &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; or &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates; &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates.">
        <see langword="true" /> si <paramref name="point1" /> et <paramref name="point2" /> présentent des coordonnées <see cref="P:System.Windows.Point.X" /> ou <see cref="P:System.Windows.Point.Y" /> différentes ; <see langword="false" /> si <paramref name="point1" /> et <paramref name="point2" /> ont les mêmes coordonnées <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforme le <see cref="T:System.Windows.Point" /> spécifié par un objet <see cref="T:System.Windows.Media.Matrix" /> donné.</summary>
      <param name="point" vsli:raw="The point to transform.">Point à transformer.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Matrice de transformation.</param>
      <returns vsli:raw="The result of transforming the specified point using the specified matrix.">Résultat de la transformation du point spécifié par la matrice indiquée.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Soustrait le <see cref="T:System.Windows.Point" /> spécifié d'un autre <see cref="T:System.Windows.Point" /> indiqué et retourne la différence sous forme de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">Point duquel <paramref name="point2" /> est soustrait.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Point à soustraire de <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">Différence entre <paramref name="point1" /> et <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Soustrait l'objet <see cref="T:System.Windows.Vector" /> spécifié du <see cref="T:System.Windows.Point" /> indiqué et retourne le <see cref="T:System.Windows.Point" /> résultant.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">Point duquel <paramref name="vector" /> est soustrait.</param>
      <param name="vector" vsli:raw="The vector to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Vecteur à soustraire de <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Différence entre <paramref name="point" /> et <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Parse(System.String)">
      <summary vsli:raw="Constructs a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Construit un <see cref="T:System.Windows.Point" /> à partir du <see cref="T:System.String" /> spécifié.</summary>
      <param name="source" vsli:raw="A string representation of a point.">Représentation sous forme de chaîne d'un point.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Structure <see cref="T:System.Windows.Point" /> équivalente.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not composed of two comma- or space-delimited double values.">
        <paramref name="source" /> ne se compose pas de deux valeurs doubles délimitées par une virgule ou un espace.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not contain two numbers.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;source&quot; /&gt; contains too many delimiters.">
        <paramref name="source" /> ne contient pas deux nombres.
ou
<paramref name="source" /> contient trop de séparateurs.</exception>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Soustrait le <see cref="T:System.Windows.Point" /> spécifié d'un autre <see cref="T:System.Windows.Point" /> indiqué et retourne la différence sous forme de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">Point duquel <paramref name="point2" /> est soustrait.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Point à soustraire de <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">Différence entre <paramref name="point1" /> et <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Soustrait l'objet <see cref="T:System.Windows.Vector" /> spécifié du <see cref="T:System.Windows.Point" /> indiqué et retourne le <see cref="T:System.Windows.Point" /> résultant.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">Point duquel <paramref name="vector" /> est soustrait.</param>
      <param name="vector" vsli:raw="The &lt;paramref name=&quot;vector&quot; /&gt; to subtract from &lt;paramref name=&quot;point&quot; /&gt;.">
        <paramref name="vector" /> à soustraire du <paramref name="point" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Différence entre <paramref name="point" /> et <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">Ce membre prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destiné à être directement utilisé à partir de votre code. Pour obtenir une description de ce membre, consultez <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Chaîne spécifiant le format à utiliser.
ou
<see langword="null" /> pour utiliser le format par défaut défini pour le type de l'implémentation <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">
        <see langword="IFormatProvider" /> à utiliser pour mettre en forme la valeur.

ou -
<see langword="null" /> pour obtenir les informations de mise en forme des nombres à partir des paramètres régionaux définis dans le système d'exploitation.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">Chaîne contenant la valeur de l'instance actuelle au format spécifié.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Crée une représentation <see cref="T:System.String" /> de <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">
        <see cref="T:System.String" /> contenant les valeurs <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> de cette structure de <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Crée une représentation <see cref="T:System.String" /> de <see cref="T:System.Windows.Point" />.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">Informations de mise en forme spécifiques à la culture.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">
        <see cref="T:System.String" /> contenant les valeurs <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> de cette structure de <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Obtient ou définit la coordonnée <see cref="P:System.Windows.Point.X" />-de cette structure <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">Valeur de la coordonnée <see cref="P:System.Windows.Point.X" />-de cette structure <see cref="T:System.Windows.Point" />.  La valeur par défaut est <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Obtient ou définit la valeur de coordonnée <see cref="P:System.Windows.Point.Y" /> de ce <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">Valeur de la coordonnée <see cref="P:System.Windows.Point.Y" />-de cette structure <see cref="T:System.Windows.Point" />.  La valeur par défaut est <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.PointConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Convertit des instances d'autres types vers et à partir de <see cref="T:System.Windows.Point" />.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PointConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PointConverter" />.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Détermine si un objet peut être converti à partir d'un type donné en une instance de <see cref="T:System.Windows.Point" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Décrit les informations de contexte d’un type.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Type de la source qui est en cours d'évaluation pour conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le type peut être converti en <see cref="T:System.Windows.Point" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a different type.">Détermine si une instance de <see cref="T:System.Windows.Point" /> peut être convertie en un type différent.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Décrit les informations de contexte d’un type.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; is being evaluated for conversion.">Type souhaité pour lequel <see cref="T:System.Windows.Point" /> est évalué à des fins de conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.Point" /> peut être converti en <paramref name="destinationType" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Tente de convertir l'objet spécifié en <see cref="T:System.Windows.Point" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Informations culturelles à respecter pendant la conversion.</param>
      <param name="value" vsli:raw="The object being converted.">Objet en cours de conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.Windows.Point" /> créé à partir de la conversion de <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Levée si l'objet spécifié est NULL ou s'il s'agit d'un type qui ne peut pas être converti en <see cref="T:System.Windows.Point" />.</exception>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a specified type.">Tente de convertir <see cref="T:System.Windows.Point" /> en un type spécifié.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Informations culturelles à respecter pendant la conversion.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to convert.">
        <see cref="T:System.Windows.Point" /> à convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to.">Type vers lequel convertir <see cref="T:System.Windows.Point" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Objet créé à partir de la conversion de cette <see cref="T:System.Windows.Point" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">Levée si <paramref name="value" /> est <see langword="null" /> ou n'est pas un <see cref="T:System.Windows.Point" /> ou si le <paramref name="destinationType" /> ne fait pas partie des types valides pour conversion.</exception>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary vsli:raw="Represents the callback that is invoked when the effective property value of a dependency property changes.">Représente le rappel qui est appelé quand la valeur de propriété effective d’une propriété de dépendance change.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; on which the property has changed value.">
        <see cref="T:System.Windows.DependencyObject" /> dans lequel la propriété a modifié une valeur.</param>
      <param name="e" vsli:raw="Event data that is issued by any event that tracks changes to the effective value of this property.">Données d’événement qui sont émises par un événement qui effectue le suivi des modifications apportées à la valeur effective de cette propriété.</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary vsli:raw="Defines certain behavior aspects of a dependency property as it is applied to a specific type, including conditions it was registered with.">Définit certains aspects du comportement d’une propriété de dépendance quand elle est appliquée à un type spécifique, notamment les conditions dans lesquelles elle a été inscrite.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PropertyMetadata" />.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with a specified default value for the dependency property that this metadata will be applied to.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PropertyMetadata" /> avec une valeur par défaut spécifiée pour la propriété de dépendance à laquelle ces métadonnées seront appliquées.</summary>
      <param name="defaultValue" vsli:raw="The default value to specify for a dependency property, usually provided as a value of some specific type.">Valeur par défaut à spécifier pour une propriété de dépendance, habituellement fournie comme valeur d'un type spécifique.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> ne peut pas avoir la valeur <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PropertyMetadata" /> avec la valeur par défaut et la référence d'implémentation <see cref="T:System.Windows.PropertyChangedCallback" /> spécifiées.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">Valeur par défaut de la propriété de dépendance, habituellement fournie comme valeur d'un type spécifique.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Référence à l'implémentation d'un gestionnaire que le système de propriétés doit appeler à chaque fois que la valeur effective de la propriété change.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> ne peut pas avoir la valeur <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and callbacks.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PropertyMetadata" /> avec la valeur par défaut et les rappels spécifiés.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">Valeur par défaut de la propriété de dépendance, habituellement fournie comme valeur d'un type spécifique.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Référence à l'implémentation d'un gestionnaire que le système de propriétés doit appeler à chaque fois que la valeur effective de la propriété change.</param>
      <param name="coerceValueCallback" vsli:raw="Reference to a handler implementation that is to be called whenever the property system calls &lt;see cref=&quot;M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)&quot; /&gt; against this property.">Référence à l'implémentation d'un gestionnaire qui doit être appelée à chaque fois que le système de propriétés appelle <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> à l'aide de cette propriété.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> ne peut pas avoir la valeur <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PropertyMetadata" /> avec la référence d'implémentation <see cref="T:System.Windows.PropertyChangedCallback" /> spécifiée.</summary>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Référence à l'implémentation d'un gestionnaire que le système de propriétés doit appeler à chaque fois que la valeur effective de la propriété change.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.CoerceValueCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation specified in this metadata.">Obtient ou définit une référence à une implémentation <see cref="T:System.Windows.CoerceValueCallback" /> spécifiée dans ces métadonnées.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation reference.">Référence d'implémentation <see cref="T:System.Windows.CoerceValueCallback" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Impossible de définir une propriété de métadonnées une fois qu’elle est appliquée à une opération de propriété de dépendance.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the dependency property.">Obtient ou définit la valeur par défaut de la propriété de dépendance.</summary>
      <returns vsli:raw="The default value of the property. The default value on a &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; instance created with the parameterless constructor will be &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">Valeur par défaut de la propriété. La valeur par défaut sur <see cref="T:System.Windows.PropertyMetadata" /> une instance créée avec le constructeur sans paramètre <see cref="F:System.Windows.DependencyProperty.UnsetValue" />sera.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; once created.">Impossible de définir la valeur <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> une fois créée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Impossible de définir une propriété de métadonnées une fois qu’elle est appliquée à une opération de propriété de dépendance.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.IsSealed">
      <summary vsli:raw="Gets a value that determines whether the metadata has been applied to a property in some way, resulting in the immutable state of that metadata instance.">Obtient une valeur qui détermine si les métadonnées ont été appliquées à une propriété, entraînant l'état immuable de cette instance de métadonnées.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the metadata instance is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'instance de métadonnées est immuable ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary vsli:raw="Merges this metadata with the base metadata.">Fusionne ces métadonnées avec les métadonnées de base.</summary>
      <param name="baseMetadata" vsli:raw="The base metadata to merge with this instance's values.">Métadonnées de base à fusionner avec les valeurs de cette instance.</param>
      <param name="dp" vsli:raw="The dependency property to which this metadata is being applied.">Propriété de dépendance à laquelle ces métadonnées sont appliquées.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.">Appelé lorsque ces métadonnées ont été appliquées à une propriété qui indique que les métadonnées sont sealed.</summary>
      <param name="dp" vsli:raw="The dependency property to which the metadata has been applied.">Propriété de dépendance à laquelle les métadonnées ont été appliquées.</param>
      <param name="targetType" vsli:raw="The type associated with this metadata if this is type-specific metadata. If this is default metadata, this value is a null reference.">Type associé à ces métadonnées s'il s'agit de métadonnées spécifiques au type. S'il s'agit de métadonnées par défaut, cette valeur est une référence nulle.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.PropertyChangedCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation specified in this metadata.">Obtient ou définit une référence à une implémentation <see cref="T:System.Windows.PropertyChangedCallback" /> spécifiée dans ces métadonnées.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Référence d'implémentation <see cref="T:System.Windows.PropertyChangedCallback" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Impossible de définir une propriété de métadonnées une fois qu’elle est appliquée à une opération de propriété de dépendance.</exception>
    </member>
    <member name="T:System.Windows.Rect">
      <summary vsli:raw="Describes the width, height, and location of a rectangle.">Décrit la largeur, la hauteur et l’emplacement d’un rectangle.</summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified x-coordinate, y-coordinate, width, and height.">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Rect" /> qui a les coordonnées x et y, et la largeur et la hauteur spécifiées.</summary>
      <param name="x" vsli:raw="The x-coordinate of the top-left corner of the rectangle.">Coordonnée X du coin supérieur gauche du rectangle.</param>
      <param name="y" vsli:raw="The y-coordinate of the top-left corner of the rectangle.">Coordonnée y du coin supérieur gauche du rectangle.</param>
      <param name="width" vsli:raw="The width of the rectangle.">Largeur du rectangle.</param>
      <param name="height" vsli:raw="The height of the rectangle.">Hauteur du rectangle.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;width&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;height&quot; /&gt; is a negative value.">
        <paramref name="width" /> est une valeur négative.

ou -
<paramref name="height" /> est une valeur négative.</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the two specified points.">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Rect" /> qui est exactement assez  grande pour contenir les deux points spécifiés.</summary>
      <param name="point1" vsli:raw="The first point that the new rectangle must contain.">Le premier point que doit contenir le nouveau rectangle.</param>
      <param name="point2" vsli:raw="The second point that the new rectangle must contain.">Le deuxième point que doit contenir le nouveau rectangle.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified top-left corner location and the specified width and height.">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Rect" /> qui a l'emplacement de coin supérieur gauche, et la largeur et la hauteur spécifiés.</summary>
      <param name="location" vsli:raw="A point that specifies the location of the top-left corner of the rectangle.">Un point qui spécifie l'emplacement du coin supérieur gauche du rectangle.</param>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Une structure <see cref="T:System.Windows.Size" /> qui spécifie la hauteur et la largeur du rectangle.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Rect" /> qui est exactement assez grande pour contenir le point spécifié et la somme du point et du vecteur spécifiés.</summary>
      <param name="point" vsli:raw="The first point the rectangle must contain.">Le premier point que doit contenir le rectangle.</param>
      <param name="vector" vsli:raw="The amount to offset the specified point. The resulting rectangle will be exactly large enough to contain both points.">Le taux d'offset du point spécifié. Le rectangle résultant sera exactement assez grand pour contenir les deux points.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is of the specified size and is located at (0,0).">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Rect" /> qui fait la taille spécifiée et est localisée à (0,0).</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Une structure <see cref="T:System.Windows.Size" /> qui spécifie la hauteur et la largeur du rectangle.</param>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary vsli:raw="Gets the y-axis value of the bottom of the rectangle.">Obtient la valeur d'axe y du bas du rectangle.</summary>
      <returns vsli:raw="The y-axis value of the bottom of the rectangle. If the rectangle is empty, the value is &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt; .">La valeur d'axe y du bas du rectangle. Si le rectangle est vide, la valeur est <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomLeft">
      <summary vsli:raw="Gets the position of the bottom-left corner of the rectangle.">Obtient la position du coin inférieur gauche du rectangle.</summary>
      <returns vsli:raw="The position of the bottom-left corner of the rectangle.">La position du coin inférieur gauche du rectangle.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomRight">
      <summary vsli:raw="Gets the position of the bottom-right corner of the rectangle.">Obtient la position du coin inférieur droit du rectangle</summary>
      <returns vsli:raw="The position of the bottom-right corner of the rectangle.">La position du coin inférieur droit du rectangle.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Double,System.Double)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.">Indique si le rectangle contient les coordonnées x et y spécifiées.</summary>
      <param name="x" vsli:raw="The x-coordinate of the point to check.">Coordonnée x du point à vérifier.</param>
      <param name="y" vsli:raw="The y-coordinate of the point to check.">Coordonnée y du point à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if (&lt;paramref name=&quot;x&quot; /&gt;, &lt;paramref name=&quot;y&quot; /&gt;) is contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si (<paramref name="x" />, <paramref name="y" />) est contenu par le rectangle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified point.">Indique si le rectangle contient le point spécifié.</summary>
      <param name="point" vsli:raw="The point to check.">Point à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle contains the specified point; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le rectangle contient le point spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified rectangle.">Indique si le rectangle contient le rectangle spécifié.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">Le rectangle à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;rect&quot; /&gt; is entirely contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="rect" /> est entièrement contenu par le rectangle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary vsli:raw="Gets a special value that represents a rectangle with no position or area.">Obtient une valeur spéciale qui représente un rectangle sans position ou zone.</summary>
      <returns vsli:raw="The empty rectangle, which has &lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;, and has &lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;.">Le rectangle vide qui a <see cref="P:System.Windows.Rect.X" /> et des valeurs de propriété <see cref="P:System.Windows.Rect.Y" /> de <see cref="F:System.Double.PositiveInfinity" />et a <see cref="P:System.Windows.Rect.Width" /> et des valeurs de propriété <see cref="P:System.Windows.Rect.Height" /> de <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the specified object is equal to the current rectangle.">Détermine si l'objet spécifié est égal au rectangle actuel.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">Objet à comparer avec le rectangle actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="o" /> est un <see cref="T:System.Windows.Rect" /> et qu'il possède les mêmes propriétés <see cref="P:System.Windows.Rect.Location" /> et <see cref="P:System.Windows.Rect.Size" /> que le rectangle actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle is equal to the current rectangle.">Indique si le rectangle spécifié est égal au rectangle actuel.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">Le rectangle à comparer avec le rectangle actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le rectangle spécifié a les mêmes valeurs <see cref="P:System.Windows.Rect.Location" /> et <see cref="P:System.Windows.Rect.Size" /> que le rectangle actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangles are equal.">Indique si les rectangles spécifiés sont égaux.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Premier rectangle à comparer.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Deuxième rectangle à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les rectangles ont les mêmes <see cref="P:System.Windows.Rect.Location" /> et valeurs <see cref="P:System.Windows.Rect.Size" />; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code for the rectangle.">Crée un code de hachage pour le rectangle.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure.">Code de hachage de la structure <see cref="T:System.Windows.Rect" /> actuelle.</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">Obtient ou définit la hauteur du rectangle.</summary>
      <returns vsli:raw="A positive number that represents the height of the rectangle. The default is 0.">Un nombre positif qui représente la hauteur du rectangle. La valeur par défaut est 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set to a negative value.">
        <see cref="P:System.Windows.Rect.Height" /> a une valeur négative.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Height" /> est définie sur un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
      <summary vsli:raw="Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.">Développe ou réduit le rectangle en utilisant les taux de largeur et de hauteur spécifiés, dans toutes les directions.</summary>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">Le taux de développement ou de réduction des côtés gauche et droit d'un rectangle.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">Le taux de développement ou de réduction du haut et du bas d'un rectangle.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Cette méthode est appelée sur le rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.">Crée un rectangle qui résulte du développement ou de la réduction du rectangle spécifié par les taux de largeur ou de hauteur spécifiés, dans toutes les directions.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">La structure <see cref="T:System.Windows.Rect" /> à modifier.</param>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">Le taux de développement ou de réduction des côtés gauche et droit d'un rectangle.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">Le taux de développement ou de réduction du haut et du bas d'un rectangle.</param>
      <returns vsli:raw="The resulting rectangle.">Le rectangle résultant.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> est un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
      <summary vsli:raw="Returns the rectangle that results from expanding the specified rectangle by the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">Renvoie le rectangle qui résulte du développement du rectangle spécifié par la <see cref="T:System.Windows.Size" />spécifiée, dans toutes les directions.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">La structure <see cref="T:System.Windows.Rect" /> à modifier.</param>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">Spécifie le taux de développement du rectangle. La propriété <see cref="T:System.Windows.Size" /> de la structure <see cref="P:System.Windows.Size.Width" /> spécifie la valeur à laquelle augmenter les propriétés <see cref="P:System.Windows.Rect.Left" /> et <see cref="P:System.Windows.Rect.Right" /> du rectangle. La propriété <see cref="T:System.Windows.Size" /> de la structure <see cref="P:System.Windows.Size.Height" /> spécifie la valeur à laquelle augmenter les propriétés <see cref="P:System.Windows.Rect.Top" /> et <see cref="P:System.Windows.Rect.Bottom" /> du rectangle.</param>
      <returns vsli:raw="The resulting rectangle.">Le rectangle résultant.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> est un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Size)">
      <summary vsli:raw="Expands the rectangle by using the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">Développe le rectangle en utilisant la <see cref="T:System.Windows.Size" />spécifiée, dans toutes les directions.</summary>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">Spécifie le taux de développement du rectangle. La propriété <see cref="T:System.Windows.Size" /> de la structure <see cref="P:System.Windows.Size.Width" /> spécifie la valeur à laquelle augmenter les propriétés <see cref="P:System.Windows.Rect.Left" /> et <see cref="P:System.Windows.Rect.Right" /> du rectangle. La propriété <see cref="T:System.Windows.Size" /> de la structure <see cref="P:System.Windows.Size.Height" /> spécifie la valeur à laquelle augmenter les propriétés <see cref="P:System.Windows.Rect.Top" /> et <see cref="P:System.Windows.Rect.Bottom" /> du rectangle.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Cette méthode est appelée sur le rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary vsli:raw="Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.">Trouve l'intersection du rectangle actuel et du rectangle spécifié, et stocke le résultat comme le rectangle actuel.</summary>
      <param name="rect" vsli:raw="The rectangle to intersect with the current rectangle.">Le rectangle devant trouver l'intersection avec le rectangle actuel.</param>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Returns the intersection of the specified rectangles.">Renvoie l'intersection des rectangles spécifiés.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Premier rectangle à comparer.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Deuxième rectangle à comparer.</param>
      <returns vsli:raw="The intersection of the two rectangles, or &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; if no intersection exists.">L'intersection des deux rectangles, ou <see cref="P:System.Windows.Rect.Empty" /> si aucune intersection n'existe.</returns>
    </member>
    <member name="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle intersects with the current rectangle.">Indique si le rectangle spécifié se croise avec le rectangle actuel.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">Le rectangle à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle intersects with the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le rectangle spécifié se croise avec le rectangle actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Obtient une valeur qui indique si le rectangle est le rectangle <see cref="P:System.Windows.Rect.Empty" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le rectangle est le rectangle<see cref="P:System.Windows.Rect.Empty" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary vsli:raw="Gets the x-axis value of the left side of the rectangle.">Obtient la valeur d'axe x du côté gauche du rectangle.</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">La  valeur d'axe x du côté gauche du rectangle.</returns>
    </member>
    <member name="P:System.Windows.Rect.Location">
      <summary vsli:raw="Gets or sets the position of the top-left corner of the rectangle.">Obtient ou définit la position de l'angle supérieur gauche du rectangle.</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle. The default is (0, 0).">La position du coin supérieur gauche du rectangle. La valeur par défaut est (0, 0).</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Location" /> est définie sur un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Double,System.Double)">
      <summary vsli:raw="Moves the rectangle by the specified horizontal and vertical amounts.">Déplace le rectangle par les taux horizontal et vertical spécifiés.</summary>
      <param name="offsetX" vsli:raw="The amount to move the rectangle horizontally.">Le taux auquel déplacer le rectangle horizontalement.</param>
      <param name="offsetY" vsli:raw="The amount to move the rectangle vertically.">Le taux auquel déplacer le rectangle verticalement.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Cette méthode est appelée sur le rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.">Renvoie un rectangle qui est décalé du rectangle spécifié en utilisant les taux horizontal et vertical spécifiés.</summary>
      <param name="rect" vsli:raw="The rectangle to move.">Le rectangle à déplacer.</param>
      <param name="offsetX" vsli:raw="The horizontal offset for the new rectangle.">Le décalage horizontal pour le nouveau rectangle.</param>
      <param name="offsetY" vsli:raw="The vertical offset for the new rectangle.">Le décalage vertical pour le nouveau rectangle.</param>
      <returns vsli:raw="The resulting rectangle.">Le rectangle résultant.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" /> a la valeur <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified vector.">Renvoie un rectangle qui est décalé du rectangle spécifié en utilisant le vecteur spécifié.</summary>
      <param name="rect" vsli:raw="The original rectangle.">Le rectangle d'origine.</param>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical offsets for the new rectangle.">Un vecteur qui spécifie les décalages horizontal et vertical pour le nouveau rectangle.</param>
      <returns vsli:raw="The resulting rectangle.">Le rectangle résultant.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" /> a la valeur <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Vector)">
      <summary vsli:raw="Moves the rectangle by the specified vector.">Déplace le rectangle par le vecteur spécifié.</summary>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical amounts to move the rectangle.">Un vecteur qui spécifie les taux horizontal et vertical auxquels déplacer le rectangle.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Cette méthode est appelée sur le rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">Compare l'égalité exacte de deux rectangles.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Premier rectangle à comparer.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Deuxième rectangle à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les rectangles ont les mêmes <see cref="P:System.Windows.Rect.Location" /> et valeurs <see cref="P:System.Windows.Rect.Size" />; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">Compare si deux rectangles sont inégaux.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Premier rectangle à comparer.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Deuxième rectangle à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles do not have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les rectangles n'ont pas les mêmes valeurs  <see cref="P:System.Windows.Rect.Location" /> et <see cref="P:System.Windows.Rect.Size" />; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Parse(System.String)">
      <summary vsli:raw="Creates a new rectangle from the specified string representation.">Crée un nouveau rectangle à partir de la représentation sous forme de chaîne spécifiée.</summary>
      <param name="source" vsli:raw="The string representation of the rectangle, in the form &quot;x, y, width, height&quot;.">La représentation sous forme de chaîne du rectangle, sous la forme « x, y, largeur, hauteur ».</param>
      <returns vsli:raw="The resulting rectangle.">Le rectangle résultant.</returns>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary vsli:raw="Gets the x-axis value of the right side of the rectangle.">Obtient la valeur d'axe x du côté droit du rectangle.</summary>
      <returns vsli:raw="The x-axis value of the right side of the rectangle.">La valeur d'axe x du côté droit du rectangle.</returns>
    </member>
    <member name="M:System.Windows.Rect.Scale(System.Double,System.Double)">
      <summary vsli:raw="Multiplies the size of the current rectangle by the specified x and y values.">Multiplie la taille du rectangle actuel par les valeurs x et y spécifiées.</summary>
      <param name="scaleX" vsli:raw="The scale factor in the x-direction.">Le facteur d'échelle sur l'axe x.</param>
      <param name="scaleY" vsli:raw="The scale factor in the y-direction.">Le facteur d'échelle sur l'axe y.</param>
    </member>
    <member name="P:System.Windows.Rect.Size">
      <summary vsli:raw="Gets or sets the width and height of the rectangle.">Obtient ou définit la largeur et la hauteur du rectangle.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Une structure <see cref="T:System.Windows.Size" /> qui spécifie la hauteur et la largeur du rectangle.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Size" /> est définie sur un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Met en forme la valeur de l’instance actuelle en utilisant le format spécifié.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Format à utiliser.

ou -
Référence null (<see langword="Nothing" /> en Visual Basic) pour utiliser le format par défaut défini pour le type de l'implémentation <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">Fournisseur à utiliser pour mettre en forme la valeur.

ou -
Référence null (<see langword="Nothing" /> en Visual Basic) pour obtenir les informations de mise en forme des nombres à partir des paramètres régionaux définis dans le système d'exploitation.</param>
      <returns vsli:raw="A string representation of the rectangle.">Représentation sous forme de chaîne du rectangle.</returns>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary vsli:raw="Gets the y-axis position of the top of the rectangle.">Obtient la position de l'axe y du haut du rectangle.</summary>
      <returns vsli:raw="The y-axis position of the top of the rectangle.">La  position de l'axe y du haut du rectangle.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopLeft">
      <summary vsli:raw="Gets the position of the top-left corner of the rectangle.">Obtient la position du coin supérieur gauche du rectangle.</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle.">La position du coin supérieur gauche du rectangle.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopRight">
      <summary vsli:raw="Gets the position of the top-right corner of the rectangle.">Obtient la position du coin supérieur droit du rectangle.</summary>
      <returns vsli:raw="The position of the top-right corner of the rectangle.">La position du coin supérieur droit du rectangle.</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary vsli:raw="Returns a string representation of the rectangle.">Renvoie une représentation sous forme de chaîne du rectangle.</summary>
      <returns vsli:raw="A string representation of the current rectangle. The string has the following form: &quot;&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt;&quot;.">Une représentation sous forme de chaîne du rectangle actuel. La chaîne a la forme suivante : « <see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" /> ».</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a string representation of the rectangle by using the specified format provider.">Renvoie une représentation sous forme de chaîne du rectangle en utilisant le fournisseur de format spécifié.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">Informations de mise en forme spécifiques à la culture.</param>
      <returns vsli:raw="A string representation of the current rectangle that is determined by the specified format provider.">Une représentation sous forme de chaîne du rectangle actuel qui est déterminée par le fournisseur de format spécifié.</returns>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the rectangle by applying the specified matrix.">Transforme le rectangle en appliquant la matrice spécifiée.</summary>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">Une matrice qui spécifie la transformation à appliquer.</param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
      <summary vsli:raw="Returns the rectangle that results from applying the specified matrix to the specified rectangle.">Renvoie le rectangle qui résulte de l'application de la matrice spécifiée au rectangle spécifié.</summary>
      <param name="rect" vsli:raw="A rectangle that is the basis for the transformation.">Un rectangle qui est la base pour la transformation.</param>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">Une matrice qui spécifie la transformation à appliquer.</param>
      <returns vsli:raw="The rectangle that results from the operation.">Le rectangle qui résulte de l'opération.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified point.">Développe le rectangle actuel exactement assez pour contenir le point spécifié.</summary>
      <param name="point" vsli:raw="The point to include.">Le point à inclure.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified rectangle.">Développe le rectangle actuel exactement assez pour contenir le rectangle spécifié.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">Le rectangle à inclure.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.">Crée un rectangle qui est exactement assez grand pour inclure le rectangle et le point spécifiés.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">Le rectangle à inclure.</param>
      <param name="point" vsli:raw="The point to include.">Le point à inclure.</param>
      <returns vsli:raw="A rectangle that is exactly large enough to contain the specified rectangle and the specified point.">Un rectangle qui est exactement assez grand pour contenir le rectangle et le point spécifiés.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to contain the two specified rectangles.">Crée un rectangle qui est exactement assez grand pour contenir les deux rectangles spécifiés.</summary>
      <param name="rect1" vsli:raw="The first rectangle to include.">Le premier rectangle à inclure.</param>
      <param name="rect2" vsli:raw="The second rectangle to include.">Le deuxième rectangle à inclure.</param>
      <returns vsli:raw="The resulting rectangle.">Le rectangle résultant.</returns>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">Obtient ou définit la largeur du rectangle.</summary>
      <returns vsli:raw="A positive number that represents the width of the rectangle. The default is 0.">Un nombre positif qui représente la largeur du rectangle. La valeur par défaut est 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set to a negative value.">
        <see cref="P:System.Windows.Rect.Width" /> a une valeur négative.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Width" /> est définie sur un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary vsli:raw="Gets or sets the x-axis value of the left side of the rectangle.">Obtient ou définit la valeur d'axe x du côté gauche du rectangle.</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">La  valeur d'axe x du côté gauche du rectangle.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.X" /> est définie sur un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary vsli:raw="Gets or sets the y-axis value of the top side of the rectangle.">Obtient ou définit la valeur d'axe y du côté supérieur du rectangle.</summary>
      <returns vsli:raw="The y-axis value of the top side of the rectangle.">La valeur d'axe y du côté supérieur du rectangle.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Y" /> est définie sur un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="T:System.Windows.RectConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Convertit les instances d'autres types vers et à partir des instances de <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.RectConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Détermine si un objet peut être converti à partir d'un type spécifique en une instance de <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Type de la source qui est en cours d'évaluation pour conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le type peut être converti en <see cref="T:System.Windows.Rect" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to the specified type.">Détermine si <see cref="T:System.Windows.Rect" /> peut être converti dans le type spécifié.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; is being evaluated for conversion.">Type souhaité pour lequel <see cref="T:System.Windows.Rect" /> est évalué à des fins de conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.Rect" /> peut être converti en <paramref name="destinationType" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Tente de convertir l'objet spécifié en <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="culture" vsli:raw="Cultural information which is respected when converting.">Informations culturelles respectées lors de la conversion.</param>
      <param name="value" vsli:raw="The object being converted.">Objet en cours de conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.Windows.Rect" /> créé à partir de la conversion de <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Levée si l'objet spécifié est NULL ou s'il s'agit d'un type qui ne peut pas être converti en <see cref="T:System.Windows.Rect" />.</exception>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to the specified type.">Tente de convertir <see cref="T:System.Windows.Rect" /> dans le type spécifié.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="culture" vsli:raw="Cultural information which is respected during conversion.">Informations culturelles respectées pendant la conversion.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to convert.">
        <see cref="T:System.Windows.Rect" /> à convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to.">Type vers lequel convertir <see cref="T:System.Windows.Rect" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Objet créé à partir de la conversion de cette <see cref="T:System.Windows.Rect" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">
        <paramref name="value" /> a la valeur <see langword="null" />.

ou -
<paramref name="value" /> n'est pas un <see cref="T:System.Windows.Rect" />.

ou -
Le <paramref name="destinationType" /> ne fait pas partie des types valides pour conversion.</exception>
    </member>
    <member name="T:System.Windows.Size">
      <summary vsli:raw="Implements a structure that is used to describe the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; of an object.">Implémente une structure utilisée pour décrire le <see cref="T:System.Windows.Size" /> d’un objet.</summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure and assigns it an initial &lt;paramref name=&quot;width&quot; /&gt; and &lt;paramref name=&quot;height&quot; /&gt;.">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Size" /> et lui attribue une <paramref name="width" /> et une <paramref name="height" /> initiales.</summary>
      <param name="width" vsli:raw="The initial width of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">La largeur initiale de l'instance de <see cref="T:System.Windows.Size" />.</param>
      <param name="height" vsli:raw="The initial height of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">La hauteur initiale de l'instance de <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary vsli:raw="Gets a value that represents a static empty &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Obtient une valeur qui représente un <see cref="T:System.Windows.Size" /> vide statique.</summary>
      <returns vsli:raw="An empty instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Une instance vide de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary vsli:raw="Compares an object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Compare si un objet et une instance de <see cref="T:System.Windows.Size" /> sont égaux.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sizes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les tailles sont égales ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary vsli:raw="Compares a value to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Compare une valeur à une instance de <see cref="T:System.Windows.Size" /> pour l'égalité.</summary>
      <param name="value" vsli:raw="The size to compare to this current instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">La taille à comparer avec l'instance actuelle de <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les instances de <see cref="T:System.Windows.Size" /> sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Compare l'égalité de deux instances de <see cref="T:System.Windows.Size" />.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Première instance du <see cref="T:System.Windows.Size" /> à comparer.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Deuxième instance de <see cref="T:System.Windows.Size" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les instances de <see cref="T:System.Windows.Size" /> sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Obtient le code de hachage pour cette instance de <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Code de hachage pour cette instance de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Obtient ou définit la <see cref="P:System.Windows.Size.Height" /> de cette instance de <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default is 0. The value cannot be negative.">
        <see cref="P:System.Windows.Size.Height" /> de cette instance de <see cref="T:System.Windows.Size" />. La valeur par défaut est 0. La valeur ne peut pas être négative.</returns>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;.">Obtient une valeur qui indique si cette instance de <see cref="T:System.Windows.Size" /> est <see cref="P:System.Windows.Size.Empty" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of size is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cette instance de taille est <see cref="P:System.Windows.Size.Empty" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Compare l'égalité de deux instances de <see cref="T:System.Windows.Size" />.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Première instance du <see cref="T:System.Windows.Size" /> à comparer.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Deuxième instance de <see cref="T:System.Windows.Size" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux instances de <see cref="T:System.Windows.Size" /> sont égales ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Point">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Convertit une instance de <see cref="T:System.Windows.Size" /> en une instance de <see cref="T:System.Windows.Point" /> de manière explicite.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">Valeur <see cref="T:System.Windows.Size" /> à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Point" /> dont la valeur est égale à cette instance de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Vector">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Convertit une instance de <see cref="T:System.Windows.Size" /> en une instance de <see cref="T:System.Windows.Vector" /> de manière explicite.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">Valeur <see cref="T:System.Windows.Size" /> à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Vector" /> dont la valeur est égale à cette instance de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for inequality.">Compare l'inégalité de deux instances de <see cref="T:System.Windows.Size" />.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Première instance du <see cref="T:System.Windows.Size" /> à comparer.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Deuxième instance de <see cref="T:System.Windows.Size" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les instances de <see cref="T:System.Windows.Size" /> ne sont pas égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Parse(System.String)">
      <summary vsli:raw="Returns an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from a converted &lt;see cref=&quot;T:System.String&quot; /&gt;.">Retourne une instance de <see cref="T:System.Windows.Size" /> d'un <see cref="T:System.String" /> converti.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value to parse to a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value.">Une valeur <see cref="T:System.String" /> à analyser sur une valeur <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Instance de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Ce type ou membre prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="format" vsli:raw="The format to use.">Format à utiliser.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">Fournisseur à utiliser pour mettre en forme la valeur.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Valeur de l’instance actuelle dans le format spécifié.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">Retourne un <see cref="T:System.String" /> qui représente cet objet <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the width followed by the height.">
        <see cref="T:System.String" /> qui spécifie la largeur suivie de la hauteur.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Retourne un <see cref="T:System.String" /> qui représente cette instance de <see cref="T:System.Windows.Size" />.</summary>
      <param name="provider" vsli:raw="An object that provides a way to control formatting.">Un objet qui offre un moyen de contrôler la mise en forme.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">
        <see cref="T:System.String" /> qui représente un objet <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Obtient ou définit la <see cref="P:System.Windows.Size.Width" /> de cette instance de <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default value is &lt;c&gt;0&lt;/c&gt;. The value cannot be negative.">
        <see cref="P:System.Windows.Size.Width" /> de cette instance de <see cref="T:System.Windows.Size" />. La valeur par défaut est <c>0</c>. La valeur ne peut pas être négative.</returns>
    </member>
    <member name="T:System.Windows.SizeConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; class.">Convertit les instances d'autres types vers et à partir des instances de la classe <see cref="T:System.Windows.Size" />.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SizeConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.SizeConverter" />.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a class can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Détermine si une classe peut être convertie à partir d'un type donné en une instance de <see cref="T:System.Windows.Size" />.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Fournit des informations contextuelles sur un composant.</param>
      <param name="sourceType" vsli:raw="Identifies the data type to evaluate for conversion.">Identifie le type de données à évaluer pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;sourceType&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les <paramref name="sourceType" /> peuvent être convertis en une instance de <see cref="T:System.Windows.Size" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a different type.">Détermine si une instance de <see cref="T:System.Windows.Size" /> peut être convertie en un type différent.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Fournit des informations contextuelles sur un composant.</param>
      <param name="destinationType" vsli:raw="Identifies the data type to evaluate for conversion.">Identifie le type de données à évaluer pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to the &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cette instance de <see cref="T:System.Windows.Size" /> peut être convertie en <paramref name="destinationType" /> ;sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert a specified object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Tente de convertir un objet spécifié en une instance de <see cref="T:System.Windows.Size" />.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Fournit des informations contextuelles sur un composant.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">Informations spécifiques à la culture qui doivent être respectées pendant la conversion.</param>
      <param name="value" vsli:raw="The source object that is being converted.">Objet source converti.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; that is created from the converted &lt;paramref name=&quot;source&quot; /&gt;.">Instance de <see cref="T:System.Windows.Size" /> qui est créée à partir du <paramref name="source" /> converti.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a specified type.">Tente de convertir une instance de <see cref="T:System.Windows.Size" /> en un type spécifié.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Fournit des informations contextuelles sur un composant.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">Informations spécifiques à la culture qui doivent être respectées pendant la conversion.</param>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to convert.">Instance de <see cref="T:System.Windows.Size" /> à convertir.</param>
      <param name="destinationType" vsli:raw="The type that this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is converted to.">Type vers lequel cette instance de <see cref="T:System.Windows.Size" /> est convertie.</param>
      <returns vsli:raw="The object that is created from the converted instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Objet qui est créé à partir de l'instance de <see cref="T:System.Windows.Size" /> convertie.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, or if the &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid destination types.">
        <paramref name="value" /> est <see langword="null" /> ou n'est pas une instance de <see cref="T:System.Windows.Size" />, ou si le <paramref name="destinationType" /> n'est pas un des types de destination valides.</exception>
    </member>
    <member name="T:System.Windows.SplashScreen">
      <summary vsli:raw="Provides a startup screen for a Windows Presentation Foundation (WPF) application.">Fournit un écran de démarrage pour une application WPF (Windows Presentation Foundation).</summary>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource assembly.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.SplashScreen" /> avec l'assembly de ressource spécifié.</summary>
      <param name="resourceAssembly" vsli:raw="The assembly that contains the embedded resource.">Assembly qui contient la ressource incorporée.</param>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">Nom de la ressource incorporée.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.SplashScreen" /> avec la ressource spécifiée.</summary>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">Nom de la ressource incorporée.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Close(System.TimeSpan)">
      <summary vsli:raw="Closes the splash screen.">Ferme l'écran de démarrage.</summary>
      <param name="fadeoutDuration" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that specifies how long it will take for the splash screen to fade after the close operation has been initiated.">
        <see cref="T:System.TimeSpan" /> qui spécifie la durée de disparition en fondu de l'écran de démarrage une fois que l'opération de fermeture a été initiée.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">Affiche l'écran de démarrage.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">
        <see langword="true" /> pour fermer l'écran de démarrage automatiquement ; <see langword="false" /> pour fermer l'écran de démarrage manuellement.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The resource specified in the constructor could not be found.">La ressource spécifiée dans le constructeur est introuvable.</exception>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">Affiche l'écran de démarrage.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">
        <see langword="true" /> pour fermer l'écran de démarrage automatiquement ; <see langword="false" /> pour fermer l'écran de démarrage manuellement.</param>
      <param name="topMost" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the splash screen window should use the WS_EX_TOPMOST style; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la fenêtre de l'écran de démarrage doit utiliser le style WS_EX_TOPMOST ; sinon <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary vsli:raw="Provides services for managing the queue of work items for a thread.">Fournit des services pour la gestion de la file d'attente des éléments de travail d'un thread.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">Exécute de façon asynchrone le délégué spécifié avec les arguments spécifiés sur le thread sur lequel le <see cref="T:System.Windows.Threading.Dispatcher" /> spécifié a été créé.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué d'une méthode qui prend les paramètres spécifiés dans <paramref name="args" />, qui fait l'objet d'un push dans la file d'attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Tableau d’objets à passer comme arguments à la méthode donnée. Peut être <see langword="null" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">Exécute le délégué spécifié de façon asynchrone selon la priorité indiquée et avec les arguments définis, sur le  thread sur lequel <see cref="T:System.Windows.Threading.Dispatcher" /> a été créé.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué d'une méthode qui prend les paramètres spécifiés dans <paramref name="args" />, qui fait l'objet d'un push dans la file d'attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Tableau d’objets à passer comme arguments à la méthode donnée. Peut être <see langword="null" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute le délégué spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué vers une méthode qui ne prend pas d'arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> n’est pas un <see cref="T:System.Windows.Threading.DispatcherPriority" /> valide.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute le délégué spécifié de façon asynchrone selon la priorité indiquée et avec l'argument défini au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué vers une méthode qui prend un argument, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">Objet à passer comme argument à la méthode spécifiée.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> n’est pas un <see cref="T:System.Windows.Threading.DispatcherPriority" /> valide.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute le délégué spécifié de façon asynchrone selon la priorité indiquée et avec le tableau d'arguments défini au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué vers une méthode qui prend plusieurs arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">Objet à passer comme argument à la méthode spécifiée.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">Tableau d'objets à passer comme arguments à la méthode spécifiée.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente du <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is not a valid priority.">
        <see cref="T:System.Windows.Threading.DispatcherPriority" /> n'est pas une priorité valide.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initiates shutdown of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; asynchronously.">Initialise de façon asynchrone l'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority at which to begin shutting down the dispatcher.">Priorité à laquelle l'arrêt du répartiteur doit commencer.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Détermine si le thread appelant est le thread associé à ce <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le thread appelant est le thread associé à ce <see cref="T:System.Windows.Threading.Dispatcher" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the thread currently executing and creates a new &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; if one is not already associated with the thread.">Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> pour le thread en cours d'exécution et crée un nouveau <see cref="T:System.Windows.Threading.Dispatcher" /> si aucun n'est déjà associé au thread.</summary>
      <returns vsli:raw="The dispatcher associated with the current thread.">Répartiteur associé au thread actuel.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.DisableProcessing">
      <summary vsli:raw="Disables processing of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Désactive le traitement de la file d'attente du <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="A structure used to re-enable dispatcher processing.">Structure utilisée pour réactiver le traitement du répartiteur.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ExitAllFrames">
      <summary vsli:raw="Requests that all frames exit, including nested frames.">Demande la fermeture de tous les frames, y compris les frames imbriqués.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the specified thread.">Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> pour le thread spécifié.</summary>
      <param name="thread" vsli:raw="The thread to obtain the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; from.">Thread à partir duquel obtenir le <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="The dispatcher for &lt;paramref name=&quot;thread&quot; /&gt;.">Répartiteur de <paramref name="thread" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownFinished">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has finished shutting down.">Détermine si l'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" /> a abouti.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dispatcher has finished shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'arrêt du répartiteur a abouti ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownStarted">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is shutting down.">Détermine si le processus d'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" /> est en cours.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has started shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le processus d'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" /> a commencé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Hooks">
      <summary vsli:raw="Gets the collection of hooks that provide additional event information about the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Obtient la collection de raccordements qui fournissent des informations d'événement supplémentaires sur le <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="The hooks associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Raccordements associés à ce <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon synchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Objet qui indique s'il est nécessaire d'annuler l'action.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="An Action delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Objet qui indique s'il est nécessaire d'annuler l'action.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Durée minimale d'attente de démarrage de l'opération.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute le délégué spécifié de façon synchrone avec les arguments spécifiés, sur le thread auquel <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué d'une méthode qui prend les paramètres spécifiés dans <paramref name="args" />, qui fait l'objet d'un push dans la file d'attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Tableau d’objets à passer comme arguments à la méthode donnée. Peut être <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute le délégué spécifié de façon synchrone, dans l'intervalle de temps spécifié, selon la priorité indiquée et avec les arguments définis sur le thread auquel <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué d'une méthode qui prend les paramètres spécifiés dans <paramref name="args" />, qui fait l'objet d'un push dans la file d'attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. However, once the operation starts, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Durée maximale d'attente d'achèvement de l'opération.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Tableau d’objets à passer comme arguments à la méthode donnée. Peut être <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute le délégué spécifié de façon synchrone, dans l'intervalle de temps spécifié, selon la priorité indiquée et avec les arguments définis sur le thread auquel <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué d'une méthode qui prend les paramètres spécifiés dans <paramref name="args" />, qui fait l'objet d'un push dans la file d'attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Durée maximale d'attente d'achèvement de l'opération.</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Tableau d’objets à passer comme arguments à la méthode donnée. Peut être <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec les arguments définis au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué d'une méthode qui prend les paramètres spécifiés dans <paramref name="args" />, qui fait l'objet d'un push dans la file d'attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Tableau d’objets à passer comme arguments à la méthode donnée. Peut être <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute le délégué spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="method" vsli:raw="A delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué vers une méthode qui ne prend pas d'arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> n'est pas une priorité valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec l'argument défini au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué vers une méthode qui prend un argument, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">Objet à passer comme argument à la méthode donnée.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> n'est pas une priorité valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec les arguments définis au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué vers une méthode qui prend plusieurs arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">Objet à passer comme argument à la méthode donnée.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method.">Tableau d’objets à passer comme arguments à la méthode donnée.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> n'est pas une priorité valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created.">Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec la valeur de délai d'attente définie au niveau du thread sur lequel le <see cref="T:System.Windows.Threading.Dispatcher" /> a été créé.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Temps d'attente maximal pour l'aboutissement de l'opération.</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué vers une méthode qui ne prend pas d'arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec l'argument défini au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Temps d'attente maximal pour l'aboutissement de l'opération.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué vers une méthode qui prend plusieurs arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Objet à passer comme argument à la méthode donnée. Peut être <see langword="null" /> si aucun argument n’est nécessaire.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> n'est pas une priorité valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec les arguments définis au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Temps d'attente maximal pour l'aboutissement de l'opération.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Délégué vers une méthode qui prend plusieurs arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the specified method.">Objet à passer comme argument à la méthode spécifiée.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">Tableau d'objets à passer comme arguments à la méthode spécifiée.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> n’est pas un <see cref="T:System.Windows.Threading.DispatcherPriority" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon synchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Type de valeur de retour du délégué spécifié.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Type de valeur de retour du délégué spécifié.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Objet qui indique s'il est nécessaire d'annuler l'opération.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Type de valeur de retour du délégué spécifié.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Objet qui indique s'il est nécessaire d'annuler l'opération.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Durée minimale d'attente de démarrage de l'opération.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Type de valeur de retour du délégué spécifié.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon asynchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Objet qui indique s'il est nécessaire d'annuler l'action.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon asynchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Type de valeur de retour du délégué spécifié.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Type de valeur de retour du délégué spécifié.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Objet qui indique s'il est nécessaire d'annuler l'opération.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Type de valeur de retour du délégué spécifié.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeShutdown">
      <summary vsli:raw="Initiates the shutdown process of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; synchronously.">Initialise de façon synchrone le processus d'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
      <summary vsli:raw="Enters an execute loop.">Entame une boucle d'exécution.</summary>
      <param name="frame" vsli:raw="The frame for the dispatcher to process.">Frame que le répartiteur doit traiter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;frame&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="frame" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.Dispatcher.HasShutdownFinished&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;frame&quot; /&gt; is running on a different &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Dispatcher processing has been disabled.">
        <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> a la valeur <see langword="true" />.

ou -
<paramref name="frame" /> s'exécute sur un <see cref="T:System.Windows.Threading.Dispatcher" /> différent.

ou -
Le traitement du répartiteur a été désactivé.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Run">
      <summary vsli:raw="Pushes the main execution frame on the event queue of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Exécute un push du frame d'exécution principal au niveau de la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownFinished">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; finishes shutting down.">Se produit une fois l'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" /> accompli.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownStarted">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; begins to shut down.">Se produit au début du processus d'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Thread">
      <summary vsli:raw="Gets the thread this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Obtient le thread auquel ce <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <returns vsli:raw="The thread.">Thread.</returns>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledException">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt;.">Se produit lorsqu'une exception de thread est levée et non interceptée pendant l'exécution d'un délégué au moyen de <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> ou de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; when in the filter stage.">Se produit lorsqu'une exception de thread est levée et non interceptée pendant l'exécution d'un délégué au moyen de <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> ou de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> lors de l'étape de filtrage.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is a valid priority.">Détermine si la priorité <see cref="T:System.Windows.Threading.DispatcherPriority" /> spécifiée est une priorité valide.</summary>
      <param name="priority" vsli:raw="The priority to check.">Priorité à vérifier.</param>
      <param name="parameterName" vsli:raw="A string that will be returned by the exception that occurs if the priority is invalid.">Chaîne qui sera retournée par l'exception qui se produira si la priorité n'est pas valide.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> n’est pas un <see cref="T:System.Windows.Threading.DispatcherPriority" /> valide.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.VerifyAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Détermine si le thread appelant a accès à ce <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Le thread appelant n'a pas accès à ce <see cref="T:System.Windows.Threading.Dispatcher" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Crée un objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements.</summary>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.  The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.">Crée un objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements.  Travail qui se produit lorsqu'un contrôle retourne au code qui attend le résultat de cette méthode est planifiés avec la priorité spécifiée.</summary>
      <param name="priority" vsli:raw="The priority at which to schedule the continuation.">Priorité avec laquelle planifier la suite.</param>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; related events.">Fournit des données d'événement pour les événements associés à <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherEventArgs.Dispatcher">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> associé à cet événement.</summary>
      <returns vsli:raw="The dispatcher.">Répartiteur.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherFrame">
      <summary vsli:raw="Represents an execution loop in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Représente une boucle d'exécution dans <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherFrame" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class, by using the specified exit request flag.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherFrame" />, à l'aide de l'indicateur de demande de sortie spécifié.</summary>
      <param name="exitWhenRequested" vsli:raw="Indicates whether this frame will exit when all frames are requested to exit.">Indique si ce frame se ferme lorsqu'il est demandé à tous les frames de se fermer.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherFrame.Continue">
      <summary vsli:raw="Gets or sets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; should continue.">Obtient ou définit une valeur qui indique si <see cref="T:System.Windows.Threading.DispatcherFrame" /> doit continuer.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the frame should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le frame doit continuer ; sinon, <see langword="false" />.  La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; events.">Fournit des données d'événements pour les événements <see cref="T:System.Windows.Threading.DispatcherHooks" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherOperation)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHookEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherHookEventArgs" />.</summary>
      <param name="operation" vsli:raw="The operation associated with the event.">Opération associée à l'événement.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> associé à cet événement.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> associé à cet événement.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Operation">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt; associated with this event.">Obtient le <see cref="T:System.Windows.Threading.DispatcherOperation" /> associé à cet événement.</summary>
      <returns vsli:raw="The operation.">L'opération.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventHandler">
      <summary vsli:raw="Represents the method that will handle &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; related events.">Représente la méthode qui gérera des événements associés <see cref="T:System.Windows.Threading.DispatcherHooks" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="The event data.">Données d'événement.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHooks">
      <summary vsli:raw="Provides additional event information about &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; processing.">Fournit des informations supplémentaires sur l'événement en rapport avec le traitement de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.DispatcherInactive">
      <summary vsli:raw="Occurs when the dispatcher has no more operations to process.">Se produit lorsque le répartiteur n'a plus d'opérations à traiter.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationAborted">
      <summary vsli:raw="Occurs when an operation is aborted.">Se produit lorsqu'une opération est abandonnée.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationCompleted">
      <summary vsli:raw="Occurs when an operation completes.">Se produit lorsqu'une opération se termine.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPosted">
      <summary vsli:raw="Occurs when an operation is posted to the dispatcher.">Se produit lorsqu'une opération est publiée sur le répartiteur.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged">
      <summary vsli:raw="Occurs when the priority of an operation is changed.">Se produit lorsque la priorité d'une opération est modifiée.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationStarted">
      <summary vsli:raw="Occurs when an operation is invoked.">Se produit lorsqu'une opération est appelée.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherObject">
      <summary vsli:raw="Represents an object that is associated with a &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Représente un objet associé à un <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">Détermine si le thread appelant a accès à ce <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread has access to this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le thread appelant a accès à cet objet ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherObject.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; is associated with.">Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> associé à <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns vsli:raw="The dispatcher.">Répartiteur.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
      <summary vsli:raw="Enforces that the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">Garantit que le thread appelant a accès à <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">le thread appelant n'a pas accès à <see cref="T:System.Windows.Threading.DispatcherObject" />.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Représente un objet utilisé pour interagir avec une opération qui a été publiée dans la file d'attente <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Abort">
      <summary vsli:raw="Aborts the operation.">Abandonne l'opération.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operation was aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'opération a été abandonnée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Aborted">
      <summary vsli:raw="Occurs when the operation is aborted.">Se produit lorsque l'opération est abandonnée.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Completed">
      <summary vsli:raw="Occurs when the operation has completed.">Se produit lorsque l'opération est terminée.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; that the operation was posted to.">Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> sur lequel l'opération a été publiée.</summary>
      <returns vsli:raw="The dispatcher.">Répartiteur.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
      <summary vsli:raw="Returns an object that is notified when the asynchronous operation is finished.">Retourne un objet qui est notifié lorsque l'opération asynchrone est terminée.</summary>
      <returns vsli:raw="An object that is notified when the asynchronous operation is finished.">Objet notifié lorsque l'opération asynchrone est terminée.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Commence l'opération associée à cette <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;null&quot; /&gt; in all cases.">
        <see langword="null" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Priority">
      <summary vsli:raw="Gets or sets the priority of the operation in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Obtient ou définit la priorité de l'opération dans la file d'attente <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="The priority of the delegate on the queue.">Priorité du délégué dans la file d'attente.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">Obtient le résultat de l'opération après son exécution.</summary>
      <returns vsli:raw="The result of the operation -or- &lt;see langword=&quot;null&quot; /&gt; if the operation has not completed.">Résultat de l'opération ou <see langword="null" /> si l'opération n'a pas abouti.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Status">
      <summary vsli:raw="Gets the current status of the operation.">Obtient l’état actuel de l’opération.</summary>
      <returns vsli:raw="The status of the operation.">État de l'opération.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">Obtient un <see cref="T:System.Threading.Tasks.Task`1" /> qui représente l'opération active.</summary>
      <returns vsli:raw="An object that represents the current operation.">Objet représentant l'opération en cours.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait">
      <summary vsli:raw="Waits for the operation to complete.">Attend la fin de l’opération.</summary>
      <returns vsli:raw="The status of the operation.">État de l'opération.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> est égal à <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Cela peut se produire en attendant une opération qui est déjà en cours d'exécution sur le même thread.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
      <summary vsli:raw="Waits for the operation to complete in the specified period of time.">Attend que l'opération se termine pendant la durée spécifiée.</summary>
      <param name="timeout" vsli:raw="The maximum period of time to wait.">Durée maximale à attendre.</param>
      <returns vsli:raw="The status of the operation.">État de l'opération.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> est égal à <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Cela peut se produire en attendant une opération qui est déjà en cours d'exécution sur le même thread.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation`1">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue and contains a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">Représente un objet utilisé pour interagir avec une opération qui a été publiée dans la file d'attente <see cref="T:System.Windows.Threading.Dispatcher" /> et contient une <see cref="T:System.Threading.Tasks.Task`1" />.</summary>
      <typeparam name="TResult" vsli:raw="The type that is returned by the &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">Type retourné par la <see cref="T:System.Threading.Tasks.Task`1" />.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.GetAwaiter">
      <summary vsli:raw="Returns an object that awaits an asynchronous operation that returns a result.">Retourne un objet qui attend une opération asynchrone qui retourne un résultat.</summary>
      <returns vsli:raw="An object that awaits an asynchronous operation that returns a result.">Objet qui attend qu'une opération asynchrone qui retourne un résultat.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Commence l'opération associée à cette <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns vsli:raw="The result of the operation.">Résultat de l'opération.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">Obtient le résultat de l'opération après son exécution.</summary>
      <returns vsli:raw="The result of the operation.">Résultat de l'opération.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">Obtient un <see cref="T:System.Threading.Tasks.Task`1" /> qui représente l'opération active.</summary>
      <returns vsli:raw="An object that represents the current operation.">Objet représentant l'opération en cours.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationCallback">
      <summary vsli:raw="Represents a delegate to use for dispatcher operations.">Représente un délégué à utiliser pour les opérations de répartiteur.</summary>
      <param name="arg" vsli:raw="An argument passed to the callback.">Argument passé au rappel.</param>
      <returns vsli:raw="The object returned by the callback.">Objet retourné par le rappel.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationStatus">
      <summary vsli:raw="Describes the possible values for the status of a &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Décrit les valeurs possibles de l'état de <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Aborted">
      <summary vsli:raw="The operation has aborted.">L'opération a été abandonnée.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Completed">
      <summary vsli:raw="The operation is completed.">L'opération est terminée.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Executing">
      <summary vsli:raw="The operation started executing, but has not completed.">L'exécution de l'opération a commencé, mais ne s'est pas terminée.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Pending">
      <summary vsli:raw="The operation is pending and is still in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">L'opération est en attente et toujours dans la file d'attente <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriority">
      <summary vsli:raw="Describes the priorities at which operations can be invoked by way of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Décrit les priorités selon lesquelles les opérations peuvent être appelées par le biais de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle">
      <summary vsli:raw="The enumeration value is 2. Operations are processed when the application is idle.">La valeur d’énumération est 2. Les opérations sont traitées lorsque l'application est inactive.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Background">
      <summary vsli:raw="The enumeration value is 4. Operations are processed after all other non-idle operations are completed.">La valeur d’énumération est 4. Les opérations sont traitées après l'aboutissement de toutes les autres opérations actives.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ContextIdle">
      <summary vsli:raw="The enumeration value is 3. Operations are processed after background operations have completed.">La valeur d’énumération est 3. Les opérations sont traitées après l'aboutissement des opérations d'arrière-plan.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.DataBind">
      <summary vsli:raw="The enumeration value is 8. Operations are processed at the same priority as data binding.">La valeur d’énumération est 8. Les opérations sont traitées selon la même priorité que la liaison de données.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Inactive">
      <summary vsli:raw="The enumeration value is 0. Operations are not processed.">La valeur d’énumération est 0. Les opérations ne sont pas traitées.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Input">
      <summary vsli:raw="The enumeration value is 5. Operations are processed at the same priority as input.">La valeur d’énumération est 5. Les opérations sont traitées selon la même priorité qu'une entrée.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Invalid">
      <summary vsli:raw="The enumeration value is -1. This is an invalid priority.">La valeur d'énumération est -1. C'est une priorité non valide.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Loaded">
      <summary vsli:raw="The enumeration value is 6. Operations are processed when layout and render has finished but just before items at input priority are serviced. Specifically this is used when raising the Loaded event.">La valeur d’énumération est 6. Les opérations sont traitées lorsque la mise en page et le rendu sont finaux, mais juste avant que les éléments ayant une priorité d'entrée ne soient gérés. Cette valeur est utilisée tout particulièrement lors du déclenchement de l'événement Loaded.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Normal">
      <summary vsli:raw="The enumeration value is 9. Operations are processed at normal priority. This is the typical application priority.">La valeur d’énumération est 9. Les opérations sont traitées à une priorité normale. C'est la priorité typique d'une application.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Render">
      <summary vsli:raw="The enumeration value is 7. Operations processed at the same priority as rendering.">La valeur d’énumération est 7. Les opérations sont traitées selon la même priorité qu'un rendu.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Send">
      <summary vsli:raw="The enumeration value is 10. Operations are processed before other asynchronous operations. This is the highest priority.">La valeur d’énumération est 10. Les opérations sont traitées avant les autres opérations asynchrones. C'est la priorité la plus élevée.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.SystemIdle">
      <summary vsli:raw="The enumeration value is 1. Operations are processed when the system is idle.">La valeur d’énumération est 1. Les opérations sont traitées lorsque le système est inactif.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaitable">
      <summary vsli:raw="Represents an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Représente un objet awaitable qui retourne de façon asynchrone le contrôle au répartiteur actuel et lui permet de traiter d’autres événements.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaitable.GetAwaiter">
      <summary vsli:raw="Returns an object that waits for the completion of an asynchronous task.">Retourne un objet qui attend la fin d'une tâche asynchrone.</summary>
      <returns vsli:raw="An object that waits for the completion of an asynchronous task.">Objet qui attend la fin d'une tâche asynchrone.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaiter">
      <summary vsli:raw="Represents an object that waits for the completion of an asynchronous task.">Représente un objet qui attend la fin d'une tâche asynchrone.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.GetResult">
      <summary vsli:raw="Ends the wait for the completion of the asynchronous task.">Met fin à l’attente de la fin de la tâche asynchrone.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherPriorityAwaiter.IsCompleted">
      <summary vsli:raw="Gets a value that indicates whether the asynchronous task has completed.">Obtient une valeur qui indique si la tâche asynchrone est terminée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> dans tous les cas.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.OnCompleted(System.Action)">
      <summary vsli:raw="Sets the action to perform when the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriorityAwaiter&quot; /&gt; object stops waiting for the asynchronous task to complete.">Définit l’action à effectuer quand l’objet <see cref="T:System.Windows.Threading.DispatcherPriorityAwaiter" /> cesse d’attendre que la tâche asynchrone se termine.</summary>
      <param name="continuation" vsli:raw="The action to perform when the wait operation completes.">Action à effectuer quand l’opération d’attente se termine.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherProcessingDisabled">
      <summary vsli:raw="Represents the Dispatcher when it is in a disable state and provides a means to re-enable dispatcher processing.">Représente le répartiteur lorsqu'il est désactivé et permet de réactiver le traitement du répartiteur.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose">
      <summary vsli:raw="Re-enables dispatcher processing.">Réactive le traitement du répartiteur.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> spécifié est égal à cet objet <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />.</summary>
      <param name="obj" vsli:raw="The object to evaluate for equality.">Objet dont l'égalité doit être évaluée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet spécifié est égal à cet objet <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">Obtient un code de hachage pour cette instance.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal.">Détermine si deux objets <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> sont identiques.</summary>
      <param name="left" vsli:raw="The first object to compare.">Premier objet à comparer.</param>
      <param name="right" vsli:raw="The second object to compare.">Deuxième objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les objets <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal.">Détermine si deux objets <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> sont inégaux.</summary>
      <param name="left" vsli:raw="The first object to compare.">Premier objet à comparer.</param>
      <param name="right" vsli:raw="The second object to compare.">Deuxième objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les objets <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> ne sont pas égaux ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary vsli:raw="Provides a synchronization context for Windows Presentation Foundation (WPF).">Fournit un contexte de synchronisation pour Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> à l'aide du <see cref="T:System.Windows.Threading.Dispatcher" /> actuel.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> à l'aide du <see cref="T:System.Windows.Threading.Dispatcher" /> spécifié.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> à associer à cet objet <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> à l'aide du <see cref="T:System.Windows.Threading.Dispatcher" /> spécifié.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> à associer à cet objet <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <param name="priority" vsli:raw="The priority used to send and post callback methods.">Priorité utilisée pour envoyer et publier des méthodes de rappel.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">Crée une copie de ce <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns vsli:raw="The copy of this synchronization context.">Copie de ce contexte de synchronisation.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context asynchronously.">Appelle de façon asynchrone le rappel dans le contexte de synchronisation.</summary>
      <param name="d" vsli:raw="The delegate to call.">Délégué à appeler.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">Objet passé au délégué.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context synchronously.">Appelle de façon synchrone le rappel dans le contexte de synchronisation.</summary>
      <param name="d" vsli:raw="The delegate to call.">Délégué à appeler.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">Objet passé au délégué.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <summary vsli:raw="Waits for any or all the elements in the specified array to receive a signal.">Attend que tout ou une partie des éléments du tableau spécifié reçoivent un signal.</summary>
      <param name="waitHandles" vsli:raw="An array that contains the native operating system handles.">Tableau contenant les handles de système d'exploitation natifs.</param>
      <param name="waitAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to wait for all handles; &lt;see langword=&quot;false&quot; /&gt; to wait for any handle.">
        <see langword="true" /> pour attendre tous les handles ; <see langword="false" /> pour attendre un handle quelconque.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">Nombre de millisecondes à attendre, ou <see cref="F:System.Threading.Timeout.Infinite" /> (-1) pour un délai d'attente infini.</param>
      <returns vsli:raw="The array index of the object that satisfied the wait.">Index du tableau de l'objet ayant respecté l'attente.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary vsli:raw="A timer that is integrated into the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue which is processed at a specified interval of time and at a specified priority.">Minuterie intégrée dans la file d'attente de <see cref="T:System.Windows.Threading.Dispatcher" /> qui est traitée à un intervalle de temps et selon une priorité spécifiés.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which uses the specified time interval, priority, event handler, and &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> qui utilise l'intervalle de temps, la priorité, le gestionnaire d'événements et le <see cref="T:System.Windows.Threading.Dispatcher" /> spécifiés.</summary>
      <param name="interval" vsli:raw="The period of time between ticks.">Durée séparant les graduations.</param>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Priorité à laquelle appeler la minuterie.</param>
      <param name="callback" vsli:raw="The event handler to call when the &lt;see cref=&quot;E:System.Windows.Threading.DispatcherTimer.Tick&quot; /&gt; event occurs.">Gestionnaire d'événements à appeler lorsque l'événement <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> se produit.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">Répartiteur auquel la minuterie est associée.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> a la valeur <see langword="null" />.

ou -

<paramref name="dispatcher" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="interval" /> est inférieur à 0 ou supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which processes timer events at the specified priority.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> qui traite des événements de minuterie à la priorité spécifiée.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Priorité à laquelle appeler la minuterie.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which runs on the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; at the specified priority.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> qui s'exécute sur le <see cref="T:System.Windows.Threading.Dispatcher" /> spécifié à la priorité spécifiée.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Priorité à laquelle appeler la minuterie.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">Répartiteur auquel la minuterie est associée.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> associé à ce <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
      <returns vsli:raw="The dispatcher.">Répartiteur.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary vsli:raw="Gets or sets the period of time between timer ticks.">Obtient ou définit la durée séparant les graduations de la minuterie.</summary>
      <returns vsli:raw="The period of time between ticks. The default is 00:00:00.">Durée séparant les graduations. La valeur par défaut est 00:00:00.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">
        <paramref name="interval" /> est inférieur à 0 ou supérieur à <see cref="F:System.Int32.MaxValue" /> millisecondes.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether the timer is running.">Obtient ou définit une valeur qui indique si la minuterie est active.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the timer is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la minuterie est activée ; sinon, <see langword="false" />.  La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary vsli:raw="Starts the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Démarre <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary vsli:raw="Stops the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Arrête <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Tag">
      <summary vsli:raw="Gets or sets a user-defined data object.">Obtient ou définit un objet de données défini par l'utilisateur.</summary>
      <returns vsli:raw="The user-defined data.  The default is &lt;see langword=&quot;null&quot; /&gt;.">Données définies par l'utilisateur.  La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary vsli:raw="Occurs when the timer interval has elapsed.">Se produit lorsque l'intervalle de la minuterie s'est écoulé.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">Fournit des données pour l’événement <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">Obtient l'exception déclenchée lors de l'exécution du code par le répartiteur.</summary>
      <returns vsli:raw="The exception.">Exception.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled">
      <summary vsli:raw="Gets or sets whether the exception event has been handled.">Obtient ou définit si l'événement d'exception a été géré.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the exception was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'exception a été gérée ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">Représente la méthode qui gérera l'événement <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="The event data.">Données d'événement.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">Fournit des données pour l’événement <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">Obtient l'exception déclenchée lors de l'exécution du code par le répartiteur.</summary>
      <returns vsli:raw="The exception.">Exception.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch">
      <summary vsli:raw="Gets or sets whether the exception should be caught and the event handlers called.">Obtient ou définit si l'exception doit être interceptée et les gestionnaires d'événements appelés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; should be raised; otherwise; &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si l'exception <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> doit être déclenchée ; sinon, <see langword="false" />.  La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">Représente la méthode qui gérera l'événement <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="The event data.">Données d'événement.</param>
    </member>
    <member name="T:System.Windows.ValidateValueCallback">
      <summary vsli:raw="Represents a method used as a callback that validates the effective value of a dependency property.">Représente une méthode utilisée comme un rappel qui valide la valeur effective d’une propriété de dépendance.</summary>
      <param name="value" vsli:raw="The value to be validated.">Valeur à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was validated; &lt;see langword=&quot;false&quot; /&gt; if the submitted value was invalid.">
        <see langword="true" /> si la valeur a été validée ; <see langword="false" /> si la valeur soumise n'était pas valide.</returns>
    </member>
    <member name="T:System.Windows.Vector">
      <summary vsli:raw="Represents a displacement in 2-D space.">Représente un déplacement dans l’espace 2D.</summary>
    </member>
    <member name="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Vector" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Offset <see cref="P:System.Windows.Vector.X" /> du nouveau <see cref="T:System.Windows.Vector" />.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Offset <see cref="P:System.Windows.Vector.Y" /> du nouveau <see cref="T:System.Windows.Vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates the specified point by the specified vector and returns the resulting point.">Convertit le point spécifié par le vecteur spécifié et retourne le point résultant.</summary>
      <param name="vector" vsli:raw="The amount to translate the specified point.">Valeur de conversion du point spécifié.</param>
      <param name="point" vsli:raw="The point to translate.">Point à translater.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">Résultat de la conversion de <paramref name="point" /> par <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Ajoute deux vecteurs et retourne le résultat sous forme de structure <see cref="T:System.Windows.Vector" />.</summary>
      <param name="vector1" vsli:raw="The first vector to add.">Premier vecteur à additionner.</param>
      <param name="vector2" vsli:raw="The second vector to add.">Deuxième vecteur à additionner.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Somme de <paramref name="vector1" /> et <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Retrieves the angle, expressed in degrees, between the two specified vectors.">Récupère l'angle, exprimé en degrés, entre les deux vecteurs spécifiés.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Premier vecteur à évaluer.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Deuxième vecteur à évaluer.</param>
      <returns vsli:raw="The angle, in degrees, between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Angle, en degrés, entre <paramref name="vector1" /> et <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the cross product of two vectors.">Calcule le produit croisé de deux vecteurs.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Premier vecteur à évaluer.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Deuxième vecteur à évaluer.</param>
      <returns vsli:raw="The cross product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;. The following formula is used to calculate the cross product:  &#xA;  &#xA; &lt;c&gt;(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)&lt;/c&gt;">Produit croisé de <paramref name="vector1" /> et <paramref name="vector2" />. La formule suivante est utilisée pour calculer le produit croisé :
<c>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the determinant of two vectors.">Calcule le déterminant de deux vecteurs.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Premier vecteur à évaluer.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Deuxième vecteur à évaluer.</param>
      <returns vsli:raw="The determinant of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Déterminant de <paramref name="vector1" /> et <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Divise le vecteur spécifié par la scalaire indiquée et retourne le résultat sous forme de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="vector" vsli:raw="The vector structure to divide.">Structure vectorielle à diviser.</param>
      <param name="scalar" vsli:raw="The amount by which &lt;paramref name=&quot;vector&quot; /&gt; is divided.">Valeur par laquelle <paramref name="vector" /> est divisé.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">Résultat de la division de <paramref name="vector" /> par <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure and, if it is, whether it has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector.">Détermine si le <see cref="T:System.Object" /> spécifié est une structure <see cref="T:System.Windows.Vector" /> et, si c'est le cas, s'il a les mêmes valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> que ce vecteur.</summary>
      <param name="o" vsli:raw="The vector to compare.">Vecteur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="o" /> est un <see cref="T:System.Windows.Vector" /> et a les mêmes valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> que ce vecteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">Compare l'égalité de deux vecteurs.</summary>
      <param name="value" vsli:raw="The vector to compare with this vector.">Vecteur à comparer à ce vecteur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> a les mêmes valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> que ce vecteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares the two specified vectors for equality.">Compare l'égalité de deux vecteurs spécifiés.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Premier vecteur à comparer.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Deuxième vecteur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les composants <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector1" /> et <paramref name="vector2" /> sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.GetHashCode">
      <summary vsli:raw="Returns the hash code for this vector.">Retourne le code de hachage pour ce vecteur.</summary>
      <returns vsli:raw="The hash code for this instance.">Code de hachage de cette instance.</returns>
    </member>
    <member name="P:System.Windows.Vector.Length">
      <summary vsli:raw="Gets the length of this vector.">Obtient la longueur de ce vecteur.</summary>
      <returns vsli:raw="The length of this vector.">Longueur de ce vecteur.</returns>
    </member>
    <member name="P:System.Windows.Vector.LengthSquared">
      <summary vsli:raw="Gets the square of the length of this vector.">Obtient le carré de la longueur de ce vecteur.</summary>
      <returns vsli:raw="The square of the &lt;see cref=&quot;P:System.Windows.Vector.Length&quot; /&gt; of this vector.">Carré du <see cref="P:System.Windows.Vector.Length" /> de ce vecteur.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Multiplie la scalaire spécifiée par le vecteur indiqué et retourne le <see cref="T:System.Windows.Vector" /> résultant.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">Scalaire à multiplier.</param>
      <param name="vector" vsli:raw="The vector to multiply.">Vecteur à multiplier.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Résultat de la multiplication de <paramref name="scalar" /> par <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Multiplie le vecteur spécifié par la scalaire indiquée et retourne le <see cref="T:System.Windows.Vector" /> résultant.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">Vecteur à multiplier.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">Scalaire à multiplier.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">Résultat de la multiplication de <paramref name="vector" /> par <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforme l'espace de coordonnées du vecteur spécifié à l'aide du <see cref="T:System.Windows.Media.Matrix" /> spécifié.</summary>
      <param name="vector" vsli:raw="The vector structure to transform.">Structure vectorielle à transformer.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">Transformation à appliquer au <paramref name="vector" />.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">Résultat de la transformation de <paramref name="vector" /> par <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vectors and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Calcule le produit scalaire des deux vecteurs spécifiés et retourne le résultat sous forme de <see cref="T:System.Double" />.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">Premier vecteur à multiplier.</param>
      <param name="vector2" vsli:raw="The second vector structure to multiply.">Deuxième structure vectorielle à multiplier.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;(vector1.X * vector2.X) + (vector1.Y * vector2.Y)&lt;/c&gt;">
        <see cref="T:System.Double" /> qui contient le produit scalaire de <paramref name="vector1" /> et de <paramref name="vector2" />, qui est calculé à l'aide de la formule suivante :
<c>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Negate">
      <summary vsli:raw="Negates this vector. The vector has the same magnitude as before, but its direction is now opposite.">Nie ce vecteur. Le vecteur conserve la même grandeur, mais avec une direction opposée.</summary>
    </member>
    <member name="M:System.Windows.Vector.Normalize">
      <summary vsli:raw="Normalizes this vector.">Normalise ce vecteur.</summary>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates a point by the specified vector and returns the resulting point.">Convertit un point par le vecteur spécifié et retourne le point résultant.</summary>
      <param name="vector" vsli:raw="The vector used to translate &lt;paramref name=&quot;point&quot; /&gt;.">Vecteur utilisé pour convertir <paramref name="point" />.</param>
      <param name="point" vsli:raw="The point to translate.">Point à translater.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">Résultat de la conversion de <paramref name="point" /> par <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a vector.">Ajoute deux vecteurs et retourne le résultat sous forme de vecteur.</summary>
      <param name="vector1" vsli:raw="The first vector to add.">Premier vecteur à additionner.</param>
      <param name="vector2" vsli:raw="The second vector to add.">Deuxième vecteur à additionner.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Somme de <paramref name="vector1" /> et <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the resulting vector.">Divise le vecteur spécifié par la scalaire indiquée et retourne le vecteur résultant.</summary>
      <param name="vector" vsli:raw="The vector to divide.">Vecteur à diviser.</param>
      <param name="scalar" vsli:raw="The scalar by which &lt;paramref name=&quot;vector&quot; /&gt; will be divided.">Scalaire par laquelle <paramref name="vector" /> sera divisé.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">Résultat de la division de <paramref name="vector" /> par <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">Compare l'égalité de deux vecteurs.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Premier vecteur à comparer.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Deuxième vecteur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les composants <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector1" /> et <paramref name="vector2" /> sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; with the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this vector.">Crée un <see cref="T:System.Windows.Point" /> avec les valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de ce vecteur.</summary>
      <param name="vector" vsli:raw="The vector to convert.">Vecteur à convertir.</param>
      <returns vsli:raw="A point with &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;- and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate values equal to the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; offset values of &lt;paramref name=&quot;vector&quot; /&gt;.">Point avec des valeurs de coordonnées <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> égales aux valeurs offset <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from the offsets of this vector.">Crée un <see cref="T:System.Windows.Size" /> à partir des offsets de ce vecteur.</summary>
      <param name="vector" vsli:raw="The vector to convert.">Vecteur à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; property and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; property.">Un <see cref="T:System.Windows.Size" /> avec un <see cref="P:System.Windows.Size.Width" /> égal à la valeur absolue de la propriété <see cref="P:System.Windows.Vector.X" /> de ce vecteur et un <see cref="P:System.Windows.Size.Height" /> égal à la valeur absolue de la propriété <see cref="P:System.Windows.Vector.Y" /> de ce vecteur.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for inequality.">Compare l'inégalité de deux vecteurs.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Premier vecteur à comparer.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Deuxième vecteur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les composants <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector1" /> et <paramref name="vector2" /> sont différents ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting vector.">Multiplie la scalaire spécifiée par le vecteur indiqué et retourne le vecteur résultant.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">Scalaire à multiplier.</param>
      <param name="vector" vsli:raw="The vector to multiply.">Vecteur à multiplier.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Résultat de la multiplication de <paramref name="scalar" /> par <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting vector.">Multiplie le vecteur spécifié par la scalaire indiquée et retourne le vecteur résultant.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">Vecteur à multiplier.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">Scalaire à multiplier.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">Résultat de la multiplication de <paramref name="vector" /> par <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforme l'espace de coordonnées du vecteur spécifié à l'aide du <see cref="T:System.Windows.Media.Matrix" /> spécifié.</summary>
      <param name="vector" vsli:raw="The vector to transform.">Vecteur à transformer.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">Transformation à appliquer au <paramref name="vector" />.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">Résultat de la transformation de <paramref name="vector" /> par <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vector structures and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Calcule le produit scalaire des deux structures vectorielles spécifiées et retourne le résultat sous forme de <see cref="T:System.Double" />.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">Premier vecteur à multiplier.</param>
      <param name="vector2" vsli:raw="The second vector to multiply.">Deuxième vecteur à multiplier.</param>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;vector1.X * vector2.X + vector1.Y * vector2.Y&lt;/c&gt;">Retourne un <see cref="T:System.Double" /> qui contient le produit scalaire de <paramref name="vector1" /> et <paramref name="vector2" /> qui est calculé à l'aide de la formule suivante :
<c>vector1.X * vector2.X + vector1.Y * vector2.Y</c></returns>
    </member>
    <member name="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts one specified vector from another.">Soustrait un vecteur spécifié d'un autre.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">Vecteur duquel <paramref name="vector2" /> est soustrait.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">Vecteur à soustraire de <paramref name="vector1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Différence entre <paramref name="vector1" /> et <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
      <summary vsli:raw="Negates the specified vector.">Inverse le signe du vecteur spécifié.</summary>
      <param name="vector" vsli:raw="The vector to negate.">Vecteur dont le signe doit être inversé.</param>
      <returns vsli:raw="A vector with &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values opposite of the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of &lt;paramref name=&quot;vector&quot; /&gt;.">Vecteur avec des valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" />, opposées aux valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Parse(System.String)">
      <summary vsli:raw="Converts a string representation of a vector into the equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Convertit une représentation sous forme de chaîne d'un vecteur en la structure <see cref="T:System.Windows.Vector" /> équivalente.</summary>
      <param name="source" vsli:raw="The string representation of the vector.">Représentation sous forme de chaîne du vecteur.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Structure <see cref="T:System.Windows.Vector" /> équivalente.</returns>
    </member>
    <member name="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified vector from another specified vector.">Soustrait le vecteur spécifié d'un autre vecteur spécifié.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">Vecteur duquel <paramref name="vector2" /> est soustrait.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">Vecteur à soustraire de <paramref name="vector1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Différence entre <paramref name="vector1" /> et <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">Ce membre prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destiné à être directement utilisé à partir de votre code. Pour obtenir une description de ce membre, consultez <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Chaîne spécifiant le format à utiliser.
ou
<see langword="null" /> pour utiliser le format par défaut défini pour le type de l'implémentation <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">
        <see langword="IFormatProvider" /> à utiliser pour mettre en forme la valeur.

ou -
<see langword="null" /> pour obtenir les informations de mise en forme des nombres à partir des paramètres régionaux définis dans le système d'exploitation.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">Chaîne contenant la valeur de l'instance actuelle au format spécifié.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Retourne la représentation sous forme de chaîne de cette structure <see cref="T:System.Windows.Vector" />.</summary>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Chaîne qui représente les valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de ce <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with the specified formatting information.">Retourne la représentation sous forme de chaîne de cette structure <see cref="T:System.Windows.Vector" /> avec les informations de mise en forme spécifiées.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">Informations de mise en forme propres à la culture.</param>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Chaîne qui représente les valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de ce <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="P:System.Windows.Vector.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector.">Obtient ou définit le composant <see cref="P:System.Windows.Vector.X" /> de ce vecteur.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector. The default value is 0.">Composant <see cref="P:System.Windows.Vector.X" /> de ce vecteur. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Windows.Vector.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector.">Obtient ou définit le composant <see cref="P:System.Windows.Vector.Y" /> de ce vecteur.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector. The default value is 0.">Composant <see cref="P:System.Windows.Vector.Y" /> de ce vecteur. La valeur par défaut est 0.</returns>
    </member>
    <member name="T:System.Windows.VectorConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Convertit des instances d'autres types vers et à partir de <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Indicates whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Indique si un objet peut être converti à partir d'un type spécifique en une instance de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Décrit les informations de contexte d’un type.</param>
      <param name="sourceType" vsli:raw="The source &lt;see cref=&quot;T:System.Type&quot; /&gt; that is being queried for conversion support.">
        <see cref="T:System.Type" /> source interrogé pour la prise en charge de la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if objects of the specified type can be converted to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les objets du type spécifié peuvent être convertis en un <see cref="T:System.Windows.Vector" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to the specified type.">Détermine si les instances de <see cref="T:System.Windows.Vector" /> peuvent être converties dans le type spécifié.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Décrit les informations de contexte d’un type.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; is being evaluated for conversion.">Type souhaité pour lequel <see cref="T:System.Windows.Vector" /> est évalué à des fins de conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si des instances de <see cref="T:System.Windows.Vector" /> peuvent être converties en <paramref name="destinationType" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the specified object to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Convertit l'objet spécifié en <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Décrit les informations de contexte d’un type.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Décrit le <see cref="T:System.Globalization.CultureInfo" /> du type en cours de conversion.</param>
      <param name="value" vsli:raw="The object being converted.">Objet en cours de conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.Windows.Vector" /> créé à partir de la conversion de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to the specified type.">Convertit le <see cref="T:System.Windows.Vector" /> spécifié dans le type spécifié.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Décrit les informations de contexte d’un type.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Décrit le <see cref="T:System.Globalization.CultureInfo" /> du type en cours de conversion.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to convert.">
        <see cref="T:System.Windows.Vector" /> à convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to.">Type vers lequel convertir <see cref="T:System.Windows.Vector" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Objet créé à partir de la conversion de cette <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager">
      <summary vsli:raw="Provides a base class for the event manager that is used in the weak event pattern. The manager adds and removes listeners for events (or callbacks) that also use the pattern.">Fournit une classe de base pour le gestionnaire d’événements utilisé dans le modèle d’événement faible. Le gestionnaire ajoute et supprime des écouteurs pour les événements (ou rappels) qui utilisent également le modèle.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.#ctor">
      <summary vsli:raw="Initializes base class values when it is used as the initializer by the constructor of a derived class.">Initialise des valeurs de classe de base en cas d'utilisation comme initialiseur par le constructeur d'une classe dérivée.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
      <summary vsli:raw="Delivers the event being managed to each listener.">Remet l'événement qui est géré à chaque écouteur.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">L'objet sur lequel l'événement est géré.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data for the event to deliver.">
        <see cref="T:System.EventArgs" /> qui contient les données d'événement à remettre.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Delivers the event being managed to each listener in the provided list.">Remet l'événement qui est géré à chaque écouteur dans la liste fournie.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">L'objet sur lequel l'événement est géré.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
      <param name="list" vsli:raw="The provided &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Le <see cref="T:System.Windows.WeakEventManager.ListenerList" /> fourni.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation that is used for the provided type.">Retourne l'implémentation <see cref="T:System.Windows.WeakEventManager" /> utilisée pour le type fourni.</summary>
      <param name="managerType" vsli:raw="The type to obtain the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; for.">Le type pour qui obtenir le <see cref="T:System.Windows.WeakEventManager" />.</param>
      <returns vsli:raw="The matching &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation.">L'implémentation <see cref="T:System.Windows.WeakEventManager" /> correspondante.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.Item(System.Object)">
      <summary vsli:raw="Gets or sets the data being stored for the specified source.">Obtient ou définit les données qui sont stockées pour la source spécifiée.</summary>
      <param name="source" vsli:raw="The zero-based index of the requested source.">Index de base zéro de la source demandée.</param>
      <returns vsli:raw="Data being stored by the manager for this source.">Données qui sont stockées par le gestionnaire pour cette source.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList">
      <summary vsli:raw="Provides a built-in collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">Fournit une liste des collections intégrées permettant de stocker des écouteurs pour <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class with the specified initial capacity.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.WeakEventManager.ListenerList" /> avec la capacité initiale par défaut.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">Nombre d'éléments qui doivent être alloués dans la liste initiale.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt; object to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Ajoute un objet <see cref="T:System.Windows.IWeakEventListener" /> à <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener" vsli:raw="The listener element to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Élément d'écouteur à ajouter à <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)">
      <summary vsli:raw="Adds an event handler to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Ajoute un gestionnaire d'événements au <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler" vsli:raw="The event handler to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Gestionnaire d'événements à ajouter à la <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.BeginUse">
      <summary vsli:raw="Declares the list to be in use. This prevents direct changes to the list during iterations of the list items.">Déclare la liste pour laquelle lancer l'utilisation. Cela empêche des modifications directes à la liste pendant les itérations des éléments de la liste.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list was already declared to be in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la liste a déjà été déclarée en vue de lancer son utilisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Crée un clone modifiable de cette <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns vsli:raw="A modifiable clone of the current object.">Clone modifiable de l'objet actif.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Copies the current &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Copie la <see cref="T:System.Windows.WeakEventManager.ListenerList" /> actuelle dans la <see cref="T:System.Windows.WeakEventManager.ListenerList" /> spécifiée</summary>
      <param name="newList" vsli:raw="The object to copy to.">Objet avec lequel effectuer la copie.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Count">
      <summary vsli:raw="Gets the number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Obtient le nombre d'éléments contenus dans <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns vsli:raw="The number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Nombre d'éléments contenus dans <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Remet l'événement qui est géré à chaque écouteur dans la <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">Objet ayant déclenché l'événement.</param>
      <param name="args" vsli:raw="An object that contains the event data.">Objet qui contient les données d'événement.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">Le type de <see cref="T:System.Windows.WeakEventManager" /> qui appelle cette méthode.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les écouteurs de l'ordinateur dans <see cref="T:System.Windows.WeakEventManager.ListenerList" /> font référence à un objet qui a été récupéré par le garbage collector ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Empty">
      <summary vsli:raw="Gets a value that represents an empty list for purposes of comparisons.">Obtient une valeur qui représente une liste vide dans un but de comparaison.</summary>
      <returns vsli:raw="The empty list representation.">Représentation de liste vide.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.EndUse">
      <summary vsli:raw="Unlocks the locked state initiated by &lt;see cref=&quot;M:System.Windows.WeakEventManager.ListenerList.BeginUse&quot; /&gt;.">Déverrouille l'état initialisé par <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />.</summary>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.IsEmpty">
      <summary vsli:raw="Gets a value that declares whether this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; is empty.">Obtient une valeur qui déclare si cette occurrence de <see cref="T:System.Windows.WeakEventManager.ListenerList" /> est vide.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la liste est vide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a specific listener item in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; .">Obtient ou définit un élément d'écouteur spécifique dans <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the listener in the list.">Index de base zéro de l'écouteur dans la liste.</param>
      <returns vsli:raw="The item at that index, or a null reference if no item was at that index.">Élément au niveau de cet index, ou référence nulle si aucun élément ne se trouve à cet index.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
      <summary vsli:raw="Checks to see whether the provided list is in use, and if so, sets the list reference parameter to a copy of that list rather than the original.">Vérifie que la liste fournie est en cours d'utilisation et, le cas échéant, affecte au paramètre de référence de la liste une copie de cette liste plutôt que son original.</summary>
      <param name="list" vsli:raw="The list to check for use state and potentially copy.">Liste dont l'état d'utilisation est à vérifier et la copie éventuellement.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided list was in use at the time of call and therefore the &lt;paramref name=&quot;list&quot; /&gt; parameter reference was reset to be a copy. &lt;see langword=&quot;false&quot; /&gt; if the provided list was not in use, in which case the &lt;paramref name=&quot;list&quot; /&gt; parameter reference remains unaltered.">
        <see langword="true" /> si la liste fournie est utilisée au moment de l'appel et donc que la référence au paramètre de <paramref name="list" /> a été réinitialisée de façon à devenir une copie. <see langword="false" /> si la liste fournie n'est pas en cours d'utilisation, auquel cas que la référence au paramètre <paramref name="list" /> reste inchangée.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Purge">
      <summary vsli:raw="Removes all entries from the list where the underlying reference target is a null reference.">Supprime toutes les entrées dans la liste où la cible de référence sous-jacente correspond à une référence nulle.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if any entries were purged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Retourne la valeur <see langword="true" /> si des entrées ont été vidées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the first occurrence of a listener item from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Supprime la première occurrence d'un élément d'écouteur de <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener" vsli:raw="The item to remove.">Élément à supprimer.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)">
      <summary vsli:raw="Removes an event handler from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Supprime un gestionnaire d'événements de la <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler" vsli:raw="The event handler to remove from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Gestionnaire d'événements à supprimer de <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList`1">
      <summary vsli:raw="Provides a type-safe collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;. This class defines a type parameter for the event data that is used.">Fournit une liste des collections de type sécurisé pour stocker des écouteurs pour <see cref="T:System.Windows.WeakEventManager" />. Cette classe définit un paramètre de type pour les données d'événement utilisées.</summary>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">Type qui contient les données d'événement.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class with the specified initial capacity.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> avec la capacité initiale par défaut.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">Nombre d'éléments qui doivent être alloués dans la liste initiale.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;, making deep copies of the values.">Crée un clone modifiable de <see cref="T:System.Windows.WeakEventManager.ListenerList" />, en créant des copies complètes des valeurs.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property will be &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property was &lt;see langword=&quot;true&quot; /&gt;.">Clone modifiable de l'objet actif. La valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l'objet cloné est <see langword="false" />, même si la valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source était <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt;.">Remet l'événement qui est géré à chaque écouteur dans la <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">Objet ayant déclenché l'événement.</param>
      <param name="e" vsli:raw="An object that contains the event data.">Objet qui contient les données d'événement.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">Le type de <see cref="T:System.Windows.WeakEventManager" /> qui appelle cette méthode.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les écouteurs de l'ordinateur dans <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> font référence à un objet qui a été récupéré par le garbage collector ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">Retourne un nouvel objet destiné à contenir des écouteurs sur un événement.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">Nouvel objet destiné à contenir des écouteurs sur un événement.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Adds the specified delegate as an event handler of the specified source.">Ajoute le délégué spécifié en tant que gestionnaire d'événements de la source spécifiée.</summary>
      <param name="source" vsli:raw="The source object that the handler delegate subscribes to.">Objet source auquel le délégué de gestionnaire est abonné.</param>
      <param name="handler" vsli:raw="The delegate that handles the event that is raised by &lt;paramref name=&quot;source&quot; /&gt;.">Délégué qui gère l'événement déclenché par <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the provided listener to the provided source for the event being managed.">Ajoute l'écouteur fourni à la source fournie pour l'événement qui est géré.</summary>
      <param name="source" vsli:raw="The source to attach listeners to.">La source à laquelle joindre des écouteurs.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">La classe d'écoute (qui doit implémenter <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Removes the previously added handler from the specified source.">Supprime de la source spécifiée le gestionnaire ajouté précédemment.</summary>
      <param name="source" vsli:raw="The source to remove the handler from.">Source à supprimer du gestionnaire.</param>
      <param name="handler" vsli:raw="The delegate to remove from &lt;paramref name=&quot;source&quot; /&gt;.">Délégué à supprimer à partir de <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes a previously added listener from the provided source.">Supprime un écouteur ajouté précédemment depuis la source fournie.</summary>
      <param name="source" vsli:raw="The source to remove listeners from.">La source à partir de laquelle supprimer des écouteurs.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">La classe d'écoute (qui doit implémenter <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes inactive listener entries from the data list for the provided source. Returns &lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed from the list.">Supprime des entrées d'écouteur inactives dans la liste de données pour la source fournie. Retourne la valeur <see langword="true" /> si certaines entrées ont été supprimées réellement de la liste.</summary>
      <param name="source" vsli:raw="The source for events being listened to.">Source des événements qui sont écoutés.</param>
      <param name="data" vsli:raw="The data to check. This object is expected to be a &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; implementation.">Les données à vérifier. Cet objet est supposé être une implémentation <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
      <param name="purgeAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to stop listening to &lt;paramref name=&quot;source&quot; /&gt;, and completely remove all entries from &lt;paramref name=&quot;data&quot; /&gt;.">
        <see langword="true" /> pour cesser d'écouter la <paramref name="source" /> et supprimer entièrement toutes les entrées de <paramref name="data" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si certaines entrées ont été réellement supprimées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ReadLock">
      <summary vsli:raw="Establishes a read-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">Établit un verrou de lecture sur la table de données sous-jacente et retourne un <see cref="T:System.IDisposable" />.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">Objet qui peut être utilisé pour établir un verrou sur les membres de la table de données, puis être supprimé de manière appropriée avec une construction <see langword="using" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.Remove(System.Object)">
      <summary vsli:raw="Removes all listeners for the specified source.">Supprime tous les écouteurs pour la source spécifiée.</summary>
      <param name="source" vsli:raw="The source to remove listener information for.">La source pour laquelle supprimer des informations d'écouteur.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ScheduleCleanup">
      <summary vsli:raw="Requests that a purge of unused entries in the underlying listener list be performed on a lower priority thread.">Demande qu'un vidage d'entrées inutilisées dans la liste d'écouteur sous-jacente soit effectué sur un thread de basse priorité.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
      <summary vsli:raw="Sets the current manager for the specified manager type.">Définit le gestionnaire actuel pour le type de gestionnaire spécifié.</summary>
      <param name="managerType" vsli:raw="The type to set the new event manager.">Type utilisé pour définir le nouveau gestionnaire d'événements.</param>
      <param name="manager" vsli:raw="The new event manager.">Le nouveau gestionnaire d'événement.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, starts listening for the event being managed. After the &lt;see cref=&quot;M:System.Windows.WeakEventManager.StartListening(System.Object)&quot; /&gt; method is first called, the manager should be in the state of calling &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)&quot; /&gt; whenever the relevant event from the provided source is handled.">En cas de substitution dans une classe dérivée, commence à écouter pour l'événement qui est géré. Après avoir d'abord appelé la méthode <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" />, le gestionnaire doit être dans l'état d'appeler <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> ou <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" /> à chaque fois que l'événement pertinent de la source fournie est géré.</summary>
      <param name="source" vsli:raw="The source to begin listening on.">La source sur laquelle commencer à écouter.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, stops listening on the provided source for the event being managed.">En cas de substitution dans une classe dérivée, cesse d'écouter sur la source fournie pour l'événement qui est géré.</summary>
      <param name="source" vsli:raw="The source to stop listening on.">La source sur laquelle arrêter d'écouter.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.WriteLock">
      <summary vsli:raw="Establishes a write-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">Établit un verrou d’écriture sur la table de données sous-jacente et retourne un <see cref="T:System.IDisposable" />.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">Objet qui peut être utilisé pour établir un verrou sur les membres de la table de données, puis être supprimé de manière appropriée avec une construction <see langword="using" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager`2">
      <summary vsli:raw="Provides a type-safe &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that enables you to specify the event handler to use for the &quot;weak event listener&quot; pattern. This class defines a type parameter for the source of the event and a type parameter for the event data that is used.">Fournit un <see cref="T:System.Windows.WeakEventManager" /> de type sécurisé qui permet de spécifier le gestionnaire d'événements à utiliser pour le modèle d'écouteur d'événements faible. Cette classe définit un paramètre de type pour la source de l'événement et un paramètre de type pour les données d'événement utilisées.</summary>
      <typeparam name="TEventSource" vsli:raw="The type that raises the event.">Type qui déclenche l'événement.</typeparam>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">Type qui contient les données d'événement.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Adds the specified event handler to the specified event.">Ajoute le gestionnaire d'événements spécifié à l'événement spécifié.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">Objet source qui déclenche l'événement spécifié.</param>
      <param name="eventName" vsli:raw="The name of the event to subscribe to.">Nom de l'événement auquel s'abonner.</param>
      <param name="handler" vsli:raw="The delegate that handles the event.">Délégué qui gère l'événement.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">Retourne un nouvel objet destiné à contenir des écouteurs sur un événement.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">Nouvel objet destiné à contenir des écouteurs sur un événement.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Removes the specified event handler from the specified event.">Supprime le gestionnaire d'événements spécifié de l'événement spécifié.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">Objet source qui déclenche l'événement spécifié.</param>
      <param name="eventName" vsli:raw="The name of the event to remove the handler from.">Nom de l'événement duquel supprimer le gestionnaire.</param>
      <param name="handler" vsli:raw="The delegate to remove.">Délégué à supprimer</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StartListening(System.Object)">
      <summary vsli:raw="Starts listening for the event on the specified object.">Démarre l'écoute de l'événement sur l'objet spécifié.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">Objet déclenchant l'événement.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the event on the specified object.">Arrête l'écoute de l'événement sur l'objet spécifié.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">Objet déclenchant l'événement.</param>
    </member>
  </members>
</doc>