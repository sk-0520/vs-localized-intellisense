<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Windows.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.Drawing.FontConverter">
      <summary>Convertit les objets <see cref="T:System.Drawing.Font" /> d'un type de données à un autre.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.#ctor">
      <summary>Initialise un nouvel objet <see cref="T:System.Drawing.FontConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si ce convertisseur peut convertir un objet du type source spécifié en objet du type natif du convertisseur.</summary>
      <param name="context">Contexte de formateur. Cet objet peut être utilisé pour obtenir des informations supplémentaires concernant l'environnement à partir duquel le convertisseur est appelé. La valeur peut être <see langword="null" />, vérifiez donc toujours. En outre, les propriétés sur l'objet de contexte peuvent retourner <see langword="null" />.</param>
      <param name="sourceType">Type à partir duquel vous souhaitez convertir.</param>
      <returns>Cette méthode retourne <see langword="true" /> si cet objet peut effectuer la conversion.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Obtient une valeur indiquant si ce convertisseur peut convertir un objet en objet du type de destination donné en utilisant le contexte.</summary>
      <param name="context">Objet <see langword="ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="destinationType">Objet <see cref="T:System.Type" /> qui représente le type vers lequel effectuer la conversion.</param>
      <returns>Cette méthode retourne <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit l'objet spécifié en type natif du convertisseur.</summary>
      <param name="context">Contexte de formateur. Cet objet peut être utilisé pour obtenir des informations supplémentaires concernant l'environnement à partir duquel le convertisseur est appelé. La valeur peut être <see langword="null" />, vérifiez donc toujours. En outre, les propriétés sur l'objet de contexte peuvent retourner <see langword="null" />.</param>
      <param name="culture">Objet <see langword="CultureInfo" /> spécifiant la culture utilisée pour représenter la police.</param>
      <param name="value">Objet à convertir.</param>
      <returns>Objet converti.</returns>
      <exception cref="T:System.NotSupportedException">La conversion n'a pas pu être effectuée.</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit l'objet spécifié dans un autre type.</summary>
      <param name="context">Contexte de formateur. Cet objet peut être utilisé pour obtenir des informations supplémentaires concernant l'environnement à partir duquel le convertisseur est appelé. La valeur peut être <see langword="null" />, vérifiez donc toujours. En outre, les propriétés sur l'objet de contexte peuvent retourner <see langword="null" />.</param>
      <param name="culture">Objet <see cref="T:System.Globalization.CultureInfo" /> spécifiant la culture utilisée pour représenter l'objet.</param>
      <param name="value">Objet à convertir.</param>
      <param name="destinationType">Type de données dans lequel convertir l'objet.</param>
      <returns>Objet converti.</returns>
      <exception cref="T:System.NotSupportedException">La conversion a échoué.</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Crée un objet de ce type à l'aide d'un jeu de valeurs de propriétés spécifié pour l'objet.</summary>
      <param name="context">Descripteur de type par l'intermédiaire duquel un contexte supplémentaire peut être fourni.</param>
      <param name="propertyValues">Dictionnaire de nouvelles valeurs de propriétés. Le dictionnaire contient une série de paires nom/valeur, à raison d'une paire par propriété retournée par la méthode <see cref="Overload:System.Drawing.FontConverter.GetProperties" />.</param>
      <returns>Objet nouvellement créé ou <see langword="null" /> si l'objet n'a pas pu être créé. L'implémentation par défaut retourne la valeur <see langword="null" />.
<see cref="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> est utile pour créer des objets non modifiables dotés de propriétés modifiables.</returns>
    </member>
    <member name="T:System.Drawing.FontConverter.FontNameConverter">
      <summary>
        <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> est convertisseur de type qui est utilisé pour convertir un nom de police dans et à partir de plusieurs autres représentations.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.FontConverter.FontNameConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si ce convertisseur peut convertir un objet du type source donné en objet du type natif du convertisseur.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. La valeur peut être <see langword="null" />, vérifiez donc toujours. En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</param>
      <param name="sourceType">Type à partir duquel vous souhaitez convertir.</param>
      <returns>
        <see langword="true" /> si le convertisseur peut effectuer la conversion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit l'objet donné en type natif du convertisseur.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. La valeur peut être <see langword="null" />, vérifiez donc toujours. En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> à utiliser pour effectuer la conversion</param>
      <param name="value">Objet à convertir.</param>
      <returns>Objet converti.</returns>
      <exception cref="T:System.NotSupportedException">La conversion ne peut pas être effectuée.</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Récupère une collection contenant un ensemble de valeurs standard pour le type de données pour lequel ce convertisseur a été conçu.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. La valeur peut être <see langword="null" />, vérifiez donc toujours. En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</param>
      <returns>Collection contenant un ensemble standard de valeurs valides ou <see langword="null" />. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Détermine si la liste de valeurs standard retournée par la méthode <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> est une liste exclusive.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. La valeur peut être <see langword="null" />, vérifiez donc toujours. En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si la collection retournée à partir de <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> est une liste exclusive des valeurs possibles ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Détermine si cet objet prend en charge un jeu de valeurs standard qui peuvent être sélectionnées dans une liste.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. La valeur peut être <see langword="null" />, vérifiez donc toujours. En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> doit être appelée pour rechercher un jeu commun de valeurs prises en charge par l'objet ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose">
      <summary>Exécute les tâches définies par l'application associées à la libération ou à la redéfinition des ressources non managées.</summary>
    </member>
    <member name="T:System.Drawing.FontConverter.FontUnitConverter">
      <summary>Convertit des unités de police vers et à partir d'autres types d'unités.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.FontConverter.FontUnitConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient une collection de valeurs standard pour le type <see cref="T:System.Drawing.Font" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
    </member>
    <member name="M:System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Détermine si la modification d'une valeur de cet objet nécessite un appel à la méthode <see cref="Overload:System.Drawing.FontConverter.CreateInstance" /> pour créer une nouvelle valeur.</summary>
      <param name="context">Descripteur de type par l'intermédiaire duquel un contexte supplémentaire peut être fourni.</param>
      <returns>Cette méthode retourne <see langword="true" /> si l'objet <see langword="CreateInstance" /> doit être appelé lors de la modification d'une ou plusieurs propriétés de cet objet ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Récupère le jeu de propriétés pour ce type. Par défaut, un type ne retourne aucune propriété.</summary>
      <param name="context">Descripteur de type par l'intermédiaire duquel un contexte supplémentaire peut être fourni.</param>
      <param name="value">Valeur de l'objet pour lequel les propriétés doivent être obtenues.</param>
      <param name="attributes">Tableau d'objets <see cref="T:System.Attribute" /> qui décrivent les propriétés.</param>
      <returns>Ensemble des propriétés qui doivent être exposées pour ce type de données. Si aucune propriété ne doit être exposée, la valeur <see langword="null" /> peut être retournée. L'implémentation par défaut retourne toujours <see langword="null" />.
Une implémentation simple de cette méthode peut appeler la méthode <see cref="Overload:System.ComponentModel.TypeConverter.GetProperties" /> pour le type de données approprié.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Détermine si cet objet prend en charge les propriétés. La valeur par défaut est <see langword="false" />.</summary>
      <param name="context">Descripteur de type par l'intermédiaire duquel un contexte supplémentaire peut être fourni.</param>
      <returns>Cette méthode retourne <see langword="true" /> si la méthode <see cref="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> doit être appelée pour rechercher les propriétés de cet objet ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.IconConverter">
      <summary>Convertit un objet <see cref="T:System.Drawing.Icon" /> d'un type de données à un autre. Accédez à cette classe via l'objet <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.IconConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si ce <see cref="T:System.Drawing.IconConverter" /> peut convertir une instance d'un type spécifié en <see cref="T:System.Drawing.Icon" />, en utilisant le contexte spécifié.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="sourceType">
        <see cref="T:System.Type" /> qui spécifie le type à partir duquel effectuer la conversion.</param>
      <returns>Cette méthode retourne <see langword="true" /> si ce <see cref="T:System.Drawing.IconConverter" /> peut effectuer la conversion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si ce <see cref="T:System.Drawing.IconConverter" /> peut convertir <see cref="T:System.Drawing.Icon" /> en une instance d'un type spécifié, en utilisant le contexte spécifié.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> spécifiant le type vers lequel effectuer la conversion.</param>
      <returns>Cette méthode retourne <see langword="true" /> si ce <see cref="T:System.Drawing.IconConverter" /> peut effectuer la conversion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit un objet spécifié en <see cref="T:System.Drawing.Icon" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> qui contient des informations sur une culture spécifique.</param>
      <param name="value">
        <see cref="T:System.Object" /> à convertir.</param>
      <returns>Si cette méthode réussit, elle retourne le <see cref="T:System.Drawing.Icon" /> qu'elle a créé en convertissant l'objet spécifié. Sinon, elle lève une exception.</returns>
      <exception cref="T:System.NotSupportedException">La conversion n'a pas pu être effectuée.</exception>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit un <see cref="T:System.Drawing.Icon" /> (ou un objet pouvant être casté en <see cref="T:System.Drawing.Icon" />) en un type spécifié.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="culture">Objet <see cref="T:System.Globalization.CultureInfo" /> qui spécifie des conventions de mise en forme utilisées par une culture particulière.</param>
      <param name="value">Objet à convertir. Cet objet doit être de type icône ou d'un type pouvant être casté en <see cref="T:System.Drawing.Icon" />.</param>
      <param name="destinationType">Type dans lequel convertir l'icône.</param>
      <returns>Cette méthode retourne l'objet converti.</returns>
      <exception cref="T:System.NotSupportedException">La conversion n'a pas pu être effectuée.</exception>
    </member>
    <member name="T:System.Drawing.ImageConverter">
      <summary>
        <see cref="T:System.Drawing.ImageConverter" /> est une classe qui peut être utilisée pour convertir des objets <see cref="T:System.Drawing.Image" /> d'un type de données à un autre. Accédez à cette classe via l'objet <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.ImageConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si ce <see cref="T:System.Drawing.ImageConverter" /> peut convertir une instance d'un type spécifié en <see cref="T:System.Drawing.Image" />, en utilisant le contexte spécifié.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="sourceType">
        <see cref="T:System.Type" /> qui spécifie le type à partir duquel effectuer la conversion.</param>
      <returns>Cette méthode retourne <see langword="true" /> si ce <see cref="T:System.Drawing.ImageConverter" /> peut effectuer la conversion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si ce <see cref="T:System.Drawing.ImageConverter" /> peut convertir <see cref="T:System.Drawing.Image" /> en une instance d'un type spécifié, en utilisant le contexte spécifié.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> spécifiant le type vers lequel effectuer la conversion.</param>
      <returns>Cette méthode retourne <see langword="true" /> si ce <see cref="T:System.Drawing.ImageConverter" /> peut effectuer la conversion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit un objet spécifié en <see cref="T:System.Drawing.Image" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> qui contient des informations sur une culture spécifique.</param>
      <param name="value">
        <see cref="T:System.Object" /> à convertir.</param>
      <returns>Si cette méthode réussit, elle retourne le <see cref="T:System.Drawing.Image" /> qu'elle a créé en convertissant l'objet spécifié. Sinon, elle lève une exception.</returns>
      <exception cref="T:System.NotSupportedException">La conversion ne peut pas être effectuée.</exception>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit <see cref="T:System.Drawing.Image" /> (ou un objet pouvant être casté en <see cref="T:System.Drawing.Image" />) en un type spécifié.</summary>
      <param name="context">Contexte de formateur. Cet objet peut être utilisé pour obtenir des informations supplémentaires concernant l'environnement à partir duquel le convertisseur est appelé. La valeur peut être <see langword="null" />, vérifiez donc toujours. En outre, les propriétés sur l'objet de contexte peuvent retourner <see langword="null" />.</param>
      <param name="culture">Objet <see cref="T:System.Globalization.CultureInfo" /> qui spécifie des conventions de mise en forme utilisées par une culture particulière.</param>
      <param name="value">
        <see cref="T:System.Drawing.Image" /> à convertir.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> dans lequel <see cref="T:System.Drawing.Image" /> doit être converti.</param>
      <returns>Cette méthode retourne l'objet converti.</returns>
      <exception cref="T:System.NotSupportedException">La conversion ne peut pas être effectuée.</exception>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Obtient l'ensemble de propriétés pour ce type.</summary>
      <param name="context">Descripteur de type par l'intermédiaire duquel un contexte supplémentaire peut être fourni.</param>
      <param name="value">Valeur de l'objet pour lequel les propriétés doivent être obtenues.</param>
      <param name="attributes">Tableau d'objets <see cref="T:System.Attribute" /> qui décrivent les propriétés.</param>
      <returns>Ensemble des propriétés qui doivent être exposées pour ce type de données. Si aucune propriété ne doit être exposée, la valeur <see langword="null" /> peut être retournée. L'implémentation par défaut retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indique si cet objet prend en charge les propriétés. Par défaut, cette valeur est <see langword="false" />.</summary>
      <param name="context">Descripteur de type par l'intermédiaire duquel un contexte supplémentaire peut être fourni.</param>
      <returns>Cette méthode retourne <see langword="true" /> si la méthode <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> doit être appelée pour trouver les propriétés de cet objet.</returns>
    </member>
    <member name="T:System.Drawing.ImageFormatConverter">
      <summary>
        <see cref="T:System.Drawing.ImageFormatConverter" /> est une classe qui peut être utilisée pour convertir des objets <see cref="T:System.Drawing.Imaging.ImageFormat" /> d'un type de données à un autre. Accédez à cette classe via l'objet <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.ImageFormatConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indique si ce convertisseur peut convertir un objet du type source spécifié en objet du type natif du convertisseur.</summary>
      <param name="context">Contexte de formateur. Cet objet peut être utilisé pour obtenir des informations supplémentaires concernant l'environnement à partir duquel le convertisseur est appelé. La valeur peut être <see langword="null" />, vérifiez donc toujours. En outre, les propriétés sur l'objet de contexte peuvent retourner <see langword="null" />.</param>
      <param name="sourceType">Type à partir duquel vous souhaitez convertir.</param>
      <returns>Cette méthode retourne <see langword="true" /> si cet objet peut effectuer la conversion.</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Obtient une valeur indiquant si ce convertisseur peut convertir un objet en objet du type de destination spécifié en utilisant le contexte.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui spécifie le contexte pour cette conversion de type.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> qui représente le type vers lequel vous souhaitez convertir cet objet <see cref="T:System.Drawing.Imaging.ImageFormat" />.</param>
      <returns>Cette méthode retourne <see langword="true" /> si cet objet peut effectuer la conversion.</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit l'objet spécifié en objet <see cref="T:System.Drawing.Imaging.ImageFormat" />.</summary>
      <param name="context">Contexte de formateur. Cet objet peut être utilisé pour obtenir des informations supplémentaires concernant l'environnement à partir duquel le convertisseur est appelé. La valeur peut être <see langword="null" />, vérifiez donc toujours. En outre, les propriétés sur l'objet de contexte peuvent retourner <see langword="null" />.</param>
      <param name="culture">Objet <see cref="T:System.Globalization.CultureInfo" /> qui spécifie des conventions de mise en forme pour une culture particulière.</param>
      <param name="value">Objet à convertir.</param>
      <returns>Objet converti.</returns>
      <exception cref="T:System.NotSupportedException">La conversion ne peut pas être effectuée.</exception>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit l'objet spécifié dans le type spécifié.</summary>
      <param name="context">Contexte de formateur. Cet objet peut être utilisé pour obtenir des informations supplémentaires concernant l'environnement à partir duquel le convertisseur est appelé. La valeur peut être <see langword="null" />, vérifiez donc toujours. En outre, les propriétés sur l'objet de contexte peuvent retourner <see langword="null" />.</param>
      <param name="culture">Objet <see cref="T:System.Globalization.CultureInfo" /> qui spécifie des conventions de mise en forme pour une culture particulière.</param>
      <param name="value">Objet à convertir.</param>
      <param name="destinationType">Type dans lequel convertir l'objet.</param>
      <returns>Objet converti.</returns>
      <exception cref="T:System.NotSupportedException">La conversion ne peut pas être effectuée.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> a la valeur <see langword="null." />.</exception>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient une collection qui contient un ensemble de valeurs standard pour le type de données pour lequel ce validateur a été conçu. Retourne <see langword="null" /> si le type de données ne prend pas en charge un ensemble de valeurs standard.</summary>
      <param name="context">Contexte de formateur. Cet objet peut être utilisé pour obtenir des informations supplémentaires concernant l'environnement à partir duquel le convertisseur est appelé. La valeur peut être <see langword="null" />, vérifiez donc toujours. En outre, les propriétés sur l'objet de contexte peuvent retourner <see langword="null" />.</param>
      <returns>Collection qui contient un ensemble standard de valeurs valides ou <see langword="null" />. L'implémentation par défaut retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indique si cet objet prend en charge un jeu standard de valeurs qui peuvent être sélectionnées dans une liste.</summary>
      <param name="context">Descripteur de type par l'intermédiaire duquel un contexte supplémentaire peut être fourni.</param>
      <returns>Cette méthode retourne <see langword="true" /> si la méthode <see cref="Overload:System.Drawing.ImageFormatConverter.GetStandardValues" /> doit être appelée pour trouver un ensemble de valeurs courant pris en charge par l'objet.</returns>
    </member>
    <member name="T:System.Drawing.Printing.MarginsConverter">
      <summary>Fournit <see cref="T:System.Drawing.Printing.MarginsConverter" /> pour <see cref="T:System.Drawing.Printing.Margins" />.</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Printing.MarginsConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Retourne une valeur indiquant si ce convertisseur peut convertir un objet du type source spécifié en objet du type natif du convertisseur en utilisant le contexte spécifié.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="sourceType">
        <see cref="T:System.Type" /> représentant le type à partir duquel vous voulez effectuer la conversion.</param>
      <returns>
        <see langword="true" /> si un objet peut effectuer la conversion, sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Retourne une valeur indiquant si ce convertisseur peut convertir un objet en objet du type de destination donné en utilisant le contexte.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> représentant le type à partir duquel vous souhaitez effectuer la conversion.</param>
      <returns>
        <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit l'objet spécifié en type natif du convertisseur.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> qui fournit la langue de destination de la conversion.</param>
      <param name="value">
        <see cref="T:System.Object" /> à convertir.</param>
      <returns>
        <see cref="T:System.Object" /> qui représente la valeur convertie.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ne contient pas de valeurs pour les quatre marges. Par exemple, "100,100,100,100" spécifie 1 pouce pour les marges gauche, droite, haute et basse.</exception>
      <exception cref="T:System.NotSupportedException">La conversion ne peut pas être effectuée.</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit l'objet de valeur donnée dans le type de destination spécifié en utilisant le contexte et les arguments spécifiés.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> qui fournit la langue de destination de la conversion.</param>
      <param name="value">
        <see cref="T:System.Object" /> à convertir.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> de destination de la conversion.</param>
      <returns>
        <see cref="T:System.Object" /> qui représente la valeur convertie.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La conversion ne peut pas être effectuée.</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Crée un <see cref="T:System.Object" /> en fonction d'un jeu de valeurs de propriétés pour l'objet.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="propertyValues">
        <see cref="T:System.Collections.IDictionary" /> de nouvelles valeurs de propriétés.</param>
      <returns>
        <see cref="T:System.Object" /> représentant le <see cref="T:System.Collections.IDictionary" /> spécifié ; ou <see langword="null" /> si l'objet n'a pas pu être créé.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyValues" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retourne une valeur indiquant si la modification d'une valeur de cet objet nécessite un appel à la méthode <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> pour créer une nouvelle valeur, en utilisant le contexte spécifié.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <returns>
        <see langword="true" /> si la modification d'une propriété de cet objet requiert l'appel de <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> pour la création d'une nouvelle valeur ; sinon, <see langword="false" />. Cette méthode retourne toujours la valeur <see langword="true" />.</returns>
    </member>
    <member name="T:System.Media.SoundPlayer">
      <summary vsli:raw="Controls playback of a sound from a .wav file.">Contrôle la lecture du son d'un fichier .wav.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Media.SoundPlayer" />.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt; class, and attaches the .wav file within the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Media.SoundPlayer" /> et attache le fichier .wav au <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to a .wav file.">
        <see cref="T:System.IO.Stream" /> dans un fichier .wav.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Media.SoundPlayer" />.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used for deserialization.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à utiliser pour la désérialisation.</param>
      <param name="context" vsli:raw="The destination to be used for deserialization.">Destination à utiliser pour la désérialisation.</param>
      <exception cref="T:System.UriFormatException" vsli:raw="The &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; specified in &lt;paramref name=&quot;serializationInfo&quot; /&gt; cannot be resolved.">Le <see cref="P:System.Media.SoundPlayer.SoundLocation" /> spécifié dans <paramref name="serializationInfo" /> ne peut pas être résolu.</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt; class, and attaches the specified .wav file.">Initialise une nouvelle instance de la classe <see cref="T:System.Media.SoundPlayer" /> et attache le fichier .wav spécifié.</summary>
      <param name="soundLocation" vsli:raw="The location of a .wav file to load.">Emplacement d'un fichier .wav à charger.</param>
      <exception cref="T:System.UriFormatException" vsli:raw="The URL value specified by &lt;paramref name=&quot;soundLocation&quot; /&gt; cannot be resolved.">La valeur URL spécifiée par <paramref name="soundLocation" /> ne peut pas être résolue.</exception>
    </member>
    <member name="P:System.Media.SoundPlayer.IsLoadCompleted">
      <summary vsli:raw="Gets a value indicating whether loading of a .wav file has successfully completed.">Obtient une valeur indiquant si le chargement d'un fichier .wav s'est terminé correctement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a .wav file is loaded; &lt;see langword=&quot;false&quot; /&gt; if a .wav file has not yet been loaded.">
        <see langword="true" /> si un fichier .wav est chargé ; <see langword="false" /> si un fichier .wav n'est pas encore chargé.</returns>
    </member>
    <member name="M:System.Media.SoundPlayer.Load">
      <summary vsli:raw="Loads a sound synchronously.">Charge un son de façon synchrone.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException" vsli:raw="The elapsed time during loading exceeds the time, in milliseconds, specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.LoadTimeout&quot; /&gt;.">Le temps écoulé pendant le chargement dépasse le délai, en millisecondes, spécifié par <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; cannot be found.">Le fichier spécifié par <see cref="P:System.Media.SoundPlayer.SoundLocation" /> est introuvable.</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.LoadAsync">
      <summary vsli:raw="Loads a .wav file from a stream or a Web resource using a new thread.">Charge un fichier .wav à partir d'un flux de données ou d'une ressource Web à l'aide d'un nouveau thread.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException" vsli:raw="The elapsed time during loading exceeds the time, in milliseconds, specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.LoadTimeout&quot; /&gt;.">Le temps écoulé pendant le chargement dépasse le délai, en millisecondes, spécifié par <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; cannot be found.">Le fichier spécifié par <see cref="P:System.Media.SoundPlayer.SoundLocation" /> est introuvable.</exception>
    </member>
    <member name="E:System.Media.SoundPlayer.LoadCompleted">
      <summary vsli:raw="Occurs when a .wav file has been successfully or unsuccessfully loaded.">Se produit lorsqu'un fichier .wav a été chargé correctement ou non.</summary>
    </member>
    <member name="P:System.Media.SoundPlayer.LoadTimeout">
      <summary vsli:raw="Gets or sets the time, in milliseconds, in which the .wav file must load.">Obtient ou définit le délai de chargement du fichier .wav en millisecondes.</summary>
      <returns vsli:raw="The number of milliseconds to wait. The default is 10000 (10 seconds).">Nombre de millisecondes à attendre. La valeur par défaut est 10 000 (10 secondes).</returns>
    </member>
    <member name="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Media.SoundPlayer.LoadCompleted&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Media.SoundPlayer.LoadCompleted" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AsyncCompletedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Media.SoundPlayer.SoundLocationChanged&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Media.SoundPlayer.StreamChanged&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Media.SoundPlayer.StreamChanged" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.Play">
      <summary vsli:raw="Plays the .wav file using a new thread, and loads the .wav file first if it has not been loaded.">Lit le fichier .wav à l'aide d'un nouveau thread, et le charge en premier s'il n'a pas été chargé.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException" vsli:raw="The elapsed time during loading exceeds the time, in milliseconds, specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.LoadTimeout&quot; /&gt;.">Le temps écoulé pendant le chargement dépasse le délai, en millisecondes, spécifié par <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; cannot be found.">Le fichier spécifié par <see cref="P:System.Media.SoundPlayer.SoundLocation" /> est introuvable.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The .wav header is corrupted; the file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; is not a PCM .wav file.">L'en-tête .wav est endommagé ; le fichier spécifié par <see cref="P:System.Media.SoundPlayer.SoundLocation" /> n'est pas un fichier .wav PCM.</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.PlayLooping">
      <summary vsli:raw="Plays and loops the .wav file using a new thread, and loads the .wav file first if it has not been loaded.">Lit et met en boucle le fichier .wav à l'aide d'un nouveau thread, et le charge en premier s'il n'a pas été chargé.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException" vsli:raw="The elapsed time during loading exceeds the time, in milliseconds, specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.LoadTimeout&quot; /&gt;.">Le temps écoulé pendant le chargement dépasse le délai, en millisecondes, spécifié par <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; cannot be found.">Le fichier spécifié par <see cref="P:System.Media.SoundPlayer.SoundLocation" /> est introuvable.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The .wav header is corrupted; the file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; is not a PCM .wav file.">L'en-tête .wav est endommagé ; le fichier spécifié par <see cref="P:System.Media.SoundPlayer.SoundLocation" /> n'est pas un fichier .wav PCM.</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.PlaySync">
      <summary vsli:raw="Plays the .wav file and loads the .wav file first if it has not been loaded.">Lit le fichier .wav et le charge en premier s'il n'a pas été chargé.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException" vsli:raw="The elapsed time during loading exceeds the time, in milliseconds, specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.LoadTimeout&quot; /&gt;.">Le temps écoulé pendant le chargement dépasse le délai, en millisecondes, spécifié par <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; cannot be found.">Le fichier spécifié par <see cref="P:System.Media.SoundPlayer.SoundLocation" /> est introuvable.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The .wav header is corrupted; the file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; is not a PCM .wav file.">L'en-tête .wav est endommagé ; le fichier spécifié par <see cref="P:System.Media.SoundPlayer.SoundLocation" /> n'est pas un fichier .wav PCM.</exception>
    </member>
    <member name="P:System.Media.SoundPlayer.SoundLocation">
      <summary vsli:raw="Gets or sets the file path or URL of the .wav file to load.">Obtient ou définit le chemin d'accès ou l'URL du fichier .wav à charger.</summary>
      <returns vsli:raw="The file path or URL from which to load a .wav file, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if no file path is present. The default is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">Chemin d'accès ou URL à partir desquels charger un fichier .wav, ou <see cref="F:System.String.Empty" /> si aucun chemin d'accès n'est présent. La valeur par défaut est <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="E:System.Media.SoundPlayer.SoundLocationChanged">
      <summary vsli:raw="Occurs when a new audio source path for this &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt; has been set.">Se produit lorsqu'un nouveau chemin source audio pour ce <see cref="T:System.Media.SoundPlayer" /> a été défini.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.Stop">
      <summary vsli:raw="Stops playback of the sound if playback is occurring.">Arrête la lecture du son, si lecture il y a.</summary>
    </member>
    <member name="P:System.Media.SoundPlayer.Stream">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to load the .wav file.">Obtient ou définit le <see cref="T:System.IO.Stream" /> à partir duquel charger le fichier .wav.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to load the .wav file, or &lt;see langword=&quot;null&quot; /&gt; if no stream is available. The default is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.IO.Stream" /> à partir duquel charger le fichier .wav, ou <see langword="null" /> si aucun flux n'est disponible. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="E:System.Media.SoundPlayer.StreamChanged">
      <summary vsli:raw="Occurs when a new &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; audio source for this &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt; has been set.">Se produit lorsqu'une nouvelle source audio <see cref="T:System.IO.Stream" /> pour ce <see cref="T:System.Media.SoundPlayer" /> a été définie.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; method.">Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">Destination (consultez <see cref="T:System.Runtime.Serialization.StreamingContext" />) de cette sérialisation.</param>
    </member>
    <member name="P:System.Media.SoundPlayer.Tag">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains data about the &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt;.">Obtient ou définit <see cref="T:System.Object" /> qui contient les données relatives à <see cref="T:System.Media.SoundPlayer" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains data about the &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt;.">
        <see cref="T:System.Object" /> qui contient les données relatives au <see cref="T:System.Media.SoundPlayer" />.</returns>
    </member>
    <member name="T:System.Media.SystemSound">
      <summary vsli:raw="Represents a system sound type.">Représente un type de son système.</summary>
    </member>
    <member name="M:System.Media.SystemSound.Play">
      <summary vsli:raw="Plays the system sound type.">Lit le type de son système.</summary>
    </member>
    <member name="T:System.Media.SystemSounds">
      <summary vsli:raw="Retrieves sounds associated with a set of Windows operating system sound-event types. This class cannot be inherited.">Récupère des sons associés à un jeu de types d'événements sonores du système d'exploitation Windows. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="P:System.Media.SystemSounds.Asterisk">
      <summary vsli:raw="Gets the sound associated with the &lt;see langword=&quot;Asterisk&quot; /&gt; program event in the current Windows sound scheme.">Obtient le son associé à l'événement <see langword="Asterisk" /> dans le schéma de son Windows actuel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Media.SystemSound&quot; /&gt; associated with the &lt;see langword=&quot;Asterisk&quot; /&gt; program event in the current Windows sound scheme.">
        <see cref="T:System.Media.SystemSound" /> associé à l'événement <see langword="Asterisk" /> dans le schéma de son Windows actuel.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Beep">
      <summary vsli:raw="Gets the sound associated with the &lt;see langword=&quot;Beep&quot; /&gt; program event in the current Windows sound scheme.">Obtient le son associé à l'événement <see langword="Beep" /> dans le schéma de son Windows actuel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Media.SystemSound&quot; /&gt; associated with the &lt;see langword=&quot;Beep&quot; /&gt; program event in the current Windows sound scheme.">
        <see cref="T:System.Media.SystemSound" /> associé à l'événement <see langword="Beep" /> dans le schéma de son Windows actuel.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Exclamation">
      <summary vsli:raw="Gets the sound associated with the &lt;see langword=&quot;Exclamation&quot; /&gt; program event in the current Windows sound scheme.">Obtient le son associé à l'événement <see langword="Exclamation" /> dans le schéma de son Windows actuel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Media.SystemSound&quot; /&gt; associated with the &lt;see langword=&quot;Exclamation&quot; /&gt; program event in the current Windows sound scheme.">
        <see cref="T:System.Media.SystemSound" /> associé à l'événement <see langword="Exclamation" /> dans le schéma de son Windows actuel.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Hand">
      <summary vsli:raw="Gets the sound associated with the &lt;see langword=&quot;Hand&quot; /&gt; program event in the current Windows sound scheme.">Obtient le son associé à l'événement <see langword="Hand" /> dans le schéma de son Windows actuel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Media.SystemSound&quot; /&gt; associated with the &lt;see langword=&quot;Hand&quot; /&gt; program event in the current Windows sound scheme.">
        <see cref="T:System.Media.SystemSound" /> associé à l'événement <see langword="Hand" /> dans le schéma de son Windows actuel.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Question">
      <summary vsli:raw="Gets the sound associated with the &lt;see langword=&quot;Question&quot; /&gt; program event in the current Windows sound scheme.">Obtient le son associé à l'événement <see langword="Question" /> dans le schéma de son Windows actuel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Media.SystemSound&quot; /&gt; associated with the &lt;see langword=&quot;Question&quot; /&gt; program event in the current Windows sound scheme.">
        <see cref="T:System.Media.SystemSound" /> associé à l'événement <see langword="Question" /> dans le schéma de son Windows actuel.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI">
      <summary vsli:raw="Displays user interface dialogs that allow you to select and view X.509 certificates. This class cannot be inherited.">Affiche des boîtes de dialogue de l'interface utilisateur qui vous permettent de sélectionner et d'afficher des certificats X.509. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2UI&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Displays a dialog box that contains the properties of an X.509 certificate and its associated certificate chain.">Affiche une boîte de dialogue qui contient les propriétés d'un certificat X.509 et de sa chaîne de certificats associée.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to display.">Certificat X.509 à afficher.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="certificate" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is invalid.">Le paramètre <paramref name="certificate" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IntPtr)">
      <summary vsli:raw="Displays a dialog box that contains the properties of an X.509 certificate and its associated certificate chain using a handle to a parent window.">Affiche une boîte de dialogue qui contient les propriétés d'un certificat X.509 et de sa chaîne de certificats associée à l'aide d'un handle à une fenêtre parente.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to display.">Certificat X.509 à afficher.</param>
      <param name="hwndParent" vsli:raw="A handle to the parent window to use for the display dialog.">Handle à la fenêtre parente à utiliser pour la boîte de dialogue affichée.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="certificate" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is invalid.">Le paramètre <paramref name="certificate" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag)">
      <summary vsli:raw="Displays a dialog box for selecting an X.509 certificate from a certificate collection.">Affiche une boîte de dialogue permettant de sélectionner un certificat X.509 à partir d'une collection de certificats.</summary>
      <param name="certificates" vsli:raw="A collection of X.509 certificates to select from.">Collection de certificats X.509 dans laquelle effectuer la sélection.</param>
      <param name="title" vsli:raw="The title of the dialog box.">Titre de la boîte de dialogue.</param>
      <param name="message" vsli:raw="A descriptive message to guide the user.  The message is displayed in the dialog box.">Message descriptif pour guider l'utilisateur.  Le message est affiché dans la boîte de dialogue.</param>
      <param name="selectionFlag" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509SelectionFlag&quot; /&gt; values that specifies whether single or multiple selections are allowed.">Une des valeurs de <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> qui spécifie si une ou plusieurs sélections sont autorisées.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot; /&gt; object that contains the selected certificate or certificates.">Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> qui contient le ou les certificats sélectionnés.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;selectionFlag&quot; /&gt; parameter is not a valid flag.">Le paramètre <paramref name="selectionFlag" /> n'est pas un indicateur valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificates&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="certificates" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificates&quot; /&gt; parameter is invalid.">Le paramètre <paramref name="certificates" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag,System.IntPtr)">
      <summary vsli:raw="Displays a dialog box for selecting an X.509 certificate from a certificate collection using a handle to a parent window.">Affiche une boîte de dialogue permettant de sélectionner un certificat X.509 à partir d'une collection de certificats à l'aide d'un handle à une fenêtre parente.</summary>
      <param name="certificates" vsli:raw="A collection of X.509 certificates to select from.">Collection de certificats X.509 dans laquelle effectuer la sélection.</param>
      <param name="title" vsli:raw="The title of the dialog box.">Titre de la boîte de dialogue.</param>
      <param name="message" vsli:raw="A descriptive message to guide the user.  The message is displayed in the dialog box.">Message descriptif pour guider l'utilisateur.  Le message est affiché dans la boîte de dialogue.</param>
      <param name="selectionFlag" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509SelectionFlag&quot; /&gt; values that specifies whether single or multiple selections are allowed.">Une des valeurs de <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> qui spécifie si une ou plusieurs sélections sont autorisées.</param>
      <param name="hwndParent" vsli:raw="A handle to the parent window to use for the display dialog box.">Handle à la fenêtre parente à utiliser pour la boîte de dialogue affichée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot; /&gt; object that contains the selected certificate or certificates.">Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> qui contient le ou les certificats sélectionnés.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;selectionFlag&quot; /&gt; parameter is not a valid flag.">Le paramètre <paramref name="selectionFlag" /> n'est pas un indicateur valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificates&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="certificates" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificates&quot; /&gt; parameter is invalid.">Le paramètre <paramref name="certificates" /> n'est pas valide.</exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag">
      <summary vsli:raw="Specifies the type of selection requested using the &lt;see cref=&quot;Overload:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection&quot; /&gt; method.">Spécifie le type de sélection demandé, avec la méthode <see cref="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection" />.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.MultiSelection">
      <summary vsli:raw="A multiple selection. The user can use the SHIFT or CRTL keys to select more than one X.509 certificate.">Sélection multiple. Avec les touches MAJ ou CRTL, il est possible de sélectionner plusieurs certificats X.509.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.SingleSelection">
      <summary vsli:raw="A single selection. The UI allows the user to select one X.509 certificate.">Sélection simple. L'interface utilisateur permet de sélectionner un certificat X.509.</summary>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary vsli:raw="Defines access control to assemblies and types for purposes of XAML loading.">Définit le contrôle d'accès aux assemblys et aux types à des fins de chargement XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance based on an assembly requested by &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">Retourne une instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basée sur un assembly demandé par <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="assembly" vsli:raw="The assembly for the request.">Assembly de la demande.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance, with the &lt;paramref name=&quot;assembly&quot; /&gt; value used as source information for &lt;see cref=&quot;P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName&quot; /&gt;.">Instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, avec la valeur <paramref name="assembly" /> utilisée comme informations sources pour <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance based on an assembly requested by &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt;.">Retourne une instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basée sur un assembly demandé par <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyName" vsli:raw="The assembly name for the request.">Nom de l'assembly pour la demande.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance, with the &lt;paramref name=&quot;assemblyName&quot; /&gt; value used as source information for &lt;see cref=&quot;P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName&quot; /&gt;.">Instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, avec la valeur <paramref name="assemblyName" /> utilisée comme informations sources pour <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyName" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;assemblyName&quot; /&gt; is not a valid fully qualified assembly name.">
        <paramref name="assemblyName" /> n'est pas un nom d'assembly qualifié complet valide.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; of the assembly for which this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; determines permissions.">Obtient le <see cref="T:System.Reflection.AssemblyName" /> de l'assembly pour lequel ce <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> détermine des autorisations.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; of the assembly for which this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; determines permissions.">
        <see cref="T:System.Reflection.AssemblyName" /> de l'assembly pour lequel ce <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> détermine des autorisations.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance based on a specific type specified by its qualified name.">Retourne une instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basée sur un type spécifique spécifié par son nom qualifié.</summary>
      <param name="assemblyQualifiedTypeName" vsli:raw="A string that is parsed as an assembly-qualified type name.">Chaîne analysée comme nom de type qualifié d'assembly.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance, with the &lt;paramref name=&quot;assemblyQualifiedTypeName&quot; /&gt; value used as source information for &lt;see cref=&quot;P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName&quot; /&gt; and &lt;see cref=&quot;P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName&quot; /&gt; determined by reflection on the type.">Instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, avec la valeur <paramref name="assemblyQualifiedTypeName" /> utilisée comme informations sources pour <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> et <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> en fonction de la réflexion sur le type.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyQualifiedTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyQualifiedTypeName" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;assemblyQualifiedTypeName&quot; /&gt; is not a valid assembly-qualified type name.  &#xA;  &#xA; -or-  &#xA;  &#xA; Assembly name within &lt;paramref name=&quot;assemblyQualifiedTypeName&quot; /&gt; is not a valid assembly name.">
        <paramref name="assemblyQualifiedTypeName" /> n'est pas un nom de type qualifié d'assembly valide.

ou -
Le nom de l'assembly dans <paramref name="assemblyQualifiedTypeName" /> n'est pas un nom d'assembly valide.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance based on a specific type specified by &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Retourne une instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basée sur un type spécifié par <see cref="T:System.Type" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to request access for.">
        <see cref="T:System.Type" /> pour lequel demander l'accès.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance, with the &lt;paramref name=&quot;type&quot; /&gt; value used as source information for &lt;see cref=&quot;P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName&quot; /&gt; and &lt;see cref=&quot;P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName&quot; /&gt; determined by reflection on the type.">Instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, avec la valeur <paramref name="type" /> utilisée comme informations sources pour <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> et <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> en fonction de la réflexion sur le type.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary vsli:raw="Gets the unqualified string name of the type for which this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; determines permissions.">Obtient le nom de chaîne non qualifié du type pour lequel ce <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> détermine des autorisations.</summary>
      <returns vsli:raw="The unqualified string name of the type for which this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; determines permissions.">Nom de chaîne non qualifié du type pour lequel ce <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> détermine des autorisations.</returns>
    </member>
  </members>
</doc>