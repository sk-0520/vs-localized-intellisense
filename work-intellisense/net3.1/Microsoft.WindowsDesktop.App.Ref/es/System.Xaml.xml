<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xaml</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute">
      <summary vsli:raw="Notates types for legacy reporting of XAML markup extension characteristics.">Marca tipos para notificar características de extensión de marcado XAML heredadas.</summary>
    </member>
    <member name="M:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute" />.</summary>
      <param name="type" vsli:raw="The return type that this attribute reports.">Tipo de valor devuelto que este atributo notifica.</param>
    </member>
    <member name="P:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.Type">
      <summary vsli:raw="Gets or sets the return type that this attribute reports.">Obtiene o establece el tipo de valor devuelto que este atributo notifica.</summary>
      <returns vsli:raw="The return type that this attribute reports.">Tipo de valor devuelto que este atributo notifica.</returns>
    </member>
    <member name="T:System.Windows.Markup.AmbientAttribute">
      <summary vsli:raw="Specifies that a property or type should be treated as ambient. The ambient concept relates to how XAML processors determine type owners of members.">Especifica que una propiedad o un tipo debe tratarse como ambiente. El concepto de ambiente se relaciona con la forma en que los procesadores XAML determinan los propietarios de tipos de los miembros.</summary>
    </member>
    <member name="M:System.Windows.Markup.AmbientAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AmbientAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.ArrayExtension">
      <summary vsli:raw="Implements &lt;see langword=&quot;x:Array&quot; /&gt; support for .NET XAML Services.">Implementa compatibilidad de <see langword="x:Array" /> con los servicios XAML de .NET Framework.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class. This creates an empty array.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ArrayExtension" />. Esta crea una matriz vacía.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Array)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class based on the provided raw array.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ArrayExtension" />, tomando como base la matriz sin formato proporcionada.</summary>
      <param name="elements" vsli:raw="The array content that populates the created array.">Contenido de la matriz que rellena la matriz creada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;elements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="elements" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class and initializes the type of the array.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ArrayExtension" /> e inicializa el tipo de la matriz.</summary>
      <param name="arrayType" vsli:raw="The object type of the new array.">Tipo de objeto de la nueva matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;arrayType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="arrayType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddChild(System.Object)">
      <summary vsli:raw="Appends the supplied object to the end of the array.">Anexa el objeto proporcionado al final de la matriz.</summary>
      <param name="value" vsli:raw="The object to add to the end of the array.">Objeto que se va a agregar al final de la matriz.</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddText(System.String)">
      <summary vsli:raw="Adds a text node as a new array item.">Agrega un nodo de texto como un nuevo elemento de matriz.</summary>
      <param name="text" vsli:raw="The text to add to the end of the array.">Texto que se va a agregar al final de la matriz.</param>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Items">
      <summary vsli:raw="Gets the contents of the array. Settable in XAML through XAML collection syntax.">Ordena el contenido de la matriz. Se puede establecer en XAML mediante la sintaxis de colección de XAML.</summary>
      <returns vsli:raw="The array contents.">Contenido de la matriz.</returns>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an array that is sized to the number of objects supplied in the &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">Devuelve una matriz cuyo tamaño se ajusta al número de objetos proporcionados en los valores de la propiedad <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension.">Objeto que puede proporcionar servicios para la extensión de marcado.</param>
      <returns vsli:raw="The created array, or null.">Matriz creada o null.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Processed an array that did not provide a valid &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; There is a type mismatch between the declared &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt; of the array and one or more of its &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">Se procesó una matriz que no proporcionó un valor de <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> válido.
o bien
Hay una falta de coincidencia entre el tipo declarado <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> de la matriz y uno o varios de sus valores <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Type">
      <summary vsli:raw="Gets or sets the type of array to be created when calling &lt;see cref=&quot;M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)&quot; /&gt;.">Obtiene o establece el tipo de matriz que se creará al llamar a <see cref="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)" />.</summary>
      <returns vsli:raw="The type of the array.">Tipo de matriz.</returns>
    </member>
    <member name="T:System.Windows.Markup.ConstructorArgumentAttribute">
      <summary vsli:raw="Specifies that an object can be initialized by using a non-parameterless constructor syntax, and that a property of the specified name supplies construction information.  This information is primarily for XAML serialization.">Especifica que un objeto se puede inicializar usando una sintaxis de constructor sin parámetros y que una propiedad del nombre especificado proporciona información de construcción.  Esta información sirve principalmente para la serialización XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ConstructorArgumentAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" />.</summary>
      <param name="argumentName" vsli:raw="The name of the constructor that will initialize the associated property.">Nombre del constructor que inicializará la propiedad asociada.</param>
    </member>
    <member name="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
      <summary vsli:raw="Gets the name parameter of the constructor that will initialize the associated property.">Obtiene el parámetro de nombre del constructor que inicializará la propiedad asociada.</summary>
      <returns vsli:raw="The name of the constructor. Assuming CLR backing, this corresponds to the &lt;see cref=&quot;P:System.Reflection.ParameterInfo.Name&quot; /&gt; of the relevant constructor parameter.">Nombre del constructor. Suponiendo el respaldo de CLR, este valor corresponde a la propiedad <see cref="P:System.Reflection.ParameterInfo.Name" /> del parámetro de constructor pertinente.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
      <summary vsli:raw="Indicates which property of a type is the XAML content property. A XAML processor uses this information when processing XAML child elements of XAML representations of the attributed type.">Indica qué propiedad de un tipo es la propiedad de contenido XAML. Un procesador XAML usa esta información al procesar elementos secundarios XAML de representaciones XAML del tipo con atributos.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class, by using the specified name.">Inicializa una instancia nueva de la clase <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> con el nombre especificado.</summary>
      <param name="name" vsli:raw="The property name for the property that is the content property.">Nombre de la propiedad de contenido.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is the content property.">Obtiene el nombre de la propiedad que es la propiedad de contenido.</summary>
      <returns vsli:raw="The name of the property that is the content property.">El nombre de la propiedad que es la propiedad de contenido.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentWrapperAttribute">
      <summary vsli:raw="Specifies one or more types on the associated collection type that will be used to wrap foreign content.">Especifica uno o varios tipos en el tipo de colección asociado que se usará para encapsular el contenido externo.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />.</summary>
      <param name="contentWrapper" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is declared as a content wrapper for the collection type.">
        <see cref="T:System.Type" /> que se declara como contenedor de contenido del tipo de colección.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper">
      <summary vsli:raw="Gets the type that is declared as a content wrapper for the collection type associated with this attribute.">Obtiene el tipo declarado como contenedor de contenido del tipo de colección asociado a este atributo.</summary>
      <returns vsli:raw="The type that is declared as a content wrapper for the collection type.">Tipo declarado como contenedor de contenido del tipo de colección.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; is equivalent this &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; by comparing the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties.">Determina si la clase <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> especificada equivale a esta clase <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> comparando las propiedades de <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; to compare.">
        <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> que se va comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si las propiedades de <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" /> son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">Obtiene un código hash para esta instancia.</summary>
      <returns vsli:raw="An integer hash code.">Código hash de un entero.</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this attribute.">Obtiene un identificador único para este atributo.</summary>
      <returns vsli:raw="A unique identifier for the attribute.">Identificador único del atributo.</returns>
    </member>
    <member name="T:System.Windows.Markup.DateTimeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Convierte instancias de <see cref="T:System.String" /> en y desde instancias de <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DateTimeValueSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.DateTimeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Determina si la <see cref="T:System.String" /> especificada puede convertirse en una instancia de <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">Cadena que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor se puede convertir; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified object can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina si el objeto especificado se puede convertir a <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objeto que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="value" /> se puede convertir a <see cref="T:System.String" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Convierte <see cref="T:System.String" /> a <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Cadena que se va a convertir en una instancia de <see cref="T:System.DateTime" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Una nueva instancia de <see cref="T:System.DateTime" /> según el parámetro <paramref name="value" /> proporcionado.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte una instancia de <see cref="T:System.DateTime" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objeto que se va a convertir en una cadena.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Representación de cadena del objeto <see cref="T:System.DateTime" /> especificado.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; or is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> no es <see cref="T:System.DateTime" /> o es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.DependsOnAttribute">
      <summary vsli:raw="Indicates that the attributed property is dependent on the value of another property.">Indica que la propiedad con atributos depende del valor de otra propiedad.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <param name="name" vsli:raw="The property that the property associated with this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; depends on.">Propiedad de la que depende la propiedad asociada con este atributo <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</param>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.Name">
      <summary vsli:raw="Gets the name of the related property declared in this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">Obtiene el nombre de la propiedad relacionada que se declara en este atributo <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns vsli:raw="The name of the related property.">Nombre de la propiedad relacionada.</returns>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">Obtiene un identificador único para este atributo <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns vsli:raw="The unique identifier.">Identificador único.</returns>
    </member>
    <member name="T:System.Windows.Markup.DictionaryKeyPropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the implicit key value. Implicit keys are used for keys rather than explicit &lt;see langword=&quot;x:Key&quot; /&gt; attributes defined in XAML for an item in &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; collections.">Especifica una propiedad de la clase asociada que proporciona el valor de clave implícita. Las claves implícitas se usan para las claves en lugar de los atributos <see langword="x:Key" /> explícitos definidos en XAML para un elemento de las colecciones <see cref="T:System.Collections.IDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DictionaryKeyPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DictionaryKeyPropertyAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.DictionaryKeyPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property that provides the implicit key value.">Nombre de la propiedad que proporciona el valor de clave implícito.</param>
    </member>
    <member name="P:System.Windows.Markup.DictionaryKeyPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the implicit key value.">Obtiene el nombre de la propiedad que proporciona el valor de clave implícita.</summary>
      <returns vsli:raw="The name of the property that provides the implicit key value.">Nombre de la propiedad que proporciona el valor de clave implícito.</returns>
    </member>
    <member name="T:System.Windows.Markup.IComponentConnector">
      <summary vsli:raw="Provides markup compile and tools support for named XAML elements and for attaching event handlers to them.">Proporciona compatibilidad con compilación y herramientas de marcado para los elementos XAML con nombre y para adjuntar controladores de evento a dichos elementos.</summary>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
      <summary vsli:raw="Attaches events and names to compiled content.">Asocia eventos y nombres con el contenido compilado.</summary>
      <param name="connectionId" vsli:raw="An identifier token to distinguish calls.">Token de identificador para distinguir las llamadas.</param>
      <param name="target" vsli:raw="The target to connect events and names to.">Destino al que se van a conectar los eventos y nombres.</param>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
      <summary vsli:raw="Loads the compiled page of a component.">Carga la página compilada de un componente.</summary>
    </member>
    <member name="T:System.Windows.Markup.INameScope">
      <summary vsli:raw="Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.">Define un contrato acerca de cómo debe obtenerse acceso a los nombres de los elementos en un determinado ámbito de nombres XAML y cómo debe exigirse la unicidad de los nombres en ese ámbito.</summary>
    </member>
    <member name="M:System.Windows.Markup.INameScope.FindName(System.String)">
      <summary vsli:raw="Returns an object that has the provided identifying name.">Devuelve un objeto que tiene el nombre de identificación proporcionado.</summary>
      <param name="name" vsli:raw="The name identifier for the object being requested.">Identificador del nombre del objeto que se está solicitando.</param>
      <returns vsli:raw="The object, if found. Returns &lt;see langword=&quot;null&quot; /&gt; if no object of that name was found.">El objeto, si se encuentra. Devuelve <see langword="null" /> si no se encuentra ningún objeto con ese nombre.</returns>
    </member>
    <member name="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers the provided name into the current XAML namescope.">Registra el nombre proporcionado en el actual ámbito de nombres XAML.</summary>
      <param name="name" vsli:raw="The name to register.">Nombre que se va a registrar.</param>
      <param name="scopedElement" vsli:raw="The specific element that the provided &lt;paramref name=&quot;name&quot; /&gt; refers to.">Elemento específico al que se refiere el parámetro <paramref name="name" /> proporcionado.</param>
    </member>
    <member name="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
      <summary vsli:raw="Unregisters the provided name from the current XAML namescope.">Anula el registro del nombre proporcionado en el actual ámbito de nombres XAML.</summary>
      <param name="name" vsli:raw="The name to unregister.">Nombre cuyo registro se va a anular.</param>
    </member>
    <member name="T:System.Windows.Markup.INameScopeDictionary">
      <summary vsli:raw="Unifies enumerable, collection, and dictionary support that are useful for exposing a dictionary of names in a XAML namescope.">Unifica compatibilidad de enumeración, colección y diccionario, lo que resulta útil para exponer un diccionario de nombres en un ámbito de nombres XAML.</summary>
    </member>
    <member name="T:System.Windows.Markup.IProvideValueTarget">
      <summary vsli:raw="Represents a service that reports situational object-property relationships for markup extension evaluation.">Representa un servicio que notifica las relaciones situacionales de objetos y propiedades para la evaluación de la extensión de marcado.</summary>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
      <summary vsli:raw="Gets the target object being reported.">Obtiene el objeto de destino que se va a notificar.</summary>
      <returns vsli:raw="The target object being reported.">Objeto de destino que se va a notificar.</returns>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
      <summary vsli:raw="Gets an identifier for the target property being reported.">Obtiene un identificador de la propiedad de destino que se está notificando.</summary>
      <returns vsli:raw="An identifier for the target property being reported.">Identificador de la propiedad de destino que se está notificando.</returns>
    </member>
    <member name="T:System.Windows.Markup.IQueryAmbient">
      <summary vsli:raw="Queries for whether a specified property should be treated as ambient in the current scope.">Consulta si una propiedad especificada debe tratarse como de ambiente en el ámbito actual.</summary>
    </member>
    <member name="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)">
      <summary vsli:raw="Queries for whether a specified named property can be considered ambient in the current scope.">Consulta si una propiedad con nombre especificada se puede considerar como de ambiente en el ámbito actual.</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for ambience state.">Nombre de la propiedad cuyo estado ambiente se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the requested property can be considered ambient; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la propiedad solicitada se puede considerar como de ambiente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.IUriContext">
      <summary vsli:raw="Represents a service that can use application context to resolve a provided relative URI to an absolute URI.">Representa un servicio que puede usar el contexto de la aplicación para resolver un identificador URI relativo proporcionado como un URI absoluto.</summary>
    </member>
    <member name="P:System.Windows.Markup.IUriContext.BaseUri">
      <summary vsli:raw="Gets or sets the base URI of the current application context.">Obtiene o establece el URI base del contexto de la aplicación actual.</summary>
      <returns vsli:raw="The base URI of the application context.">URI base del contexto de la aplicación.</returns>
    </member>
    <member name="T:System.Windows.Markup.IValueSerializerContext">
      <summary vsli:raw="Defines a context that is provided to a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;. The context can be used to enable special cases of serialization or different modes of serialization.">Define el contexto que se proporciona a un serializador <see cref="T:System.Windows.Markup.ValueSerializer" />. El contexto puede usarse para habilitar casos especiales de serialización o diferentes modos de serialización.</summary>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for the given property descriptor.">Obtiene un serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> para el descriptor de propiedades especificado.</summary>
      <param name="descriptor" vsli:raw="The descriptor of the property being converted.">Descriptor de la propiedad que se está convirtiendo.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified property.">Un serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> capaz de serializar la propiedad especificada.</returns>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; associated with the specified type.">Obtiene el serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> asociado al tipo especificado.</summary>
      <param name="type" vsli:raw="The type of the value being converted.">Tipo del valor que se está convirtiendo.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified type.">Un serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> capaz de serializar el tipo especificado.</returns>
    </member>
    <member name="T:System.Windows.Markup.IXamlTypeResolver">
      <summary vsli:raw="Represents a service that resolves from named elements in XAML markup to the appropriate CLR type.">Representa un servicio que resuelve los elementos con nombre en el marcado XAML como el tipo de CLR adecuado.</summary>
    </member>
    <member name="M:System.Windows.Markup.IXamlTypeResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves a named XAML type to the corresponding CLR &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Resuelve un tipo XAML con nombre en el objeto <see cref="T:System.Type" /> de CLR correspondiente.</summary>
      <param name="qualifiedTypeName" vsli:raw="The XAML type name to resolve. The type name is optionally qualified by the prefix for a XML namespace. Otherwise the current default XML namespace is assumed.">Nombre del tipo XAML que se va a resolver. El nombre del tipo se califica opcionalmente con el prefijo de un espacio de nombres XML. De lo contrario, se supone el actual espacio de nombres XML predeterminado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that &lt;paramref name=&quot;qualifiedTypeName&quot; /&gt; resolves to.">
        <see cref="T:System.Type" /> en el que se resuelve <paramref name="qualifiedTypeName" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtension">
      <summary vsli:raw="Provides a base class for XAML markup extension implementations that can be supported by .NET XAML Services and other XAML readers and XAML writers.">Proporciona una clase base para las implementaciones de extensión de marcado XAML que pueden admitir los servicios XAML de .NET Framework, y otros lectores y sistemas de escritura XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of a class derived from &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Inicializa una nueva instancia de una clase derivada de <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.">Cuando se implementa en una clase derivada, devuelve un objeto que se proporciona como el valor de la propiedad de destino para esta extensión de marcado.</summary>
      <param name="serviceProvider" vsli:raw="A service provider helper that can provide services for the markup extension.">Asistente del proveedor de servicios que puede prestar servicios para la extensión de marcado.</param>
      <returns vsli:raw="The object value to set on the property where the extension is applied.">Valor de objeto que se va a establecer en la propiedad a la que se aplica la extensión.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute">
      <summary vsli:raw="Reports the bracket characters that a markup extension can return.">Informa de los corchetes que puede devolver una extensión de marcado.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.#ctor(System.Char,System.Char)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute&quot; /&gt; class using the provided characters.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute" /> con los caracteres proporcionados.</summary>
      <param name="openingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the opening bracket character.">
        <see cref="T:System.Char" /> que define el corchete de apertura.</param>
      <param name="closingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the closing bracket character.">Un objeto <see cref="T:System.Char" /> que define el corchete de cierre.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.ClosingBracket">
      <summary vsli:raw="Specifies the character to be used as the closing delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Especifica el carácter que se va a usar como delimitador de cierre en una clase <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">Elemento <see cref="T:System.Char" /> que representa el carácter.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.OpeningBracket">
      <summary vsli:raw="Specifies the character to be used as the opening delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Especifica el carácter que se va a usar como delimitador de apertura en una clase <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">Elemento <see cref="T:System.Char" /> que representa el carácter.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
      <summary vsli:raw="Reports the type that a markup extension can return.">Especifica el tipo que una extensión de marcado puede devolver.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> utilizando el <see cref="T:System.Type" /> proporcionado.</summary>
      <param name="returnType" vsli:raw="The return type that this attribute reports.">Tipo de valor devuelto que este atributo notifica.</param>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Deprecated; do not use.">En desuso, no lo use.</summary>
      <param name="returnType" vsli:raw="The return type that this  .NET Framework attribute reports.">Tipo de valor devuelto que notifica Atributo de .NET Framework.</param>
      <param name="expressionType" vsli:raw="Deprecated; do not use.">En desuso, no lo use.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
      <summary vsli:raw="Deprecated; do not use.">En desuso, no lo use.</summary>
      <returns vsli:raw="Deprecated; do not use.">En desuso, no lo use.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; return type that this .NET Framework attribute reports.">Obtiene el tipo de valor devuelto de <see cref="T:System.Windows.Markup.MarkupExtension" /> que notifica este Atributo de .NET Framework.</summary>
      <returns vsli:raw="The type-safe return type of the specific &lt;see cref=&quot;M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)&quot; /&gt; implementation of the markup extension where the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; .NET Framework attribute is applied.">El tipo de valor devuelto con seguridad de la implementación de <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> específica de la extensión de marcado donde se aplica <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> Atributo de .NET Framework .</returns>
    </member>
    <member name="T:System.Windows.Markup.MemberDefinition">
      <summary vsli:raw="Provides the base class that is used for a markup technique of defining members of a class in declarative XAML.">Proporciona la clase base de una técnica de marcado para definir los miembros de una clase en XAML declarativo.</summary>
    </member>
    <member name="M:System.Windows.Markup.MemberDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MemberDefinition&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.MemberDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.MemberDefinition.Name">
      <summary vsli:raw="When implemented in a derived class, gets or sets the name of the member to define.">Cuando se implementa en una clase derivada, obtiene o establece el nombre del miembro que se va a definir.</summary>
      <returns vsli:raw="The name of the member to define.">Nombre del miembro que se va a definir.</returns>
    </member>
    <member name="T:System.Windows.Markup.NameReferenceConverter">
      <summary vsli:raw="Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph.">Proporciona la conversión de tipos para convertir un nombre de cadena en una referencia al objeto con ese nombre o para devolver el nombre de un objeto de un gráfico de objetos.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameReferenceConverter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.NameReferenceConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an object of one type to another object.">Devuelve un valor que indica si este convertidor puede convertir un objeto de un tipo en otro objeto.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you want to convert from.">
        <see cref="T:System.Type" /> que representa el tipo desde el que se quiere convertir.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns a value that indicates whether the converter can convert an object to the specified destination type.">Devuelve un valor que indica si el convertidor puede convertir un objeto en el tipo de destino especificado.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="destinationType" vsli:raw="The type to convert to.">Tipo al que se va a convertir.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el convertidor puede realizar la conversión; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided object to another object, using the specified context and culture information.">Convierte el objeto proporcionado en otro objeto usando el contexto y la información de referencia cultural especificados.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">
        <see cref="T:System.Globalization.CultureInfo" /> que se va a usar como referencia cultural actual.</param>
      <param name="value" vsli:raw="The reference name string to convert.">Cadena de nombre de referencia que se va a convertir.</param>
      <returns vsli:raw="The returned object, which is potentially any object that is type-mapped in the relevant backing assemblies and capable of being declared in XAML with a XAML name reference.">Objeto devuelto, que puede ser cualquier objeto al que se asigne un tipo en los ensamblados de respaldo pertinentes y que pueda declararse en XAML con una referencia de nombre XAML.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is a null string or empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service is missing or invalid.">El valor de <paramref name="value" /> es una cadena null o una cadena vacía.
O bien
El servicio <see cref="T:System.Xaml.IXamlNameResolver" /> falta o no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="context" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type. This is intended to return XAML reference names for objects in an object graph.">Convierte un objeto al tipo especificado. Sirve para devolver nombres de referencia XAML para los objetos de un gráfico de objetos.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">
        <see cref="T:System.Globalization.CultureInfo" /> que se va a utilizar como la referencia cultural actual.</param>
      <param name="value" vsli:raw="The object to retrieve the reference name for.">Objeto cuyo nombre de referencia se va a recuperar.</param>
      <param name="destinationType" vsli:raw="The type to return. You should always reference the &lt;see cref=&quot;T:System.String&quot; /&gt; type.">Tipo que se devuelve. Siempre se debe hacer referencia al tipo <see cref="T:System.String" />.</param>
      <returns vsli:raw="The reference name of the input &lt;paramref name=&quot;value&quot; /&gt; object.">Nombre de referencia del objeto <paramref name="value" /> de entrada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;T:System.Xaml.IXamlNameProvider&quot; /&gt; service is missing or invalid.">El servicio <see cref="T:System.Xaml.IXamlNameProvider" /> falta o no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="context" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.NameScopePropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the XAML namescope value.">Especifica una propiedad de la clase asociada que proporciona el valor del ámbito de nombres XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the property on the attributed type that provides the XAML namescope.">Nombre de la propiedad del tipo con atributos que proporciona el ámbito de nombres XAML.</param>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name and type.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> con el nombre y el tipo especificados.</summary>
      <param name="name" vsli:raw="The name of the attachable member that provides the XAML name scope.">Nombre del miembro que se puede adjuntar y que proporciona el ámbito de nombres XAML.</param>
      <param name="type" vsli:raw="The owner type of the attachable member that provides the XAML name scope.">Tipo propietario del miembro que se puede adjuntar y que proporciona el ámbito de nombres XAML.</param>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the XAML namescope.">Obtiene el nombre de la propiedad que proporciona el ámbito de nombres XAML.</summary>
      <returns vsli:raw="A string value that is the name of the property that provides the XAML namescope.">Valor de cadena que es el nombre de la propiedad que proporciona el ámbito de nombres XAML.</returns>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Type">
      <summary vsli:raw="Gets the owner type of the attached property that provides the XAML namescope support.">Obtiene el tipo de propietario de la propiedad adjunta que proporciona la compatibilidad con el ámbito de nombres de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; value that is the owner type of the attached property that provides the XAML namescope support, or &lt;see langword=&quot;null&quot; /&gt;.">Valor <see cref="T:System.Type" /> que es el tipo de propietario de la propiedad adjunta que proporciona la compatibilidad con el ámbito de nombres de XAML o <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.NullExtension">
      <summary vsli:raw="Implements a XAML markup extension in order to return a null object, which you can use to explicitly set values to null in XAML.">Implementa una extensión de marcado XAML para que se devuelva un objeto null, que se puede usar para establecer explícitamente valores en null en XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NullExtension&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.NullExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Provides &lt;see langword=&quot;null&quot; /&gt; to use as a value as the output of this markup extension.">Proporciona el valor <see langword="null" /> para usarlo como salida de esta extensión de marcado.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension implementation.">Objeto que puede proporcionar servicios para la implementación de la extensión de marcado.</param>
      <returns vsli:raw="A null reference.">Referencia nula.</returns>
    </member>
    <member name="T:System.Windows.Markup.PropertyDefinition">
      <summary vsli:raw="Supports a markup technique of defining properties of a class in declarative XAML.">Admite una técnica de marcado para definir las propiedades de una clase en XAML declarativo.</summary>
    </member>
    <member name="M:System.Windows.Markup.PropertyDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Attributes">
      <summary vsli:raw="Gets a list of associated CLR attributes.">Obtiene una lista de atributos CLR asociados.</summary>
      <returns vsli:raw="A list of associated attributes.">Lista de atributos asociados.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Modifier">
      <summary vsli:raw="Gets or sets the access level of the defined property.">Obtiene o establece el nivel de acceso de la propiedad definida.</summary>
      <returns vsli:raw="The access level of the defined property, as a string.">Nivel de acceso de la propiedad definida, en forma de cadena.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Name">
      <summary vsli:raw="Gets or sets the name of the property to define.">Obtiene o establece el nombre de la propiedad que se va a definir.</summary>
      <returns vsli:raw="The name of the property to define.">Nombre de la propiedad que se va a definir.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Type">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the property to define.">Obtiene o establece el identificador <see cref="T:System.Xaml.XamlType" /> de la propiedad que se va a definir.</summary>
      <returns vsli:raw="The XAML type identifier of the property to define.">Identificador del tipo XAML de la propiedad que se va a definir.</returns>
    </member>
    <member name="T:System.Windows.Markup.Reference">
      <summary vsli:raw="Implements the &lt;c&gt;{x:Reference}&lt;/c&gt; markup extension.">Implementa la extensión de marcado <c>{x:Reference}</c>.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.Reference" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class with the &lt;paramref name=&quot;name&quot; /&gt; argument.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.Reference" /> con el argumento <paramref name="name" />.</summary>
      <param name="name" vsli:raw="The XAML name of the element to reference.">Nombre XAML del elemento al que se va a hacer referencia.</param>
    </member>
    <member name="P:System.Windows.Markup.Reference.Name">
      <summary vsli:raw="Gets or sets the XAML name to obtain the reference for.">Obtiene o establece el nombre XAML del que se van a obtener referencias.</summary>
      <returns vsli:raw="The XAML name of the element to obtain the reference for.">Nombre XAML del elemento del que se van a obtener referencias.</returns>
    </member>
    <member name="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that is the value of the target property. For the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; type, this is the object that the provided &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; references.">Devuelve un objeto que es el valor de la propiedad de destino. Para el tipo <see cref="T:System.Windows.Markup.Reference" />, este es el objeto de las referencias de <see cref="P:System.Windows.Markup.Reference.Name" /> proporcionadas.</summary>
      <param name="serviceProvider" vsli:raw="A class that implements the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.">Clase que implementa el servicio <see cref="T:System.Xaml.IXamlNameResolver" />.</param>
      <returns vsli:raw="The value of the target property. This is potentially any object that is type-mapped in the relevant backing assemblies.">Valor de la propiedad de destino. Puede ser cualquier objeto al que se asigne un tipo en los ensamblados de respaldo pertinentes.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; value does not implement the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; value has not been set through construction or positional usage.">El valor <paramref name="serviceProvider" /> no implementa el servicio <see cref="T:System.Xaml.IXamlNameResolver" />.
O bien
El valor <see cref="P:System.Windows.Markup.Reference.Name" /> no se ha establecido a través de la construcción o uso posicional.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceProvider" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.RootNamespaceAttribute">
      <summary vsli:raw="Represents an assembly level attribute that is used to identify the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Representa un atributo de nivel de ensamblado que se usa para identificar el valor de la propiedad <see langword="RootNamespace" /> de un archivo de proyecto de Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Markup.RootNamespaceAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RootNamespaceAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.RootNamespaceAttribute" />.</summary>
      <param name="nameSpace" vsli:raw="The root namespace value.">Valor del espacio de nombres raíz.</param>
    </member>
    <member name="P:System.Windows.Markup.RootNamespaceAttribute.Namespace">
      <summary vsli:raw="Gets the string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Obtiene la cadena que se corresponde con el valor de la propiedad <see langword="RootNamespace" /> de un archivo de proyecto de Visual Studio.</summary>
      <returns vsli:raw="The string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Cadena que corresponde al valor de la <see langword="RootNamespace" /> propiedad en un archivo de proyecto de Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
      <summary vsli:raw="Represents a type-level attribute that reports which property of the type maps to the XAML x:Name attribute.">Representa un atributo de nivel de tipo que indica qué propiedad del tipo se asigna al atributo x:Name de XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property to use as the &lt;see langword=&quot;x:Name&quot; /&gt; equivalent of the class.">Nombre de la propiedad que se va a usar como equivalente del atributo <see langword="x:Name" /> de la clase.</param>
    </member>
    <member name="P:System.Windows.Markup.RuntimeNamePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the runtime name property that is specified by this &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt;.">Obtiene el nombre de la propiedad de nombre en tiempo de ejecución que especifica <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <returns vsli:raw="The name of the property.">Nombre de la propiedad.</returns>
    </member>
    <member name="T:System.Windows.Markup.StaticExtension">
      <summary vsli:raw="Implements a markup extension that returns static field and property references.">Implementa una extensión de marcado que devuelve referencias estáticas de propiedades y campos.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.StaticExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class using the provided &lt;paramref name=&quot;member&quot; /&gt; string.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.StaticExtension" /> utilizando la cadena <paramref name="member" /> proporcionada.</summary>
      <param name="member" vsli:raw="A string that identifies the member to make a reference to. This string uses the format &lt;c&gt;prefix:typeName.fieldOrPropertyName&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference static values that are not mapped to the default XAML namespace.">Cadena que identifica el miembro al que se va a hacer referencia. Esta cadena usa el formato <c>prefix:typeName.fieldOrPropertyName</c>. <c>prefix</c> es el prefijo de asignación de un espacio de nombres XAML y solo es necesario para hacer referencia a valores estáticos que no están asignados al espacio de nombres XAML predeterminado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.Member">
      <summary vsli:raw="Gets or sets a member name string that is used to resolve a static field or property based on the service-provided type resolver.">Obtiene o establece una cadena de nombre de miembro que se usa para resolver un campo estático o una propiedad estática basándose en la resolución de tipos proporcionada por el servicio.</summary>
      <returns vsli:raw="A string that identifies the member to make a reference to.">Cadena que identifica el miembro al que se va a hacer referencia.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.Member&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">Se intentó establecer <see cref="P:System.Windows.Markup.StaticExtension.Member" /> en <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.MemberType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">Obtiene o establece el objeto <see cref="T:System.Type" /> que define el miembro estático que se va a devolver.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">
        <see cref="T:System.Type" /> que define el miembro estático que se va a devolver.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.MemberType&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">Se intentó establecer <see cref="P:System.Windows.Markup.StaticExtension.MemberType" /> en <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object value to set on the property where you apply this extension. For &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt;, the return value is the static value that is evaluated for the requested static member.">Devuelve el valor de objeto que se va a establecer en la propiedad donde se aplica esta extensión. Para <see cref="T:System.Windows.Markup.StaticExtension" />, el valor devuelto es el valor estático que se evalúa para el miembro estático solicitado.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension. The service provider is expected to provide a service that implements a type resolver (&lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;).">Objeto que puede proporcionar servicios para la extensión de marcado. Se espera que el proveedor de servicios proporcione un servicio que implemente una resolución de tipos (<see cref="T:System.Windows.Markup.IXamlTypeResolver" />).</param>
      <returns vsli:raw="The static value to set on the property where the extension is applied.">Valor estático que se va a establecer en la propiedad donde se aplica la extensión.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt; at the time of evaluation.">El valor de <paramref name="member" /> para la extensión es <see langword="null" /> en el momento de la evaluación.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;member&quot; /&gt; string did not parse properly  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;member&quot; /&gt; value did not resolve to a static member.">Alguna parte de la cadena <paramref name="member" /> no se analizó correctamente.
o bien
<paramref name="serviceProvider" /> no proporcionó un servicio para <see cref="T:System.Windows.Markup.IXamlTypeResolver" />
o bien
El valor de <paramref name="member" /> no se resolvió como un miembro estático.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceProvider" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute">
      <summary vsli:raw="Indicates to XAML processors that the whitespace surrounding elements of the type in markup should be trimmed when serializing.">Indica a los procesadores XAML que el espacio en blanco que rodea los elementos del tipo en el marcado debe recortarse al serializar.</summary>
    </member>
    <member name="M:System.Windows.Markup.TrimSurroundingWhitespaceAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.TypeExtension">
      <summary vsli:raw="Implements a markup extension that returns a &lt;see cref=&quot;T:System.Type&quot; /&gt; based on a string input.">Implementa una extensión de marcado que devuelve un <see cref="T:System.Type" /> basado en una entrada de cadena.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.TypeExtension" /> .</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, initializing the &lt;see cref=&quot;P:System.Windows.Markup.TypeExtension.TypeName&quot; /&gt; value based on the provided &lt;paramref name=&quot;typeName&quot; /&gt; string.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.TypeExtension" />, que inicializa los valores de <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> basados en la cadena <paramref name="typeName" /> proporcionada.</summary>
      <param name="typeName" vsli:raw="A string that identifies the type to make a reference to. This string uses the format &lt;c&gt;prefix:className&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference types that are not mapped to the default XAML namespace.">Cadena que identifica el tipo al que se va a hacer referencia. Esta cadena usa el formato <c>prefix:className</c>. <c>prefix</c> es el prefijo de asignación de un espacio de nombres XAML y solo es necesario para hacer referencia a tipos que no están asignados al espacio de nombres XAML predeterminado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to specify &lt;paramref name=&quot;typeName&quot; /&gt; as &lt;see langword=&quot;null&quot; /&gt;.">Intentó especificar <paramref name="typeName" /> como <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, declaring the type directly.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.TypeExtension" />, que declara el tipo directamente.</summary>
      <param name="type" vsli:raw="The type to be represented by this &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt;.">Tipo que se representará mediante este <see cref="T:System.Windows.Markup.TypeExtension" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="type" /> es <see langword="null" /></exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that should be set on the property where this extension is applied. For &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; , this is the &lt;see cref=&quot;T:System.Type&quot; /&gt; value as evaluated for the requested type name.">Devuelve un objeto que se debe establecer en la propiedad donde se aplique esta extensión. Para <see cref="T:System.Windows.Markup.TypeExtension" />, se trata del valor <see cref="T:System.Type" /> tal y como se evalúa para el nombre del tipo solicitado.</summary>
      <param name="serviceProvider" vsli:raw="Object that can provide services for the markup extension. The provider is expected to provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;.">Objeto que puede ofrecer servicios para la extensión de marcado. Se espera que el proveedor ofrezca un servicio para <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to set on the property where the extension is applied.">Valor <see cref="T:System.Type" /> que se establecerá en la propiedad a la que se aplique la extensión.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="member" /> de la extensión es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;typeName&quot; /&gt; string did not parse properly.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;typeName&quot; /&gt; value did not resolve to a type.">Parte de la cadena <paramref name="typeName" /> no se analizó correctamente.
o bien
<paramref name="serviceProvider" /> no proporcionó ningún servicio para <see cref="T:System.Windows.Markup.IXamlTypeResolver" />
o bien
El valor <paramref name="typeName" /> no se resolvió como un tipo.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="serviceProvider" /> es <see langword="null" /></exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.Type">
      <summary vsli:raw="Gets or sets the type information for this extension.">Obtiene o establece la información de tipo de esta extensión.</summary>
      <returns vsli:raw="The established type. For runtime purposes, this may be &lt;see langword=&quot;null&quot; /&gt; for get access, but cannot be set to &lt;see langword=&quot;null&quot; /&gt;.">Tipo establecido. Para el tiempo de ejecución, puede ser <see langword="null" /> para obtener acceso, pero no puede establecerse en <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">Se intentó establecer en <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.TypeName">
      <summary vsli:raw="Gets or sets the type name represented by this markup extension.">Obtiene o establece el nombre del tipo representado por esta extensión de marcado.</summary>
      <returns vsli:raw="A string that identifies the type. This string uses the format prefix&lt;c&gt;:&lt;/c&gt;className. (prefix is the mapping prefix for an XML namespace and is only required to reference types that are not mapped to the default XML namespace for WPF (&lt;c&gt;http://schemas.microsoft.com/winfx/2006/xaml/presentation&lt;/c&gt;).">Cadena que identifica el tipo. Esta cadena usa el formato prefix<c>:</c>className. (prefix es el prefijo de asignación de un espacio de nombres XML y solo es necesario para hacer referencia a tipos que no están asignados al espacio de nombres XML predeterminado para WPF (<c>http://schemas.microsoft.com/winfx/2006/xaml/presentation</c>).</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">Se intentó establecer en <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.UidPropertyAttribute">
      <summary vsli:raw="Indicates the CLR property of a class that provides the x:Uid Directive value.">Indica la propiedad CLR de una clase que proporciona el valor de directiva x:Uid.</summary>
    </member>
    <member name="M:System.Windows.Markup.UidPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UidPropertyAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.UidPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property that provides the &lt;see langword=&quot;x:Uid&quot; /&gt; value.">Nombre de la propiedad que proporciona el valor <see langword="x:Uid" />.</param>
    </member>
    <member name="P:System.Windows.Markup.UidPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the CLR property that represents the x:Uid Directive value.">Obtiene el nombre de la propiedad CLR que representa el valor de directiva x:Uid.</summary>
      <returns vsli:raw="The name of the CLR property that represents x:Uid Directive.">Nombre de la propiedad CLR que representa el valor x:Uid (Directiva).</returns>
    </member>
    <member name="T:System.Windows.Markup.UsableDuringInitializationAttribute">
      <summary vsli:raw="Indicates whether this type is built top-down during XAML object graph creation.">Indica si este tipo se compila de arriba a abajo durante la creación de gráficos de objetos XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UsableDuringInitializationAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" />.</summary>
      <param name="usable" vsli:raw="Defines whether the associated class is usable during initialization.">Define si la clase asociada puede usarse durante la inicialización.</param>
    </member>
    <member name="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable">
      <summary vsli:raw="Gets a value that indicates whether the associated class is usable during initialization.">Obtiene un valor que indica si la clase asociada se puede usar durante la inicialización.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated class is usable during initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la clase asociada se puede usar durante la inicialización; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializer">
      <summary vsli:raw="Abstract class that defines conversion behavior for serialization from an object representation.">Es una clase abstracta que define el comportamiento de conversión de la serialización de una representación de objeto.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">Si se reemplaza en una clase derivada, determina si el elemento <see cref="T:System.String" /> especificado se puede convertir en una instancia del tipo que admite la implementación de <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">Cadena que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor se puede convertir; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified object can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Si se reemplaza en una clase derivada, determina si el objeto especificado se puede convertir en una <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objeto que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> se puede convertir en <see cref="T:System.String" />; en caso contrario, <see langword="false." />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">Si se reemplaza en una clase derivada, convierte una <see cref="T:System.String" /> en una instancia del tipo que la implementación de <see cref="T:System.Windows.Markup.ValueSerializer" /> admite.</summary>
      <param name="value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A new instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nueva instancia del tipo que la implementación de <see cref="T:System.Windows.Markup.ValueSerializer" /> admite basada en el <paramref name="value" /> proporcionado.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> no se puede convertir.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts the specified object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Si se reemplaza en una clase derivada, convierte el objeto especificado en una <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objeto que se va a convertir en una cadena.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A string representation of the specified object.">Una representación de cadena del objeto.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> no se puede convertir.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">Devuelve una excepción que se va a producir cuando no puede realizarse una conversión.</summary>
      <param name="value" vsli:raw="The object that could not be converted.">Objeto que no se pudo convertir.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertFrom&quot; /&gt; conversion cannot be performed.">Objeto <see cref="T:System.Exception" /> de la excepción que se va a iniciar cuando no se pueda realizar una conversión <see langword="ConvertFrom" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">Devuelve una excepción que se va a producir cuando no puede realizarse una conversión.</summary>
      <param name="value" vsli:raw="The object that could not be converted.">Objeto que no se pudo convertir.</param>
      <param name="destinationType" vsli:raw="A type that represents the type the conversion was trying to convert to.">Tipo que representa el tipo al que se intenta convertir.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertTo&quot; /&gt; conversion cannot be performed.">Objeto <see cref="T:System.Exception" /> de la excepción que se va a iniciar cuando no se pueda realizar una conversión <see langword="ConvertTo" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for a property, by passing a CLR property descriptor for the property.">Obtiene el serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado de una propiedad pasando un descriptor de propiedad de CLR para la propiedad.</summary>
      <param name="descriptor" vsli:raw="The CLR property descriptor for the property to be serialized.">Descriptor de propiedad CLR para la propiedad que se va a serializar.</param>
      <returns vsli:raw="The serializer associated with the specified property. May return &lt;see langword=&quot;null&quot; /&gt;.">El serializador asociado con la propiedad especificada. Puede devolver <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="descriptor" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified property, using the specified context.">Obtiene el serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para la propiedad especificada, utilizando el contexto especificado.</summary>
      <param name="descriptor" vsli:raw="Descriptor for the property to be serialized.">Descriptor de la propiedad que se va a serializar.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="The serializer associated with the specified property.">El serializador asociado con la propiedad especificada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="descriptor" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type.">Obtiene el serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para el tipo especificado.</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">Tipo para el que se va a obtener el serializador <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <returns vsli:raw="The serializer associated with the specified type. May return &lt;see langword=&quot;null&quot; /&gt;.">El serializador asociado con el tipo especificado. Puede devolver <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type, using the specified context.">Obtiene el serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para el tipo especificado que utiliza el contexto indicado.</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">Tipo para el que se va a obtener el serializador <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="The serializer associated with the specified type.">El serializador asociado con el tipo especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets an enumeration of the types referenced by the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">Obtiene una enumeración de los tipos a los que hace referencia <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value" vsli:raw="The value being serialized.">Valor que se está serializando.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="The types converted by this serializer.">Los tipos convertidos por este serializador.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializerAttribute">
      <summary>Identifica la clase <see cref="T:System.Windows.Markup.ValueSerializer" /> que un tipo o una propiedad deben usar cuando se serializa.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> utilizando la cadena de nombre de tipo cualificado de ensamblado.</summary>
      <param name="valueSerializerTypeName">Cadena de nombre de tipo cualificado de ensamblado para la clase <see cref="T:System.Windows.Markup.ValueSerializer" /> que se va a usar.</param>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> usando el tipo especificado.</summary>
      <param name="valueSerializerType">Tipo que representa el tipo de la clase <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerType">
      <summary>Obtiene el tipo de la clase <see cref="T:System.Windows.Markup.ValueSerializer" /> indicada por este atributo.</summary>
      <returns>Tipo de la propiedad <see cref="T:System.Windows.Markup.ValueSerializer" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerTypeName">
      <summary>Obtiene el nombre calificado con el ensamblado del tipo <see cref="T:System.Windows.Markup.ValueSerializer" /> correspondiente a este tipo o esta propiedad.</summary>
      <returns>Nombre calificado del ensamblado de este tipo.</returns>
    </member>
    <member name="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute">
      <summary vsli:raw="Indicates that a collection type should be processed as being whitespace significant by a XAML processor.">Indica que un procesador XAML debe procesar un tipo de colección como una colección con espacio en blanco significativo.</summary>
    </member>
    <member name="M:System.Windows.Markup.WhitespaceSignificantCollectionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlDeferLoadAttribute">
      <summary vsli:raw="Indicates that a class or property has a deferred load usage for XAML (such as a template behavior), and reports the class that enables the deferring behavior and its destination/content type.">Indica que una clase o propiedad usa la carga aplazada para XAML (como el comportamiento de una plantilla) e informa de la clase que habilita el comportamiento de carga aplazada así como el tipo de contenido/destino.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using string names of types.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" />, usando nombres de cadena de los tipos.</summary>
      <param name="loaderType" vsli:raw="The string name of the type for the implementation to use for the defer load behavior.">Nombre de cadena del tipo para la implementación que se va a usar para el comportamiento de carga aplazada.</param>
      <param name="contentType" vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">Nombre de cadena del tipo de contenido/destino del comportamiento de carga aplazada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loaderType" /> o <paramref name="contentType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; values.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" />, usando valores de <see cref="T:System.Type" /> de CLR.</summary>
      <param name="loaderType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Valor de <see cref="T:System.Type" /> de CLR para la implementación que se va a usar para el comportamiento de carga aplazada.</param>
      <param name="contentType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Valor de <see cref="T:System.Type" /> de CLR para el tipo de contenido/destino del comportamiento de carga aplazada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loaderType" /> o <paramref name="contentType" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Obtiene el valor de <see cref="T:System.Type" /> de CLR para el tipo de contenido/destino del comportamiento de carga aplazada.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Valor de <see cref="T:System.Type" /> de CLR para el tipo de contenido/destino del comportamiento de carga aplazada.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentTypeName">
      <summary vsli:raw="Gets the string name of the type for the implementation to use for the defer load behavior.">Obtiene el nombre de cadena del tipo para la implementación que se va a usar para el comportamiento de carga aplazada.</summary>
      <returns vsli:raw="The string name of the type for the converter to use for the defer load behavior.">Nombre de cadena del tipo para el convertidor que se va a usar para el comportamiento de carga aplazada.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Obtiene el valor de <see cref="T:System.Type" /> de CLR para la implementación que se va a usar para el comportamiento de carga aplazada.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Valor de <see cref="T:System.Type" /> de CLR para la implementación que se va a usar para el comportamiento de carga aplazada.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderTypeName">
      <summary vsli:raw="Gets the string name of the type for the destination/content type of the defer load behavior.">Obtiene el nombre de cadena del tipo de contenido/destino del comportamiento de carga aplazada.</summary>
      <returns vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">Nombre de cadena del tipo de contenido/destino del comportamiento de carga aplazada.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute">
      <summary vsli:raw="Indicates that a class can use a markup extension to provide a value, and references a handler to use for markup extension set operations.">Indica que una clase puede usar una extensión de marcado para proporcionar un valor y hace referencia a un controlador que se va a usar en las operaciones de establecimiento de extensión de marcado.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />.</summary>
      <param name="xamlSetMarkupExtensionHandler" vsli:raw="The name of the handler to use for markup extension set operations.">Nombre del controlador que se va a usar en las operaciones de establecimiento de extensión de marcado.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandler">
      <summary vsli:raw="Gets the name of the handler to use for markup extension set operations.">Obtiene el nombre del controlador que se va a usar en las operaciones de establecimiento de extensión de marcado.</summary>
      <returns vsli:raw="The name of the handler to use for markup extension set operations.">Nombre del controlador que se va a usar en las operaciones de establecimiento de extensión de marcado.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML object writer sets a value using a markup extension.">Proporciona datos para las devoluciones de llamada que se invocan cuando un sistema de escritura de objetos XAML establece un valor usando una extensión de marcado.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.#ctor(System.Xaml.XamlMember,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Información sobre el sistema de tipos XAML y esquemas XAML para el miembro que se establece.</param>
      <param name="value" vsli:raw="The markup extension reference to provide for the member being set.">Referencia a la extensión de marcado que se va a proporcionar para el miembro que se establece.</param>
      <param name="serviceProvider" vsli:raw="Service provider information passed to the markup extension.">Información sobre el proveedor de servicios que se pasó a la extensión de marcado.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">Permite invocar una devolución de llamada definida en una clase base del actual tipo activo.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.MarkupExtension">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">Obtiene la referencia al objeto <see cref="T:System.Windows.Markup.MarkupExtension" /> que corresponde al objeto <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <returns vsli:raw="The markup extension reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">Referencia a la extensión de marcado que corresponde a este objeto <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.ServiceProvider">
      <summary vsli:raw="Gets service provider information that was passed to the markup extension.">Obtiene la información sobre el proveedor de servicios que se pasó a la extensión de marcado.</summary>
      <returns vsli:raw="Service provider information that was passed to the markup extension.">Información sobre el proveedor de servicios que se pasó a la extensión de marcado.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterAttribute">
      <summary vsli:raw="Indicates that a class can use a type converter to provide a value, and references a handler to use for type converter setting cases.">Indica que una clase puede utilizar un convertidor de tipos para proporcionar un valor y hace referencia a un controlador que se va a usar para configurar el convertidor de tipos.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <param name="xamlSetTypeConverterHandler" vsli:raw="The name of the handler to use for type converter setting operations.">Nombre del controlador que se va a usar para configurar el convertidor de tipos.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterAttribute.XamlSetTypeConverterHandler">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; initialization value (the handler name) specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">Obtiene el valor de inicialización de <paramref name="xamlSetTypeConverterHandler" /> (nombre de controlador) especificado en el objeto <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; value specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">Valor de <paramref name="xamlSetTypeConverterHandler" /> especificado en el objeto <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML writer sets a value using a type converter call.">Proporciona los datos para las devoluciones de llamada que se invocan cuando un sistema de escritura de XAML establece un valor mediante una llamada del convertidor de tipos.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.#ctor(System.Xaml.XamlMember,System.ComponentModel.TypeConverter,System.Object,System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Información sobre el sistema de tipos XAML y esquemas XAML para el miembro que se establece.</param>
      <param name="typeConverter" vsli:raw="The specific type converter instance being invoked.">La instancia del convertidor de tipo específico que se invoca.</param>
      <param name="value" vsli:raw="The value to provide for the member being set.">Valor que se va a proporcionar para el miembro que se establece.</param>
      <param name="serviceProvider" vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">Información del proveedor de servicios que puede ser utilizada por la clase <paramref name="typeConverter" />.</param>
      <param name="cultureInfo" vsli:raw="Culture information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">Información de la referencia cultural que puede ser utilizada por la clase <paramref name="typeConverter" /> al llamar a <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> y otros métodos.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">Permite invocar una devolución de llamada definida en una clase base del actual tipo activo.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.CultureInfo">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; information that can be used by the type converter class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">Obtiene información <see cref="T:System.Globalization.CultureInfo" /> que puede ser utilizada por la clase del convertidor de tipos al llamar a <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> y otros métodos.</summary>
      <returns vsli:raw="Culture information that can be used by the type converter class.">Información de la referencia cultural que puede ser utilizada por la clase del convertidor de tipos</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.ServiceProvider">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; information that can be used by the type converter class.">Obtiene Información <see cref="T:System.IServiceProvider" /> que puede ser utilizada por la clase del convertidor de tipos.</summary>
      <returns vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">Información del proveedor de servicios que puede ser utilizada por la clase <paramref name="typeConverter" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.TypeConverter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; instance that is invoked and provides type conversion behavior.">Obtiene la instancia <see cref="T:System.ComponentModel.TypeConverter" /> que se invoca y proporciona el comportamiento de la conversión de tipos.</summary>
      <returns vsli:raw="The type converter that provides type conversion behavior.">Convertidor de tipos que ofrece el comportamiento de la conversión de tipos.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetValueEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; sets certain values.">Proporciona los datos de las devoluciones de llamada que se invocan cuando un objeto <see cref="T:System.Xaml.XamlObjectWriter" /> establece ciertos valores.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Información sobre el sistema de tipos XAML y esquemas XAML para el miembro que se establece.</param>
      <param name="value" vsli:raw="The value to provide for the member.">Valor que se va a proporcionar para el miembro.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase">
      <summary vsli:raw="When overridden in a derived class, provides a way to invoke a &lt;see langword=&quot;SetValue&quot; /&gt; callback as defined on a base class of the current acting type.">Cuando se invalida en una clase derivada, proporciona un mecanismo para invocar una devolución de llamada <see langword="SetValue" /> tal y como se define en una clase base del actual tipo activo.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Handled">
      <summary vsli:raw="Gets or sets a value that determines whether a caller that is using the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; can use the values without having to call &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt;.">Obtiene o establece un valor que determina si un llamador que está usando <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> puede usar los valores sin tener que llamar a <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values were useful and calling &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt; is not necessary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los valores fueron útiles y no es necesario llamar a <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Member">
      <summary vsli:raw="Gets XAML type system and XAML schema information for the member being set.">Obtiene información sobre el sistema de tipos XAML y el esquema XAML para el miembro que se va a establecer.</summary>
      <returns vsli:raw="XAML type system and XAML schema information for the member being set.">Información sobre el sistema de tipos XAML y el esquema XAML para el miembro que se va a establecer.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Value">
      <summary vsli:raw="Gets the value to provide for the member being set.">Obtiene el valor que se va a proporcionar para el miembro que se establece.</summary>
      <returns vsli:raw="The value to provide for the member being set.">Valor que se va a proporcionar para el miembro que se establece.</returns>
    </member>
    <member name="T:System.Windows.Markup.XData">
      <summary vsli:raw="Represents literal data that can appear as the value for a &lt;see langword=&quot;Value&quot; /&gt; node.">Representa datos literales que pueden aparecer como el valor de un nodo <see langword="Value" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.XData.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XData" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.XData.Text">
      <summary vsli:raw="Gets or sets the literal value string that this &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; wraps.">Obtiene o establece la cadena de valores literales que este objeto <see cref="T:System.Windows.Markup.XData" /> encapsula.</summary>
      <returns vsli:raw="The literal value string.">Cadena de valores literales.</returns>
    </member>
    <member name="P:System.Windows.Markup.XData.XmlReader">
      <summary vsli:raw="Gets or sets a reader for the literal data.">Obtiene o establece un lector de los datos literales.</summary>
      <returns vsli:raw="A reader for the literal data.">Lector de los datos literales.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlLangPropertyAttribute">
      <summary vsli:raw="Identifies the property to associate with the xml:lang attribute.">Identifica la propiedad que se va asociar al atributo xml:lang.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLangPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlLangPropertyAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XmlLangPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The property name to associate with the &lt;see langword=&quot;xml:lang&quot; /&gt; attribute.">Nombre de propiedad a asociar con el atributo <see langword="xml:lang" />.</param>
    </member>
    <member name="P:System.Windows.Markup.XmlLangPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is specified in this attribute.">Obtiene el nombre de la propiedad que se especifica en este atributo.</summary>
      <returns vsli:raw="The name of the property.">Nombre de la propiedad.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsCompatibleWithAttribute">
      <summary vsli:raw="Specifies that a XAML namespace can be subsumed by another XAML namespace. Typically, the subsuming XAML namespace is indicated in a previously defined &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt;.">Especifica que otro espacio de nombres XAML puede subsumir un espacio de nombres XAML. Normalmente, el espacio de nombres XAML que realiza la inclusión se indica en un objeto <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" /> definido anteriormente.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsCompatibleWithAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsCompatibleWithAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XmlnsCompatibleWithAttribute" />.</summary>
      <param name="oldNamespace" vsli:raw="The reference XAML namespace identifier.">Identificador del espacio de nombres XAML de referencia.</param>
      <param name="newNamespace" vsli:raw="The subsuming XAML namespace identifier.">Identificador del espacio de nombres XAML que subsume.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oldNamespace&quot; /&gt; or &lt;paramref name=&quot;newNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oldNamespace" /> o <paramref name="newNamespace" /> son <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.NewNamespace">
      <summary vsli:raw="Gets the subsuming namespace identifier reported by this attribute.">Obtiene el identificador del espacio de nombres que subsume indicado por este atributo.</summary>
      <returns vsli:raw="The subsuming namespace identifier reported in the attribute.">Identificador del espacio de nombres que subsume indicado en el atributo.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.OldNamespace">
      <summary vsli:raw="Gets the reference namespace identifier reported by this attribute.">Obtiene el identificador del espacio de nombres de referencia indicado por este atributo.</summary>
      <returns vsli:raw="The reference namespace identifier.">Identificador del espacio de nombres de referencia.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
      <summary vsli:raw="Specifies a mapping on a per-assembly basis between a XAML namespace and a CLR namespace, which is then used for type resolution by a XAML object writer or XAML schema context.">Especifica una asignación por ensamblado entre un espacio de nombres XAML y un espacio de nombres CLR, que luego un escritor de objetos XAML o un contexto de esquema XAML usan para la resolución de tipos.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" />.</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">Identificador del espacio de nombres XAML.</param>
      <param name="clrNamespace" vsli:raw="A string that references a CLR namespace name.">Cadena que hace referencia a un espacio de nombres de CLR.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;clrNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlNamespace" /> o <paramref name="clrNamespace" /> son <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly associated with the attribute.">Obtiene o establece el nombre del ensamblado asociado al atributo.</summary>
      <returns vsli:raw="The assembly name.">Nombre del ensamblado.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
      <summary vsli:raw="Gets the string name of the CLR namespace specified in this attribute.">Obtiene el nombre de cadena del espacio de nombres CLR especificado en este atributo.</summary>
      <returns vsli:raw="The CLR namespace, specified as a string.">Espacio de nombres CLR, especificado como una cadena.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier specified in this attribute.">Obtiene el identificador del espacio de nombres XAML especificado en este atributo.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Identificador de espacio de nombres XAML.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
      <summary vsli:raw="Identifies a recommended prefix to associate with a XAML namespace for XAML usage, when writing elements and attributes in a XAML file (serialization) or when interacting with a design environment that has XAML editing features.">Identifica un prefijo recomendado que se va a asociar a un espacio de nombres XAML para uso de XAML al escribir elementos y atributos en un archivo XAML (serialización) o al interactuar con un entorno de diseño que tiene características de edición de XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsPrefixAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" />.</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">Identificador de espacio de nombres XAML.</param>
      <param name="prefix" vsli:raw="The recommended prefix string.">Cadena de prefijo recomendado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;prefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlNamespace" /> o <paramref name="prefix" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
      <summary vsli:raw="Gets the recommended prefix associated with this attribute.">Obtiene el prefijo recomendado asociado a este atributo.</summary>
      <returns vsli:raw="The recommended prefix string.">Cadena de prefijo recomendado.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier associated with this attribute.">Obtiene el identificador del espacio de nombres XAML asociado a este atributo.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Identificador de espacio de nombres XAML.</returns>
    </member>
    <member name="T:System.Xaml.AmbientPropertyValue">
      <summary vsli:raw="Reports information about an ambient property, as part of an &lt;see cref=&quot;T:System.Xaml.IAmbientProvider&quot; /&gt; implementation.">Informa sobre una propiedad de ambiente durante el proceso de implementación de <see cref="T:System.Xaml.IAmbientProvider" />.</summary>
    </member>
    <member name="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.AmbientPropertyValue" />.</summary>
      <param name="property" vsli:raw="The identifier that represents the ambient property.">Identificador que representa la propiedad de ambiente.</param>
      <param name="value" vsli:raw="The value to report.">Valor que se va a notificar.</param>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.RetrievedProperty">
      <summary vsli:raw="Gets the XAML type system identifier (&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;) that represents the ambient property.">Obtiene el identificador del sistema de tipos XAML (<see cref="T:System.Xaml.XamlMember" />) que representa la propiedad de ambiente.</summary>
      <returns vsli:raw="The identifier that represents the ambient property.">Identificador que representa la propiedad de ambiente.</returns>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.Value">
      <summary vsli:raw="Gets the value of the ambient property.">Obtiene el valor de la propiedad de ambiente.</summary>
      <returns vsli:raw="The value of the ambient property.">Valor de la propiedad de ambiente.</returns>
    </member>
    <member name="T:System.Xaml.AttachableMemberIdentifier">
      <summary vsli:raw="Provides a XAML type system identifier representation for attachable members. The identifier structure parallels the &lt;paramref name=&quot;declaringType&quot; /&gt;&lt;see langword=&quot;.&quot; /&gt;&lt;paramref name=&quot;memberName&quot; /&gt; string form for attachable member usage.">Proporciona una representación de identificador del sistema de tipos de XAML para los miembros que se pueden adjuntar. La estructura de identificador sigue el formato de cadena <paramref name="declaringType" /><see langword="." /><paramref name="memberName" /> para uso de miembros que se pueden adjuntar.</summary>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <param name="declaringType" vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component of the identifier, which should match the name of the declaring &lt;see cref=&quot;P:System.Xaml.XamlMember.Type&quot; /&gt;.">Componente <paramref name="declaringType" /> del identificador, que debe coincidir con el nombre de la propiedad <see cref="P:System.Xaml.XamlMember.Type" /> que realiza la declaración.</param>
      <param name="memberName" vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component of the identifier, which should match the &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">Componente <paramref name="memberName" /> del identificador, que debe coincidir con <see cref="P:System.Xaml.XamlMember.Name" />.</param>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.DeclaringType">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Obtiene o establece el valor de componente <paramref name="declaringType" /> de <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Valor de componente <paramref name="declaringType" /> de <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and a specified object have the same value.">Determina si esta instancia de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> y un objeto especificado tienen el mismo valor.</summary>
      <param name="obj" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Objeto que se va a comparar con el objeto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and if its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="obj" /> es un objeto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> y tiene el mismo valor que esta instancia; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether this instance and another specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; object have the same value.">Determina si esta instancia y otro objeto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> especificado tienen el mismo valor.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Objeto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> que se va a comparar con el objeto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the objects have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los objetos tienen el mismo valor; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Devuelve el código hash para esta estructura <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="An integer hash code.">Código hash entero.</returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.MemberName">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Obtiene o establece el valor de componente <paramref name="memberName" /> de <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Valor de componente <paramref name="memberName" /> de <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Equality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have the same value.">Determina si dos objetos <see cref="T:System.Xaml.AttachableMemberIdentifier" /> especificados tienen el mismo valor.</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> o <see langword="null" />.</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; is the same as the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor de <paramref name="left" /> es el mismo que el valor de <paramref name="right" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Inequality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have different values.">Determina si dos objetos <see cref="T:System.Xaml.AttachableMemberIdentifier" /> especificados tienen valores diferentes.</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> o <see langword="null" />.</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; differs from the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor de <paramref name="left" /> difiere del valor de <paramref name="right" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Devuelve una clase <see cref="T:System.String" /> que representa la clase <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Una clase <see cref="T:System.String" /> que representa la clase <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actual.</returns>
    </member>
    <member name="T:System.Xaml.AttachablePropertyServices">
      <summary vsli:raw="Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.">Proporciona métodos del asistente estáticos que obtienen valores e información del método descriptor de acceso de una propiedad que se puede adjuntar y funcionan con un almacén de propiedades adjuntas.</summary>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable property/value pairs from a specified attachable property store and into a destination array.">Copia a una matriz de destino todos los pares propiedad-valor que se puede adjuntar de un almacén especificado de propiedades que se pueden adjuntar.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">Matriz de destino. La matriz es una matriz genérica, debe pasarse sin dimensionar y debe tener componentes de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> y <see langword="object" />.</param>
      <param name="index" vsli:raw="The source index into which to copy.">Índice de origen en el que se va a realizar la copia.</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
      <summary vsli:raw="Returns the count of the attachable property entries that are in the specified store.">Devuelve el recuento de las entradas de propiedades que se pueden adjuntar que se encuentran en el almacén especificado.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
      <returns vsli:raw="The integer count of entries in the store.">Recuento de enteros de las entradas del almacén.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable property from the specified store.">Quita la entrada para la propiedad que se puede asociar especificada del almacén especificado.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
      <param name="name" vsli:raw="The identifier for the attachable property entry to remove from the store.">Identificador de la entrada de propiedad adjuntable que se va a quitar del almacén.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and removed from it; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se encontró en el almacén y se quitó de él una entrada de propiedad adjuntable para <paramref name="name" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable property in the specified store.">Establece un valor para la propiedad que se puede asociar especificada en el almacén especificado.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para usar un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to set a value.">Identificador de la entrada de propiedad adjuntable para la que se establece un valor.</param>
      <param name="value" vsli:raw="The value to set.">Valor que se va a establecer.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A value could not be set in the store.">No se pudo establecer un valor en el almacén.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store. Does not throw an exception if the specific attachable property does not exist in the store.">Intenta obtener un valor para la propiedad que se va a asociar indicada del almacén especificado. No produce ninguna excepción si la propiedad que se puede asociar especificada no existe en el almacén.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para usar un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">Identificador de la entrada de propiedad adjuntable para la que se obtiene un valor.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Parámetro de salida. Cuando este método devuelve un valor, contiene el objeto de destino para el valor si <paramref name="name" /> existe en el almacén y tiene un valor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se encontró una entrada de propiedad que se puede asociar para <paramref name="name" /> en el almacén y se envió un valor para <paramref name="value" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store, returning a generic output form. Does not throw an exception if the specific attachable property does not exist in the store.">Intenta obtener un valor para la propiedad que se puede adjuntar especificada del almacén indicado, devolviendo un formulario de resultado genérico. No produce ninguna excepción si la propiedad que se puede asociar especificada no existe en el almacén.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">Identificador de la entrada de propiedad adjuntable para la que se obtiene un valor.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Parámetro de salida. Cuando este método devuelve un valor, contiene el objeto de destino para el valor si <paramref name="name" /> existe en el almacén y tiene un valor.</param>
      <typeparam name="T" vsli:raw="The expected type of the output.">El tipo esperado de resultado.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se encontró una entrada de propiedad que se puede asociar para <paramref name="name" /> en el almacén y se envió un valor para <paramref name="value" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IAmbientProvider">
      <summary vsli:raw="Represents a service that can return information items about ambient properties or ambient types to type converters and markup extensions.">Representa un servicio que puede devolver elementos de información sobre propiedades de ambiente o tipos de ambiente a los convertidores de tipos y las extensiones de marcado.</summary>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of types and properties.">Devuelve un conjunto enumerable de elementos de información sobre propiedades de ambiente del conjunto de tipos y propiedades solicitado.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">Especifica uno o varios tipos que deben detener la evaluación cuando se detecta que en el gráfico de objetos llevan una trayectoria ascendente. Este tipo contiene la propiedad de ambiente deseada. Puede ser <see langword="null" />.</param>
      <param name="searchLiveStackOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to not use a saved context; &lt;see langword=&quot;false&quot; /&gt; to use a saved context. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para no utilizar un contexto guardado; <see langword="false" /> para utilizar un contexto guardado. De manera predeterminada, es <see langword="false" />.</param>
      <param name="types" vsli:raw="Specifies one or more type identifier objects that identify the types to be considered ambient.">Especifica uno o varios objetos de tipo de identificador de propiedades que indican los tipos que se van a considerar de ambiente.</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">Especifica uno o varios objetos de identificador de propiedades que indican las propiedades que se van a considerar de ambiente.</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of types and properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;types&quot; /&gt; or &lt;paramref name=&quot;properties&quot; /&gt;.">Conjunto enumerable de elementos de información sobre propiedades de ambiente del conjunto de tipos y propiedades solicitado. La información de propiedad de cada objeto <see cref="T:System.Xaml.AmbientPropertyValue" /> que se devuelva coincidirá con uno de los parámetros <paramref name="types" /> o <paramref name="properties" /> de entrada.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of properties.">Devuelve un conjunto enumerable de elementos de información sobre propiedades de ambiente del conjunto de propiedades solicitado.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">Especifica uno o varios tipos que deben detener la evaluación cuando se detecta que en el gráfico de objetos llevan una trayectoria ascendente. Este tipo contiene la propiedad de ambiente deseada. Puede ser <see langword="null" />.</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">Especifica uno o varios objetos de identificador de propiedades que indican las propiedades que se van a considerar de ambiente.</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;properties&quot; /&gt;.">Conjunto enumerable de elementos de información sobre las propiedades de ambiente para el conjunto de propiedades solicitado. La información de propiedad de cada objeto <see cref="T:System.Xaml.AmbientPropertyValue" /> que se devuelva coincidirá con uno de los parámetros <paramref name="properties" /> de entrada.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns an enumerable set of object instances of possible ambient types for the requested types.">Devuelve un conjunto enumerable de instancias de objeto de posibles tipos de ambiente de los tipos solicitados.</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">Conjunto de tipos a partir del cual se va a recuperar la información sobre los tipos de ambiente.</param>
      <returns vsli:raw="An enumerable set of objects that represent the values for the requested set of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; identifiers.">Conjunto enumerable de objetos que representan los valores para el conjunto solicitado de identificadores <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns a single ambient property information item from the requested set of properties, based on which property is first encountered.">Devuelve un único elemento de información sobre propiedades de ambiente del conjunto de propiedades solicitado, en función de la propiedad que se encuentre primero.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property.">Especifica uno o varios tipos que deben detener la evaluación cuando se detecta que en el gráfico de objetos llevan una trayectoria ascendente. Este tipo contiene la propiedad de ambiente deseada.</param>
      <param name="properties" vsli:raw="Specifies one or more objects that identify the properties to be considered ambient.">Especifica uno o varios objetos que identifican las propiedades que se van a considerar propiedades de ambiente.</param>
      <returns vsli:raw="A single ambient property information item for the first ambient property value from the &lt;paramref name=&quot;properties&quot; /&gt; list that is found.">Único elemento de información sobre propiedades de ambiente del primer valor de propiedad de ambiente de la lista <paramref name="properties" /> que se encuentra.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns the first matching object that is a possible ambient type for the requested types.">Devuelve la primera coincidencia de un objeto que es un posible tipo de ambiente de los tipos solicitados.</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">Conjunto de tipos a partir del cual se va a recuperar la información sobre los tipos de ambiente.</param>
      <returns vsli:raw="The first result object for the requested set.">Primer objeto del conjunto solicitado que se obtiene como resultado.</returns>
    </member>
    <member name="T:System.Xaml.IAttachedPropertyStore">
      <summary vsli:raw="Represents an attachable member store for an object where attachable members are set. This attachable member store can then be referenced with &lt;see cref=&quot;T:System.Xaml.AttachablePropertyServices&quot; /&gt;.">Representa un almacén de miembros que se pueden asociar de un objeto en el que se definen los miembros que se pueden asociar. Se puede hacer referencia a este almacén de miembros que se pueden asociar con <see cref="T:System.Xaml.AttachablePropertyServices" />.</summary>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable member/value pairs from this attachable member store into a destination array.">Copia todos los pares de miembro y valor que se pueden adjuntar de este almacén de miembros adjuntables en una matriz de destino.</summary>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">Matriz de destino. La matriz es una matriz genérica, debe pasarse sin dimensionar y debe tener componentes de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> y <see langword="object" />.</param>
      <param name="index" vsli:raw="The source index where copying should begin.">Índice de origen donde debe comenzar la operación de copia.</param>
    </member>
    <member name="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
      <summary vsli:raw="Gets the count of the attachable member entries in this attachable member store.">Obtiene el recuento de las entradas de miembros que se pueden asociar de este almacén de miembros que se pueden asociar.</summary>
      <returns vsli:raw="The integer count of entries in the store.">Recuento de enteros de las entradas del almacén.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable member from this attachable member store.">Quita la entrada del miembro que se puede asociar especificado del almacén de miembros que se pueden asociar.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to remove.">Identificador del sistema de tipos de XAML de la entrada de miembro que se puede asociar que se va a quitar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si una entrada de miembro que se puede asociar de <paramref name="attachableMemberIdentifier" /> se encuentra en el almacén y se quita; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable member in the specified store.">Establece un valor para el miembro que se puede asociar indicado en el almacén especificado.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to set.">Identificador del sistema de tipos de XAML de la entrada de miembro que se puede asociar que se va a establecer.</param>
      <param name="value" vsli:raw="The value to set.">Valor que se va a establecer.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable member in the specified store.">Intenta obtener un valor para el miembro que se puede asociar indicado del almacén especificado.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to get.">Identificador del sistema de tipos de XAML de la entrada de miembro que se puede asociar que se va a obtener.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; exists in the store and has a value.">Parámetro de salida. Cuando este método devuelve un valor, contiene el objeto de destino para el valor si <paramref name="attachableMemberIdentifier" /> existe en el almacén y tiene un valor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se encontró una entrada de miembro que se puede asociar para <paramref name="attachableMemberIdentifier" /> en el almacén y se envió un valor para <paramref name="value" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IDestinationTypeProvider">
      <summary vsli:raw="Represents a service that can return a CLR type system identifier for the destination type. The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.">Representa un servicio que puede devolver un identificador de sistema de tipos de CLR para el tipo de destino. El tipo de destino es pertinente cuando se notifica indirectamente el tipo de destino de una operación de establecimiento de propiedad, mediante reflexión u otros mecanismos.</summary>
    </member>
    <member name="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that identifies the destination type for the relevant type converter or markup extension.">Devuelve el <see cref="T:System.Type" /> de CLR que identifica el tipo de destino para el convertidor de tipos o la extensión de marcado pertinente.</summary>
      <returns vsli:raw="A CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination type.">Valor de <see cref="T:System.Type" /> de CLR para el tipo de destino.</returns>
    </member>
    <member name="T:System.Xaml.INamespacePrefixLookup">
      <summary vsli:raw="Represents a service that can return the recommended prefix for a XAML namespace mapping to consumers. Consumers might include design environments or serializers.">Representa un servicio que puede devolver el prefijo recomendado para una asignación de espacio de nombres XAML a los consumidores. Los consumidores pueden incluir entornos de diseño o serializadores.</summary>
    </member>
    <member name="M:System.Xaml.INamespacePrefixLookup.LookupPrefix(System.String)">
      <summary vsli:raw="Returns the recommended prefix for a specified XAML namespace identifier.">Devuelve el prefijo recomendado para un identificador de espacio de nombres XAML especificado.</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier string for which to obtain a prefix.">Cadena de identificador de espacio de nombres XAML para el que se va a obtener un prefijo.</param>
      <returns vsli:raw="The recommended prefix.">Prefijo recomendado.</returns>
    </member>
    <member name="T:System.Xaml.IRootObjectProvider">
      <summary vsli:raw="Describes a service that can return the root object of markup being parsed.">Describe un servicio que puede devolver el objeto raíz del marcado que se está analizando.</summary>
    </member>
    <member name="P:System.Xaml.IRootObjectProvider.RootObject">
      <summary vsli:raw="Gets the root object from markup or from an object graph.">Obtiene el objeto raíz del marcado o de un gráfico de objetos.</summary>
      <returns vsli:raw="The root object.">Objeto raíz.</returns>
    </member>
    <member name="T:System.Xaml.IXamlIndexingReader">
      <summary vsli:raw="Provides a service that represents indexed node control for a simple implementation of a node-based XAML reader.">Proporciona un servicio que representa el control de nodos indizados para una implementación simple de un lector XAML basado en nodos.</summary>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.Count">
      <summary vsli:raw="Gets the number of nodes in the current external node set.">Obtiene el número de nodos del actual conjunto de nodos externos.</summary>
      <returns vsli:raw="The number of nodes in the current external node set.">Número de nodos del actual conjunto de nodos externos.</returns>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.CurrentIndex">
      <summary vsli:raw="Gets or sets the index number of the current reader position for the indexed list view of XAML nodes.">Obtiene o establece el número de índice de la posición de lector actual para la vista de lista indizada de nodos XAML.</summary>
      <returns vsli:raw="The index number of the current reader position.">Número de índice de la posición de lector actual.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfo">
      <summary vsli:raw="Describes a service for reporting text line information in XAML reader implementations.">Describe un servicio para notificar la información de línea en las implementaciones de un lector XAML.</summary>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Obtiene un valor que especifica si la información de línea está disponible.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la información de línea está disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Obtiene el número de línea que se va a notificar.</summary>
      <returns vsli:raw="The line number to report.">Número de línea que se va a notificar.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Obtiene la posición de línea que se va a notificar.</summary>
      <returns vsli:raw="The line position to report.">Posición de línea que se va a notificar.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfoConsumer">
      <summary vsli:raw="Describes a service where a XAML writer can use reported line information and then include the information in the output.">Describe un servicio donde un sistema de escritura XAML puede usar la información de línea notificada y, a continuación, incluir la información en la salida.</summary>
    </member>
    <member name="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Collects line information.">Recopila información de línea.</summary>
      <param name="lineNumber" vsli:raw="The line number to use in the output.">Número de línea que se usará en la salida.</param>
      <param name="linePosition" vsli:raw="The line position to use in the output.">Posición de línea que se usará en la salida.</param>
    </member>
    <member name="P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that determines whether a line information service should provide values and therefore, should also call &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; when relevant.">Obtiene un valor que determina si un servicio de información de línea debe proporcionar valores y, por tanto, llamar también al método <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> cuando proceda.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la implementación utiliza la información de línea; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameProvider">
      <summary vsli:raw="Provides a service that is used during save and write operations to input an object and return a XAML name.">Proporciona un servicio que se emplea durante las operaciones de guardado y escritura para proporcionar como entrada un objeto y devolver un nombre XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameProvider.GetName(System.Object)">
      <summary vsli:raw="Retrieves the XAML name of the specified object.">Recupera el nombre XAML del objeto especificado.</summary>
      <param name="value" vsli:raw="The object to get the name for.">Objeto para el que se va a obtener el nombre.</param>
      <returns vsli:raw="The XAML name value of the requested object.">Valor del nombre XAML del objeto solicitado.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameResolver">
      <summary vsli:raw="Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution. The service can also return an enumerable set of all named objects that are in the XAML namescope.">Describe un servicio que puede devolver objetos especificados por nombre XAML o bien devuelve un token que difiere la resolución de nombres. El servicio también puede devolver un conjunto enumerable de todos los objetos con nombre que están en el ámbito de nombres XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope">
      <summary vsli:raw="Returns an enumerable set of all named objects in the XAML namescope.">Devuelve un conjunto enumerable de todos los objetos con nombre en el ámbito de nombres XAML.</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; objects. For each &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt;, the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; component is a string, and the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Value&quot; /&gt; component is the object that uses the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; name in the XAML namescope.">Conjunto enumerable de objetos <see cref="T:System.Collections.Generic.KeyValuePair`2" />. En cada <see cref="T:System.Collections.Generic.KeyValuePair`2" />, el componente <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> es una cadena y el componente <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> es el objeto que usa el nombre de <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> en el ámbito de nombres XAML.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">Devuelve un objeto que puede corregir determinados modelos de marcado que generan referencias adelantadas.</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">Colección de nombres que son posibles referencias adelantadas.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Objeto que proporciona un token para el comportamiento de búsqueda que se va a evaluar más adelante.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">Devuelve un objeto que puede corregir determinados modelos de marcado que generan referencias adelantadas.</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">Colección de nombres que son posibles referencias adelantadas.</param>
      <param name="canAssignDirectly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to immediately assign the resolved name reference to the target property. &lt;see langword=&quot;false&quot; /&gt; to call the user code for a reparse. The default behavior is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para asignar inmediatamente la referencia de nombre resuelta a la propiedad de destino. Es <see langword="false" /> para llamar al código de usuario y repetir el análisis. El comportamiento predeterminado es <see langword="false" />.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Objeto que proporciona un token para el comportamiento de búsqueda que se va a evaluar más adelante.</returns>
    </member>
    <member name="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable">
      <summary vsli:raw="Gets a value that determines whether calling &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available in order to resolve a name into a token for forward resolution.">Obtiene un valor que determina si se puede llamar al método <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> para resolver un nombre en un token para la resolución hacia delante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available as an implementation that returns a useful token for forward resolution; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> está disponible como una implementación que devuelve un token útil para la resolución hacia delante; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete">
      <summary vsli:raw="Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.">Se produce cuando un procesador XAML ha registrado todos los nombres pertinentes en el ámbito de nombres XAML de respaldo.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves an object from a name reference.">Resuelve un objeto de una referencia de nombre.</summary>
      <param name="name" vsli:raw="The name reference to resolve.">Referencia de nombre que se va a resolver.</param>
      <returns vsli:raw="The resolved object; or null.">Objeto resuelto o null.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)">
      <summary vsli:raw="Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.">Resuelve un objeto de una referencia de nombre y proporciona un valor de seguimiento que indica si el objeto se inicializa totalmente para los gráficos de objetos.</summary>
      <param name="name" vsli:raw="The name reference to resolve.">Referencia de nombre que se va a resolver.</param>
      <param name="isFullyInitialized" vsli:raw="When this method returns, &lt;see langword=&quot;true&quot; /&gt; if the returned object has any dependencies on unresolved references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Cuando este método devuelve un valor, es <see langword="true" /> si el objeto devuelto tiene dependencias de referencias no resueltas; de lo contrario, es <see langword="false" />.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Objeto que proporciona un token para el comportamiento de búsqueda que se va a evaluar más adelante.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNamespaceResolver">
      <summary vsli:raw="Describes a service that can return a XAML namespace that is based on its prefix as it is mapped in XAML markup.">Describe un servicio que puede devolver un espacio de nombres XAML basándose en su prefijo asignado en el marcado XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespace(System.String)">
      <summary vsli:raw="Retrieves a XAML namespace identifier for the specified prefix string.">Recupera un identificador de espacio de nombres XAML para la cadena de prefijo especificada.</summary>
      <param name="prefix" vsli:raw="The prefix for which to retrieve the XAML namespace information.">Prefijo para el cual se va a recuperar la información de espacio de nombres XAML.</param>
      <returns vsli:raw="The requested XAML namespace identifier, as a string.">Identificador del espacio de nombres de XAML solicitado, como una cadena.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespacePrefixes">
      <summary vsli:raw="Returns all the possible prefix-to-XAML namespace mappings (&lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values) that are available in the active XAML schema context.">Devuelve todas las posibles asignaciones de prefijos a espacios de nombres XAML (valores de <see cref="T:System.Xaml.NamespaceDeclaration" />) que están disponibles en el contexto de esquema XAML activo.</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values. To get all the prefix strings, get the &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Prefix&quot; /&gt; value from each value in the returned set. To get prefixes for specific XAML namespaces, process any return value that has the desired &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Namespace&quot; /&gt; value.">Conjunto enumerable de valores de <see cref="T:System.Xaml.NamespaceDeclaration" />. Para obtener todas las cadenas de prefijo, obtenga el valor de la propiedad <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> de cada valor del conjunto de valores devueltos. Para obtener los prefijos para determinados espacios de nombres XAML, procese todos los valores devueltos que tengan el valor de <see cref="P:System.Xaml.NamespaceDeclaration.Namespace" /> deseado.</returns>
    </member>
    <member name="T:System.Xaml.IXamlObjectWriterFactory">
      <summary vsli:raw="Represents a service that generates a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on the current internal parser context.">Representa un servicio que genera un objeto <see cref="T:System.Xaml.XamlObjectWriter" /> que se basa en el contexto del analizador interno actual.</summary>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetParentSettings">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; from the original internal parser context.">Devuelve el objeto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> del contexto del analizador interno original.</summary>
      <returns vsli:raw="The settings from the original internal parser context.">Configuración del contexto del analizador interno original.</returns>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on active XAML schema context.">Devuelve un objeto <see cref="T:System.Xaml.XamlObjectWriter" /> que se basa en el contexto de esquema XAML activo.</summary>
      <param name="settings" vsli:raw="The settings to use for construction and initialization of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Configuración que se va a usar para construir e inicializar el objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that has the specified settings.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> que tiene la configuración especificada.</returns>
    </member>
    <member name="T:System.Xaml.IXamlSchemaContextProvider">
      <summary vsli:raw="Represents a service that provides XAML schema context information to type converters and markup extensions.">Representa un servicio que proporciona información de contexto de esquema XAML a los convertidores de tipos y las extensiones de marcado.</summary>
    </member>
    <member name="P:System.Xaml.IXamlSchemaContextProvider.SchemaContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; that is reported by the service context.">Obtiene el objeto <see cref="T:System.Xaml.XamlSchemaContext" /> notificado por el contexto de servicio.</summary>
      <returns vsli:raw="The XAML schema context that is reported by the service context.">Contexto de esquema XAML notificado por el contexto de servicio.</returns>
    </member>
    <member name="T:System.Xaml.NamespaceDeclaration">
      <summary vsli:raw="Declares the identifier and the prefix of a XAML namespace by storing these string values as separate properties.">Declara el identificador y el prefijo de un espacio de nombres XAML almacenando estos valores de cadena como propiedades independientes.</summary>
    </member>
    <member name="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; class using initial property values.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.NamespaceDeclaration" /> con los valores de propiedad iniciales.</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier, as a string.">Identificador del espacio de nombres XAML, como una cadena.</param>
      <param name="prefix" vsli:raw="The string prefix that is used for the namespace in prefix mappings.">Prefijo de cadena que se usa para el espacio de nombres en las asignaciones de prefijo.</param>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Namespace">
      <summary vsli:raw="Gets the identifier component of a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Obtiene el componente identificador de un objeto <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns vsli:raw="The identifier of the XAML namespace declaration.">Identificador de la declaración de espacio de nombres XAML.</returns>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Prefix">
      <summary vsli:raw="Gets the prefix that is used as the XAML namespace mapping prefix for a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Obtiene el prefijo que se usa como prefijo de asignación de espacio de nombres XAML para un objeto <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns vsli:raw="The prefix string for this &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Cadena de prefijo para este objeto <see cref="T:System.Xaml.NamespaceDeclaration" />.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>Define el control de acceso a los ensamblados y los tipos a efectos de carga de XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>Devuelve una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basada en un ensamblado solicitado por <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="assembly">Ensamblado de la solicitud.</param>
      <returns>Una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, con el valor de <paramref name="assembly" /> utilizado como información del origen para <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>Devuelve una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basada en un ensamblado solicitado por <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyName">Nombre de ensamblado de la solicitud.</param>
      <returns>Una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, con el valor de <paramref name="assemblyName" /> utilizado como información del origen para <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre de ensamblado de <paramref name="assemblyName" /> no es un nombre completo de ensamblado válido.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>Obtiene el objeto <see cref="T:System.Reflection.AssemblyName" /> del ensamblado para el que este objeto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina los permisos.</summary>
      <returns>El objeto <see cref="T:System.Reflection.AssemblyName" /> del ensamblado para el que este objeto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina los permisos.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>Devuelve una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basada en un tipo concreto especificado por su nombre calificado.</summary>
      <param name="assemblyQualifiedTypeName">Una cadena que se analiza como un nombre de tipo calificado con el nombre de ensamblado.</param>
      <returns>Una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, con el valor de <paramref name="assemblyQualifiedTypeName" /> utilizado como información de origen para las propiedades <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> y <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> determinadas por reflexión en el tipo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre de tipo calificado con el nombre de ensamblado <paramref name="assemblyQualifiedTypeName" /> no es válido.
O bien
El nombre de ensamblado de <paramref name="assemblyQualifiedTypeName" /> no es un nombre de ensamblado válido.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>Devuelve una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basada en un tipo concreto especificado por <see cref="T:System.Type" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> para el que se solicita el acceso.</param>
      <returns>Una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, con el valor de <paramref name="type" /> utilizado como información de origen para las propiedades <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> y <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> determinadas por reflexión en el tipo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>Obtiene el nombre de cadena no calificado del tipo para el que este objeto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina los permisos.</summary>
      <returns>El nombre de cadena no calificado del tipo para el que este objeto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina los permisos.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>Declara los permisos para cargar los tipos de los ensamblados que son utilizados por un lector o sistema de escritura XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, utilizando un conjunto enumerable de valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> concretos.</summary>
      <param name="allowedAccess">Conjunto enumerable de valores de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> concretos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="allowedAccess" /> contuvieron información no válida, como un elemento nulo.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, utilizando los permisos existentes.</summary>
      <param name="state">Valor de enumeración <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> mediante un valor <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> único.</summary>
      <param name="allowedAccess">El valor <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que define.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>Obtiene la lista de todos los valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que este <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> representa.</summary>
      <returns>Lista de solo lectura de valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual.</summary>
      <returns>Copia del objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="elem">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> no contiene la codificación de XML para <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.
O bien
El atributo de versión dentro de <paramref name="elem" /> no se admite.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Devuelve si <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> incluye un <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> especificado en su lista <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />.</summary>
      <param name="requestedAccess">El <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> específico que se comprueba.</param>
      <returns>
        <see langword="true" /> si <paramref name="requestedAccess" /> existe como un elemento en la lista <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> del <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />actual. En caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestedAccess" /> es null.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que es la intersección del permiso <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual y el permiso especificado.</summary>
      <param name="target">
        <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que forma una intersección con el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual. Puede ser <see langword="null" />.</param>
      <returns>Nuevo permiso que representa la intersección entre el objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual y el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> o no es <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Puede ser <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual es un subconjunto del permiso especificado; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> o no es <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>Devuelve si <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> denota permisos no restringidos.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> denota permisos no restringidos. Es <see langword="false" /> si <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> tiene restricciones de nivel de acceso específicas en la propiedad <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> o no tiene permisos.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>Crea una codificación XML de <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> y de su estado actual.</summary>
      <returns>Codificación XML del <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, incluida la información de estado.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que consiste en la unión del objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual y del permiso especificado.</summary>
      <param name="other">
        <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que se va a combinar con el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual. Puede ser <see langword="null" />.</param>
      <returns>Nuevo <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que representa la unión entre el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual y el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> no es <see langword="null" /> o no es <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="T:System.Xaml.Schema.AllowedMemberLocations">
      <summary vsli:raw="Specifies the syntax restrictions enforced on a property when it is set in XAML, as reported by a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Especifica las restricciones sintácticas impuestas a una propiedad cuando se establece en XAML, tal y como indica <see cref="T:System.Xaml.XamlDirective" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Any">
      <summary vsli:raw="Property can be set in either &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.Attribute&quot; /&gt; or &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.MemberElement&quot; /&gt; location. (This enumeration member is defined as the combination of those values.)">La propiedad puede establecerse en la ubicación de <see cref="F:System.Xaml.Schema.AllowedMemberLocations.Attribute" /> o <see cref="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement" />. (Este miembro de enumeración se define como la combinación de esos valores.)</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Attribute">
      <summary vsli:raw="Property can be set in XAML attribute syntax.">La propiedad puede establecerse en sintaxis de atributos XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement">
      <summary vsli:raw="Property can be set in XAML property element syntax.">La propiedad puede establecerse en sintaxis de elementos de propiedad XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.None">
      <summary vsli:raw="Property cannot be set in XAML at all. This is the default.">No se puede establecer la propiedad en XAML. Este es el valor predeterminado.</summary>
    </member>
    <member name="T:System.Xaml.Schema.ShouldSerializeResult">
      <summary vsli:raw="Defines serialization behavior as reported by a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Define el comportamiento de serialización notificado por un objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.Default">
      <summary vsli:raw="Unknown, defer to the type of the member.">Se desconoce; remítase al tipo del miembro.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.False">
      <summary vsli:raw="Do not serialize the result.">No serializar el resultado.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.True">
      <summary vsli:raw="Serialize the result.">Serializar el resultado.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlCollectionKind">
      <summary vsli:raw="Describes the collection metaphor (if any) used by a XAML member.">Describe la metáfora (si existe) de colección utilizada por un miembro XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Array">
      <summary vsli:raw="XAML member supports an array collection.">El miembro XAML admite una colección de matrices.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Collection">
      <summary vsli:raw="XAML member supports a list or a collection.">El miembro XAML admite una lista o una colección.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Dictionary">
      <summary vsli:raw="XAML member supports a dictionary (key-value pairs).">El miembro XAML admite un diccionario (pares clave-valor).</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.None">
      <summary vsli:raw="XAML member does not support a collection.">El miembro XAML no admite una colección.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlMemberInvoker">
      <summary vsli:raw="Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.">Proporciona un punto de extensión que puede tener acceso a las características de miembro de un miembro XAML a través de técnicas distintas de la reflexión.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basándose en la clase <see cref="T:System.Xaml.XamlMember" /> proporcionada.</summary>
      <param name="member" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; value for the specific XAML member relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Valor de <see cref="T:System.Xaml.XamlMember" /> para el miembro XAML concreto relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
      <summary vsli:raw="Gets a value of the relevant property from an instance.">Obtiene un valor de la propiedad relevante de una instancia.</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">Instancia del tipo de propietario para el miembro.</param>
      <returns vsli:raw="The requested property value.">El valor de propiedad solicitado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a write-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlMember" /> desconocida.
-o bien-
Se invoca este método en un miembro de solo escritura.
-o bien-
<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets a value of the relevant property on an instance.">Establece un valor de la propiedad relevante en una instancia.</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">Instancia del tipo de propietario para el miembro.</param>
      <param name="value" vsli:raw="The property value to set.">Valor de la propiedad que se establecerá.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a read-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlMember" /> desconocida.
-o bien-
Se invoca este método en un miembro de solo lectura.
-o bien-
<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value needs to be persisted by serialization processes.">Indica si se debe conservar el valor mediante procesos de serialización.</summary>
      <param name="instance" vsli:raw="The instance with the property to be examined for persistence.">Instancia con la propiedad cuya persistencia se va a examinar.</param>
      <returns vsli:raw="A value of the enumeration.">Valor de la enumeración.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que obtiene los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">El objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que obtiene los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que establece los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que establece los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Proporciona un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> desconocido y no implementado totalmente.</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> desconocido y no implementado totalmente.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeInvoker">
      <summary vsli:raw="Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.">Proporciona un punto de la extensión que puede construir instancias de un tipo XAML a través de técnicas distintas de la reflexión y los constructores.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basándose en la clase <see cref="T:System.Xaml.XamlType" /> proporcionada.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; value for the specific XAML type relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">El valor de <see cref="T:System.Xaml.XamlType" /> para el tipo XAML concreto relevante para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)">
      <summary vsli:raw="Adds the provided item to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Agrega el elemento proporcionado a una instancia del tipo pertinente a esta <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Una instancia del tipo especificado por <see cref="T:System.Xaml.XamlType" /> que se utiliza para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="item" vsli:raw="The item to add.">Elemento que se va a agregar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection.">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlType" /> desconocida.
-o bien-
Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> donde el tipo pertinente no es una colección.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> devuelve <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Adds the provided key and item value to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Agrega el valor de la clave y del elemento proporcionados a una instancia del tipo que es relevante para esta <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Una instancia del tipo especificado por <see cref="T:System.Xaml.XamlType" /> que se utiliza para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="key" vsli:raw="Dictionary key for the item to add.">Clave de diccionario para el elemento que se agrega.</param>
      <param name="item" vsli:raw="The item value to add.">Valor del elemento que se va a agregar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a dictionary.">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlType" /> desconocida.
-o bien-
Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> donde el tipo pertinente no es un diccionario.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> devuelve <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])">
      <summary vsli:raw="Creates an object instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Crea una instancia del objeto basada en el <see cref="T:System.Xaml.XamlType" /> iniciado por la construcción para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="arguments" vsli:raw="An array of objects that supply the &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt; for the instance. May be &lt;see langword=&quot;null&quot; /&gt; for types that do not require or use &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt;.">Una matriz de objetos que proporciona <see langword="x:ConstructorArgs" /> para la instancia. Puede ser <see langword="null" /> para los tipos que no requieren o utilizan <see langword="x:ConstructorArgs" />.</param>
      <returns vsli:raw="The created instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Instancia creada basada en el <see cref="T:System.Xaml.XamlType" /> iniciado por la construcción para <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</returns>
      <exception cref="T:System.MissingMethodException" vsli:raw="Could not resolve a constructor.">No pudo resolver un constructor.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)">
      <summary vsli:raw="Returns the relevant &lt;see langword=&quot;Add&quot; /&gt; method for a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is relevant to a collection or dictionary.">Devuelve el método <see langword="Add" /> pertinente para un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que es pertinente para una colección o diccionario.</summary>
      <param name="contentType" vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the item type that is used by the &lt;see langword=&quot;Add&quot; /&gt; method.">
        <see cref="T:System.Xaml.XamlType" /> para el tipo de elemento que usa el método <see langword="Add" />.</param>
      <returns vsli:raw="CLR &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; information for the &lt;see langword=&quot;Add&quot; /&gt; method, or null.">Información <see cref="T:System.Reflection.MethodInfo" /> de CLR para el método <see langword="Add" />, o null.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="contentType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod">
      <summary vsli:raw="Returns an object representing a method that can enumerate over items.">Devuelve un objeto que representa un método que puede enumerar los elementos.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for an enumerator method, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MethodInfo" /> para un método enumerador o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object representing the set of items.">Devuelve un objeto <see cref="T:System.Collections.IEnumerator" /> que representa el conjunto de elementos.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Una instancia del tipo especificado por <see cref="T:System.Xaml.XamlType" /> que se utiliza para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, or &lt;see langword=&quot;null&quot; /&gt;.">Un objeto <see cref="T:System.Collections.IEnumerator" /> o <see langword="null" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection or dictionary.">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlType" /> desconocida.
-o bien-
Se invoca a este método en un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> donde el tipo pertinente no es una colección ni un diccionario.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into an implemented &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Obtiene el controlador que se va a usar cuando un <see cref="T:System.Xaml.XamlObjectWriter" /> llama a una <see cref="T:System.Windows.Markup.MarkupExtension" /> implementada.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Implementación de controlador que controla este caso.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into a CLR-implemented &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;.">Consigue que el controlador se utilice cuando un <see cref="T:System.Xaml.XamlObjectWriter" /> llama a un <see cref="T:System.ComponentModel.TypeConverter" /> implementado por CLR.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Implementación de controlador que controla este caso.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Proporciona un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> desconocido y no implementado totalmente.</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> desconocido y no implementado totalmente.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeName">
      <summary vsli:raw="Provides a means to specify a XAML type in terms of name and namespace.">Permite especificar un tipo XAML en términos de nombre y espacio de nombres.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeName" /> basándose en unas cadenas de nombre y espacio de nombres.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains name.">Espacio de nombres XAML que contiene el nombre especificado por el parámetro name.</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">Nombre del tipo para el cual se va a crear un objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings as well as an array of type arguments.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeName" />, basándose en unas cadenas de nombre y espacio de nombres así como una matriz de argumentos de tipo.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains &lt;paramref name=&quot;name&quot; /&gt;.">Espacio de nombres XAML que contiene el nombre especificado por el parámetro <paramref name="name" />.</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">Nombre del tipo para el cual se va a crear un objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="typeArguments" vsli:raw="An array of type arguments, each of which must be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Matriz de argumentos de tipo, cada uno de los cuales debe ser un objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on an existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeName" /> basándose en un objeto <see cref="T:System.Xaml.XamlType" /> existente.</summary>
      <param name="xamlType" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Un <see cref="T:System.Xaml.XamlType" /> existente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlType" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Name">
      <summary vsli:raw="Gets the name used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Obtiene el nombre que se ha usado para construir este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The name of the type.">Nombre del tipo.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Namespace">
      <summary vsli:raw="Gets the XAML namespace identifier used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Obtiene el identificador de espacio de nombres XAML que se ha usado para construir este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Identificador del espacio de nombres XAML.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">Proporciona un valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> basado en un nombre de tipo y un objeto que puede resolver un prefijo de marcado en un espacio de nombres.</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">Nombre del tipo para el cual se va a crear un valor de <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Proveedor de objetos o servicios que implementa <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> creado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> o <paramref name="namespaceResolver" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">No se puede analizar la cadena.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">Proporciona un valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> basado en una cadena que puede especificar varios nombres de tipo y un objeto que puede resolver un prefijo de marcado en un espacio de nombres.</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">Cadena que contiene varios tipos.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Proveedor de objetos o servicios que implementa <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> creado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeNameList" /> o <paramref name="namespaceResolver" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">No se puede analizar la cadena.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation.">Convierte el valor de este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> en su representación de cadena equivalente.</summary>
      <returns vsli:raw="The equivalent string representation of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Representación de cadena equivalente de este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.">Convierte el valor de este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> en su representación de cadena equivalente, la cual se puede utilizar en la sintaxis de marcado para el uso de elementos de objetos de varios tipos.</summary>
      <param name="typeNameList" vsli:raw="A list of types.">Lista de tipos.</param>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">Referencia a un servicio para la búsqueda de prefijo.</param>
      <returns vsli:raw="A concatenated string of all type results.">Cadena concatenada de todos los resultados de tipo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;prefixLookup&quot; /&gt; or &lt;paramref name=&quot;typeNameList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="prefixLookup" /> o <paramref name="typeNameList" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.">Convierte el valor de este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> en su representación de cadena equivalente, la cual se puede utilizar en la sintaxis de marcado para el uso de elementos de objetos de un tipo.</summary>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">Referencia a un servicio para la búsqueda de prefijo.</param>
      <returns vsli:raw="A prefixed usage string.">Cadena de uso con prefijo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; Could not look up the prefix.">
        <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> para <see cref="T:System.Xaml.Schema.XamlTypeName" /> es <see langword="null" />.
o bien
<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> no es válido.
o bien
No pudo buscar el prefijo.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">Proporciona un valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> basado en un nombre de tipo y un objeto que puede resolver un prefijo de marcado en un espacio de nombres.</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">Nombre del tipo para el cual se va a crear un valor de <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Proveedor de objetos o servicios que implementa <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">Parámetro Out que contiene el objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> que se ha creado si el valor devuelto es <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el análisis se realizó correctamente y <paramref name="result" /> contiene un valor útil; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> o <paramref name="namespaceResolver" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">Proporciona un valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> basado en una cadena que puede especificar varios nombres de tipo y un objeto que puede resolver un prefijo de marcado en un espacio de nombres.</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">Cadena que contiene varios tipos.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Proveedor de objetos o servicios que implementa <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">Parámetro Out que contiene el objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> que se ha creado si el valor devuelto es <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el análisis se realizó correctamente y <paramref name="result" /> contiene un valor útil; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeNameList" /> o <paramref name="namespaceResolver" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.TypeArguments">
      <summary vsli:raw="Gets the type arguments used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Obtiene los argumentos de tipo que se han usado para construir este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The type arguments, if any. May be null.">Argumentos de tipo, si los hay. Su valor puede ser null.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeTypeConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object to and from a string that represents the type name. This functionality is used for XAML extensibility by markup definitions, via &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt;.">Convierte un objeto <see cref="T:System.Xaml.XamlType" /> en una cadena que representa el nombre del tipo y viceversa. Esta funcionalidad las utilizan las definiciones de marcado para la extensibilidad XAML a través de <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeTypeConverter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeTypeConverter" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">Determina si un objeto del tipo especificado puede convertirse en una instancia de <see cref="T:System.Xaml.XamlType" /> usando el contexto indicado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Tipo cuya conversión se evalúa.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si este convertidor puede realizar la operación; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; can be converted to the specified type, using the specified context.">Determina si una instancia de <see cref="T:System.Xaml.XamlType" /> puede convertirse en el tipo especificado usando el contexto indicado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Tipo cuya conversión se evalúa.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si este convertidor puede realizar la operación; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">Intenta convertir el objeto especificado en una instancia de <see cref="T:System.Xaml.XamlType" /> usando el contexto indicado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="culture" vsli:raw="Culture specific information.">Información específica de la referencia cultural.</param>
      <param name="value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The converted object.">El objeto convertido.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> no se puede convertir.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; to the specified type, using the specified context.">Intenta convertir una instancia de <see cref="T:System.Xaml.XamlType" /> en el tipo especificado usando el contexto indicado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="culture" vsli:raw="Culture specific information.">Información específica de la referencia cultural.</param>
      <param name="value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Tipo en el que se va a convertir el objeto.</param>
      <returns vsli:raw="The converted object.">El objeto convertido.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> no se puede convertir.</exception>
    </member>
    <member name="T:System.Xaml.Schema.XamlValueConverter`1">
      <summary vsli:raw="Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type. This includes markup extensions and type converters.">Proporciona una superficie de API común para las técnicas que generan valores de inicialización o serialización para XAML basándose en una entrada distinta del tipo de destino final. Esto incluye las extensiones de marcado y los convertidores de tipos.</summary>
      <typeparam name="TConverterBase" vsli:raw="The CLR base class for the particular converter that this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; represents. Typically this is one of the following: &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">Clase base de CLR para el convertidor concreto que este objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> representa. Normalmente es uno de los siguientes: <see cref="T:System.ComponentModel.TypeConverter" />, <see cref="T:System.Windows.Markup.MarkupExtension" /> o <see cref="T:System.Windows.Markup.ValueSerializer" />.</typeparam>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; and the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, basándose en un convertidor que implementa <see cref="T:System.Type" /> y el destino/tipo de destino del objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">
        <see cref="T:System.Type" /> que implementa el comportamiento del convertidor.</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Objeto <see cref="T:System.Xaml.XamlType" /> de destino del objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, and a string name.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, basándose en un convertidor que implementa <see cref="T:System.Type" />, el destino/tipo de destino del objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> y un nombre de cadena.</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">
        <see cref="T:System.Type" /> que implementa el comportamiento del convertidor.</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Objeto <see cref="T:System.Xaml.XamlType" /> de destino del objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
      <param name="name" vsli:raw="The string name.">Nombre de la cadena.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="All three parameters are &lt;see langword=&quot;null&quot; /&gt; (at least one is required to be non-null).">Los tres parámetros son <see langword="null" /> (por lo menos se exige que uno sea no nulo).</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
      <summary vsli:raw="Gets a created instance of the converter implementation.">Obtiene una instancia creada de la implementación del convertidor.</summary>
      <returns vsli:raw="A created instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">Una instancia creada de la implementación del convertidor o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">Obtiene el objeto <see cref="T:System.Type" /> para la clase que implementa el comportamiento del convertidor.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">El objeto <see cref="T:System.Type" /> para la clase que implementa el comportamiento del convertidor.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
      <summary vsli:raw="Returns an instance of the converter implementation.">Devuelve una instancia de la implementación del convertidor.</summary>
      <returns vsli:raw="An instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">Una instancia de la implementación del convertidor o <see langword="null" />.</returns>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="Converter did not implement the correct base type.">El convertidor no implementó el tipo base correcto.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and a specified object, which must also be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, have the same value.">Determina si esta instancia de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> y un objeto especificado, que también debe ser un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, tienen el mismo valor.</summary>
      <param name="obj" vsli:raw="The object to compare.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="obj" /> es un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> y tiene el mismo valor que esta instancia; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and another &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object have the same value.">Determina si esta instancia de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> y otro objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> tienen el mismo valor.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; to compare.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que se va comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="other" /> es un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> y tiene el mismo valor que la instancia en cuestión; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Devuelve el código hash para esta estructura <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="An integer hash code.">Código hash entero.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.Name">
      <summary vsli:raw="Gets a string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Obtiene un nombre de cadena para este objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="A string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Un nombre de cadena para este objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have the same value.">Determina si dos objetos <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> especificados tienen el mismo valor.</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor de <paramref name="converter1" /> es el mismo que el valor de <paramref name="converter2" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have different values.">Determina si dos objetos <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> especificados tienen valores diferentes.</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is different than the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor de <paramref name="converter1" /> es diferente del valor de <paramref name="converter2" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
      <summary vsli:raw="Gets the target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Obtiene el <see cref="T:System.Xaml.XamlType" /> de destino del objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Objeto <see cref="T:System.Xaml.XamlType" /> de destino del objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Devuelve un elemento <see cref="T:System.String" /> que representa este objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">
        <see cref="T:System.String" /> que representa este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlBackgroundReader">
      <summary vsli:raw="Implements a double-buffered &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that can split reading and writing to different threads.">Implementa un objeto <see cref="T:System.Xaml.XamlReader" /> de doble búfer que puede dividir la lectura y la escritura en diferentes subprocesos.</summary>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlBackgroundReader" />.</summary>
      <param name="wrappedReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that this &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; is based on.">Objeto <see cref="T:System.Xaml.XamlReader" /> en el que se basa este objeto <see cref="T:System.Xaml.XamlBackgroundReader" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;wrappedReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="wrappedReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Xaml.XamlBackgroundReader" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para liberar los recursos administrados; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Obtiene un valor que especifica si la información de línea está disponible.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la información de línea está disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at end-of-file.">Obtiene un valor que indica si el lector se encuentra al final del archivo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at end-of-file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la posición se encuentra al final del archivo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Obtiene el número de línea que se va a notificar.</summary>
      <returns vsli:raw="The line number to report.">Número de línea que se va a notificar.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Obtiene la posición de línea que se va a notificar.</summary>
      <returns vsli:raw="The line position to report.">Posición de línea que se va a notificar.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Obtiene el miembro actual en la posición del lector, si el lector se encuentra en <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a member.">Miembro actual o <see langword="null" /> si la posición no se encuentra en un miembro.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">Obtiene el espacio de nombres XAML del nodo actual.</summary>
      <returns vsli:raw="The XAML namespace, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Espacio de nombres XAML, si está disponible; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Valor de la enumeración <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source, if a node is available.">Proporciona el siguiente nodo XAML del origen si está disponible.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si hay un nodo disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema context information for the information set.">Obtiene un objeto que proporciona información sobre el contexto de esquema del conjunto de información.</summary>
      <returns vsli:raw="An object that provides schema context information for the information set.">Objeto que proporciona información sobre el contexto de esquema del conjunto de información.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Crea e inicia un nuevo objeto <see cref="T:System.Threading.Thread" /> (construido a partir de <see cref="T:System.Threading.ParameterizedThreadStart" />) que controla un subproceso con nombre para el objeto <see cref="T:System.Xaml.XamlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">El subproceso ya ha comenzado.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;. You specify the thread name as a parameter.">Crea e inicia un nuevo objeto <see cref="T:System.Threading.Thread" /> (construido a partir de <see cref="T:System.Threading.ParameterizedThreadStart" />) que controla un subproceso con nombre para el objeto <see cref="T:System.Xaml.XamlReader" />. Especifique el nombre del subproceso como un parámetro.</summary>
      <param name="threadName" vsli:raw="The name for the thread.">Nombre del subproceso.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">El subproceso ya ha comenzado.</exception>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">Objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual o <see langword="null" /> si la posición actual del lector no se encuentra en un objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Value">
      <summary vsli:raw="Gets the value of the current node.">Obtiene el valor del nodo actual.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Valor del nodo actual o <see langword="null" /> si la posición actual del lector no se encuentra en un tipo de nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDeferringLoader">
      <summary vsli:raw="Represents a XAML reader behavior that loads and returns deferred content.">Representa un comportamiento de lector de XAML que carga y devuelve contenido diferido.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDeferringLoader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary vsli:raw="Loads XAML content in a deferred mode, which is based on a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and certain required services from a service provider.">Carga contenido XAML en modo diferido, basándose en un objeto <see cref="T:System.Xaml.XamlReader" /> y determinados servicios necesarios de un proveedor de servicios.</summary>
      <param name="xamlReader" vsli:raw="The initiating reader that is returned on calls to &lt;see cref=&quot;M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)&quot; /&gt;.">Lector de entrada que se devuelve cuando se realizan llamadas al método <see cref="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)" />.</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">Proveedor de los servicios necesarios.</param>
      <returns vsli:raw="The root object that is produced by the input &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Objeto raíz producido por el <see cref="T:System.Xaml.XamlReader" /> de entrada.</returns>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary vsli:raw="Commits a value for deferred loading.">Confirma un valor para la carga diferida.</summary>
      <param name="value" vsli:raw="The input value to commit for deferred loading.">Valor de entrada que se va a confirmar para la carga diferida.</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">Proveedor de los servicios necesarios.</param>
      <returns vsli:raw="A XAML reader that can be used to obtain the deferred value as XAML node information.">Lector XAML que se puede usar para obtener el valor diferido como información de nodo XAML.</returns>
    </member>
    <member name="T:System.Xaml.XamlDirective">
      <summary vsli:raw="Provides the XAML type system identifier for a member if the member is also a XAML directive. XAML readers and XAML writers use the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier during processing of member nodes. The identifier is used when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt; and &lt;see cref=&quot;P:System.Xaml.XamlMember.IsDirective&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Proporciona el identificador de sistema de tipos XAML de un miembro si el miembro es también una directiva XAML. Los lectores XAML y los sistemas de escritura XAML usan el identificador <see cref="T:System.Xaml.XamlDirective" /> durante el procesamiento de los nodos de miembro. Se usa el identificador cuando el lector XAML se coloca en <see cref="F:System.Xaml.XamlNodeType.StartMember" /> y <see cref="P:System.Xaml.XamlMember.IsDirective" /> es <see langword="true" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for each per-case value of a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDirective" />, especificando los posibles valores de <see cref="T:System.Xaml.XamlDirective" /> según cada caso.</summary>
      <param name="xamlNamespaces" vsli:raw="A set of XAML namespaces where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist, passed as an enumerable set of the identifier strings.">Conjunto de espacios de nombres XAML donde puede existir este objeto <see cref="T:System.Xaml.XamlDirective" />, pasado como un conjunto enumerable de cadenas de identificador.</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Nombre que identifica el objeto <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="xamlType" vsli:raw="The XAML type that backs the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Tipo XAML que respalda el objeto <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="typeConverter" vsli:raw="The type converter that this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; uses for text syntax conversion.">Convertidor de tipos que este objeto <see cref="T:System.Xaml.XamlDirective" /> utiliza para la conversión sintáctica de texto.</param>
      <param name="allowedLocation" vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.AllowedMemberLocations&quot; /&gt; enumeration.">Valor de la enumeración <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xamlType&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="xamlType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for a name and a single XAML namespace. Use this signature only when you want or expect &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; to report &lt;see langword=&quot;true&quot; /&gt; for the directive.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDirective" />, especificando valores para un nombre y un espacio de nombres XAML único. Use esta signatura únicamente si desea o espera notificar <see cref="P:System.Xaml.XamlMember.IsUnknown" /><see langword="true" /> para la directiva.</summary>
      <param name="xamlNamespace" vsli:raw="The primary XAML namespace where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist.">Espacio de nombres XAML primario donde puede existir este objeto <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Nombre que identifica el objeto <see cref="T:System.Xaml.XamlDirective" />.</param>
    </member>
    <member name="P:System.Xaml.XamlDirective.AllowedLocation">
      <summary vsli:raw="Gets a value that specifies the XAML node types where the directive can be specified.">Obtiene un valor que define los tipos de nodo XAML donde se puede especificar la directiva.</summary>
      <returns vsli:raw="A value of the enumeration. The default is the enumeration default, which is &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.None&quot; /&gt;.">Valor de la enumeración. El valor predeterminado es el valor predeterminado de la enumeración, que es <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Devuelve el código hash de este objeto.</summary>
      <returns vsli:raw="An integer hash code.">Código hash entero.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">Devuelve una lista de los espacios de nombres XAML donde este miembro XAML puede existir.</summary>
      <returns vsli:raw="A list of XAML namespace identifiers, as strings.">Lista de identificadores de espacio de nombres XAML, en forma de cadenas.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Devuelve una implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used during deferred loading of XAML-declared objects. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se emplea durante la carga diferida de objetos declarados en XAML. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. The list reports the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Devuelve una lista de objetos <see cref="T:System.Xaml.XamlMember" />. La lista notifica los miembros en los que existen relaciones de dependencia para el orden de inicialización con respecto a este objeto <see cref="T:System.Xaml.XamlMember" />. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupInvoker">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Devuelve el objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está asociado a este objeto <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Información sobre <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> para este objeto <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> se considera una propiedad de ambiente.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an event.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa un evento.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended read-only property.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa una propiedad de solo lectura.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa una propiedad que tiene un descriptor de acceso <see langword="get" /> público.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa un miembro que no puede ser resuelto por el sistema de respaldo que se usa para la resolución de tipos y miembros.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa un miembro que no se puede resolver; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended write-only property.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa una propiedad de solo escritura.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa una propiedad que tiene un descriptor de acceso <see langword="set" /> público.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Devuelve el objeto <see cref="T:System.Xaml.XamlType" /> del tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Devuelve el objeto <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">
        <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Devuelve una implementación de convertidor de tipos que está asociada a este objeto <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance that has &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">Instancia de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.ComponentModel.TypeConverter" />, o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Devuelve un descriptor de acceso <see langword="get" /> que está asociado a este objeto <see cref="T:System.Xaml.XamlDirective" />. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR reflection &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Reflection.MemberInfo" /> de reflexión de CLR que está asociado a este objeto <see cref="T:System.Xaml.XamlDirective" />. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Devuelve un descriptor de acceso <see langword="set" /> que está asociado a este objeto <see cref="T:System.Xaml.XamlDirective" />. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Devuelve una representación de cadena de este objeto <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Representación de cadena de este objeto <see cref="T:System.Xaml.XamlDirective" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDuplicateMemberException">
      <summary vsli:raw="The exception that is thrown when a XAML writer attempts to write a value for a duplicate member into the same object node.">Excepción que se inicia cuando un escritor XAML intenta escribir un valor de un miembro duplicado en el mismo nodo de objeto.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with the relevant member and type information to report.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con la información pertinente sobre el miembro y el tipo que se va a notificar.</summary>
      <param name="member" vsli:raw="The XAML member identifier to report.">Identificador de miembro XAML que se va a notificar.</param>
      <param name="type" vsli:raw="The XAML type identifier to report as the parent type.">Identificador de tipo XAML que se va a notificar como tipo primario.</param>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.DuplicateMember">
      <summary vsli:raw="Gets or sets the XAML member identifier for the property to report as a duplicate.">Obtiene o establece el identificador de miembro XAML para que la propiedad lo notifique como duplicado.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object (XAML member identifier) to report.">Objeto <see cref="T:System.Xaml.XamlMember" /> (identificador de miembro XAML) que se va a notificar.</returns>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.ParentType">
      <summary vsli:raw="Gets or sets the XAML type identifier to report as the parent type.">Obtiene o establece el identificador de tipo XAML que se va a notificar como tipo primario.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object (XAML type identifier) to report as the parent type.">Objeto <see cref="T:System.Xaml.XamlType" /> (identificador de tipo XAML) que se va a notificar como tipo primario.</returns>
    </member>
    <member name="T:System.Xaml.XamlException">
      <summary vsli:raw="The exception that is thrown for a general XAML reader or XAML writer exception.">Representa una excepción general del lector XAML o sistema de escritura XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a system-supplied message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlException" />. La instancia contiene un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlException" />. La instancia contiene un mensaje especificado que describe el error.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El llamador de este constructor debe asegurarse de que la cadena se ha traducido para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlException" />. La instancia contiene un mensaje de error especificado y una referencia a la excepción interna que es la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El llamador de este constructor debe asegurarse de que la cadena se ha traducido para la referencia cultural actual del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message, inner exception, and line information.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlException" />. La instancia contiene un mensaje de error especificado, excepción interna e información de línea.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El llamador de este constructor debe asegurarse de que la cadena se ha traducido para la referencia cultural actual del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">Excepción que es la causa de la excepción actual.</param>
      <param name="lineNumber" vsli:raw="The line number to report to debugging or to line information consumers.">Número de línea que se va a notificar a los consumidores de la información de depuración o de línea.</param>
      <param name="linePosition" vsli:raw="The line position to report to debugging or line information consumers.">Posición de línea que se va a notificar a los consumidores de la información de depuración o de línea.</param>
    </member>
    <member name="M:System.Xaml.XamlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; and provides serialization support for the line information data.">Implementa <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> y proporciona compatibilidad con la serialización de los datos de la información de línea.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlException.LineNumber">
      <summary vsli:raw="Gets or sets the line number component of XAML text line information that the exception reports.">Obtiene o establece el componente correspondiente al número de línea en la información de línea de texto XAML que la excepción notifica.</summary>
      <returns vsli:raw="The line number component of the XAML text line information.">Componente correspondiente al número de línea en la información de línea de texto XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.LinePosition">
      <summary vsli:raw="Gets or sets the line position component of XAML text line information that the exception reports.">Obtiene o establece el componente correspondiente a la posición de línea en la información de línea de texto XAML que la excepción notifica.</summary>
      <returns vsli:raw="The line position component of XAML text line information.">Componente correspondiente a la posición de línea en la información de línea de texto XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.Message">
      <summary vsli:raw="Gets or sets the exception message, and if line information is available, appends the line information to the message.">Obtiene o establece el mensaje de la excepción y, si se dispone de información de línea, anexa dicha información al mensaje.</summary>
      <returns vsli:raw="The exception message that includes the appended line information.">Mensaje de excepción que incluye la información de línea anexada.</returns>
    </member>
    <member name="T:System.Xaml.XamlInternalException">
      <summary vsli:raw="The exception that is thrown for internal inconsistencies that occur during XAML reading and XAML writing.">Excepción que se inicia si se producen incoherencias internas durante la lectura y la escritura de XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlInternalException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlInternalException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlInternalException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message" vsli:raw="The message that describes the exception.">Mensaje que describe la excepción.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlInternalException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The message that describes the exception.">Mensaje que describe la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Xaml.XamlLanguage">
      <summary vsli:raw="Defines constants that provide strings or objects that are useful for XAML markup or for programming with XAML types. These strings or objects are relevant to XAML language concepts, to the implementation of XAML language concepts in .NET XAML Services, or to both.">Define constantes que proporcionan cadenas u objetos que son útiles para el marcado XAML o para la programación con tipos XAML. Estas cadenas u objetos atañen a los conceptos del lenguaje XAML, a la implementación de conceptos del lenguaje XAML en los servicios XAML de .NET Framework o a ambos.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllDirectives">
      <summary vsli:raw="Gets a read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">Obtiene una colección genérica de solo lectura de cada identificador <see cref="T:System.Xaml.XamlDirective" /> definido por los servicios XAML de .NET Framework.</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">Colección genérica de solo lectura de cada identificador <see cref="T:System.Xaml.XamlDirective" /> definido por los servicios XAML de .NET Framework.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllTypes">
      <summary vsli:raw="Gets a read-only generic collection of individual &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that match, or alias, a XAML language intrinsic that is defined by .NET XAML Services.">Obtiene una colección genérica de solo lectura de valores <see cref="T:System.Xaml.XamlType" /> individuales que coinciden con (o representan) un elemento intrínseco del lenguaje XAML definido por los servicios XAML de .NET Framework.</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches a XAML language intrinsic.">Colección genérica de solo lectura de cada <see cref="T:System.Xaml.XamlType" /> que coincide con un elemento intrínseco del lenguaje XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Arguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or a generic usage.">Obtiene <see cref="T:System.Xaml.XamlDirective" /> para los <see langword="Arguments" /> de un método de generador o un uso genérico.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or generic usage.">
        <see cref="T:System.Xaml.XamlDirective" /> para <see langword="Arguments" /> de un método de generador o uso genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Array">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Array" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Array" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AsyncRecords">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">Obtiene una clase <see cref="T:System.Xaml.XamlDirective" /> para el pseudomiembro <see langword="AsyncRecords" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">
        <see cref="T:System.Xaml.XamlDirective" /> para el pseudomiembro <see langword="AsyncRecords" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Base">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">Obtiene <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="base" /> de XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="base" /> de XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Boolean">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Boolean" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Boolean" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Byte">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Byte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Byte" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Char">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Char" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Char" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Class">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Class" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Class" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassAttributes">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="ClassAttributes" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="ClassAttributes" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="ClassModifier" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="ClassModifier" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Code">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">Obtiene <see cref="T:System.Xaml.XamlDirective" /> para <see langword="Code" /> tal y como se detalla en [MS-XAML].</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">
        <see cref="T:System.Xaml.XamlDirective" /> para <see langword="Code" />, tal y como se detalla en [MS-XAML].</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ConnectionId">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">Obtiene un objeto <see cref="T:System.Xaml.XamlDirective" /> que identifica el punto de conexión entre eventos y controladores.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">
        <see cref="T:System.Xaml.XamlDirective" /> que identifica un punto de conexión para cablear los eventos a los controladores.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Decimal">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Decimal" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Decimal" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Double">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Double" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Double" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FactoryMethod">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">Obtiene un <see cref="T:System.Xaml.XamlDirective" /> que identifica un método generador para XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> que identifica un método generador para XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FieldModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="FieldModifier" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="FieldModifier" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Initialization">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Initialization" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Initialization" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int16">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Int16" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Int16" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int32">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Int32" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Int32" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int64">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Int64" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Int64" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Items">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Items" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Items" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Key">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Key" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Key" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Lang">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">Obtiene <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="lang" /> de XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="lang" /> de XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Member">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el tipo que constituye el tipo de elemento de <see cref="P:System.Xaml.XamlLanguage.Members" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> para el tipo que constituye el tipo de elemento de <see cref="P:System.Xaml.XamlLanguage.Members" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Members">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">Obtiene <see cref="T:System.Xaml.XamlDirective" /> para el concepto <see langword="Members" /> en XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para el concepto <see langword="Members" /> en XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Name">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Name" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Name" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Null">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt; or &lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> que corresponde al elemento intrínseco del lenguaje XAML <see langword="Null" /> o <see langword="NullExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt;/&lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">Para el intrínseco <see langword="Null" /> del / lenguaje XAML <see langword="NullExtension" />  . <see cref="T:System.Xaml.XamlType" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Object">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el concepto del lenguaje XAML <see langword="Object" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">
        <see cref="T:System.Xaml.XamlType" /> para el concepto de lenguaje XAML <see langword="Object" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.PositionalParameters">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="PositionalParameters" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="PositionalParameters" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Property">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el concepto <see langword="Property" /> en XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">
        <see cref="T:System.Xaml.XamlType" /> para el concepto <see langword="Property" /> en XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Reference">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">Obtiene un objeto <see cref="T:System.Xaml.XamlType" /> que representa a <see langword="Reference" /> en XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">
        <see cref="T:System.Xaml.XamlType" /> que representa a <see langword="Reference" /> en XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Shared">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">Obtiene un objeto <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Shared" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Shared" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Single">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Single" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Single" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Space">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">Obtiene <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="space" /> de XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="space" /> de XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Static">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el lenguaje XAML <see langword="Static" />/<see langword="StaticExtension" /> intrínseco.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">Para el intrínseco <see langword="Static" /> del / lenguaje XAML <see langword="StaticExtension" />  . <see cref="T:System.Xaml.XamlType" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.String">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="String" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Subclass">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Subclass" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Subclass" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.SynchronousMode">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously if the XAML processor supports such a mode.">Obtiene <see cref="T:System.Xaml.XamlDirective" /> que permite la carga de forma asincrónica de XAML si el procesador de XAML admite este tipo de modo.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously.">
        <see cref="T:System.Xaml.XamlDirective" /> que permite la carga de forma asincrónica de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TimeSpan">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; concept in XAML language.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el concepto <see langword="TimeSpan" /> del lenguaje XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; XAML language concept.">
        <see cref="T:System.Xaml.XamlType" /> para el concepto de lenguaje XAML <see langword="TimeSpan" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Type">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el lenguaje XAML <see langword="Type" />/<see langword="TypeExtension" /> intrínseco.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">Para el intrínseco <see langword="Type" /> del / lenguaje XAML <see langword="TypeExtension" />  . <see cref="T:System.Xaml.XamlType" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TypeArguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="TypeArguments" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="TypeArguments" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uid">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Uid" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Uid" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.UnknownContent">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="UnknownContent" /> de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="UnknownContent" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uri">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el concepto del lenguaje XAML <see langword="Uri" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">
        <see cref="T:System.Xaml.XamlType" /> para el concepto de lenguaje XAML <see langword="Uri" />.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xaml2006Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XAML (2006) language namespace. That namespace corresponds to the XAML (2006) &quot;x&quot; prefixed namespace as defined in [MS-XAML] Section 5.1.1.">Obtiene un valor de cadena para la cadena que identifica el espacio de nombres del lenguaje XAML (2006). Ese espacio de nombres corresponde al espacio de nombres con prefijo "x" de XAML (2006) tal y como se define en [MS-XAML] sección 5.1.1.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XamlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XAML.">Obtiene una colección de los identificadores de espacio de nombres para XAML.</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XAML.">Colección de los identificadores de espacio de nombres para XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XData">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block in XAML.">Obtiene <see cref="T:System.Xaml.XamlType" /> para el tipo XAML que respalda un bloque <see langword="XData" /> en XAML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block. See [MS-XAML] Section 5.2.23.">
        <see cref="T:System.Xaml.XamlType" /> para el tipo XAML que respalda un bloque <see langword="XData" />. Vea la sección de [ms-XAML] 5.2.23.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xml1998Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XML (1998) language namespace. That namespace corresponds to the XML &quot;xml&quot; prefixed namespace as referenced in [MS-XAML] Section 5.1.2.">Obtiene un valor de cadena para la cadena que identifica el espacio de nombres del lenguaje XML (1998). Ese espacio de nombres corresponde al espacio de nombres con prefijo "xml" de XML según se hace referencia en [MS-XAML] sección 5.1.2.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XmlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XML.">Obtiene una colección de identificadores de espacio de nombres para XML.</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XML.">Colección de los identificadores de espacio de nombres para XML.</returns>
    </member>
    <member name="T:System.Xaml.XamlMember">
      <summary vsli:raw="Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;) and also for general XAML type system logic.">Proporciona el identificador del sistema de tipos XAML para miembros de tipos XAML. Los lectores XAML y los sistemas de escritura XAML usan el identificador al procesar los nodos de miembro (cuando el lector XAML está en un miembro <see cref="F:System.Xaml.XamlNodeType.StartMember" />) y también para la lógica general del sistema de tipos de XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando <see cref="T:System.Reflection.EventInfo" /> del sistema de tipos de CLR y un <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">
        <see cref="T:System.Reflection.EventInfo" /> del sistema de tipos de CLR que representa el miembro de evento.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando <see cref="T:System.Reflection.EventInfo" /> del sistema de tipos de CLR y un <see cref="T:System.Xaml.XamlSchemaContext" />, incluyendo información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">
        <see cref="T:System.Reflection.EventInfo" /> del sistema de tipos de CLR que representa el miembro de evento.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que administra las llamadas de reflexión en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando <see cref="T:System.Reflection.PropertyInfo" /> del sistema de tipos de CLR y un <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">
        <see cref="T:System.Reflection.PropertyInfo" /> del sistema de tipos de CLR que representa el miembro de propiedad.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using reflection &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando <see cref="T:System.Reflection.PropertyInfo" /> de reflexión y un <see cref="T:System.Xaml.XamlSchemaContext" />, incluyendo información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">
        <see cref="T:System.Reflection.PropertyInfo" /> del sistema de tipos de CLR que representa el miembro de propiedad.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que controla las llamadas de invocación en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> para un <see cref="T:System.Xaml.XamlMember" /> que representa una propiedad que se puede adjuntar.</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">El nombre de cadena de la propiedad que se puede asociar.</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">
        <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el descriptor de acceso <see langword="get" /> de la implementación de respaldo del miembro que se puede adjuntar.</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">
        <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el descriptor de acceso <see langword="set" /> de la implementación de respaldo del miembro que se puede adjuntar.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> para un <see cref="T:System.Xaml.XamlMember" /> que representa una propiedad que se puede adjuntar, incluyendo información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">El nombre de cadena de la propiedad que se puede asociar.</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">
        <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el descriptor de acceso <see langword="get" /> de la implementación de respaldo del miembro que se puede adjuntar.</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">
        <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el descriptor de acceso <see langword="set" /> de la implementación de respaldo del miembro que se puede adjuntar.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que controla las llamadas de invocación en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> para un <see cref="T:System.Xaml.XamlMember" /> que representa un evento que se puede adjuntar.</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">El nombre de cadena del evento que se puede asociar.</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">
        <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el método <see langword="Add" /> del controlador de la implementación de respaldo del miembro que se puede adjuntar.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> para un <see cref="T:System.Xaml.XamlMember" /> que representa un evento que se puede adjuntar, incluyendo información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">El nombre de cadena del evento que se puede asociar.</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">
        <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el método <see langword="Add" /> del controlador de la implementación de respaldo del miembro que se puede adjuntar.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que controla las llamadas de invocación en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using a string name and declaring &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with this signature has significant limitations.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando un nombre de cadena y declarando información de <see cref="T:System.Xaml.XamlType" />. Un <see cref="T:System.Xaml.XamlMember" /> que se construye con esta firma tiene limitaciones importantes.</summary>
      <param name="name" vsli:raw="The string name of the member.">El nombre de cadena del miembro.</param>
      <param name="declaringType" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information for the declaring type.">Información de <see cref="T:System.Xaml.XamlType" /> para el tipo declarativo.</param>
      <param name="isAttachable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the member is attachable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para indicar que el miembro se puede adjuntar; de lo contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;declaringType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> o <paramref name="declaringType" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlMember.DeclaringType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtiene el <see cref="T:System.Xaml.XamlType" /> para el tipo que declara el miembro asociado a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> para el tipo que declara el miembro asociado a este <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeferringLoader">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se usa para la carga diferida de objetos declarados en XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Xaml.XamlDeferringLoader" /> en el tipo genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DependsOn">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. These report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtiene una lista de objetos <see cref="T:System.Xaml.XamlMember" />. Indican los miembros donde existen relaciones de dependencia para el orden de inicialización con respecto a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">Una lista de objetos <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">Indica si el objeto actual es igual que otro objeto.</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">Objeto que se va a comparar con este objeto.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto actual es igual al parámetro <paramref name="obj" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">Indica si el objeto actual es igual a otro objeto del mismo tipo.</summary>
      <param name="other" vsli:raw="An object to compare with this object.">Objeto que se va a comparar con este objeto.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto actual es igual al parámetro <paramref name="other" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Devuelve el código hash de este objeto.</summary>
      <returns vsli:raw="An integer hash code.">Código hash entero.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">Devuelve una lista de los espacios de nombres XAML donde este miembro XAML puede existir.</summary>
      <returns vsli:raw="A list of XAML namespace identifiers as strings.">Lista de identificadores de espacio de nombres XAML, en forma de cadenas.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtiene la implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está asociada a este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está asociada a este objeto <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> se notifica como una propiedad de ambiente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> se notifica como propiedad de ambiente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAttachable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member.">Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> es un miembro que se puede adjuntar.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> es un miembro que se puede adjuntar; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsDirective">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive.">Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> es una directiva XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Xaml.XamlMember" /> es una directiva XAML; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsEvent">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event member.">Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> representa un miembro de evento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un evento; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> se inicializa con una cadena <see langword="xamlName" /> válida como valor de su propiedad <see cref="P:System.Xaml.XamlMember.Name" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> se inicializa con una cadena <see langword="xamlName" /> válida; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member.">Obtiene un valor que indica si <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo lectura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member with a callable public &lt;see langword=&quot;get&quot; /&gt; accessor.">Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> representa un miembro con un descriptor de acceso <see langword="get" /> público invocable.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> representa un descriptor de acceso <see langword="get" /> público invocable; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.">Obtiene un valor que indica si el sistema de respaldo usado para la resolución de tipos y de miembros no puede resolver el miembro.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is not resolvable; &lt;see langword=&quot;false&quot; /&gt; if the member is resolvable.">Es <see langword="true" /> si el miembro no se puede resolver y <see langword="false" /> si el miembro se puede resolver.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWriteOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member.">Obtiene un valor que indica si <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo escritura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo escritura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWritePublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a callable public &lt;see langword=&quot;set&quot; /&gt; accessor.">Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> representa un miembro que tiene un descriptor de acceso <see langword="set" /> público invocable.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;set&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> representa un descriptor de acceso <see langword="set" /> público invocable; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Cuando se implementa en una clase derivada, devuelve una implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se emplea para la carga diferida de objetos declarados en XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.Xaml.XamlDeferringLoader" /> en el genérico.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. Items in the list report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Devuelve una lista de objetos <see cref="T:System.Xaml.XamlMember" />. Los elementos de la lista notifican los miembros en los que existen relaciones de dependencia para el orden de inicialización con respecto a este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">Una lista de objetos <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Devuelve un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está asociado con este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">Información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> para este objeto <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> se considera una propiedad de ambiente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para notificar este <see cref="T:System.Xaml.XamlMember" /> como una propiedad de ambiente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un evento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report that this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para notificar que este objeto <see cref="T:System.Xaml.XamlMember" /> representa un evento; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an intended read-only property.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa una propiedad de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an intended read-only property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para indicar si este objeto <see cref="T:System.Xaml.XamlMember" /> representa una propiedad de solo lectura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa una propiedad que tiene un descriptor de acceso <see langword="get" /> público.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa una propiedad que tiene un descriptor de acceso <see langword="get" /> público; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que no puede ser resuelto por el sistema de respaldo que se usa para la resolución de tipos y miembros.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que no se puede resolver; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor but not a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que tiene un descriptor de acceso <see langword="set" /> público pero no un descriptor de acceso <see langword="get" /> público.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo escritura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que tiene un descriptor de acceso <see langword="set" /> público.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a writable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que permite escritura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters">
      <summary vsli:raw="Returns the opening and closing bracket characters for a markup extension.">Devuelve los caracteres de corchete de apertura y cierre de una extensión de marcado.</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">Colección que contiene los caracteres de corchete de apertura y cierre.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Devuelve el objeto <see cref="T:System.Xaml.XamlType" /> del tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir.</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Devuelve el objeto <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">
        <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Devuelve una implementación de convertidor de tipos que está asociada a este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">Instancia de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.ComponentModel.TypeConverter" /> o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Devuelve un descriptor de acceso <see langword="get" /> que está asociado a este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;get&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MethodInfo" /> para el descriptor de acceso <see langword="get" /> asociado o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Reflection.MemberInfo" /> del sistema de tipos de CLR que está asociado a este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; object that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Reflection.MemberInfo" /> del sistema de tipos de CLR que está asociado a este <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Devuelve un descriptor de acceso <see langword="set" /> que está asociado a este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;set&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MethodInfo" /> para el descriptor de acceso <see langword="set" /> asociado o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupValueSerializer">
      <summary vsli:raw="Returns a value serializer implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Devuelve una implementación de serializador de valor que está asociada a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, or &lt;see langword=&quot;null&quot; /&gt;.">Instancia de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que está asociada a la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters">
      <summary vsli:raw="Defines the opening and closing bracket characters for a markup extension.">Define los caracteres de corchete de apertura y cierre de una extensión de marcado.</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">Colección que contiene los caracteres de corchete de apertura y cierre.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Name">
      <summary vsli:raw="Gets the &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtiene la cadena de nombre <see langword="xamlName" /> que declara este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Cadena de nombre <see langword="xamlName" /> que declara este <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have the same value.">Determina si dos objetos <see cref="T:System.Xaml.XamlMember" /> especificados tienen el mismo valor.</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor de <paramref name="xamlMember1" /> es igual al valor de <paramref name="xamlMember2" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have different values.">Determina si dos objetos <see cref="T:System.Xaml.XamlMember" /> especificados tienen valores diferentes.</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; differs from the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor de <paramref name="xamlMember1" /> difiere del valor de <paramref name="xamlMember2" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace URI that identifies the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtiene el identificador URI único del espacio de nombres XAML que identifica el espacio de nombres XAML primario de este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The identifier for the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;, as a string.">Identificador del espacio de nombres XAML primario de este <see cref="T:System.Xaml.XamlMember" />, en forma de cadena.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.SerializationVisibility">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; value, which indicates how a visual designer should process the member.">Obtiene un valor <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />, que indica cómo un diseñador visual debería procesar el miembro.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; enumeration. The default is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibility.Visible&quot; /&gt;.">Valor de la enumeración <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. De manera predeterminada, es <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TargetType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> del tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir.</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Devuelve una representación de cadena de este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Representación de cadena de este objeto <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">
        <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which can be used for type conversion construction of XAML declared objects.">Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se puede usar para la construcción de la conversión de tipos de objetos XAML declarados.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; value, with a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint on the generic.">Valor <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con una restricción <see cref="T:System.ComponentModel.TypeConverter" /> en el tipo genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.UnderlyingMember">
      <summary vsli:raw="Gets the CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is available for a member that is constructed by &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt;, &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;, or &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Reflection.MemberInfo" /> del sistema de tipos de CLR que está disponible para un miembro construido por <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> o <see cref="T:System.Reflection.EventInfo" />.</summary>
      <returns vsli:raw="CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; information, as cast from the initial constructor parameters. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with the &lt;see cref=&quot;M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)&quot; /&gt; signature returns &lt;see langword=&quot;null&quot; /&gt;.">Información <see cref="T:System.Reflection.MemberInfo" /> del sistema de tipos de CLR, según se convierte de los parámetros del constructor iniciales. Un <see cref="T:System.Xaml.XamlMember" /> que se construye con la firma <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for value serialization of XAML declared objects.">Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se emplea para la serialización de valores de objetos declarados en XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint on the generic.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> en el tipo genérico.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeList">
      <summary vsli:raw="Provides a list of XAML nodes, which can be used for scenarios such as writing XAML nodes in a deferred manner.">Proporciona una lista de nodos XAML, que se pueden usar en escenarios tales como la escritura de nodos XAML de manera aplazada.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlNodeList" /> usando un contexto de esquema especificado.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Contexto de esquema que se va a usar para las operaciones con los nodos.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context and list size.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlNodeList" /> utilizando el contexto de esquema y el tamaño de lista especificados.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Contexto de esquema que se va a usar para las operaciones con los nodos.</param>
      <param name="size" vsli:raw="The intended item count of the list.">Número de elementos que puede contener la lista.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.Clear">
      <summary vsli:raw="Clears the items in this list.">Borra los elementos de esta lista.</summary>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Count">
      <summary vsli:raw="Gets the number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">Obtiene el número de nodos de este objeto <see cref="T:System.Xaml.XamlNodeList" />.</summary>
      <returns vsli:raw="The number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">Número de elementos de este objeto <see cref="T:System.Xaml.XamlNodeList" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlNodeList.GetReader">
      <summary vsli:raw="Returns a XAML reader implementation delegate.">Devuelve un delegado de la implementación de lector XAML.</summary>
      <returns vsli:raw="A XAML reader implementation delegate.">Delegado de la implementación de lector XAML.</returns>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; is still in Write mode.  &#xA;  &#xA; -or-  &#xA;  &#xA; The writer that is used for the node list has no schema context.">
        <see cref="T:System.Xaml.XamlNodeList" /> está todavía en modo de escritura.
O bien
El sistema de escritura que se usa para obtener la lista de nodos no tiene ningún contexto de esquema.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">Obtiene el sistema de escritura XAML asociado.</summary>
      <returns vsli:raw="The associated XAML writer.">Sistema de escritura XAML asociado.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeQueue">
      <summary vsli:raw="Provides a buffer for writing nodes and reading them again.">Proporciona un búfer para escribir nodos y volver a leerlos.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; class using a provided XAML schema context.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlNodeQueue" /> usando un contexto de esquema XAML especificado.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Contexto de esquema que se va a usar para las operaciones con los nodos.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlSchemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlSchemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Count">
      <summary vsli:raw="Gets the number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">Obtiene el número de nodos de <see cref="T:System.Xaml.XamlNodeQueue" />.</summary>
      <returns vsli:raw="The number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">Número de nodos de <see cref="T:System.Xaml.XamlNodeQueue" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.IsEmpty">
      <summary vsli:raw="Gets a value that determines whether this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes.">Obtiene un valor que determina si este objeto <see cref="T:System.Xaml.XamlNodeQueue" /> no contiene nodos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes; &lt;see langword=&quot;false&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; contains nodes.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlNodeQueue" /> no contiene nodos; es <see langword="false" /> si este objeto <see cref="T:System.Xaml.XamlNodeQueue" /> contiene nodos.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Reader">
      <summary vsli:raw="Gets a XAML reader implementation delegate.">Obtiene un delegado de la implementación de lector XAML.</summary>
      <returns vsli:raw="A XAML reader implementation delegate.">Delegado de la implementación de lector XAML.</returns>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML writer that is used for the node list has no valid XAML schema context.">El sistema de escritura XAML que se usa para la lista de nodos no tiene ningún contexto de esquema XAML válido.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">Obtiene el sistema de escritura XAML asociado.</summary>
      <returns vsli:raw="The associated XAML writer.">Sistema de escritura XAML asociado.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeType">
      <summary vsli:raw="Describes the type of the node that is currently being processed by a XAML reader.">Describe el tipo del nodo que está procesado actualmente un lector XAML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndMember">
      <summary vsli:raw="The reader is at the end of a member node.">El lector está en el final de un nodo de miembros.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndObject">
      <summary vsli:raw="The reader is at the end of an object node.">El lector está en el final de un nodo de objetos.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.GetObject">
      <summary vsli:raw="The reader is within an object node and writing a default or implicit value, instead of being a specified object value.">El lector está dentro de un nodo de objetos y escribe un valor predeterminado o implícito, en lugar de ser un valor de objeto especificado.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.NamespaceDeclaration">
      <summary vsli:raw="The reader is within an XML namespace declaration.">El lector está dentro de una declaración del espacio de nombres XML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.None">
      <summary vsli:raw="The reader is not positioned at a true node (for example, the reader might be at end-of-file).">El lector no está situado en un nodo real (por ejemplo, el lector podría encontrarse al final de un archivo).</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartMember">
      <summary vsli:raw="The reader is at the start of a member node.">El lector está en el inicio de un nodo de miembros.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartObject">
      <summary vsli:raw="The reader is at the start of an object node.">El lector está en el inicio de un nodo de objetos.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.Value">
      <summary vsli:raw="The reader is within a node and processing a value.">El lector está dentro de un nodo y procesando un valor.</summary>
    </member>
    <member name="T:System.Xaml.XamlObjectEventArgs">
      <summary vsli:raw="Provides data for callbacks that can be inserted in the sequence for object initialization and property setting. This influences the object graph that is produced by &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Proporciona datos para las devoluciones de llamada que se pueden insertar en la secuencia para la inicialización de objetos y la configuración de propiedades. Esto afecta al gráfico de objeto generado por <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectEventArgs.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectEventArgs" />.</summary>
      <param name="instance" vsli:raw="The object instance that is relevant to the event data.">Instancia de objeto que es pertinente para los datos del evento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLineNumber">
      <summary vsli:raw="Gets or sets the line number of the relevant object instance.">Obtiene o establece el número de línea de la instancia del objeto pertinente.</summary>
      <returns vsli:raw="The line number of the element.">Número de línea del elemento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLinePosition">
      <summary vsli:raw="Gets or sets the position in the line of the relevant object instance.">Obtiene o establece la posición en la línea de la instancia del objeto pertinente.</summary>
      <returns vsli:raw="The position in the line of the element.">Posición en la línea del elemento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.Instance">
      <summary vsli:raw="Gets the object instance that is relevant to the event data.">Obtiene la instancia de objeto que es pertinente para los datos del evento.</summary>
      <returns vsli:raw="The object instance that is relevant to the event data.">Instancia de objeto que es pertinente para los datos del evento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.SourceBamlUri">
      <summary vsli:raw="Gets or sets the BAML URI of the relevant object instance.">Obtiene o establece el URI de BAML de la instancia del objeto pertinente.</summary>
      <returns vsli:raw="The BAML URI of the relevant object instance.">URI de BAML de la instancia del objeto pertinente.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReader">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation that reads object graphs and generates a XAML node stream.">Proporciona una implementación de <see cref="T:System.Xaml.XamlReader" /> que lee gráficos de objetos y genera una secuencia de nodos XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
      <param name="instance" vsli:raw="The root of the object tree / object graph to read.">Raíz del árbol de objetos o gráfico de objetos que se va a leer.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified reader settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReader" /> con la configuración de lector especificada.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Raíz del árbol de objetos que se va a leer.</param>
      <param name="settings" vsli:raw="A settings object.">Objeto de configuración.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReader" /> con el contexto de esquema especificado.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Raíz del árbol de objetos que se va a leer.</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">Contexto de esquema que el lector va a usar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context and reader settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReader" /> con el contexto de esquema y la configuración de lector especificados.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Raíz del árbol de objetos que se va a leer.</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">Contexto de esquema que el lector va a usar.</param>
      <param name="settings" vsli:raw="A settings object.">Objeto de configuración.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Instance">
      <summary vsli:raw="Gets the object instance that is available at the current reader position.">Obtiene la instancia de objeto que está disponible en la posición actual del lector.</summary>
      <returns vsli:raw="The object instance at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on an object.">Instancia de objeto que está disponible en la posición actual del lector o <see langword="null" /> si el lector no se encuentra en ningún objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at the end of the file.">Obtiene un valor que indica si el lector se encuentra al final del archivo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader position is at the end of the file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el lector se encuentra al final del archivo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Member">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Xaml.XamlMember" /> actual en la posición del lector si este último se encuentra en un objeto <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on a member.">Miembro actual o <see langword="null" /> si el lector no se encuentra en un miembro.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace declaration from the current reader position.">Obtiene la declaración de espacio de nombres XAML de la posición actual del lector.</summary>
      <returns vsli:raw="The XAML namespace declaration if the reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.NamespaceDeclaration&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Declaración del espacio de nombres XAML si el lector se encuentra en un objeto <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" />; de lo contrario, devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="The type of the current node.">Tipo del nodo actual.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source object graph, if a node is available.">Proporciona el siguiente nodo XAML del gráfico de objetos de origen si está disponible.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si hay un nodo disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">Obtiene un objeto que proporciona información de esquema para el conjunto de información.</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">Objeto que proporciona información de esquema para el conjunto de información.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position.">Obtiene el tipo <see cref="T:System.Xaml.XamlType" /> del objeto ubicado en la posición actual del lector.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the position is not on an object.">
        <see cref="T:System.Xaml.XamlType" /> del objeto ubicado en la posición actual del lector o <see langword="null" /> si el lector no se encuentra en un objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Value">
      <summary vsli:raw="Gets the value of the node at the current reader position.">Obtiene el valor del nodo ubicado en la posición actual del lector.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Valor del nodo actual o <see langword="null" /> si el lector no se encuentra en un tipo de nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderException">
      <summary vsli:raw="The exception that is thrown by several &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; internal helper APIs.">Representa la excepción que inician varias API del asistente internas de <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReaderException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReaderException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReaderException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReaderException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt;.">Especifica reglas de procesamiento o configuraciones de opciones para <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderSettings&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlObjectReaderSettings.RequireExplicitContentVisibility">
      <summary vsli:raw="Gets or sets a value that determines whether writers that use the associated &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; for context should use designer settings for writing content explicitly.">Obtiene o establece un valor que determina si los sistemas de escritura que usan el <see cref="T:System.Xaml.XamlObjectReader" /> asociado para el contexto deben usar valores de diseñador para la escritura de contenido explícitamente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that writers that use this context should use designer settings for writing any output content in cases where &lt;see cref=&quot;P:System.Xaml.XamlMember.IsWritePublic&quot; /&gt; reports &lt;see langword=&quot;false&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if designer settings should be ignored.">Es <see langword="true" /> para especificar que los sistemas de escritura que usan este contexto deben usar valores de diseñador para escribir cualquier contenido de salida en aquellos casos en los que <see cref="P:System.Xaml.XamlMember.IsWritePublic" /> indique <see langword="false" />; es <see langword="false" /> si se debe omitir la configuración de diseñador.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriter">
      <summary vsli:raw="Creates an object graph from a source XAML node stream.">Crea un gráfico de objetos a partir de una secuencia de nodos XAML de origen.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using  the XAML schema context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriter" /> con el contexto de esquema XAML usado por un <see cref="T:System.Xaml.XamlReader" />.</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">Contexto de esquema XAML compartido con el lector XAML que proporciona los nodos para la escritura.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using the context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and its settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriter" /> usando el contexto empleado por un <see cref="T:System.Xaml.XamlReader" /> y su configuración.</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">Contexto de esquema XAML compartido con el lector XAML que proporciona los nodos para la escritura.</param>
      <param name="settings" vsli:raw="A settings object that specifies certain options for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; behavior and output.">Objeto de configuración que especifica determinadas opciones para el comportamiento y la salida de <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Clear">
      <summary vsli:raw="Resets all possible frames and clears the object graph.">Restablece todos los posibles marcos y borra el gráfico de objetos.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;, and optionally, releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Xaml.XamlObjectWriter" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para liberar los recursos administrados; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> que esté asociado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. The object is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Objeto del que se va a informar. El objeto se empaqueta en <see cref="T:System.Xaml.XamlObjectEventArgs" /> cuando se invoca el controlador.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> que esté asociado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. The value  is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Objeto del que se va a informar. El valor se empaqueta en <see cref="T:System.Xaml.XamlObjectEventArgs" /> cuando se invoca el controlador.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> al que se haga referencia que esté asociado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. This is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Objeto del que se va a informar. Se empaqueta en <see cref="T:System.Xaml.XamlObjectEventArgs" /> cuando se invoca el controlador.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> al que se haga referencia que esté asociado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The value to pass through &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Valor que se va a pasar a través de <see cref="T:System.Xaml.XamlObjectEventArgs" /> cuando se invoca el controlador.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this writer, as long as &lt;paramref name=&quot;handled&quot; /&gt; in &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; event data is not &lt;see langword=&quot;true&quot; /&gt;.">Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> al que se haga referencia que esté asociado al objeto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> de este sistema de escritura siempre y cuando el valor de <paramref name="handled" /> de los datos de evento de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> no sea <see langword="true" />.</summary>
      <param name="eventSender" vsli:raw="The object to report as the source to the handler.">Objeto que se va a notificar al controlador como origen.</param>
      <param name="member" vsli:raw="The name of the property to set, which is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">Nombre de la propiedad que se va a establecer, que se pasa al controlador como parte de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <param name="value" vsli:raw="The value to provide for the property that is named by &lt;paramref name=&quot;property&quot; /&gt;. The value is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">Valor que se va a proporcionar para la propiedad designada por <paramref name="property" />. El valor se pasa al controlador como parte de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <returns vsli:raw="A Boolean value that is set by any associated handler; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Valor booleano establecido por cualquier controlador asociado; de lo contrario, devuelve <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.Result">
      <summary vsli:raw="Gets the last object that was written. Typically only called when the node stream is at its end and the object graph is complete.">Obtiene el último objeto que se escribió. Normalmente, se llama únicamente cuando la secuencia de nodos está llegando al final y el gráfico de objeto está completado.</summary>
      <returns vsli:raw="The last object written, or &lt;see langword=&quot;null&quot; /&gt;.">Último objeto escrito o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.RootNameScope">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the absolute node root of the XAML object writer.">Obtiene el servicio <see cref="T:System.Windows.Markup.INameScope" /> que mantiene el ámbito de nombres XAML para la raíz del nodo absoluto del sistema de escritura de objetos XAML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the current root of the object writer.">Servicio <see cref="T:System.Windows.Markup.INameScope" /> que mantiene el ámbito de nombres XAML para la raíz actual del sistema de escritura de objetos.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.SchemaContext">
      <summary vsli:raw="Gets the active XAML schema context.">Obtiene el contexto de esquema XAML activo.</summary>
      <returns vsli:raw="The XAML schema context.">Contexto de esquema XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; and provides line information for exceptions.">Implementa <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> y proporciona información de línea para las excepciones.</summary>
      <param name="lineNumber" vsli:raw="The line number from the reader.">Número de línea del lector.</param>
      <param name="linePosition" vsli:raw="The line position from the reader.">Posición de línea del lector.</param>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that reports whether a line information service should provide values and therefore, should also call the &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; method when it is relevant.">Obtiene un valor que indica si un servicio de información de línea debe proporcionar valores y, por tanto, debe llamar también al método <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> cuando proceda.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the writer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el sistema de escritura usa información de línea; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndMember">
      <summary vsli:raw="Closes the current member scope, and may write the value of the member scope while it closes. The new scope becomes the parent object scope of the member.">Cierra el ámbito de miembro actual y puede escribir el valor del ámbito de miembro mientras se cierra. El nuevo ámbito se convierte en el ámbito de objeto primario del miembro.</summary>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Failed to create member value from a value node that is encountered between this call and a previous &lt;see langword=&quot;StartMember&quot; /&gt;.">Error al crear el valor de miembro a partir de un nodo de valor que se encuentra entre esta llamada y <see langword="StartMember" /> anterior.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndObject">
      <summary vsli:raw="Closes the current object scope in the writer. The new object scope becomes the parent member scope.">Cierra el ámbito de objeto actual en el sistema de escritura. El ámbito de objeto nuevo pasa a ser el ámbito del miembro primario.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteGetObject">
      <summary vsli:raw="Writes the conceptual &lt;see langword=&quot;StartObject&quot; /&gt; into the object graph when the specified object is a default or implicit value of the parent property. The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.">Escribe el elemento <see langword="StartObject" /> conceptual en el gráfico de objeto cuando el objeto especificado se corresponde con el valor predeterminado o implícito de la propiedad primaria. El valor implícito procede de la información obtenida del contexto de esquema XAML y de la información sobre los tipos de respaldo, en lugar de especificarse como un valor de objeto en el conjunto de nodos XAML de entrada.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Defines a namespace declaration that applies to the next object scope or member scope.">Define una declaración de espacio de nombres que se aplica al siguiente ámbito de objeto o ámbito de miembro.</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">Declaración de espacio de nombres que se va a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="namespaceDeclaration" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Un componente de <paramref name="namespaceDeclaration" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlObjectReaderException" vsli:raw="Tried to write a XAML namespace node in an invalid scope.">Se ha intentado escribir un ámbito no válido en un nodo de espacio de nombres XAML.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a new member node into the current object scope, and the scope becomes a new member scope.">Escribe un nuevo nodo de miembro en el ámbito de objeto actual y el ámbito pasa a ser un nuevo ámbito de miembro.</summary>
      <param name="property" vsli:raw="The XAML property to write. Typically you obtain this value from a XAML reader through the XAML node stream intermediate.">Propiedad XAML que se va a escribir. Normalmente se obtiene este valor de un lector XAML a través de la secuencia de nodos XAML.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; has &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; set to &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.XamlLanguage.UnknownContent&quot; /&gt; passed, which indicates that the XAML node stream contained content for an object that does not support content.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start member in an invalid scope.">
        <paramref name="property" /> tiene <see cref="P:System.Xaml.XamlMember.IsUnknown" /> establecido en <see langword="true" />.
O bien
<see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> pasó, lo que indica que la secuencia de nodo de XAML contenía contenido para un objeto que no admite contenido.
O bien
Se ha intentado escribir un ámbito no válido en un miembro de inicio.</exception>
      <exception cref="T:System.Xaml.XamlDuplicateMemberException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; specifies a property that is already explicitly set in the parent object scope.">
        <paramref name="property" /> especifica una propiedad que ya está explícitamente establecida en el ámbito del objeto primario.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes an object node into the current scope, and sets the scope to a new object scope.">Escribe un nodo de objeto en el ámbito actual y establece el ámbito en un nuevo ámbito de objeto.</summary>
      <param name="xamlType" vsli:raw="The type to write. Typically you obtain this value from a XAML reader.">Tipo que se va a escribir. Este valor suele obtenerse de un lector XAML.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Processing an &lt;see cref=&quot;P:System.Xaml.XamlType.IsUnknown&quot; /&gt; type and cannot create an object.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start object in an invalid scope.">Procesamiento de un tipo <see cref="P:System.Xaml.XamlType.IsUnknown" /> y no se puede crear un objeto.
O bien
Se ha intentado escribir un ámbito no válido en un objeto de inicio.</exception>
      <exception cref="T:System.Xaml.XamlParseException" vsli:raw="Attempted to write a root object when the root object was already provided in the settings.">Se ha intentado escribir el objeto raíz cuando el objeto raíz ya se había proporcionado en la configuración.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a value to the current member scope. If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.">Escribe un valor en el ámbito de miembro actual. Si el ámbito actual está en un objeto de colección, diccionario o matriz, el valor debe agregarse a la colección, el diccionario o la matriz.</summary>
      <param name="value" vsli:raw="The value to write.">Valor que se va a escribir.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Attempted to write a value in an invalid scope.">Se ha intentado escribir un ámbito no válido en un valor.</exception>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterException">
      <summary vsli:raw="The exception that is thrown when a XAML writer (such as the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class) encounters an error while attempting to produce object graphs from a XAML node stream.">Excepción que se inicia cuando un sistema de escritura XAML (por ejemplo, la clase <see cref="T:System.Xaml.XamlObjectWriter" />) detecta un error al intentar generar gráficos de objetos a partir de una secuencia de nodos XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriterException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriterException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriterException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriterException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterSettings">
      <summary vsli:raw="Provides specific XAML writer settings for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Proporciona una configuración de sistema de escritura XAML específica para <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class that is based on the copy of an existing instance.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriterSettings" /> que se basa en la copia de una instancia existente.</summary>
      <param name="settings" vsli:raw="The settings instance to copy.">Instancia de configuración que se va a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;settings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="settings" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
      <summary vsli:raw="Gets or sets &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions that the XAML writer observes.">Obtiene o establece permisos <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que observa el escritor de XAML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions.">Permisos <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of the object lifetime for each created object.">Obtiene o establece una referencia a una devolución de llamada invocada por el sistema de escritura XAML en la fase <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> de la duración de cada objeto creado.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of object lifetime.">Devolución de llamada invocada por el sistema de escritura XAML en la fase <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> de la duración de los objetos.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of the object lifetime for each created object.">Obtiene o establece una referencia a una devolución de llamada invocada por el sistema de escritura XAML en la fase <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> de la duración de cada objeto creado.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of object lifetime.">Devolución de llamada invocada por el sistema de escritura XAML en la fase <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> de la duración de los objetos.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.">Obtiene o establece una referencia a una devolución de llamada invocada por el sistema de escritura XAML en la fase posterior a la escritura de un miembro de la duración de cada objeto creado.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.">Devolución de llamada invocada por el sistema de escritura XAML en la fase posterior a la escritura de un nodo de miembro del período de duración de los objetos.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.">Obtiene o establece una referencia a una devolución de llamada invocada por el sistema de escritura XAML en la fase anterior a la escritura de un miembro de la duración de cada objeto creado.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.">Devolución de llamada invocada por el sistema de escritura XAML en la fase anterior a la escritura de un miembro de la duración de los objetos.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
      <summary vsli:raw="Gets or sets the XAML namescope to use for registering names from the XAML writer if &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Obtiene o establece el ámbito de nombres XAML que se va a usar para registrar los nombres del sistema de escritura XAML si el valor de la propiedad <see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /> es <see langword="true" />.</summary>
      <returns vsli:raw="The XAML namescope to use for registering names. The default is &lt;see langword=&quot;null&quot; /&gt;.">Ámbito de nombres XAML que se va a utilizar para registrar los nombres. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML writer should ignore (not call) &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations on a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; in type-converter situations.">Obtiene o establece un valor que especifica si el sistema de escritura XAML debe omitir (no llamar a) las implementaciones de <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> en un objeto <see cref="T:System.ComponentModel.TypeConverter" /> en situaciones de convertidor de tipos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XAML writer ignores &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el sistema de escritura XAML omite las implementaciones de <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
      <summary vsli:raw="Gets or sets a value that determines whether to disable a default &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; feature that runs type conversion on the &lt;paramref name=&quot;K&quot; /&gt; component of a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; before writing the object graph representation.">Obtiene o establece un valor que determina si se va a deshabilitar una característica <see cref="T:System.Xaml.XamlObjectWriter" /> predeterminada que ejecuta la conversión de tipos en el componente <paramref name="K" /> de <see cref="T:System.Collections.Generic.Dictionary`2" /> antes de escribir la representación del gráfico de objetos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object should be disabled. &lt;see langword=&quot;false&quot; /&gt; if performing &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object applies. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la conversión de tipos <paramref name="K" /> para un objeto <see cref="T:System.Collections.Generic.Dictionary`2" /> debe estar deshabilitada. Es <see langword="false" /> si es aplicable la conversión de tipos <paramref name="K" /> para un objeto <see cref="T:System.Collections.Generic.Dictionary`2" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
      <summary vsli:raw="Gets or sets a value that determines whether name registration should occur against the specified &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;.">Obtiene o establece un valor que determina si los nombres deben registrarse en el ámbito <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> especificado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if name registration should occur against the &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if name registration should occur into the parent XAML namescope. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se deben registrar los nombres en <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />; es <see langword="false" /> si se deben registrar los nombres en el ámbito de nombres XAML primario. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
      <summary vsli:raw="Gets or sets a preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">Obtiene o establece un objeto raíz preexistente para las operaciones de <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <returns vsli:raw="A preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">Objeto raíz preexistente para las operaciones de <see cref="T:System.Xaml.XamlObjectWriter" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.">Obtiene o establece un valor que determina si el sistema de escritura XAML omite la comprobación de la ruta de acceso del código para ver si hay propiedades duplicadas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the duplicate property check should be omitted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se debe omitir la comprobación de propiedades duplicadas; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension, which is relevant when the markup extension represents the root of an object graph.">Obtiene o establece un valor que indica si el objeto <see cref="T:System.Xaml.XamlObjectWriter" /> debe omitir las llamadas a <see langword="ProvideValue" /> en una extensión de marcado, lo cual resulta adecuado cuando la extensión de marcado representa la raíz de un gráfico de objetos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto <see cref="T:System.Xaml.XamlObjectWriter" /> debe omitir la llamada a <see langword="ProvideValue" /> en una extensión de marcado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
      <summary vsli:raw="Used in the &lt;see langword=&quot;BeginInitHandler&quot; /&gt; in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">Se usa en el <see langword="BeginInitHandler" /> en lugar del <see langword="BaseUri" /> real.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; to be used in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">Objeto <see cref="T:System.Uri" /> que se va a usar en lugar del objeto <see langword="BaseUri" /> real.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
      <summary vsli:raw="Gets or sets the handler to use when the object writer calls into a CLR-implemented &lt;see langword=&quot;SetValue&quot; /&gt; for dependency properties.">Obtiene o establece el controlador que se usa cuando el sistema de escritura de objetas llama a un método <see langword="SetValue" /> implementado por CLR para las propiedades de dependencia.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Implementación de controlador que controla este caso.</returns>
    </member>
    <member name="T:System.Xaml.XamlParseException">
      <summary vsli:raw="The exception that is thrown when a XAML reader cannot process elements of the XAML reader source into a XAML node stream.">Excepción que se inicia cuando un lector XAML no puede procesar elementos del origen del lector XAML en una secuencia de nodos XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlParseException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlParseException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlParseException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlParseException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Xaml.XamlReader">
      <summary vsli:raw="Provides base definitions for classes that consume XAML input and produce XAML node streams.">Proporciona definiciones de base para las clases que usan la entrada de XAML y generan flujos de nodos XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.#ctor">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">Inicializa la clase <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Close">
      <summary vsli:raw="Closes the XAML node stream.">Cierra el flujo de nodos XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, and optionally, releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Xaml.XamlReader" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para liberar los recursos administrados; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlReader.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called.">Obtiene un valor que indica si se ha llamado al método <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se ha llamado a <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.IsEof">
      <summary vsli:raw="When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.">Cuando se implementa en una clase derivada, obtiene un valor que notifica si la posición del lector está al final del archivo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file of the XAML node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la posición está en el final conceptual del archivo de la secuencia de nodos XAML; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Member">
      <summary vsli:raw="When implemented in a derived class, gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Cuando se implementa en una clase derivada, obtiene el miembro actual situado en la posición del lector, si la posición del lector está en un miembro <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a member.">Miembro actual o <see langword="null" /> si el lector no se encuentra en un miembro.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Namespace">
      <summary vsli:raw="When implemented in a derived class, gets the XAML namespace information from the current node.">Cuando se implementa en una clase derivada, obtiene la información del espacio de nombres XAML del nodo actual.</summary>
      <returns vsli:raw="The XAML namespace information, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Información del espacio de nombres XAML, si está disponible; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.NodeType">
      <summary vsli:raw="When implemented in a derived class, gets the type of the current node.">Cuando se implementa en una clase derivada, obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Valor de la enumeración <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Read">
      <summary vsli:raw="When implemented in a derived class, provides the next XAML node from the source, if a node is available.">Cuando se implementa en una clase derivada, proporciona el siguiente nodo XAML del origen, si hay alguno disponible.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si hay un nodo disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.ReadSubtree">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that is based on the current &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, where the returned &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; is used to iterate through a subtree of the XAML node structure.">Devuelve un objeto <see cref="T:System.Xaml.XamlReader" /> que se basa en el objeto <see cref="T:System.Xaml.XamlReader" /> actual, donde el objeto <see cref="T:System.Xaml.XamlReader" /> devuelto se usa para recorrer en iteración un subárbol de la estructura de nodos XAML.</summary>
      <returns vsli:raw="A new XAML reader instance for the subtree.">Nueva instancia de lector XAML para el subárbol.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets an object that provides XAML schema context information for the information set.">Cuando se implementa en una clase derivada, obtiene un objeto que proporciona información sobre el contexto de esquema XAML del conjunto de información.</summary>
      <returns vsli:raw="An object that provides XAML schema context information for the information set.">Objeto que proporciona información sobre el contexto de esquema XAML del conjunto de información.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Skip">
      <summary vsli:raw="Skips the current node and advances the reader position to the next node.">Omite el nodo actual y avanza la posición del lector hasta el nodo siguiente.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.System#IDisposable#Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlReader.Type">
      <summary vsli:raw="When implemented in a derived class, gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Cuando se implementa en una clase derivada, obtiene el objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">Objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual o <see langword="null" /> si la posición actual del lector no se encuentra en un objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Value">
      <summary vsli:raw="When implemented in a derived class, gets the value of the current node.">Cuando se implementa en una clase derivada, obtiene el valor del nodo actual.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Valor del nodo actual o <see langword="null" /> si la posición actual del lector no se encuentra en un tipo de nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation.">Especifica reglas de procesamiento o configuraciones de opciones para una implementación de <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class based on values in another &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlReaderSettings" /> a partir de los valores de otro objeto <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">Objeto <see cref="T:System.Xaml.XamlReaderSettings" /> existente.</param>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the root object may include members that have a protected code access model when it reports the XAML type representation.">Obtiene o establece un valor que indica si el objeto raíz puede incluir miembros que tienen un modelo de acceso de código protegido al notificar la representación de tipos XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the root object may include members that have a protected code access model; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto raíz puede incluir miembros que tienen un modelo de acceso de código protegido; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.BaseUri">
      <summary vsli:raw="Gets or sets the base URI that is used to resolve relative paths.">Obtiene o establece el identificador URI base que se utiliza para resolver las rutas de acceso relativas.</summary>
      <returns vsli:raw="The base URI to use. The default is &lt;see langword=&quot;null&quot; /&gt;.">Identificador URI que se va a utilizar. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes that exist on property elements.">Obtiene o establece un valor que especifica si el lector XAML debe omitir los valores de los atributos <see langword="x:Uid" /> que existen en los elementos de propiedad.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. &lt;see langword=&quot;false&quot; /&gt; if the reader should process &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el lector debe omitir los valores de los atributos <see langword="x:Uid" /> en los elementos de propiedad. <see langword="false" /> si el lector debe procesar los atributos <see langword="x:Uid" /> en los elementos de propiedad. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.LocalAssembly">
      <summary vsli:raw="Gets or sets the object that represents the current local assembly for processing. This assembly information is used for calls to helper APIs such as &lt;see cref=&quot;M:System.Xaml.XamlType.GetAllMembers&quot; /&gt;.">Obtiene o establece el objeto que representa el ensamblado local actual que se va a procesar. Esta información de ensamblado se usa para llamar a API auxiliares como <see cref="M:System.Xaml.XamlType.GetAllMembers" />.</summary>
      <returns vsli:raw="A CLR reflection &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; object.">Objeto <see cref="T:System.Reflection.Assembly" /> de reflexión de CLR.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ProvideLineInfo">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader can provide line number and position.">Obtiene o establece un valor que especifica si el lector puede proporcionar el número y la posición de línea.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can provide line number and position information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el lector puede proporcionar el número y la posición de línea; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ValuesMustBeString">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader enforces that all &lt;see langword=&quot;Value&quot; /&gt; nodes are processed as a &lt;see langword=&quot;String&quot; /&gt; type.">Obtiene o establece un valor que especifica si el lector exige que todos los nodos <see langword="Value" /> se procesen como tipos <see langword="String" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader enforces that only &lt;see langword=&quot;String&quot; /&gt; is contained in &lt;see langword=&quot;Value&quot; /&gt; nodes; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el lector exige que solo haya tipos <see langword="String" /> en los nodos <see langword="Value" />; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContext">
      <summary vsli:raw="Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.">Define un contexto reutilizable para interpretar o asignar tipos XAML, y los tipos de los ensamblados subyacentes.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContext" /> basándose en un conjunto de ensamblados de referencia.</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information items. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Conjunto enumerable de elementos de información de ensamblado. La información de cada elemento viene especificada por un valor <see cref="T:System.Reflection.Assembly" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies and a settings object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContext" /> basándose en un conjunto de ensamblados de referencia y un objeto de configuración.</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Conjunto enumerable de información de ensamblado. La información de cada elemento viene especificada por un valor <see cref="T:System.Reflection.Assembly" />.</param>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Objeto de configuración que se va a usar para crear el objeto <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a settings object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContext" /> basándose en un objeto de configuración.</summary>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Objeto de configuración que se va a usar para crear el objeto <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.Finalize">
      <summary vsli:raw="Provides a nonstandard &lt;see langword=&quot;Finalize&quot; /&gt; implementation that does not invoke &lt;see langword=&quot;Dispose&quot; /&gt;.">Proporciona una implementación de <see langword="Finalize" /> no estándar que no invoca a <see langword="Dispose" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">Obtiene un valor que especifica si un esquema XAML y su contexto emplean nombres de ensamblado completos en los valores devueltos por la API de búsqueda.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si un esquema XAML y su contexto emplean nombres de ensamblado completos en los valores devueltos por las API de búsqueda; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of namespaces.">Busca en los ensamblados que contiene <see cref="T:System.Xaml.XamlSchemaContext" /> y devuelve un conjunto de espacios de nombres.</summary>
      <returns vsli:raw="An enumerable set of namespace identifiers. These identifiers are provided as strings.">Conjunto enumerable de identificadores de espacio de nombres. Estos identificadores se proporcionan como cadenas.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of types from the specified XAML namespace.">Busca en los ensamblados que contiene <see cref="T:System.Xaml.XamlSchemaContext" /> y devuelve un conjunto de tipos del espacio de nombres XAML especificado.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace to return types for.">Espacio de nombres XAML del que se van a devolver tipos.</param>
      <returns vsli:raw="An enumerable set of XAML types. Each XAML type in the set is represented by a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object.">Conjunto enumerable de tipos XAML. Cada tipo XAML del conjunto está representado por un objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
      <summary vsli:raw="Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.">Obtiene una cadena que se notifica como el prefijo preferido para uso de los consumidores cuando asignan el espacio de nombres XAML especificado.</summary>
      <param name="xmlns" vsli:raw="The XAML namespace to get the preferred prefix for.">Espacio de nombres XAML del que se va a obtener el prefijo preferido.</param>
      <returns vsli:raw="A string that consumers should use when they map the specified XAML namespace for markup use.">Cadena que los consumidores deberían usar cuando asignan el espacio de nombres XAML especificado para uso del marcado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlns&quot; /&gt; is null.">
        <paramref name="xmlns" /> es null.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value converter that can convert to the requested &lt;paramref name=&quot;targetType&quot; /&gt;.">Devuelve un convertidor de valores que puede realizar la conversión al valor <paramref name="targetType" /> solicitado.</summary>
      <param name="converterType" vsli:raw="The converter implementation.">Implementación del convertidor.</param>
      <param name="targetType" vsli:raw="The desired destination type for the converter.">Tipo de destino deseado para el convertidor.</param>
      <typeparam name="TConverterBase" vsli:raw="The specific converter base class.">Clase base concreta del convertidor.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with a constraint that matches the constraint that is put on the method call.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con una restricción que coincide con la restricción que se coloca en la llamada al método.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; value that represents a directive, either for the XAML language or for a particular implementation.">Devuelve un valor <see cref="T:System.Xaml.XamlDirective" /> que representa una directiva, bien para el lenguaje XAML o para una implementación determinada.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the named directive.">Espacio de nombres XAML que contiene la directiva con nombre.</param>
      <param name="name" vsli:raw="The name of the directive to obtain.">Nombre de la directiva que se va a obtener.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; object that represents the requested directive.">Objeto <see cref="T:System.Xaml.XamlDirective" /> que representa la directiva solicitada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlNamespace" /> o <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML namespace and a string for the type name. This signature can specify the type arguments for cases where the desired type is a generic type.">Devuelve un objeto <see cref="T:System.Xaml.XamlType" /> basado en un espacio de nombres XAML y una cadena para el nombre de tipo. Esta firma puede especificar los argumentos de tipo para aquellos casos en los que el tipo deseado es un tipo genérico.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the desired type.">Espacio de nombres XAML que contiene el tipo deseado.</param>
      <param name="name" vsli:raw="The string name of the desired type.">Nombre de cadena del tipo deseado.</param>
      <param name="typeArguments" vsli:raw="The initialization type arguments for a generic type.">Argumentos de tipo de inicialización para un tipo genérico.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input criteria.">
        <see cref="T:System.Xaml.XamlType" /> que coincide con el criterio de entrada.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a CLR type identifier.">Devuelve un objeto <see cref="T:System.Xaml.XamlType" /> que se basa en un identificador de tipo de CLR.</summary>
      <param name="type" vsli:raw="The type to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">Tipo para el que se va a obtener un objeto <see cref="T:System.Xaml.XamlType" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;type&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> que coincide con el valor <paramref name="type" /> de entrada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML system type name.">Devuelve un objeto <see cref="T:System.Xaml.XamlType" /> que se basa en un nombre de tipo de sistema XAML.</summary>
      <param name="xamlTypeName" vsli:raw="The XAML type name to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">Nombre de tipo XAML para el que se va a obtener un objeto <see cref="T:System.Xaml.XamlType" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;xamlTypeName&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> que coincide con el valor <paramref name="xamlTypeName" /> de entrada.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;xamlTypeName&quot; /&gt; (&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; or &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt;) is &lt;see langword=&quot;null&quot; /&gt;.">Un componente de <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> o <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlTypeName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
      <summary vsli:raw="Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.">Se llama cuando las operaciones usan este contexto de esquema para resolver un ensamblado requerido para resolver los espacios de nombres XAML que contiene.</summary>
      <param name="assemblyName" vsli:raw="The name of the assembly to load.">Nombre del ensamblado que se va a cargar.</param>
      <returns vsli:raw="The resolved assembly.">Ensamblado resuelto.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
      <summary vsli:raw="Gets an enumerable set of reference assemblies for the XAML schema context.">Obtiene un conjunto enumerable de ensamblados de referencia para el contexto de esquema XAML.</summary>
      <returns vsli:raw="An enumerable set of reference assemblies for the schema context. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Conjunto enumerable de ensamblados de referencia para el contexto de esquema. La información de cada elemento viene especificada por un valor <see cref="T:System.Reflection.Assembly" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).">Obtiene un valor que especifica si un esquema XAML y su contexto admiten extensiones de marcado en las que hay dos constructores con la misma aridad (número de parámetros de entrada).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context permits markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el contexto de esquema permite extensiones de marcado con aridad duplicada; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
      <summary vsli:raw="Returns the success or failure of a request for a compatible XAML namespace. A successful request reports that XAML namespace as an out parameter.">Devuelve un valor que indica si ha sido correcta o no la solicitud de un espacio de nombres XAML compatible. Si la solicitud es correcta, se notifica ese espacio de nombres XAML como parámetro de salida.</summary>
      <param name="xamlNamespace" vsli:raw="The &lt;see langword=&quot;xmlns&quot; /&gt; string for the XAML namespace to be checked for a compatible result.">Cadena <see langword="xmlns" /> del espacio de nombres XAML en el que se va a buscar un resultado compatible.</param>
      <param name="compatibleNamespace" vsli:raw="When this method returns, the &lt;see langword=&quot;xmlns&quot; /&gt; string for a compatible XAML namespace request. This might be identical to &lt;paramref name=&quot;xamlNamespace&quot; /&gt; if the method returns &lt;see langword=&quot;false&quot; /&gt;.">Cuando este método devuelve un valor, es la cadena <see langword="xmlns" /> para una solicitud de espacio de nombres XAML compatible. Puede ser idéntico a <paramref name="xamlNamespace" /> si el método devuelve <see langword="false" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;compatibleNamespace&quot; /&gt; contains a usable result; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="compatibleNamespace" /> contiene un resultado utilizable; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlNamespace" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlSchemaContextSettings">
      <summary vsli:raw="Provides optional settings for a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Proporciona configuraciones opcionales para un objeto <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContextSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class by copying the values of an existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; instance.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContextSettings" /> copiando los valores de una instancia de <see cref="T:System.Xaml.XamlSchemaContextSettings" /> existente.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt;.">Un <see cref="T:System.Xaml.XamlSchemaContextSettings" /> existente.</param>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">Obtiene o establece un valor que especifica si un esquema XAML y su contexto emplean nombres de ensamblado completos en los valores devueltos por la API de búsqueda.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si un esquema XAML y su contexto emplean nombres de ensamblado completos en los valores devueltos por las API de búsqueda; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema context allows for markup extensions that have two constructors with the same arity (number of input parameters).">Obtiene o establece un valor que especifica si un contexto de esquema XAML permite extensiones de marcado en las que hay dos constructores con la misma aridad (número de parámetros de entrada).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context allows for markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el contexto de esquema permite las extensiones de marcado que tienen aridad duplicada; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaException">
      <summary vsli:raw="The exception that is thrown when a binding system or another schema representation system for XAML reports an exception to the schema context.">Excepción que se produce cuando un sistema de enlace u otro sistema de representación de esquema XAML notifica una excepción al contexto de esquema.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Xaml.XamlServices">
      <summary vsli:raw="Provides higher-level services (static methods) for the common XAML tasks of reading XAML and writing an object graph; or reading an object graph and writing XAML file output for serialization purposes.">Proporciona servicios de nivel superior (métodos estáticos) para las tareas XAML comunes como leer XAML y escribir un gráfico de objetos, o bien leer un gráfico de objetos y escribir archivos XAML para la serialización.</summary>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and writes its output as an object graph.">Carga un origen <see cref="T:System.IO.Stream" /> para un lector XAML y escribe la salida como un gráfico de objetos.</summary>
      <param name="stream" vsli:raw="The stream to load as input.">Secuencia que se va a cargar como entrada.</param>
      <returns vsli:raw="The object graph that is written as output.">Gráfico de objetos que se escribe como salida.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
      <summary vsli:raw="Creates a XAML reader from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and returns an object graph.">Crea un lector XAML a partir de un objeto <see cref="T:System.IO.TextReader" /> y devuelve un gráfico de objetos.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use as the basis for the created &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.IO.TextReader" /> que se va a usar como base para el objeto <see cref="T:System.Xml.XmlReader" /> que se va a crear.</param>
      <returns vsli:raw="The object graph that is returned.">Gráfico de objetos que se devuelve.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.String)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and returns an object graph.">Carga un <see cref="T:System.IO.Stream" /> de origen para un lector XAML y devuelve un gráfico de objetos.</summary>
      <param name="fileName" vsli:raw="The file name to load and use as source.">Nombre del archivo que se va a cargar y usar como origen.</param>
      <returns vsli:raw="The object graph that is returned.">Gráfico de objetos que se devuelve.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">La entrada de <paramref name="fileName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
      <summary vsli:raw="Loads a specific XAML reader implementation and returns an object graph.">Carga una implementación de lector XAML concreta y devuelve un gráfico de objetos.</summary>
      <param name="xamlReader" vsli:raw="The XAML reader implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">Implementación de lector XAML que se va a utilizar como lector para esta operación <see langword="Load" />.</param>
      <returns vsli:raw="The object graph that is returned.">Gráfico de objetos que se devuelve.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">La entrada de <paramref name="xamlReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads a specific XML reader implementation and returns an object graph.">Carga una implementación de lector XML concreta y devuelve un gráfico de objetos.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">Implementación de <see cref="T:System.Xml.XmlReader" /> que se va a utilizar como lector para esta operación <see langword="Load" />.</param>
      <returns vsli:raw="The output object graph.">Gráfico de objetos de salida.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">La entrada de <paramref name="xamlReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Parse(System.String)">
      <summary vsli:raw="Reads XAML as string output and returns an object graph.">Lee XAML como una cadena y devuelve un gráfico de objetos.</summary>
      <param name="xaml" vsli:raw="The XAML string input to parse.">Entrada de cadena XAML que se va a analizar.</param>
      <returns vsli:raw="The object graph that is returned.">Gráfico de objetos que se devuelve.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xaml&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">La entrada de <paramref name="xaml" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output stream for serialization.">Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, en un flujo de salida para la serialización.</summary>
      <param name="stream" vsli:raw="The destination stream.">Flujo de destino.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Raíz del gráfico de objetos que se va a procesar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">La entrada de <paramref name="stream" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output that goes to the provided &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, en una salida que se dirige al objeto <see cref="T:System.IO.TextWriter" /> proporcionado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">
        <see cref="T:System.IO.TextWriter" /> que escribe la salida.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Raíz del gráfico de objetos que se va a procesar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">La entrada de <paramref name="writer" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Object)">
      <summary vsli:raw="Processes a provided object tree into a XAML node representation, and returns a string representation of the output XAML.">Procesa el árbol de objetos proporcionado en una representación de nodos XAML y devuelve una representación de cadena del XAML de salida.</summary>
      <param name="instance" vsli:raw="The root of the object graph to process.">Raíz del gráfico de objetos que se va a procesar.</param>
      <returns vsli:raw="The XAML markup output as a string.">Marcado XAML en forma de cadena.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to an output file at a provided location.">Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, lo escribe en un archivo de salida en la ubicación especificada.</summary>
      <param name="fileName" vsli:raw="The name and location of the file to write the output to.">Nombre y ubicación del archivo en el que se va a escribir la salida.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Raíz del gráfico de objetos que se va a procesar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is an empty string.">
        <paramref name="fileName" /> es una cadena vacía.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided XAML writer.">Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, lo escribe en el sistema de escritura XAML especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation to use.">Implementación de <see cref="T:System.Xaml.XamlWriter" /> que se va a usar.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Raíz del gráfico de objetos que se va a procesar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">La entrada de <paramref name="writer" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, lo escribe en el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; implementation to use.">Implementación de <see cref="T:System.Xml.XmlWriter" /> que se va a usar.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Raíz del gráfico de objetos que se va a procesar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">La entrada de <paramref name="writer" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided.">Conecta un objeto <see cref="T:System.Xaml.XamlReader" /> y un objeto <see cref="T:System.Xaml.XamlWriter" /> para usar un intermediario de conjunto de nodos XAML común. Puede transformar el contenido dependiendo de los tipos de lectores y sistemas de escritura que se proporcionen.</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">Implementación de <see cref="T:System.Xaml.XamlReader" /> que se va a usar.</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">Objeto <see cref="T:System.Xaml.XamlWriter" /> que se va a usar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">La entrada de <paramref name="xamlReader" /> o <paramref name="xamlWriter" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">El contexto de esquema XAML no coincide con los <paramref name="xamlReader" /> y <paramref name="xamlWriter" /> proporcionados.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided. Provides a parameter for specifying whether to close the writer after the call is completed.">Conecta un objeto <see cref="T:System.Xaml.XamlReader" /> y un objeto <see cref="T:System.Xaml.XamlWriter" /> para usar un intermediario de conjunto de nodos XAML común. Puede transformar el contenido dependiendo de los tipos de lectores y sistemas de escritura que se proporcionen. Proporciona un parámetro para especificar si el sistema de escritura se va a cerrar después de que se complete la llamada.</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">Implementación de <see cref="T:System.Xaml.XamlReader" /> que se va a usar.</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">Objeto <see cref="T:System.Xaml.XamlWriter" /> que se va a usar.</param>
      <param name="closeWriter" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to close the writer after the call is complete; &lt;see langword=&quot;false&quot; /&gt; to leave the writer active at the last written position.">Es <see langword="true" /> para que se cierre el sistema de escritura una vez completada la llamada; es <see langword="false" /> para que el sistema de escritura se mantenga activo en la última posición de escritura.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">La entrada de <paramref name="xamlReader" /> o <paramref name="xamlWriter" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">El contexto de esquema XAML no coincide con los <paramref name="xamlReader" /> y <paramref name="xamlWriter" /> proporcionados.</exception>
    </member>
    <member name="T:System.Xaml.XamlType">
      <summary vsli:raw="Reports information about XAML types as part of the overall XAML system that is implemented in .NET XAML Services.">Informa de los tipos XAML como parte del sistema XAML global implementado en los servicios XAML de .NET Framework.</summary>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on a string name for the type.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlType" />, basándose en un nombre de cadena para el tipo.</summary>
      <param name="typeName" vsli:raw="The name of the type to create.">Nombre del tipo que se va a crear.</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">Argumentos de tipo para un objeto <see cref="T:System.Xaml.XamlType" /> que representa un tipo genérico. Puede ser (y a menudo es) <see langword="null" />, lo que indica que el tipo representado no es un tipo genérico.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers and XAML writers.">Contexto de esquema XAML para lectores XAML y sistemas de escritura XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Uno o varios <paramref name="typeName" /> o <paramref name="schemaContext" /> son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the XAML namespace and a string name for the type. This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlType" />, basándose en el espacio de nombres XAML y un nombre de cadena para el tipo. Este constructor es exclusivamente para el análisis y la grabación de nodos XAML de usos de tipos que se sabe que no tienen correspondencia en el sistema de tipos auxiliar y el contexto de esquema de XAML.</summary>
      <param name="unknownTypeNamespace" vsli:raw="The XAML namespace for the type, as a string.">Espacio de nombres XAML del tipo, en forma de cadena.</param>
      <param name="unknownTypeName" vsli:raw="The name of the type in the provided &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt; XAML namespace.">Nombre del tipo en el espacio de nombres XAML especificado por el parámetro <paramref name="unknownTypeNamespace" />.</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">Argumentos de tipo para un objeto <see cref="T:System.Xaml.XamlType" /> que representa un tipo genérico. Puede ser (y a menudo es) <see langword="null" />, lo que indica que el tipo representado no es un tipo genérico.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">Contexto de esquema XAML para lectores XAML o sistemas de escritura XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt;, &lt;paramref name=&quot;unknownTypeName&quot; /&gt;, or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Uno o varios de los valores de <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> o <paramref name="schemaContext" /> son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the underlying CLR type information.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlType" />, basándose en la información del tipo subyacente de CLR.</summary>
      <param name="underlyingType" vsli:raw="The underlying CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; for the XAML type to construct.">Objeto <see cref="T:System.Type" /> subyacente de CLR para el tipo XAML que se va a construir.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">Contexto de esquema XAML para lectores XAML o sistemas de escritura XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Uno o varios <paramref name="underlyingType" /> o <paramref name="schemaContext" /> son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on underlying type information and a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlType" />, basándose en la información del tipo subyacente y una implementación de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="underlyingType" vsli:raw="The underlying type for the XAML type to construct.">Tipo subyacente del tipo XAML que se va a construir.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for the XAML reader.">Contexto de esquema XAML para el lector XAML.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Implementación de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que administra las llamadas de reflexión en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Uno o varios <paramref name="underlyingType" /> o <paramref name="schemaContext" /> son <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlType.AllowedContentTypes">
      <summary vsli:raw="Gets a read-only collection of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtiene una colección de solo lectura de los tipos que se pueden usar como valor de la propiedad <see cref="P:System.Xaml.XamlType.ContentProperty" /> de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A read-only collection of possible content types.">Colección de solo lectura de los posibles tipos de contenido.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> para el tipo base inmediato de este tipo XAML. La determinación de este valor se basa en el tipo subyacente de este objeto <see cref="T:System.Xaml.XamlType" /> y el contexto de esquema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">
        <see cref="T:System.Xaml.XamlType" /> para el tipo base inmediato de este tipo XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value that indicates whether an instance of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has the specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; in its list of assignable types.">Devuelve un valor que indica si una instancia de este tipo <see cref="T:System.Xaml.XamlType" /> tiene el tipo <see cref="T:System.Xaml.XamlType" /> especificado en su lista de tipos asignables.</summary>
      <param name="xamlType" vsli:raw="The type to check against the current &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; .">Tipo que se va a comparar con el tipo <see cref="T:System.Xaml.XamlType" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;xamlType&quot; /&gt; is in the assignable types list; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="xamlType" /> está en la lista de tipos asignables; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ConstructionRequiresArguments">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> debe tener argumentos (restricciones genéricas mediante <see langword="x:TypeArguments" />, texto de inicialización u otras técnicas de XAML) para construir una instancia válida del tipo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la construcción de una instancia necesita valores de argumento; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtiene información sobre <see cref="T:System.Xaml.XamlMember" /> para la propiedad de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if no content property exists.">Información sobre <see cref="T:System.Xaml.XamlMember" /> para la propiedad de contenido de este objeto <see cref="T:System.Xaml.XamlType" />. Su valor puede ser <see langword="null" /> si no existe ninguna propiedad de contenido.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentWrappers">
      <summary vsli:raw="Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed &lt;see langword=&quot;Collection&amp;lt;T&amp;gt;&quot; /&gt;.">Obtiene los tipos que se usan para encapsular el contenido de una propiedad de contenido cuando no es una coincidencia exacta de tipos, como cadenas en un objeto <see langword="Collection&lt;T&gt;" /> fuertemente tipado.</summary>
      <returns vsli:raw="A read-only collection of possible content wrapper types; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Colección de solo lectura de los posibles tipos de contenedor de contenido; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.DeferringLoader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that represents the deferred loading conversion behavior for this type.">Obtiene el objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que representa el comportamiento de la conversión de carga aplazada para este tipo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint that represents the deferred loading behavior for this type.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con restricción <see cref="T:System.Xaml.XamlDeferringLoader" /> que representa el comportamiento de carga diferido para este tipo.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">Indica si el objeto actual es igual que otro objeto.</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">Objeto que se va a comparar con este objeto.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto actual es igual al parámetro <paramref name="obj" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">Indica si el objeto actual es igual a otro objeto del mismo tipo.</summary>
      <param name="other" vsli:raw="An object to compare with this object.">Objeto que se va a comparar con este objeto.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto actual es igual al parámetro <paramref name="other" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve el miembro XAML para el que se ha establecido como alias una directiva XAML mediante este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">Directiva para la cual se busca el miembro con alias.</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Miembro con alias, si se encuentra; de lo contrario, devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllAttachableMembers">
      <summary vsli:raw="Returns a collection that contains all the attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve una colección que contiene todas las propiedades adjuntables expuestas por este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Colección que contiene cero o más valores de <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllMembers">
      <summary vsli:raw="Returns a collection that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve una colección que contiene todos los miembros expuestos por este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Colección que contiene cero o más valores de <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; representing a specific named attachable member of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve un <see cref="T:System.Xaml.XamlMember" /> que representa un miembro adjuntable con nombre específico de este <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">Nombre del miembro adjuntable que se va a obtener, en el formulario <c>ownerTypeName.MemberName</c>.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">Objeto <see cref="T:System.Xaml.XamlMember" /> para el miembro adjuntable solicitado; de lo contrario, <see langword="null" />, si no existe ningún miembro adjuntable con ese nombre.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Devuelve el código hash de este objeto.</summary>
      <returns vsli:raw="An integer hash code.">Código hash entero.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Xaml.XamlMember" /> para un miembro con nombre específico de este tipo <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">Nombre del miembro que se va a obtener (en forma de cadena).</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if such a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Información de <see cref="T:System.Xaml.XamlMember" /> para el miembro, si se encuentra alguno; de lo contrario, devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Para los tipos de extensión de marcado, devuelve los tipos de los parámetros posicionales admitidos en un uso específico de las extensiones de marcado para este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">Número de parámetros del modo de sintaxis o constructor del que se va a obtener información.</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values, where each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify the types in the same order when you supply markup input for the markup extension.">Lista de valores de <see cref="T:System.Xaml.XamlType" />, donde cada <see cref="T:System.Xaml.XamlType" /> es el tipo para esa posición en la sintaxis. Es preciso especificar los tipos en el mismo orden al proporcionar entradas de marcado para la extensión de marcado.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of string identifiers for XAML namespaces that the type is included in.">Devuelve una lista de identificadores de cadena para los espacios de nombres XAML que incluyen el tipo.</summary>
      <returns vsli:raw="A list of string values, where each string is the URI identifier for a XAML namespace.">Lista de valores de cadena, donde cada cadena es el identificador URI de un espacio de nombres XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtiene la implementación de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que está asociada a este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Implementación de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que está asociada a este objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo de ambiente según la definición de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo de ambiente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsArray">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una matriz.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una matriz; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsConstructible">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que se puede construir según la definición de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que se puede construir; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsDictionary">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary, as per the XAML definition.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un diccionario según la definición de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un diccionario; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsGeneric">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo genérico.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo genérico; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsMarkupExtension">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una extensión de marcado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una extensión de marcado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameScope">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un ámbito de nombres XAML según la definición de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un ámbito de nombres XAML; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlType.Name&quot; /&gt;.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> se inicializa usando una cadena <see langword="xamlName" /> válida como valor de su propiedad <see cref="P:System.Xaml.XamlType.Name" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> se inicializa usando una cadena <see langword="xamlName" /> válida; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNullable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que acepta valores NULL según la definición de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que acepta valores NULL; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo público en el sistema de tipos adecuado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo público; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que no se puede resolver en el sistema de tipos subyacente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an unresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que no se puede resolver; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUsableDuringInitialization">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> se compila de forma descendente durante la inicialización de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> se compila de forma descendente durante la inicialización de XAML; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección con espacio en blanco significativo, según la definición de XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección con espacio en blanco significativo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsXData">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" /> en XML según la definición de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ItemType">
      <summary vsli:raw="Gets a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtiene un valor que proporciona información de tipo para la propiedad <see langword="Items" /> de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">Objeto <see cref="T:System.Xaml.XamlType" /> para el tipo de los elementos de la colección; de lo contrario, es <see langword="null" /> si este objeto <see cref="T:System.Xaml.XamlType" /> no representa una colección.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.KeyType">
      <summary vsli:raw="Gets a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">Obtiene un valor que proporciona información de tipo para la propiedad de la clave de este objeto <see cref="T:System.Xaml.XamlType" />, si <see cref="T:System.Xaml.XamlType" /> representa un diccionario.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">Objeto <see cref="T:System.Xaml.XamlType" /> que corresponde al tipo de la clave para el uso del diccionario; de lo contrario, es <see langword="null" />, si este objeto <see cref="T:System.Xaml.XamlType" /> no representa un diccionario.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve el miembro XAML para el que se ha establecido como alias una directiva XAML mediante este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">Directiva para la cual se busca el miembro con alias.</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Miembro con alias, si se encuentra; de lo contrario, devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllAttachableMembers">
      <summary vsli:raw="Returns an enumerable set that contains all attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve un conjunto enumerable que contiene todas las propiedades adjuntables expuestas por este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Conjunto enumerable que contiene cero o más valores de <see cref="T:System.Xaml.XamlMember" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllMembers">
      <summary vsli:raw="Returns an enumerable set that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve un conjunto enumerable que contiene todos los miembros expuestos por este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Conjunto enumerable que contiene cero o más valores de <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllowedContentTypes">
      <summary vsli:raw="Returns a list of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve una lista de los tipos que se pueden usar como valor de la propiedad <see cref="P:System.Xaml.XamlType.ContentProperty" /> de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A list of possible content types.">Lista de posibles tipos de contenido.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named attachable from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve un <see cref="T:System.Xaml.XamlMember" /> para un adjuntable con nombre especificado en este <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">Nombre del miembro adjuntable que se va a obtener, en el formulario <c>ownerTypeName.MemberName</c>.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">Objeto <see cref="T:System.Xaml.XamlMember" /> para el miembro adjuntable solicitado; de lo contrario, <see langword="null" />, si no existe ningún miembro adjuntable con ese nombre.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupBaseType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">Devuelve el objeto <see cref="T:System.Xaml.XamlType" /> para el tipo base inmediato de este tipo XAML. La determinación de este valor se basa en el tipo subyacente de este objeto <see cref="T:System.Xaml.XamlType" /> y el contexto de esquema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">
        <see cref="T:System.Xaml.XamlType" /> para el tipo base inmediato de este tipo XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCollectionKind">
      <summary vsli:raw="Returns a value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration that declares which specific collection type this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; uses.">Devuelve un valor de la enumeración <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> que declara el tipo de colección que este objeto <see cref="T:System.Xaml.XamlType" /> usa.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration.">Valor de la enumeración <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> debe tener argumentos (restricciones genéricas a través de <see langword="x:TypeArguments" />, texto de inicialización u otras técnicas de XAML) para construir una instancia válida del tipo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la construcción de una instancia necesita valores de argumento; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentProperty">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve información sobre <see cref="T:System.Xaml.XamlMember" /> para la propiedad de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt;.">Información sobre <see cref="T:System.Xaml.XamlMember" /> para la propiedad de contenido de este objeto <see cref="T:System.Xaml.XamlType" />. Puede ser <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentWrappers">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtiene una lista de valores de <see cref="T:System.Xaml.XamlType" /> que representan los contenedores de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Lista de valores de <see cref="T:System.Xaml.XamlType" /> que representan los contenedores de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Cuando se implementa en una clase derivada, devuelve una implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML-declared objects.">Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se emplea para la carga aplazada de objetos declarados en XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.Xaml.XamlDeferringLoader" /> en el genérico.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que está asociado con este <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Información de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> para este <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsAmbient">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo de ambiente según la definición de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo de ambiente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsConstructible">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que se puede construir según la definición de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que se puede construir; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsMarkupExtension">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una extensión de marcado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una extensión de marcado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNameScope">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un ámbito de nombres XAML según la definición de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un ámbito de nombres XAML; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNullable">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que acepta valores NULL según la definición de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que acepta valores NULL; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsPublic">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo público en el sistema de tipos adecuado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo público; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsUnknown">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que no se puede resolver en el sistema de tipos subyacente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nonresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que no se puede resolver; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección con espacio en blanco significativo, según la definición de XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a white-space significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección con espacio en blanco significativo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsXData">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" /> en XML según la definición de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupItemType">
      <summary vsli:raw="Returns a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve un valor que proporciona información de tipo para la propiedad <see langword="Items" /> de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">Objeto <see cref="T:System.Xaml.XamlType" /> para el tipo de los elementos de la colección; de lo contrario, es <see langword="null" /> si este objeto <see cref="T:System.Xaml.XamlType" /> no representa una colección.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupKeyType">
      <summary vsli:raw="Returns a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">Devuelve un valor que proporciona información de tipo para la propiedad de clave de este objeto <see cref="T:System.Xaml.XamlType" /> si <see cref="T:System.Xaml.XamlType" /> representa un diccionario.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, or &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">Objeto <see cref="T:System.Xaml.XamlType" /> del tipo de la clave que representa un diccionario o <see langword="null" /> si este objeto <see cref="T:System.Xaml.XamlType" /> no representa un diccionario.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
      <summary vsli:raw="Returns a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">Devuelve un valor que proporciona información de tipo para el valor devuelto de <see langword="ProvideValue" /> de este objeto <see cref="T:System.Xaml.XamlType" /> si representa una extensión de marcado.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">Objeto <see cref="T:System.Xaml.XamlType" /> del tipo de valor devuelto que representa una extensión de marcado; de lo contrario, es <see langword="null" /> si <see cref="T:System.Xaml.XamlType" /> no representa una extensión de marcado.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve el objeto <see cref="T:System.Xaml.XamlMember" /> para un miembro con nombre específico de este tipo <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">Nombre del miembro que se va a obtener (en forma de cadena).</param>
      <param name="skipReadOnlyCheck" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return a member even if that member has a &lt;see langword=&quot;true&quot; /&gt; value for &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to not return a &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt; member. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para devolver un miembro aunque dicho miembro tenga el valor <see langword="true" /> para la propiedad <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; es <see langword="false" /> para no devolver ningún miembro con la propiedad <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. De manera predeterminada, es <see langword="false" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Información de <see cref="T:System.Xaml.XamlMember" /> para el miembro, si se encuentra; de lo contrario, devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Para los tipos de extensión de marcado, devuelve los tipos de los parámetros posicionales admitidos en un uso específico de las extensiones de marcado para este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">Número de parámetros del modo de sintaxis o constructor del que se va a obtener información.</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values where each such &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify those types in the same order when supplying markup input for the markup extension.">Lista de valores de <see cref="T:System.Xaml.XamlType" />, donde cada <see cref="T:System.Xaml.XamlType" /> es el tipo para esa posición en la sintaxis. Es preciso especificar esos tipos en el mismo orden al proporcionar entradas de marcado para la extensión de marcado.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
      <summary vsli:raw="Returns a handler callback to use for the set operations of markup extensions.">Devuelve una devolución de llamada de controlador que se va a usar para establecer las extensiones de marcado.</summary>
      <returns vsli:raw="A handler callback to use for the set operations of markup extensions.">Devolución de llamada de controlador que se va a usar para establecer las extensiones de marcado.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
      <summary vsli:raw="Returns a handler to use for type converter setting cases.">Devuelve un controlador que se va a usar para establecer el convertidor de tipos.</summary>
      <returns vsli:raw="A handler to use for type converter setting cases.">Controlador que se va a usar para establecer el convertidor de tipos.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized using a mode that  trims surrounding whitespace.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> debe serializarse en un modo que recorte el espacio en blanco circundante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized in a mode that trims surrounding whitespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> debe serializarse en un modo que recorte el espacio en blanco circundante; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTypeConverter">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint, which represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.ComponentModel.TypeConverter" />, que representa el comportamiento de la conversión de tipos para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.ComponentModel.TypeConverter" /> que representa el comportamiento de la conversión de tipos para los valores de este objeto <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUnderlyingType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve el objeto <see cref="T:System.Type" /> de CLR subyacente a este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Type" /> de CLR subyacente a este objeto <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> se compila de forma descendente durante la inicialización de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> se compila de forma descendente durante la inicialización de XAML; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupValueSerializer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, which represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.Windows.Markup.ValueSerializer" />, que representa el comportamiento de serialización para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa el comportamiento de serialización para los valores de este objeto <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.MarkupExtensionReturnType">
      <summary vsli:raw="Gets a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">Obtiene un valor que proporciona información de tipo para el valor devuelto de <see langword="ProvideValue" /> de este objeto <see cref="T:System.Xaml.XamlType" /> si representa una extensión de marcado.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">Objeto <see cref="T:System.Xaml.XamlType" /> del tipo de valor devuelto que representa una extensión de marcado; de lo contrario, es <see langword="null" /> si <see cref="T:System.Xaml.XamlType" /> no representa una extensión de marcado.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Name">
      <summary vsli:raw="Gets the string name of the type that this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents.">Obtiene el nombre de cadena del tipo representado por este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The string name of this XAML type.">Nombre de cadena de este tipo XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have the same value.">Determina si dos objetos <see cref="T:System.Xaml.XamlType" /> especificados tienen el mismo valor.</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor de <paramref name="xamlType1" /> es igual al valor de <paramref name="xamlType2" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have different values.">Determina si dos objetos <see cref="T:System.Xaml.XamlType" /> especificados tienen valores diferentes.</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is different from the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor de <paramref name="xamlType1" /> es diferente del valor de <paramref name="xamlType2" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace that is the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtiene el espacio de nombres XAML primario de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The identifier, as a string, of the primary XAML namespace for this XAML type.">Identificador, en forma de cadena, del espacio de nombres XAML primario de este tipo XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.SchemaContext">
      <summary vsli:raw="Gets the active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Xaml.XamlSchemaContext" /> activo para procesar este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Objeto <see cref="T:System.Xaml.XamlSchemaContext" /> activo para procesar este objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Devuelve una representación de cadena de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Representación de cadena de este objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> dispone de un comportamiento de serialización con control del espacio en blanco para recortar el espacio en blanco circundante en su contenido.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that uses whitespace trimming; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que recorta el espacio en blanco; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeArguments">
      <summary vsli:raw="Gets a list of type arguments for cases where this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic.">Obtiene una lista de argumentos de tipo para los casos en los que este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo genérico.</summary>
      <returns vsli:raw="A list of type argument types; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a generic.">Lista de argumentos de tipo; de lo contrario, es <see langword="null" /> si este objeto <see cref="T:System.Xaml.XamlType" /> no representa un tipo genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.ComponentModel.TypeConverter" /> que representa el comportamiento de la conversión de tipos para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.ComponentModel.TypeConverter" /> que representa el comportamiento de la conversión de tipos para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.UnderlyingType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Type" /> de CLR subyacente a este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Objeto <see cref="T:System.Type" /> de CLR subyacente a este objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa el comportamiento de serialización para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa el comportamiento de serialización para los valores de este objeto <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlWriter">
      <summary vsli:raw="Provides default implementation and base class definitions for a XAML writer. This is not a working default XAML writer; you must either derive from &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and implement its abstract members, or use an existing &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; derived class.">Proporciona las definiciones de la implementación predeterminada y de clase base para un sistema de escritura XAML. No es un sistema de escritura XAML predeterminado activo; debe derivar de <see cref="T:System.Xaml.XamlWriter" /> e implementar sus miembros abstractos o emplear una clase derivada <see cref="T:System.Xaml.XamlWriter" /> existente.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Close">
      <summary vsli:raw="Closes the XAML writer object.">Cierra el objeto de sistema de escritura XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Xaml.XamlWriter" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para liberar los recursos administrados; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlWriter.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called.">Obtiene un valor que indica si se ha llamado al método <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se ha llamado a <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlWriter.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets the active XAML schema context.">Cuando se implementa en una clase derivada, obtiene el contexto de esquema XAML activo.</summary>
      <returns vsli:raw="The active XAML schema context.">Contexto de esquema XAML activo.</returns>
    </member>
    <member name="M:System.Xaml.XamlWriter.System#IDisposable#Dispose">
      <summary vsli:raw="See &lt;see cref=&quot;M:System.IDisposable.Dispose&quot; /&gt;.">Vea <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndMember">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end member node.">Cuando se implementa en una clase derivada, produce la representación de un nodo de miembro final.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndObject">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end object node.">Cuando se implementa en una clase derivada, produce la representación de un nodo de objeto final.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteGetObject">
      <summary vsli:raw="When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.">Cuando se implementa en una clase derivada, produce un objeto para los casos en los que el objeto es un valor predeterminado o implícito de la propiedad que se está estableciendo, en lugar de especificarse como un valor de objeto discreto en el conjunto de nodos XAML de entrada.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="When implemented in a derived class, writes a XAML namespace declaration node.">Cuando se implementa en una clase derivada, escribe un nodo de declaración de espacio de nombres XAML.</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">Declaración de espacio de nombres que se va a escribir.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
      <summary vsli:raw="Performs switching based on node type from the XAML reader (&lt;see cref=&quot;P:System.Xaml.XamlReader.NodeType&quot; /&gt;) and calls the relevant &lt;see langword=&quot;Write&quot; /&gt; method for the writer implementation.">Realiza el cambio basándose en el tipo de nodo del lector XAML (<see cref="P:System.Xaml.XamlReader.NodeType" />) y llama al método <see langword="Write" /> pertinente para la implementación del sistema de escritura.</summary>
      <param name="reader" vsli:raw="The reader to use for node determination.">Lector que se va a usar para determinar el nodo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="The default implementation encountered a &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; that is not in the default enumeration.">La implementación predeterminada encontró <see cref="T:System.Xaml.XamlNodeType" /> que no está en la enumeración predeterminada.</exception>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start member node.">Cuando se implementa en una clase derivada, escribe la representación de un nodo de miembro inicial.</summary>
      <param name="xamlMember" vsli:raw="The member node to write.">Nodo de miembro que se va a escribir.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start object node.">Cuando se implementa en una clase derivada, escribe la representación de un nodo de objeto inicial.</summary>
      <param name="type" vsli:raw="The XAML type of the object to write.">Tipo XAML del objeto que se va a escribir.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
      <summary vsli:raw="When implemented in a derived class, writes a value node.">Cuando se implementa en una clase derivada, escribe un nodo de valor.</summary>
      <param name="value" vsli:raw="The value to write.">Valor que se va a escribir.</param>
    </member>
    <member name="T:System.Xaml.XamlWriterSettings">
      <summary vsli:raw="Provides initialization settings for a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation.">Proporciona los valores de inicialización para una implementación de <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor(System.Xaml.XamlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class using another existing settings instance.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlWriterSettings" /> usando otra instancia de configuración existente.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; object.">Objeto <see cref="T:System.Xaml.XamlWriterSettings" /> existente.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlReader">
      <summary vsli:raw="Processes XAML markup from XML files by using an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; intermediary, and produces a XAML node stream.">Procesa el marcado XAML de los archivos XML usando un intermediario <see cref="T:System.Xml.XmlReader" /> y genera una secuencia de nodos XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en una secuencia.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Flujo inicial que se va a cargar en el lector.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, and using a supplied XAML schema context.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en una secuencia y usando un contexto de esquema XAML proporcionado.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Flujo inicial que se va a cargar en el lector.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with a supplied XAML schema context and XAML-specific settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" />, basándose en una secuencia con un contexto de esquema XAML y unos valores específicos de XAML proporcionados.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Flujo inicial que se va a cargar en el lector.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Configuración específica del lector.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with XAML-specific settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en una secuencia con una configuración específica de XAML.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Flujo inicial que se va a cargar en el lector.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Configuración específica del lector.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en un objeto <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">
        <see cref="T:System.IO.TextReader" /> que se va utilizar para la inicialización.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, with a supplied schema context and XAML-specific settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en un objeto <see cref="T:System.IO.TextReader" /> con un contexto de esquema y una configuración específica de XAML proporcionados.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">
        <see cref="T:System.IO.TextReader" /> que se va utilizar para la inicialización.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> es <see langword="null" />.
O bien
<paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using a supplied schema context and XAML-specific settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en un objeto <see cref="T:System.IO.TextReader" />, usando un contexto de esquema y una configuración específica de XAML proporcionados.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">
        <see cref="T:System.IO.TextReader" /> que se va utilizar para la inicialización.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Configuración específica del lector.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> es <see langword="null" />.
o bien
<paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using XAML-specific settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en un objeto <see cref="T:System.IO.TextReader" /> y usando configuraciones específicas de XAML.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">
        <see cref="T:System.IO.TextReader" /> que se va utilizar para la inicialización.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Configuración específica del lector.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a file name of a file to load into a default XML reader.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en el nombre de un archivo que se va a cargar en un lector XML predeterminado.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Nombre del archivo XML que se va a cargar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, with a supplied XAML schema context.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en el nombre de un archivo que se va a cargar en un lector XML predeterminado, con un contexto de esquema XAML proporcionado.</summary>
      <param name="fileName" vsli:raw="The name of the file to load.">Nombre del archivo que se va a cargar.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using a supplied XAML schema context and XAML-specific reader settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en el nombre de un archivo que se va a cargar en un lector XML predeterminado, y usando un contexto de esquema XAML y configuraciones de lector específicas de XAML proporcionados.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Nombre del archivo XML que se va a cargar.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Configuración específica del lector.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> es <see langword="null" />.
o bien
<paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using XAML-specific reader settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en el nombre de un archivo que se va a cargar en un lector XML predeterminado y usando configuraciones de lector específicas de XAML.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Nombre del archivo XML que se va a cargar.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Configuración específica del lector.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> utilizando el <see cref="T:System.Xml.XmlReader" /> proporcionado.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">
        <see cref="T:System.Xml.XmlReader" /> que se va a usar como procesador XML intermedio.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and schema context.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> usando el objeto <see cref="T:System.Xml.XmlReader" /> y el contexto de esquema proporcionados.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">
        <see cref="T:System.Xml.XmlReader" /> que se va a usar como procesador XML intermedio.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, schema context, and reader settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> usando el objeto <see cref="T:System.Xml.XmlReader" />, el contexto de esquema y la configuración del lector proporcionados.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">
        <see cref="T:System.Xml.XmlReader" /> que se va a usar como procesador XML intermedio.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">Configuración específica del lector XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and reader settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> usando el objeto <see cref="T:System.Xml.XmlReader" /> y la configuración del lector proporcionados.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">
        <see cref="T:System.Xml.XmlReader" /> que se va a usar como procesador XML intermedio.</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">Configuración específica del lector XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Obtiene un valor que especifica si la información de línea está disponible.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la información de línea está disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position in the XAML node stream is at end-of-file.">Obtiene un valor que indica si el lector se encuentra al final del archivo en la secuencia de nodos XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file in the node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la posición está en el final conceptual del archivo en la secuencia de nodos; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Obtiene el número de línea que se va a notificar.</summary>
      <returns vsli:raw="The line number to report.">Número de línea que se va a notificar.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Obtiene la posición de línea que se va a notificar.</summary>
      <returns vsli:raw="The line position to report.">Posición de línea que se va a notificar.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the current reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Obtiene el miembro actual en la posición del lector si la posición actual del lector se encuentra en un objeto <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a member.">Miembro actual o <see langword="null" /> si la posición actual del lector no se encuentra en un miembro.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">Obtiene el espacio de nombres XAML del nodo actual.</summary>
      <returns vsli:raw="The XAML namespace from the current node, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Espacio de nombres XAML del nodo actual si está disponible; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Valor de la enumeración <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.Read">
      <summary vsli:raw="Provides the next XAML node from the loaded source, if a XAML node is available.">Proporciona el siguiente nodo XAML del origen cargado, si hay un nodo XAML disponible.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si hay un nodo disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">Obtiene un objeto que proporciona información de esquema para el conjunto de información.</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">Objeto que proporciona información de esquema para el conjunto de información.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on an object.">Objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual o <see langword="null" /> si la posición no se encuentra en un objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Value">
      <summary vsli:raw="Gets the value of the current node.">Obtiene el valor del nodo actual.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Valor del nodo actual o <see langword="null" /> si la posición no se encuentra en un tipo de nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; XAML reader implementation.">Especifica reglas de procesamiento o valores de configuración de opciones para la implementación del lector XAML <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class by copying settings from an existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReaderSettings" /> copiando la configuración de un objeto <see cref="T:System.Xaml.XamlXmlReaderSettings" /> existente.</summary>
      <param name="settings" vsli:raw="The existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object to copy.">Objeto <see cref="T:System.Xaml.XamlXmlReaderSettings" /> existente que se va a copiar.</param>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.CloseInput">
      <summary vsli:raw="Gets or sets a value that indicates whether the underlying stream or text reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed.">Obtiene o establece un valor que indica si se debe cerrar la secuencia o el lector de texto subyacente cuando se cierre el objeto <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the underlying stream or reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se debe cerrar la secuencia o el lector subyacente cuando se cierre el objeto <see cref="T:System.Xaml.XamlXmlReader" />; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.SkipXmlCompatibilityProcessing">
      <summary vsli:raw="Gets or sets a value that determines whether the reader should differ from the default &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; behavior of how markup compatibility content is processed.">Obtiene o establece un valor que determina si el lector debe diferir del comportamiento predeterminado de <see cref="T:System.Xaml.XamlXmlReader" /> de cómo se procesa el contenido de compatibilidad de marcado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initiating reader is directly used, which means that XML compatibility markup is processed as part of the main stream and compatibility is not considered. &lt;see langword=&quot;false&quot; /&gt; if the default behavior is used, which processes XML compatibility separately. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el lector de entrada se usa directamente, lo que significa que el marcado de compatibilidad XML se procesa como parte de la secuencia principal y no se tiene en cuenta la compatibilidad. Es <see langword="false" /> si se usa el comportamiento predeterminado, que procesa la compatibilidad XML por separado. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlLang">
      <summary vsli:raw="Gets or sets the language setting value that the reader may promote to writers that write &lt;see langword=&quot;xml:lang&quot; /&gt; attributes in nodes.">Obtiene o establece el valor de configuración de idioma que el lector puede promover a los sistemas de escritura que escriben atributos <see langword="xml:lang" /> en los nodos.</summary>
      <returns vsli:raw="The string to use for possible &lt;see langword=&quot;xml:lang&quot; /&gt; output that is based on the reader.">Cadena que se va a usar para una posible salida <see langword="xml:lang" /> basada en el lector.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlSpacePreserve">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML reader instructs any XAML writers to write &lt;see langword=&quot;xml:space&quot; /&gt; attributes in nodes. If that behavior is desired, this information is passed through shared XAML schema context.">Obtiene o establece un valor que determina si el lector XAML pide a los sistemas de escritura XAML que escriban atributos <see langword="xml:space" /> en nodos. Si se desea ese comportamiento, esta información se pasa a través del contexto de esquema XAML compartido.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers that are processing the XAML node stream can write &lt;c&gt;xml:space=&quot;preserve&quot;&lt;/c&gt; in output; &lt;see langword=&quot;false&quot; /&gt; if &lt;see langword=&quot;xml:space&quot; /&gt; attributes cannot be written in nodes.">
        <see langword="true" />Si los escritores que están procesando el flujo de nodo XAML pueden escribir <c>xml: Space = "preserve"</c> en la salida; <see langword="false" /> si <see langword="xml:space" />  los atributos no se pueden escribir en los nodos.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriter">
      <summary vsli:raw="Uses a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; support class to write a XAML node stream to a text or markup serialized form.">Usa una clase de soporte <see cref="T:System.IO.TextWriter" /> o <see cref="T:System.Xml.XmlWriter" /> para escribir una secuencia de nodos XAML en un formato serializado de texto o de marcado.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriter" /> a partir de una secuencia.</summary>
      <param name="stream" vsli:raw="The stream to write.">Flujo que se va a escribir.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contexto de esquema XAML para el sistema de escritura XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> es <see langword="null" />.
O bien
<paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream using a writer settings object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriter" /> a partir de una secuencia usando un objeto de configuración del sistema de escritura.</summary>
      <param name="stream" vsli:raw="The stream to write.">Flujo que se va a escribir.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contexto de esquema XAML para el sistema de escritura XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Instancia de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, que suele tener determinadas configuraciones no predeterminadas.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="stream" /> o <paramref name="schemaContext" /> es <see langword="null" /></exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriter" /> a partir de una base <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">
        <see cref="T:System.IO.TextWriter" /> que escribe la salida.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contexto de esquema XAML para el sistema de escritura XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textWriter" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis using a settings object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriter" /> a partir de una base <see cref="T:System.IO.TextWriter" /> usando un objeto de configuración.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">
        <see cref="T:System.IO.TextWriter" /> que escribe la salida.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contexto de esquema XAML para el sistema de escritura XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Instancia de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, que suele tener determinadas configuraciones no predeterminadas.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textWriter" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriter" /> a partir de una base <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">
        <see cref="T:System.Xml.XmlWriter" /> que escribe la salida.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contexto de esquema XAML para el sistema de escritura XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis using a settings object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriter" /> a partir de una base <see cref="T:System.Xml.XmlWriter" /> usando un objeto de configuración.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">
        <see cref="T:System.Xml.XmlWriter" /> que escribe la salida.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contexto de esquema XAML para el sistema de escritura XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Instancia de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, que suele tener determinadas configuraciones no predeterminadas.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados usados por <see cref="T:System.Xaml.XamlXmlWriter" /> y, opcionalmente, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the unmanaged resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para liberar los recursos no administrados; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Flush">
      <summary vsli:raw="Calls the &lt;see langword=&quot;Flush&quot; /&gt; method of the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, which writes anything that is currently in the buffer, and then closes the writer.">Llama al método <see langword="Flush" /> de los objetos <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacentes, lo que escribe todo lo que haya en ese momento en el búfer y, a continuación, cierra el sistema de escritura.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.SchemaContext">
      <summary vsli:raw="Gets the XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for processing.">Obtiene el contexto de esquema XAML que este <see cref="T:System.Xaml.XamlXmlWriter" /> emplea para el procesamiento.</summary>
      <returns vsli:raw="The XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Contexto de esquema XAML que este <see cref="T:System.Xaml.XamlXmlWriter" /> emplea para el procesamiento de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.Settings">
      <summary vsli:raw="Gets the writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Obtiene la configuración del sistema de escritura que <see cref="T:System.Xaml.XamlXmlWriter" /> emplea para el procesamiento de XAML.</summary>
      <returns vsli:raw="The writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Configuración del sistema de escritura que <see cref="T:System.Xaml.XamlXmlWriter" /> emplea para el procesamiento de XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndMember">
      <summary vsli:raw="Writes a XAML end member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not within a member, or if the internal writer state does not support writing to an end member.">Escribe un nodo de miembro final XAML en el objeto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacente. Produce una excepción si la posición actual de la secuencia de nodos XAML no está dentro de un miembro o si el estado interno del sistema de escritura no permite escribir en un miembro final.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not within a member.">La posición actual de la secuencia de nodo XAML no está dentro de un miembro.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end member.">El estado del sistema de escritura actual no permite escribir a un miembro final.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndObject">
      <summary vsli:raw="Writes a XAML end object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream that is being processed is incompatible with writing an end object.">Escribe un nodo de objeto final XAML en el objeto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacente. Produce una excepción si la posición actual de la secuencia de nodos XAML que se está procesando es incompatible con la escritura de un objeto final.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not in a scope where an end member can be written.">La posición actual de la secuencia de nodo de XAML no es en un ámbito donde se pueda escribir un miembro de fin.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end object.">El estado del sistema de escritura actual no permite escribir a un objeto final.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteGetObject">
      <summary vsli:raw="Writes an object for cases where the specified object is a default or implicit value of the property that is being written, instead of being specified as an object value in the input XAML node set.">Escribe un objeto para los casos en los que el objeto en cuestión es un valor predeterminado o implícito de la propiedad que se está escribiendo, en lugar de especificarse como un valor de objeto en el conjunto de nodos XAML de entrada.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Writes namespace information to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. May throw an exception for certain states; however, may instead defer writing the namespace information until the writer and the XAML node stream that is being processed reaches a position where a XAML namespace declaration can be inserted.">Escribe información de espacio de nombres en el objeto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacente. Puede producir una excepción para ciertos estados; sin embargo, en su lugar puede diferir la escritura de la información del espacio de nombres hasta que el sistema de escritura y la secuencia de nodos XAML que se está procesando alcancen una posición donde se pueda insertar una declaración de espacio de nombres XAML.</summary>
      <param name="namespaceDeclaration" vsli:raw="The XAML namespace declaration to write.">Declaración de espacio de nombres XAML que se va a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceDeclaration" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is not a valid XAML namespace declaration (has a null prefix or null identifier component).">
        <paramref name="namespaceDeclaration" /> no es una declaración de espacio de nombres de XAML válida (tiene un prefijo nulo o el componente de identificador nulo).</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing a XAML namespace declaration.">El estado del sistema de escritura actual no permite escribir una declaración de espacio de nombres XAML.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a XAML start member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is within another member, or if it is not in a scope or writer state where a start member can be written.">Escribe un nodo de miembro inicial XAML en el objeto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacente. Produce una excepción si la posición actual de la secuencia de nodos XAML está dentro de otro miembro, o si no está en un ámbito o en un estado del sistema de escritura donde se pueda escribir un miembro inicial.</summary>
      <param name="property" vsli:raw="The XAML member identifier for the member to write.">Identificador de miembro XAML del miembro que se va a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <paramref name="property" /> no es un <see cref="T:System.Xaml.XamlMember" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is invalid for writing a start member.">La posición actual de la secuencia de nodo XAML no es válida para escribir un miembro de inicio.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The writer state is not valid for writing a start member.  &#xA;  &#xA; -or-  &#xA;  &#xA; The XAML writer attempted to write a duplicate member. This exception may have a more precise inner exception.">El estado del sistema de escritura no es válido para escribir a un miembro de inicio.
o bien
El sistema de escritura XAML intentó escribir a un miembro duplicado. Esta excepción puede tener una excepción interna más precisa.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes a XAML start object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not in a scope where a start object can be written, or if the writer is not in a state that can write a start object.">Escribe un nodo de objeto inicial XAML en el objeto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacente. Produce una excepción si la posición actual de la secuencia de nodos XAML no está en un ámbito donde se pueda escribir un objeto inicial o si el sistema de escritura no está en un estado que pueda escribir un objeto inicial.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; (XAML type identifier) for the object to write.">
        <see cref="T:System.Xaml.XamlType" /> (identificador de tipo XAML) del objeto que se va a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">
        <paramref name="type" /> no es un <see cref="T:System.Xaml.XamlType" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a new start object.">La posición actual de la secuencia de nodo XAML no es válida para escribir un objeto de inicio nuevo.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The state of the XAML writer is not valid for writing a new start object.">El estado del sistema de escritura XAML no es válido para escribir un objeto de inicio nuevo.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a XAML value node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is invalid for writing a value, or the writer is in a state where a value cannot be written.">Escribe un nodo de valor XAML en el objeto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacente. Produce una excepción si la posición actual de la secuencia de nodos XAML no es válida para escribir un valor o si el sistema de escritura está en un estado en el que no se puede escribir un valor.</summary>
      <param name="value" vsli:raw="The value information to write.">Información de valor que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a value.">La posición actual de la secuencia de nodo XAML no es válida para escribir un valor.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The XAML writer state does not support the writing of a value node.">El estado de sistema de escritura XAML no permite escribir un nodo de valor.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; specifies a value that is not null or a string.">
        <paramref name="value" /> especifica un valor que no es null o es una cadena.</exception>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterException">
      <summary vsli:raw="The exception that is thrown by certain &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; APIs.">Excepción que algunas API de <see cref="T:System.Xaml.XamlXmlWriter" /> inician.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriterException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriterException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriterException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriterException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterSettings">
      <summary vsli:raw="Provides initialization settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; XAML writer implementation.">Proporciona los valores de inicialización para la implementación del sistema de escritura XAML <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.AssumeValidInput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should always assume valid XAML input for purposes of duplicate resolution or other error checking.">Obtiene o establece un valor que especifica si <see cref="T:System.Xaml.XamlXmlWriter" /> debe suponer siempre la entrada de XAML válido para la resolución de duplicados u otra comprobación de errores.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; skips certain validation or error checks, such as throwing exceptions on duplicate members. &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; throws exceptions when invalid XAML is encountered. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si<see cref="T:System.Xaml.XamlXmlWriter" /> omite determinadas comprobaciones de validación o errores, como producir excepciones en miembros duplicados. Es <see langword="false" /> si <see cref="T:System.Xaml.XamlXmlWriter" /> produce excepciones cuando se encuentra XAML no válido. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.CloseOutput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should close immediately on &lt;see langword=&quot;Dispose&quot; /&gt; or other operations, or whether the XAML writer should instead write the buffer output before closing. Use this setting with caution; closing immediately can result in invalid XAML that cannot be loaded again.">Obtiene o establece un valor que especifica si <see cref="T:System.Xaml.XamlXmlWriter" /> se debe cerrar inmediatamente en <see langword="Dispose" /> u otras operaciones, o si el sistema de escritura de XAML debe escribir en su lugar el resultado del búfer antes de cerrarse. Use este valor con precaución; el cierre inmediato puede producir código XAML no válido que no se puede cargar de nuevo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; immediately closes on a &lt;see langword=&quot;Dispose&quot; /&gt; or similar operations. &lt;see langword=&quot;false&quot; /&gt; if the remaining buffer output is written before the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; is released. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Xaml.XamlXmlWriter" /> se cierra inmediatamente ante <see langword="Dispose" /> u operaciones similares. Es <see langword="false" /> si la salida del búfer restante se escribe de que se libere el objeto <see cref="T:System.Xaml.XamlXmlWriter" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.Copy">
      <summary vsli:raw="Returns a copy of this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; instance.">Devuelve una copia de esta instancia de <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
      <returns vsli:raw="The returned copy.">Copia devuelta.</returns>
    </member>
  </members>
</doc>