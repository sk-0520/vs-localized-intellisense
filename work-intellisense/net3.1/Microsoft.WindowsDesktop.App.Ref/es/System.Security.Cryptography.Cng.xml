<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Cng</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <summary>Proporciona un identificador seguro que pueden usar los objetos Cryptography Next Generation (CNG).</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)">
      <summary>Crea una nueva instancia de la clase <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />.</summary>
      <param name="handle">El identificador preexistente que se va a utilizar. Usar <see cref="F:System.IntPtr.Zero" /> devuelve un identificador no válido.</param>
      <param name="parentHandle">El identificador principal de este <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentHandle" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="parentHandle" /> está cerrado.
o bien
<paramref name="parentHandle" /> no es válido.</exception>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeNCryptHandle.IsInvalid" />
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle">
      <summary>Libera un identificador utilizado por un objeto CNG (Cryptography Next Generation).</summary>
      <returns>Es <see langword="true" /> si el identificador se libera correctamente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle">
      <summary>Libera un identificador nativo utilizado por un objeto CNG (Cryptography Next Generation).</summary>
      <returns>Es <see langword="true" /> si el identificador se libera correctamente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle">
      <summary>Proporciona un identificador seguro que representa una clave (NCRYPT_KEY_HANDLE).</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)">
      <summary>Crea una nueva instancia de la clase <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />.</summary>
      <param name="handle">El identificador preexistente que se va a utilizar. Usar <see cref="F:System.IntPtr.Zero" /> devuelve un identificador no válido.</param>
      <param name="parentHandle">El identificador principal de este <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentHandle" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="parentHandle" /> está cerrado.
o bien
<paramref name="parentHandle" /> no es válido.</exception>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle">
      <summary>Proporciona un identificador seguro que representa un proveedor de almacenamiento de claves (NCRYPT_KEY_HANDLE).</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" />.</summary>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle">
      <summary>Proporciona un identificador seguro que representa un valor de acuerdo secreto (NCRYPT_KEY_HANDLE).</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" />.</summary>
    </member>
    <member name="T:System.Security.Cryptography.AesCng">
      <summary>Proporciona una implementación de Criptografía de nueva generación (CNG) del algoritmo Estándar de cifrado avanzado (AES, Advanced Encryption Standard).</summary>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.AesCng" /> con una clave efímera.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.AesCng" /> con el nombre de clave especificado, que representa una clave AES persistente y existente.</summary>
      <param name="keyName">Nombre de la clave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.AesCng" /> con el nombre de clave especificado, que representa una clave AES persistente y existente, y el proveedor de almacenamiento de claves (KSP) especificado.</summary>
      <param name="keyName">Nombre de la clave.</param>
      <param name="provider">KSP que contiene la clave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> es <see langword="null" />.
O bien
<paramref name="provider" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.AesCng" /> con el nombre de clave especificado, que representa una clave AES persistente y existente, el proveedor de almacenamiento de claves (KSP) especificado y las opciones de apertura de claves.</summary>
      <param name="keyName">Nombre de la clave.</param>
      <param name="provider">KSP que contiene la clave.</param>
      <param name="openOptions">Una combinación bit a bit de los valores de enumeración que especifican opciones para abrir la clave, como, por ejemplo, desde dónde se abre la clave (almacenamiento de máquinas o usuarios) y si se suprime la solicitud de la IU.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> es <see langword="null" />.
O bien
<paramref name="provider" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.CreateDecryptor">
      <summary>Crea un objeto descifrador AES simétrico con la clave y el vector de inicialización (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) especificados.</summary>
      <returns>Objeto descifrador AES simétrico.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Crea un objeto descifrador AES simétrico con la clave y el vector de inicialización (IV) especificados.</summary>
      <param name="rgbKey">Clave secreta que se va a usar para el algoritmo AES. El tamaño de clave debe ser de 128, 192 o 256 bits.</param>
      <param name="rgbIV">Vector de inicialización que se va a usar para el algoritmo AES.</param>
      <returns>Objeto descifrador AES simétrico.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbKey" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rgbKey" /> no tiene un tamaño válido para este algoritmo.
O bien
El tamaño <paramref name="rgbIV" /> no coincide con el tamaño del bloque para este algoritmo.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="rgbKey" /> es una clave débil conocida para este algoritmo y no se puede utilizar.
o bien
<paramref name="rgbIV" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.CreateEncryptor">
      <summary>Crea un objeto de sistema de cifrado AES simétrico con la clave y el vector de inicialización (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) especificados.</summary>
      <returns>Objeto de sistema de cifrado AES simétrico.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Crea un objeto de sistema de cifrado AES simétrico con la clave y el vector de inicialización (IV) especificados.</summary>
      <param name="rgbKey">Clave secreta que se va a usar para el algoritmo AES. El tamaño de clave debe ser de 128, 192 o 256 bits.</param>
      <param name="rgbIV">Vector de inicialización que se va a usar para el algoritmo AES.</param>
      <returns>Objeto de sistema de cifrado AES simétrico.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbKey" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rgbKey" /> no tiene un tamaño válido para este algoritmo.
O bien
El tamaño <paramref name="rgbIV" /> no coincide con el tamaño del bloque para este algoritmo.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="rgbKey" /> es una clave débil conocida para este algoritmo y no se puede utilizar.
o bien
<paramref name="rgbIV" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.GenerateIV">
      <summary>Genera un vector de inicialización (IV) aleatorio que se utiliza para el algoritmo AES.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.GenerateKey">
      <summary>Genera una clave aleatoria que se utiliza para el algoritmo AES.</summary>
    </member>
    <member name="P:System.Security.Cryptography.AesCng.Key">
      <summary>Obtiene o establece la clave del algoritmo <see cref="T:System.Security.Cryptography.AesCng" /> .</summary>
      <returns>Clave del algoritmo <see cref="T:System.Security.Cryptography.AesCng" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCng.KeySize">
      <summary>Obtiene o establece el tamaño, en bits, de la clave secreta usada por el algoritmo <see cref="T:System.Security.Cryptography.AesCng" />.</summary>
      <returns>Tamaño, en bits, de la clave secreta usada por el algoritmo <see cref="T:System.Security.Cryptography.AesCng" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngAlgorithm">
      <summary>Encapsula el nombre de un algoritmo de cifrado.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</summary>
      <param name="algorithm">Nombre del algoritmo que se va a inicializar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="algorithm" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longitud del parámetro <paramref name="algorithm" /> es 0 (cero).</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Algorithm">
      <summary>Obtiene el nombre del algoritmo que el objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> actual especifica.</summary>
      <returns>Nombre del algoritmo incrustado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellman">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica un algoritmo de intercambio de claves de Diffie-Hellman de curva elíptica (ECDH) cuya curva se describe a través de una propiedad de clave.</summary>
      <returns>Un objeto que especifica un algoritmo de intercambio de claves de ECDH cuya curva se describe a través de una propiedad de clave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica un algoritmo de intercambio de claves Diffie-Hellman de curva elíptica (ECDH) que usa la curva P-256.</summary>
      <returns>Objeto que especifica un algoritmo ECDH que usa la curva P-256.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica un algoritmo de intercambio de claves Diffie-Hellman de curva elíptica (ECDH) que usa la curva P-384.</summary>
      <returns>Objeto que especifica un algoritmo ECDH que usa la curva P-384.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica un algoritmo de intercambio de claves Diffie-Hellman de curva elíptica (ECDH) que usa la curva P-521.</summary>
      <returns>Objeto que especifica un algoritmo ECDH que usa la curva P-521.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsa">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica un algoritmo Elliptic Curve Digital Signature Algorithm (ECDSA) cuya curva se describe a través de una propiedad de clave.</summary>
      <returns>Un objeto que especifica un algoritmo ECDSA cuya curva se describe a través de una propiedad de clave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsaP256">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica un algoritmo de firma digital de curva elíptica (ECDSA) que usa la curva P-256.</summary>
      <returns>Objeto que especifica un algoritmo ECDSA que usa la curva P-256.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsaP384">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica un algoritmo de firma digital de curva elíptica (ECDSA) que usa la curva P-384.</summary>
      <returns>Objeto que especifica un algoritmo ECDSA que usa la curva P-384.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsaP521">
      <summary>Obtiene un nuevo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica un algoritmo de firma digital de curva elíptica (ECDSA) que usa la curva P-521.</summary>
      <returns>Objeto que especifica un algoritmo ECDSA que usa la curva P-521.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Object)">
      <summary>Compara el objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> especificado con el objeto  actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> actual.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="obj" /> es un elemento <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica el mismo algoritmo que el objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)">
      <summary>Compara el objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> especificado con el objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> actual.</summary>
      <param name="other">Objeto que se va a comparar con el objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> actual.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="other" /> especifica el mismo algoritmo que el objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.GetHashCode">
      <summary>Genera un valor hash para el nombre del algoritmo que está incrustado en el objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> actual.</summary>
      <returns>Valor hash del nombre del algoritmo incrustado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.MD5">
      <summary>Obtiene un nuevo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica el algoritmo hash MD5 (Message Digest 5).</summary>
      <returns>Objeto que especifica el algoritmo MD5.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)">
      <summary>Determina si dos objetos <see cref="T:System.Security.Cryptography.CngAlgorithm" /> especifican el mismo nombre de algoritmo.</summary>
      <param name="left">Objeto que especifica un nombre de algoritmo.</param>
      <param name="right">Segundo objeto, que se va a comparar con el objeto que el parámetro <paramref name="left" /> identifica.</param>
      <returns>
        <see langword="true" /> si los dos objetos especifican el mismo nombre de algoritmo; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)">
      <summary>Determina si dos objetos <see cref="T:System.Security.Cryptography.CngAlgorithm" /> no especifican el mismo algoritmo.</summary>
      <param name="left">Objeto que especifica un nombre de algoritmo.</param>
      <param name="right">Segundo objeto, que se va a comparar con el objeto que el parámetro <paramref name="left" /> identifica.</param>
      <returns>
        <see langword="true" /> si los dos objetos no especifican el mismo nombre de algoritmo; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Rsa">
      <summary>Obtiene un nuevo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica el algoritmo hash RSA.</summary>
      <returns>Objeto que especifica el algoritmo RSA.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha1">
      <summary>Obtiene un nuevo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica el algoritmo SHA-1 (Secure Hash Algorithm 1).</summary>
      <returns>Objeto que especifica el algoritmo SHA-1.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha256">
      <summary>Obtiene un nuevo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica el algoritmo SHA-256 (Secure Hash Algorithm 256).</summary>
      <returns>Objeto que especifica el algoritmo SHA-256.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha384">
      <summary>Obtiene un nuevo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica el algoritmo SHA-384 (Secure Hash Algorithm 384).</summary>
      <returns>Objeto que especifica el algoritmo SHA-384.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha512">
      <summary>Obtiene un nuevo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica el algoritmo SHA-512 (Secure Hash Algorithm 512).</summary>
      <returns>Objeto que especifica el algoritmo SHA-512.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.ToString">
      <summary>Obtiene el nombre del algoritmo que el objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> actual especifica.</summary>
      <returns>Nombre del algoritmo incrustado.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngAlgorithmGroup">
      <summary>Encapsula el nombre de un grupo de algoritmos de cifrado.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />.</summary>
      <param name="algorithmGroup">Nombre del grupo de algoritmos que se va a inicializar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="algorithmGroup" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longitud del parámetro <paramref name="algorithmGroup" /> es 0 (cero).</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup">
      <summary>Obtiene el nombre del grupo de algoritmos que el objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> actual especifica.</summary>
      <returns>Nombre del grupo de algoritmos incrustado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica la familia de algoritmos Diffie-Hellman.</summary>
      <returns>Objeto que especifica la familia de algoritmos Diffie-Hellman.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.Dsa">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica la familia de algoritmos de firma digital (DSA).</summary>
      <returns>Objeto que especifica la familia de algoritmos de DSA.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica la familia de algoritmos Diffie-Hellman de curva elíptica (ECDH).</summary>
      <returns>Objeto que especifica la familia de algoritmos de ECDH.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.ECDsa">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica la familia de algoritmos de firma digital de curva elíptica (ECDSA).</summary>
      <returns>Objeto que especifica la familia de algoritmos de ECDSA.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)">
      <summary>Compara el objeto especificado con el objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> actual.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="obj" /> es un <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica el mismo grupo de algoritmos que el objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)">
      <summary>Compara el objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> especificado con el objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> actual.</summary>
      <param name="other">Objeto que se va a comparar con el objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> actual.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="other" /> especifica el mismo grupo de algoritmos que el objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.GetHashCode">
      <summary>Genera un valor hash para el nombre del grupo de algoritmos que está incrustado en el objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> actual.</summary>
      <returns>Valor hash del nombre del grupo de algoritmos incrustado.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)">
      <summary>Determina si dos objetos <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> especifican el mismo nombre del grupo de algoritmos.</summary>
      <param name="left">Objeto que especifica un grupo de algoritmos.</param>
      <param name="right">Segundo objeto, que se va a comparar con el objeto que el parámetro <paramref name="left" /> identifica.</param>
      <returns>
        <see langword="true" /> si los dos objetos especifican el mismo nombre del grupo de algoritmos; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)">
      <summary>Determina si dos objetos <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> no especifican el mismo grupo de algoritmos.</summary>
      <param name="left">Objeto que especifica un grupo de algoritmos.</param>
      <param name="right">Segundo objeto, que se va a comparar con el objeto que el parámetro <paramref name="left" /> identifica.</param>
      <returns>
        <see langword="true" /> si los dos objetos no especifican el mismo grupo de algoritmos; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.Rsa">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica la familia de algoritmos Rivest-Shamir-Adleman (RSA).</summary>
      <returns>Objeto que especifica la familia de algoritmos de RSA.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.ToString">
      <summary>Obtiene el nombre del grupo de algoritmos que el objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> actual especifica.</summary>
      <returns>Nombre del grupo de algoritmos incrustado.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngExportPolicies">
      <summary>Especifica las directivas de exportación de claves para una clave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowArchiving">
      <summary>La clave privada se puede exportar una vez con fines de almacenamiento.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowExport">
      <summary>La clave privada se puede exportar varias veces.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowPlaintextArchiving">
      <summary>La clave privada se puede exportar una vez como texto simple.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowPlaintextExport">
      <summary>La clave privada se puede exportar varias veces como texto simple.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.None">
      <summary>No se establece ninguna directiva de exportación. Se permite la exportación de claves sin restricciones.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKey">
      <summary>Define la funcionalidad básica para las claves que se utilizan con objetos Cryptography Next Generation (CNG).</summary>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.Algorithm">
      <summary>Obtiene el algoritmo utilizado por la clave.</summary>
      <returns>Objeto que especifica el nombre de un algoritmo de cifrado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.AlgorithmGroup">
      <summary>Obtiene el grupo de algoritmos utilizados por la clave.</summary>
      <returns>Objeto que especifica el nombre de un grupo de algoritmos de cifrado.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)">
      <summary>Crea un objeto <see cref="T:System.Security.Cryptography.CngKey" /> que se puede utilizar con el algoritmo especificado.</summary>
      <param name="algorithm">Algoritmo con el que se utilizará la clave.</param>
      <returns>Clave efímera.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithm" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)">
      <summary>Crea un objeto <see cref="T:System.Security.Cryptography.CngKey" /> con nombre que proporciona el algoritmo especificado.</summary>
      <param name="algorithm">Algoritmo con el que se utilizará la clave.</param>
      <param name="keyName">Nombre de clave. Si no se proporciona un nombre, no se conservará la clave.</param>
      <returns>Clave conservada o efímera que proporciona el algoritmo especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithm" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)">
      <summary>Crea un objeto <see cref="T:System.Security.Cryptography.CngKey" /> con nombre que proporciona el algoritmo especificado, utilizando los parámetros de creación de claves proporcionados.</summary>
      <param name="algorithm">Algoritmo con el que se utilizará la clave.</param>
      <param name="keyName">Nombre de clave. Si no se proporciona un nombre, no se conservará la clave.</param>
      <param name="creationParameters">Objeto que especifica los parámetros avanzados para el método, incluido <see cref="T:System.Security.Cryptography.CngProvider" />.</param>
      <returns>Clave conservada o efímera que proporciona el algoritmo especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithm" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Delete">
      <summary>Quita la clave que está asociada al objeto.</summary>
      <exception cref="T:System.ObjectDisposedException">Se ha realizado un intento de tener acceso a una clave eliminada.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Dispose">
      <summary>Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Security.Cryptography.CngKey" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Exists(System.String)">
      <summary>Comprueba para ver si existe una clave con nombre en el proveedor de almacenamiento de claves (KSP) predeterminado.</summary>
      <param name="keyName">Nombre de clave.</param>
      <returns>
        <see langword="true" /> si existe la clave con nombre en el KSP predeterminado; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)">
      <summary>Comprueba para ver si existe una clave con nombre en el proveedor de almacenamiento de claves (KSP) especificado.</summary>
      <param name="keyName">Nombre de la clave.</param>
      <param name="provider">KSP que se debe comprobar para la clave.</param>
      <returns>
        <see langword="true" /> si existe la clave con nombre en el proveedor especificado; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> o <paramref name="provider" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>Comprueba para ver si existe una clave con nombre en el proveedor de almacenamiento de claves (KSP) especificado, según las opciones especificadas.</summary>
      <param name="keyName">Nombre de clave.</param>
      <param name="provider">KSP que se busca para la clave.</param>
      <param name="options">Combinación bit a bit de los valores de enumeración que especifican opciones para la apertura de una clave.</param>
      <returns>
        <see langword="true" /> si existe la clave con nombre en el proveedor especificado; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> o <paramref name="provider" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Exporta el material de clave a un BLOB, en el formato especificado.</summary>
      <param name="format">Objeto que especifica el formato BLOB de clave.</param>
      <returns>Un BLOB que contiene el material de clave en el formato especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores. Normalmente, <see cref="P:System.Security.Cryptography.CngKey.ExportPolicy" /> no permite exportar la clave.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.ExportPolicy">
      <summary>Obtiene la directiva de exportación utilizada por la clave.</summary>
      <returns>Objeto que especifica la directiva de exportación para la clave.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)">
      <summary>Obtiene una propiedad, según un nombre y un conjunto de opciones de propiedad.</summary>
      <param name="name">Nombre de la propiedad deseada.</param>
      <param name="options">Combinación bit a bit de los valores de enumeración que especifican opciones para la propiedad con nombre.</param>
      <returns>Objeto que contiene el valor sin formato de la propiedad especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.Handle">
      <summary>Obtiene un identificador seguro que representa una clave nativa (NCRYPT_KEY_HANDLE).</summary>
      <returns>Identificador seguro que representa la clave.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)">
      <summary>Comprueba para ver si existe en la clave la propiedad especificada.</summary>
      <param name="name">Nombre de la propiedad que se va a comprobar.</param>
      <param name="options">Combinación bit a bit de los valores de enumeración que especifican opciones para la propiedad con nombre.</param>
      <returns>
        <see langword="true" /> si se encuentra la propiedad especificada; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Crea una nueva clave importando el material de clave especificado al proveedor de almacenamiento de claves (KSP) predeterminado y utilizando el formato especificado.</summary>
      <param name="keyBlob">Matriz de bytes que contiene la información de clave.</param>
      <param name="format">Objeto que especifica el formato de la matriz <paramref name="keyBlob" />.</param>
      <returns>La nueva clave.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyBlob" /> o <paramref name="format" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)">
      <summary>Crea una nueva clave mediante la importación del material de clave especificado en el proveedor de almacenamiento de claves (KSP), en el formato especificado.</summary>
      <param name="keyBlob">Matriz de bytes que contiene la información de clave.</param>
      <param name="format">Objeto que especifica el formato de la matriz <paramref name="keyBlob" />.</param>
      <param name="provider">El KSP.</param>
      <returns>La nueva clave.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyBlob" />, <paramref name="format" /> o <paramref name="provider" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.IsEphemeral">
      <summary>Obtiene el estado de persistencia de la clave.</summary>
      <returns>
        <see langword="true" /> si la clave es efímera; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.IsMachineKey">
      <summary>Obtiene el ámbito (equipo o usuario) de la clave.</summary>
      <returns>
        <see langword="true" /> si la clave está disponible para la máquina; <see langword="false" /> si la clave es sólo para el usuario actual.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.KeyName">
      <summary>Obtiene el nombre de la clave.</summary>
      <returns>Nombre de la clave. Si la clave es efímera, el valor es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.KeySize">
      <summary>Obtiene el tamaño de la clave en bits.</summary>
      <returns>Tamaño de la clave en bits.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.KeyUsage">
      <summary>Obtiene las operaciones criptográficas especificadas por la clave.</summary>
      <returns>Combinación bit a bit de los valores de enumeración que especifican los usos permitidos para la clave.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)">
      <summary>Crea una instancia de un objeto <see cref="T:System.Security.Cryptography.CngKey" /> utilizando un identificador para una clave existente.</summary>
      <param name="keyHandle">Identificador de una clave existente.</param>
      <param name="keyHandleOpenOptions">Uno de los valores de la enumeración que indica si <paramref name="keyHandle" /> representa una clave efímera o una clave con nombre.</param>
      <returns>Clave existente.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyHandle" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyHandle" /> no es válido, es incorrecto o ya está cerrado. Esta excepción se produce igualmente si la clave es una clave efímera creada por Common Language Runtime (CLR), pero no se especifica el valor <see cref="F:System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(System.String)">
      <summary>Crea una instancia de un objeto <see cref="T:System.Security.Cryptography.CngKey" /> que representa una clave con nombre existente.</summary>
      <param name="keyName">Nombre de la clave.</param>
      <returns>Clave existente.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)">
      <summary>Crea una instancia de un objeto <see cref="T:System.Security.Cryptography.CngKey" /> que representa una clave con nombre existente, utilizando el proveedor de almacenamiento de claves (KSP) especificado.</summary>
      <param name="keyName">Nombre de la clave.</param>
      <param name="provider">KSP que contiene la clave.</param>
      <returns>Clave existente.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> o <paramref name="provider" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>Crea una instancia de un objeto <see cref="T:System.Security.Cryptography.CngKey" /> que representa una clave con nombre existente, utilizando el proveedor de almacenamiento de claves (KSP) especificado y las opciones de apertura de clave.</summary>
      <param name="keyName">Nombre de la clave.</param>
      <param name="provider">KSP que contiene la clave.</param>
      <param name="openOptions">Una combinación bit a bit de los valores de enumeración que especifican opciones para abrir la clave, como, por ejemplo, desde dónde se abre la clave (almacenamiento de máquinas o usuarios) y si se suprime la solicitud de la IU.</param>
      <returns>Clave existente.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> o <paramref name="provider" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.ParentWindowHandle">
      <summary>Obtiene o establece el identificador de ventana (HWND) que se debe utilizar para los indicadores de la interfaz de usuario (UI) que se generan al tener acceso a la clave.</summary>
      <returns>Identificador de la ventana primaria para la clave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.Provider">
      <summary>Obtiene el proveedor de almacenamiento de claves (KSP) que administra la clave.</summary>
      <returns>KSP que administra la clave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.ProviderHandle">
      <summary>Obtiene un identificador nativo (NCRYPT_PROV_HANDLE) para el proveedor de almacenamiento de claves (KSP).</summary>
      <returns>Identificador para KSP.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)">
      <summary>Establece una propiedad con nombre en la clave.</summary>
      <param name="property">Propiedad de la clave que se debe establecer.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.UIPolicy">
      <summary>Obtiene parámetros que controlan la interfaz de usuario (UI) para tener acceso a la clave.</summary>
      <returns>Objeto que contiene parámetros de configuración para mostrar la interfaz de usuario.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.UniqueName">
      <summary>Obtiene el nombre único para la clave.</summary>
      <returns>Nombre alternativo para la clave. Si la clave es efímera, el valor es <see langword="null" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyBlobFormat">
      <summary>Especifica un formato BLOB de clave que se utiliza con objetos CNG (Cryptography Next Generation) de Microsoft.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> utilizando el formato especificado.</summary>
      <param name="format">Formato BLOB de clave que se va a inicializar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="format" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longitud del parámetro <paramref name="format" /> es 0 (cero).</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccFullPrivateBlob">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica un BLOB de clave privada para una clave de criptografía de curva elíptica (ECC) que contiene parámetros de curva explícitos.</summary>
      <returns>Un objeto que describe un BLOB de clave privada.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccFullPublicBlob">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica un BLOB de clave pública para una clave de criptografía de curva elíptica (ECC) que contiene parámetros de curva explícitos.</summary>
      <returns>Un objeto que describe un BLOB de clave pública.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica un BLOB de clave privada para una clave de criptografía de curva elíptica (ECC, elliptic curve cryptography).</summary>
      <returns>Objeto que especifica un BLOB de clave privada ECC.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica un BLOB de clave pública para una clave de criptografía de curva elíptica (ECC).</summary>
      <returns>Objeto que especifica un BLOB de clave pública ECC.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)">
      <summary>Compara el objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> especificado con el objeto  actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> actual.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="obj" /> es un objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica el mismo formato BLOB de clave que el objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Compara el objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> especificado con el objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> actual.</summary>
      <param name="other">Objeto que se va a comparar con el objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> actual.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="other" /> especifica el mismo formato BLOB de clave que el objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.Format">
      <summary>Obtiene el nombre del formato BLOB de clave que el objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> actual especifica.</summary>
      <returns>Nombre de formato BLOB de clave incrustada.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica un BLOB de clave privada genérica.</summary>
      <returns>Objeto que especifica un BLOB de clave privada genérica.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica un BLOB de clave pública genérica.</summary>
      <returns>Objeto que especifica un BLOB de clave pública genérica.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.GetHashCode">
      <summary>Genera un valor hash para el formato BLOB de clave incrustada en el objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> actual.</summary>
      <returns>Valor hash del formato BLOB de clave incrustada.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Determina si dos objetos <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> especifican el mismo formato BLOB de clave.</summary>
      <param name="left">Objeto que especifica un formato BLOB de clave.</param>
      <param name="right">Segundo objeto, que se va a comparar con el objeto identificado por el parámetro <paramref name="left" />.</param>
      <returns>
        <see langword="true" /> si los dos objetos especifican el mismo formato BLOB de clave; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Determina si dos objetos <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> no especifican el mismo formato BLOB de clave.</summary>
      <param name="left">Objeto que especifica un formato BLOB de clave.</param>
      <param name="right">Segundo objeto, que se va a comparar con el objeto identificado por el parámetro <paramref name="left" />.</param>
      <returns>
        <see langword="true" /> si los dos objetos no especifican el mismo formato BLOB de clave; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica un BLOB de clave de transporte opaco.</summary>
      <returns>Objeto que especifica un BLOB de clave de transporte opaco.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica un BLOB de Estándar de sintaxis de información de clave privada (PKCS #8, Private Key Information Syntax Standard).</summary>
      <returns>Objeto que especifica un BLOB de clave privada PKCS #8.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.ToString">
      <summary>Obtiene el nombre del formato BLOB de clave que el objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> actual especifica.</summary>
      <returns>Nombre de formato BLOB de clave incrustada.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyCreationOptions">
      <summary>Especifica las opciones que se usan para la creación de claves.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyCreationOptions.MachineKey">
      <summary>Se crea una clave para todo el equipo.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyCreationOptions.None">
      <summary>No se usa ninguna opción de creación claves.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyCreationOptions.OverwriteExistingKey">
      <summary>La clave existente se sobrescribe durante la creación de claves.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyCreationParameters">
      <summary>Contiene propiedades avanzadas para la creación de claves.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyCreationParameters.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CngKeyCreationParameters" />.</summary>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.ExportPolicy">
      <summary>Obtiene o establece la directiva de exportación de claves.</summary>
      <returns>Objeto que especifica una directiva de exportación de claves. El valor predeterminado es <see langword="null" />, lo que indica que está establecida la directiva de exportación predeterminada del proveedor de almacenamiento de claves.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.KeyCreationOptions">
      <summary>Obtiene o establece las opciones de creación de claves.</summary>
      <returns>Objeto que especifica opciones para crear claves. El valor predeterminado es <see langword="null" />, lo que indica que están establecidas las opciones de creación de claves predeterminadas del proveedor de almacenamiento de claves.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.KeyUsage">
      <summary>Obtiene o establece las operaciones criptográficas que se aplican a la clave actual.</summary>
      <returns>Combinación bit a bit de uno o más valores de enumeración que especifican el uso de la clave. El valor predeterminado es <see langword="null" />, lo que indica que está establecida el uso de la clave predeterminada del proveedor de almacenamiento de claves.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.Parameters">
      <summary>Permite crear un objeto <see cref="T:System.Security.Cryptography.CngKey" /> con propiedades adicionales que se establecen antes de que la clave esté finalizada.</summary>
      <returns>Objeto de colección que contiene cualquier parámetro adicional que debe establecer en un objeto <see cref="T:System.Security.Cryptography.CngKey" /> durante la creación de la clave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.ParentWindowHandle">
      <summary>Obtiene o establece el identificador de ventana que se debe utilizar como ventana primaria para los cuadros de diálogo creados por las clases CNG (Cryptography Next Generation).</summary>
      <returns>HWND de la ventana primaria que se utiliza para cuadros de diálogo CNG.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.Provider">
      <summary>Obtiene o establece el proveedor de almacenamiento de claves (KSP) en el que se crea una clave.</summary>
      <returns>Objeto que especifica el KSP en el que se creará una nueva clave.</returns>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Cryptography.CngKeyCreationParameters.Provider" /> se establece en un valor <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.UIPolicy">
      <summary>Obtiene o establece información sobre la interfaz de usuario que se muestra cuando se crea una clave o se obtiene acceso a ella.</summary>
      <returns>Objeto que contiene detalles sobre la interfaz de usuario mostrada por las clases CNG (Cryptography Next Generation) cuando se crea una clave o se obtiene acceso a ella. Un valor <see langword="null" /> indica que está establecida la directiva de la interfaz de usuario predeterminada del proveedor de almacenamiento de claves.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyHandleOpenOptions">
      <summary>Especifica opciones para abrir identificadores de clave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey">
      <summary>El controlador de clave que se abre especifica una clave efímera.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyHandleOpenOptions.None">
      <summary>El controlador clave que se abre no especifica una clave efímera.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyOpenOptions">
      <summary>Especifica opciones para abrir una clave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.MachineKey">
      <summary>Se abre una clave para todo el equipo.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.None">
      <summary>No se especifica ninguna opción de apertura de clave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.Silent">
      <summary>Se suprime la solicitud de la interfaz de usuario.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.UserKey">
      <summary>Si no se especifica el valor de <see cref="F:System.Security.Cryptography.CngKeyOpenOptions.MachineKey" />, se abre una clave de usuario en su lugar.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyUsages">
      <summary>Especifica las operaciones criptográficas con las que se puede utilizar una clave de Cryptography Next Generation (CNG).</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.AllUsages">
      <summary>La clave se puede utilizar para todos los casos.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.Decryption">
      <summary>La clave se puede utilizar para el cifrado y el descifrado.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.KeyAgreement">
      <summary>La clave se puede utilizar para la generación de acuerdos confidenciales y el intercambio de claves.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.None">
      <summary>No se ha asignado a la clave ningún valor de uso.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.Signing">
      <summary>La clave se puede utilizar para la firma y la comprobación.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngProperty">
      <summary>Encapsula una propiedad de clave o proveedor CNG (Cryptography Next Generation).</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CngProperty" />.</summary>
      <param name="name">Nombre de propiedad que se va a inicializar.</param>
      <param name="value">Valor de propiedad que se va a inicializar.</param>
      <param name="options">Combinación bit a bit de los valores de enumeración que especifican cómo se almacena la propiedad.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.Equals(System.Object)">
      <summary>Compara el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> especificado con el objeto  actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="obj" /> es un objeto <see cref="T:System.Security.Cryptography.CngProperty" /> que especifica la misma propiedad que el objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)">
      <summary>Compara el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> especificado con el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</summary>
      <param name="other">Objeto que se va a comparar con el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="other" /> representa la misma propiedad que el objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.GetHashCode">
      <summary>Genera un valor hash para el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</summary>
      <returns>Valor hash del objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.GetValue">
      <summary>Obtiene el valor de propiedad que el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual especifica.</summary>
      <returns>Matriz que representa el valor almacenado en la propiedad.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProperty.Name">
      <summary>Obtiene el nombre de propiedad que el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual especifica.</summary>
      <returns>Nombre de propiedad que se establece en el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)">
      <summary>Determina si dos objetos <see cref="T:System.Security.Cryptography.CngProperty" /> especifican el mismo nombre de propiedad, valor y opciones.</summary>
      <param name="left">Objeto que especifica una propiedad de clave o proveedor CNG (Cryptography Next Generation).</param>
      <param name="right">Segundo objeto, que se va a comparar con el objeto que el parámetro <paramref name="left" /> identifica.</param>
      <returns>
        <see langword="true" /> si los dos objetos especifican la misma propiedad; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)">
      <summary>Determina si dos objetos <see cref="T:System.Security.Cryptography.CngProperty" /> no especifican el mismo nombre de propiedad, valor y opciones.</summary>
      <param name="left">Objeto que especifica una propiedad de clave o proveedor CNG (Cryptography Next Generation).</param>
      <param name="right">Segundo objeto, que se va a comparar con el objeto que el parámetro <paramref name="left" /> identifica.</param>
      <returns>
        <see langword="true" /> si los dos objetos no especifican la misma propiedad; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProperty.Options">
      <summary>Obtiene las opciones de propiedad que el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual especifica.</summary>
      <returns>Objeto que especifica las opciones que se establecen en el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngPropertyCollection">
      <summary>Proporciona una colección de propiedades CNG (Cryptography Next Generation) fuertemente tipadas.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngPropertyCollection.#ctor">
      <summary>Inicializa un nuevo objeto <see cref="T:System.Security.Cryptography.CngPropertyCollection" />.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngPropertyOptions">
      <summary>Especifica las opciones de propiedad de clave de Cryptography Next Generation (CNG).</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngPropertyOptions.CustomProperty">
      <summary>El proveedor no se especifica mediante CNG. Utilice esta opción para evitar futuros conflictos de nombres con propiedades CNG.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngPropertyOptions.None">
      <summary>La propiedad a la que se hace referencia no tiene ninguna opción.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngPropertyOptions.Persist">
      <summary>Se debe conservar la propiedad.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngProvider">
      <summary>Encapsula el nombre de un proveedor de almacenamiento de claves (KSP) que se utiliza con CNG (Cryptography Next Generation).</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CngProvider" />.</summary>
      <param name="provider">Nombre del proveedor de almacenamiento de claves (KSP) que se va a inicializar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="provider" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longitud del parámetro <paramref name="provider" /> es 0 (cero).</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.Equals(System.Object)">
      <summary>Compara el objeto <see cref="T:System.Security.Cryptography.CngProvider" /> especificado con el objeto  actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto <see cref="T:System.Security.Cryptography.CngProvider" /> actual.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="obj" /> es un <see cref="T:System.Security.Cryptography.CngProvider" /> que especifica el mismo proveedor de almacenamiento de claves (KSP) que el objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)">
      <summary>Compara el objeto <see cref="T:System.Security.Cryptography.CngProvider" /> especificado con el objeto <see cref="T:System.Security.Cryptography.CngProvider" /> actual.</summary>
      <param name="other">Objeto que se va a comparar con el objeto <see cref="T:System.Security.Cryptography.CngProvider" /> actual.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="other" /> especifica el mismo proveedor de almacenamiento de claves (KSP) que el objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.GetHashCode">
      <summary>Genera un valor hash para el nombre del proveedor de almacenamiento de claves (KSP) incrustado en el objeto <see cref="T:System.Security.Cryptography.CngProvider" /> actual.</summary>
      <returns>Valor hash del nombre de KSP incrustado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngProvider" /> que especifica el Proveedor de almacenamiento de claves para tarjetas inteligentes de Microsoft.</summary>
      <returns>Objeto que especifica el Proveedor de almacenamiento de claves para tarjetas inteligentes de Microsoft.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.CngProvider" /> que especifica el Proveedor de almacenamiento de claves de software de Microsoft.</summary>
      <returns>Objeto que especifica el Proveedor de almacenamiento de claves de software de Microsoft.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)">
      <summary>Determina si dos objetos <see cref="T:System.Security.Cryptography.CngProvider" /> especifican el mismo proveedor de almacenamiento de claves (KSP).</summary>
      <param name="left">Objeto que especifica un KSP.</param>
      <param name="right">Segundo objeto, que se va a comparar con el objeto que el parámetro <paramref name="left" /> identifica.</param>
      <returns>
        <see langword="true" /> si los dos objetos representan el mismo KSP; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)">
      <summary>Determina si dos objetos <see cref="T:System.Security.Cryptography.CngProvider" /> no representan el mismo proveedor de almacenamiento de claves (KSP).</summary>
      <param name="left">Objeto que especifica un KSP.</param>
      <param name="right">Segundo objeto, que se va a comparar con el objeto que el parámetro <paramref name="left" /> identifica.</param>
      <returns>
        <see langword="true" /> si los dos objetos no representan el mismo KSP; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProvider.Provider">
      <summary>Obtiene el nombre del proveedor de almacenamiento de claves (KSP) que el objeto <see cref="T:System.Security.Cryptography.CngProvider" /> actual especifica.</summary>
      <returns>Nombre de KSP incrustado.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.ToString">
      <summary>Obtiene el nombre del proveedor de almacenamiento de claves (KSP) que el objeto <see cref="T:System.Security.Cryptography.CngProvider" /> actual especifica.</summary>
      <returns>Nombre de KSP incrustado.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngUIPolicy">
      <summary>Encapsula los parámetros de configuración opcionales para la interfaz de usuario (UI) que Cryptography Next Generation (CNG) muestra cuando tiene acceso a una clave protegida.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CngUIPolicy" /> utilizando el nivel de protección especificado.</summary>
      <param name="protectionLevel">Combinación bit a bit de los valores de enumeración que especifican el nivel de protección.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CngUIPolicy" /> utilizando el nivel de protección y el nombre descriptivo especificados.</summary>
      <param name="protectionLevel">Combinación bit a bit de los valores de enumeración que especifican el nivel de protección.</param>
      <param name="friendlyName">Nombre descriptivo de la clave que se va a usar en el indicador de la interfaz de usuario. Especifique una cadena de tipo null para usar el nombre predeterminado.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CngUIPolicy" /> utilizando el nivel de protección, el nombre descriptivo y la descripción especificados.</summary>
      <param name="protectionLevel">Combinación bit a bit de los valores de enumeración que especifican el nivel de protección.</param>
      <param name="friendlyName">Nombre descriptivo de la clave que se va a usar en el indicador de la interfaz de usuario. Especifique una cadena de tipo null para usar el nombre predeterminado.</param>
      <param name="description">Descripción de texto completo de la clave. Especifique una cadena de tipo null para usar la descripción predeterminada.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CngUIPolicy" /> utilizando el nivel de protección, el nombre descriptivo, la cadena de descripción y el contexto de uso especificados.</summary>
      <param name="protectionLevel">Combinación bit a bit de los valores de enumeración que especifican el nivel de protección.</param>
      <param name="friendlyName">Nombre descriptivo de la clave que se va a usar en el indicador de la interfaz de usuario. Especifique una cadena de tipo null para usar el nombre predeterminado.</param>
      <param name="description">Descripción de texto completo de la clave. Especifique una cadena de tipo null para usar la descripción predeterminada.</param>
      <param name="useContext">Descripción de cómo se va a utilizar la clave. Especifique una cadena de tipo null para usar la descripción predeterminada.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CngUIPolicy" /> utilizando el nivel de protección, el nombre descriptivo, la cadena de descripción, el contexto de uso y el título especificados.</summary>
      <param name="protectionLevel">Combinación bit a bit de los valores de enumeración que especifican el nivel de protección.</param>
      <param name="friendlyName">Nombre descriptivo de la clave que se va a usar en el indicador de la interfaz de usuario. Especifique una cadena de tipo null para usar el nombre predeterminado.</param>
      <param name="description">Descripción de texto completo de la clave. Especifique una cadena de tipo null para usar la descripción predeterminada.</param>
      <param name="useContext">Descripción de cómo se va a utilizar la clave. Especifique una cadena de tipo null para usar la descripción predeterminada.</param>
      <param name="creationTitle">Título para el cuadro de diálogo que proporciona el indicador de la interfaz de usuario. Especifique una cadena de tipo null para usar el título predeterminado.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.CreationTitle">
      <summary>Obtiene el título mostrado por el indicador de la interfaz de usuario.</summary>
      <returns>Título del cuadro de diálogo que aparece cuando se tiene acceso a la clave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.Description">
      <summary>Obtiene la cadena de descripción mostrada por el indicador de la interfaz de usuario.</summary>
      <returns>Texto de la descripción para el cuadro de diálogo que aparece cuando se tiene acceso a la clave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.FriendlyName">
      <summary>Obtiene el nombre descriptivo mostrado por el indicador de la interfaz de usuario.</summary>
      <returns>Nombre descriptivo que se utiliza para describir la clave en el cuadro de diálogo que aparece cuando se tiene acceso a la clave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.ProtectionLevel">
      <summary>Obtiene el nivel de protección de la interfaz de usuario para la clave.</summary>
      <returns>Objeto que describe el nivel de protección de la interfaz de usuario que se aplica a la clave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.UseContext">
      <summary>Obtiene la descripción de cómo se va a utilizar la clave.</summary>
      <returns>Descripción de cómo se va a utilizar la clave.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngUIProtectionLevels">
      <summary>Especifica el nivel de protección de la clave en escenarios de solicitudes de la interfaz de usuario.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngUIProtectionLevels.ForceHighProtection">
      <summary>Se muestra un indicador de la interfaz de usuario cada vez que se tiene acceso a la clave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngUIProtectionLevels.None">
      <summary>No se muestra ningún indicador de la interfaz de usuario cuando se tiene acceso a la clave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngUIProtectionLevels.ProtectKey">
      <summary>Se muestra un indicador de la interfaz de usuario la primera vez que se tiene acceso a la clave en un proceso.</summary>
    </member>
    <member name="T:System.Security.Cryptography.DSACng">
      <summary>Proporciona una implementación de CNG (Cryptography Next Generation) del algoritmo de firma digital (DSA).</summary>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.DSACng" /> con un par de claves aleatorio de 2048 bits.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.DSACng" /> con una clave generada aleatoriamente del tamaño especificado.</summary>
      <param name="keySize">Tamaño de la clave que se va a generar en bits.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="keySize" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.DSACng" /> con la clave especificada.</summary>
      <param name="key">Clave que se va a usar para operaciones DSA.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> no es una clave DSA válida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])">
      <summary>Crea la firma <see cref="T:System.Security.Cryptography.DSA" /> de los datos especificados.</summary>
      <param name="rgbHash">Valor hash que se va a firmar.</param>
      <returns>La firma digital de los datos especificados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbHash" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Esta instancia representa solo una clave pública.
o bien
Se ha producido un error durante la creación de la firma.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="rgbHash" /> es de menor longitud que el valor Q de la clave DSA.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)">
      <summary>Exporta los parámetros del algoritmo DSA.</summary>
      <param name="includePrivateParameters">Es <see langword="true" /> si se van a incluir parámetros privados; en caso contrario, es <see langword="false" />.</param>
      <returns>Parámetros del algoritmo DSA.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La clave DSA no es una clave privada o pública válida.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)">
      <summary>Reemplaza la clave existente con la que funciona la instancia actual mediante la creación de un nuevo <see cref="T:System.Security.Cryptography.CngKey" /> para la estructura de parámetros.</summary>
      <param name="parameters">Parámetros DSA.</param>
      <exception cref="T:System.ArgumentException">Los parámetros DSA especificados no son válidos.</exception>
    </member>
    <member name="P:System.Security.Cryptography.DSACng.Key">
      <summary>Obtiene la clave que usará el objeto <see cref="T:System.Security.Cryptography.DSACng" /> para todas las operaciones criptográficas que realice.</summary>
      <returns>La clave utilizada por el objeto <see cref="T:System.Security.Cryptography.DSACng" /> para realizar operaciones criptográficas.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACng.KeyExchangeAlgorithm">
      <summary>Obtiene el nombre del algoritmo de intercambio de claves.</summary>
      <returns>Siempre es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACng.LegalKeySizes">
      <summary>Obtiene los tamaños de clave, en bits, admitidos por el algoritmo DSA.</summary>
      <returns>Matriz que contiene los tamaños de clave admitidos por el algoritmo.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACng.SignatureAlgorithm">
      <summary>Obtiene el nombre del algoritmo de firma.</summary>
      <returns>Cadena "DSA".</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])">
      <summary>Comprueba si la firma digital especificada coincide con el hash especificado.</summary>
      <param name="rgbHash">Hash firmado.</param>
      <param name="rgbSignature">Firma digital que se va a comprobar.</param>
      <returns>
        <see langword="true" /> si <paramref name="rgbSignature" /> coincide con la firma calculada mediante el hash especificado; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Los parámetros <paramref name="rgbHash" /> o <paramref name="rgbSignature" /> son <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellmanCng">
      <summary>Proporciona una implementación CNG (Cryptography Next Generation) del algoritmo Diffie-Hellman de curva elíptica (ECDH). Esta clase se utiliza para realizar operaciones criptográficas.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> con un par de claves aleatorio.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> con un par de claves aleatorio usando el tamaño de clave especificado.</summary>
      <param name="keySize">Tamaño de la clave. Los tamaños de clave válidos son 256, 384 y 521 bits.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="keySize" /> especifica una longitud no válida.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Las clases de Cryptography Next Generation (CNG) no se admiten en este sistema.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> mediante el objeto <see cref="T:System.Security.Cryptography.CngKey" /> especificado.</summary>
      <param name="key">La clave que se usará como entrada para las operaciones criptográficas llevadas a cabo por el objeto actual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> no especifica un grupo de algoritmos Diffie-Hellman de curva elíptica (ECDH).</exception>
      <exception cref="T:System.PlatformNotSupportedException">Las clases de Cryptography Next Generation (CNG) no se admiten en este sistema.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> cuyo par de claves pública-privada se genera sobre la curva especificada.</summary>
      <param name="curve">La curva usada para generar el par de claves pública-privada.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="curve" /> no se valida.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
      <summary>Realiza la derivación de claves mediante un algoritmo hash especificado con datos antepuestos o anexados opcionales.</summary>
      <param name="otherPartyPublicKey">Clave pública de la otra parte.</param>
      <param name="hashAlgorithm">Algoritmo hash que se va a usar para derivar el material de clave.</param>
      <param name="secretPrepend">Valor para anteponer al secreto derivado antes de la operación hash.</param>
      <param name="secretAppend">Valor para anexar al secreto derivado antes de la operación hash.</param>
      <returns>El hash del secreto compartido después de anteponer o anexar datos según se solicite.</returns>
      <exception cref="T:System.NotImplementedException">Una clase derivada debe reemplazar este método.</exception>
      <exception cref="T:System.ArgumentException">La curva que usa <paramref name="otherPartyPublicKey" /> tiene un tamaño diferente que la curva de esta clave.
o bien
El parámetro <paramref name="hashAlgorithm" /> no especifica ningún valor hash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La curva que usa <paramref name="otherPartyPublicKey" /> es diferente de la curva de esta clave.
o bien
Esta instancia representa solo una clave pública.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
      <summary>Realiza la derivación de claves mediante un algoritmo HMAC (código de autentificación de mensajes en clave-hash) con datos antepuestos o anexados opcionales.</summary>
      <param name="otherPartyPublicKey">Clave pública de la otra parte.</param>
      <param name="hashAlgorithm">Algoritmo hash que se va a usar para derivar el material de clave.</param>
      <param name="hmacKey">Clave para HMAC.</param>
      <param name="secretPrepend">Valor para anteponer al secreto derivado antes de la operación hash.</param>
      <param name="secretAppend">Valor para anexar al secreto derivado antes de la operación hash.</param>
      <returns>El HMAC del secreto compartido después de anteponer o anexar datos según se solicite.</returns>
      <exception cref="T:System.ArgumentException">La curva que usa <paramref name="otherPartyPublicKey" /> tiene un tamaño diferente que la curva de esta clave.
o bien
El parámetro <paramref name="hashAlgorithm" /> no especifica ningún valor hash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La curva que usa <paramref name="otherPartyPublicKey" /> es diferente de la curva de esta clave.
o bien
Esta instancia representa solo una clave pública.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
      <summary>Deriva el material de clave que se genera del acuerdo confidencial entre dos partes, según un objeto <see cref="T:System.Security.Cryptography.CngKey" /> que contiene la clave pública de la segunda parte.</summary>
      <param name="otherPartyPublicKey">Objeto que contiene la parte pública de la clave Diffie-Hellman de curva elíptica (ECDH) de la otra parte en el intercambio de claves.</param>
      <returns>Matriz de bytes que contiene el material de clave. Esta información se genera a partir del acuerdo confidencial que se calcula de la clave privada del objeto actual y de la clave pública especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" /> no es válido. Su propiedad <see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /> no especifica <see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /> o su tamaño de clave no coincide con el tamaño de clave de esta instancia.</exception>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /> de este objeto especifica la función de derivación de claves <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />, pero <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> o <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
      <summary>Deriva el material de clave que se genera del acuerdo confidencial entre dos partes, según un objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> que contiene la clave pública de la segunda parte.</summary>
      <param name="otherPartyPublicKey">Clave pública de la otra parte en el intercambio de claves.</param>
      <returns>Matriz de bytes que contiene el material de clave. Esta información se genera a partir del acuerdo confidencial que se calcula de la clave privada del objeto actual y de la clave pública especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" /> no es una clave <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
      <summary>Realiza la derivación de claves mediante TLS (Seguridad de la capa de transporte) 1.1 PRF (Función pseudoaleatoria).</summary>
      <param name="otherPartyPublicKey">Clave pública de la otra parte.</param>
      <param name="prfLabel">Etiqueta PRF con codificación ASCII.</param>
      <param name="prfSeed">Valor de inicialización de PRF de 64 bytes.</param>
      <returns>Los primeros 48 bytes de TLS 1.1 PRF con el secreto compartido como clave.</returns>
      <exception cref="T:System.NotImplementedException">Una clase derivada debe reemplazar este método.</exception>
      <exception cref="T:System.ArgumentException">La curva que usa <paramref name="otherPartyPublicKey" /> tiene un tamaño diferente que la curva de esta clave.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" />, <paramref name="prfLabel" /> o <paramref name="prfSeed" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="prfSeed" /> no es exactamente 64 bytes de longitud.
o bien
La curva que usa <paramref name="otherPartyPublicKey" /> es diferente de la curva de esta clave.
o bien
Esta instancia representa solo una clave pública.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
      <summary>Obtiene un identificador para el acuerdo confidencial generado entre dos partes, según un objeto <see cref="T:System.Security.Cryptography.CngKey" /> que contiene la clave pública de la segunda parte.</summary>
      <param name="otherPartyPublicKey">Objeto que contiene la parte pública de la clave Diffie-Hellman de curva elíptica (ECDH) de la otra parte en el intercambio de claves.</param>
      <returns>Identificador del acuerdo confidencial. Esta información se calcula a partir de la clave privada del objeto actual y la clave pública especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" /> no es una clave ECDH o no tiene el tamaño correcto.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
      <summary>Obtiene un identificador para el acuerdo confidencial generado entre dos partes, según un objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> que contiene la clave pública de la segunda parte.</summary>
      <param name="otherPartyPublicKey">Clave pública de la otra parte en el intercambio de claves.</param>
      <returns>Identificador del acuerdo confidencial. Esta información se calcula a partir de la clave privada del objeto actual y la clave pública especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" /> no es una clave <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
      <summary>Exporta la clave y parámetros de curva explícitos que usa el objeto <see cref="T:System.Security.Cryptography.ECCurve" /> en un objeto <see cref="T:System.Security.Cryptography.ECParameters" />.</summary>
      <param name="includePrivateParameters">Es <see langword="true" /> si se van a incluir parámetros privados; en caso contrario, es <see langword="false" />.</param>
      <returns>La clave y parámetros de curva explícitos que usa el objeto <see cref="T:System.Security.Cryptography.ECCurve" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El método no puede obtener valores de curva.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Esta plataforma no admite la exportación explícita. Se requiere Windows 10, o bien versiones posteriores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
      <summary>Exporta la clave que usa el objeto <see cref="T:System.Security.Cryptography.ECCurve" /> en un objeto <see cref="T:System.Security.Cryptography.ECParameters" />.</summary>
      <param name="includePrivateParameters">Es <see langword="true" /> si se van a incluir parámetros privados; en caso contrario, es <see langword="false" />.</param>
      <returns>La clave y parámetros de curva con nombre que usa el objeto <see cref="T:System.Security.Cryptography.ECCurve" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El método no puede obtener valores de curva.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>Deserializa la información de clave de una cadena XML mediante el formato especificado.</summary>
      <param name="xml">Información de clave basada en XML que se va a deserializar.</param>
      <param name="format">Uno de los valores de la enumeración que especifica el formato de la cadena XML. El único formato actualmente aceptado es <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xml" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="xml" /> es incorrecto.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" /> especifica un formato no válido. El único valor aceptado es <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
      <summary>Genera un nuevo par de claves pública-privada efímeras para la curva especificada.</summary>
      <param name="curve">La curva usada para generar un par de claves pública-privada efímeras.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="curve" /> no se valida.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
      <summary>Obtiene o establece el algoritmo hash que se utiliza al generar el material de clave.</summary>
      <returns>Objeto que especifica el algoritmo hash.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es <see langword="null." /></exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
      <summary>Obtiene o establece la clave del código de autenticación de mensajes basado en hash (HMAC) que se utiliza para derivar el material de clave.</summary>
      <returns>La clave del código de autenticación de mensajes basado en hash (HMAC) que se utiliza para derivar el material de clave.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
      <summary>Importa los parámetros especificados para un objeto <see cref="T:System.Security.Cryptography.ECCurve" /> como una clave en la instancia actual.</summary>
      <param name="parameters">Los parámetros de la curva que se importarán.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="parameters" /> no se valida.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="parameters" /> hace referencia a una curva que no se puede importar.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="parameters" /> hace referencia a una curva que esta plataforma no admite.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.Key">
      <summary>Especifica la <see cref="T:System.Security.Cryptography.CngKey" /> utilizada por el objeto actual para operaciones criptográficas.</summary>
      <returns>Par de claves utilizado por este objeto para realizar operaciones criptográficas.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
      <summary>Obtiene o establece la función de derivación de claves para la clase <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />.</summary>
      <returns>Uno de los valores de la enumeración <see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" />: <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />, <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" /> o <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />. El valor predeterminado es <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de la enumeración está fuera del intervalo.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.KeySize">
      <summary>Obtiene o establece el tamaño, en bits, del módulo de claves que usa el algoritmo asimétrico.</summary>
      <returns>Tamaño, en bits, del módulo de claves que usa el algoritmo asimétrico.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" /> no tiene el permiso de <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.LegalKeySizes" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
      <summary>Obtiene o establece el valor de la etiqueta que se utiliza para la derivación de claves.</summary>
      <returns>Valor de la etiqueta.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey">
      <summary>Obtiene la clave pública que puede utilizar otro objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> para generar un acuerdo confidencial compartido.</summary>
      <returns>Clave pública que está asociada a esta instancia del objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
      <summary>Obtiene o establece un valor que se anexará al acuerdo confidencial al generar el material de clave.</summary>
      <returns>Valor que se anexa al acuerdo confidencial.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
      <summary>Obtiene o establece un valor que se agregará al principio del acuerdo confidencial cuando se deriva el material de clave.</summary>
      <returns>Valor que se anexa al principio del acuerdo confidencial durante la derivación de claves.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
      <summary>Obtiene o establece el valor de inicialización que se utilizará cuando se deriva el material de clave.</summary>
      <returns>El valor de inicialización.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>Serializa la información de clave en una cadena XML mediante el formato especificado.</summary>
      <param name="format">Uno de los valores de la enumeración que especifica el formato de la cadena XML. El único formato actualmente aceptado es <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</param>
      <returns>Objeto de cadena que contiene la información de clave, serializada en una cadena XML, según el formato solicitado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" /> especifica un formato no válido. El único valor aceptado es <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
      <summary>Obtiene un valor que indica si el acuerdo confidencial se utiliza como clave de código de autenticación de mensajes basado en hash (HMAC) para derivar el material de clave.</summary>
      <returns>
        <see langword="true" /> si el acuerdo confidencial se utiliza como una clave HMAC para derivar el material de clave; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey">
      <summary>Especifica una clave pública Diffie-Hellman de curva elíptica (ECDH) que se utiliza con la clase <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />.</summary>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.BlobFormat">
      <summary>Obtiene el formato BLOB de clave para un objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />.</summary>
      <returns>Formato en el que se expresa el BLOB de clave.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.ExportExplicitParameters">
      <summary>Exporta la clave y parámetros de curva explícitos que usa el objeto <see cref="T:System.Security.Cryptography.ECCurve" /> en un objeto <see cref="T:System.Security.Cryptography.ECParameters" />.</summary>
      <returns>La clave y parámetros de curva explícitos que usa el objeto <see cref="T:System.Security.Cryptography.ECCurve" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El método no puede obtener valores de curva.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Esta plataforma no admite la exportación explícita. Se requiere Windows 10, o bien versiones posteriores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.ExportParameters">
      <summary>Exporta la clave que usa el objeto <see cref="T:System.Security.Cryptography.ECCurve" /> en un objeto <see cref="T:System.Security.Cryptography.ECParameters" />.</summary>
      <returns>La clave y parámetros de curva con nombre que usa el objeto <see cref="T:System.Security.Cryptography.ECCurve" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El método no puede obtener valores de curva.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromByteArray(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Convierte una matriz de bytes que contiene una clave pública en un objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> según el formato especificado.</summary>
      <param name="publicKeyBlob">Matriz de bytes que contiene una clave pública Diffie-Hellman de curva elíptica (ECDH).</param>
      <param name="format">Objeto que especifica el formato BLOB de clave.</param>
      <returns>Objeto que contiene la clave pública ECDH que se serializa en la matriz de bytes.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="publicKeyBlob" /> o <paramref name="format" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="publicKeyBlob" /> no contiene ninguna clave <see cref="T:System.Security.Cryptography.ECDiffieHellman" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromXmlString(System.String)">
      <summary>Convierte una cadena XML en un objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />.</summary>
      <param name="xml">Cadena XML que contiene una clave Diffie-Hellman de curva elíptica (ECDH).</param>
      <returns>Objeto que contiene la clave pública ECDH especificada por el XML determinado.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="xml" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="xml" /> no especifica ninguna clave <see cref="T:System.Security.Cryptography.ECDiffieHellman" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.Import">
      <summary>Convierte el objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> en un objeto <see cref="T:System.Security.Cryptography.CngKey" />.</summary>
      <returns>Objeto que contiene la clave representada por el objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.ToXmlString">
      <summary>Serializa la clave pública <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> en una cadena XML en formato RFC 4050.</summary>
      <returns>Cadena XML que contiene la clave pública <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> serializada.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
      <summary>Especifica la función de derivación de claves que la clase <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> va a utilizar para convertir acuerdos confidenciales en material de clave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash">
      <summary>Se utiliza un algoritmo hash para generar el material de clave. La propiedad <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> especifica el nombre del algoritmo que se va a utilizar. Si no se especifica el nombre del algoritmo, se utiliza <see cref="T:System.Security.Cryptography.SHA256" /> como algoritmo predeterminado. También puede especificar las propiedades <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" /> y <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" />, pero no son necesarios. La cantidad de material clave que se genera es equivalente al tamaño del código hash para el algoritmo especificado.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac">
      <summary>Se utiliza un algoritmo de código de autenticación de mensajes basado en hash (HMAC) para generar el material de clave. La propiedad <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> especifica la clave que se va a utilizar. Se debe establecer esta propiedad o la propiedad <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> debe estar establecida en <see langword="true" />; de lo contrario, se genera una <see cref="T:System.Security.Cryptography.CryptographicException" /> cuando se utiliza <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />. Si se establecen ambas propiedades, el acuerdo confidencial se utiliza como clave HMAC. También puede especificar las propiedades <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" /> y <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" />, pero no son necesarias. La cantidad de material clave que se genera es equivalente al tamaño del valor HMAC.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls">
      <summary>Se utiliza el protocolo Seguridad de la capa de transporte (TLS) para generar el material de clave. Se deben establecer las propiedades <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> y <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" />; de lo contrario, se genera una <see cref="T:System.Security.Cryptography.CryptographicException" /> cuando se utiliza <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />. Este valor genera 160 bits del material de clave.</summary>
    </member>
    <member name="T:System.Security.Cryptography.ECDsaCng">
      <summary>Proporciona una implementación de CNG (Cryptography Next Generation) del algoritmo ECDSA (Elliptic Curve Digital Signature Algorithm).</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.ECDsaCng" /> con un par de claves aleatorio.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Las clases de Cryptography Next Generation (CNG) no se admiten en este sistema.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.ECDsaCng" /> con un tamaño de clave de destino especificado.</summary>
      <param name="keySize">Tamaño de la clave. Los tamaños de clave válidos son 256, 384 y 521 bits.</param>
      <exception cref="T:System.PlatformNotSupportedException">Las clases de Cryptography Next Generation (CNG) no se admiten en este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="keySize" /> especifica una longitud no válida.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.ECDsaCng" /> mediante el objeto <see cref="T:System.Security.Cryptography.CngKey" /> especificado.</summary>
      <param name="key">La clave que se usará como entrada para las operaciones criptográficas llevadas a cabo por el objeto actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> no se especifica un grupo de Elliptic Curve Digital Signature Algorithm (ECDSA).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Las clases de Cryptography Next Generation (CNG) no se admiten en este sistema.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.ECDsaCng" /> cuyo par de claves pública-privada se genera sobre la curva especificada.</summary>
      <param name="curve">La curva usada para generar el par de claves pública-privada.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="curve" /> no se valida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="curve" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Si <paramref name="curve" /> no contiene un OID con un FriendlyName.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
      <summary>Exporta la clave y parámetros de curva explícitos que usa el objeto de criptografía de curva elíptica (ECC) en un objeto <see cref="T:System.Security.Cryptography.ECParameters" />.</summary>
      <param name="includePrivateParameters">Es <see langword="true" /> si se van a incluir parámetros privados; en caso contrario, es <see langword="false" />.</param>
      <returns>La clave y parámetros de curva explícitos que usa el objeto de ECC.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Se ha producido un error al obtener los valores de curva.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Esta plataforma no admite la exportación explícita. Se requiere Windows 10, o bien versiones posteriores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
      <summary>Exporta la clave usada por el objeto de criptografía de curva elíptica (ECC) en un objeto <see cref="T:System.Security.Cryptography.ECParameters" />. Si la clave se creó como una curva con nombre, el campo <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> contiene parámetros de curva con nombre; en caso contrario, contiene parámetros explícitos.</summary>
      <param name="includePrivateParameters">Es <see langword="true" /> si se van a incluir parámetros privados; en caso contrario, es <see langword="false" />.</param>
      <returns>La clave y parámetros de curva con nombre que usa el objeto de ECC.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Se ha producido un error al obtener los valores de curva.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>Deserializa la información de clave de una cadena XML mediante el formato especificado.</summary>
      <param name="xml">Información de clave basada en XML que se va a deserializar.</param>
      <param name="format">Uno de los valores de la enumeración que especifica el formato de la cadena XML. El único formato actualmente aceptado es <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xml" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" /> especifica un formato no válido. El único valor aceptado es <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)">
      <summary>Genera un nuevo par de claves pública-privada efímeras para la curva especificada y reemplaza la clave actual.</summary>
      <param name="curve">La curva que se usará para generar la clave.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="curve" /> no se valida.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
      <summary>Obtiene o establece el algoritmo hash que se utiliza en la firma y comprobación de datos</summary>
      <returns>Objeto que especifica el algoritmo hash.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
      <summary>Reemplaza la clave existente con la que funciona la instancia actual mediante la creación de un nuevo <see cref="T:System.Security.Cryptography.CngKey" /> para la estructura de parámetros.</summary>
      <param name="parameters">Los parámetros de curva.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="parameters" /> no contiene valores válidos.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="parameters" /> hace referencia a una curva que no se puede importar.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="parameters" /> hace referencia a una curva que esta plataforma no admite.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.Key">
      <summary>Obtiene o establece la clave que se debe usar para firmar y comprobar datos.</summary>
      <returns>Objeto que especifica la clave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.KeySize">
      <summary>Obtiene o establece el tamaño, en bits, del módulo de claves que usa el algoritmo asimétrico.</summary>
      <returns>Tamaño, en bits, del módulo de claves que usa el algoritmo asimétrico.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" /> no tiene el permiso de <see cref="P:System.Security.Cryptography.ECDsaCng.LegalKeySizes" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.LegalKeySizes">
      <summary>Obtiene los tamaños de clave, en bits, admitidos por el establecedor de propiedad <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" />.</summary>
      <returns>Una matriz que contiene los tamaños de clave admitidos por el establecedor de la propiedad <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
      <summary>Genera una firma para los datos especificados.</summary>
      <param name="data">Datos de mensaje que se van a firmar.</param>
      <returns>Firma digital de los datos especificados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La información de clave asociada a la instancia no tiene una clave privada.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
      <summary>Genera una firma digital para la longitud de datos especificada, comenzando en el desplazamiento especificado.</summary>
      <param name="data">Datos de mensaje que se van a firmar.</param>
      <param name="offset">Ubicación en la cadena en la que se va a iniciar la firma.</param>
      <param name="count">Longitud de la cadena, en caracteres, que sigue al <paramref name="offset" /> que se va a firmar.</param>
      <returns>Firma digital para la longitud de datos especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> o <paramref name="offset" /> ha provocado la lectura fuera de los límites de la cadena de datos.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La información de clave asociada a la instancia no tiene una clave privada.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
      <summary>Genera una firma para el flujo de datos especificado, leyendo hasta el final del flujo.</summary>
      <param name="data">Flujo de datos que se va a firmar.</param>
      <returns>Firma digital para el flujo de datos especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La información de clave asociada a la instancia no tiene una clave privada.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
      <summary>Genera una firma del valor hash especificado.</summary>
      <param name="hash">Valor hash de los datos que se van a firmar.</param>
      <returns>Firma digital del valor hash especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La información de clave asociada a la instancia no tiene una clave privada.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>Serializa la información de clave en una cadena XML mediante el formato especificado.</summary>
      <param name="format">Uno de los valores de la enumeración que especifica el formato de la cadena XML. El único formato actualmente aceptado es <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</param>
      <returns>Objeto de cadena que contiene la información de clave, serializada en una cadena XML, según el formato solicitado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" /> especifica un formato no válido. El único valor aceptado es <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
      <summary>Comprueba la firma digital de los datos especificados.</summary>
      <param name="data">Los datos que se firmaron.</param>
      <param name="signature">Signatura que se va a comprobar.</param>
      <returns>
        <see langword="true" /> si la firma es válida; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> o <paramref name="signature" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
      <summary>Comprueba una firma para la longitud de datos especificada, comenzando en el desplazamiento especificado.</summary>
      <param name="data">Los datos que se firmaron.</param>
      <param name="offset">Ubicación en los datos en la que comienzan los datos firmados.</param>
      <param name="count">Longitud de los datos, en caracteres, que siguen al <paramref name="offset" /> que se van a firmar.</param>
      <param name="signature">Signatura que se va a comprobar.</param>
      <returns>
        <see langword="true" /> si la firma es válida; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> es menor que cero.
o bien
<paramref name="offset" /> o <paramref name="count" /> es mayor que la longitud de la matriz de bytes pasada en el parámetro <paramref name="data" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> o <paramref name="signature" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
      <summary>Comprueba la firma digital del flujo de datos especificado, leyendo hasta el final del flujo.</summary>
      <param name="data">Flujo de datos que se ha firmado.</param>
      <param name="signature">Signatura que se va a comprobar.</param>
      <returns>
        <see langword="true" /> si la firma es válida; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> o <paramref name="signature" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
      <summary>Comprueba que una firma digital es adecuada para la clave actual y el hash de datos proporcionado.</summary>
      <param name="hash">Valor hash de los datos que se comprobarán.</param>
      <param name="signature">Firma digital de los datos que deben comprobarse con el valor hash.</param>
      <returns>
        <see langword="true" /> si la firma es válida; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> o <paramref name="signature" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.Cryptography.ECKeyXmlFormat">
      <summary>Define los formatos de serialización XML de las claves de curvas elípticas.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050">
      <summary>Formato de serialización de XML descrito en RFC 4050: "Usar el algoritmo ECDSA (Elliptic Curve Signature Algorithm) para firmas XML digitales".</summary>
    </member>
    <member name="T:System.Security.Cryptography.RSACng">
      <summary>Proporciona una implementación de CNG (Cryptography Next Generation) del algoritmo RSA.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.RSACng" /> con un par de claves aleatorio de 2048 bits.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.RSACng" /> con una clave generada aleatoriamente del tamaño especificado.</summary>
      <param name="keySize">Tamaño de la clave que se va a generar en bits.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="keySize" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.RSACng" /> con la clave especificada.</summary>
      <param name="key">Clave que se va a usar para las operaciones RSA.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> no es una clave RSA válida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>Descifra los datos de entrada con el modo de relleno especificado.</summary>
      <param name="data">Datos que se van a descifrar.</param>
      <param name="padding">Modo de relleno.</param>
      <returns>Datos descifrados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> es <see langword="null" />.
O bien
<paramref name="padding" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" /> no es igual a <see cref="P:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1" />, o bien el <see cref="P:System.Security.Cryptography.RSAEncryptionPadding.Mode" /> de <paramref name="padding" /> no es igual a <see cref="F:System.Security.Cryptography.RSAEncryptionPaddingMode.Oaep" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>Cifra los datos de entrada con el relleno especificado.</summary>
      <param name="data">Datos que se van a cifrar.</param>
      <param name="padding">Modo de relleno.</param>
      <returns>Datos cifrados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> es <see langword="null" />.
O bien
<paramref name="padding" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" /> no es igual a <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /> ni <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pss" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)">
      <summary>Exporta la clave que usa el objeto RSA en un objeto <see cref="T:System.Security.Cryptography.RSAParameters" />.</summary>
      <param name="includePrivateParameters">Es <see langword="true" /> si se van a incluir parámetros privados; en caso contrario, es <see langword="false" />.</param>
      <returns>Clave que usa el objeto RSA.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)">
      <summary>Reemplaza la clave existente con la que funciona la instancia actual mediante la creación de un nuevo <see cref="T:System.Security.Cryptography.CngKey" /> para la estructura de parámetros.</summary>
      <param name="parameters">Parámetros RSA.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="parameters" /> no contiene ni un exponente ni un módulo.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="parameters" /> no es una clave RSA válida.
O bien
<paramref name="parameters" /> es un par de claves completo y se usa el KSP predeterminado.</exception>
    </member>
    <member name="P:System.Security.Cryptography.RSACng.Key">
      <summary>Obtiene la clave que usará el objeto <see cref="T:System.Security.Cryptography.RSACng" /> para todas las operaciones criptográficas que realice.</summary>
      <returns>Clave que usa el objeto <see cref="T:System.Security.Cryptography.RSACng" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACng.LegalKeySizes" />
    <member name="M:System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
      <summary>Firma los datos a los que se aplicó un algoritmo hash mediante el algoritmo hash y el modo de relleno especificados.</summary>
      <param name="hash">Valor hash que se va a firmar.</param>
      <param name="hashAlgorithm">Nombre del algoritmo hash.</param>
      <param name="padding">Modo de relleno.</param>
      <returns>Datos firmados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> es <see langword="null" />.
O bien
<paramref name="padding" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El valor de la propiedad <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> de <paramref name="hashAlgorithm" /> es <see langword="null" /> o <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" /> no es igual a <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /> ni <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pss" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
      <summary>Comprueba los datos que se firmaron y a los que ya se aplicó un valor hash con el algoritmo y el modo de relleno especificados.</summary>
      <param name="hash">Hash que se va a comprobar.</param>
      <param name="signature">Firma de los datos.</param>
      <param name="hashAlgorithm">Nombre del algoritmo hash.</param>
      <param name="padding">Modo de relleno.</param>
      <returns>
        <see langword="true" /> si se comprueba la firma para el hash; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> es <see langword="null" />.
O bien
<paramref name="signature" /> es <see langword="null" />.
O bien
<paramref name="padding" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El valor de la propiedad <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> de <paramref name="hashAlgorithm" /> es <see langword="null" /> o <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" /> no es igual a <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /> ni <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pss" />.
O bien
La firma tiene un formato incorrecto. (En .NET Framework 4.6 y 4.6.1 solo; comenzando por .NET Framework 4.6.2, el método devuelve <see langword="false" /> si una firma tiene un formato incorrecto.</exception>
    </member>
    <member name="T:System.Security.Cryptography.TripleDESCng">
      <summary>Proporciona una implementación de Criptografía de nueva generación (CNG) del algoritmo Estándar de cifrado de datos triple (3DES, Triple Data Encryption Standard).</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.TripleDESCng" /> con una clave efímera.</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.TripleDESCng" /> con el nombre de clave especificado, que representa una clave 3DES persistente y existente.</summary>
      <param name="keyName">Nombre de la clave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.TripleDESCng" /> con el nombre de clave especificado, que representa una clave 3DES persistente y existente, y el proveedor de almacenamiento de claves (KSP) especificado.</summary>
      <param name="keyName">Nombre de la clave.</param>
      <param name="provider">KSP que contiene la clave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> es <see langword="null" />.
O bien
<paramref name="provider" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.TripleDESCng" /> con el nombre de clave especificado, que representa una clave 3DES persistente y existente, el proveedor de almacenamiento de claves (KSP) especificado y las opciones de apertura de claves.</summary>
      <param name="keyName">Nombre de la clave.</param>
      <param name="provider">KSP que contiene la clave.</param>
      <param name="openOptions">Una combinación bit a bit de los valores de enumeración que especifican opciones para abrir la clave, como, por ejemplo, desde dónde se abre la clave (almacenamiento de máquinas o usuarios) y si se suprime la solicitud de la IU.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> es <see langword="null" />.
o bien
<paramref name="provider" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este sistema no es compatible con Cryptography Next Generation (CNG).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos los demás errores.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.CreateDecryptor">
      <summary>Crea un objeto descifrador 3DES simétrico con la clave y el vector de inicialización (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) actuales.</summary>
      <returns>Objeto descifrador 3DES simétrico.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Crea un objeto descifrador 3DES simétrico con la clave y el vector de inicialización (IV) especificados.</summary>
      <param name="rgbKey">Clave secreta que se va a usar para el algoritmo 3DES. El tamaño de clave debe ser de 192 bits.</param>
      <param name="rgbIV">Vector de inicialización que se va a usar para el algoritmo 3DES.</param>
      <returns>Objeto descifrador 3DES simétrico.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbKey" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rgbKey" /> no tiene un tamaño válido para este algoritmo.
O bien
El tamaño <paramref name="rgbIV" /> no coincide con el tamaño del bloque para este algoritmo.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="rgbKey" /> es una clave débil conocida para este algoritmo y no se puede utilizar.
O bien
<paramref name="rgbIV" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.CreateEncryptor">
      <summary>Crea un objeto de sistema de cifrado 3DES simétrico con la clave y el vector de inicialización (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) especificados.</summary>
      <returns>Objeto de sistema de cifrado 3DES simétrico.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Crea un objeto de sistema de cifrado 3DES simétrico con la clave y el vector de inicialización (IV) especificados.</summary>
      <param name="rgbKey">Clave secreta que se va a usar para el algoritmo 3DES. El tamaño de clave debe ser de 192 bits.</param>
      <param name="rgbIV">Vector de inicialización que se va a usar para el algoritmo 3DES.</param>
      <returns>Objeto de sistema de cifrado 3DES simétrico.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbKey" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rgbKey" /> no tiene un tamaño válido para este algoritmo.
O bien
El tamaño <paramref name="rgbIV" /> no coincide con el tamaño del bloque para este algoritmo.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="rgbKey" /> es una clave débil conocida para este algoritmo y no se puede utilizar.
o bien
<paramref name="rgbIV" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.GenerateIV">
      <summary>Genera un vector de inicialización (IV) aleatorio que se utiliza para el algoritmo 3DES.</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.GenerateKey">
      <summary>Genera una clave aleatoria que se utiliza para el algoritmo 3DES.</summary>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCng.Key">
      <summary>Obtiene o establece la clave del algoritmo <see cref="T:System.Security.Cryptography.TripleDESCng" />.</summary>
      <returns>Clave del algoritmo <see cref="T:System.Security.Cryptography.TripleDESCng" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCng.KeySize">
      <summary>Obtiene o establece el tamaño, en bits, de la clave secreta usada por el algoritmo <see cref="T:System.Security.Cryptography.TripleDESCng" />.</summary>
      <returns>Tamaño, en bits, de la clave secreta usada por el algoritmo <see cref="T:System.Security.Cryptography.TripleDESCng" />.</returns>
    </member>
  </members>
</doc>