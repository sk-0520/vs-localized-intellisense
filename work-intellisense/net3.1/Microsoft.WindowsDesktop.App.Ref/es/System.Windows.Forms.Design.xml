<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Windows.Forms.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary vsli:raw="Extends the design mode behavior of a component.">Extiende el comportamiento de un componente en modo de diseño.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary vsli:raw="Gets the design-time action lists supported by the component associated with the designer.">Obtiene las listas de acciones en tiempo de diseño que admite el componente asociado al diseñador.</summary>
      <returns vsli:raw="The design-time action lists supported by the component associated with the designer.">Listas de acciones en tiempo de diseño que admite el componente asociado al diseñador.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">Obtiene la colección de componentes asociados al componente administrado por el diseñador.</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">Componentes asociados al componente administrado por el diseñador.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary vsli:raw="Gets the component this designer is designing.">Obtiene el componente que el diseñador está creando.</summary>
      <returns vsli:raw="The component managed by the designer.">Componente administrado por el diseñador.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">Libera todos los recursos que usa <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary vsli:raw="Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.">Crea una firma de método en el archivo de código fuente para el evento predeterminado del componente y hace navegar el cursor del usuario en esa ubicación.</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException" vsli:raw="An attempt to check out a file that is checked into a source code management program failed.">No se ha podido desproteger un archivo que está protegido en un programa de administración de código fuente.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary vsli:raw="Attempts to retrieve the specified type of service from the design mode site of the designer's component.">Intenta recuperar el tipo de servicio especificado del sitio en modo de diseño del componente del diseñador.</summary>
      <param name="serviceType" vsli:raw="The type of service to request.">Tipo de servicio que se va a solicitar.</param>
      <returns vsli:raw="An object implementing the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">Objeto que implementa el servicio solicitado o <see langword="null" /> si no se puede resolver el servicio.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets an attribute that indicates the type of inheritance of the associated component.">Obtiene un atributo que indica el tipo de herencia del componente asociado.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; for the associated component.">
        <see cref="T:System.ComponentModel.InheritanceAttribute" /> para el componente asociado.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary vsli:raw="Gets a value indicating whether this component is inherited.">Obtiene un valor que indica si este componente es heredado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is inherited; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el componente es heredado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Prepares the designer to view, edit, and design the specified component.">Prepara el diseñador para ver, modificar y diseñar el componente especificado.</summary>
      <param name="component" vsli:raw="The component for this designer.">Componente para este diseñador.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Reinitializes an existing component.">Reinicializa un componente existente.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Diccionario de nombres/valores de los valores predeterminados que se van a aplicar a las propiedades. Puede ser <see langword="null" /> Si no hay ningún valor predeterminado especificado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">Inicializa un componente recién creado.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Diccionario de nombres/valores de los valores predeterminados que se van a aplicar a las propiedades. Puede ser <see langword="null" /> Si no hay ningún valor predeterminado especificado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary vsli:raw="Initializes the settings for an imported component that is already initialized to settings other than the defaults.">Inicializa la configuración de un componente importado que ya se ha inicializado con una configuración que no es la predeterminada.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">Obtiene el objeto <see cref="T:System.ComponentModel.InheritanceAttribute" /> de la enumeración <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> especificada.</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; whose inheritance attribute to retrieve.">Enumeración <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> cuyo atributo de herencia se va a recuperar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified designer.">Clase <see cref="T:System.ComponentModel.InheritanceAttribute" /> del diseñador especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Sets the default properties for the component.">Establece las propiedades predeterminadas del componente.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for this designer.">Obtiene el componente primario de este diseñador.</summary>
      <returns vsli:raw="The parent component for this designer, or &lt;see langword=&quot;null&quot; /&gt; if this designer is the root component.">Componente primario de este diseñador o <see langword="null" /> si el diseñador es el componente raíz.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Permite a un diseñador cambiar o quitar elementos en el conjunto de atributos que expone mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">Atributos para la clase del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Permite a un diseñador cambiar o quitar elementos del conjunto de eventos que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events" vsli:raw="The events for the class of the component.">Eventos para la clase del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Permite a un diseñador cambiar o quitar elementos del conjunto de propiedades que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">Propiedades para la clase del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Permite a un diseñador agregar elementos al conjunto de atributos que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">Atributos para la clase del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Permite a un diseñador agregar elementos al conjunto de eventos que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events" vsli:raw="The events for the class of the component.">Eventos para la clase del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Permite a un diseñador agregar elementos al conjunto de propiedades que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">Propiedades para la clase del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component has been changed.">Notifica a <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> que este componente se ha cambiado.</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that has been changed.">Un objeto <see cref="T:System.ComponentModel.MemberDescriptor" /> que indica el miembro que se ha modificado.</param>
      <param name="oldValue" vsli:raw="The old value of the member.">Valor antiguo del miembro.</param>
      <param name="newValue" vsli:raw="The new value of the member.">Valor nuevo del miembro.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component is about to be changed.">Notifica a <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> que este componente se va a cambiar.</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that is about to be changed.">Clase <see cref="T:System.ComponentModel.MemberDescriptor" /> que indica el miembro que se va a cambiar.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary vsli:raw="Gets a collection of property values that override user settings.">Obtiene una colección de valores de propiedad que reemplazan la configuración del usuario.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection&quot; /&gt; that indicates the shadow properties of the design document.">Objeto <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> que indica las propiedades con copia sombra del documento de diseño.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary vsli:raw="Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.">Representa una colección de propiedades con copia sombra que debe reemplazar los valores predeterminados o asignados heredados de propiedades concretas. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a property matching the specified name exists in the collection.">Indica si existe en la colección una propiedad que coincide con el nombre especificado.</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for in the collection.">Nombre de la propiedad de la colección cuya existencia en la colección se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la propiedad está en la colección; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the object at the specified index.">Obtiene o establece el objeto que se encuentra en el índice especificado.</summary>
      <param name="propertyName" vsli:raw="The name of the property to access in the collection.">Nombre de la propiedad a la que se va a tener acceso en la colección.</param>
      <returns vsli:raw="The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.">Valor de la propiedad especificada, si existe en la colección. En los demás casos, el valor se recupera del valor actual de la propiedad que no tiene copia sombra.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">Objetos <see cref="T:System.Attribute" /> para la clase del componente. Las claves del diccionario de atributos son los valores de la propiedad <see cref="P:System.Attribute.TypeId" /> de los atributos.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">Objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representan los eventos de la clase del componente. Las claves del diccionario de eventos son nombres de evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">Objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representan las propiedades de la clase del componente. Las claves del diccionario de propiedades son nombres de propiedad.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">Objetos <see cref="T:System.Attribute" /> para la clase del componente. Las claves del diccionario de atributos son los valores de la propiedad <see cref="P:System.Attribute.TypeId" /> de los atributos.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">Objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representan los eventos de la clase del componente. Las claves del diccionario de eventos son nombres de evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">Objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representan las propiedades de la clase del componente. Las claves del diccionario de propiedades son nombres de propiedad.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Children&quot; /&gt; property.">Para una descripción de este miembro, consulte la propiedad <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; designers contained in the current parent designer.">
        <see cref="T:System.Collections.ICollection" /> que contiene la colección de diseñadores <see cref="T:System.ComponentModel.Design.IDesigner" /> incluida en el diseñador primario actual.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Parent&quot; /&gt; property.">Para una descripción de este miembro, consulte la propiedad <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; representing the parent designer, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent.">Interfaz <see cref="T:System.ComponentModel.Design.IDesigner" /> que representa el diseñador primario o <see langword="null" /> si no hay ningún elemento primario.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary vsli:raw="Gets the design-time verbs supported by the component that is associated with the designer.">Obtiene los verbos en tiempo de diseño que admite el componente asociado al diseñador.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; objects, or &lt;see langword=&quot;null&quot; /&gt; if no designer verbs are available. This default implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Colección <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> de objetos <see cref="T:System.ComponentModel.Design.DesignerVerb" /> o <see langword="null" /> si no hay verbos del diseñador disponibles. Esta implementación predeterminada siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary vsli:raw="Represents a static header item on a smart tag panel. This class cannot be inherited.">Representa un elemento de encabezado estático en un panel de etiquetas inteligentes. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name string.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> con la cadena de nombre proporcionada.</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">Texto que se va a mostrar en el encabezado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name and category strings.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> con las cadenas de nombre y categoría proporcionadas.</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">Texto que se va a mostrar en el encabezado.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">
        <see cref="T:System.String" /> que distingue entre mayúsculas y minúsculas y define las agrupaciones de las entradas del panel.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary vsli:raw="Provides the base class for types that represent a panel item on a smart tag panel.">Proporciona la clase base para los tipos que representan un elemento de panel en un panel de etiquetas inteligentes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">Texto de panel para este elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">
        <see cref="T:System.String" /> que distingue entre mayúsculas y minúsculas y define las agrupaciones de las entradas del panel.</param>
      <param name="description" vsli:raw="Supplemental text for this item, potentially used in ToolTips or the status bar.">Texto complementario para este elemento, que se puede utilizar en la información sobre herramientas o en la barra de estado.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary vsli:raw="Gets or sets a value indicating whether to allow this item to be placed into a group of items that have the same &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionItem.Category&quot; /&gt; property value.">Obtiene o establece un valor que indica si se permite colocar este elemento en un grupo de elementos cuya propiedad <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" /> tenga el mismo valor.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item can be grouped; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se puede agrupar el elemento; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary vsli:raw="Gets the group name for an item.">Obtiene el nombre de grupo para un elemento.</summary>
      <returns vsli:raw="A string that represents the group that the item is a member of.">Cadena que representa el grupo del que el elemento es un miembro.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary vsli:raw="Gets the supplemental text for the item.">Obtiene el texto complementario para el elemento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the descriptive text for the item.">
        <see cref="T:System.String" /> que contiene el texto descriptivo para el elemento.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary vsli:raw="Gets the text for this item.">Obtiene el texto para este elemento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the display text for the item.">
        <see cref="T:System.String" /> que contiene el texto que se va a mostrar para el elemento.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary vsli:raw="Gets a reference to a collection that can be used to store programmer-defined key/value pairs.">Obtiene una referencia a una colección que se puede utilizar para almacenar los pares de clave/valor definidos por programador.</summary>
      <returns vsli:raw="A collection that implements &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Colección que implementa <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary vsli:raw="Gets or sets a value that indicates whether this item appears in source code view.">Obtiene o establece un valor que indica si este elemento aparece en la vista de código fuente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this item appears in source code view; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si este elemento aparece en la vista de código fuente; si no, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">Representa una colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to the current collection.">Agrega el objeto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> proporcionado a la colección actual.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to add.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que se va a agregar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; index at which the value has been added.">Índice de <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> donde se ha agregado el valor.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains a specific element.">Determina si <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contiene un elemento específico.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">Objeto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que se va a buscar en la interfaz <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la colección <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contiene el valor especificado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">Copia los elementos de la colección actual en la matriz suministrada, comenzando por el índice especificado de la matriz.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">Matriz de <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> unidimensional que constituye el destino de los elementos copiados desde la colección actual. La matriz debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Determina el índice de un elemento específico de la colección.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the collection.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que se va a buscar en la colección.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;value&quot; /&gt; within the entire &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;, if found; otherwise, -1.">Índice de base cero de la primera aparición de <paramref name="value" /> en la totalidad de <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />, si se encuentra; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; at the specified index.">Inserta un elemento en <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Índice basado en cero en el que debe insertarse <paramref name="value" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to insert.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que se va a insertar.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Índice de base cero del elemento.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; at the specified index.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que se va a quitar de <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary vsli:raw="Provides the base class for types that define a list of items used to create a smart tag panel.">Proporciona la clase base para los tipos que definen una lista de elementos utilizados para crear un panel de etiquetas inteligentes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <param name="component" vsli:raw="A component related to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Componente relacionado con el objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary vsli:raw="Gets or sets a value indicating whether the smart tag panel should automatically be displayed when it is created.">Obtiene o establece un valor que indica si se debe mostrar automáticamente el panel de etiquetas inteligentes al crearse.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the panel should be shown when the owning component is created; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se debe mostrar el panel al crear el componente propietario; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary vsli:raw="Gets the component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Obtiene el componente relacionado con <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns vsli:raw="A component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Componente relacionado con <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary vsli:raw="Returns an object that represents a service provided by the component associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Devuelve un objeto que representa un servicio proporcionado por el componente asociado al objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <param name="serviceType" vsli:raw="A service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Servicio suministrado por <see cref="T:System.ComponentModel.Component" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;. This value is &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not provide the specified service.">
        <see cref="T:System.Object" /> que representa un servicio suministrado por <see cref="T:System.ComponentModel.Component" />. Este valor es <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> no proporciona el servicio especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary vsli:raw="Returns the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects contained in the list.">Devuelve la colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que contiene la lista.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that contains the items in this list.">Matriz de <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que contiene los elementos de esta lista.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Representa una colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with default settings.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> con los valores predeterminados.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with the specified panel items.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> con los elementos de panel especificados.</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to populate the collection.">Matriz de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que va a rellenar la colección.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection.">Agrega el objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> proporcionado a la colección actual.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to add.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que se va a agregar.</param>
      <returns vsli:raw="The position into which the new element is inserted into the collection's internal list.">Posición donde se inserta el nuevo elemento en la lista interna de la colección.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; array to the end of the current collection.">Agrega los elementos de la matriz <see cref="T:System.ComponentModel.Design.DesignerActionList" /> proporcionada al final de la colección actual.</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to add.">Matriz de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the end of the current collection.">Agrega los elementos del objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> proporcionado al final de la colección actual.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to add.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Indicates whether the collection contains a specific value.">Indica si la colección contiene un valor específico.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to search for.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que se va a buscar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección contiene el valor especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">Copia los elementos de la colección actual en la matriz suministrada, comenzando por el índice especificado de la matriz.</summary>
      <param name="array" vsli:raw="The one-dimensional array of type &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">Matriz unidimensional de tipo <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que constituye el destino de los elementos copiados de la colección actual. La matriz debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> es menor que 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the current collection is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination array.">
        <paramref name="array" /> es multidimensional.
o bien
El número de elementos de la colección actual es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la matriz de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A problem occurred casting the elements of the current collection to the type of the destination array, perhaps as the result of a failed downcast.">Se produjo un problema al convertir los elementos de la colección actual al tipo de la matriz de destino, quizás como consecuencia de un error de conversión inferior.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Determina el índice de un elemento específico de la colección.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to locate in the collection.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que se va a buscar en la colección.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the internal list; otherwise, -1.">Índice de <paramref name="value" /> si se encuentra en la lista interna; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Inserts the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; into the collection at the specified position.">Inserta el objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> proporcionado en la posición especificada de la colección.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Índice basado en cero en el que debe insertarse <paramref name="value" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to insert into the collection.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que se va a insertar en la colección.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the count of elements in the current collection.">El parámetro <paramref name="index" /> es menor que 0 o mayor que el recuento de elementos de la colección actual.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Índice de base cero del elemento.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; at the specified index.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating a value.">Realiza procesos de personalización adicionales al validar un valor.</summary>
      <param name="value" vsli:raw="The object to validate.">Objeto que se va a validar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the first occurrence of a specific &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; from the collection.">Quita de la colección la primera aparición de un objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> específico.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to remove from the current collection.">Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que se va a quitar de la colección actual.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event.">Proporciona datos para el evento <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />.</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the collection.">Objeto asociado a la colección.</param>
      <param name="changeType" vsli:raw="A value that specifies whether a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; has been added or removed from the collection.">Valor que especifica si se ha agregado o eliminado un objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> de la colección.</param>
      <param name="actionLists" vsli:raw="The collection of list elements after the action has been applied.">Colección de elementos de lista resultante tras aplicar la acción.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects associated with this event.">Obtiene la colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> asociados a este evento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that represents the current state of the collection.">Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que representa el estado actual de la colección.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether an element has been added or removed from the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Obtiene un marcador que especifica si se ha agregado o quitado un elemento de la colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedType&quot; /&gt; that indicates the type of change.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" /> que indica el tipo de cambio.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Obtiene el objeto que está asociado a la colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the managed &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt;.">
        <see cref="T:System.Object" /> asociado al objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> administrado.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt;. This class cannot be inherited.">Representa el método que controlará el evento <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> de <see cref="T:System.ComponentModel.Design.DesignerActionService" />. Esta clase no puede heredarse.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary vsli:raw="Specifies the type of change occurring in a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Especifica el tipo de cambio que se produce en una colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been added to the collection.">Se han agregado a la colección uno o varios objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been removed from the collection.">Se han eliminado de la colección uno o varios objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary vsli:raw="Represents a smart tag panel item that is associated with a method in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Representa un elemento de panel de etiquetas inteligentes que está asociado a un método en una clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> con los nombres para mostrar y de método especificados.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene el método al que se asocia este elemento.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Nombre con distinción entre mayúsculas y minúsculas del método en la clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> al que se va a invocar a través del elemento de panel.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texto de panel para este elemento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names, and a flag that indicates whether the item should appear in other user interface contexts.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, con los nombres para mostrar y de método especificados, y con un marcador que especifica si el elemento debe aparecer en otros contextos de la interfaz de usuario.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene el método al que se asocia este elemento.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Nombre con distinción entre mayúsculas y minúsculas del método en la clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> al que se va a invocar a través del elemento de panel.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texto de panel para este elemento.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb.">Marcador que especifica si el método asociado también debe tratarse como un verbo de diseñador.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> con los nombres de categoría, para mostrar y de método especificados.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene el método al que se asocia este elemento.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Nombre con distinción entre mayúsculas y minúsculas del método en la clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> al que se va a invocar a través del elemento de panel.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texto de panel para este elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">
        <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names, and a flag that indicates whether the item should appear in other user interface contexts.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> con los nombres de categoría, para mostrar y de método especificados, y con un marcador que especifica si el elemento debe aparecer en otros contextos de la interfaz de usuario.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene el método al que se asocia este elemento.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Nombre con distinción entre mayúsculas y minúsculas del método en la clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> al que se va a invocar a través del elemento de panel.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texto de panel para este elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">
        <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">Marcador que especifica si el método asociado también debe tratarse como un verbo del diseñador para el componente asociado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, and display and description text.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> con los nombres de categoría y método especificados, así como texto para mostrar y de descripción.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene el método al que se asocia este elemento.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Nombre con distinción entre mayúsculas y minúsculas del método en la clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> al que se va a invocar a través del elemento de panel.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texto de panel para este elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">
        <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">Texto complementario para este elemento, que se utiliza en la información sobre herramientas o en la barra de estado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, display and description text, and a flag that indicates whether the item should appear in other user interface contexts.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, con los nombres de categoría y de método establecidos, el texto de descripción y para mostrar y un marcador que especifica si el elemento debe aparecer en otros contextos de la interfaz de usuario.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene el método al que se asocia este elemento.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Nombre con distinción entre mayúsculas y minúsculas del método en la clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> al que se va a invocar a través del elemento de panel.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texto de panel para este elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">
        <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">Texto complementario para este elemento, que se utiliza en la información sobre herramientas o en la barra de estado.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">Marcador que especifica si el método asociado también debe tratarse como un verbo del diseñador para el componente asociado.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary vsli:raw="Gets a value that indicates the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; should appear in other user interface contexts.">Obtiene un valor que indica que el objeto <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> debe aparecer en otros contextos de la interfaz de usuario.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is to be used in shortcut menus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el elemento se va a utilizar en menús contextuales; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary vsli:raw="Programmatically executes the method associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt;.">Ejecuta mediante programación el método asociado al objeto <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The method, named in &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName&quot; /&gt; cannot be found.">No se encuentra el método cuyo nombre aparece en <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary vsli:raw="Gets the name of the method that this &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; is associated with.">Obtiene el nombre del método al que está asociado este objeto <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated method.">
        <see cref="T:System.String" /> que contiene el nombre del método asociado.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; objects to the current panel.">Obtiene o establece un componente que contribuye con sus objetos <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> al panel actual.</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies items.">Componente suministrado, que debería tener un diseñador asociado que proporcionase elementos.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary vsli:raw="Represents a panel item that is associated with a property in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;. This class cannot be inherited.">Representa un elemento de panel asociado a una propiedad en una clase que se deriva de <see cref="T:System.ComponentModel.Design.DesignerActionList" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and display names.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> con los nombres para mostrar y de propiedad especificados.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">Nombre con distinción entre mayúsculas y minúsculas de la propiedad asociado a este elemento del panel.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texto de panel para este elemento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display text.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> con los nombres de categoría y propiedad especificados, así como texto para mostrar.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">Nombre con distinción entre mayúsculas y minúsculas de la propiedad asociado a este elemento del panel.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texto de panel para este elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">
        <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display and description text.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> con los nombres de categoría y propiedad especificados, así como texto para mostrar y de descripción.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">Nombre con distinción entre mayúsculas y minúsculas de la propiedad asociado a este elemento del panel.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texto de panel para este elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">
        <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">Texto complementario para este elemento, que se utiliza en la información sobre herramientas o en la barra de estado.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary vsli:raw="Gets the name of the property that this item is associated with.">Obtiene el nombre de la propiedad a la que está asociado este elemento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated property.">
        <see cref="T:System.String" /> que contiene el nombre de la propiedad asociada.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its items to the current panel.">Obtiene o establece un componente que contribuye con sus elementos al panel actual.</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">Componente suministrado, que debería tener un diseñador asociado que proporcionase objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary vsli:raw="Establishes a design-time service that manages the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects for components.">Establece un servicio en tiempo de diseño que administra la colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> para componentes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
      <param name="serviceProvider" vsli:raw="The service provider for the current design-time environment.">Proveedor de servicios para el entorno actual en tiempo de diseño.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection of managed smart tags.">Agrega un objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a la colección actual de etiquetas inteligentes administradas.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">Interfaz <see cref="T:System.ComponentModel.IComponent" /> que se va a asociar a las etiquetas inteligentes.</param>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the new smart tag items to be added.">Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene los nuevos elementos de etiqueta inteligente que se van a agregar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Uno o ambos parámetros son <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the current collection of managed smart tags.">Agrega un objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> a la colección actual de etiquetas inteligentes administradas.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">Interfaz <see cref="T:System.ComponentModel.IComponent" /> que se va a asociar a las etiquetas inteligentes.</param>
      <param name="designerActionListCollection" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the new smart tag items to be added.">Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contiene los nuevos elementos de etiqueta inteligente que se van a agregar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Uno o ambos parámetros son <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary vsli:raw="Releases all components from management and clears all push-model smart tag lists.">Libera todos los componentes de la administración y borra todas las listas de etiquetas inteligentes de modelo de inserción.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary vsli:raw="Determines whether the current smart tag service manages the action lists for the specified component.">Determina si el servicio actual de etiquetas inteligentes administra las listas de acciones para el componente especificado.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to search for.">
        <see cref="T:System.ComponentModel.IComponent" /> que se va a buscar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is managed by the current service; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el servicio actual administra el componente; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> es <see langword="null" />.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; is removed or added for any component.">Se produce cuando se quita o agrega un objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> para cualquier componente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">Libera todos los recursos que utiliza la clase <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.ComponentModel.Design.DesignerActionService" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary vsli:raw="Returns the collection of smart tag item lists associated with a component.">Devuelve la colección de listas de elementos de etiqueta inteligente asociados a un componente.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">Componente al que están asociadas las etiquetas inteligentes.</param>
      <returns vsli:raw="The collection of smart tags for the specified component.">Colección de etiquetas inteligentes para el componente especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.Windows.Forms.Design.ComponentActionsType)">
      <param name="component" vsli:raw="The component that the DesignerActions are associated with." />
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentActionsType&quot; /&gt; to filter the associated designer actions with." />
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the pull-model smart tags associated with a component.">Recupera las etiquetas inteligentes del modelo de extracción asociadas a un componente.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">Componente al que están asociadas las etiquetas inteligentes.</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">Colección a la que se van a agregar las etiquetas inteligentes asociadas.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Uno o ambos parámetros son <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the push-model smart tags associated with a component.">Recupera las etiquetas inteligentes del modelo de inserción asociadas a un componente.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">Componente al que están asociadas las etiquetas inteligentes.</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">Colección a la que se van a agregar las etiquetas inteligentes asociadas.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Uno o ambos parámetros son <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from all components managed by the current service.">Quita la lista de etiquetas inteligentes especificada de todos los componentes administrados mediante el servicio actual.</summary>
      <param name="actionList" vsli:raw="The list of smart tags to be removed.">Lista de etiquetas inteligentes que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;actionList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="actionList" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes all the smart tag lists associated with the specified component.">Quita todas las listas de etiquetas inteligentes asociadas al componente especificado.</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">Componente del que se van a desasociar las etiquetas inteligentes.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from the specified component.">Quita la lista de etiquetas inteligentes especificada del componente determinado.</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">Componente del que se van a desasociar las etiquetas inteligentes.</param>
      <param name="actionList" vsli:raw="The smart tag list to remove.">Lista de etiquetas inteligentes que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Uno o ambos parámetros son <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary vsli:raw="Represents a static text item on a smart tag panel.">Representa un elemento de texto estático en un panel de etiquetas inteligentes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionTextItem&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" />.</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">Texto de panel para este elemento.</param>
      <param name="category" vsli:raw="The category used to group similar items on the panel.">Categoría utilizada para agrupar elementos similares en el panel.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary vsli:raw="Manages the user interface (UI) for a smart tag panel. This class cannot be inherited.">Administra la interfaz de usuario para un panel de etiquetas inteligentes. Esta clase no puede heredarse.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary vsli:raw="Occurs when a request is made to show or hide a smart tag panel.">Se produce cuando se realiza una solicitud para mostrar u ocultar un panel de etiquetas inteligentes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt; class.">Libera todos los recursos que utiliza la clase <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Hides the smart tag panel for a component.">Oculta el panel de etiquetas inteligentes para un componente.</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be hidden.">Componente cuyo panel de etiquetas inteligentes debe ocultarse.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary vsli:raw="Updates the smart tag panel.">Actualiza el panel de etiquetas inteligentes.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to refresh.">Interfaz <see cref="T:System.ComponentModel.IComponent" /> que se va a actualizar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to automatically show the smart tag panel.">Indica si se muestra automáticamente el panel de etiquetas inteligentes.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to automatically show.">Interfaz <see cref="T:System.ComponentModel.IComponent" /> que se va a mostrar automáticamente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically show the smart tag panel; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para que se muestre automáticamente el panel de etiquetas inteligentes; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Displays the smart tag panel for a component.">Muestra el panel de etiquetas inteligentes para un componente.</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be displayed.">Componente cuyo panel de etiquetas inteligentes debe mostrarse.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event.">Proporciona datos para el evento <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" />.</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the panel.">Objeto que está asociado al panel.</param>
      <param name="changeType" vsli:raw="A value that specifies whether the panel is being displayed or hidden.">Valor que especifica si se muestra u oculta el panel.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether the smart tag panel is being displayed or hidden.">Obtiene un marcador que especifica si el panel de etiquetas inteligentes se está mostrando u ocultando.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeType&quot; /&gt; that indicates the state of the panel.">Enumeración <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" /> que indica el estado del panel.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the smart tag panel.">Obtiene el objeto que está asociado al panel de etiquetas inteligentes.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the smart tag panel.">
        <see cref="T:System.Object" /> asociado al panel de etiquetas inteligentes.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt;.">Representa el método que controlará el evento <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> de <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
      <param name="sender" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that raised the event.">
        <see cref="T:System.Object" /> que provocó el evento.</param>
      <param name="e" vsli:raw="The event-specific information.">Información específica del evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary vsli:raw="Specifies the display state of a smart tag panel.">Especifica el estado de vista de un panel de etiquetas inteligentes.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary vsli:raw="The smart tag panel is being hidden.">Se oculta el panel de etiquetas inteligentes.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary vsli:raw="The smart tag panel is being refreshed.">Se actualiza el panel de etiquetas inteligentes.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary vsli:raw="The smart tag panel is being displayed.">Se muestra el panel de etiquetas inteligentes.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary vsli:raw="Represents a base class for design-time tools, not derived from &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;, that provide smart tag or designer verb capabilities.">Representa una clase base para las herramientas en tiempo de diseño, que no se derivan de <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> y que proporcionan funciones de etiqueta inteligente o de verbo de diseñador.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerCommandSet&quot; /&gt; class.">Inicializa una instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerCommandSet" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary vsli:raw="Gets the collection of all the smart tags associated with the designed component.">Obtiene la colección de todas las etiquetas inteligentes asociadas al componente diseñado.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the smart tags for the associated designed component.">Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contiene las etiquetas inteligentes para el componente diseñado asociado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary vsli:raw="Returns a collection of command objects.">Devuelve una colección de objetos de comando.</summary>
      <param name="name" vsli:raw="The type of collection to return, indicating either a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; or a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt;.">Tipo de colección que se va a devolver, que indica un objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> o <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />.</param>
      <returns vsli:raw="A collection that contains the specified type - either &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; or &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; - of command objects. The base implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Colección que contiene el tipo especificado (<see cref="T:System.ComponentModel.Design.DesignerActionList" /> o <see cref="T:System.ComponentModel.Design.DesignerVerb" />) de objetos de comando. La implementación base siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary vsli:raw="Gets the collection of all the designer verbs associated with the designed component.">Obtiene la colección de todos los verbos de diseñador asociados al componente diseñado.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; that contains the designer verbs for the associated designed component.">Objeto <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> que contiene los verbos de diseñador para el componente diseñado asociado.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary vsli:raw="Presents a user interface for designing components.">Presenta una interfaz de usuario para el diseño de componentes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">Proveedor de servicios primario o <see langword="null" /> si no se usa ningún elemento primario para resolver servicios.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">Proveedor de servicios primario o <see langword="null" /> si no se usa ningún elemento primario para resolver servicios.</param>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">Tipo de componente raíz que se va a crear.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">Tipo de componente raíz que se va a crear.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary vsli:raw="Begins the loading process with the given designer loader.">Comienza el proceso de carga con el cargador de diseñadores especificado.</summary>
      <param name="loader" vsli:raw="The designer loader to use for loading the designer.">Cargador de diseñadores que se va a emplear para cargar el diseñador.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary vsli:raw="Begins the loading process.">Comienza el proceso de carga.</summary>
      <param name="rootComponentType" vsli:raw="The type of component to create in design mode.">Tipo de componente que se va a crear en modo de diseño.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponentType" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">Obtiene la implementación de <see cref="T:System.ComponentModel.IContainer" /> en la superficie de diseño.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">Implementación de <see cref="T:System.ComponentModel.IContainer" /> en la superficie de diseño.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary vsli:raw="Creates an instance of a component.">Crea una instancia de un componente.</summary>
      <param name="componentType" vsli:raw="The type of component to create.">Tipo de componente que se va a crear.</param>
      <returns vsli:raw="The newly created component.">Componente recién creado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;componentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="componentType" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Creates a designer when a component is added to the container.">Crea un diseñador cuando se agrega un componente al contenedor.</summary>
      <param name="component" vsli:raw="The component for which the designer should be created.">Componente para el que se debe crear el diseñador.</param>
      <param name="rootDesigner" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a root designer; &lt;see langword=&quot;false&quot; /&gt; to create a normal designer.">Es <see langword="true" /> para crear un diseñador raíz; es <see langword="false" /> para crear un diseñador normal.</param>
      <returns vsli:raw="An instance of the requested designer, or &lt;see langword=&quot;null&quot; /&gt; if no matching designer could be found.">Instancia del diseñador solicitado o <see langword="null" /> si no se encuentra ningún diseñador que coincida.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary vsli:raw="Creates an instance of the given type.">Crea una instancia del tipo especificado.</summary>
      <param name="type" vsli:raw="The type to create.">Tipo que se va a crear.</param>
      <returns vsli:raw="The newly created object.">El objeto recién creado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">Crea un contenedor adecuado para anidar controles o componentes.</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">Componente que administra el contenedor anidado.</param>
      <returns vsli:raw="The nested container.">Contenedor anidado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">Crea un contenedor adecuado para anidar controles o componentes.</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">Componente que administra el contenedor anidado.</param>
      <param name="containerName" vsli:raw="An additional name for the nested container.">Nombre adicional para el contenedor anidado.</param>
      <returns vsli:raw="The nested container.">Contenedor anidado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">Libera los recursos que usa <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">Libera los recursos que usa <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary vsli:raw="Occurs when the design surface is disposed.">Se produce cuando se desecha la superficie de diseño.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary vsli:raw="Gets a value indicating whether the Design-time Error List is loading.">Obtiene un valor que indica si se está cargando la Lista de errores en tiempo de diseño.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Design-time Error List is loading; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se está cargando el lista de errores en tiempo de diseño ; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary vsli:raw="Serializes changes to the design surface.">Serializa los cambios en la superficie de diseño.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary vsli:raw="Occurs when a call is made to the &lt;see cref=&quot;M:System.ComponentModel.Design.DesignSurface.Flush&quot; /&gt; method of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">Se produce cuando se realiza una llamada al método <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> de <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary vsli:raw="Gets a service from the service container.">Obtiene un servicio del contenedor de servicios.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Tipo de servicio que se va a recuperar.</param>
      <returns vsli:raw="An object that implements, or is a derived class of, &lt;paramref name=&quot;serviceType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service does not exist in the service container.">Objeto que implementa, o es una clase derivada de, <paramref name="serviceType" /> o <see langword="null" /> si el servicio no existe en el contenedor de servicios.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary vsli:raw="Gets a value indicating whether the design surface is currently loaded.">Obtiene un valor que indica si la superficie de diseño está cargada actualmente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the design surface is currently loaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la superficie de diseño está cargada actualmente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary vsli:raw="Occurs when the designer load has completed.">Se produce cuando se completa la carga del diseñador.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary vsli:raw="Returns a collection of loading errors or a void collection.">Devuelve una colección de errores de carga o una colección nula.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of loading errors.">Objeto <see cref="T:System.Collections.ICollection" /> de errores de carga.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary vsli:raw="Occurs when the designer is about to be loaded.">Se produce cuando el diseñador está a punto de cargarse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event.">Genera el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loading&quot; /&gt; event.">Genera el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloaded&quot; /&gt; event.">Genera el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloading&quot; /&gt; event.">Genera el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.ViewActivated&quot; /&gt; event.">Genera el evento <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary vsli:raw="Gets the service container.">Obtiene el contenedor de servicios.</summary>
      <returns vsli:raw="The service container that provides all services to designers contained within the design surface.">Contenedor de servicios que proporciona todos los servicios a los diseñadores incluidos en la superficie de diseño.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary vsli:raw="Occurs when a designer has finished unloading.">Se produce cuando un diseñador ha finalizado la descarga.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary vsli:raw="Occurs when a designer is about to unload.">Se produce cuando un diseñador está a punto de descargarse.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary vsli:raw="Gets the view for the root designer.">Obtiene la vista para el diseñador raíz.</summary>
      <returns vsli:raw="The view for the root designer.">Vista para el diseñador raíz.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">La superficie de diseño no se está cargando, el cargador de diseñadores todavía no ha creado un diseñador raíz o la superficie de diseño ha finalizado la carga pero con errores. Puede haber más información disponible en la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The designer loaded, but it does not offer a view compatible with this design surface.">El diseñador está cargado, pero no ofrece una vista compatible con esta superficie de diseño.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerHost.Activate&quot; /&gt; method has been called on &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt;.">Se produce cuando se ha llamado al método <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> en <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary vsli:raw="Represents the collection of exceptions.">Representa la colección de excepciones.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="exceptions" vsli:raw="An array of type &lt;see cref=&quot;T:System.Exception&quot; /&gt;, containing the objects to populate the collection.">Matriz de tipo <see cref="T:System.Exception" /> que contiene los objetos que van a rellenar la colección.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary vsli:raw="Gets the array of &lt;see cref=&quot;T:System.Exception&quot; /&gt; objects that represent the collection of exceptions.">Obtiene la matriz de objetos <see cref="T:System.Exception" /> que representa la colección de excepciones.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; array that represent the collection of exceptions.">Matriz de <see cref="T:System.Exception" /> que representa la colección de excepciones.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt;.">Rellena un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar la colección <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">Destino (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />) de esta serialización.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary vsli:raw="Defines multi-target type name resolution services in a design-time environment.">Define los servicios de resolución de nombres de tipo para varios destinos en un entorno en tiempo de diseño.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary vsli:raw="Resolves a type for the target framework to an assembly-qualified name.">Resuelve un tipo para la versión de .NET Framework de destino como un nombre calificado con el ensamblado.</summary>
      <param name="type" vsli:raw="The type to resolve.">Tipo que se va a resolver.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Type.AssemblyQualifiedName&quot; /&gt; for &lt;paramref name=&quot;type&quot; /&gt; in the target framework.">Propiedad <see cref="P:System.Type.AssemblyQualifiedName" /> para <paramref name="type" /> en la versión de .NET Framework de destino.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary vsli:raw="Provides a set of methods for identifying inherited components.">Proporciona un conjunto de métodos para identificar componentes heredados.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">Agrega a <see cref="T:System.ComponentModel.Design.InheritanceService" /> los componentes heredados por el componente especificado.</summary>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">Componente en el cual se buscarán los componentes heredados que se agregarán al contenedor especificado.</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">Contenedor al que se agregarán los componentes heredados.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components of the specified type that are inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">Agrega a <see cref="T:System.ComponentModel.Design.InheritanceService" /> los componentes del tipo especificado heredados por el componente indicado.</summary>
      <param name="type" vsli:raw="The base type to search for.">Tipo base que se buscará.</param>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">Componente en el cual se buscarán los componentes heredados que se agregarán al contenedor especificado.</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">Contenedor al que se agregarán los componentes heredados.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">Libera todos los recursos que usa <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.ComponentModel.Design.InheritanceService" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the inheritance attribute of the specified component.">Obtiene el atributo de herencia del componente especificado.</summary>
      <param name="component" vsli:raw="The component to retrieve the inheritance attribute for.">Componente del cual se va a recuperar el atributo de herencia.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; that describes the level of inheritance that this component comes from.">Un objeto <see cref="T:System.ComponentModel.InheritanceAttribute" /> que describe el nivel de herencia del que procede este componente.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to ignore the specified member.">Indica si se debe omitir el miembro especificado.</summary>
      <param name="member" vsli:raw="The member to check. This member is either a &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt; or a &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;.">Miembro que se va a comprobar. Este miembro es un objeto <see cref="T:System.Reflection.FieldInfo" /> o bien <see cref="T:System.Reflection.MethodInfo" />.</param>
      <param name="component" vsli:raw="The component instance this member is bound to.">Instancia del componente a la que se enlaza este miembro.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified member should be included in the set of inherited components; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el miembro especificado debe incluirse en el conjunto de componentes heredados; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event. This class cannot be inherited.">Proporciona datos para el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />.</summary>
      <param name="succeeded" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para indicar que la carga del diseñador se llevó a cabo correctamente; de lo contrario, es <see langword="false" />.</param>
      <param name="errors" vsli:raw="A collection of errors that occurred while the designer was loading.">Colección de errores producidos durante la carga del diseñador.</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary vsli:raw="Gets a collection of errors that occurred while the designer was loading.">Obtiene una colección de los errores producidos durante la carga del diseñador.</summary>
      <returns vsli:raw="A collection of errors that occurred while the designer was loading.">Colección de errores producidos durante la carga del diseñador.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary vsli:raw="Gets a value that indicates whether the designer load was successful.">Obtiene un valor que indica si la carga del diseñador se realizó correctamente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la carga del diseñador se realizó correctamente; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class. This class cannot be inherited.">Representa el método que controlará el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />. Esta clase no puede heredarse.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary vsli:raw="Specifies the target framework for a project.">Especifica la versión de .NET Framework de destino de un proyecto.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" />.</summary>
      <param name="targetFrameworkMoniker" vsli:raw="The target framework for the project.">Versión de .NET Framework de destino del proyecto.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary vsli:raw="Gets the target framework for the project.">Obtiene la versión de .NET Framework de destino del proyecto.</summary>
      <returns vsli:raw="The target framework for the project.">Versión de .NET Framework de destino del proyecto.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary vsli:raw="Serializes a set of components into a serialization store.">Serializa un conjunto de componentes en un almacén de serialización.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class using the given service provider to resolve services.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> utilizando el proveedor de servicios determinado para resolver los servicios.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; to use for resolving services.">Interfaz <see cref="T:System.IServiceProvider" /> que se va a utilizar para resolver los servicios.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Crea un nuevo <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <returns vsli:raw="A new serialization store.">Un nuevo almacén de serialización.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary vsli:raw="Deserializes the given store to produce a collection of objects.">Deserializa el almacén determinado para generar una colección de objetos.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> del que se van a deserializar los objetos.</param>
      <returns vsli:raw="A collection of deserialized components.">Colección de componentes deserializados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> no es un tipo de almacén de serialización compatible. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary vsli:raw="Deserializes the given store and populates the given &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; with deserialized &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Deserializa el almacén determinado y rellena la interfaz <see cref="T:System.ComponentModel.IContainer" /> determinada con los objetos <see cref="T:System.ComponentModel.IComponent" /> deserializados.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> del que se van a deserializar los objetos.</param>
      <param name="container" vsli:raw="A container to which &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects will be added.">Contenedor al que se van a agregar los objetos <see cref="T:System.ComponentModel.IComponent" />.</param>
      <returns vsli:raw="A collection of deserialized components.">Colección de componentes deserializados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> o <paramref name="container" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> no es un tipo de almacén de serialización compatible. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary vsli:raw="Deserializes the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to the given container, optionally applying default property values.">Deserializa el objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> especificado en el contenedor determinado, aplicando opcionalmente los valores de propiedades predeterminados.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which the objects will be deserialized.">Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> del que se van a deserializar los objetos.</param>
      <param name="container" vsli:raw="A container of objects to which data will be applied.">Contenedor de objetos a los que se van a aplicar los datos.</param>
      <param name="validateRecycledTypes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the recycled type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para validar el tipo reciclado; de lo contrario, es <see langword="false" />.</param>
      <param name="applyDefaults" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to apply default property values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para aplicar los valores de propiedad predeterminados; de lo contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> o <paramref name="container" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> no es un tipo de almacén de serialización compatible. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from the given stream.">Carga un objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> desde la secuencia especificada.</summary>
      <param name="stream" vsli:raw="The stream from which to load the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Secuencia a partir de la cual se carga el objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</param>
      <returns vsli:raw="The loaded &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> cargado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; supports seeking, but its length is 0.">
        <paramref name="stream" /> admite operaciones de búsqueda, pero su longitud es cero.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object to the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Serializa el objeto especificado en el objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> especificado.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> en el que se va a serializar <paramref name="value" />.</param>
      <param name="value" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> o <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> está cerrado o <paramref name="store" /> no es un tipo de almacén de serialización admitido. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default property values.">Serializa el objeto dado, teniendo en cuenta los valores de propiedad predeterminados.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> en el que se va a serializar <paramref name="value" />.</param>
      <param name="value" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> o <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> está cerrado o <paramref name="store" /> no es un tipo de almacén de serialización admitido. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">Serializa al miembro especificado en el objeto especificado.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> en el que se va a serializar <paramref name="member" />.</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">Objeto propietario de <paramref name="member" />.</param>
      <param name="member" vsli:raw="The given member.">El miembro especificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />, <paramref name="owningObject" /> o <paramref name="member" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> está cerrado o <paramref name="store" /> no es un tipo de almacén de serialización admitido. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object, but also serializes the member if it contains the default property value.">Serializa al miembro especificado del objeto dado, pero también serializa al miembro si este contiene el valor de propiedad predeterminado.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> en el que se va a serializar <paramref name="member" />.</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">Objeto propietario de <paramref name="member" />.</param>
      <param name="member" vsli:raw="The given member.">El miembro especificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />, <paramref name="owningObject" /> o <paramref name="member" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> está cerrado o <paramref name="store" /> no es un tipo de almacén de serialización admitido. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary vsli:raw="Serializes an object graph to a series of CodeDOM statements. This class provides an abstract base class for a serializer.">Serializa un gráfico de objetos en una serie de instrucciones CodeDOM. Esta clase proporciona una clase base abstracta para un serializador.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized CodeDOM object into an object.">Deserializa el objeto CodeDOM serializado especificado en un objeto.</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">Interfaz del administrador de serialización que se utiliza durante el proceso de deserialización.</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">Objeto CodeDOM serializado que se va a deserializar.</param>
      <returns vsli:raw="The deserialized CodeDOM object.">Objeto CodeDOM deserializado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="codeObject" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;codeObject&quot; /&gt; is an unsupported code element.">
        <paramref name="codeObject" /> es un elemento de código no compatible.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a single statement.">Deserializa una instrucción sencilla.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">El administrador de serialización que se va a usar para la serialización.</param>
      <param name="statement" vsli:raw="The statement to deserialize.">Instrucción que se va a deserializar.</param>
      <returns vsli:raw="An object instance resulting from deserializing &lt;paramref name=&quot;statement&quot; /&gt;.">Instancia de un objeto que es el resultado de la deserialización de <paramref name="statement" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary vsli:raw="Determines which statement group the given statement should belong to.">Determina a qué grupo de instrucciones debería pertenecer la instrucción dada.</summary>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; for which to determine the group.">Clase <see cref="T:System.CodeDom.CodeStatement" /> cuyo grupo se va a determinar.</param>
      <param name="expression" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that &lt;paramref name=&quot;statement&quot; /&gt; has been reduced to.">Objeto <see cref="T:System.CodeDom.CodeExpression" /> al que se ha reducido <paramref name="statement" />.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of &lt;paramref name=&quot;statement&quot; /&gt;.">
        <see cref="T:System.Type" /> de <paramref name="statement" />.</param>
      <returns vsli:raw="The name of the component with which &lt;paramref name=&quot;statement&quot; /&gt; should be grouped.">Nombre del componente con el que debería agruparse <paramref name="statement" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a CodeDOM object.">Serializa el objeto especificado en un objeto CodeDOM.</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">Administrador de serialización que se va a utilizar durante la serialización.</param>
      <param name="value" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">Objeto CodeDOM que representa el objeto que se ha serializado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default values.">Serializa el objeto dado, teniendo en cuenta los valores predeterminados.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">El administrador de serialización que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;value&quot; /&gt;.">Objeto CodeDom que representa <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">Serializa al miembro especificado en el objeto especificado.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">El administrador de serialización que se va a usar para la serialización.</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">Objeto al que <paramref name="member" /> se adjunta.</param>
      <param name="member" vsli:raw="The member to serialize.">Miembro que se va a serializar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; representing the serialized state of &lt;paramref name=&quot;member&quot; /&gt;.">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> que representa el estado serializado de <paramref name="member" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="owningObject" /> o <paramref name="member" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> no es un tipo serializable.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member, accounting for default values.">Serializa el miembro especificado, teniendo en cuenta los valores predeterminados.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">El administrador de serialización que se va a usar para la serialización.</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">Objeto al que <paramref name="member" /> se adjunta.</param>
      <param name="member" vsli:raw="The member to serialize.">Miembro que se va a serializar.</param>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;member&quot; /&gt;.">Objeto CodeDom que representa <paramref name="member" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="owningObject" /> o <paramref name="member" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> no es un tipo serializable.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified value to a CodeDOM expression.">Serializa el valor especificado en una expresión CodeDOM.</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">Administrador de serialización que se va a utilizar durante la serialización.</param>
      <param name="value" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <returns vsli:raw="The serialized value. This returns &lt;see langword=&quot;null&quot; /&gt; if no reference expression can be obtained for the specified value, or the value cannot be serialized.">Valor serializado. Devuelve <see langword="null" /> si no se puede obtener ninguna expresión de referencia para el valor especificado o si el valor no se puede serializar.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary vsli:raw="Provides a base class for &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; classes.">Proporciona una clase base para las clases <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Deserializes the given expression into an in-memory object.">Deserializa la expresión especificada en un objeto en memoria.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="name" vsli:raw="The name of the object that results from the expression. Can be &lt;see langword=&quot;null&quot; /&gt; if there is no need to name the object.">Nombre del objeto que es el resultado de la expresión. Puede ser <see langword="null" /> si no es necesario asignar un nombre al objeto.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; to interpret.">
        <see cref="T:System.CodeDom.CodeExpression" /> que se va a interpretar.</param>
      <returns vsli:raw="An object resulting from interpretation of &lt;paramref name=&quot;expression&quot; /&gt;.">Objeto que es el resultado de la interpretación de <paramref name="expression" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary vsli:raw="Returns an instance of the given type.">Devuelve una instancia del tipo especificado.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the instance to return.">Objeto <see cref="T:System.Type" /> de la instancia que se va a devolver.</param>
      <param name="parameters" vsli:raw="The parameters to pass to the constructor for &lt;paramref name=&quot;type&quot; /&gt;.">Parámetros que se van a pasar al constructor para <paramref name="type" />.</param>
      <param name="name" vsli:raw="The name of the deserialized object.">Nombre del objeto deserializado.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">Es <see langword="true" /> para agregar este objeto al contenedor de diseño; de lo contrario, es <see langword="false" />. El objeto debe implementar <see cref="T:System.ComponentModel.IComponent" /> para que esto surta efecto.</param>
      <returns vsli:raw="An instance of &lt;paramref name=&quot;type&quot; /&gt;.">Instancia de <paramref name="type" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Deserializes properties on the given object from the invariant culture's resource bundle.">Deserializa las propiedades del objeto especificado del lote de recursos de la referencia cultural invariable.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object from which the properties are to be deserialized.">Objeto cuyas propiedades se van a deserializar.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be deserialized.">Matriz de <see cref="T:System.Attribute" /> que filtra las propiedades que se van a deserializar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a statement by interpreting and executing a CodeDOM statement.">Deserializa una instrucción interpretando y ejecutando una instrucción CodeDOM.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; to deserialize.">Objeto <see cref="T:System.CodeDom.CodeStatement" /> que se va a deserializar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">Obtiene una colección de atributos, tal y como se define en la versión de .NET Framework de destino del proyecto.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Administrador de serialización.</param>
      <param name="type" vsli:raw="The target type.">Tipo de destino.</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">Colección de atributos, tal y como se define en la versión de .NET Framework de destino del proyecto.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">Obtiene una colección de atributos, tal y como se define en la versión de .NET Framework de destino del proyecto.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Administrador de serialización.</param>
      <param name="instance" vsli:raw="An object of the target type.">Objeto del tipo de destino.</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">Colección de atributos, tal y como se define en la versión de .NET Framework de destino del proyecto.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of events as defined in the project's target version of .NET.">Obtiene una colección de eventos, tal y como se define en la versión de .NET Framework de destino del proyecto.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Administrador de serialización.</param>
      <param name="instance" vsli:raw="An object of the target type.">Objeto del tipo de destino.</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">Matriz de atributos que se van a pasar a la versión de .NET Framework de destino.</param>
      <returns vsli:raw="A collection of events as defined in the project's target version of .NET.">Colección de eventos, tal y como se define en la versión de .NET Framework de destino del proyecto.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns an expression for the given object.">Devuelve una expresión para el objeto especificado.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object for which to get an expression.">Objeto para el que se va a obtener una expresión.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no existing expression for &lt;paramref name=&quot;value&quot; /&gt;.">Objeto <see cref="T:System.CodeDom.CodeExpression" /> que representa <paramref name="value" /> o <see langword="null" /> si no hay ninguna expresión existente para <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of properties as defined in the project's target version of .NET.">Obtiene una colección de propiedades, tal y como se define en la versión de .NET Framework de destino del proyecto.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Administrador de serialización.</param>
      <param name="instance" vsli:raw="An object of the target type.">Objeto del tipo de destino.</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">Matriz de atributos que se van a pasar a la versión de .NET Framework de destino.</param>
      <returns vsli:raw="A collection of properties as defined in the project's target version of .NET.">Colección de propiedades, tal y como se define en la versión de .NET Framework de destino del proyecto.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a reflection type generated from type metadata.">Obtiene un tipo de reflexión generado a partir de los metadatos de un tipo.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Administrador de serialización.</param>
      <param name="type" vsli:raw="The type to use metadata from.">Tipo cuyos metadatos se van a usar.</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;type&quot; /&gt;.">Tipo de reflexión generado a partir de los metadatos de <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a reflection type generated from object metadata.">Obtiene un tipo de reflexión generado a partir de los metadatos de un objeto.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Administrador de serialización.</param>
      <param name="instance" vsli:raw="The object to use metadata from.">Objeto cuyos metadatos se van a usar.</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;object&quot; /&gt;.">Tipo de reflexión generado a partir de los metadatos de <paramref name="object" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Locates a serializer for the given object value.">Busca un serializador para el valor de objeto especificado.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object specifying the serializer to retrieve.">Objeto que especifica el serializador que se va a recuperar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;value&quot; /&gt;.">Objeto <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> adecuado para <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Locates a serializer for the given type.">Busca un serializador para el tipo especificado.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="valueType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; specifying the serializer to retrieve.">Objeto <see cref="T:System.Type" /> que especifica el serializador que se va a recuperar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;valueType&quot; /&gt;.">Objeto <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> adecuado para <paramref name="valueType" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;valueType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="valueType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptionProvider&quot; /&gt; that is aware of the target version of .NET, for use in type filtering.">Obtiene un objeto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> que reconoce la versión de .NET Framework de destino, para usarlo en el filtrado de tipos.</summary>
      <param name="provider" vsli:raw="The type description provider service.">Servicio de proveedor de descripciones de tipo.</param>
      <param name="instance" vsli:raw="An object from which the type description provider service can be derived, if &lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Objeto del que se puede derivar el servicio de proveedor de descripciones de tipo si <paramref name="provider" /> es <see langword="null" />.</param>
      <returns vsli:raw="A .NET-aware type description provider.">Proveedor de descripciones de tipo que reconoce .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a unique name for the given object.">Devuelve un nombre único para el objeto especificado.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object for which the name will be retrieved.">Objeto cuyo nombre se va a recuperar.</param>
      <returns vsli:raw="A unique name for &lt;paramref name=&quot;value&quot; /&gt;.">Nombre único para <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized.">Devuelve un valor que indica si se ha serializado el objeto especificado.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">Objeto que se va a comprobar para determinar si ya se ha serializado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha serializado <paramref name="value" />; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.">Devuelve un valor que indica si se ha serializado el objeto especificado, considerando opcionalmente las expresiones preestablecidas.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">Objeto que se va a comprobar para determinar si ya se ha serializado.</param>
      <param name="honorPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include preset expressions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para incluir las expresiones preestablecidas; en caso contrario, es <see langword="false" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha serializado <paramref name="value" />; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary vsli:raw="Returns an expression representing the creation of the given object.">Devuelve una expresión que representa la creación del objeto especificado.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <param name="isComplete" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was fully serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha serializado totalmente <paramref name="value" />; en caso contrario, es <see langword="false" />.</param>
      <returns vsli:raw="An expression representing the creation of &lt;paramref name=&quot;value&quot; /&gt;.">Expresión que representa la creación de <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Serializes the given event into the given statement collection.">Serializa el evento especificado en la colección de instrucciones determinada.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">Objeto <see cref="T:System.CodeDom.CodeStatementCollection" /> en el que se serializa el evento.</param>
      <param name="value" vsli:raw="The object to which &lt;paramref name=&quot;descriptor&quot; /&gt; is bound.">Objeto al que <paramref name="descriptor" /> está enlazado.</param>
      <param name="descriptor" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; specifying the event to serialize.">
        <see cref="T:System.ComponentModel.EventDescriptor" /> que especifica el evento que se va a serializar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> o <paramref name="descriptor" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" vsli:raw="&lt;see cref=&quot;T:System.ComponentModel.Design.IEventBindingService&quot; /&gt; is not available.">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> no está disponible.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the specified events into the given statement collection.">Serializa los eventos especificados en la colección de instrucciones determinada.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">Objeto <see cref="T:System.CodeDom.CodeStatementCollection" /> en el que se serializa el evento.</param>
      <param name="value" vsli:raw="The object on which events will be serialized.">Objeto en el que se van a serializar los eventos.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which events will be serialized.">Matriz de <see cref="T:System.Attribute" /> que filtra los eventos que se van a serializar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> o <paramref name="statements" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the given statement collection.">Serializa las propiedades del objeto especificado en la colección de instrucciones determinada.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the properties will be serialized.">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> en el que se serializan las propiedades.</param>
      <param name="value" vsli:raw="The object on which the properties will be serialized.">Objeto en el que se serializan las propiedades.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">Matriz de <see cref="T:System.Attribute" /> que filtra las propiedades que se van a serializar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> o <paramref name="statements" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the invariant culture's resource bundle.">Serializa las propiedades del objeto especificado en el lote de recursos de la referencia cultural invariable.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="statements" vsli:raw="Not used.">No se utiliza.</param>
      <param name="value" vsli:raw="The object whose properties will be serialized.">Objeto cuyas propiedades se van a serializar.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">Matriz de <see cref="T:System.Attribute" /> que filtra las propiedades que se van a serializar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> o <paramref name="statements" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Serializes a property on the given object.">Serializa una propiedad del objeto especificado.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the property will be serialized.">Objeto <see cref="T:System.CodeDom.CodeStatementCollection" /> en el que se serializa la propiedad.</param>
      <param name="value" vsli:raw="The object on which the property will be serialized.">Objeto en el que se serializa la propiedad.</param>
      <param name="propertyToSerialize" vsli:raw="The property to serialize.">Propiedad que se va a serializar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;propertyToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> o <paramref name="propertyToSerialize" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">Serializa el objeto especificado en un lote de recursos utilizando el nombre de recurso especificado.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">Nombre del lote de recursos en el que se va a serializar <paramref name="value" />.</param>
      <param name="value" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">Serializa el objeto especificado en un lote de recursos utilizando el nombre de recurso especificado.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">Nombre del lote de recursos en el que se va a serializar <paramref name="value" />.</param>
      <param name="value" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">Serializa el objeto determinado en una expresión.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object to serialize. Can be &lt;see langword=&quot;null&quot; /&gt;.">El objeto que se va a serializar. Puede ser <see langword="null" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; object if &lt;paramref name=&quot;value&quot; /&gt; can be serialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.CodeDom.CodeExpression" /> si se puede serializar <paramref name="value" />; de lo contrario, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">Serializa el objeto determinado en una expresión.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">Objeto <see cref="T:System.CodeDom.CodeExpression" /> que contiene <paramref name="value" /> como una expresión serializada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Serializes the given object into an expression appropriate for the invariant culture.">Serializa el objeto determinado en una expresión adecuada para la referencia cultural de todos los idiomas.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <param name="ensureInvariant" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize into the invariant culture; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para serializar en la referencia cultural de todos los idiomas; de lo contrario, es <see langword="false" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">Objeto <see cref="T:System.CodeDom.CodeExpression" /> que contiene <paramref name="value" /> como una expresión serializada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Associates an object with an expression.">Asocia un objeto a una expresión.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.CodeDom.CodeExpression" /> con el que se va a asociar <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;expression&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> o <paramref name="expression" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary vsli:raw="Associates an object with an expression, optionally specifying a preset expression.">Asocia un objeto a una expresión, especificando opcionalmente una expresión preestablecida.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.CodeDom.CodeExpression" /> con el que se va a asociar <paramref name="value" />.</param>
      <param name="isPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify a preset expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para especificar una expresión preestablecida; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary vsli:raw="The exception that is thrown when line number information is available for a serialization error.">Excepción que se produce cuando existe información disponible acerca del número de línea para un error de serialización.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified exception and line information.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> con la excepción y la información de línea especificadas.</summary>
      <param name="ex" vsli:raw="The exception to throw.">Excepción que se va a producir.</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">
        <see cref="T:System.CodeDom.CodeLinePragma" /> que indica dónde se produjo la excepción.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />.</summary>
      <param name="ex" vsli:raw="The exception to throw.">Excepción que se va a producir.</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">El objeto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> del que se extrae el contexto.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified message and line information.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> con el mensaje y la información de línea especificadas.</summary>
      <param name="message" vsli:raw="A message describing the exception.">Mensaje que describe la excepción.</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">
        <see cref="T:System.CodeDom.CodeLinePragma" /> que indica dónde se produjo la excepción.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />.</summary>
      <param name="message" vsli:raw="A message describing the exception.">Mensaje que describe la excepción.</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">El objeto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> del que se extrae el contexto.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the parameter name and additional exception information.">Establece el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con el nombre del parámetro y la información adicional de la excepción.</summary>
      <param name="info" vsli:raw="Stores the data that was being used to serialize or deserialize the object that the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; was serializing or deserializing.">Almacena los datos que se estaban utilizado para serializar o deserializar el objeto que el serializador <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> se encontraba serializando o deserializando.</param>
      <param name="context" vsli:raw="Describes the source and destination of the stream that generated the exception, as well as a means for serialization to retain that context and an additional caller-defined context.">Describe el origen y el destino de la cadena que generó la excepción, así como un modo de serialización para retener dicho contexto y un contexto adicional definido por el llamador.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary vsli:raw="Gets or sets the line information for the error associated with this exception.">Obtiene o establece la información de línea para el error asociado a esta excepción.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates the line information for the error.">
        <see cref="T:System.CodeDom.CodeLinePragma" /> que indica la información de línea del error.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary vsli:raw="Serializes collections.">Serializa colecciones.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary vsli:raw="Verifies serialization support by the &lt;paramref name=&quot;method&quot; /&gt;.">Comprueba si <paramref name="method" /> admite la serialización.</summary>
      <param name="method" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; to check for serialization attributes.">Objeto <see cref="T:System.Reflection.MethodInfo" /> en el que se van a comprobar los atributos de serialización.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;method&quot; /&gt; supports serialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="method" /> admite la serialización; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given collection into a CodeDOM object.">Serializa la colección especificada en un objeto CodeDOM.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a usar durante la serialización.</param>
      <param name="value" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <returns vsli:raw="A CodeDOM object representing &lt;paramref name=&quot;value&quot; /&gt;.">Objeto CodeDOM que representa <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the given collection.">Serializa la colección determinada.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar durante la serialización.</param>
      <param name="targetExpression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that refers to the collection.">Objeto <see cref="T:System.CodeDom.CodeExpression" /> que hace referencia a la colección</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the collection.">Objeto <see cref="T:System.Type" /> de la colección.</param>
      <param name="originalCollection" vsli:raw="The collection to serialize.">Colección que se va a serializar.</param>
      <param name="valuesToSerialize" vsli:raw="The values to serialize.">Valores que se van a serializar.</param>
      <returns vsli:raw="Serialized collection if the serialization process succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Colección serializada si el proceso de serialización se realizó correctamente; de lo contrario, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;targetType&quot; /&gt;, &lt;paramref name=&quot;originalCollection&quot; /&gt;, or &lt;paramref name=&quot;valuesToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" /> o <paramref name="valuesToSerialize" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary vsli:raw="Provides an implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; interface.">Proporciona una implementación de la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class with the given service provider.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> con el proveedor de servicios especificado.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt;.">Una clase <see cref="T:System.IServiceProvider" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="provider" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary vsli:raw="Gets or sets to the container for this serialization manager.">Obtiene o establece el contenedor para este administrador de serialización.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; to which the serialization manager will add components.">Interfaz <see cref="T:System.ComponentModel.IContainer" /> a la que el administrador de serialización va a agregar componentes.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">El administrador de serialización tiene una sesión de serialización activa.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of a type.">Crea una instancia de un tipo.</summary>
      <param name="type" vsli:raw="The type to create an instance of.">Tipo del que se va a crear una instancia.</param>
      <param name="arguments" vsli:raw="The parameters of the type's constructor. This can be &lt;see langword=&quot;null&quot; /&gt; or an empty collection to invoke the parameterless constructor.">Parámetros del constructor del tipo. Puede ser <see langword="null" /> o una colección vacía para invocar el constructor sin parámetros.</param>
      <param name="name" vsli:raw="A name to give the object. If &lt;see langword=&quot;null&quot; /&gt;, the object will not be given a name, unless the object is added to a container and the container gives the object a name.">Nombre que se va a dar al objeto. Si es <see langword="null" />, no se dará nombre al objeto, salvo que el propio objeto se agregue a un contenedor y el contenedor le dé un nombre.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add the object to the container if the object implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para agregar el objeto al contenedor si el objeto implementa <see cref="T:System.ComponentModel.IComponent" />; de lo contrario, es <see langword="false" />.</param>
      <returns vsli:raw="A new instance of the type specified by &lt;paramref name=&quot;type&quot; /&gt;.">Nueva instancia del tipo especificado por <paramref name="type" />.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; does not have a constructor that takes parameters contained in &lt;paramref name=&quot;arguments&quot; /&gt;.">
        <paramref name="type" /> no tiene un constructor que adopte los parámetros contenidos en <paramref name="arguments" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary vsli:raw="Creates a new serialization session.">Crea una nueva sesión de serialización.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; that represents a new serialization session.">Interfaz <see cref="T:System.IDisposable" /> que representa una nueva sesión de serialización.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager is already within a session. This version of &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; does not support simultaneous sessions.">El administrador de serialización ya está en una sesión. Esta versión de <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> no admite sesiones simultáneas.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary vsli:raw="Gets the list of errors that occurred during serialization or deserialization.">Obtiene la lista de los errores que se han producido durante la serialización o deserialización.</summary>
      <returns vsli:raw="The list of errors that occurred during serialization or deserialization.">La lista de los errores que se han producido durante la serialización o deserialización.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary vsli:raw="Gets the type corresponding to the specified type name.">Obtiene el tipo que se corresponde con el nombre de tipo especificado.</summary>
      <param name="typeName" vsli:raw="The name of the type to get.">Nombre del tipo que se va a obtener.</param>
      <returns vsli:raw="The specified type.">El tipo especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets the serializer for the given object type.">Obtiene el serializador para el tipo de objeto especificado.</summary>
      <param name="objectType" vsli:raw="The type of object for which to retrieve the serializer.">Tipo de objeto para el que se va a recuperar el serializador.</param>
      <param name="serializerType" vsli:raw="The type of serializer to retrieve.">Tipo de serializador que se va a recuperar.</param>
      <returns vsli:raw="The serializer for &lt;paramref name=&quot;objectType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;, if not found.">Serializador para <paramref name="objectType" /> o <see langword="null" /> si no se ha encontrado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;objectType&quot; /&gt; or &lt;paramref name=&quot;serializerType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="objectType" /> o <paramref name="serializerType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Obtiene el servicio solicitado.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Tipo de servicio que se va a recuperar.</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">Servicio solicitado o <see langword="null" /> si no se puede resolver el servicio.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary vsli:raw="Gets the requested type.">Obtiene el tipo solicitado.</summary>
      <param name="typeName" vsli:raw="The name of the type to retrieve.">Nombre del tipo que se va a recuperar.</param>
      <returns vsli:raw="The requested type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be resolved.">Tipo solicitado o <see langword="null" /> si no se puede resolver el tipo.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&quot; /&gt; event.">Genera el evento <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated&quot; /&gt; event.">Genera el evento <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed&quot; /&gt; event.">Genera el evento <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method should check for the presence of the given name in the container.">Obtiene o establece un valor que indica si el método <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> debe comprobar la presencia del nombre especificado en el contenedor.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will pass the given component name; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will check for the presence of the given name in the container. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a pasar el nombre de componente determinado; <see langword="false" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a comprobar la presencia del nombre determinado en el contenedor. De manera predeterminada, es <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was changed from within a serialization session.">El cambio de esta propiedad se realizó desde una sesión de serialización.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary vsli:raw="Gets the object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">Obtiene el objeto que se debe utilizar para proporcionar propiedades a la propiedad <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> del administrador de serialización.</summary>
      <returns vsli:raw="The object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">Objeto que se debe utilizar para proporcionar propiedades a la propiedad <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> del administrador de serialización.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will always create a new instance of a type.">Obtiene o establece un valor que indica si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a crear siempre una nueva instancia de un tipo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will return the existing instance; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will create a new instance of a type. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a devolver la instancia existente; <see langword="false" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a crear una nueva instancia de un tipo. De manera predeterminada, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">El administrador de serialización tiene una sesión de serialización activa.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary vsli:raw="Occurs when a session is created.">Tiene lugar cuando se crea una sesión.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary vsli:raw="Occurs when a session is disposed.">Se produce cuando se desecha una sesión.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Adds a custom serialization provider to the serialization manager.">Agrega un proveedor de serialización personalizado al administrador de serialización.</summary>
      <param name="provider" vsli:raw="The serialization provider to add.">Proveedor de serialización que se va a agregar.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary vsli:raw="Gets the context stack for this serialization session.">Obtiene la pila de contexto para esta sesión de serialización.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ContextStack&quot; /&gt; that stores data.">
        <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> que almacena datos.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method.">Implementa el método <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />.</summary>
      <param name="type" vsli:raw="The data type to create.">Tipo de datos que se va crear.</param>
      <param name="arguments" vsli:raw="The arguments to pass to the constructor for this type.">Argumentos que se van a pasar al constructor para este tipo.</param>
      <param name="name" vsli:raw="The name of the object. This name can be used to access the object later through &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; is passed, the object is still created but cannot be accessed by name.">El nombre del objeto. Se puede utilizar este nombre para tener acceso al objeto más adelante a través de <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />. Si se pasa <see langword="null" />, el objeto sigue creado pero no se puede tener acceso a él mediante el nombre.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">Es <see langword="true" /> para agregar este objeto al contenedor de diseño. El objeto debe implementar <see cref="T:System.ComponentModel.IComponent" /> para que esto surta efecto.</param>
      <returns vsli:raw="The newly created object instance.">Instancia del objeto recién creada.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary vsli:raw="Retrieves an instance of a created object of the specified name.">Recupera una instancia de un objeto creado con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the object to retrieve.">Nombre del objeto que se va a recuperar.</param>
      <returns vsli:raw="An instance of the object with the given name, or &lt;see langword=&quot;null&quot; /&gt; if no object by that name can be found.">Instancia del objeto con el nombre dado, o <see langword="null" /> si no se encuentra ningún objeto por ese nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="name" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary vsli:raw="Retrieves a name for the specified object.">Recupera un nombre para el objeto especificado.</summary>
      <param name="value" vsli:raw="The object for which to retrieve the name.">Objeto para el que se va a recuperar el nombre.</param>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object is unnamed.">Nombre del objeto, o <see langword="null" /> si el objeto no tiene nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets a serializer of the requested type for the specified object type.">Obtiene un serializador del tipo solicitado para el tipo de objeto especificado.</summary>
      <param name="objectType" vsli:raw="The type of the object to get the serializer for.">Tipo del objeto para el que se obtiene el serializador.</param>
      <param name="serializerType" vsli:raw="The type of the serializer to retrieve.">Tipo del serializador que se va a recuperar.</param>
      <returns vsli:raw="An instance of the requested serializer, or &lt;see langword=&quot;null&quot; /&gt; if no appropriate serializer can be located.">Instancia del serializador solicitado, o <see langword="null" /> si no se encuentra ningún serializador adecuado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary vsli:raw="Gets a type of the specified name.">Obtiene un tipo del nombre especificado.</summary>
      <param name="typeName" vsli:raw="The fully qualified name of the type to load.">Nombre completo del tipo que se va a cargar.</param>
      <returns vsli:raw="An instance of the type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be loaded.">Instancia del tipo, o <see langword="null" /> si no se puede cargar el tipo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary vsli:raw="Implements the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">Implementa la propiedad <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; containing the properties to be serialized.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contiene las propiedades que se van a serializar.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Removes a previously added serialization provider.">Quita un proveedor de serialización agregado anteriormente.</summary>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider&quot; /&gt; to remove.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> que se va a quitar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary vsli:raw="Used to report a recoverable error in serialization.">Se utiliza para crear un informe de error recuperable en la serialización.</summary>
      <param name="errorInformation" vsli:raw="An object containing the error information, usually of type &lt;see cref=&quot;T:System.String&quot; /&gt; or &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Objeto que contiene la información de error, normalmente de tipo <see cref="T:System.String" /> o <see cref="T:System.Exception" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)&quot; /&gt; cannot locate the specified name in the serialization manager's name table.">Tiene lugar cuando <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> no puede encontrar el nombre especificado en la tabla de nombres del administrador de serialización.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">El administrador de serialización no tiene una sesión de serialización activa.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary vsli:raw="Occurs when serialization is complete.">Se produce al finalizar la serialización.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">El administrador de serialización no tiene una sesión de serialización activa.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary vsli:raw="Sets the name for the specified object.">Establece el nombre para el objeto especificado.</summary>
      <param name="instance" vsli:raw="The object to set the name.">Objeto para el que se va a establecer el nombre.</param>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used as the name of the object.">Objeto <see cref="T:System.String" /> que se ha utilizado como nombre del objeto.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Uno o ambos parámetros son <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified by instance already has a name, or &lt;paramref name=&quot;name&quot; /&gt; is already used by another named object.">El objeto especificado por la instancia ya tiene un nombre, o bien otro objeto con nombre ya utiliza <paramref name="name" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.IServiceProvider.GetService(System.Type)&quot; /&gt; method.">Para obtener una descripción de este miembro, vea el método <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</summary>
      <param name="serviceType" vsli:raw="An object that specifies the type of service object to get.">Objeto que especifica el tipo de objeto de servicio que se va a obtener.</param>
      <returns vsli:raw="A service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; if there is no service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.">Objeto de servicio del tipo <paramref name="serviceType" />.
O bien
<see langword="null" /> si no hay ningún objeto de servicio del tipo <paramref name="serviceType" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method will verify that matching names refer to the same type.">Obtiene o establece un valor que indica si el método <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a comprobar que los nombres coincidentes hagan referencia al mismo tipo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; verifies types; otherwise, &lt;see langword=&quot;false&quot; /&gt; if it does not. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> comprueba los tipos; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">El administrador de serialización tiene una sesión de serialización activa.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary vsli:raw="Provides a means of passing context state among serializers. This class cannot be inherited.">Proporciona un medio para pasar el estado de contexto entre los serializadores. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with the given expression and owner.">Inicializa una instancia nueva de la clase <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> con la expresión y el propietario especificados.</summary>
      <param name="expression" vsli:raw="The given code expression.">La expresión de código especificada.</param>
      <param name="expressionType" vsli:raw="The given code expression type.">El tipo de expresión de código especificada.</param>
      <param name="owner" vsli:raw="The given code expression owner.">El propietario de la expresión de código especificada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />, <paramref name="expressionType" /> o <paramref name="owner" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with a current value.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> con un valor actual.</summary>
      <param name="expression" vsli:raw="The given code expression.">La expresión de código especificada.</param>
      <param name="expressionType" vsli:raw="The given code expression type.">El tipo de expresión de código especificada.</param>
      <param name="owner" vsli:raw="The given code expression owner.">El propietario de la expresión de código especificada.</param>
      <param name="presetValue" vsli:raw="The given code expression preset value.">El valor preestablecido de la expresión de código especificada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />, <paramref name="expressionType" /> o <paramref name="owner" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary vsli:raw="Gets the expression this context represents.">Obtiene la expresión que representa este contexto.</summary>
      <returns vsli:raw="The expression this context represents.">Expresión que representa este contexto.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">Obtiene el objeto <see cref="T:System.Type" /> de la expresión.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">Objeto <see cref="T:System.Type" /> de la expresión.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary vsli:raw="Gets the object owning this expression.">Obtiene el objeto propietario de esta expresión.</summary>
      <returns vsli:raw="The object owning this expression.">Objeto propietario de esta expresión.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary vsli:raw="Gets the preset value of an expression.">Obtiene el valor preestablecido de una expresión.</summary>
      <returns vsli:raw="The preset value of this expression, or &lt;see langword=&quot;null&quot; /&gt; if not assigned.">Valor preestablecido de esta expresión o <see langword="null" /> si no hay ninguno asignado.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary vsli:raw="Provides the base class for serializing a reflection primitive within the object graph.">Proporciona la clase base para serializar un tipo primitivo de reflexión dentro del gráfico de objetos.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary vsli:raw="Serializes the given member descriptor on the given value to a statement collection.">Serializa el descriptor de miembro especificado con el valor determinado en una colección de instrucciones.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">El administrador de serialización que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object to which the member is bound.">Objeto al que está enlazado el miembro.</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">Descriptor del miembro que se va a serializar.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which &lt;paramref name=&quot;descriptor&quot; /&gt; is serialized.">Objeto <see cref="T:System.CodeDom.CodeStatementCollection" /> en el que se serializa <paramref name="descriptor" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Determines if the given member should be serialized.">Determina si se debe serializar el miembro especificado.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">El administrador de serialización que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The object to which the member is bound.">Objeto al que está enlazado el miembro.</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">Descriptor del miembro que se va a serializar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member described by &lt;paramref name=&quot;descriptor&quot; /&gt; should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si debe serializarse el miembro que describe <paramref name="descriptor" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary vsli:raw="Holds a table of statements that is offered by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt;. This class cannot be inherited.">Contiene una tabla de instrucciones que proporciona la clase <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary vsli:raw="Determines whether the table contains the given statement owner.">Determina si la tabla contiene el propietario de instrucciones determinado.</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">Propietario de la colección de instrucciones.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is in the table; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="statementOwner" /> está en la tabla; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">Devuelve una interfaz <see cref="T:System.Collections.IEnumerator" /> para la interfaz <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary vsli:raw="Gets the statement collection for the given owner.">Obtiene la colección de instrucciones para el propietario determinado.</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">Propietario de la colección de instrucciones.</param>
      <returns vsli:raw="The statement collection for &lt;paramref name=&quot;statementOwner&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is not in the table.">Colección de instrucciones para <paramref name="statementOwner" /> o <see langword="null" /> si <paramref name="statementOwner" /> no está en la tabla.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary vsli:raw="Populates the statement table with a collection of statement owners.">Rellena la tabla de instrucciones con una colección de propietarios de instrucciones.</summary>
      <param name="statementOwners" vsli:raw="A collection of statement owners to add to the table.">Colección de propietarios de instrucciones que se va a agregar a la tabla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary vsli:raw="Populates the statement table with a statement owner.">Rellena la tabla de instrucciones con un propietario de instrucciones.</summary>
      <param name="owner" vsli:raw="The statement owner to add to the table.">Propietario de instrucciones que se va a agregar a la tabla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owner" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method.">Para obtener una descripción de este miembro, vea el método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; adds a root context to provide a definition of the root object. This class cannot be inherited.">Un objeto <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> agrega un contexto raíz para proporcionar una definición del objeto raíz. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.RootContext&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.RootContext" />.</summary>
      <param name="expression" vsli:raw="The expression representing the root object in the object graph.">Expresión que representa el objeto raíz en el gráfico de objetos.</param>
      <param name="value" vsli:raw="The root object of the object graph.">Objeto raíz del gráfico de objetos.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary vsli:raw="Gets the expression representing the root object in the object graph.">Obtiene la expresión que representa el objeto raíz en el gráfico de objetos.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing the root object in the object graph.">Objeto <see cref="T:System.CodeDom.CodeExpression" /> que representa el objeto raíz en el gráfico de objetos.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary vsli:raw="Gets the root object of the object graph.">Obtiene el objeto raíz del gráfico de objetos.</summary>
      <returns vsli:raw="The root object of the object graph.">Objeto raíz del gráfico de objetos.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary vsli:raw="Specifies that serializers should handle default values. This class cannot be inherited.">Especifica que los serializadores deben controlar los valores predeterminados. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class with the option of binding to a specific member.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> con la opción de poder establecer un enlace con un miembro concreto.</summary>
      <param name="member" vsli:raw="The member to which this context is bound. Can be &lt;see langword=&quot;null&quot; /&gt;.">Miembro al que está enlazado este contexto. Puede ser <see langword="null" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary vsli:raw="Gets the member to which this context is bound.">Obtiene el miembro al que está enlazado este contexto.</summary>
      <returns vsli:raw="The member to which this context is bound, or &lt;see langword=&quot;null&quot; /&gt; if the context is bound to all members of an object.">Miembro al que está enlazado este contexto o <see langword="null" /> si el contexto se enlaza a todos los miembros de un objeto.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Gets a value indicating whether the given member should be serialized in this context.">Obtiene un valor que indica si el miembro determinado se debe serializar en este contexto.</summary>
      <param name="member" vsli:raw="The member to be examined for serialization.">Miembro que se va a examinar para la serialización.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given member should be serialized in this context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el miembro determinado se debe serializar en este contexto; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary vsli:raw="Provides a location into which statements can be serialized. This class cannot be inherited.">Proporciona una ubicación en la que se pueden serializar instrucciones. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary vsli:raw="Gets a collection of statements offered by the statement context.">Obtiene una colección de instrucciones que proporciona el contexto de instrucciones.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt; containing statements offered by the statement context.">Objeto <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> que contiene las instrucciones que proporciona el contexto de instrucciones.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary vsli:raw="Serializes an object to a new type.">Serializa un objeto en un nuevo tipo.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Deserializes the given type declaration.">Deserializa la declaración de tipos determinada.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">El administrador de serialización que se va a usar para la serialización.</param>
      <param name="declaration" vsli:raw="Type declaration to use for serialization.">Declaración de tipos que se va a utilizar para la serialización.</param>
      <returns vsli:raw="The root object.">Objeto raíz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="typeDecl" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary vsli:raw="Returns the method where statements used to serialize a member are stored.">Devuelve el método en el que se almacenan las instrucciones usadas para serializar un miembro.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">El administrador de serialización que se va a usar para la serialización.</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">Declaración de tipos que se va a usar para la serialización.</param>
      <param name="value" vsli:raw="The value to use for serialization.">Valor que se va a usar para la serialización.</param>
      <returns vsli:raw="The method used to emit all of the initialization code for the given member.">Método usado para emitir todo el código de inicialización del miembro determinado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;typeDecl&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="typeDecl" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Returns an array of methods to be interpreted during deserialization.">Devuelve una matriz de los métodos que se van a interpretar durante la deserialización.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">El administrador de serialización que se va a usar para la serialización.</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">Declaración de tipos que se va a usar para la serialización.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeMemberMethod&quot; /&gt; array of methods to be interpreted during deserialization.">Matriz de <see cref="T:System.CodeDom.CodeMemberMethod" /> de los métodos que se van a interpretar durante la deserialización.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="typeDecl" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the object root by creating a new type declaration that defines root.">Serializa la raíz del objeto creando una nueva declaración de tipos que define la raíz.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">El administrador de serialización que se va a usar para la serialización.</param>
      <param name="root" vsli:raw="The object to serialize.">Objeto que se va a serializar.</param>
      <param name="members" vsli:raw="Optional collection of members. Can be &lt;see langword=&quot;null&quot; /&gt; or empty.">Colección opcional de miembros. Puede ser <see langword="null" /> o estar vacía.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeTypeDeclaration&quot; /&gt; that defines the root object.">Objeto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> que define el objeto raíz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;root&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="root" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary vsli:raw="Specifies generic undo/redo functionality at design time.">Especifica la funcionalidad genérica para deshacer/rehacer en tiempo de diseño.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <param name="provider" vsli:raw="A parenting service provider.">Proveedor de servicios primario.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A required service cannot be found. See &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; for required services. If you have removed this service, ensure that you provide a replacement.">No se puede encontrar un servicio necesario. Vea los servicios necesarios en <see cref="T:System.ComponentModel.Design.UndoEngine" />. Si ha quitado este servicio, asegúrese de proporcionar uno de reemplazo.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; to the undo stack.">Agrega un objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> a la pila para deshacer.</summary>
      <param name="unit" vsli:raw="The undo unit to add.">Unidad para deshacer que se va a agregar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Crea un nuevo <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="name" vsli:raw="The name of the unit to create.">Nombre de la unidad que se va a crear.</param>
      <param name="primary" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create the first of a series of nested units; &lt;see langword=&quot;false&quot; /&gt; to create subsequent nested units.">Es <see langword="true" /> para crear la primera de una serie de unidades anidadas; es <see langword="false" /> para crear unidades anidadas subsiguientes.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; with a specified name.">Un nuevo <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> con un nombre especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Discards an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Descarta un objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="unit" vsli:raw="The unit to discard.">Unidad que se va a descartar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">Libera todos los recursos que usa <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.ComponentModel.Design.UndoEngine" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary vsli:raw="Enables or disables the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">Habilita o deshabilita el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> está habilitado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Obtiene el servicio solicitado.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Tipo de servicio que se va a recuperar.</param>
      <returns vsli:raw="The requested service, if found.">Servicio solicitado, si se encuentra.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is required but cannot be found. If you have removed this service, ensure that you provide a replacement.">El parámetro <paramref name="serviceType" /> que es necesario pero no se encuentra. Si ha quitado este servicio, asegúrese de proporcionar uno de reemplazo.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Obtiene el servicio solicitado.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Tipo de servicio que se va a recuperar.</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the requested service is not found.">Servicio solicitado o <see langword="null" /> si no se encuentra el servicio solicitado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undoing&quot; /&gt; event.">Genera el evento <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undone&quot; /&gt; event.">Genera el evento <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary vsli:raw="Occurs immediately before an undo action is performed.">Se produce inmediatamente antes de que se realice una acción de deshacer.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary vsli:raw="Indicates if an undo action is in progress.">Indica si está en curso una acción de deshacer.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an undo action is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si está en curso una acción de deshacer; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary vsli:raw="Occurs immediately after an undo action is performed.">Se produce inmediatamente después de que se realice una acción de deshacer.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary vsli:raw="Encapsulates a unit of work that a user can undo.">Encapsula una unidad de trabajo que cualquier usuario puede deshacer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="engine" vsli:raw="The undo engine that owns this undo unit.">Motor para deshacer propietario de esta unidad para deshacer.</param>
      <param name="name" vsli:raw="The name for this undo unit.">Nombre de esta unidad para deshacer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;engine&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="engine" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary vsli:raw="Receives a call from the undo engine to close this unit.">Recibe una llamada del motor para deshacer con el fin de cerrar esta unidad.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded&quot; /&gt; event.">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding&quot; /&gt; event.">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot; /&gt; event.">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot; /&gt; event.">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved&quot; /&gt; event.">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving&quot; /&gt; event.">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRename&quot; /&gt; event.">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentRenameEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary vsli:raw="Gets an instance of the requested service.">Obtiene una instancia del servicio solicitado.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Tipo de servicio que se va a recuperar.</param>
      <returns vsli:raw="An instance of the given service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">Instancia del servicio especificado o <see langword="null" /> si no se puede resolver dicho servicio.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events.">Obtiene un valor que indica si el objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> no contiene ningún evento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> no contiene ningún evento; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary vsli:raw="Gets the name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Obtiene el nombre de <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Nombre del objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">Devuelve un objeto <see cref="T:System.String" /> que representa el nombre actual de la unidad.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">
        <see cref="T:System.String" /> que representa el nombre actual de la unidad.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary vsli:raw="Performs an undo or redo action.">Lleva a cabo una acción de deshacer o rehacer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary vsli:raw="Called by &lt;see cref=&quot;M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo&quot; /&gt; to perform an undo action.">
        <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> llama a este método para llevar a cabo una acción de deshacer.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt;.">Obtiene el objeto <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> primario.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt; to which this &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; is attached.">Propiedad <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> a la que está asociado el objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxItemProvider">
      <summary vsli:raw="Exposes a collection of toolbox items.">Expone una colección de elementos del cuadro de herramientas.</summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxItemProvider.Items">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">Obtiene una colección de objetos <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">Una colección de objetos <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary vsli:raw="Provides methods and properties to manage and query the toolbox in the development environment.">Proporciona métodos y propiedades para administrar y consultar el cuadro de herramientas en el entorno de desarrollo.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format.">Agrega un nuevo creador de elementos de cuadro de herramientas para el formato de datos especificado.</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">
        <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> que puede crear un componente cuando se invoca el elemento del cuadro de herramientas.</param>
      <param name="format" vsli:raw="The data format that the creator handles.">Formato de datos que el creador controla.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format and designer host.">Agrega un creador de elementos de cuadro de herramientas para un formato de datos y un host de diseñador especificados.</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">
        <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> que puede crear un componente cuando se invoca el elemento del cuadro de herramientas.</param>
      <param name="format" vsli:raw="The data format that the creator handles.">Formato de datos que el creador controla.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that represents the designer host to associate with the creator.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que representa el host del diseñador que se va a asociar al creador.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox.">Agrega el elemento del cuadro de herramientas vinculado al proyecto especificado al cuadro de herramientas.</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> vinculado que se va a agregar al cuadro de herramientas.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para el documento de diseño actual.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox in the specified category.">Agregar el elemento del cuadro de herramientas vinculado al proyecto especificado al cuadro de herramientas en la categoría especificada.</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> vinculado que se va a agregar al cuadro de herramientas.</param>
      <param name="category" vsli:raw="The toolbox item category to add the toolbox item to.">Categoría de elemento de cuadro de herramientas a la que se va agregar el elemento.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para el documento de diseño actual.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox.">Agrega el elemento especificado al cuadro de herramientas.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a agregar al cuadro de herramientas.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox in the specified category.">Agrega el elemento del cuadro de herramientas especificado al cuadro de herramientas en la categoría especificada.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a agregar al cuadro de herramientas.</param>
      <param name="category" vsli:raw="The toolbox item category to add the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to.">Categoría de elementos del cuadro de herramientas a la que se va agregar <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary vsli:raw="Gets the names of all the tool categories currently on the toolbox.">Obtiene los nombres de todas las categorías de herramientas que actualmente se encuentran en el cuadro de herramientas.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.CategoryNameCollection&quot; /&gt; containing the tool categories.">
        <see cref="T:System.Drawing.Design.CategoryNameCollection" /> que contiene las categorías de herramientas.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form.">Obtiene un elemento del cuadro de herramientas a partir del objeto especificado que representa un elemento del cuadro de herramientas en forma serializada.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Objeto que contiene el <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a recuperar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from the serialized object.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> creado a partir del objeto serializado.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form, using the specified designer host.">Obtiene un elemento del cuadro de herramientas a partir del objeto especificado que representa un elemento del cuadro de herramientas en forma serializada, utilizando el host del diseñador especificado.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Objeto que contiene el <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a recuperar.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to associate with this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que se va a asociar con <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from deserialization.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> creado a partir de la deserialización.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary vsli:raw="Gets the currently selected toolbox item.">Obtiene el elemento del cuadro de herramientas actualmente seleccionado.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item has been selected.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> actualmente seleccionado, o <see langword="null" /> si no se ha seleccionado ningún elemento del cuadro de herramientas.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the currently selected toolbox item if it is available to all designers, or if it supports the specified designer.">Obtiene el elemento del cuadro de herramientas actualmente seleccionado si está disponible para todos los diseñadores o si admite el diseñador especificado.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that the selected tool must be associated with for it to be returned.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> al que debe estar asociada a la herramienta seleccionada para que pueda devolverse.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item is currently selected.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> actualmente seleccionado, o <see langword="null" /> si no hay ningún elemento del cuadro de herramientas actualmente seleccionado.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary vsli:raw="Gets the entire collection of toolbox items from the toolbox.">Obtiene la colección completa de elementos del cuadro de herramientas.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> que contiene los elementos del cuadro de herramientas actual.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host from the toolbox.">Obtiene la colección de elementos del cuadro de herramientas que están asociados al host del diseñador especificado.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que está asociado a los elementos del cuadro de herramientas que se van a recuperar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified designer host.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> que contiene los elementos del cuadro de herramientas actual que están asociados al host del diseñador especificado.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary vsli:raw="Gets a collection of toolbox items from the toolbox that match the specified category.">Obtiene una colección de elementos del cuadro de herramientas que coinciden con la categoría especificada.</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve all the toolbox items from.">Categoría de elementos de cuadro de herramientas a partir de la que se van a recuperar todos los elementos del cuadro de herramientas.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> que contiene los elementos del cuadro de herramientas actual que están asociados a la categoría especificada.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host and category from the toolbox.">Obtiene la colección de elementos del cuadro de herramientas que están asociados al host del diseñador y la categoría especificados.</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve the toolbox items from.">Categoría de elementos de cuadro de herramientas a partir de la que se van a recuperar los elementos del cuadro de herramientas.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que está asociado a los elementos del cuadro de herramientas que se van a recuperar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category and designer host.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> que contiene los elementos del cuadro de herramientas actuales que están asociados al host del diseñador y la categoría especificados.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item matches the specified attributes.">Obtiene un valor que indica si el objeto especificado que representa un elemento del cuadro de herramientas serializado coincide con los atributos especificados.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Objeto que contiene el <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a recuperar.</param>
      <param name="filterAttributes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the attributes to test the serialized object for.">
        <see cref="T:System.Collections.ICollection" /> que contiene los atributos para los que se va a comprobar el objeto serializado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object matches the specified attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto coincide con los atributos especificados; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item can be used by the specified designer host.">Obtiene un valor que indica si el objeto especificado que representa un elemento del cuadro de herramientas serializado puede utilizarse mediante el host del diseñador especificado.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Objeto que contiene el <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a recuperar.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to test for support for the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para el que se va a realizar una comprobación de compatibilidad con <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is compatible with the specified designer host; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto especificado es compatible con el host del diseñador especificado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item.">Obtiene un valor que indica si el objeto especificado es un elemento del cuadro de herramientas serializado.</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">Objeto que se va a inspeccionar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto contiene un objeto de elemento del cuadro de herramientas; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item, using the specified designer host.">Obtiene un valor que indica si el objeto especificado es un elemento del cuadro de herramientas serializado, utilizando el host del diseñador especificado.</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">Objeto que se va a inspeccionar.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is making this request.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que está realizando esta solicitud.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto contiene un objeto de elemento del cuadro de herramientas; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary vsli:raw="Refreshes the state of the toolbox items.">Actualiza el estado de los elementos del cuadro de herramientas.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary vsli:raw="Removes a previously added toolbox item creator of the specified data format.">Quita un creador de elementos previamente agregado con el formato de datos especificado del cuadro de herramientas.</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">Formato de datos del creador que se va quitar.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Removes a previously added toolbox creator that is associated with the specified data format and the specified designer host.">Quita del cuadro de herramientas un creador previamente agregado que está asociado al formato de datos y al host de diseñador especificados.</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">Formato de datos del creador que se va quitar.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the creator to remove.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que está asociado al creador que se va a quitar.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">Quita el elemento especificado del cuadro de herramientas.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a quitar del cuadro de herramientas.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">Quita el elemento especificado del cuadro de herramientas.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a quitar del cuadro de herramientas.</param>
      <param name="category" vsli:raw="The toolbox item category to remove the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; from.">Categoría de elementos del cuadro de herramientas de la que se va a quitar <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary vsli:raw="Gets or sets the name of the currently selected tool category from the toolbox.">Obtiene o establece el nombre de la categoría de herramientas actualmente seleccionada desde el cuadro de herramientas.</summary>
      <returns vsli:raw="The name of the currently selected category.">Nombre de la categoría actualmente seleccionada.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary vsli:raw="Notifies the toolbox service that the selected tool has been used.">Notifica al servicio del cuadro de herramientas que se ha utilizado la herramienta seleccionada.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a serializable object that represents the specified toolbox item.">Obtiene el objeto serializable que representa el elemento especificado del cuadro de herramientas.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to serialize.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a serializar.</param>
      <returns vsli:raw="An object that represents the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Objeto que representa el <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary vsli:raw="Sets the current application's cursor to a cursor that represents the currently selected tool.">Establece el cursor de la aplicación actual en un cursor que representa la herramienta actualmente seleccionada.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the cursor is set by the currently selected tool, &lt;see langword=&quot;false&quot; /&gt; if there is no tool selected and the cursor is set to the standard windows cursor.">Es <see langword="true" /> si el cursor viene establecido por la herramienta actualmente seleccionada, es <see langword="false" /> si no hay ninguna herramienta seleccionada y el cursor está establecido en el cursor estándar de Windows.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified toolbox item.">Selecciona el elemento especificado del cuadro de herramientas.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a seleccionar.</param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary vsli:raw="Defines an interface for setting the currently selected toolbox item and indicating whether a designer supports a particular toolbox item.">Define una interfaz para establecer el elemento del cuadro de herramientas seleccionado actualmente e indica si el diseñador admite un elemento del cuadro de herramientas concreto.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the current designer.">Obtiene un valor que indica si la herramienta especificada es compatible con el diseñador actual.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> para el que se va a realizar una comprobación de compatibilidad con el cuadro de herramientas.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">
        <see langword="true" /> si la herramienta es compatible con el cuadro de herramientas y puede habilitarse; <see langword="false" /> si el diseñador de documentos no sabe cómo utilizar la herramienta.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">Selecciona la herramienta especificada.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a seleccionar.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event that occurs when components are added to the toolbox.">Proporciona datos para el evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> que se produce cuando se agregan componentes al cuadro de herramientas.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />.</summary>
      <param name="components" vsli:raw="The components to include in the toolbox.">Componentes que se van a incluir en el cuadro de herramientas.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary vsli:raw="Gets or sets an array containing the components to add to the toolbox.">Obtiene o establece una matriz que contiene los componentes que se van a agregar al cuadro de herramientas.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; indicating the components to add to the toolbox.">Una matriz de tipo <see cref="T:System.ComponentModel.IComponent" /> que indica los componentes que se van a agregar al cuadro de herramientas.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">Representa el método que controla el evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event that occurs when components are added to the toolbox.">Proporciona datos para el evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> que se produce cuando se agregan componentes al cuadro de herramientas.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />.</summary>
      <param name="host" vsli:raw="The designer host that is making the request.">Host del diseñador que realiza la solicitud.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary vsli:raw="Gets or sets an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components.">Obtiene o establece una instancia de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que genera la solicitud para crear componentes del cuadro de herramientas.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components, or &lt;see langword=&quot;null&quot; /&gt; if no designer host was provided to the toolbox item.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que genera la solicitud para crear componentes del cuadro de herramientas, o <see langword="null" /> si no se ha proporcionado ningún host del diseñador para el elemento del cuadro de herramientas.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">Representa el método que controla el evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary vsli:raw="Provides a base implementation of a toolbox item.">Proporciona una implementación base de un elemento del cuadro de herramientas.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class that creates the specified type of component.">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.ToolboxItem" /> que crea el tipo de componente especificado.</summary>
      <param name="toolType" vsli:raw="The type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates.">Tipo de <see cref="T:System.ComponentModel.IComponent" /> que creará el elemento del cuadro de herramientas.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> se bloqueó.</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains the type or types that the toolbox item creates.">Obtiene o establece el nombre del ensamblado que contiene los tipos que va a crear el elemento de cuadro de herramientas.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly containing the type or types to create.">
        <see cref="T:System.Reflection.AssemblyName" /> que indica el ensamblado que contiene los tipos que se van a crear.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary vsli:raw="Gets or sets a bitmap to represent the toolbox item in the toolbox.">Obtiene o establece un mapa de bits que representa el elemento en el cuadro de herramientas.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">
        <see cref="T:System.Drawing.Bitmap" /> que representa el elemento en el cuadro de herramientas.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary vsli:raw="Throws an exception if the toolbox item is currently locked.">Produce una excepción si el elemento de cuadro de herramientas se encuentra actualmente bloqueado.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> está bloqueado.</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Company">
      <summary vsli:raw="Gets or sets the company name for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Obtiene o establece el nombre de la compañía que se va a mostrar para este elemento <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the company for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Una <see cref="T:System.String" /> que especifica la compañía de este elemento <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary vsli:raw="Occurs immediately after components are created.">Se produce inmediatamente después de la creación de componentes.</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary vsli:raw="Occurs when components are about to be created.">Se produce inmediatamente antes de la creación de componentes.</summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.ComponentType">
      <summary vsli:raw="Gets the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Obtiene el tipo de componente de este <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Una <see cref="T:System.String" /> que especifica el tipo de componente de este <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create.">Crea los componentes que se deben crear según la configuración del elemento de cuadro de herramientas.</summary>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> creados.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host.">Crea los componentes que se deben crear según la configuración del elemento de cuadro de herramientas, utilizando el host del diseñador especificado.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que se utiliza al crear los componentes.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> creados.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host and default values.">Crea los componentes que se deben crear según la configuración del elemento del cuadro de herramientas, utilizando el host del diseñador especificado y los valores predeterminados.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que se utiliza al crear los componentes.</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">Diccionario de pares de nombre/valor de propiedad de los valores predeterminados con los que se va a inicializar el componente.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> creados.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates a component or an array of components when the toolbox item is invoked.">Crea un componente o una matriz de componentes cuando se invoca al elemento de cuadro de herramientas.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to host the toolbox item.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que hospeda el elemento del cuadro de herramientas.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> creados.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates an array of components when the toolbox item is invoked.">Crea una matriz de componentes cuando se invoca el elemento del cuadro de herramientas.</summary>
      <param name="host" vsli:raw="The designer host to use when creating components.">Host del diseñador que se va a utilizar al crear los componentes.</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">Diccionario de pares de nombre/valor de propiedad de los valores predeterminados con los que se va a inicializar el componente.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> creados.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DependentAssemblies">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; for the toolbox item.">Obtiene o establece <see cref="T:System.Reflection.AssemblyName" /> del elemento del cuadro de herramientas.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Reflection.AssemblyName" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Description">
      <summary vsli:raw="Gets or sets the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Obtiene o establece la descripción de este <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Una <see cref="T:System.String" /> que especifica la descripción de este <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Loads the state of the toolbox item from the specified serialization information object.">Carga el estado del elemento de cuadro de herramientas a partir del objeto de información de serialización especificado.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to load from.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> de donde se va a cargar.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que indica las características de la secuencia.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary vsli:raw="Gets or sets the display name for the toolbox item.">Obtiene o establece el nombre en pantalla de este elemento del cuadro de herramientas.</summary>
      <returns vsli:raw="The display name for the toolbox item.">Nombre para mostrar del elemento de cuadro de herramientas.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; instances are equal.">Determina si dos instancias de <see cref="T:System.Drawing.Design.ToolboxItem" /> son iguales.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Objeto <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a comparar con el objeto <see cref="T:System.Drawing.Design.ToolboxItem" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado es igual al objeto <see cref="T:System.Drawing.Design.ToolboxItem" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary vsli:raw="Gets or sets the filter that determines whether the toolbox item can be used on a destination component.">Obtiene o establece el filtro que determina si el elemento del cuadro de herramientas se puede utilizar en un componente de destino.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.ToolboxItemFilterAttribute&quot; /&gt; objects.">
        <see cref="T:System.Collections.ICollection" /> de objetos <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.FilterPropertyValue(System.String,System.Object)">
      <summary vsli:raw="Filters a property value before returning it.">Filtra un valor de propiedad antes de devolverlo.</summary>
      <param name="propertyName" vsli:raw="The name of the property to filter.">Nombre de la propiedad que se va a filtrar.</param>
      <param name="value" vsli:raw="The value against which to filter the property.">Valor con el que se va a filtrar la propiedad.</param>
      <returns vsli:raw="A filtered property value.">Un valor de propiedad filtrado.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Código hash para el objeto <see cref="T:System.Drawing.Design.ToolboxItem" /> actual.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Enables access to the type associated with the toolbox item.">Permite el acceso al tipo asociado al elemento del cuadro de herramientas.</summary>
      <param name="host" vsli:raw="The designer host to query for &lt;see cref=&quot;T:System.ComponentModel.Design.ITypeResolutionService&quot; /&gt;.">Host del diseñador que se utiliza para consultar <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />.</param>
      <returns vsli:raw="The type associated with the toolbox item.">El tipo asociado al elemento del cuadro de herramientas.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of the specified type, optionally using a specified designer host and assembly name.">Crea una instancia del tipo especificado, utilizando opcionalmente un host de diseñador y un nombre de ensamblado especificados.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current document. This can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> del documento actual. Puede ser <see langword="null" />.</param>
      <param name="assemblyName" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly that contains the type to load. This can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.AssemblyName" /> que indica el ensamblado que contiene el tipo que se va a cargar. Puede ser <see langword="null" />.</param>
      <param name="typeName" vsli:raw="The name of the type to create an instance of.">Nombre del tipo del que se va a crear una instancia.</param>
      <param name="reference" vsli:raw="A value indicating whether or not to add a reference to the assembly that contains the specified type to the designer host's set of references.">Valor que indica si se va a agregar o no una referencia al ensamblado que contiene el tipo especificado en el conjunto de referencias del host del diseñador.</param>
      <returns vsli:raw="An instance of the specified type, if it can be located.">Una instancia del tipo especificado si se encuentra.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; is not specified.">No se especificó <paramref name="typeName" />.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary vsli:raw="Initializes the current toolbox item with the specified type to create.">Inicializa el elemento del cuadro de herramientas actual con el tipo especificado que se va a crear.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that the toolbox item creates.">
        <see cref="T:System.Type" /> que crea el elemento del cuadro de herramientas.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> se bloqueó.</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.IsTransient">
      <summary vsli:raw="Gets a value indicating whether the toolbox item is transient.">Obtiene un valor que indica si el elemento del cuadro de herramientas es transitorio.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this toolbox item should not be stored in any toolbox database when an application that is providing a toolbox closes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este elemento del cuadro de herramientas no debe almacenarse en ninguna base de datos del cuadro de herramientas al cerrarse una aplicación que proporcione un cuadro de herramientas, de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary vsli:raw="Locks the toolbox item and prevents changes to its properties.">Bloquea el elemento del cuadro de herramientas e impide que se cambien sus propiedades.</summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is currently locked.">Obtiene un valor que indica si <see cref="T:System.Drawing.Design.ToolboxItem" /> está bloqueado actualmente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the toolbox item is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el elemento del cuadro de herramientas está bloqueado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">Genera el evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />.</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">Genera el evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />.</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.OriginalBitmap">
      <summary vsli:raw="Gets or sets the original bitmap that will be used in the toolbox for this item.">Obtiene o establece el mapa de bits original que se usará en el cuadro de herramientas de este elemento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">
        <see cref="T:System.Drawing.Bitmap" /> que representa el elemento en el cuadro de herramientas.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Properties">
      <summary vsli:raw="Gets a dictionary of properties.">Obtiene un diccionario de propiedades.</summary>
      <returns vsli:raw="A dictionary of name/value pairs (the names are property names and the values are property values).">Un diccionario de pares de nombre/valor (los nombres son nombres de propiedad y los valores son valores de propiedad).</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Saves the state of the toolbox item to the specified serialization information object.">Guarda el estado del elemento del cuadro de herramientas en el objeto de información de serialización especificado.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to save to.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> en el que se va a guardar.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que indica las características de la secuencia.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; method.">Para obtener una descripción de este miembro, vea el método <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">Destino (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />) de esta serialización.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Devuelve una clase <see cref="T:System.String" /> que representa la clase <see cref="T:System.Drawing.Design.ToolboxItem" /> actual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Una clase <see cref="T:System.String" /> que representa la clase <see cref="T:System.Drawing.Design.ToolboxItem" /> actual.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary vsli:raw="Gets or sets the fully qualified name of the type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates when invoked.">Obtiene o establece el nombre completo del tipo de <see cref="T:System.ComponentModel.IComponent" /> que crea el elemento del cuadro de herramientas al ser invocado.</summary>
      <returns vsli:raw="The fully qualified type name of the type of component that this toolbox item creates.">Nombre completo del tipo de componente que crea este elemento del cuadro de herramientas.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyType(System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Validates that an object is of a given type.">Valida que un objeto es de un tipo determinado.</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">Nombre de la propiedad que se va a validar.</param>
      <param name="value" vsli:raw="Optional value against which to validate.">Valor opcional con el que se va a validar.</param>
      <param name="expectedType" vsli:raw="The expected type of the property.">Tipo esperado de la propiedad.</param>
      <param name="allowNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para permitir el valor <see langword="null" />; de lo contrario, es, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;allowNull&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" /> y <paramref name="allowNull" /> es <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not the type specified by &lt;paramref name=&quot;expectedType&quot; /&gt;.">
        <paramref name="value" /> no es el tipo especificado por <paramref name="expectedType" />.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyValue(System.String,System.Object)">
      <summary vsli:raw="Validates a property before it is assigned to the property dictionary.">Valida una propiedad antes de que sea asignada al diccionario de propiedades.</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">Nombre de la propiedad que se va a validar.</param>
      <param name="value" vsli:raw="The value against which to validate.">Valor con el que se va a validar.</param>
      <returns vsli:raw="The value used to perform validation.">El valor utilizado para realizar la validación.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;propertyName&quot; /&gt; is &quot;IsTransient&quot;.">El valor de <paramref name="value" /> es <see langword="null" /> y el valor de <paramref name="propertyName" /> es "IsTransient".</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Version">
      <summary vsli:raw="Gets the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Obtiene la versión de este <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Una <see cref="T:System.String" /> que especifica la versión de este <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary vsli:raw="Represents a collection of toolbox items.">Representa una colección de elementos del cuadro de herramientas.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified array of toolbox items.">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> utilizando la matriz especificada de elementos del cuadro de herramientas.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; containing the toolbox items to fill the collection with.">Matriz de tipo <see cref="T:System.Drawing.Design.ToolboxItem" /> que contiene los elementos del cuadro de herramientas con los que se va a rellenar la colección.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified collection.">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> utilizando la colección especificada.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; to fill the new collection with.">Un objeto <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> con que rellenar la nueva colección.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the collection contains the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Indica si la colección contiene el <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to search the collection for.">El objeto <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a buscar en la colección.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección contiene el objeto especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary vsli:raw="Copies the collection to the specified array beginning with the specified destination index.">Copia la colección en la matriz especificada comenzando por el índice de destino especificado.</summary>
      <param name="array" vsli:raw="The array to copy to.">Matriz en la que se va a copiar.</param>
      <param name="index" vsli:raw="The index to begin copying to.">Índice donde se va a empezar a copiar.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;, if it exists in the collection.">Obtiene el índice del objeto <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado, si existe en la colección.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to get the index of in the collection.">Objeto <see cref="T:System.Drawing.Design.ToolboxItem" /> de donde se va a obtener el índice de la colección.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Índice del objeto <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at the specified index.">Obtiene el objeto <see cref="T:System.Drawing.Design.ToolboxItem" /> en el índice especificado.</summary>
      <param name="index" vsli:raw="The index of the object to get or set.">Índice del objeto que se va a obtener o establecer.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at each valid index in the collection.">Un objeto <see cref="T:System.Drawing.Design.ToolboxItem" /> en cada índice válido de la colección.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary vsli:raw="Provides a callback mechanism that can create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Proporciona un mecanismo de devolución de llamada que puede crear un <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <param name="serializedObject" vsli:raw="The object which contains the data to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">Objeto que contiene los datos para los que se va a crear un <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <param name="format" vsli:raw="The name of the clipboard data format to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">Nombre del formato de datos de Portapapeles para el que se va a crear un objeto <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns vsli:raw="The deserialized &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; object specified by &lt;paramref name=&quot;serializedObject&quot; /&gt;.">Objeto <see cref="T:System.Drawing.Design.ToolboxItem" /> deserializado especificado por <paramref name="serializedObject" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UCOMITypeLib">
      <summary vsli:raw="Use &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ITypeLib&quot; /&gt; instead.">Utilice <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" /> en su lugar.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.">Recupera la cadena de documentación de la biblioteca, el nombre y la ruta de acceso completos del archivo de Ayuda y el identificador de contexto del tema de Ayuda relativo a la biblioteca en el archivo de Ayuda.</summary>
      <param name="index" vsli:raw="Index of the type description whose documentation is to be returned.">Índice de la descripción de tipo cuya documentación se va a devolver.</param>
      <param name="strName" vsli:raw="Returns a string that contains the name of the specified item.">Devuelve una cadena que contiene el nombre del elemento especificado.</param>
      <param name="strDocString" vsli:raw="Returns a string that contains the documentation string for the specified item.">Devuelve una cadena que contiene la cadena de documentación del elemento especificado.</param>
      <param name="dwHelpContext" vsli:raw="Returns the Help context identifier associated with the specified item.">Devuelve el identificador de contexto de Ayuda asociado al elemento específico.</param>
      <param name="strHelpFile" vsli:raw="Returns a string that contains the fully qualified name of the Help file.">Devuelve una cadena que contiene el nombre completo del archivo de Ayuda.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves the structure that contains the library's attributes.">Recupera la estructura que contiene los atributos de la biblioteca.</summary>
      <param name="ppTLibAttr" vsli:raw="On successful return, a structure that contains the library's attributes.">Estructura que contiene los atributos de la biblioteca, si la devolución es correcta.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoCount">
      <summary vsli:raw="Returns the number of type descriptions in the type library.">Devuelve el número de descripciones de tipo de la biblioteca de tipos.</summary>
      <returns vsli:raw="The number of type descriptions in the type library.">Número de descripciones de tipo de la biblioteca de tipos.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Retrieves the type of a type description.">Recupera el tipo de una descripción de tipos.</summary>
      <param name="index" vsli:raw="The index of the type description within the type library.">Índice de la descripción de tipo en la biblioteca de tipos.</param>
      <param name="pTKind" vsli:raw="A reference to the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration for the type description.">Referencia a la enumeración <see langword="TYPEKIND" /> de la descripción de tipo.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.IsName(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether a passed-in string contains the name of a type or member described in the library.">Indica si una cadena que se ha pasado contiene el nombre de un tipo o miembro descrito en la biblioteca.</summary>
      <param name="szNameBuf" vsli:raw="The string to test.">Cadena que se va a comprobar.</param>
      <param name="lHashVal" vsli:raw="The hash value of &lt;paramref name=&quot;szNameBuf&quot; /&gt;.">Valor hash de <paramref name="szNameBuf" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;szNameBuf&quot; /&gt; was found in the type library; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha encontrado <paramref name="szNameBuf" /> en la biblioteca de tipos; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary vsli:raw="Releases the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPELIBATTR&quot; /&gt; originally obtained from &lt;see cref=&quot;M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)&quot; /&gt;.">Libera la estructura <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> que se ha obtenido originalmente de <see cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr" vsli:raw="The &lt;see langword=&quot;TLIBATTR&quot; /&gt; to release.">
        <see langword="TLIBATTR" /> que se va a liberar.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary vsli:raw="Imports ActiveX controls and generates a wrapper that can be accessed by a designer.">Importa controles ActiveX y genera un contenedor al que se puede tener acceso mediante un diseñador.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
      <param name="options" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; that indicates the options for the ActiveX control importer to use.">
        <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> que indica las opciones que va a utilizar el importador de controles ActiveX.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary vsli:raw="Provides methods to resolve references to ActiveX libraries, COM type libraries or assemblies, or managed assemblies.">Proporciona métodos para resolver referencias a bibliotecas ActiveX, ensamblados o bibliotecas de tipos COM, o ensamblados administrados.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an ActiveX control.">Resuelve una referencia a la biblioteca de tipos especificada que contiene un control ActiveX.</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">Referencia a <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> que se va a resolver.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Ruta de acceso completa a un ensamblado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary vsli:raw="Resolves a reference to the specified assembly that contains a COM component.">Resuelve una referencia al ensamblado especificado que contiene un componente COM.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly to resolve a reference to.">
        <see cref="T:System.Reflection.AssemblyName" /> que indica el ensamblado del que se va a resolver una referencia.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Ruta de acceso completa a un ensamblado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an COM component.">Resuelve una referencia a la biblioteca de tipos especificada que contiene un componente COM.</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">Referencia a <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> que se va a resolver.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Ruta de acceso completa a un ensamblado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary vsli:raw="Resolves a reference to the specified assembly.">Resuelve una referencia al ensamblado especificado.</summary>
      <param name="assemName" vsli:raw="The name of the assembly to resolve a reference to.">Nombre del ensamblado del que se va a resolver una referencia.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Ruta de acceso completa a un ensamblado.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary vsli:raw="Represents a set of options for an &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt;.">Representa un conjunto de opciones de un <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary vsli:raw="Specifies whether the generated assembly is strongly named and will be signed later.">Especifica si el ensamblado generado tiene un nombre seguro y se firmará más adelante.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary vsli:raw="Specifies whether sources for the type library wrapper should be generated.">Especifica si se deben generar los orígenes del contenedor de la biblioteca de tipos.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary vsli:raw="Specifies whether to use only input from the command line instead relying on a registered version.">Especifica si se debe usar únicamente la entrada de la línea de comandos en lugar de basarse en una versión registrada.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key container for the generated assemblies.">Especifica la ruta de acceso al archivo que contiene el contenedor de claves de nombre seguro de los ensamblados generados.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key for the generated assemblies.">Especifica la ruta de acceso al archivo que contiene la clave de nombre seguro de los ensamblados generados.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary vsli:raw="Specifies the strong name used for the generated assemblies.">Especifica el nombre seguro utilizado para los ensamblados generados.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary vsli:raw="Specifies whether errors are output in the Microsoft Build Engine (MSBuild) format.">Especifica si los errores se generan en el formato de Microsoft Build Engine (MSBuild).</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary vsli:raw="Indicates whether the ActiveX importer tool logo will be displayed when the control is imported.">Indica si el logotipo de la herramienta ActiveX Importer se mostrará al importar el control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary vsli:raw="Specifies the path to the directory that the generated assemblies will be created in.">Especifica la ruta de acceso al directorio donde se crearán los ensamblados generados.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary vsli:raw="Specifies the filename to generate the ActiveX control wrapper to.">Especifica el nombre de archivo donde se generará el contenedor de controles ActiveX.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary vsli:raw="Specifies whether to overwrite existing files when generating assemblies.">Especifica si se van a sobrescribir los archivos existentes cuando se generen los ensamblados.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary vsli:raw="Specifies the public key used to sign the generated assemblies.">Especifica la clave pública utilizada para firmar los ensamblados generados.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.IReferenceResolver&quot; /&gt; to use to resolve types and references when generating assemblies.">Especifica el <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" /> que se va a utilizar para resolver los tipos y referencias al generar los ensamblados.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary vsli:raw="Specifies whether to compile in silent mode, which generates less displayed information at compile time.">Especifica si la compilación se realizará en modo silencioso, que muestra menos información en tiempo de compilación.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary vsli:raw="Specifies whether to compile in verbose mode, which generates more displayed information at compile time.">Especifica si la compilación se realizará en modo detallado, que muestra más información en tiempo de compilación.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary vsli:raw="Manages a collection of user-interface related &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects. This class cannot be inherited.">Administra una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> relacionados con la interfaz de usuario. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Obtiene o establece la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> asociada a la clase <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> asociado a <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary vsli:raw="Gets or sets a value indicating if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled.">Obtiene o establece un valor que indica si <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> está habilitado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> está habilitado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; collection.">Obtiene la colección <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window.">Obliga a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> a que actualice su ventana de adorno.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt;.">Obliga a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> a que actualice su ventana de adorno dentro del <see cref="T:System.Drawing.Rectangle" /> dado.</summary>
      <param name="rectangle" vsli:raw="The area to invalidate.">Área que se va a invalidar.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt;.">Obliga a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> a que actualice su ventana de adorno dentro del <see cref="T:System.Drawing.Region" /> dado.</summary>
      <param name="region" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt; to invalidate.">
        <see cref="T:System.Drawing.Region" /> que se va a invalidar.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; objects that are managed by a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Representa los objetos <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> administrados por <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> con el valor de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> especificado.</summary>
      <param name="callParentBehavior" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent behavior should be called if it exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se debe llamar al comportamiento primario si existe; de lo contrario, es <see langword="false" />.</param>
      <param name="behaviorService" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to use.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> que se va a usar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callParentBehavior&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, and &lt;paramref name=&quot;behaviorService&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callParentBehavior" /> es <see langword="true" /> y <paramref name="behaviorService" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary vsli:raw="Gets the cursor that should be displayed for this behavior.">Obtiene el cursor que se debe mostrar para este comportamiento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor that should be displayed for this behavior.">
        <see cref="T:System.Windows.Forms.Cursor" /> que representa el cursor que se debe mostrar para este comportamiento.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects should be disabled.">Obtiene un valor que indica si se deben deshabilitar los objetos <see cref="T:System.ComponentModel.Design.MenuCommand" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects the designer receives should have states set to &lt;c&gt;Enabled = false&lt;/c&gt; when this &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; is active; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si todos <see cref="T:System.ComponentModel.Design.MenuCommand" /> los objetos que recibe el diseñador deben tener Estados establecidos en <c>Enabled = False</c> cuando este <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> está activo; <see langword="false" />en caso contrario,.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Intercepts commands.">Intercepta comandos.</summary>
      <param name="commandId" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; object.">Objeto <see cref="T:System.ComponentModel.Design.CommandID" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt;. By default, &lt;see cref=&quot;M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.ComponentModel.Design.MenuCommand" />. De manera predeterminada, <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop behavior.">Permite un comportamiento personalizado de arrastrar y colocar.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; object on which to invoke drag-and-drop behavior.">Un objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el que se invocará el comportamiento de arrastrar y colocar.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-enter behavior.">Permite un comportamiento personalizado de arrastrar y entrar.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-enter behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el que se invocará el comportamiento de arrastrar y entrar.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Permits custom drag-leave behavior.">Permite un comportamiento personalizado de arrastrar y salir.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-leave behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el que se invocará el comportamiento de arrastrar y salir.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-over behavior.">Permite un comportamiento personalizado de arrastrar por encima.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-over behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el que se invocará el comportamiento de arrastrar por encima.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop feedback behavior.">Permite un comportamiento personalizado de información de arrastrar y colocar.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el que se invocará el comportamiento de arrastrar y colocar.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Called by the adorner window when it loses mouse capture.">Lo llama la ventana de adorno cuando pierde la captura del mouse.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el que se invocará el comportamiento de arrastrar y colocar.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any double-click message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Se le llama cuando cualquier mensaje de doble clic entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Un valor <see cref="T:System.Windows.Forms.MouseButtons" /> que indica en qué botón se ha hecho clic.</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">Ubicación en la que se hizo clic.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha administrado el mensaje; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-down message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Se le llama cuando cualquier mensaje de mouse hacia abajo entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Un valor <see cref="T:System.Windows.Forms.MouseButtons" /> que indica en qué botón se ha hecho clic.</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">Ubicación en la que se hizo clic.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha administrado el mensaje; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-enter message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Se le llama cuando cualquier mensaje de entrada del mouse entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha administrado el mensaje; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-hover message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Se le llama cuando cualquier mensaje de mantener el mouse entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="mouseLoc" vsli:raw="The location at which the hover occurred.">Ubicación sobre la que se mantuvo el mouse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha administrado el mensaje; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-leave message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Se le llama cuando cualquier mensaje de salida del mouse entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha administrado el mensaje; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-move message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Se le llama cuando cualquier mensaje de movimiento del mouse entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Un valor <see cref="T:System.Windows.Forms.MouseButtons" /> que indica en qué botón se ha hecho clic.</param>
      <param name="mouseLoc" vsli:raw="The location at which the move occurred.">Ubicación en la que se produjo el movimiento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha administrado el mensaje; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary vsli:raw="Called when any mouse-up message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Se le llama cuando cualquier mensaje de mouse hacia arriba entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Un valor <see cref="T:System.Windows.Forms.MouseButtons" /> que indica en qué botón se ha hecho clic.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha administrado el mensaje; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary vsli:raw="Sends this drag-and-drop event from the adorner window to the appropriate &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; or hit-tested &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Envía este evento de arrastrar y colocar de la ventana de adorno al <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> adecuado o al <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> cuya prueba de detección se ha realizado.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.QueryContinueDragEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events.">Proporciona datos para los eventos <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> y <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />.</summary>
      <param name="dragComponents" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">
        <see cref="T:System.Collections.ICollection" /> de objetos <see cref="T:System.ComponentModel.IComponent" /> que se arrastran actualmente.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary vsli:raw="Gets the list of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">Obtiene la lista de objetos <see cref="T:System.ComponentModel.IComponent" /> que se arrastran actualmente.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">
        <see cref="T:System.Collections.ICollection" /> de objetos <see cref="T:System.ComponentModel.IComponent" /> que se arrastran actualmente.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary vsli:raw="Represents the methods that will handle the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;. This class cannot be inherited.">Representa el método que controlará los eventos <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> y <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> de un control <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />. Esta clase no puede heredarse.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary vsli:raw="Manages user interface in the designer. This class cannot be inherited.">Administra la interfaz de usuario en el diseñador. Esta clase no puede heredarse.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Obtiene la estructura <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns vsli:raw="A collection of adorner.">Colección de adornos.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">Obtiene <see cref="T:System.Drawing.Graphics" /> para la ventana de adorno.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">
        <see cref="T:System.Drawing.Graphics" /> para la ventana de adorno.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary vsli:raw="Translates a &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window to screen coordinates.">Convierte un <see cref="T:System.Drawing.Point" /> de la ventana de adorno en coordenadas de pantalla.</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">Valor <see cref="T:System.Drawing.Point" /> que se va a transformar.</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in screen coordinates.">El valor <see cref="T:System.Drawing.Point" /> transformado, en coordenadas de pantalla.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary vsli:raw="Gets the location of the adorner window in screen coordinates.">Obtiene la ubicación de la ventana de adorno en coordenadas de pantalla.</summary>
      <returns vsli:raw="The location, from the upper-left corner of the adorner window, in screen coordinates.">La ubicación, desde la esquina superior izquierda de la ventana de adorno, en coordenadas de pantalla.</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; starts a drag-and-drop operation.">Se produce cuando <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> inicia una operación de arrastrar y colocar.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Devuelve el <see cref="T:System.Drawing.Rectangle" /> delimitador de un <see cref="T:System.Windows.Forms.Control" />.</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">
        <see cref="T:System.Windows.Forms.Control" /> que se va a convertir.</param>
      <returns vsli:raw="The bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to the adorner window coordinates.">
        <see cref="T:System.Drawing.Rectangle" /> delimitador de un <see cref="T:System.Windows.Forms.Control" /> convertido a las coordenadas de la ventana de adorno.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the location of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to adorner window coordinates.">Devuelve la ubicación de un <see cref="T:System.Windows.Forms.Control" /> convertida en las coordenadas de la ventana de adorno.</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">
        <see cref="T:System.Windows.Forms.Control" /> que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value indicating the location of &lt;paramref name=&quot;c&quot; /&gt; in adorner window coordinates.">Un valor <see cref="T:System.Drawing.Point" /> que indica la ubicación de <paramref name="c" /> en coordenadas de la ventana de adorno.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack without removing it.">Obtiene el <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> en la parte superior de la pila de comportamientos sin quitarlo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> situado al principio de la pila de comportamientos.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Libera todos los recursos que usa <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; completes a drag operation.">Se produce cuando <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> finaliza una operación de arrastre.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; in the behavior stack.">Devuelve el <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> situado inmediatamente detrás del <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> en la pila de comportamientos.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; preceding the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to be returned.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que precede al <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que se va a devolver.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after &lt;paramref name=&quot;behavior&quot; /&gt; in the behavior stack, or &lt;see langword=&quot;null&quot; /&gt; if there is no following behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> situado inmediatamente detrás de <paramref name="behavior" /> en la pila de comportamientos o <see langword="null" /> si no hay ningún comportamiento detrás.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary vsli:raw="Invalidates the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Invalida la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Invalida, dentro de la ventana de adorno, el área especificada de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="rect" vsli:raw="The rectangular area to invalidate.">Área rectangular que se va a invalidar.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Invalida, dentro de la ventana de adorno, el área especificada de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="r" vsli:raw="The region to invalidate.">Región que se va a invalidar.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary vsli:raw="Converts a point in a handle's coordinate system to the adorner window coordinates.">Convierte un punto del sistema de coordenadas de un identificador en las coordenadas de la ventana de adorno.</summary>
      <param name="handle" vsli:raw="An adorner window's handle.">Identificador de una ventana de adorno.</param>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in a handle's coordinate system.">Un <see cref="T:System.Drawing.Point" /> en el sistema de coordenadas de un identificador.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window coordinates.">Un <see cref="T:System.Drawing.Point" /> en las coordenadas de la ventana de adorno.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Removes and returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the stack.">Quita y devuelve el objeto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> situado al principio de la pila.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to remove from the stack.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que se quitará de la pila.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; that was removed from the stack.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que se ha quitado de la pila.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; stack is empty.">La pila de <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> está vacía.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack.">Inserta un <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> en la pila de comportamientos.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que se va a insertar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack and assigns mouse capture to the behavior.">Inserta un <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> en la pila de comportamientos y asigna la captura del mouse al comportamiento.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que se va a insertar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary vsli:raw="Translates a point in screen coordinates into the adorner window coordinates of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Convierte un punto en coordenadas de pantalla en las coordenadas de la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">Valor <see cref="T:System.Drawing.Point" /> que se va a transformar.</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in adorner window coordinates.">El valor <see cref="T:System.Drawing.Point" /> transformado, en coordenadas de la ventana de adorno.</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary vsli:raw="Occurs when the current selection should be refreshed.">Se produce cuando se debe actualizar la selección actual.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary vsli:raw="Synchronizes all selection glyphs.">Sincroniza todos los glifos de selección.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; objects in a strongly typed collection.">Almacena objetos <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> en una colección fuertemente tipada.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given array.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> con la matriz especificada.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to populate the collection.">Una matriz de tipo <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> para rellenar la colección.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> con la referencia <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> especificada.</summary>
      <param name="behaviorService" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">Referencia <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class from an existing &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> a partir de un control <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> ya existente.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; from which to populate the collection.">Control <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> desde el cual rellenar la colección.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Agrega un control <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> con el valor especificado a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to add to the end of the collection.">El objeto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> que se va a agregar al final de la colección.</param>
      <returns vsli:raw="The index at which the new element was inserted.">Índice donde se insertó el nuevo elemento.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Copia los elementos de una matriz al final de la colección <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to copy to the end of the collection.">Matriz de tipo <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> para copiar al final de la colección</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to the end of the collection.">Agrega el contenido de otro objeto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> al final de la colección.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to add to the end of the collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> que se va a agregar al final de la colección.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Obtiene un valor que indica si la colección <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> contiene el objeto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> especificado.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">Clase <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> que se va a localizar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la colección contiene <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">Copia los valores de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> en una instancia de <see cref="T:System.Array" /> unidimensional en el índice especificado.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados desde la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">Índice de <paramref name="array" /> donde se inicia la copia.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.&#xA;&#xA;-or-&#xA;&#xA;The number of elements in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; is greater than the available space between &lt;paramref name=&quot;index&quot; /&gt; and the end of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> es multidimensional.
O bien
El número de elementos de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> es mayor que el espacio disponible entre el <paramref name="index" /> y el final de <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the lower bound of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> es menor que el límite inferior de <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">Devuelve un enumerador que puede iterar a través de la instancia de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">Una interfaz <see cref="T:System.Collections.IEnumerator" /> correspondiente a la instancia de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Returns the index of an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Devuelve el índice de un objeto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> en el objeto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">Clase <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> que se va a localizar.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;, if found; otherwise, -1.">Índice del objeto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> del parámetro <paramref name="value" /> en la colección <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, si se encuentra; de lo contrario, -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; at the specified index.">Inserta <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> en <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Índice basado en cero en el que debe insertarse <paramref name="value" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to insert.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> que se va a insertar.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Índice de base cero del elemento.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; element specified by &lt;paramref name=&quot;index&quot; /&gt;.">Elemento <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> especificado por <paramref name="index" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Quita un objeto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> específico de la colección <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> que se va a quitar de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not found in the collection.">
        <paramref name="value" /> no se encuentra en la colección.</exception>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary vsli:raw="Supports iteration over a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Admite la iteración en una <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" />.</summary>
      <param name="mappings" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; for which to create the enumerator.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> para el cual se crea el enumerador.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary vsli:raw="Gets the current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Obtiene el elemento actual de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns vsli:raw="The current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Elemento actual de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Desplaza el enumerador al siguiente elemento de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator was past the end of the collection.">Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento; es <see langword="false" /> si el enumerador sobrepasó el final de la colección.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Establece el enumerador en su posición inicial (antes del primer elemento de la colección).</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt; property.">Para una descripción de este miembro, consulte la propiedad <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> actual de la colección.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its component.">Asocia un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> a su componente.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Componente al que está asociado el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Componente al que está asociado el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">El constructor <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> al que está asociado <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt;.">Indica si el <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> debe controlar un clic con el mouse en el punto especificado.</summary>
      <param name="p" vsli:raw="A point to hit-test.">Un punto para la prueba de posicionamiento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" /> si el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está asociado a <paramref name="p" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">Proporciona la lógica de dibujo.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics&quot; /&gt; of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene el <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" />  de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary vsli:raw="Gets the component that is associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; .">Obtiene el componente asociado al <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Interfaz <see cref="T:System.ComponentModel.IComponent" /> asociada a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its control.">Asocia un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> a su control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Un <see cref="T:System.Drawing.Rectangle" /> que representa los límites del <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" /> que representa el cursor que se va a mostrar cuando el puntero del mouse se sitúe sobre el elemento <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Componente al que está asociado el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">El constructor <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> al que está asociado <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Un <see cref="T:System.Drawing.Rectangle" /> que representa los límites del <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" /> que representa el cursor que se va a mostrar cuando el puntero del mouse se sitúe sobre el elemento <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Componente al que está asociado el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="designer" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">El constructor <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> al que está asociado <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Obtiene los límites del <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" /> que representa los límites del <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt;.">Indica si el <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> debe controlar un clic con el mouse en el punto especificado.</summary>
      <param name="p" vsli:raw="A point to hit test.">Un punto para la prueba de posicionamiento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" /> si el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está asociado a <paramref name="p" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary vsli:raw="Represents a single user interface (UI) entity managed by an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Representa una entidad de interfaz de usuario (IU) única administrada por <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;. Can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> asociado a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. Puede ser <see langword="null" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Obtiene la <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> asociada a la <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> asociado al <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> o <see langword="null" /> si no hay ningún comportamiento.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Obtiene los límites del <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" /> que representa los límites del <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Provides hit test logic.">Proporciona la lógica de la prueba de detección.</summary>
      <param name="p" vsli:raw="A point to hit-test.">Un punto para la prueba de posicionamiento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" /> si el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está asociado a <paramref name="p" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">Proporciona la lógica de dibujo.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Changes the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Cambia el <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> asociado al <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to associate with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que se va a asociar a la clase <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects in a strongly typed collection.">Almacena objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en una colección fuertemente tipada.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; array.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> con la matriz <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> especificada.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to populate the collection.">Una matriz de tipo <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> para rellenar la colección.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class based on another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> basada en otra clase <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to populate the collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> para rellenar la colección.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Agrega un objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> con el valor especificado a <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to add to the end of the collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que se va a agregar al final de la colección.</param>
      <returns vsli:raw="The index at which the new element was inserted.">Índice donde se insertó el nuevo elemento.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Copia los elementos de una matriz al final de la colección <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to copy to the end of the collection.">Matriz de tipo <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> para copiar al final de la colección.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to the end of the collection.">Agrega el contenido de otro objeto <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> al final de la colección.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to add to the end of the collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> que se va a agregar al final de la colección.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Obtiene un valor que indica si la colección <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> contiene el objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> especificado.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">Clase <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que se va a localizar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la colección contiene <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">Copia los valores de <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> en una instancia de <see cref="T:System.Array" /> unidimensional en el índice especificado.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados desde la clase <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">Índice de <paramref name="array" /> donde se inicia la copia.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Returns the index of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Devuelve el índice de un objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en la colección <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">Clase <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que se va a localizar.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;, if found; otherwise, -1.">Índice del objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> del parámetro <paramref name="value" /> en la colección <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />, si se encuentra; de lo contrario, -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; at the specified index.">Inserta <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Índice basado en cero en el que debe insertarse <paramref name="value" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to insert.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que se va a insertar.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Índice de base cero del elemento.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; element at the specified index.">Elemento <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Quita un objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> específico de la colección <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que se va a quitar de <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary vsli:raw="Describes the designer selection state of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Describe el estado de selección del diseñador de <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is not selected.">El control <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> no está seleccionado.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is selected.">El control <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está seleccionado.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is the primary selection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> es la selección principal.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary vsli:raw="Represents the horizontal and vertical line segments that are dynamically created in the user interface (UI) to assist in the design-time layout of controls in a container. This class cannot be inherited.">Representa los segmentos de línea horizontal y vertical que se crean dinámicamente en la interfaz de usuario para ayudar en el diseño de controles en un contenedor en tiempo de diseño. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type and offset.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> utilizando el tipo y el desplazamiento de la línea de ajuste especificados.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">El objeto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> que se va a crear. Describe la posición relativa y la orientación de la guía de alineación.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">La posición de la línea de ajuste, en píxeles, con respecto al origen superior izquierdo del control propietario.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and filter name.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> utilizando el tipo, el desplazamiento y el nombre de filtro de la línea de ajuste especificados.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">El objeto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> que se va a crear. Describe la posición relativa y la orientación de la guía de alineación.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">La posición de la línea de ajuste, en píxeles, con respecto al origen superior izquierdo del control propietario.</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">
        <see cref="T:System.String" /> que se utiliza para especificar una categoría de líneas de ajuste definida por el programador.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, filter name, and priority.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> utilizando el tipo, el desplazamiento, el nombre de filtro y la prioridad de la línea de ajuste especificados.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">El objeto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> que se va a crear. Describe la posición relativa y la orientación de la guía de alineación.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">La posición de la línea de ajuste, en píxeles, con respecto al origen superior izquierdo del control propietario.</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">
        <see cref="T:System.String" /> que se utiliza para especificar una categoría de líneas de ajuste definida por el programador.</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> de la línea de ajuste.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and priority.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> utilizando el tipo, el desplazamiento y la prioridad de la línea de ajuste especificados.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">El objeto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> que se va a crear. Describe la posición relativa y la orientación de la guía de alineación.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">La posición de la línea de ajuste, en píxeles, con respecto al origen superior izquierdo del control propietario.</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> de la línea de ajuste.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary vsli:raw="Adjusts the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.SnapLine.Offset&quot; /&gt; property of the snapline.">Ajusta la propiedad <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> de la guía de alineación.</summary>
      <param name="adjustment" vsli:raw="The number of pixels to change the snapline offset by.">Número de píxeles que cambiará el desplazamiento de la línea de ajuste.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary vsli:raw="Gets the programmer-defined filter category associated with this snapline.">Obtiene la categoría de filtro definida por el programador asociada a esta línea de ajuste.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the filter category. The default is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.String" /> que define la categoría de filtro. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary vsli:raw="Gets a value indicating whether the snapline has a horizontal orientation.">Obtiene un valor que indica si la línea de ajuste tiene una orientación horizontal.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is horizontal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la línea de ajuste es horizontal; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary vsli:raw="Gets a value indicating whether the snapline has a vertical orientation.">Obtiene un valor que indica si la línea de ajuste tiene una orientación vertical.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is vertical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la línea de ajuste es vertical; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary vsli:raw="Gets the number of pixels that the snapline is offset from the origin of the associated control.">Obtiene el número de píxeles que está desplazada la línea de ajuste con respecto al origen del control asociado.</summary>
      <returns vsli:raw="The offset, in pixels, of the snapline.">Desplazamiento, en píxeles, de la línea de ajuste.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary vsli:raw="Gets a value indicating the relative importance of the snapline.">Obtiene un valor que indica la importancia relativa de la línea de ajuste.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; that represents the priority category of a snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> que representa la categoría de prioridad de una guía de alineación.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary vsli:raw="Returns a value indicating whether the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; should snap to another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">Devuelve un valor que indica si la <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> especificada debe ajustarse a otra <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</summary>
      <param name="line1" vsli:raw="The specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">Objeto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> especificado.</param>
      <param name="line2" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; to which the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; is expected to snap.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> a la que se espera que se ajuste la <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> especificada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;line1&quot; /&gt; should snap to &lt;paramref name=&quot;line2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="line1" /> debe ajustarse a <paramref name="line2" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary vsli:raw="Gets the type of a snapline, which indicates the general location and orientation.">Obtiene el tipo de una línea de ajuste, que indica la ubicación general y la orientación.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; that represents the orientation and general location, relative to control edges, of a snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> que representa la orientación y la ubicación general, con respecto a los bordes del control, de una guía de alineación.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary vsli:raw="Returns a string representation of the current snapline.">Devuelve una representación de cadena de la línea de ajuste actual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">Una clase <see cref="T:System.String" /> que representa la clase <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> actual.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary vsli:raw="Specifies the relative importance of a snapline.">Especifica la importancia relativa de una línea de ajuste.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary vsli:raw="The priority category that is equivalent to the highest priority of all the current snaplines. Indicates that this category of snapline should always be active.">La categoría de prioridad que es equivalente a la prioridad máxima de todas las líneas de ajuste actuales. Indica que esta categoría de línea de ajuste siempre debe estar activa.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary vsli:raw="The highest priority category.">Categoría de prioridad máxima.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary vsli:raw="The lowest priority category.">Categoría de prioridad mínima.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary vsli:raw="The middle priority category.">Categoría de prioridad media.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary vsli:raw="Specifies the orientation and relative location of a snapline.">Especifica la orientación y la ubicación relativa de una línea de ajuste.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary vsli:raw="A horizontal snapline typically associated with a primary internal feature of a control; for example, the base of the text string in a &lt;see cref=&quot;T:System.Windows.Forms.Label&quot; /&gt; control.">Una guía de alineación horizontal asociada normalmente a una característica interna primaria de un control; por ejemplo, la base de la cadena de texto de un control <see cref="T:System.Windows.Forms.Label" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary vsli:raw="A horizontal snapline typically aligned to the bottom edge of a control.">Una guía de alineación horizontal alineada normalmente al borde inferior de un control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary vsli:raw="A horizontal snapline typically not associated with an edge of a control.">Una guía de alineación horizontal no asociada normalmente a un borde de un control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary vsli:raw="A vertical snapline typically aligned to the left edge of a control.">Una guía de alineación vertical alineada normalmente al borde izquierdo de un control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary vsli:raw="A vertical snapline typically aligned to the right edge of a control.">Una guía de alineación vertical alineada normalmente al borde derecho de un control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary vsli:raw="A horizontal snapline typically aligned to the top edge of a control.">Una guía de alineación horizontal alineada normalmente al borde superior de un control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary vsli:raw="A vertical snapline typically not associated with an edge of a control.">Una guía de alineación vertical no asociada normalmente a un borde de un control.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentActionsType" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.All" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Component" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Service" />
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a root design document that supports nested components.">Clase base del diseñador para extender el comportamiento del modo de diseño de un documento de diseño raíz que admite componentes anidados.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary vsli:raw="Gets the control for the designer.">Obtiene el control del diseñador.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; the designer is editing.">
        <see cref="T:System.Windows.Forms.Control" /> que el diseñador está editando.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the designer.">Obtiene un valor que indica si la herramienta especificada es compatible con el diseñador.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> cuya compatibilidad con el cuadro de herramientas se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">Es <see langword="true" /> si la herramienta debe estar habilitada en el cuadro de herramientas; es <see langword="false" /> si el diseñador de documentos no sabe cómo utilizar la herramienta.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Inicializa el diseñador con el componente especificado.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">
        <see cref="T:System.ComponentModel.IComponent" /> que se va a asociar al diseñador.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ajusta el conjunto de propiedades que el componente expondrá mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">
        <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades de la clase del componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">
        <see cref="T:System.ComponentModel.Design.ViewTechnology" /> que indica una tecnología de vista concreta.</param>
      <returns vsli:raw="An object that represents the view for this designer.">Objeto que representa la vista de este diseñador.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">Matriz de valores <see cref="T:System.ComponentModel.Design.ViewTechnology" /> admitidos.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component" vsli:raw="The component to filter the attributes of.">Componente cuyos atributos se van a filtrar.</param>
      <param name="attributes" vsli:raw="A dictionary of attributes that can be modified.">Diccionario de atributos que pueden modificarse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered attributes is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">Es <see langword="true" /> si el conjunto de atributos filtrados se debe guardar en caché; <see langword="false" /> si el servicio de filtros debe volver a consultar.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component" vsli:raw="The component to filter events for.">Componente cuyos eventos se van a filtrar.</param>
      <param name="events" vsli:raw="A dictionary of events that can be modified.">Diccionario de eventos que pueden modificarse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered events is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">Es <see langword="true" /> si el conjunto de eventos filtrados se debe guardar en caché; es <see langword="false" /> si el servicio de filtros debe volver a consultar.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component" vsli:raw="The component to filter properties for.">Componente cuyas propiedades se van a filtrar.</param>
      <param name="properties" vsli:raw="A dictionary of properties that can be modified.">Diccionario de propiedades que pueden modificarse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered properties is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">Es <see langword="true" /> si el conjunto de propiedades filtradas se debe guardar en caché; es <see langword="false" /> si el servicio de filtros debe volver a consultar.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> para el que se va a realizar una comprobación de compatibilidad con el cuadro de herramientas.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">
        <see langword="true" /> si la herramienta es compatible con el cuadro de herramientas y puede habilitarse; <see langword="false" /> si el diseñador de documentos no sabe cómo utilizar la herramienta.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a seleccionar.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in auto-arrange mode.">Obtiene o establece un valor que indica si la bandeja de componentes del diseñador está en modo de organización automática.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in auto-arrange mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la bandeja de componentes del diseñador está en modo de organización automática; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in large icon mode.">Obtiene o establece un valor que indica si la bandeja de componentes del diseñador está en modo de iconos grandes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in large icon mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la bandeja de componentes del diseñador está en modo de iconos grandes; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary vsli:raw="Provides behavior for the component tray of a designer.">Proporciona el comportamiento de la bandeja de componentes de un diseñador.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; class using the specified designer and service provider.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ComponentTray" /> mediante el proveedor de servicios y el diseñador especificados.</summary>
      <param name="mainDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that is the main or document designer for the current project.">
        <see cref="T:System.ComponentModel.Design.IDesigner" /> que es el diseñador principal o de documentos del proyecto actual.</param>
      <param name="serviceProvider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that can be used to obtain design-time services.">
        <see cref="T:System.IServiceProvider" /> que se puede utilizar para obtener servicios en tiempo de diseño.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Adds a component to the tray.">Agrega un componente a la bandeja.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add to the tray.">
        <see cref="T:System.ComponentModel.IComponent" /> que se va a agregar a la bandeja.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the tray items are automatically aligned.">Obtiene o establece un valor que indica si los elementos de la bandeja se alinean automáticamente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tray items are automatically arranged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los elementos de la bandeja se organizan automáticamente; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool can be used to create a new component.">Obtiene un valor que indica si la herramienta especificada se puede utilizar para crear un componente nuevo.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a probar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified tool can be used to create a component; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la herramienta especificada se puede utilizar para crear un componente; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets a value indicating whether the specified component can be displayed.">Obtiene un valor que indica si el componente especificado se puede mostrar.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to test.">
        <see cref="T:System.ComponentModel.IComponent" /> que se va a probar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component can be displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el componente se puede mostrar; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary vsli:raw="Gets the number of components contained in the tray.">Obtiene el número de componentes que contiene la bandeja.</summary>
      <returns vsli:raw="The number of components in the tray.">Número de componentes de la bandeja.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component from the specified toolbox item, adds the component to the current document, and displays a representation for the component in the component tray.">Crea un componente a partir del elemento de cuadro de herramientas especificado, lo agrega al documento actual y muestra una representación suya en la bandeja de componentes.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary vsli:raw="Displays an error message to the user with information about the specified exception.">Muestra un mensaje de error al usuario con información acerca de la excepción especificada.</summary>
      <param name="e" vsli:raw="The exception about which to display information.">Excepción acerca de la cual se va a mostrar información.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Windows.Forms.Design.ComponentTray" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the location of the specified component, relative to the upper-left corner of the component tray.">Obtiene la ubicación del componente especificado con relación a la esquina superior izquierda de la bandeja de componentes.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to retrieve the location of.">
        <see cref="T:System.ComponentModel.IComponent" /> cuya ubicación se va a recuperar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the coordinates of the specified component, or an empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; if the specified component could not be found in the component tray. An empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; has an &lt;see cref=&quot;P:System.Drawing.Point.IsEmpty&quot; /&gt; property equal to &lt;see langword=&quot;true&quot; /&gt; and typically has &lt;see cref=&quot;P:System.Drawing.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Point.Y&quot; /&gt; properties that are each equal to zero.">
        <see cref="T:System.Drawing.Point" /> que indica las coordenadas del componente especificado, o un <see cref="T:System.Drawing.Point" /> vacío si el componente especificado no se encontró en la bandeja de componentes. En un <see cref="T:System.Drawing.Point" /> vacío, su propiedad <see cref="P:System.Drawing.Point.IsEmpty" /> es igual a <see langword="true" /> y, normalmente, sus propiedades <see cref="P:System.Drawing.Point.X" /> y <see cref="P:System.Drawing.Point.Y" /> son igual a cero.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Similar to &lt;see cref=&quot;M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)&quot; /&gt;, this method returns the next component in the tray, given a starting component.">Este método, similar a <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />, devuelve el siguiente componente de la bandeja, dado un componente de inicio.</summary>
      <param name="component" vsli:raw="The component from which to start enumerating.">El componente por el que se empieza a enumerar.</param>
      <param name="forward" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enumerate forward through the list; otherwise, &lt;see langword=&quot;false&quot; /&gt; to enumerate backward.">Es <see langword="true" /> para enumerar hacia delante en la lista; de lo contrario, es <see langword="false" /> para enumerar hacia atrás.</param>
      <returns vsli:raw="The next component in the component tray, or &lt;see langword=&quot;null&quot; /&gt;, if the end of the list is encountered (or the beginning, if &lt;paramref name=&quot;forward&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).">El componente siguiente en la bandeja de componentes o <see langword="null" />, si se encuentra el final de la lista (o el principio, si <paramref name="forward" /> es <see langword="false" />).</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service type.">Obtiene el tipo de servicio solicitado.</summary>
      <param name="serviceType" vsli:raw="The type of the service to retrieve.">Tipo de servicio que se va a recuperar.</param>
      <returns vsli:raw="An instance of the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service could not be found.">Instancia del servicio solicitado, o <see langword="null" /> si no se encuentra ningún servicio.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">Obtiene el valor de la propiedad extensora <see langword="Location" />.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">La interfaz <see cref="T:System.ComponentModel.IComponent" /> que recibe la propiedad extensora location.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">
        <see cref="T:System.Drawing.Point" /> que representa la ubicación de <paramref name="receiver" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Tests a component for presence in the component tray.">Prueba si un componente aparece en la bandeja de componentes.</summary>
      <param name="comp" vsli:raw="The component to test for presence in the component tray.">El componente cuya presencia en la bandeja de componentes se va a probar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;comp&quot; /&gt; is being shown on the tray; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se muestra <paramref name="comp" /> en la bandeja; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object that has been dragged is dropped on the component tray.">Se le llama cuando se suelta un objeto arrastrado en la bandeja de componentes.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over, and has entered the area over, the component tray.">Se le llama cuando se arrastra un objeto y este entra en el área de la bandeja de componentes.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when an object is dragged out of the area over the component tray.">Se le llama cuando se arrastra un objeto fuera del área de la bandeja de componentes.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.EventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over the component tray.">Se le llama cuando se arrastra un objeto sobre la bandeja de componentes.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Called during an OLE drag and drop operation to provide an opportunity for the component tray to give feedback to the user about the results of dropping the object at a specific point.">Se le llama durante una operación de arrastrar y colocar OLE para que la bandeja de componentes pueda ofrecer información al usuario sobre el resultado de colocar el objeto en un punto específico.</summary>
      <param name="gfevent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Layout&quot; /&gt; event.">Genera el evento <see cref="E:System.Windows.Forms.Control.Layout" />.</summary>
      <param name="levent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.LayoutEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Windows.Forms.LayoutEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary vsli:raw="Called when a mouse drag selection operation is canceled.">Se le llama cuando se cancela una operación de selección mediante arrastre del mouse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse is double clicked over the component tray.">Se le llama cuando se hace doble clic en la bandeja de componentes.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.EventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button is pressed.">Se le llama cuando se presiona un botón del mouse.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.MouseEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse cursor position has changed.">Se le llama cuando cambia la posición del cursor del mouse.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.MouseEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button has been released.">Se le llama cuando se libera el botón del mouse.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.MouseEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the view for the component tray should be refreshed.">Se le llama cuando es necesario actualizar la vista de la bandeja de componentes.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary vsli:raw="Called to set the mouse cursor.">Se le llama para establecer el cursor del mouse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes the specified component from the tray.">Quita el componente especificado de la bandeja.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to remove from the tray.">
        <see cref="T:System.ComponentModel.IComponent" /> que se quita de la bandeja.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the location of the specified component to the specified location.">Establece el componente especificado en la ubicación especificada.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to set the location of.">
        <see cref="T:System.ComponentModel.IComponent" /> cuya ubicación se va a establecer.</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the new location for the specified component.">
        <see cref="T:System.Drawing.Point" /> que indica la nueva ubicación del componente especificado.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">Establece el valor de la propiedad extensora <see langword="Location" />.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">La interfaz <see cref="T:System.ComponentModel.IComponent" /> que recibe la propiedad extensora location.</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">
        <see cref="T:System.Drawing.Point" /> que representa la ubicación de <paramref name="receiver" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary vsli:raw="Gets or sets a value indicating whether the tray displays a large icon to represent each component in the tray.">Obtiene o establece un valor que indica si la bandeja muestra un icono grande para representar cada componente de la bandeja.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if large icons are displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se muestran iconos grandes; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />.</summary>
      <param name="extendee" vsli:raw="The object to receive the extender properties.">Objeto que va a recibir las propiedades extensoras.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object can provide extender properties to the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />si este objeto puede proporcionar propiedades extensoras al objeto especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Procesa los mensajes de Windows.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">
        <see cref="T:System.Windows.Forms.Message" /> para procesar.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Extiende el comportamiento de un objeto <see cref="T:System.Windows.Forms.Control" /> en modo de diseño.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary vsli:raw="Specifies the accessibility object for the designer.">Especifica el objeto de accesibilidad para el diseñador.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">Obtiene <see cref="T:System.Windows.Forms.AccessibleObject" /> asignado al control.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">
        <see cref="T:System.Windows.Forms.AccessibleObject" /> asignado al control.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">Obtiene la colección de componentes asociados al componente administrado por el diseñador.</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">Componentes asociados al componente administrado por el diseñador.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary vsli:raw="Gets or sets a value indicating whether resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; property.">Obtiene o establece un valor que indica si la asignación del controlador de cambio de tamaño depende del valor de la propiedad <see cref="P:System.Windows.Forms.Control.AutoSize" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; and &lt;see langword=&quot;AutoSizeMode&quot; /&gt; properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la asignación del controlador de cambio de tamaño depende del valor de las propiedades <see cref="P:System.Windows.Forms.Control.AutoSize" /> y <see langword="AutoSizeMode" />; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Procesa los mensajes de Windows.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">
        <see cref="T:System.Windows.Forms.Message" /> para procesar.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; from the design environment.">Obtiene el <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> del entorno de diseño.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service is unavailable.">El <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> o <see langword="null" /> si el servicio no está disponible.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary vsli:raw="Indicates if this designer's control can be parented by the control of the specified designer.">Indica si el control del diseñador especificado puede ser el principal de este control de diseñador.</summary>
      <param name="parentDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that manages the control to check.">
        <see cref="T:System.ComponentModel.Design.IDesigner" /> que administra el control que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can parent the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el control administrado por el diseñador especificado puede ser principal del control que administra este diseñador; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary vsli:raw="Gets the control that the designer is designing.">Obtiene el control que diseña el diseñador.</summary>
      <returns vsli:raw="The control that the designer is designing.">Control que diseña el diseñador.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; for &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Proporciona un <see cref="T:System.Windows.Forms.AccessibleObject" /> para <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject&quot; /&gt; class using the specified designer and control.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> con el diseñador y control especificados.</summary>
      <param name="designer" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; for the accessible object.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> para el objeto accesible.</param>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the accessible object.">
        <see cref="T:System.Windows.Forms.Control" /> para el objeto accesible.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary vsli:raw="Gets the points that define the boundaries of the accessible object for the designer.">Obtiene los puntos que definen los límites del objeto accesible para el diseñador.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that indicates the boundaries of the accessible object for the designer.">
        <see cref="T:System.Drawing.Rectangle" /> que indica los límites del objeto accesible para el diseñador.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary vsli:raw="Gets a string that describes the default action of the specified object.">Obtiene una cadena que describe la acción predeterminada del objeto especificado.</summary>
      <returns vsli:raw="A description of the default action for a specified object.">Descripción de la acción predeterminada para un objeto especificado.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary vsli:raw="Gets a string that describes the visual appearance of the specified object.">Obtiene una cadena que describe la apariencia visual del objeto especificado.</summary>
      <returns vsli:raw="A description of the object's visual appearance to the user, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a description.">Descripción para el usuario de la apariencia visual del objeto o <see langword="null" /> si el objeto no tiene descripción.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary vsli:raw="Retrieves the accessible child corresponding to the specified index.">Recupera el elemento secundario accesible correspondiente al índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the accessible child.">Índice de base cero del elemento secundario accesible.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the accessible child corresponding to the specified index.">
        <see cref="T:System.Windows.Forms.AccessibleObject" /> que representa el secundario accesible correspondiente al índice especificado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary vsli:raw="Retrieves the number of children belonging to an accessible object.">Recupera el número de elementos secundarios que pertenecen a un objeto accesible.</summary>
      <returns vsli:raw="The number of children belonging to an accessible object.">Número de elementos secundarios que pertenecen a un objeto accesible.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary vsli:raw="Retrieves the object that has the keyboard focus.">Recupera el objeto que tiene el foco de teclado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns &lt;see langword=&quot;null&quot; /&gt; if no object has focus.">
        <see cref="T:System.Windows.Forms.AccessibleObject" /> que especifica el secundario que tiene el foco actualmente. Este método devuelve el objeto de llamada si el propio objeto tiene el foco. Devuelve <see langword="null" /> si ningún objeto tiene el foco.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary vsli:raw="Retrieves the currently selected child.">Recupera el secundario seleccionado actualmente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns &lt;see langword=&quot;null&quot; /&gt; if is no child is currently selected and the object itself does not have focus.">
        <see cref="T:System.Windows.Forms.AccessibleObject" /> que representa el secundario seleccionado actualmente. Este método devuelve el objeto de llamada si el propio objeto está seleccionado. Devuelve <see langword="null" /> si no hay ningún secundario seleccionado actualmente y el propio objeto no tiene el foco.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary vsli:raw="Retrieves the child object at the specified screen coordinates.">Recupera el objeto secundario que se encuentra en las coordenadas de pantalla especificadas.</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate.">Coordenada horizontal de la pantalla.</param>
      <param name="y" vsli:raw="The vertical screen coordinate.">Coordenada vertical de la pantalla.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns &lt;see langword=&quot;null&quot; /&gt; if no object is at the tested location.">
        <see cref="T:System.Windows.Forms.AccessibleObject" /> que representa el objeto secundario en las coordenadas de la pantalla proporcionadas. Este método devuelve el objeto de llamada si el propio objeto está en la ubicación especificada. Devuelve <see langword="null" /> si ningún objeto está en la ubicación probada.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary vsli:raw="Gets or sets the object name.">Obtiene o establece el nombre del objeto.</summary>
      <returns vsli:raw="The object name, or &lt;see langword=&quot;null&quot; /&gt; if the property has not been set.">Nombre del objeto o <see langword="null" /> si no se ha establecido la propiedad.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary vsli:raw="Gets the parent of an accessible object.">Obtiene el primario de un objeto accesible.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the parent of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent object.">
        <see cref="T:System.Windows.Forms.AccessibleObject" /> que representa el primario de un objeto accesible o <see langword="null" /> si no hay ningún objeto primario.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary vsli:raw="Gets the role of this accessible object.">Obtiene la función de este objeto accesible.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleRole&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleRole.None&quot; /&gt; if no role has been specified.">Uno de los valores de <see cref="T:System.Windows.Forms.AccessibleRole" /> o <see cref="F:System.Windows.Forms.AccessibleRole.None" /> si no se ha especificado ningún rol.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary vsli:raw="Gets the state of this accessible object.">Obtiene el estado de este objeto accesible.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleStates&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleStates.None&quot; /&gt;, if no state has been set.">Uno de los valores de <see cref="T:System.Windows.Forms.AccessibleStates" /> o <see cref="F:System.Windows.Forms.AccessibleStates.None" /> si no se ha establecido el estado.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary vsli:raw="Gets or sets the value of an accessible object.">Obtiene o establece el valor de un objeto accesible.</summary>
      <returns vsli:raw="The value of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if the object has no value set.">Valor de un objeto accesible o <see langword="null" /> si el objeto no tiene ningún valor establecido.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Provides default processing for Windows messages.">Proporciona procesamiento predeterminado para los mensajes de Windows.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">
        <see cref="T:System.Windows.Forms.Message" /> para procesar.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary vsli:raw="Displays information about the specified exception to the user.">Muestra información al usuario acerca de la excepción especificada.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; to display.">
        <see cref="T:System.Exception" /> que se va a mostrar.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary vsli:raw="Enables design time functionality for a child control.">Habilita la funcionalidad en tiempo de diseño para un control secundario.</summary>
      <param name="child" vsli:raw="The child control for which design mode will be enabled.">El control secundario para el que se habilitará el modo de diseño.</param>
      <param name="name" vsli:raw="The name of &lt;paramref name=&quot;child&quot; /&gt; as exposed to the end user.">El nombre de <paramref name="child" /> tal y como se expone al usuario final.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the child control could be enabled for design time; &lt;see langword=&quot;false&quot; /&gt; if the hosting infrastructure does not support it.">Es <see langword="true" /> si el control secundario se puede habilitar para el tiempo de diseño; es <see langword="false" /> si la infraestructura host no lo permite.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;child&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="child" /> o <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary vsli:raw="Enables or disables drag-and-drop support for the control being designed.">Habilita o deshabilita la compatibilidad con arrastrar y colocar del control que se está diseñando.</summary>
      <param name="value" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable drag-and-drop support for the control; &lt;see langword=&quot;false&quot; /&gt; if the control should not have drag-and-drop support. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para habilitar en el control la compatibilidad con arrastrar y colocar; es <see langword="false" /> si el control no admitirá la operación de arrastrar y colocar. De manera predeterminada, es <see langword="false" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles can be drawn on this designer component.">Obtiene un valor que indica si se pueden dibujar rectángulos de arrastre en este componente del diseñador.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles can be drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se pueden dibujar rectángulos de arrastre; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">Devuelve <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> que representa los límites de este control.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Un valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica el estado de la selección.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">Un <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> que representa los límites de este control.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">Obtiene una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que representan los bordes de selección y los identificadores de agarre de un control estándar.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Un valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica el estado de la selección.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">Indica si el control debe controlar un clic con el mouse en el punto especificado.</summary>
      <param name="point" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">
        <see cref="T:System.Drawing.Point" /> que indica la posición en que se ha hecho clic con el mouse, en coordenadas de la pantalla.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el control controla un clic en el punto especificado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages from the child controls of the specified control to the designer.">Enruta los mensajes desde los controles secundarios del control especificado al diseñador.</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">Primer <see cref="T:System.Windows.Forms.Control" /> secundario que se va a procesar. Este método se puede llamar a sí mismo de forma recursiva para los secundarios del control.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the designer.">Obtiene el <see cref="T:System.ComponentModel.InheritanceAttribute" /> del diseñador.</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.ComponentModel.InheritanceAttribute.Inherited&quot; /&gt; if the designer is a root designer; otherwise, the value of the parent designer's &lt;see cref=&quot;P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute&quot; /&gt; property.">Es <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> si el diseñador es un diseñador raíz; de lo contrario, es el valor de la propiedad <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> del diseñador primario.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Inicializa el diseñador con el componente especificado.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the designer with. This component must always be an instance of, or derive from, &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">
        <see cref="T:System.ComponentModel.IComponent" /> que se va a asociar al diseñador. Este componente siempre debe ser una instancia o derivar de <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Re-initializes an existing component.">Vuelve a inicializar un componente existente.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Diccionario de nombres/valores de los valores predeterminados que se van a aplicar a las propiedades. Puede ser <see langword="null" /> si no se especifican valores predeterminados.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">Inicializa un componente recién creado.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Diccionario de nombres/valores de los valores predeterminados que se van a aplicar a las propiedades. Puede ser <see langword="null" /> Si no hay ningún valor predeterminado especificado.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary vsli:raw="Returns the internal control designer with the specified index in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Devuelve al diseñador de controles internos el índice especificado en <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <param name="internalControlIndex" vsli:raw="A specified index to select the internal control designer. This index is zero-based.">Un índice especificado para seleccionar el diseñador de controles internos. Este índice se basa en cero.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; at the specified index.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> que se encuentra en el índice especificado.</returns>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary vsli:raw="Defines a local &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that represents the values of an invalid &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;.">Define un <see cref="T:System.Drawing.Point" /> local que representa los valores de un <see cref="T:System.Drawing.Point" /> no válido.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary vsli:raw="Returns the number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Devuelve el número de diseñadores de controles internos en <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns vsli:raw="The number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">El número de diseñadores de controles internos en <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.">Muestra el menú contextual y permite realizar otros procesos adicionales cuando el menú contextual está a punto de mostrarse.</summary>
      <param name="x" vsli:raw="The x coordinate at which to display the context menu.">Coordenada x donde se va a mostrar el menú contextual.</param>
      <param name="y" vsli:raw="The y coordinate at which to display the context menu.">Coordenada y donde se va a mostrar el menú contextual.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary vsli:raw="Provides an opportunity to perform additional processing immediately after the control handle has been created.">Permite realizar otros procesos adicionales inmediatamente después de crear el identificador del control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call to clean up a drag-and-drop operation.">Recibe una llamada para limpiar una operación de arrastrar y colocar.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dropped onto the control designer view.">Recibe una llamada cuando se coloca un objeto de arrastrar y colocar en la vista del diseñador del control.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation enters the control designer view.">Recibe una llamada cuando una operación de arrastrar y colocar entra en la vista del diseñador del control.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation leaves the control designer view.">Recibe una llamada cuando una operación de arrastrar y colocar sale de la vista del diseñador del control.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.EventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dragged over the control designer view.">Recibe una llamada cuando se arrastra un objeto de arrastrar y colocar en la vista del diseñador del control.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.">Recibe una llamada mientras se está realizando una operación de arrastrar y colocar para proporcionar guías visuales basadas en la ubicación del mouse cuando se está realizando una operación de arrastre.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call in response to the left mouse button being pressed and held while over the component.">Recibe una llamada cuando se presiona el botón primario del mouse y se mantiene presionado mientras está sobre el componente.</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">Posición x del mouse, en coordenadas de pantalla.</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">Posición y del mouse, en coordenadas de pantalla.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.">Recibe una llamada al final de una operación de arrastrar y colocar para terminar o cancelar la operación.</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag; &lt;see langword=&quot;false&quot; /&gt; to commit it.">Es <see langword="true" /> para cancelar la operación de arrastrar; es <see langword="false" /> para confirmarla.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call for each movement of the mouse during a drag-and-drop operation.">Recibe una llamada en cada movimiento del mouse durante una operación de arrastrar y colocar.</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">Posición x del mouse, en coordenadas de pantalla.</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">Posición y del mouse, en coordenadas de pantalla.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">Recibe una llamada cuando el mouse entra en el control por primera vez.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary vsli:raw="Receives a call after the mouse hovers over the control.">Recibe una llamada después de que el mouse se desplace sobre el control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">Recibe una llamada cuando el mouse entra en el control por primera vez.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">Recibe una llamada cuando el control que el diseñador está administrando tiene su superficie dibujada, de manera que el diseñador pueda dibujar otros adornos en la parte superior del control.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; the designer can use to draw on the control.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> que el diseñador puede utilizar para dibujar en el control.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Called when the designer is initialized.">Se llama cuando se inicializa el diseñador.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary vsli:raw="Receives a call each time the cursor needs to be set.">Recibe una llamada cada vez que es necesario establecer el cursor.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Obtiene el componente principal de <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns vsli:raw="The parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt; if there is no parent component.">El componente principal para <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; de lo contrario, es <see langword="null" /> si no hay ningún componente principal.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation.">Obtiene un valor que indica si <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> permitirá la alineación de las líneas de ajuste durante una operación de arrastre.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> permitirá la alineación de las líneas de ajuste durante una operación de arrastre cuando el control de arrastre primario esté sobre este diseñador; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ajusta el conjunto de propiedades que el componente expone mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; containing the properties for the class of the component.">
        <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades de la clase del componente.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary vsli:raw="Gets the selection rules that indicate the movement capabilities of a component.">Obtiene las reglas de selección que indican las posibilidades de movimiento de un componente.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">Combinación bit a bit de valores <see cref="T:System.Windows.Forms.Design.SelectionRules" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Obtiene una lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representan los puntos de alineación significativos de este control.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representan los puntos de alineación significativos de este control.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages for the children of the specified control to each control rather than to a parent designer.">Enruta los mensajes para los secundarios del control especificado a cada uno de los controles en lugar de a un diseñador principal.</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">Primer <see cref="T:System.Windows.Forms.Control" /> secundario que se va a procesar. Este método se puede llamar a sí mismo de forma recursiva para los secundarios del control.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and optionally routes them to the control.">Procesa los mensajes de Windows y, de forma opcional, los enruta al control.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">
        <see cref="T:System.Windows.Forms.Message" /> para procesar.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary vsli:raw="Provides access to get and set option values for a designer.">Proporciona acceso para obtener y establecer los valores de las opciones de un diseñador.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.DesignerOptions" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary vsli:raw="Gets or sets a value that enables or disables in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls.">Obtiene o establece un valor que habilita o deshabilita la edición en contexto para los controles <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si la edición en contexto para los controles <see cref="T:System.Windows.Forms.ToolStrip" /> está habilitada; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">Obtiene o establece un <see cref="T:System.Drawing.Size" /> que representa las dimensiones de una unidad de la cuadrícula.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">Un <see cref="T:System.Drawing.Size" /> que representa las dimensiones de una unidad de la cuadrícula.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary vsli:raw="Gets or sets a value that specifies whether a designer shows a component's smart tag panel automatically on creation.">Obtiene o establece un valor que especifica si un diseñador muestra automáticamente el panel de etiquetas inteligentes de un componente durante su creación.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow a component's smart tag panel to open automatically upon creation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> para permitir que el panel de etiquetas inteligentes de un componente se abra automáticamente durante su creación; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables the grid in the designer.">Obtiene o establece un valor que habilita o deshabilita la cuadrícula en el diseñador.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the grid is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si la cuadrícula está habilitada; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables whether controls are automatically placed at grid coordinates.">Obtiene o establece un valor que habilita o deshabilita si los controles se colocan automáticamente en las coordenadas de la cuadrícula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snapping is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el ajuste está habilitado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary vsli:raw="Gets or sets a value that enables or disables the component cache.">Obtiene o establece un valor que habilita o deshabilita la caché de componentes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component cache is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si la caché de componentes está habilitada; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary vsli:raw="Gets or sets a value that enables or disables smart tags in the designer.">Obtiene o establece un valor que habilita o deshabilita las etiquetas inteligentes en el diseñador.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if smart tags in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si las etiquetas inteligentes están habilitadas en el diseñador; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary vsli:raw="Gets or sets a value that enables or disables snaplines in the designer.">Obtiene o establece un valor que habilita o deshabilita las líneas de ajuste en el diseñador.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snaplines in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si las líneas de ajuste del diseñador están habilitadas; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of, and providing a root-level design mode view for, a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls and should receive scroll messages.">Clase de diseñador base para extender el comportamiento del modo de diseño y para el que proporcionar una vista de modo de diseño de nivel raíz, un <see cref="T:System.Windows.Forms.Control" /> que admita controles anidados y deba recibir mensajes de desplazamiento.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.DocumentDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>Comprueba la existencia de un servicio de editor de menús y, si no hay, crea uno.</summary>
      <param name="c">
        <see cref="T:System.ComponentModel.IComponent" /> que garantiza que hay un servicio de menús contextuales.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; representing the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Obtiene <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> que representa los objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Un valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica el estado de la selección.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the specified tool is supported by the designer.">Indica si la herramienta especificada es compatible con el diseñador.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> cuya compatibilidad con el cuadro de herramientas se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">Es <see langword="true" /> si la herramienta debe estar habilitada en el cuadro de herramientas; es <see langword="false" /> si el diseñador de documentos no sabe cómo utilizar la herramienta.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Inicializa el diseñador con el componente especificado.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">
        <see cref="T:System.ComponentModel.IComponent" /> que se va a asociar al diseñador.</param>
    </member>
    <member name="F:System.Windows.Forms.Design.DocumentDesigner.menuEditorService">
      <summary>Inicializa la variable menuEditorService en <see langword="null" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Called when the context menu should be displayed.">Se le llama cuando se debe mostrar el menú contextual.</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate to display the context menu at.">Coordenada de pantalla horizontal donde se va a mostrar el menú contextual.</param>
      <param name="y" vsli:raw="The vertical screen coordinate to display the context menu at.">Coordenada de pantalla vertical donde se va a mostrar el menú contextual.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary vsli:raw="Called immediately after the handle for the designer has been created.">Se le llama inmediatamente después de crear el identificador del diseñador.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ajusta el conjunto de propiedades que el componente expone mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">
        <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades de la clase del componente.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; for the designer.">Obtiene <see cref="T:System.Windows.Forms.Design.SelectionRules" /> para el diseñador.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">Combinación bit a bit de valores <see cref="T:System.Windows.Forms.Design.SelectionRules" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">
        <see cref="T:System.ComponentModel.Design.ViewTechnology" /> que indica una tecnología de vista concreta.</param>
      <returns vsli:raw="An object that represents the view for this designer.">Objeto que representa la vista de este diseñador.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">Matriz de valores <see cref="T:System.ComponentModel.Design.ViewTechnology" /> admitidos.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> para el que se va a realizar una comprobación de compatibilidad con el cuadro de herramientas.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">
        <see langword="true" /> si la herramienta es compatible con el cuadro de herramientas y puede habilitarse; <see langword="false" /> si el diseñador de documentos no sabe cómo utilizar la herramienta.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a seleccionar.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">Selecciona la herramienta especificada.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component for.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> para el que se va a crear un componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Procesa los mensajes de Windows.</summary>
      <param name="m">
        <see cref="T:System.Windows.Forms.Message" /> para procesar.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary vsli:raw="Provides a systematic way to manage event handlers for the current document.">Proporciona una manera sistemática de administrar los controladores de eventos para el documento actual.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.EventHandlerService&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.EventHandlerService" />.</summary>
      <param name="focusWnd" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which is being designed.">Control <see cref="T:System.Windows.Forms.Control" /> que se está diseñado.</param>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary vsli:raw="Fires an OnEventHandlerChanged event.">Se desencadena un evento OnEventHandlerChanged.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary vsli:raw="Gets the control to which event handlers are attached.">Obtiene el control al que están asociados los controladores de eventos.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which was attached through the constructor.">Control <see cref="T:System.Windows.Forms.Control" /> asociado mediante el constructor.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary vsli:raw="Gets the currently active event handler of the specified type.">Obtiene el controlador de eventos actualmente activo del tipo especificado.</summary>
      <param name="handlerType" vsli:raw="The type of the handler to get.">Tipo del controlador que se va a obtener.</param>
      <returns vsli:raw="An instance of the handler, or &lt;see langword=&quot;null&quot; /&gt; if there is no handler of the requested type.">Instancia del controlador o <see langword="null" /> si no hay ningún controlador del tipo solicitado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary vsli:raw="Pops the given handler off of the stack.">Extrae el controlador especificado de la pila.</summary>
      <param name="handler" vsli:raw="The handler to remove from the stack.">Controlador que se va a quitar de la pila.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary vsli:raw="Pushes a new event handler on the stack.">Inserta un nuevo controlador de eventos en la pila.</summary>
      <param name="handler" vsli:raw="The handler to add to the stack.">El controlador que se va a agregar a la pila.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary vsli:raw="Defines a method for getting information about how the scrollbars of windows need to be themed when displayed in the Visual Studio designer.">Define un método para obtener información sobre cómo las barras de desplazamiento de ventanas han de ser temáticas al mostrarlas en el diseñador de Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary vsli:raw="Gets an enumeration of &lt;see cref=&quot;T:System.Windows.Forms.Design.ThemedScrollbarWindow&quot; /&gt; objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">Obtiene una enumeración de objetos <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" /> que representan las ventanas y cómo las barras de desplazamiento han de ser temáticas al mostrarlas en el diseñador de Visual Studio.</summary>
      <returns vsli:raw="An enumeration of objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">Una enumeración de objetos que representan las ventanas y cómo las barras de desplazamiento han de ser temáticas al mostrarlas en el diseñador de Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary vsli:raw="Serializes string dictionaries.">Serializa los diccionarios de cadenas.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ImageListCodeDomSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized Code Document Object Model (CodeDOM) object into an object.">Deserializa en un objeto el objeto CodeDOM (Code Document Object Model) serializado especificado.</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">Interfaz del administrador de serialización que se utiliza durante el proceso de deserialización.</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">Objeto CodeDOM serializado que se va a deserializar.</param>
      <returns vsli:raw="The deserialized CodeDOM object.">Objeto CodeDOM deserializado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="codeObject" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a Code Document Object Model (CodeDOM) object.">Serializa el objeto especificado en un objeto CodeDOM (Code Document Object Model).</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">Administrador de serialización que se va a utilizar durante la serialización.</param>
      <param name="value" vsli:raw="The object to serialize.">Objeto que se va a serializar.</param>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">Objeto CodeDOM que representa el objeto que se ha serializado.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.IMenuEditorService">
      <summary>Proporciona acceso al servicio de edición de menús.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.GetMenu">
      <summary>Obtiene el menú actual.</summary>
      <returns>Objeto <see cref="T:System.Windows.Forms.Menu" /> actual.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.IsActive">
      <summary>Indica si el menú actual está activo.</summary>
      <returns>Es <see langword="true" /> si el menú está activo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.MessageFilter(System.Windows.Forms.Message@)">
      <summary>Permite al servicio del editor interceptar los mensajes Win32.</summary>
      <param name="m">
        <see cref="T:System.Windows.Forms.Message" /> para procesar.</param>
      <returns>Es <see langword="true" /> si el mensaje está dirigido al control; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetMenu(System.Windows.Forms.Menu)">
      <summary>Hace visible el menú especificado en el formulario.</summary>
      <param name="menu">El objeto <see cref="T:System.Windows.Forms.Menu" /> que se va a representar.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetSelection(System.Windows.Forms.MenuItem)">
      <summary>Establece el elemento de menú seleccionado del menú actual.</summary>
      <param name="item">Objeto <see cref="T:System.Windows.Forms.MenuItem" /> para establecer como el elemento de menú actualmente seleccionado.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary vsli:raw="Defines a set of &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; fields that each correspond to a command function provided by the host environment.">Define un conjunto de campos <see cref="T:System.ComponentModel.Design.CommandID" />, cada uno de los cuales corresponde a una función de comando proporcionada por el entorno del host.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.MenuCommands&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.MenuCommands" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the component tray menu.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso al menú de la bandeja de componentes.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the container menu.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso al menú contenedor.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the properties page for the designer.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso a la página de propiedades del diseñador.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the edit label handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador para editar etiquetas.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the cancel key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso al controlador de la tecla de cancelación.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the default key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso al controlador de la tecla predeterminada.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the end key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla Fin.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the home key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla Inicio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the smart tag invocation handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de invocación de etiqueta inteligente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move down key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite mover hacia abajo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move left key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite mover a la izquierda.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move right key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite mover a la derecha.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move up key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite mover hacia arriba.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge down key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite desplazar hacia abajo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height decrease key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite reducir el alto.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height increase key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite aumentar el alto.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge left key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite desplazar a la izquierda.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge right key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite desplazar a la derecha.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge up key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite desplazar hacia arriba.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width decrease key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite reducir el ancho.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width increase key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite aumentar el ancho.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the reverse cancel key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite invertir la cancelación.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select next key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite seleccionar lo siguiente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select previous key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite seleccionar lo anterior.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-END key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de las teclas MAYÚS-FIN.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-HOME key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de las teclas MAYÚS-INICIO.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height decrease key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite reducir el alto del tamaño.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height increase key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite aumentar el alto del tamaño.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width decrease key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite reducir el ancho del tamaño.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width increase key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite aumentar el ancho del tamaño.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tab order select key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla de seleccionar el orden de tabulación.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the selection menu.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso al menú de selección.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para establecer el rectángulo de estado.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle text.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para establecer el texto del rectángulo de estado.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tray selection menu.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso al menú de selección de la bandeja.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls.">Extiende el comportamiento del modo de diseño de <see cref="T:System.Windows.Forms.Control" /> que admite controles anidados.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary vsli:raw="Adds padding snaplines.">Agrega las líneas de ajuste del relleno.</summary>
      <param name="snapLines" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects.">Control <see cref="T:System.Collections.ArrayList" /> que contiene los objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary vsli:raw="Gets a value indicating whether selected controls will be re-parented.">Obtiene un valor que indica si los controles seleccionados volverán a ser principales.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the controls that were selected by lassoing on the designer's surface will be re-parented to this designer's control.">Es <see langword="true" /> si los controles que se seleccionaron mediante lazo en la superficie del diseñador se volverán a hacer primarios de este control de diseñador.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary vsli:raw="Gets a value indicating whether a generic drag box should be drawn when dragging a toolbox item over the designer's surface.">Obtiene un valor que indica si se debe dibujar un cuadro de arrastre genérico al arrastrar un elemento del cuadro de herramientas sobre la superficie del diseñador.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a generic drag box should be drawn when dragging a toolbox item over the designer's surface; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si se debe dibujar un cuadro de arrastre genérico al arrastrar un elemento del cuadro de herramientas sobre la superficie del diseñador; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary vsli:raw="Gets a value indicating whether the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;.">Obtiene un valor que indica si se debe mantener el orden Z de los controles arrastrados cuando se colocan en un control <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se debe mantener el orden Z de los controles arrastrados cuando se colocan en un control <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Called when a component is added to the parent container.">Se invoca cuando se agrega un componente al contenedor primario.</summary>
      <param name="component" vsli:raw="The component to test for errors.">Componente que se va a probar para determinar si tiene errores.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;component&quot; /&gt; can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="component" /> se puede agregar; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary vsli:raw="Indicates whether the specified control can be a child of the control managed by this designer.">Indica si el control especificado puede ser secundario del control que administra este diseñador.</summary>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to test.">
        <see cref="T:System.Windows.Forms.Control" /> que se va a probar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified control can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el control especificado puede ser secundario del control que administra este diseñador; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Indicates whether the control managed by the specified designer can be a child of the control managed by this designer.">Indica si el control administrado por el diseñador especificado puede ser secundario del control que administra este diseñador.</summary>
      <param name="controlDesigner" vsli:raw="The designer for the control to test.">Diseñador del control que se va a probar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el control administrado por el diseñador especificado puede ser secundario del control que administra este diseñador; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document.">Crea un componente o control a partir de la herramienta especificada y lo agrega al documento de diseño actual.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document at the specified location.">Crea un componente o control a partir de la herramienta especificada y lo agrega al documento de diseño actual en la ubicación especificada.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente.</param>
      <param name="location" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;, in design-time view screen coordinates, at which to center the component.">
        <see cref="T:System.Drawing.Point" /> donde se centrará el componente, en coordenadas de pantalla de la vista en tiempo de diseño.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document within the bounds of the specified rectangle.">Crea un componente o control a partir de la herramienta especificada y lo agrega al documento de diseño actual dentro de los límites del rectángulo especificado.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente.</param>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the location and size for the component created from the tool. The &lt;see cref=&quot;P:System.Drawing.Rectangle.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Rectangle.Y&quot; /&gt; values of the &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicate the design-time view screen coordinates of the upper-left corner of the component.">
        <see cref="T:System.Drawing.Rectangle" /> que indica la ubicación y tamaño del componente creado a partir de la herramienta. Los valores <see cref="P:System.Drawing.Rectangle.X" /> e <see cref="P:System.Drawing.Rectangle.Y" /> de <see cref="T:System.Drawing.Rectangle" /> indican las coordenadas de pantalla de la vista en tiempo de diseño de la esquina superior izquierda del componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary vsli:raw="Provides core functionality for all the &lt;see cref=&quot;M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)&quot; /&gt; methods.">Proporciona la funcionalidad central de todos los métodos <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente.</param>
      <param name="x" vsli:raw="The horizontal position, in design-time view coordinates, of the location of the left edge of the tool, if a size is specified; the horizontal position of the center of the tool, if no size is specified.">La posición horizontal, en coordenadas de la vista en tiempo de diseño, de la ubicación del borde izquierdo de la herramienta, si se ha especificado un tamaño; la posición horizontal del centro de la herramienta, si no se ha especificado ningún tamaño.</param>
      <param name="y" vsli:raw="The vertical position, in design-time view coordinates, of the location of the top edge of the tool, if a size is specified; the vertical position of the center of the tool, if no size is specified.">La posición vertical, en coordenadas de la vista en tiempo de diseño, de la ubicación del borde superior de la herramienta, si se ha especificado un tamaño; la posición vertical del centro de la herramienta, si no se ha especificado ningún tamaño.</param>
      <param name="width" vsli:raw="The width of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">Ancho de la herramienta. Este parámetro se pasa por alto si el parámetro <paramref name="hasSize" /> se establece en <see langword="false" />.</param>
      <param name="height" vsli:raw="The height of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">Alto de la herramienta. Este parámetro se pasa por alto si el parámetro <paramref name="hasSize" /> se establece en <see langword="false" />.</param>
      <param name="hasLocation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a location for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the component is to be positioned in the center of the currently selected control.">Es <see langword="true" /> si se ha especificado la ubicación del componente; es <see langword="false" /> si el componente se debe colocar en el centro del control actualmente seleccionado.</param>
      <param name="hasSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a size for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the default height and width values for the component are to be used.">Es <see langword="true" /> si se especifica el tamaño del componente; es <see langword="false" /> si se van a utilizar los valores del alto y ancho del componente.</param>
      <returns vsli:raw="An array of components created from the tool.">Matriz de los componentes creados a partir de la herramienta.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary vsli:raw="Gets the default location for a control added to the designer.">Obtiene la ubicación predeterminada de un control agregado al diseñador.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that indicates the default location for a control added to the designer.">
        <see cref="T:System.Drawing.Point" /> que indica la ubicación predeterminada de un control agregado al diseñador.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;, and optionally releases the managed resources.">Libera los recursos no administrados utilizados por el objeto <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary vsli:raw="Gets or sets a value indicating whether a grid should be drawn on the control for this designer.">Obtiene o establece un valor que indica si se debe dibujar una cuadrícula en el control para este diseñador.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a grid should be drawn on the control in the designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se debe dibujar una cuadrícula en el control en el diseñador; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles are drawn by the designer.">Obtiene un valor que indica si el diseñador dibuja rectángulos de arrastre.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles are drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si se dibujan rectángulos de arrastre; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary vsli:raw="Gets the control from the designer of the specified component.">Obtiene el control del componente especificado desde el diseñador.</summary>
      <param name="component" vsli:raw="The component to retrieve the control for.">Componente del que se va a recuperar el control.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that the specified component belongs to.">
        <see cref="T:System.Windows.Forms.Control" /> al que pertenece el componente especificado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a body glyph that represents the bounds of the control.">Obtiene un glifo del cuerpo que representa los límites del control.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Un valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica el estado de la selección.</param>
      <returns vsli:raw="A body glyph that represents the bounds of the control.">Un glifo del cuerpo que representa los límites del control.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">Obtiene una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que representan los bordes de selección y los identificadores de agarre de un control estándar.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Un valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica el estado de la selección.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Used by deriving classes to determine if it returns the control being designed or some other &lt;see cref=&quot;T:System.ComponentModel.Container&quot; /&gt; while adding a component to it.">Utilizado por clases derivadas para determinar si devuelve el control que se está dibujando o algún otro control <see cref="T:System.ComponentModel.Container" /> al agregarle un componente.</summary>
      <param name="component" vsli:raw="The component for which to retrieve the parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Componente para el cual se va a recuperar el control <see cref="T:System.Windows.Forms.Control" /> principal.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the component.">Control <see cref="T:System.Windows.Forms.Control" /> principal para el componente.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary vsli:raw="Updates the position of the specified rectangle, adjusting it for grid alignment if grid alignment mode is enabled.">Actualiza la posición del rectángulo especificado y lo alinea en la cuadrícula si el modo de alineación en la cuadrícula está habilitado.</summary>
      <param name="originalRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the initial position of the component being updated.">
        <see cref="T:System.Drawing.Rectangle" /> que indica la posición inicial del componente que se va a actualizar.</param>
      <param name="dragRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the new position of the component.">
        <see cref="T:System.Drawing.Rectangle" /> que indica la nueva posición del componente.</param>
      <param name="updateSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to update the size of the rectangle, if there has been any change; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para actualizar el tamaño del rectángulo, si ha habido cambios; en caso contrario, es <see langword="false" />.</param>
      <returns vsli:raw="A rectangle indicating the position of the component in design-time view screen coordinates. If no changes have been made, this method returns the original rectangle.">Rectángulo que indica la posición del componente en coordenadas de pantalla de la vista en tiempo de diseño. Si no se realizan cambios, este método devuelve el rectángulo original.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary vsli:raw="Gets or sets the size of each square of the grid that is drawn when the designer is in grid draw mode.">Obtiene o establece el tamaño de cada cuadro de la cuadrícula que se dibuja cuando el diseñador está en modo de dibujo de cuadrícula.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; that represents the size of each square of the grid drawn on a form or user control.">
        <see cref="T:System.Drawing.Size" /> que representa el tamaño de cada cuadro de la cuadrícula dibujada en un formulario o control de usuario.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; is outside the allowed range for &lt;see cref=&quot;P:System.Windows.Forms.Design.ParentControlDesigner.GridSize&quot; /&gt;. The default minimum value is 2, and the default maximum value is 200.">
        <see cref="T:System.Drawing.Size" /> se encuentra fuera del intervalo permitido para la propiedad <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />. El valor mínimo predeterminado es 2 y el valor máximo predeterminado es 200.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Inicializa el diseñador con el componente especificado.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">
        <see cref="T:System.ComponentModel.IComponent" /> que se va a asociar al diseñador.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">Inicializa un componente recién creado.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Diccionario de nombres/valores de los valores predeterminados que se van a aplicar a las propiedades. Puede ser <see langword="null" /> Si no hay ningún valor predeterminado especificado.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a tool from the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Crea una herramienta a partir del <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado.</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; that the tool is to be used with.">
        <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> con el que se va a utilizar la herramienta.</param>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a tool from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear una herramienta.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary vsli:raw="Gets a value indicating whether the designer has a valid tool during a drag operation.">Obtiene un valor que indica si el diseñador tiene una herramienta válida durante una operación de arrastre.</summary>
      <returns vsli:raw="The tool being dragged, if creating a component, or &lt;see langword=&quot;null&quot; /&gt; if there is no tool.">La herramienta que se está arrastrando, si se está creando un componente, o <see langword="null" /> si no hay ninguna herramienta.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called in order to clean up a drag-and-drop operation.">Llamado para limpiar una operación de arrastrar y colocar.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dropped onto the control designer view.">Se le llama cuando un objeto de arrastrar y colocar se coloca en la vista del diseñador del control.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation enters the control designer view.">Se le llama cuando un objeto de arrastrar y colocar entra en la vista del diseñador del control.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation leaves the control designer view.">Se llama cuando un objeto de arrastrar y colocar sale de la vista del diseñador del control.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.EventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dragged over the control designer view.">Se le llama cuando un objeto de arrastrar y colocar se arrastra sobre la vista del diseñador del control.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Called in response to the left mouse button being pressed and held while over the component.">Se le llama cuando se presiona el botón primario del mouse y se mantiene presionado mientras está sobre el componente.</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">La coordenada x del mouse, en coordenadas de pantalla.</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">La coordenada y del mouse, en coordenadas de pantalla.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Called at the end of a drag-and-drop operation to complete or cancel the operation.">Se le llama al final de una operación de arrastrar y colocar para terminar o cancelar la operación.</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag operation; &lt;see langword=&quot;false&quot; /&gt; to commit it.">Es <see langword="true" /> para cancelar la operación de arrastrar; es <see langword="false" /> para confirmarla.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Called for each movement of the mouse during a drag-and-drop operation.">Se le llama en cada movimiento del mouse durante una operación de arrastrar y colocar.</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">La coordenada x del mouse, en coordenadas de pantalla.</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">La coordenada y del mouse, en coordenadas de pantalla.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">Se llama cuando el control que el diseñador está administrando tiene su superficie dibujada, de manera que el diseñador pueda dibujar otros adornos en la parte superior del control.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> que proporciona datos para el evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary vsli:raw="Provides an opportunity to change the current mouse cursor.">Permite cambiar el cursor actual del mouse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ajusta el conjunto de propiedades que el componente expondrá mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">
        <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades de la clase del componente.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Obtiene una lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representan los puntos de alineación significativos de este control.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representan los puntos de alineación significativos de este control.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which should receive scroll messages.">Clase base de diseñador para extender el comportamiento del modo de diseño de una clase <see cref="T:System.Windows.Forms.Control" /> que debe recibir mensajes de desplazamiento.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ScrollableControlDesigner&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">Indica si el control debe controlar un clic con el mouse en el punto especificado.</summary>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">
        <see cref="T:System.Drawing.Point" /> que indica la posición en que se ha hecho clic con el mouse, en coordenadas de la pantalla.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el control controla un clic en el punto especificado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and passes WM_HSCROLL and WM_VSCROLL messages to the control at design time.">Procesa mensajes de Windows y pasa mensajes WM_HSCROLL y WM_VSCROLL al control en tiempo de diseño.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">
        <see cref="T:System.Windows.Forms.Message" /> para procesar.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary vsli:raw="Defines identifiers that are used to indicate selection rules for a component.">Define los identificadores que se utilizan para indicar las reglas de selección de un componente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary vsli:raw="Indicates the component supports sizing in all directions.">Indica si se puede cambiar el tamaño del componente en todas las direcciones.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary vsli:raw="Indicates the component supports resize from the bottom.">Indica que el componente permite cambiar su tamaño desde la parte inferior.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary vsli:raw="Indicates the component supports resize from the left.">Indica que el componente permite cambiar su tamaño desde la izquierda.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary vsli:raw="Indicates the component is locked to its container. Overrides the &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.Moveable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.AllSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.BottomSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.LeftSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.RightSizeable&quot; /&gt;, and &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.TopSizeable&quot; /&gt; bit flags of this enumeration.">Indica que el componente está bloqueado en su contenedor. Reemplaza los marcadores de bit <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" /> y <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> de esta enumeración.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary vsli:raw="Indicates the component supports a location property that allows it to be moved on the screen.">Indica que el componente admite una propiedad de ubicación que permite moverlo por la pantalla.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary vsli:raw="Indicates no special selection attributes.">Indica que no hay atributos de selección especiales.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary vsli:raw="Indicates the component supports resize from the right.">Indica que el componente permite cambiar su tamaño desde la derecha.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary vsli:raw="Indicates the component supports resize from the top.">Indica que el componente permite cambiar su tamaño desde la parte superior.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary vsli:raw="Indicates the component has some form of visible user interface and the selection service is drawing a selection border around this user interface. If a selected component has this rule set, you can assume that the component implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; and that it is associated with a corresponding designer instance.">Indica que el componente tiene alguna forma de interfaz de usuario visible y que el servicio de selección está dibujando un borde de selección alrededor de su interfaz de usuario. Si un componente seleccionado ya tiene establecida esta regla, puede suponer que el componente implementa <see cref="T:System.ComponentModel.IComponent" /> y que está asociado a la instancia correspondiente del diseñador.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary vsli:raw="A value that indicates whether the scrollbars of a window and its children will be themed when displayed in the Visual Studio designer.">Un valor que indica si las barras de desplazamiento de una ventana y sus elementos secundarios van a ser temáticas al mostrarlas en el diseñador de Visual Studio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary vsli:raw="The window and all of its children will have themed scrollbars.">La ventana y todos sus elementos secundarios tendrán barras de desplazamiento temáticas.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary vsli:raw="The window and all of its children will not be themed.">La ventana y todos sus elementos secundarios no serán temáticos.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary vsli:raw="The window will have themed scrollbars but all of its children will not be themed.">La ventana tendrá barras de desplazamiento temáticas pero todos sus elementos secundarios no serán temáticos.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary vsli:raw="Represents a window and a value that indicates how its scrollbars should be themed when displayed in the Visual Studio designer.">Representa una ventana y un valor que indica cómo las barras de desplazamiento deben ser temáticas al mostrarlas en el diseñador de Visual Studio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary vsli:raw="The window handle.">Identificador de la ventana.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary vsli:raw="A value that indicates how the window scrollbars should be themed when displayed in the Visual Studio designer.">Un valor que indica cómo las barras de desplazamiento de ventana deben ser temáticas al mostrarlas en el diseñador de Visual Studio.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary vsli:raw="Provides access to get and set option values for a Windows Forms designer.">Proporciona acceso para obtener y establecer los valores de las opciones de un diseñador de Windows Forms.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> expuesto por el objeto <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">Objeto <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> expuesto por el objeto <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection&quot; /&gt;.">Rellena una colección <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</summary>
      <param name="options" vsli:raw="The collection to populate.">Colección que se va a rellenar.</param>
    </member>
  </members>
</doc>