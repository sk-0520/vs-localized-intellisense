<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.EventLog</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.EntryWrittenEventArgs">
      <summary>Proporciona datos para el evento <see cref="E:System.Diagnostics.EventLog.EntryWritten" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EntryWrittenEventArgs" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor(System.Diagnostics.EventLogEntry)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> con la entrada del registro de eventos especificada.</summary>
      <param name="entry">
        <see cref="T:System.Diagnostics.EventLogEntry" /> que representa la entrada que se ha escrito.</param>
    </member>
    <member name="P:System.Diagnostics.EntryWrittenEventArgs.Entry">
      <summary>Obtiene la entrada del registro de eventos que se ha escrito en el registro.</summary>
      <returns>
        <see cref="T:System.Diagnostics.EventLogEntry" /> que representa la entrada que se ha escrito en el registro de eventos.</returns>
    </member>
    <member name="T:System.Diagnostics.EntryWrittenEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> de <see cref="T:System.Diagnostics.EventLog" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <summary>Representa un marcador de posición (marcador) dentro de una secuencia de evento. Puede utilizar el marcador de posición para marcar una posición y volver a ella en una secuencia de eventos. Una instancia de este objeto se puede obtener de un objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />, en cuyo caso corresponde a la posición de ese registro de evento.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <summary>Representa una palabra clave para un evento. Las palabras clave se definen en un proveedor de eventos y se utilizan para agrupar el evento con otros similares (se basa en el uso de los eventos).</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName">
      <summary>Obtiene el nombre traducido de la palabra clave.</summary>
      <returns>Cadena que contiene un nombre traducido para esta palabra clave.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name">
      <summary>Obtiene el nombre no traducido de la palabra clave.</summary>
      <returns>Cadena que contiene el nombre no traducido de esta palabra clave.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value">
      <summary>Obtiene el valor numérico asociado con la palabra clave.</summary>
      <returns>Valor numérico asociado a la palabra clave.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLevel">
      <summary>Contiene un nivel de evento que se define en un proveedor de eventos. El nivel indica la gravedad del evento.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName">
      <summary>Obtiene el nombre traducido del nivel de evento. El nombre describe para qué nivel de gravedad de eventos se usa este nivel.</summary>
      <returns>Cadena que contiene el nombre traducido del nivel de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Name">
      <summary>Obtiene el nombre no traducido del nivel de evento.</summary>
      <returns>Cadena que contiene el nombre no traducido del nivel de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Value">
      <summary>Obtiene el valor numérico del nivel de evento.</summary>
      <returns>Valor numérico del nivel de evento.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <summary>Contiene la configuración y la información estática de un registro de eventos. Gran parte de la configuración la define el proveedor de eventos que creó el registro.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)">
      <summary>Inicializa un nuevo objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> especificando el registro de eventos local cuya configuración e información se deben obtener.</summary>
      <param name="logName">Nombre del registro de eventos local cuya configuración e información se deben obtener.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)">
      <summary>Inicializa un nuevo objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> especificando el nombre del registro cuya configuración e información se deben obtener. El registro puede estar en el equipo local o un equipo remoto, según la sesión de registro de eventos que se haya especificado.</summary>
      <param name="logName">Nombre del registro de eventos cuya configuración e información se deben obtener.</param>
      <param name="session">Sesión de registro de eventos utilizada para determinar el servicio Registro de eventos al que pertenece el registro especificado. La sesión está conectada al servicio Registro de eventos en el equipo local o un equipo remoto.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
      <summary>Libera todos los recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados utilizados por este objeto y, opcionalmente, también libera los administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog">
      <summary>Obtiene un valor que indica si el registro de eventos es clásico. Los eventos de un registro clásico se definen en un archivo .mc en lugar de un manifiesto (archivo .xml) usado por el proveedor de eventos.</summary>
      <returns>
        <see langword="true" /> si el registro de eventos es un registro clásico; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled">
      <summary>Obtiene o establece un valor que indica si el registro de eventos está habilitado o deshabilitado. Un registro habilitado es un registro en el que se pueden registrar eventos; un registro deshabilitado es un registro en el que no se pueden registrar eventos.</summary>
      <returns>
        <see langword="true" /> si el registro está habilitado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath">
      <summary>Obtiene o establece la ruta de acceso al archivo donde se almacenan los eventos para el registro.</summary>
      <returns>Cadena que contiene la ruta de acceso al archivo de registro de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation">
      <summary>Obtiene un valor de <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> que especifica si el registro de eventos es un registro de eventos de la aplicación, del sistema o personalizado.</summary>
      <returns>Uno de los valores de enumeración.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode">
      <summary>Obtiene o establece un valor de <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> que determina cómo se administran los eventos cuando el registro de eventos está lleno.</summary>
      <returns>Uno de los valores de enumeración.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName">
      <summary>Obtiene el nombre del registro de eventos.</summary>
      <returns>Nombre del registro de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType">
      <summary>Obtiene un valor de <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> que determina el tipo del registro de eventos.</summary>
      <returns>Uno de los valores de enumeración.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes">
      <summary>Obtiene o establece, en bytes, el tamaño máximo permitido del archivo de registro de eventos. Cuando el archivo alcanza este tamaño máximo, se considera lleno.</summary>
      <returns>Tamaño máximo, en bytes, que el archivo de registro de eventos puede ser.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName">
      <summary>Obtiene el nombre del proveedor de eventos que creó este registro de eventos.</summary>
      <returns>Nombre del proveedor de eventos que creó este registro de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize">
      <summary>Obtiene el tamaño del búfer que el proveedor de eventos utiliza para publicar los eventos en el registro.</summary>
      <returns>Tamaño del búfer que utiliza el proveedor de eventos para publicar los eventos en el registro. Puede ser <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid">
      <summary>Obtiene el identificador único global (GUID) de control del registro de eventos si es un registro de depuración. Si este registro no es de depuración, este valor es <see langword="null" />.</summary>
      <returns>Un valor GUID o <see langword="null" /> si el registro no es un registro de depuración.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords">
      <summary>Obtiene o establece la máscara de palabra clave usada por el proveedor de eventos.</summary>
      <returns>Máscara de palabra clave usada por el proveedor de eventos o <see langword="null" /> si el proveedor de eventos no definió ninguna palabra clave.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency">
      <summary>Obtiene el tiempo de latencia máximo utilizado por el proveedor de eventos al publicar los eventos en el registro.</summary>
      <returns>Tiempo de latencia máximo utilizado por el proveedor de eventos al publicar eventos en el registro o <see langword="null" /> si el proveedor de eventos no especificó ningún tiempo de latencia.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel">
      <summary>Obtiene o establece el nivel de evento máximo (que define la gravedad del evento) que se puede registrar en el registro de eventos. El proveedor de eventos define este valor.</summary>
      <returns>Nivel máximo de eventos que se puede registrar en el registro de eventos o <see langword="null" /> si no se definió el nivel de evento máximo en el proveedor de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers">
      <summary>Obtiene el número máximo de búferes que utiliza el proveedor de eventos para publicar los eventos en el registro de eventos.</summary>
      <returns>Número máximo de búferes utilizados por el proveedor de eventos para publicar los eventos en el registro de eventos. Este valor puede ser <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers">
      <summary>Obtiene el número mínimo de búferes que utiliza el proveedor de eventos para publicar los eventos en el registro de eventos.</summary>
      <returns>Número mínimo de búferes utilizados por el proveedor de eventos para publicar los eventos en el registro de eventos. Este valor puede ser <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames">
      <summary>Obtiene una colección enumerable de los nombres de todos los proveedores de eventos que pueden publicar eventos en este registro de eventos.</summary>
      <returns>Colección enumerable de cadenas que contienen los nombres de proveedor de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges">
      <summary>Guarda los cambios que se han realizado en la configuración.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor">
      <summary>Obtiene o establece el descriptor de seguridad del registro de eventos. El descriptor de seguridad define los usuarios y grupos de usuarios que pueden leer y escribir en el registro de eventos.</summary>
      <returns>Cadena que contiene el descriptor de seguridad para el registro de eventos.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogException">
      <summary>Representa la clase base de todas las excepciones que se producen cuando ocurre un error leyendo información relacionada con el registro de eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> con el código de error de la excepción.</summary>
      <param name="errorCode">El código de error para el error que se produjo leyendo o configurando información relacionada con el registro de eventos. Para obtener más información y una lista de códigos de error relacionados con el registro de eventos, vea https://go.microsoft.com/fwlink/?LinkId=82629.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> con datos serializados.</summary>
      <param name="serializationInfo">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto sobre la excepción iniciada.</param>
      <param name="streamingContext">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> especificando el mensaje de error que describe la excepción actual.</summary>
      <param name="message">Mensaje de error que describe la excepción actual.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> con un mensaje de error y la excepción interna.</summary>
      <param name="message">Mensaje de error que describe la excepción actual.</param>
      <param name="innerException">Instancia de Exception que causó la excepción actual.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Establece el objeto SerializationInfo con información sobre la excepción.</summary>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos del objeto serializado sobre la excepción que se ha producido.</param>
      <param name="context">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogException.Message">
      <summary>Obtiene el mensaje de error que describe la excepción actual.</summary>
      <returns>Devuelve una cadena que contiene el mensaje de error que describe la excepción actual.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <summary>Permite obtener acceso a las propiedades en tiempo de ejecución de los registros de eventos activos y archivos de registro de eventos. Estas propiedades incluyen el número de eventos del registro, el tamaño del registro, un valor que determina si el registro está lleno y la última vez que se escribió o se obtuvo acceso al registro.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes">
      <summary>Obtiene los atributos del archivo de registro asociado al registro.</summary>
      <returns>Devuelve un valor entero. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime">
      <summary>Obtiene la hora a la que se creó el archivo de registro asociado al registro de eventos.</summary>
      <returns>Devuelve un objeto <see cref="T:System.DateTime" />. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize">
      <summary>Obtiene el tamaño del archivo, en bytes, asociado al registro de eventos.</summary>
      <returns>Devuelve un valor de tipo long.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull">
      <summary>Obtiene un valor booleano que determina si el archivo de registro ha alcanzado su tamaño máximo (el registro está lleno).</summary>
      <returns>Devuelve <see langword="true" /> si el registro está lleno; devuelve <see langword="false" /> si el registro no está lleno.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime">
      <summary>Obtiene la hora de la última vez que se obtuvo acceso al archivo de registro asociado al registro de eventos.</summary>
      <returns>Devuelve un objeto <see cref="T:System.DateTime" />. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime">
      <summary>Obtiene la hora a la que se escribieron por última vez datos en el archivo de registro asociado al registro de eventos.</summary>
      <returns>Devuelve un objeto <see cref="T:System.DateTime" />. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber">
      <summary>Obtiene el número de la entrada más antigua del registro de eventos.</summary>
      <returns>Devuelve un valor de tipo long que representa el número de la entrada más antigua del registro de eventos. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount">
      <summary>Obtiene el número de entradas del registro de eventos.</summary>
      <returns>Devuelve un valor de tipo long que representa el número de entradas del registro de eventos. Este valor puede ser null.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <summary>Representa la excepción que se produce cuando un proveedor de eventos publica datos no válidos en un evento.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> con datos serializados.</summary>
      <param name="serializationInfo">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos del objeto serializado sobre la excepción que se ha producido.</param>
      <param name="streamingContext">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> especificando el mensaje de error que describe la excepción actual.</summary>
      <param name="message">Mensaje de error que describe la excepción actual.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> con un mensaje de error y la excepción interna.</summary>
      <param name="message">Mensaje de error que describe la excepción actual.</param>
      <param name="innerException">Instancia de Exception que causó la excepción actual.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogIsolation">
      <summary>Define los permisos de acceso predeterminados para el registro de eventos. La valores de aplicación y de sistema indican que el registro comparte la lista de control de acceso (ACL) con el registro de Windows adecuado (los registros de eventos del sistema o de la aplicación) y comparte la traza de eventos durante la sesión de Windows (ETW) con otros registros del mismo aislamiento. Todos los canales con aislamiento personalizado usan una sesión de ETW privada.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Application">
      <summary>El registro comparte la lista de control de acceso con el registro de eventos de aplicación y comparte la sesión de ETW con otros registros que tienen aislamiento de aplicaciones.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Custom">
      <summary>El registro de eventos es un registro de eventos personalizado que utiliza su propia sesión de ETW privada.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.System">
      <summary>El registro comparte la lista de control de acceso con el registro de eventos del sistema y comparte la sesión de ETW con otros registros que tienen aislamiento de aplicaciones.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <summary>Representa un vínculo entre un proveedor de eventos y un registro de eventos donde el proveedor publica los eventos. No se puede crear una instancia de este objeto.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName">
      <summary>Obtiene el nombre traducido del registro de eventos.</summary>
      <returns>Devuelve una cadena que contiene el nombre traducido del registro de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported">
      <summary>Obtiene un valor booleano que determina si se importa el registro de eventos, en lugar de definirse en el proveedor de eventos. Un registro de eventos importado se define en un proveedor diferente.</summary>
      <returns>Devuelve <see langword="true" /> si el proveedor de eventos importa el registro de eventos; devuelve <see langword="false" /> si el proveedor de eventos no importa el registro de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName">
      <summary>Obtiene el nombre no traducido del registro de eventos asociado a este objeto.</summary>
      <returns>Devuelve una cadena que contiene el nombre no traducido del registro de eventos asociado a este objeto.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogMode">
      <summary>Determina el comportamiento del servicio del registro de eventos, administra un registro de eventos cuando el registro alcanza el máximo tamaño permitido (cuando se llena).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup">
      <summary>Archive el registro cuando esté lleno, no sobrescriba los eventos. El registro se archiva automáticamente cuando sea necesario. No se sobrescriben los eventos.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular">
      <summary>Los eventos nuevos se siguen archivando cuando el archivo de registro está completo. Cada nuevo evento de entrada reemplaza el evento más antiguo del registro.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain">
      <summary>No sobrescriba los eventos. Borre el registro de forma manual en lugar de automáticamente.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <summary>Representa la excepción que se produce cuando un registro de eventos solicitado (especificado normalmente por el nombre del registro de eventos o la ruta de acceso al archivo de registro de eventos) no existe.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> con datos serializados.</summary>
      <param name="serializationInfo">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos del objeto serializado sobre la excepción que se ha producido.</param>
      <param name="streamingContext">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> especificando el mensaje de error que describe la excepción actual.</summary>
      <param name="message">Mensaje de error que describe la excepción actual.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> con un mensaje de error y la excepción interna.</summary>
      <param name="message">Mensaje de error que describe la excepción actual.</param>
      <param name="innerException">Instancia de Exception que causó la excepción actual.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <summary>Contiene una matriz de cadenas que representan las consultas de XPath para los elementos en la representación XML de un evento, que se basa en el Esquema de eventos. Las consultas en este objeto se utilizan para extraer valores del evento.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" />.</summary>
      <param name="propertyQueries">Consultas XPath utilizadas para extraer los valores de la representación XML del evento.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
      <summary>Libera todos los recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados utilizados por este objeto y, opcionalmente, también libera los administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <summary>Representa la excepción que se produce cuando un nombre del proveedor de eventos especificado hace referencia a un proveedor de eventos deshabilitado. Un proveedor de eventos deshabilitado no puede publicar eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> con datos serializados.</summary>
      <param name="serializationInfo">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos del objeto serializado sobre la excepción que se ha producido.</param>
      <param name="streamingContext">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> especificando el mensaje de error que describe la excepción actual.</summary>
      <param name="message">Mensaje de error que describe la excepción actual.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> con un mensaje de error y la excepción interna.</summary>
      <param name="message">Mensaje de error que describe la excepción actual.</param>
      <param name="innerException">Instancia de Exception que causó la excepción actual.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <summary>Representa una consulta de los eventos en un registro de eventos y la configuración que define cómo y en qué equipo se ejecuta la consulta.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> especificando el destino de la consulta. El destino puede ser un registro de eventos activo o un archivo de registro.</summary>
      <param name="path">Nombre del registro de eventos que se va a consultar o ruta de acceso al archivo de registro de eventos que se va a consultar.</param>
      <param name="pathType">Especifica si la cadena que se usa en el parámetro de ruta de acceso especifica el nombre de un registro de eventos o la ruta de acceso a un archivo de registro de eventos.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> especificando el destino de la consulta y la consulta de eventos. El destino puede ser un registro de eventos activo o un archivo de registro.</summary>
      <param name="path">Nombre del registro de eventos que se va a consultar o ruta de acceso al archivo de registro de eventos que se va a consultar.</param>
      <param name="pathType">Especifica si la cadena que se usa en el parámetro de ruta de acceso especifica el nombre de un registro de eventos o la ruta de acceso a un archivo de registro de eventos.</param>
      <param name="query">Consulta de eventos que se utiliza para recuperar los eventos que cumplen las condiciones de la consulta.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection">
      <summary>Obtiene o establece un valor booleano que determina si los eventos se van a leer desde la entrada más reciente hasta la entrada más antigua de un registro de eventos.</summary>
      <returns>Devuelve <see langword="true" /> si los eventos se van a leer desde la entrada más reciente hasta la entrada más antigua del registro; devuelve <see langword="false" /> si los eventos se van a leer desde la entrada más antigua hasta la entrada más reciente del registro.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session">
      <summary>Obtiene o establece la sesión que obtiene acceso al servicio Registro de eventos en el equipo local o un equipo remoto. Este objeto puede establecerse para obtener acceso a un registro de eventos remoto creando un objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> o <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> con este objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />.</summary>
      <returns>Devuelve un objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors">
      <summary>Obtiene o establece un valor booleano que determina si esta consulta continuará recuperando eventos si se produce un error en la consulta.</summary>
      <returns>
        <see langword="true" /> indica que la consulta continuará recuperando eventos incluso si la consulta no se ejecuta correctamente para algunos registros; <see langword="false" /> indica que esta consulta no continuará recuperando eventos si se produce un error en la consulta.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <summary>Permite leer los eventos de un registro de eventos basándose en una consulta de evento. Los eventos leídos por este objeto se devuelven como objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> especificando una consulta de evento.</summary>
      <param name="eventQuery">Consulta de evento utilizada para recuperar los eventos.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> especificando una consulta de evento y el marcador que se usa como posición inicial de la consulta.</summary>
      <param name="eventQuery">Consulta de evento utilizada para recuperar los eventos.</param>
      <param name="bookmark">Marcador (marcador de posición) que se utiliza como posición inicial en el registro o la secuencia de eventos. La consulta devolverá únicamente los eventos registrados después del evento de marcador.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> especificando el registro de eventos activo del que se van a recuperar eventos.</summary>
      <param name="path">Nombre del registro de eventos del que se van a recuperar eventos.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> especificando el nombre del registro de eventos del que se van a recuperar eventos o la ruta de acceso al archivo de registro del que se van a recuperar eventos.</summary>
      <param name="path">Nombre del registro de eventos del que se van a recuperar eventos o ruta de acceso al archivo de registro de eventos del que se van a recuperar eventos.</param>
      <param name="pathType">Especifica si la cadena que se usa en el parámetro de ruta de acceso especifica el nombre de un registro de eventos o la ruta de acceso a un archivo de registro de eventos.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize">
      <summary>Obtiene o establece el número de eventos recuperados de la secuencia de eventos en cada operación de lectura.</summary>
      <returns>Devuelve un valor entero.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading">
      <summary>Cancela la actual operación de consulta.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
      <summary>Libera todos los recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados utilizados por este objeto y, opcionalmente, también libera los administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus">
      <summary>Obtiene el estado de cada registro de eventos o archivo de registro asociado a la consulta de evento en este objeto.</summary>
      <returns>Devuelve una lista de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventLogStatus" /> que contienen información de estado sobre un registro de eventos asociado a la consulta de evento en este objeto.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
      <summary>Lee el siguiente evento que devuelve la consulta de evento de este objeto.</summary>
      <returns>Devuelve un objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)">
      <summary>Lee el siguiente evento que devuelve la consulta de evento de este objeto.</summary>
      <param name="timeout">Tiempo máximo durante el cual se puede ejecutar la operación de lectura antes de que se cancele.</param>
      <returns>Devuelve un objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>Cambia la posición en la secuencia de eventos de la que procederá el siguiente evento que se va a leer especificando un evento de marcador. No se recuperarán los eventos registrados antes del evento de marcador.</summary>
      <param name="bookmark">Marcador (marcador de posición) que se utiliza como posición inicial en el registro o la secuencia de eventos. La consulta sólo devolverá los eventos registrados después del evento de marcador.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)">
      <summary>Cambia la posición en la secuencia de eventos de la que procederá el siguiente evento que se va a leer especificando un evento de marcador y el desplazamiento desde el marcador. No se recuperarán los eventos registrados antes del marcador más el desplazamiento.</summary>
      <param name="bookmark">Marcador (marcador de posición) que se utiliza como posición inicial en el registro o la secuencia de eventos. La consulta sólo devolverá los eventos registrados después del evento de marcador.</param>
      <param name="offset">Desplazamiento utilizado para cambiar la posición del marcador.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)">
      <summary>Cambia la posición en la secuencia de eventos de la que procederá el siguiente evento que se va a leer especificando una posición inicial y un desplazamiento desde la posición inicial. No se recuperarán los eventos registrados antes de la posición inicial más el desplazamiento.</summary>
      <param name="origin">Un valor de la enumeración <see cref="T:System.IO.SeekOrigin" /> define la posición en la secuencia de eventos donde se va a iniciar la consulta de los eventos.</param>
      <param name="offset">Desplazamiento que se va a sumar al origen.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <summary>Representa una excepción que se produce cuando se genera un error al leer, consultar o suscribirse a los eventos en un registro de eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> con datos serializados.</summary>
      <param name="serializationInfo">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos del objeto serializado sobre la excepción que se ha producido.</param>
      <param name="streamingContext">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> especificando el mensaje de error que describe la excepción actual.</summary>
      <param name="message">Mensaje de error que describe la excepción actual.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> con un mensaje de error y la excepción interna.</summary>
      <param name="message">Mensaje de error que describe la excepción actual.</param>
      <param name="innerException">Instancia de Exception que causó la excepción actual.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <summary>Contiene las propiedades de una instancia de un evento que se recibe de un objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />. Las propiedades de evento proporcionan información sobre el evento, como el nombre del equipo donde se ha registrado el evento y la hora a la que se creó el evento.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId">
      <summary>Obtiene el identificador único global (GUID) de la actividad en proceso en la que está implicado el evento. De esta forma, los consumidores pueden agrupar las actividades relacionadas.</summary>
      <returns>Devuelve un valor de GUID.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark">
      <summary>Obtiene el marcador de posición (marcador) que corresponde a este evento. Se puede utilizar como marcador de posición en una secuencia de eventos.</summary>
      <returns>Devuelve un objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog">
      <summary>Obtiene el nombre del registro de eventos o del archivo de registro de eventos donde está almacenado el evento.</summary>
      <returns>Devuelve una cadena que contiene el nombre del registro de eventos o del archivo de registro de eventos donde está almacenado el evento.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados utilizados por este objeto y, opcionalmente, también libera los administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
      <summary>Obtiene el mensaje del evento en la actual configuración regional.</summary>
      <returns>Devuelve una cadena que contiene el mensaje del evento en la actual configuración regional.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>Obtiene el mensaje del evento, reemplazando las variables en el mensaje con los valores especificados.</summary>
      <param name="values">Valores utilizados para reemplazar las variables en el mensaje del evento. Las variables se representan por %n, donde n es un número.</param>
      <returns>Devuelve una cadena que contiene el mensaje del evento en la actual configuración regional.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)">
      <summary>Obtiene la enumeración de los valores de las propiedades de evento proporcionadas por el usuario, o bien, los resultados de los datos basados en XPath si el evento tiene una representación XML.</summary>
      <param name="propertySelector">Selecciona los valores de propiedad que se van a devolver.</param>
      <returns>Devuelve una lista de objetos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id">
      <summary>Obtiene el identificador de este evento. Todos los eventos con este valor de identificador representan el mismo tipo de evento.</summary>
      <returns>Devuelve un valor entero. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords">
      <summary>Obtiene la máscara de palabra clave del evento. Obtenga el valor de la propiedad <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" /> para obtener el nombre de las palabras clave que se utilizan en esta máscara.</summary>
      <returns>Devuelve un valor de tipo long. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames">
      <summary>Obtiene los nombres para mostrar de las palabras clave utilizadas en la máscara de palabra clave para este evento.</summary>
      <returns>Devuelve una colección enumerable de cadenas que contienen los nombres para mostrar de las palabras clave utilizadas en la máscara de palabra clave para este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level">
      <summary>Obtiene el nivel del evento. El nivel indica la gravedad del evento. Para el nombre del nivel, obtenga el valor de la propiedad <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" />.</summary>
      <returns>Devuelve un valor de byte. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName">
      <summary>Obtiene el nombre para mostrar del nivel de este evento.</summary>
      <returns>Devuelve una cadena que contiene el nombre para mostrar del nivel de este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName">
      <summary>Obtiene el nombre del registro de eventos donde está registrado este evento.</summary>
      <returns>Devuelve una cadena que contiene el nombre del registro de eventos que contiene este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName">
      <summary>Obtiene el nombre del equipo donde se registró este evento.</summary>
      <returns>Devuelve una cadena que contiene el nombre del equipo donde se registró este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds">
      <summary>Obtiene una lista de identificadores de consulta con los que coincide este evento. Este evento coincide con una consulta si la consulta devuelve este evento.</summary>
      <returns>Devuelve una colección enumerable de valores enteros.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode">
      <summary>Obtiene el código de operación del evento. El código de operación define un valor numérico que identifica la actividad o un punto de la actividad que realizaba la aplicación cuando generó el evento. Para el nombre del código de operación, obtenga el valor de la propiedad <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" />.</summary>
      <returns>Devuelve un valor de tipo short. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName">
      <summary>Obtiene el nombre para mostrar del código de operación de este evento.</summary>
      <returns>Devuelve una cadena que contiene el nombre para mostrar del código de operación de este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId">
      <summary>Obtiene el identificador de proceso del proveedor de eventos que registró este evento.</summary>
      <returns>Devuelve un valor entero. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties">
      <summary>Obtiene las propiedades de evento proporcionadas por el usuario.</summary>
      <returns>Devuelve una lista de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId">
      <summary>Obtiene el identificador único global (GUID) del proveedor de eventos que publicó este evento.</summary>
      <returns>Devuelve un valor de GUID. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName">
      <summary>Obtiene el nombre del proveedor de eventos que publicó este evento.</summary>
      <returns>Devuelve una cadena que contiene el nombre del proveedor de eventos que publicó este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers">
      <summary>Obtiene los números de calificador que se utilizan para la identificación de los eventos.</summary>
      <returns>Devuelve un valor entero. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId">
      <summary>Obtiene el identificador de registro del evento.</summary>
      <returns>Devuelve un valor de tipo long. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId">
      <summary>Obtiene el identificador único global (GUID) de una actividad relacionada en un proceso que tiene un evento.</summary>
      <returns>Devuelve un valor de GUID. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task">
      <summary>Obtiene un identificador de tarea para parte de una aplicación o un componente que publica un evento. Una tarea es un valor de 16 bits con 16 valores superiores reservados. Este tipo permite el uso de valores comprendidos entre 0x0000 y 0xffef. Para el nombre de la tarea, obtenga el valor de la propiedad <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" />.</summary>
      <returns>Devuelve un valor entero. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName">
      <summary>Obtiene el nombre para mostrar de la tarea del evento.</summary>
      <returns>Devuelve una cadena que contiene el nombre para mostrar de la tarea del evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId">
      <summary>Obtiene el identificador del subproceso en el que se está ejecutando el proveedor de eventos.</summary>
      <returns>Devuelve un valor entero. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated">
      <summary>Obtiene la hora, con el formato <see cref="T:System.DateTime" />, a la que se creó el evento.</summary>
      <returns>Devuelve un valor <see cref="T:System.DateTime" />. El valor puede ser null.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml">
      <summary>Obtiene la representación XML del evento. Todas las propiedades de evento aparecen en la representación XML del evento. La representación XML es conforme al esquema de evento.</summary>
      <returns>Devuelve una cadena que contiene la representación XML del evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId">
      <summary>Obtiene el descriptor de seguridad del usuario cuyo contexto se utiliza para publicar el evento.</summary>
      <returns>Devuelve un valor <see cref="T:System.Security.Principal.SecurityIdentifier" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version">
      <summary>Obtiene el número de versión del evento.</summary>
      <returns>Devuelve un valor de byte. Este valor puede ser null.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <summary>Se utiliza para obtener acceso al servicio Registro de eventos en el equipo local o un equipo remoto y, de este modo, administrar y recopilar información sobre los registros y proveedores de eventos en el equipo.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
      <summary>Inicializa un nuevo objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> y establece una conexión con el servicio Registro de eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)">
      <summary>Inicializa un nuevo objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> y establece una conexión con el servicio Registro de eventos en el equipo especificado. Se utilizan las credenciales (nombre de usuario y contraseña) del usuario que llama al método como credenciales para obtener acceso al equipo remoto.</summary>
      <param name="server">Nombre del equipo en el que se va a conectar al servicio Registro de eventos.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)">
      <summary>Inicializa un nuevo objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> y establece una conexión con el servicio Registro de eventos en el equipo especificado. Se utilizan las credenciales especificadas (nombre de usuario y contraseña) como credenciales para obtener acceso al equipo remoto.</summary>
      <param name="server">Nombre del equipo en el que se va a conectar al servicio Registro de eventos.</param>
      <param name="domain">Dominio del usuario especificado.</param>
      <param name="user">Nombre de usuario que se usa para conectarse al equipo remoto.</param>
      <param name="password">Contraseña que se usa para conectarse al equipo remoto.</param>
      <param name="logOnType">Tipo de conexión que se va a utilizar para la conexión al equipo remoto.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations">
      <summary>Cancela todas las operaciones (como la lectura o la suscripción a un registro de eventos) actualmente activas en el servicio Registro de eventos al que este objeto de sesión está conectado.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)">
      <summary>Borra los eventos del registro de eventos especificado.</summary>
      <param name="logName">Nombre del registro de eventos del que se van a borrar todos los eventos.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)">
      <summary>Borra los eventos del registro de eventos especificado y guarda los eventos borrados en el archivo especificado.</summary>
      <param name="logName">Nombre del registro de eventos del que se van a borrar todos los eventos.</param>
      <param name="backupPath">Ruta de acceso al archivo en el que se van a guardar los eventos borrados. El archivo debe tener la extensión .evtx.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
      <summary>Libera todos los recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados utilizados por este objeto y, opcionalmente, también libera los administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>Exporta los eventos a un archivo de registro externo. Los eventos se almacenan sin sus mensajes.</summary>
      <param name="path">Nombre del registro de eventos del que se exportan eventos o ruta de acceso al archivo de registro de eventos del que se exportan eventos.</param>
      <param name="pathType">Especifica si la cadena que se usa en el parámetro de ruta de acceso especifica el nombre de un registro de eventos o la ruta de acceso a un archivo de registro de eventos.</param>
      <param name="query">Consulta que se usa para seleccionar los eventos que se quieren exportar.  Solo se exportarán los eventos devueltos en la consulta.</param>
      <param name="targetFilePath">Ruta de acceso al archivo de registro (termina en .evtx) en el que se almacenarán los eventos exportados después de ejecutar este método.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)">
      <summary>Exporta los eventos a un archivo de registro externo. Puede establecerse una marca para indicar que el método siga exportando eventos si se produce un error en la consulta especificada para algunos registros. Los eventos se almacenan sin sus mensajes.</summary>
      <param name="path">Nombre del registro de eventos del que se exportan eventos o ruta de acceso al archivo de registro de eventos del que se exportan eventos.</param>
      <param name="pathType">Especifica si la cadena que se usa en el parámetro de ruta de acceso especifica el nombre de un registro de eventos o la ruta de acceso a un archivo de registro de eventos.</param>
      <param name="query">Consulta que se usa para seleccionar los eventos que se quieren exportar. Solo se exportarán los eventos devueltos en la consulta.</param>
      <param name="targetFilePath">Ruta de acceso al archivo de registro (termina en .evtx) en el que se almacenarán los eventos exportados después de ejecutar este método.</param>
      <param name="tolerateQueryErrors">
        <see langword="true" /> indica que el método siga exportando eventos aunque se produzca un error en la consulta especificada para algunos registros y <see langword="false" /> indica que este método no siga exportando eventos cuando se produzca un error en la consulta especificada.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>Exporta los eventos con sus mensajes a un archivo de registro externo.</summary>
      <param name="path">Nombre del registro de eventos del que se exportan eventos o ruta de acceso al archivo de registro de eventos del que se exportan eventos.</param>
      <param name="pathType">Especifica si la cadena que se usa en el parámetro de ruta de acceso especifica el nombre de un registro de eventos o la ruta de acceso a un archivo de registro de eventos.</param>
      <param name="query">Consulta que se usa para seleccionar los eventos que se quieren exportar.  Solo se exportarán los eventos devueltos en la consulta.</param>
      <param name="targetFilePath">Ruta de acceso al archivo de registro (termina en .evtx) en el que se almacenarán los eventos exportados después de ejecutar este método.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary>Exporta los eventos con sus mensajes a un archivo de registro externo. Puede establecerse una marca para indicar que el método siga exportando eventos si se produce un error en la consulta especificada para algunos registros. Los mensajes de eventos se exportan en el idioma especificado.</summary>
      <param name="path">Nombre del registro de eventos del que se exportan eventos o ruta de acceso al archivo de registro de eventos del que se exportan eventos.</param>
      <param name="pathType">Especifica si la cadena que se usa en el parámetro de ruta de acceso especifica el nombre de un registro de eventos o la ruta de acceso a un archivo de registro de eventos.</param>
      <param name="query">Consulta que se usa para seleccionar los eventos que se quieren exportar.  Solo se exportarán los eventos devueltos en la consulta.</param>
      <param name="targetFilePath">Ruta de acceso al archivo de registro (termina en .evtx) en el que se almacenarán los eventos exportados después de ejecutar este método.</param>
      <param name="tolerateQueryErrors">
        <see langword="true" /> indica que el método siga exportando eventos aunque se produzca un error en la consulta especificada para algunos registros y <see langword="false" /> indica que este método no siga exportando eventos cuando se produzca un error en la consulta especificada.</param>
      <param name="targetCultureInfo">Referencia cultural que especifica el idioma en el que estarán los mensajes de eventos exportados.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>Obtiene un objeto que contiene información en tiempo de ejecución del registro de eventos especificado.</summary>
      <param name="logName">Nombre del registro de eventos cuya información se va a obtener o ruta de acceso al archivo de registro de eventos cuya información se va a obtener.</param>
      <param name="pathType">Especifica si la cadena que se usa en el parámetro de ruta de acceso especifica el nombre de un registro de eventos o la ruta de acceso a un archivo de registro de eventos.</param>
      <returns>Objeto que contiene información sobre el registro especificado.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames">
      <summary>Obtiene una colección enumerable de todos los nombres de registro de eventos que están registrados en servicio Registro de eventos.</summary>
      <returns>Colección enumerable de cadenas que contienen los nombres de registro de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames">
      <summary>Obtiene una colección enumerable de los nombres de todos los proveedores de eventos que están registrados en el servicio Registro de eventos. Un proveedor de eventos es una aplicación que publica los eventos en un registro de eventos.</summary>
      <returns>Colección enumerable de cadenas que contienen los nombres de proveedor de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession">
      <summary>Obtiene un objeto de sesión predefinido estático que está conectado al servicio Registro de eventos en el equipo local.</summary>
      <returns>Objeto de sesión predefinido que está conectado al servicio registro de eventos en el equipo local.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <summary>Contiene el código de estado o de error para un registro de eventos concreto. Este estado se puede utilizar para determinar si el registro de eventos está disponible para una operación.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName">
      <summary>Obtiene el nombre del registro de eventos para el que se obtiene el código de estado.</summary>
      <returns>Nombre del registro de eventos para el que se obtiene el código de estado.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode">
      <summary>Obtiene el código de estado o de error para el registro de eventos. Este estado o error es el resultado de una operación de lectura o suscripción en el registro de eventos.</summary>
      <returns>Código de estado o código de error del registro de eventos.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogType">
      <summary>Define el tipo de los eventos que están registrados en un registro de eventos. Cada registro puede contener sólo un tipo de evento.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative">
      <summary>Estos eventos son principalmente para los usuarios finales, los administradores y la compatibilidad. Los eventos incluidos en los registros de tipo administrativo indican un problema y una solución bien definida que los administradores pueden utilizar. Un ejemplo de un evento administrativo es un evento que se produce cuando una aplicación no se conecta a una impresora.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical">
      <summary>De los eventos incluidos en un registro de eventos analíticos se publica un elevado número. Describen el funcionamiento del programa e indican los problemas que el usuario no puede administrar.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Debug">
      <summary>Los eventos incluidos en un registro de eventos de depuración los utilizan únicamente los desarrolladores para diagnosticar un problema y depurarlo.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Operational">
      <summary>Los eventos incluidos en un registro de eventos operativos se utilizan para analizar y diagnosticar un problema o una incidencia. Se pueden utilizar para activar herramientas o tareas según el problema o la incidencia. Un ejemplo de un evento operativo es un evento que se produce cuando se agrega o se quita una impresora de un sistema.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <summary>Permite suscribirse a los eventos entrantes. Cada vez que un evento deseado se publica en un registro de eventos, se provoca el evento <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> y se ejecuta el método que administra este evento.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> especificando una consulta de evento.</summary>
      <param name="eventQuery">Especifica una consulta de la suscripción de eventos. Cuando se registra un evento que cumple los criterios expresados en la consulta, se provoca el evento <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> especificando una consulta de evento y el marcador que se usa como posición inicial de la consulta.</summary>
      <param name="eventQuery">Especifica una consulta de la suscripción de eventos. Cuando se registra un evento que cumple los criterios expresados en la consulta, se provoca el evento <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />.</param>
      <param name="bookmark">Marcador (marcador de posición) que se utiliza como posición inicial en el registro o la secuencia de eventos. La consulta sólo devolverá los eventos registrados después del evento de marcador.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> especificando una consulta de evento, el marcador que se utiliza como posición inicial de la consulta y un valor booleano que determina si se van a leer los eventos que ya existen en el registro de eventos.</summary>
      <param name="eventQuery">Especifica una consulta de la suscripción de eventos. Cuando se registra un evento que cumple los criterios expresados en la consulta, se provoca el evento <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />.</param>
      <param name="bookmark">Marcador (marcador de posición) que se utiliza como posición inicial en el registro o la secuencia de eventos. La consulta sólo devolverá los eventos registrados después del evento de marcador.</param>
      <param name="readExistingEvents">Valor booleano que determina si se van a leer los eventos que ya existen en el registro de eventos. Si este valor es <see langword="true" />, se leerán los eventos existentes; si este valor es <see langword="false" />, no se leerán los eventos existentes.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> especificando el nombre o la ruta de acceso a un registro de eventos.</summary>
      <param name="path">Ruta de acceso o nombre del supervisor de registros de eventos. Si se registra algún evento en este registro de eventos, se provoca el evento <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
      <summary>Libera todos los recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados utilizados por este objeto y, opcionalmente, también libera los administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled">
      <summary>Obtiene o establece un valor que indica si este objeto empieza a entregar eventos al delegado de eventos.</summary>
      <returns>
        <see langword="true" /> cuando este objeto puede enviar eventos al delegado de eventos; <see langword="false" /> cuando este objeto ha detenido la entrega.</returns>
    </member>
    <member name="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten">
      <summary>Permite establecer un delegado (método de control de eventos) al que se va a llamar cada vez que se publique un evento que cumple los criterios especificados en la consulta de evento de este objeto.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <summary>Contiene los metadatos (propiedades y valores) de un evento definido en un proveedor de eventos.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description">
      <summary>Obtiene la plantilla de descripción asociada al evento utilizando la configuración regional del subproceso actual para el lenguaje de descripción.</summary>
      <returns>Cadena que contiene la plantilla de descripción asociada al evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id">
      <summary>Obtiene el identificador del evento definido en el proveedor de eventos.</summary>
      <returns>Identificador de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords">
      <summary>Obtiene las palabras clave asociadas al evento que se define en el proveedor de eventos.</summary>
      <returns>Colección enumerable de las palabras clave asociadas al evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level">
      <summary>Obtiene el nivel asociado al evento definido en el proveedor de eventos. El nivel define la gravedad del evento.</summary>
      <returns>Nivel asociado al evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink">
      <summary>Obtiene un vínculo al registro de eventos que recibe este evento cuando el proveedor lo publica.</summary>
      <returns>Vínculo al registro de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode">
      <summary>Obtiene el código de operación asociado a este evento definido en un proveedor de eventos. El código de operación define un valor numérico que identifica la actividad o un punto de la actividad que realizaba la aplicación cuando generó el evento.</summary>
      <returns>Código de operación asociado a este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task">
      <summary>Obtiene la tarea asociada al evento. Una tarea define una parte de una aplicación o un componente que publica un evento.</summary>
      <returns>Tarea asociada al evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template">
      <summary>Obtiene la cadena de plantilla del evento. Las plantillas se utilizan para describir los datos utilizados por un proveedor cuando se publica un evento. Las plantillas especifican opcionalmente la representación XML que proporciona la estructura de un evento. XML permite que los valores proporcionados por el publicador de eventos se inserten durante la representación de un evento.</summary>
      <returns>Cadena que contiene la plantilla para el evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version">
      <summary>Obtiene la versión del evento que califica el identificador de evento.</summary>
      <returns>Valor de byte que contiene la versión del evento.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <summary>Contiene un código de operación de evento que se define en un proveedor de eventos. Un código de operación define un valor numérico que identifica la actividad o un punto de la actividad que realizaba la aplicación cuando generó el evento.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName">
      <summary>Obtiene el nombre traducido para un código de operación de evento.</summary>
      <returns>Nombre traducido para un código de operación de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name">
      <summary>Obtiene el nombre no traducido para un código de operación de evento.</summary>
      <returns>Nombre no traducido para un código de operación de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value">
      <summary>Obtiene el valor numérico asociado al código de operación de evento.</summary>
      <returns>Valor numérico asociado al código de operación del evento.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventProperty">
      <summary>Contiene el valor de una propiedad de evento especificada por el proveedor de eventos cuando se publica el evento.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventProperty.Value">
      <summary>Obtiene el valor de la propiedad de evento especificada por el proveedor de eventos cuando se publica el evento.</summary>
      <returns>Valor de la propiedad de evento.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecord">
      <summary>Define las propiedades de una instancia de un evento que se recibe de un objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />. Las propiedades de evento proporcionan información sobre el evento, como el nombre del equipo donde se ha registrado el evento y la hora a la que se creó el evento. Ésta es una clase abstracta. La clase <see cref="T:System.Diagnostics.Eventing.Reader.EventLogRecord" /> implementa esta clase.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId">
      <summary>Obtiene el identificador único global (GUID) de la actividad en proceso en la que está implicado el evento. De esta forma, los consumidores pueden agrupar las actividades relacionadas.</summary>
      <returns>Devuelve un valor de GUID.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark">
      <summary>Obtiene el marcador de posición (marcador) que corresponde a este evento. Se puede utilizar como marcador de posición en una secuencia de eventos.</summary>
      <returns>Devuelve un objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
      <summary>Libera todos los recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados utilizados por este objeto y, opcionalmente, también libera los administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
      <summary>Obtiene el mensaje del evento en la actual configuración regional.</summary>
      <returns>Devuelve una cadena que contiene el mensaje del evento en la actual configuración regional.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>Obtiene el mensaje del evento, reemplazando las variables en el mensaje con los valores especificados.</summary>
      <param name="values">Valores utilizados para reemplazar las variables en el mensaje del evento. Las variables se representan por %n, donde n es un número.</param>
      <returns>Devuelve una cadena que contiene el mensaje del evento en la actual configuración regional.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Id">
      <summary>Obtiene el identificador de este evento. Todos los eventos con este valor de identificador representan el mismo tipo de evento.</summary>
      <returns>Devuelve un valor entero. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords">
      <summary>Obtiene la máscara de palabra clave del evento. Obtenga el valor de la propiedad <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames" /> para obtener el nombre de las palabras clave que se utilizan en esta máscara.</summary>
      <returns>Devuelve un valor de tipo long. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames">
      <summary>Obtiene los nombres para mostrar de las palabras clave utilizadas en la máscara de palabra clave para este evento.</summary>
      <returns>Devuelve una colección enumerable de cadenas que contienen los nombres para mostrar de las palabras clave utilizadas en la máscara de palabra clave para este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Level">
      <summary>Obtiene el nivel del evento. El nivel indica la gravedad del evento. Para el nombre del nivel, obtenga el valor de la propiedad <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName" />.</summary>
      <returns>Devuelve un valor de byte. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName">
      <summary>Obtiene el nombre para mostrar del nivel de este evento.</summary>
      <returns>Devuelve una cadena que contiene el nombre para mostrar del nivel de este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName">
      <summary>Obtiene el nombre del registro de eventos donde está registrado este evento.</summary>
      <returns>Devuelve una cadena que contiene el nombre del registro de eventos que contiene este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName">
      <summary>Obtiene el nombre del equipo donde se registró este evento.</summary>
      <returns>Devuelve una cadena que contiene el nombre del equipo donde se registró este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode">
      <summary>Obtiene el código de operación del evento. El código de operación define un valor numérico que identifica la actividad o un punto de la actividad que realizaba la aplicación cuando generó el evento. Para el nombre del código de operación, obtenga el valor de la propiedad <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName" />.</summary>
      <returns>Devuelve un valor de tipo short. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName">
      <summary>Obtiene el nombre para mostrar del código de operación de este evento.</summary>
      <returns>Devuelve una cadena que contiene el nombre para mostrar del código de operación de este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId">
      <summary>Obtiene el identificador de proceso del proveedor de eventos que registró este evento.</summary>
      <returns>Devuelve un valor entero. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties">
      <summary>Obtiene las propiedades de evento proporcionadas por el usuario.</summary>
      <returns>Devuelve una lista de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId">
      <summary>Obtiene el identificador único global (GUID) del proveedor de eventos que publicó este evento.</summary>
      <returns>Devuelve un valor de GUID. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName">
      <summary>Obtiene el nombre del proveedor de eventos que publicó este evento.</summary>
      <returns>Devuelve una cadena que contiene el nombre del proveedor de eventos que publicó este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers">
      <summary>Obtiene los números de calificador que se utilizan para la identificación de los eventos.</summary>
      <returns>Devuelve un valor entero. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId">
      <summary>Obtiene el identificador de registro del evento.</summary>
      <returns>Devuelve un valor de tipo long. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId">
      <summary>Obtiene el identificador único global (GUID) de una actividad relacionada en un proceso que tiene un evento.</summary>
      <returns>Devuelve un valor de GUID. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Task">
      <summary>Obtiene un identificador de tarea para parte de una aplicación o un componente que publica un evento. Una tarea es un valor de 16 bits con 16 valores superiores reservados. Este tipo permite el uso de valores comprendidos entre 0x0000 y 0xffef. Para obtener el nombre de la tarea, obtenga el valor de la propiedad <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName" />.</summary>
      <returns>Devuelve un valor entero. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName">
      <summary>Obtiene el nombre para mostrar de la tarea del evento.</summary>
      <returns>Devuelve una cadena que contiene el nombre para mostrar de la tarea del evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId">
      <summary>Obtiene el identificador del subproceso en el que se está ejecutando el proveedor de eventos.</summary>
      <returns>Devuelve un valor entero. Este valor puede ser null.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated">
      <summary>Obtiene la hora, con el formato <see cref="T:System.DateTime" />, a la que se creó el evento.</summary>
      <returns>Devuelve un valor <see cref="T:System.DateTime" />. El valor puede ser null.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml">
      <summary>Obtiene la representación XML del evento. Todas las propiedades de evento aparecen en la representación XML del evento. La representación XML es conforme al esquema de evento.</summary>
      <returns>Devuelve una cadena que contiene la representación XML del evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId">
      <summary>Obtiene el descriptor de seguridad del usuario cuyo contexto se utiliza para publicar el evento.</summary>
      <returns>Devuelve un valor <see cref="T:System.Security.Principal.SecurityIdentifier" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Version">
      <summary>Obtiene el número de versión del evento.</summary>
      <returns>Devuelve un valor de byte. Este valor puede ser null.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <summary>Cuando se provoca el evento <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />, una instancia de este objeto se pasa al método delegado que controla el evento. Este objeto contiene el evento que se publicó en el registro de eventos o la excepción que se produjo cuando la suscripción de eventos dio error.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException">
      <summary>Obtiene la excepción que se produjo cuando la suscripción de eventos dio error. La excepción contiene una descripción de por qué se produjo un error en la suscripción.</summary>
      <returns>Excepción que se produjo cuando se produjo un error en la suscripción de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord">
      <summary>Obtiene el registro del evento que se publica en el registro de eventos. Este evento coincide con los criterios de la consulta especificados en la suscripción de eventos.</summary>
      <returns>Registro del evento.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventTask">
      <summary>Contiene una tarea de evento que se define en un proveedor de eventos. La tarea define una parte de una aplicación o un componente que publica un evento. Una tarea es un valor de 16 bits con 16 valores superiores reservados.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName">
      <summary>Obtiene el nombre traducido de la tarea de evento.</summary>
      <returns>Nombre traducido de la tarea de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid">
      <summary>Obtiene el identificador único global (GUID) de evento asociado a la tarea.</summary>
      <returns>GUID del evento asociado a la tarea.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Name">
      <summary>Obtiene el nombre no traducido de la tarea de evento.</summary>
      <returns>Nombre no traducido de la tarea de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Value">
      <summary>Obtiene el valor numérico asociado a la tarea.</summary>
      <returns>Valor numérico asociado a la tarea.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.PathType">
      <summary>Especifica que una cadena contiene un nombre de un registro de eventos o la ruta de acceso del sistema de archivos a un archivo de registro de eventos.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.FilePath">
      <summary>Un parámetro de ruta de acceso contiene la ruta de acceso del sistema de archivos a un archivo de registro de eventos.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.LogName">
      <summary>Un parámetro de ruta de acceso contiene el nombre del registro de eventos.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <summary>Contiene la información estática sobre un proveedor de eventos, como el nombre e identificador del proveedor y la colección de los eventos definidos en él.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> especificando el nombre del proveedor sobre el que se desea recuperar información.</summary>
      <param name="providerName">Nombre del proveedor de eventos sobre el que se desea recuperar información.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> especificando el nombre del proveedor sobre el que se desea recuperar información, el servicio de registro de eventos en el que está registrado el proveedor y el idioma en el que debe devolverse la información.</summary>
      <param name="providerName">Nombre del proveedor de eventos sobre el que se desea recuperar información.</param>
      <param name="session">Objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> que especifica si la información se va a recuperar de un proveedor en el equipo local o un proveedor en un equipo remoto.</param>
      <param name="targetCultureInfo">Referencia cultural que especifica el idioma en el que se va a devolver la información.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName">
      <summary>Obtiene el nombre traducido del proveedor de eventos.</summary>
      <returns>Devuelve una cadena que contiene el nombre traducido del proveedor de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
      <summary>Libera todos los recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados utilizados por este objeto y, opcionalmente, también libera los administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events">
      <summary>Obtiene una colección enumerable de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" />, cada uno de los cuales representa un evento definido en el proveedor.</summary>
      <returns>Devuelve una colección enumerable de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink">
      <summary>Obtiene la dirección URL base utilizada para las solicitudes de ayuda referentes a los eventos en este proveedor de eventos.</summary>
      <returns>Devuelve un valor <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id">
      <summary>Obtiene el identificador único global (GUID) del proveedor de eventos.</summary>
      <returns>Devuelve el valor de GUID del proveedor de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords">
      <summary>Obtiene una colección enumerable de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />, cada uno de los cuales representa una palabra clave de evento definida en el proveedor de eventos.</summary>
      <returns>Devuelve una colección enumerable de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels">
      <summary>Obtiene una colección enumerable de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />, cada uno de los cuales representa un nivel definido en el proveedor de eventos.</summary>
      <returns>Devuelve una colección enumerable de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks">
      <summary>Obtiene una colección enumerable de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" />, cada uno de los cuales representa un vínculo a un registro de eventos utilizado por el proveedor de eventos.</summary>
      <returns>Devuelve una colección enumerable de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath">
      <summary>Obtiene la ruta de acceso al archivo que contiene el recurso de tablas de mensajes que tiene las cadenas asociadas a los metadatos del proveedor.</summary>
      <returns>Devuelve una cadena que contiene la ruta de acceso al archivo de mensajes del proveedor.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name">
      <summary>Obtiene el nombre único del proveedor de eventos.</summary>
      <returns>Devuelve una cadena que contiene el nombre único del proveedor de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes">
      <summary>Obtiene una colección enumerable de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />, cada uno de los cuales representa un código de operación definido en el proveedor de eventos.</summary>
      <returns>Devuelve una colección enumerable de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath">
      <summary>Obtiene la ruta de acceso al archivo que contiene el recurso de tablas de mensajes que tiene las cadenas utilizadas para las sustituciones de parámetros en las descripciones de evento.</summary>
      <returns>Devuelve una cadena que contiene la ruta de acceso al archivo que contiene el recurso de tablas de mensajes que tiene las cadenas utilizadas para las sustituciones de parámetros en las descripciones de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath">
      <summary>Obtiene la ruta de acceso al archivo que contiene los metadatos asociados al proveedor.</summary>
      <returns>Devuelve una cadena que contiene la ruta de acceso al archivo que tiene los metadatos asociados al proveedor.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks">
      <summary>Obtiene una colección enumerable de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />, cada uno de los cuales representa una tarea definida en el proveedor de eventos.</summary>
      <returns>Devuelve una colección enumerable de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.SessionAuthentication">
      <summary>Define los valores para el tipo de autenticación utilizado durante un inicio de sesión de Llamada a procedimiento remoto (RPC) en un servidor. Este inicio de sesión se produce cuando se crea un objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> que especifica una conexión con un equipo remoto.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Default">
      <summary>Utilice el método de autenticación predeterminado durante el inicio de sesión de RPC. La autenticación predeterminada es equivalente a Negotiate.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Kerberos">
      <summary>Utilice la autenticación Kerberos durante el inicio de sesión de RPC.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Negotiate">
      <summary>Utilice el método de autenticación Negotiate durante el inicio de sesión de RPC. Esto permite a la aplicación cliente seleccionar el método de autenticación más adecuado (NTLM o Kerberos) en la situación.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Ntlm">
      <summary>Utilice autenticación de Windows NT LAN Manager (NTLM) durante el inicio de sesión de RPC.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords">
      <summary>Define las palabras clave estándar que el proveedor de eventos asocia a los eventos. Para obtener más información acerca de las palabras clave, vea <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditFailure">
      <summary>Se asocia a todos los eventos de auditoría de seguridad que dan error. Esta palabra clave sólo se debería utilizar para los eventos del registro de seguridad.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditSuccess">
      <summary>Se asocia a todos los eventos de auditoría de seguridad correctos. Esta palabra clave sólo se debería utilizar para los eventos del registro de seguridad.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint">
      <summary>Se asocia para transferir los eventos donde el identificador de actividad relacionado (identificador de correlación) es un valor calculado y no se garantiza que sea único (no un auténtico GUID).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint2">
      <summary>Se asocia para transferir los eventos donde el identificador de actividad relacionado (identificador de correlación) es un valor calculado y no se garantiza que sea único (no un auténtico GUID).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.EventLogClassic">
      <summary>Se asocia a los eventos que se provocan utilizando la función RaiseEvent.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.None">
      <summary>Este valor indica que no se realiza ningún filtrado en la palabra clave cuando se publica el evento.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.ResponseTime">
      <summary>Adjunto a todos los eventos de tiempo de respuesta.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.Sqm">
      <summary>Se asocia a todos los eventos de Mecanismo de calidad de servicio (SQM).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiContext">
      <summary>Se asocia a todos los eventos del contexto de la Infraestructura de diagnóstico de Windows (WDI).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiDiagnostic">
      <summary>Se asocia a todos los eventos de diagnóstico de la Infraestructura de diagnóstico de Windows (WDI).</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventLevel">
      <summary>Define los niveles de eventos estándar que se utilizan en el servicio Registro de eventos. El nivel define la gravedad del evento. Los niveles de eventos personalizados se pueden definir más allá de estos niveles estándar. Para obtener más información sobre niveles, vea <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Critical">
      <summary>Este nivel corresponde a errores críticos, que son errores graves que derivan en un error irrecuperable.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Error">
      <summary>Este nivel corresponde a errores normales que indican un problema.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Informational">
      <summary>Este nivel corresponde a mensajes o eventos informativos que no indican errores. Estos eventos pueden ser de ayuda para el seguimiento del progreso o estado de una aplicación.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.LogAlways">
      <summary>Este valor indica que no se ha aplicado ningún filtro en el nivel durante la publicación de eventos.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Verbose">
      <summary>Este nivel corresponde a eventos o mensajes largos.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Warning">
      <summary>Este nivel corresponde a eventos de advertencia. Por ejemplo, un evento que se publica porque se está a punto de alcanzar la capacidad total de un disco es un evento de advertencia.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode">
      <summary>Define los códigos de operación estándar que el proveedor de eventos asocia a los eventos. Para obtener más información sobre los códigos de operación, vea <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStart">
      <summary>Un evento con este código de operación es un evento de inicio de una colección de seguimiento.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStop">
      <summary>Un evento con este código de operación es un evento de detención de una colección de seguimiento.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Extension">
      <summary>Un evento con este código de operación es un evento de extensión.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Info">
      <summary>Un evento con este código de operación es un evento informativo.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Receive">
      <summary>Se publica un evento con este código de operación cuando una actividad en una aplicación recibe datos.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Reply">
      <summary>Se publica un evento con este código de operación después de que una actividad en una aplicación responda a un evento.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Resume">
      <summary>Se publica un evento con este código de operación después de que una actividad en una aplicación se reanude desde un estado suspendido. El evento debe producirse después de un evento con el código de operación Suspend.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Send">
      <summary>Se publica un evento con este código de operación cuando una actividad en una aplicación transfiere datos o recursos del sistema a otra actividad.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Start">
      <summary>Se publica un evento con este código de operación cuando una aplicación inicia una nueva transacción o actividad. Ésta puede estar incrustada en otra transacción o actividad cuando se suceden varios eventos con el código de operación Start sin que se produzca un evento con el código de operación Stop.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Stop">
      <summary>Se publica un evento con este código de operación cuando finaliza una actividad o transacción en una aplicación. El evento corresponde al último evento no emparejado con el código de operación Start.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Suspend">
      <summary>Se publica un evento con este código de operación cuando se suspende una actividad en una aplicación.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventTask">
      <summary>Define las tareas estándar que el proveedor de eventos asocia a los eventos. Para obtener más información acerca de las tareas, vea <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventTask.None">
      <summary>No se usa ninguna tarea para identificar una parte de una aplicación que publica un evento.</summary>
    </member>
    <member name="T:System.Diagnostics.EventInstance">
      <summary>Representa la información independiente del idioma de una entrada del registro de eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventInstance" /> utilizando los identificadores de recursos especificados para el mensaje adaptado y el texto de categoría de la entrada de evento.</summary>
      <param name="instanceId">Identificador de recursos correspondiente a una cadena definida en el archivo de recursos de mensajes del origen de eventos.</param>
      <param name="categoryId">Identificador de recursos correspondiente a una cadena definida en el archivo de recursos de categorías del origen de eventos, o cero para no especificar ninguna categoría para el evento.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="instanceId" /> es un valor negativo o un valor mayor que <see cref="F:System.UInt32.MaxValue" />.
o bien
El parámetro <paramref name="categoryId" /> es un valor negativo o un valor mayor que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventInstance" /> utilizando los identificadores de recursos especificados para el mensaje adaptado y el texto de categoría de la entrada de evento y el tipo de entrada del registro de eventos especificado.</summary>
      <param name="instanceId">Identificador de recursos correspondiente a una cadena definida en el archivo de recursos de mensajes del origen de eventos.</param>
      <param name="categoryId">Identificador de recursos correspondiente a una cadena definida en el archivo de recursos de categorías del origen de eventos, o cero para no especificar ninguna categoría para el evento.</param>
      <param name="entryType">Valor de <see cref="T:System.Diagnostics.EventLogEntryType" /> que indica el tipo del evento.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="entryType" /> no es un valor <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="instanceId" /> es un valor negativo o un valor mayor que <see cref="F:System.UInt32.MaxValue" />.
o bien
<paramref name="categoryId" /> es un valor negativo o un valor mayor que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.CategoryId">
      <summary>Obtiene o establece el identificador de recursos que especifica la categoría definida por la aplicación de la entrada de evento.</summary>
      <returns>Valor de categoría numérico o identificador de recursos correspondiente a una cadena definida en el archivo de recursos de categoría del origen de eventos. El valor predeterminado es cero, lo que significa que no se mostrará ninguna categoría para la entrada de evento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La propiedad está establecida en un valor negativo o un valor mayor que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.EntryType">
      <summary>Obtiene o establece el tipo de evento de la entrada del registro de eventos.</summary>
      <returns>Valor de <see cref="T:System.Diagnostics.EventLogEntryType" /> que indica el tipo de entrada del evento. El valor predeterminado es <see cref="F:System.Diagnostics.EventLogEntryType.Information" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La propiedad no tiene establecido un valor válido de <see cref="T:System.Diagnostics.EventLogEntryType" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.InstanceId">
      <summary>Obtiene o establece el identificador de recursos que designa el texto del mensaje de la entrada de eventos.</summary>
      <returns>Identificador de recursos correspondiente a una cadena definida en el archivo de recursos de mensajes del origen de eventos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La propiedad está establecida en un valor negativo o un valor mayor que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="T:System.Diagnostics.EventLog">
      <summary>Proporciona interacción con los registros de eventos de Windows.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventLog" />. No asocia la instancia a ningún registro.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventLog" />. Asocia la instancia a un registro del equipo local.</summary>
      <param name="logName">Nombre del registro en el equipo local.</param>
      <exception cref="T:System.ArgumentNullException">El nombre del registro es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre del registro no es válido.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventLog" />. Asocia la instancia a un registro en el equipo especificado.</summary>
      <param name="logName">Nombre del registro en el equipo especificado.</param>
      <param name="machineName">Equipo en el que existe el registro.</param>
      <exception cref="T:System.ArgumentNullException">El nombre del registro es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre del registro no es válido.
o bien
El nombre de equipo no es válido.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventLog" />. Asocia la instancia a un registro en el equipo especificado y crea o asigna el origen especificado a <see cref="T:System.Diagnostics.EventLog" />.</summary>
      <param name="logName">Nombre del registro en el equipo especificado.</param>
      <param name="machineName">Equipo en el que existe el registro.</param>
      <param name="source">Origen de las entradas del registro de eventos.</param>
      <exception cref="T:System.ArgumentNullException">El nombre del registro es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre del registro no es válido.
o bien
El nombre de equipo no es válido.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.BeginInit">
      <summary>Comienza la inicialización de un objeto <see cref="T:System.Diagnostics.EventLog" /> que se emplea en un formulario o que utiliza otro componente. La inicialización se produce en tiempo de ejecución.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Diagnostics.EventLog" /> ya se ha inicializado.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Clear">
      <summary>Quita todas las entradas del registro de eventos.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">El registro de eventos no se ha borrado correctamente.
o bien
No puede abrirse el registro. No hay ningún código de error de Windows disponible.</exception>
      <exception cref="T:System.ArgumentException">No se especifica un valor para la propiedad <see cref="P:System.Diagnostics.EventLog.Log" />. Asegúrese de que el nombre del Registro no es una cadena vacía.</exception>
      <exception cref="T:System.InvalidOperationException">El registro no existe.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Close">
      <summary>Cierra el registro de eventos y libera los identificadores de lectura y escritura.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">El identificador de lectura o el identificador de escritura del registro de eventos no se ha liberado correctamente.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)">
      <summary>Establece un origen de eventos válido para la escritura de mensajes de evento localizados, mediante las propiedades de configuración especificadas para el origen y el correspondiente registro de eventos.</summary>
      <param name="sourceData">Propiedades de configuración para el origen de eventos y su registro de eventos de destino.</param>
      <exception cref="T:System.ArgumentException">El nombre de equipo especificado en <paramref name="sourceData" /> no es válido.
o bien
El nombre del origen especificado en <paramref name="sourceData" /> es <see langword="null" />.
O bien
El nombre de registro especificado en <paramref name="sourceData" /> no es válido. Los nombres de los registros de eventos deben estar compuestos por caracteres imprimibles, excluidos "*", "?" o "\".
O bien
El nombre del registro especificado en <paramref name="sourceData" /> no es válido para la creación de registros de usuario. Los nombres de registro de eventos AppEvent, SysEvent y SecEvent están reservados para uso del sistema.
o bien
El nombre del registro coincide con el nombre de un origen de eventos ya existente.
o bien
El nombre de origen especificado en <paramref name="sourceData" /> produce una ruta de clave del Registro con una longitud superior a 254 caracteres.
o bien
Los 8 primeros caracteres del nombre del registro especificado en <paramref name="sourceData" /> no son únicos.
o bien
El nombre de origen especificado en <paramref name="sourceData" /> ya está registrado.
o bien
El nombre de origen especificado en <paramref name="sourceData" /> coincide con un nombre del registro de eventos ya existente.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceData" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)">
      <summary>Establece el nombre de origen especificado como origen de eventos válido para la escritura de entradas en un registro del equipo local. Este método también puede crear un nuevo registro personalizado en el equipo local.</summary>
      <param name="source">Nombre del origen por el que se registra la aplicación en el equipo local.</param>
      <param name="logName">Nombre del registro en el que se escriben las entradas del origen. Entre los posibles valores se incluye Aplicación, Sistema o un registro de eventos personalizado.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> es una cadena vacía ("") o <see langword="null" />.
O bien
<paramref name="logName" /> no es un nombre de registro de eventos válido. Los nombres de los registros de eventos deben estar compuestos por caracteres imprimibles, excluidos "*", "?" o "\".
O bien
<paramref name="logName" /> no es válido para la creación del registro de usuario. Los nombres de registro de eventos AppEvent, SysEvent y SecEvent están reservados para uso del sistema.
o bien
El nombre del registro coincide con el nombre de un origen de eventos ya existente.
o bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.
o bien
Los 8 primeros caracteres de <paramref name="logName" /> coinciden con los 8 primeros caracteres del nombre de un registro de eventos ya existente.
o bien
No puede registrarse el origen porque ya existe en el equipo local.
O bien
El nombre del origen coincide con el nombre de un registro de eventos ya existente.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir en el equipo local la clave del Registro para el registro de eventos.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)">
      <summary>Establece el nombre de origen especificado como origen de eventos válido para la escritura de entradas en un registro del equipo especificado. Este método puede utilizarse también para crear un nuevo registro personalizado en el equipo especificado.</summary>
      <param name="source">Origen mediante el que se registra la aplicación en el equipo especificado.</param>
      <param name="logName">Nombre del registro en el que se escriben las entradas del origen. Entre los posibles valores se incluye Aplicación, Sistema o un registro de eventos personalizado. Si no se especifica un valor <paramref name="logName" /> toma Aplicación como valor predeterminado.</param>
      <param name="machineName">Nombre del equipo con el que se va a registrar este origen de eventos o "." para el equipo local.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> no es un nombre de equipo válido.
o bien
<paramref name="source" /> es una cadena vacía ("") o <see langword="null" />.
o bien
<paramref name="logName" /> no es un nombre de registro de eventos válido. Los nombres de los registros de eventos deben estar compuestos por caracteres imprimibles, excluidos "*", "?" o "\".
o bien
<paramref name="logName" /> no es válido para la creación del registro de usuario. Los nombres de registro de eventos AppEvent, SysEvent y SecEvent están reservados para uso del sistema.
O bien
El nombre del registro coincide con el nombre de un origen de eventos ya existente.
O bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.
o bien
Los 8 primeros caracteres de <paramref name="logName" /> coinciden con los 8 primeros caracteres del nombre de un registro de eventos ya existente en el equipo especificado.
O bien
No puede registrarse el origen porque ya existe en el equipo especificado.
O bien
El nombre del origen coincide con el nombre de un origen de eventos ya existente.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir en el equipo especificado la clave del Registro para el registro de eventos.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String)">
      <summary>Quita un registro de eventos del equipo local.</summary>
      <param name="logName">Nombre del registro que se va a eliminar. Entre los posibles valores se incluyen: Aplicación, Seguridad, Sistema y cualquier registro de eventos personalizado del equipo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="logName" /> es una cadena vacía ("") o <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir en el equipo local la clave del Registro para el registro de eventos.
o bien
El registro no existe en el equipo local.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El registro de eventos no se ha borrado correctamente.
O bien
No puede abrirse el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String,System.String)">
      <summary>Quita un registro de eventos del equipo especificado.</summary>
      <param name="logName">Nombre del registro que se va a eliminar. Entre los posibles valores se incluyen: Aplicación, Seguridad, Sistema y cualquier registro de eventos personalizado del equipo especificado.</param>
      <param name="machineName">Nombre del equipo del que se va a eliminar el registro o "." para el equipo local.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="logName" /> es una cadena vacía ("") o <see langword="null" />.
O bien
<paramref name="machineName" /> no es un nombre de equipo válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir en el equipo especificado la clave del Registro para el registro de eventos.
o bien
El registro no existe en el equipo especificado.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El registro de eventos no se ha borrado correctamente.
O bien
No puede abrirse el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)">
      <summary>Quita del registro de eventos del equipo local el registro del origen de eventos.</summary>
      <param name="source">Nombre con el que se registra la aplicación en el sistema de registro de eventos.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="source" /> no existe en el Registro del equipo local.
O bien
No se dispone de acceso de escritura en la clave del Registro para el registro de eventos.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)">
      <summary>Quita del equipo especificado el registro del origen de eventos de la aplicación.</summary>
      <param name="source">Nombre con el que se registra la aplicación en el sistema de registro de eventos.</param>
      <param name="machineName">Nombre del equipo del que hay que quitar el registro o "." para el equipo local.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="machineName" /> no es válido.
O bien
El parámetro <paramref name="source" /> no existe en el Registro del equipo especificado.
O bien
No se dispone de acceso de escritura en la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.InvalidOperationException">No se puede eliminar <paramref name="source" /> porque en el Registro, la clave del Registro primaria para <paramref name="source" /> no contiene una subclave con el mismo nombre.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados utilizados por el objeto <see cref="T:System.Diagnostics.EventLog" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="P:System.Diagnostics.EventLog.EnableRaisingEvents">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Diagnostics.EventLog" /> recibe notificaciones de eventos <see cref="E:System.Diagnostics.EventLog.EntryWritten" />.</summary>
      <returns>Es <see langword="true" /> si <see cref="T:System.Diagnostics.EventLog" /> recibe la notificación cuando se escribe una entrada en el registro; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">El registro de eventos está en un equipo remoto.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.EndInit">
      <summary>Termina la inicialización de <see cref="T:System.Diagnostics.EventLog" /> utilizada en un formulario o empleada por otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLog.Entries">
      <summary>Obtiene el contenido del registro de eventos.</summary>
      <returns>
        <see cref="T:System.Diagnostics.EventLogEntryCollection" /> que incluye las entradas del registro de eventos. Cada entrada se asocia a una instancia de la clase <see cref="T:System.Diagnostics.EventLogEntry" />.</returns>
    </member>
    <member name="E:System.Diagnostics.EventLog.EntryWritten">
      <summary>Se produce cuando se escribe una entrada en un registro de eventos en el equipo local.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String)">
      <summary>Determina si el registro existe en el equipo local.</summary>
      <param name="logName">Nombre del registro que se va a buscar. Entre los posibles valores se incluyen: Aplicación, Seguridad, Sistema, otros registros específicos de aplicaciones (como los asociados a Active Directory) o cualquier registro personalizado del equipo.</param>
      <returns>
        <see langword="true" /> si el registro existe en el equipo local; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">LogName es <see langword="null" /> o el valor está vacío.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String,System.String)">
      <summary>Determina si el registro existe en el equipo especificado.</summary>
      <param name="logName">Registro que se va a buscar. Entre los posibles valores se incluyen: Aplicación, Seguridad, Sistema, otros registros específicos de aplicaciones (como los asociados a Active Directory) o cualquier registro personalizado del equipo.</param>
      <param name="machineName">Nombre del equipo en el que se va a buscar el registro o "." para el equipo local.</param>
      <returns>
        <see langword="true" /> si el registro existe en el equipo especificado; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="machineName" /> no es un formato válido. Asegúrese de que ha utilizado la sintaxis adecuada para el equipo en el que está buscando.
o bien
El parámetro <paramref name="logName" /> es <see langword="null" /> o el valor está vacío.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs">
      <summary>Busca todos los registros de eventos en el equipo local y crea una matriz de objetos <see cref="T:System.Diagnostics.EventLog" /> que contiene la lista.</summary>
      <returns>Matriz de tipo <see cref="T:System.Diagnostics.EventLog" /> que representa los registros del equipo local.</returns>
      <exception cref="T:System.SystemException">No se dispone de acceso de lectura al Registro.
o bien
No existe ningún servicio de registro de eventos en el equipo.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs(System.String)">
      <summary>Busca todos los registros de eventos en el equipo dado y crea una matriz de objetos <see cref="T:System.Diagnostics.EventLog" /> que contiene la lista.</summary>
      <param name="machineName">Equipo en el que buscar registros de eventos.</param>
      <returns>Matriz de tipo <see cref="T:System.Diagnostics.EventLog" /> que representa los registros del equipo dado.</returns>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="machineName" /> no es un nombre de equipo válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se dispone de acceso de lectura al Registro.
o bien
No existe ningún servicio de registro de eventos en el equipo.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.Log">
      <summary>Obtiene o establece el nombre del registro del que se lee o en el que se escribe.</summary>
      <returns>Nombre del registro. Puede ser Aplicación, Sistema, Seguridad o el nombre de un registro personalizado. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.LogDisplayName">
      <summary>Obtiene el nombre descriptivo del registro de eventos.</summary>
      <returns>Nombre que representa el registro de eventos en el visor de eventos del sistema.</returns>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Diagnostics.EventLog.Log" /> especificada no existe en el Registro para este equipo.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)">
      <summary>Obtiene el nombre del registro en el que se registra el origen especificado.</summary>
      <param name="source">Nombre del origen de eventos.</param>
      <param name="machineName">Nombre del equipo en el que se debe buscar o "." para el equipo local.</param>
      <returns>Nombre del registro asociado al origen especificado en el Registro.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.MachineName">
      <summary>Obtiene o establece el nombre del equipo en el que se van a leer o en el que se van a escribir los eventos.</summary>
      <returns>Nombre del servidor en el que reside el registro de eventos. El valor predeterminado es el equipo local (".").</returns>
      <exception cref="T:System.ArgumentException">El nombre de equipo no es válido.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.MaximumKilobytes">
      <summary>Obtiene o establece el tamaño máximo del registro de eventos, en kilobytes.</summary>
      <returns>Tamaño máximo del registro de eventos, en kilobytes. El valor predeterminado es 512, lo que indica que el tamaño máximo de archivo es de 512 kilobytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado es menor que 64, mayor que 4194240 o no es un múltiplo par de 64.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> no es un nombre de registro válido.
o bien
No se ha podido abrir en el equipo de destino la clave del Registro para el registro de eventos.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.MinimumRetentionDays">
      <summary>Obtiene el número de días que se deben conservar las entradas en el registro de eventos.</summary>
      <returns>Número de días que se conservan las entradas del registro de eventos. El valor predeterminado es 7.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)">
      <summary>Cambia el comportamiento configurado para la escritura de entradas nuevas cuando el registro de eventos alcanza su tamaño máximo de archivo.</summary>
      <param name="action">Comportamiento de desbordamiento para la escritura de entradas nuevas en el registro de eventos.</param>
      <param name="retentionDays">Número mínimo de días que se conserva cada entrada del registro de eventos. Solo se utiliza este parámetro si <paramref name="action" /> se establece en <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" /> no es un valor <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="retentionDays" /> es menor que 1 o mayor que 365.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> no es un nombre de registro válido.
o bien
No se ha podido abrir en el equipo de destino la clave del Registro para el registro de eventos.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.OverflowAction">
      <summary>Obtiene el comportamiento configurado para el almacenamiento de entradas nuevas cuando el registro de eventos haya alcanzado su tamaño máximo de archivo.</summary>
      <returns>Valor de <see cref="T:System.Diagnostics.OverflowAction" /> que especifica el comportamiento de almacenamiento configurado para las entradas nuevas cuando el registro de eventos haya alcanzado su tamaño máximo. De manera predeterminada, es <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)">
      <summary>Especifica el nombre localizado del registro de eventos, que aparece en el Visor de eventos del servidor.</summary>
      <param name="resourceFile">Ruta de acceso completa a un archivo de recursos localizado.</param>
      <param name="resourceId">Identificador de recursos que indiza una cadena localizada dentro del archivo de recursos.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> no es un nombre de registro válido.
o bien
No se ha podido abrir en el equipo de destino la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceFile" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.Source">
      <summary>Obtiene o establece el nombre de origen que se va a registrar y utilizar al escribir en el registro de eventos.</summary>
      <returns>Nombre registrado con el registro de eventos como origen de entradas. El valor predeterminado es una cadena vacía ("").</returns>
      <exception cref="T:System.ArgumentException">El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String)">
      <summary>Determina si un origen de eventos está registrado en el equipo local.</summary>
      <param name="source">Nombre del origen de eventos.</param>
      <returns>
        <see langword="true" /> si el origen de eventos está registrado en el equipo local; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.Security.SecurityException">No se ha encontrado <paramref name="source" />, aunque no se ha podido buscar en algunos de los registros de eventos o en ninguno.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)">
      <summary>Determina si un origen de eventos está registrado en un equipo especificado.</summary>
      <param name="source">Nombre del origen de eventos.</param>
      <param name="machineName">Nombre del equipo en el se debe buscar o "." para el equipo local.</param>
      <returns>Es <see langword="true" /> si el origen de eventos está registrado en el equipo dado; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> no es un nombre de equipo válido.</exception>
      <exception cref="T:System.Security.SecurityException">No se ha encontrado <paramref name="source" />, aunque no se ha podido buscar en algunos de los registros de eventos o en ninguno.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.SynchronizingObject">
      <summary>Obtiene o establece el objeto utilizado para calcular las referencias de las llamadas del controlador de eventos emitidas como resultado de un evento escrito en una entrada de <see cref="T:System.Diagnostics.EventLog" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> utilizado para calcular las referencias de las llamadas del controlador de eventos emitidas como resultado de un evento <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> del registro de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String)">
      <summary>Escribe una entrada de tipo de información, con un texto de mensaje determinado, en el registro de eventos.</summary>
      <param name="message">Cadena que se va a escribir en el registro de eventos.</param>
      <exception cref="T:System.ArgumentException">Aún no se ha establecido la propiedad <see cref="P:System.Diagnostics.EventLog.Source" /> de <see cref="T:System.Diagnostics.EventLog" />.
o bien
El método ha intentado registrar un origen de eventos nuevo, pero el nombre de equipo de <see cref="P:System.Diagnostics.EventLog.MachineName" /> no es válido.
o bien
El origen ya está registrado para otro registro de eventos.
O bien
La cadena de mensaje es más de 31.839 bytes (32.766 bytes en los sistemas operativos Windows anterior a Windows Vista).
O bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)">
      <summary>Escribe en el registro de eventos una entrada de error, advertencia, información, auditoría correcta o auditoría incorrecta con el texto de mensaje dado.</summary>
      <param name="message">Cadena que se va a escribir en el registro de eventos.</param>
      <param name="type">Uno de los valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <exception cref="T:System.ArgumentException">Aún no se ha establecido la propiedad <see cref="P:System.Diagnostics.EventLog.Source" /> de <see cref="T:System.Diagnostics.EventLog" />.
O bien
El método ha intentado registrar un origen de eventos nuevo, pero el nombre de equipo de <see cref="P:System.Diagnostics.EventLog.MachineName" /> no es válido.
O bien
El origen ya está registrado para otro registro de eventos.
o bien
La cadena de mensaje es más de 31.839 bytes (32.766 bytes en los sistemas operativos Windows anterior a Windows Vista).
O bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> no es un <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>Escribe una entrada con el identificador de eventos definido por la aplicación y el texto de mensaje dado en el registro de eventos.</summary>
      <param name="message">Cadena que se va a escribir en el registro de eventos.</param>
      <param name="type">Uno de los valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <param name="eventID">Identificador específico de la aplicación para el evento.</param>
      <exception cref="T:System.ArgumentException">Aún no se ha establecido la propiedad <see cref="P:System.Diagnostics.EventLog.Source" /> de <see cref="T:System.Diagnostics.EventLog" />.
o bien
El método ha intentado registrar un origen de eventos nuevo, pero el nombre de equipo de <see cref="P:System.Diagnostics.EventLog.MachineName" /> no es válido.
O bien
El origen ya está registrado para otro registro de eventos.
O bien
<paramref name="eventID" /> es menor que cero o mayor que <see cref="F:System.UInt16.MaxValue" />.
o bien
La cadena de mensaje es más de 31.839 bytes (32.766 bytes en los sistemas operativos Windows anterior a Windows Vista).
o bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> no es un <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary>Escribe en el registro de eventos una entrada con el texto de mensaje dado, el identificador de eventos definido por la aplicación y la categoría definida por la aplicación.</summary>
      <param name="message">Cadena que se va a escribir en el registro de eventos.</param>
      <param name="type">Uno de los valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <param name="eventID">Identificador específico de la aplicación para el evento.</param>
      <param name="category">Subcategoría específica de la aplicación asociada al mensaje.</param>
      <exception cref="T:System.ArgumentException">Aún no se ha establecido la propiedad <see cref="P:System.Diagnostics.EventLog.Source" /> de <see cref="T:System.Diagnostics.EventLog" />.
O bien
El método ha intentado registrar un origen de eventos nuevo, pero el nombre de equipo de <see cref="P:System.Diagnostics.EventLog.MachineName" /> no es válido.
O bien
El origen ya está registrado para otro registro de eventos.
o bien
<paramref name="eventID" /> es menor que cero o mayor que <see cref="F:System.UInt16.MaxValue" />.
O bien
La cadena de mensaje es más de 31.839 bytes (32.766 bytes en los sistemas operativos Windows anterior a Windows Vista).
o bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> no es un <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary>Escribe en el registro de eventos una entrada con el texto de mensaje dado, el identificador de eventos definido por la aplicación y la categoría definida por la aplicación y anexa datos binarios al mensaje.</summary>
      <param name="message">Cadena que se va a escribir en el registro de eventos.</param>
      <param name="type">Uno de los valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <param name="eventID">Identificador específico de la aplicación para el evento.</param>
      <param name="category">Subcategoría específica de la aplicación asociada al mensaje.</param>
      <param name="rawData">Matriz de bytes que incluye los datos binarios asociados a la entrada.</param>
      <exception cref="T:System.ArgumentException">Aún no se ha establecido la propiedad <see cref="P:System.Diagnostics.EventLog.Source" /> de <see cref="T:System.Diagnostics.EventLog" />.
O bien
El método ha intentado registrar un origen de eventos nuevo, pero el nombre de equipo de <see cref="P:System.Diagnostics.EventLog.MachineName" /> no es válido.
o bien
El origen ya está registrado para otro registro de eventos.
O bien
<paramref name="eventID" /> es menor que cero o mayor que <see cref="F:System.UInt16.MaxValue" />.
o bien
La cadena de mensaje es más de 31.839 bytes (32.766 bytes en los sistemas operativos Windows anterior a Windows Vista).
o bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> no es un <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)">
      <summary>Escribe una entrada de tipo de información con un texto de mensaje determinado en el registro de eventos utilizando el origen de eventos registrado que se haya especificado.</summary>
      <param name="source">Origen mediante el que se registra la aplicación en el equipo especificado.</param>
      <param name="message">Cadena que se va a escribir en el registro de eventos.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="source" /> es una cadena vacía ("").
o bien
El valor <paramref name="source" /> es <see langword="null" />.
O bien
La cadena de mensaje es más de 31.839 bytes (32.766 bytes en los sistemas operativos Windows anterior a Windows Vista).
o bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)">
      <summary>Escribe en el registro de eventos una entrada de error, advertencia, información, auditoría correcta o auditoría incorrecta con el texto de mensaje dado mediante el origen de eventos registrado especificado.</summary>
      <param name="source">Origen mediante el que se registra la aplicación en el equipo especificado.</param>
      <param name="message">Cadena que se va a escribir en el registro de eventos.</param>
      <param name="type">Uno de los valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="source" /> es una cadena vacía ("").
o bien
El valor <paramref name="source" /> es <see langword="null" />.
o bien
La cadena de mensaje es más de 31.839 bytes (32.766 bytes en los sistemas operativos Windows anterior a Windows Vista).
o bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> no es un <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>Escribe en el registro de eventos una entrada con el texto de mensaje dado y el identificador de eventos definido por la aplicación mediante el origen de eventos registrado que se especifique.</summary>
      <param name="source">Origen mediante el que se registra la aplicación en el equipo especificado.</param>
      <param name="message">Cadena que se va a escribir en el registro de eventos.</param>
      <param name="type">Uno de los valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <param name="eventID">Identificador específico de la aplicación para el evento.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="source" /> es una cadena vacía ("").
o bien
El valor <paramref name="source" /> es <see langword="null" />.
o bien
<paramref name="eventID" /> es menor que cero o mayor que <see cref="F:System.UInt16.MaxValue" />.
o bien
La cadena de mensaje es más de 31.839 bytes (32.766 bytes en los sistemas operativos Windows anterior a Windows Vista).
O bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> no es un <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary>Escribe en el registro de eventos una entrada con el texto de mensaje dado, el identificador de eventos definido por la aplicación y la categoría definida por la aplicación mediante el origen de eventos registrado específico. El Visor de eventos puede usar el parámetro <paramref name="category" /> para filtrar los eventos del registro.</summary>
      <param name="source">Origen mediante el que se registra la aplicación en el equipo especificado.</param>
      <param name="message">Cadena que se va a escribir en el registro de eventos.</param>
      <param name="type">Uno de los valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <param name="eventID">Identificador específico de la aplicación para el evento.</param>
      <param name="category">Subcategoría específica de la aplicación asociada al mensaje.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="source" /> es una cadena vacía ("").
o bien
El valor <paramref name="source" /> es <see langword="null" />.
o bien
<paramref name="eventID" /> es menor que cero o mayor que <see cref="F:System.UInt16.MaxValue" />.
o bien
La cadena de mensaje es más de 31.839 bytes (32.766 bytes en los sistemas operativos Windows anterior a Windows Vista).
o bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> no es un <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary>Escribe en el registro de eventos una entrada con el texto de mensaje dado, el identificador de eventos definido por la aplicación y la categoría definida por la aplicación (mediante el origen de eventos registrado especificado) y anexa datos binarios al mensaje.</summary>
      <param name="source">Origen mediante el que se registra la aplicación en el equipo especificado.</param>
      <param name="message">Cadena que se va a escribir en el registro de eventos.</param>
      <param name="type">Uno de los valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <param name="eventID">Identificador específico de la aplicación para el evento.</param>
      <param name="category">Subcategoría específica de la aplicación asociada al mensaje.</param>
      <param name="rawData">Matriz de bytes que incluye los datos binarios asociados a la entrada.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="source" /> es una cadena vacía ("").
O bien
El valor <paramref name="source" /> es <see langword="null" />.
o bien
<paramref name="eventID" /> es menor que cero o mayor que <see cref="F:System.UInt16.MaxValue" />.
o bien
La cadena de mensaje es más de 31.839 bytes (32.766 bytes en los sistemas operativos Windows anterior a Windows Vista).
O bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> no es un <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary>Escribe una entrada de registro de eventos con los datos de evento dados, con cadenas de reemplazo de mensajes y con datos binarios asociados.</summary>
      <param name="instance">Instancia de <see cref="T:System.Diagnostics.EventInstance" /> que representa una entrada localizada del registro de eventos.</param>
      <param name="data">Matriz de bytes que incluye los datos binarios asociados a la entrada.</param>
      <param name="values">Matriz de cadenas que se van a fusionar mediante combinación para formar el texto del mensaje de la entrada del registro de eventos.</param>
      <exception cref="T:System.ArgumentException">Aún no se ha establecido la propiedad <see cref="P:System.Diagnostics.EventLog.Source" /> de <see cref="T:System.Diagnostics.EventLog" />.
o bien
El método ha intentado registrar un origen de eventos nuevo, pero el nombre de equipo de <see cref="P:System.Diagnostics.EventLog.MachineName" /> no es válido.
O bien
El origen ya está registrado para otro registro de eventos.
o bien
<paramref name="instance.InstanceId" /> es menor que cero o mayor que <see cref="F:System.UInt16.MaxValue" />.
o bien
<paramref name="values" /> tiene más de 256 elementos.
o bien
Uno de los elementos <paramref name="values" /> tiene más de 32766 bytes.
o bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])">
      <summary>Escribe una entrada localizada en el registro de eventos.</summary>
      <param name="instance">Instancia de <see cref="T:System.Diagnostics.EventInstance" /> que representa una entrada localizada del registro de eventos.</param>
      <param name="values">Matriz de cadenas que se van a fusionar mediante combinación para formar el texto del mensaje de la entrada del registro de eventos.</param>
      <exception cref="T:System.ArgumentException">Aún no se ha establecido la propiedad <see cref="P:System.Diagnostics.EventLog.Source" /> de <see cref="T:System.Diagnostics.EventLog" />.
O bien
El método ha intentado registrar un origen de eventos nuevo, pero el nombre de equipo de <see cref="P:System.Diagnostics.EventLog.MachineName" /> no es válido.
o bien
El origen ya está registrado para otro registro de eventos.
o bien
<paramref name="instance.InstanceId" /> es menor que cero o mayor que <see cref="F:System.UInt16.MaxValue" />.
o bien
<paramref name="values" /> tiene más de 256 elementos.
o bien
Uno de los elementos <paramref name="values" /> tiene más de 32766 bytes.
o bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary>Escribe una entrada de registro con los datos de evento dados, con cadenas de reemplazo de mensajes y con datos binarios asociados y, además, utiliza el origen de eventos registrado que se especifica.</summary>
      <param name="source">Nombre del origen de eventos registrado para la aplicación en el equipo especificado.</param>
      <param name="instance">Instancia de <see cref="T:System.Diagnostics.EventInstance" /> que representa una entrada localizada del registro de eventos.</param>
      <param name="data">Matriz de bytes que incluye los datos binarios asociados a la entrada.</param>
      <param name="values">Matriz de cadenas que se van a fusionar mediante combinación para formar el texto del mensaje de la entrada del registro de eventos.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="source" /> es una cadena vacía ("").
o bien
El valor <paramref name="source" /> es <see langword="null" />.
o bien
<paramref name="instance.InstanceId" /> es menor que cero o mayor que <see cref="F:System.UInt16.MaxValue" />.
O bien
<paramref name="values" /> tiene más de 256 elementos.
o bien
Uno de los elementos <paramref name="values" /> tiene más de 32766 bytes.
O bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])">
      <summary>Escribe una entrada de registro de eventos con las cadenas de reemplazo de mensaje y los datos de evento proporcionados, para lo que utiliza el origen de eventos registrado.</summary>
      <param name="source">Nombre del origen de eventos registrado para la aplicación en el equipo especificado.</param>
      <param name="instance">Instancia de <see cref="T:System.Diagnostics.EventInstance" /> que representa una entrada localizada del registro de eventos.</param>
      <param name="values">Matriz de cadenas que se van a fusionar mediante combinación para formar el texto del mensaje de la entrada del registro de eventos.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="source" /> es una cadena vacía ("").
o bien
El valor <paramref name="source" /> es <see langword="null" />.
o bien
<paramref name="instance.InstanceId" /> es menor que cero o mayor que <see cref="F:System.UInt16.MaxValue" />.
o bien
<paramref name="values" /> tiene más de 256 elementos.
o bien
Uno de los elementos <paramref name="values" /> tiene más de 32766 bytes.
o bien
El nombre de origen produce una ruta de clave del Registro con una longitud superior a 254 caracteres.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha podido abrir la clave del Registro para el registro de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema operativo ha notificado un error al escribir la entrada de evento en el registro. No hay ningún código de error de Windows disponible.</exception>
    </member>
    <member name="T:System.Diagnostics.EventLogEntry">
      <summary>Encapsula un único registro en el registro de eventos. Esta clase no puede heredarse.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Category">
      <summary>Obtiene el texto asociado a la propiedad <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> para esta entrada.</summary>
      <returns>Texto de la categoría específico de la aplicación.</returns>
      <exception cref="T:System.Exception">No se pudo asignar espacio para una de las cadenas de inserción asociadas a la categoría.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.CategoryNumber">
      <summary>Obtiene el número de categoría de la entrada del registro de eventos.</summary>
      <returns>Número de categoría específico de la aplicación para esta entrada.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Data">
      <summary>Obtiene los datos binarios asociados a la entrada.</summary>
      <returns>Matriz de bytes que incluye los datos binarios asociados a la entrada.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EntryType">
      <summary>Obtiene el tipo de evento de esta entrada.</summary>
      <returns>Tipo de evento asociado a la entrada en el registro de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)">
      <summary>Realiza una comparación entre dos entradas del registro de eventos.</summary>
      <param name="otherEntry">
        <see cref="T:System.Diagnostics.EventLogEntry" /> que se va comparar.</param>
      <returns>
        <see langword="true" /> si los objetos <see cref="T:System.Diagnostics.EventLogEntry" /> son idénticos; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EventID">
      <summary>Obtiene el identificador de evento específico de la aplicación para la entrada de evento actual.</summary>
      <returns>Identificador específico de la aplicación para el mensaje de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Index">
      <summary>Obtiene el índice de esta entrada en el registro de eventos.</summary>
      <returns>Índice de esta entrada en el registro de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.InstanceId">
      <summary>Obtiene el identificador de recursos que designa el texto del mensaje de la entrada de eventos.</summary>
      <returns>Identificador de recursos correspondiente a una definición de cadena del archivo de recursos de mensajes del origen de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.MachineName">
      <summary>Obtiene el nombre del equipo en el que se generó esta entrada.</summary>
      <returns>Nombre del equipo que contiene el registro de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Message">
      <summary>Obtiene el mensaje localizado asociado a esta entrada de evento.</summary>
      <returns>Texto localizado y con formato del mensaje. Incluye las cadenas de reemplazo asociadas.</returns>
      <exception cref="T:System.Exception">No se pudo asignar espacio para una de las cadenas de inserción asociadas al mensaje.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.ReplacementStrings">
      <summary>Obtiene las cadenas de reemplazo asociadas a la entrada del registro de eventos.</summary>
      <returns>Matriz que contiene las cadenas de reemplazo almacenadas en la entrada del evento.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Source">
      <summary>Obtiene el nombre de la aplicación que generó este evento.</summary>
      <returns>Nombre registrado con el registro de eventos como origen de este evento.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Llena <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto de destino.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="context">Destino (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />) de esta serialización.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeGenerated">
      <summary>Obtiene la hora local a la que se generó este evento.</summary>
      <returns>Hora local a la que se generó este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeWritten">
      <summary>Obtiene la hora local a la que se escribió este evento en el registro.</summary>
      <returns>Hora local a la que se escribió este evento en el registro.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.UserName">
      <summary>Obtiene el nombre del usuario responsable de este evento.</summary>
      <returns>Identificador de seguridad (SID) que identifica de forma única a un usuario o a un grupo.</returns>
      <exception cref="T:System.SystemException">No se pudo obtener la información de cuenta del SID del usuario.</exception>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryCollection">
      <summary>Define el tamaño y los enumeradores de una colección de instancias de <see cref="T:System.Diagnostics.EventLogEntry" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
      <summary>Copia los elementos de <see cref="T:System.Diagnostics.EventLogEntryCollection" /> en una matriz de instancias <see cref="T:System.Diagnostics.EventLogEntry" />, a partir de un índice de la matriz determinado.</summary>
      <param name="entries">Matriz unidimensional de instancias <see cref="T:System.Diagnostics.EventLogEntry" /> que constituye el destino de los elementos copiados de la colección. La matriz debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero de la matriz donde comienza la copia.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Count">
      <summary>Obtiene el número de entradas del registro de eventos (es decir, el número de elementos de la colección <see cref="T:System.Diagnostics.EventLogEntry" />).</summary>
      <returns>Número de entradas incluidas actualmente en el registro de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
      <summary>Admite una iteración simple en el objeto <see cref="T:System.Diagnostics.EventLogEntryCollection" />.</summary>
      <returns>Un objeto que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
      <summary>Obtiene una entrada del registro de eventos, en función de un índice que empieza por 0 (cero).</summary>
      <param name="index">Índice de base cero asociado a la entrada del registro de eventos.</param>
      <returns>Entrada del registro de eventos en la ubicación especificada por el parámetro <paramref name="index" />.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos de la colección en un objeto <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</summary>
      <param name="array">Clase <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados desde la colección. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a <see cref="T:System.Diagnostics.EventLogEntryCollection" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns>Es <see langword="false" /> si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot">
      <summary>Obtiene un objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:System.Diagnostics.EventLogEntryCollection" />.</summary>
      <returns>Objeto que se puede utilizar para sincronizar el acceso a la colección.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryType">
      <summary>Especifica el tipo de evento de una entrada del registro de eventos.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Error">
      <summary>Evento de error. Indica un error importante que el usuario debe conocer; normalmente, se trata de una pérdida de funcionalidad o de datos.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.FailureAudit">
      <summary>Evento de auditoría incorrecta. Indica un evento de seguridad que se produce cuando se genera un error de intento de acceso auditado; por ejemplo, cuando se genera un error al intentar abrir un archivo.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Information">
      <summary>Evento de información. Indica una operación significativa y correctamente realizada.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.SuccessAudit">
      <summary>Evento de auditoría correcta. Indica el evento de seguridad que se produce cuando hay un intento de acceso auditado correctamente realizado; por ejemplo, iniciar la sesión correctamente.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Warning">
      <summary>Evento de advertencia. Indica un problema que no es importante en ese momento, pero que puede indicar situaciones que podrían causar problemas en el futuro.</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogTraceListener">
      <summary>Proporciona un agente de escucha simple que dirige el resultado de la traza o la depuración a <see cref="T:System.Diagnostics.EventLog" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventLogTraceListener" /> sin un agente de escucha de seguimiento.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventLogTraceListener" /> utilizando el registro de eventos especificado.</summary>
      <param name="eventLog">Registro de eventos en el que se va a escribir.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventLogTraceListener" /> utilizando el origen especificado.</summary>
      <param name="source">Nombre de un origen existente del registro de eventos.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Close">
      <summary>Cierra el registro de eventos de forma que dejan de recibirse los resultados de la traza o la depuración.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.EventLog">
      <summary>Obtiene o establece el registro de eventos donde se va a escribir.</summary>
      <returns>Registro de eventos en el que se va a escribir.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.Name">
      <summary>Obtiene o establece el nombre de este objeto <see cref="T:System.Diagnostics.EventLogTraceListener" />.</summary>
      <returns>Nombre de este agente de escucha de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>Escribe la información de seguimiento, un objeto de datos y la información de evento en el registro de eventos.</summary>
      <param name="eventCache">Objeto que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</param>
      <param name="source">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</param>
      <param name="severity">Uno de los valores de enumeración que especifica el tipo de evento que ha causado el seguimiento.</param>
      <param name="id">Identificador numérico para el evento. La combinación de <paramref name="source" /> e <paramref name="id" /> identifica de manera única un evento.</param>
      <param name="data">Objeto de datos que se va a escribir en el archivo de salida o el flujo de salida.</param>
      <exception cref="T:System.ArgumentException">No se especificó <paramref name="source" />.
O bien
La cadena de entrada de registro supera 32.766 caracteres.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>Escribe la información de seguimiento, una matriz de objetos de datos y la información de evento en el registro de eventos.</summary>
      <param name="eventCache">Objeto que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</param>
      <param name="source">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</param>
      <param name="severity">Uno de los valores de enumeración que especifica el tipo de evento que ha causado el seguimiento.</param>
      <param name="id">Identificador numérico para el evento. La combinación de <paramref name="source" /> e <paramref name="id" /> identifica de manera única un evento.</param>
      <param name="data">Matriz de objetos de datos.</param>
      <exception cref="T:System.ArgumentException">No se especificó <paramref name="source" />.
O bien
La cadena de entrada de registro supera 32.766 caracteres.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>Escribe la información de seguimiento, un mensaje y la información de evento en el registro de eventos.</summary>
      <param name="eventCache">Objeto que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</param>
      <param name="source">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</param>
      <param name="severity">Uno de los valores de enumeración que especifica el tipo de evento que ha causado el seguimiento.</param>
      <param name="id">Identificador numérico para el evento. La combinación de <paramref name="source" /> e <paramref name="id" /> identifica de manera única un evento.</param>
      <param name="message">Mensaje de seguimiento.</param>
      <exception cref="T:System.ArgumentException">No se especificó <paramref name="source" />.
o bien
La cadena de entrada de registro supera 32.766 caracteres.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>Escribe la información de seguimiento, una matriz de objetos con formato y la información de evento en el registro de eventos.</summary>
      <param name="eventCache">Objeto que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</param>
      <param name="source">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</param>
      <param name="severity">Uno de los valores de enumeración que especifica el tipo de evento que ha causado el seguimiento.</param>
      <param name="id">Identificador numérico para el evento. La combinación de <paramref name="source" /> e <paramref name="id" /> identifica de manera única un evento.</param>
      <param name="format">Cadena de formato que contiene cero o más elementos de formato que corresponden a los objetos de la matriz <paramref name="args" />.</param>
      <param name="args">Matriz de <see langword="object" /> que contiene cero o más objetos a los que se va a aplicar formato.</param>
      <exception cref="T:System.ArgumentException">No se especificó <paramref name="source" />.
O bien
La cadena de entrada de registro supera 32.766 caracteres.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
      <summary>Escribe un mensaje en el registro de eventos para esta instancia.</summary>
      <param name="message">Mensaje que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" /> tiene más de 32,766 caracteres.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
      <summary>Escribe un mensaje en el registro de eventos para esta instancia.</summary>
      <param name="message">Mensaje que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" /> tiene más de 32,766 caracteres.</exception>
    </member>
    <member name="T:System.Diagnostics.EventSourceCreationData">
      <summary>Representa los valores de configuración utilizados para crear un origen de registro de eventos en el equipo local o un equipo remoto.</summary>
    </member>
    <member name="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.EventSourceCreationData" /> con un origen de eventos y un nombre de registro de eventos especificados.</summary>
      <param name="source">Nombre que se va a registrar con el registro de eventos como origen de entradas.</param>
      <param name="logName">El nombre del registro en el que se escriben las entradas del origen.</param>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
      <summary>Obtiene o establece el número de categorías en el archivo de recursos de categoría.</summary>
      <returns>El número de categorías del archivo de recursos de categoría. El valor predeterminado es cero.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La propiedad está establecida en un valor negativo o un valor mayor que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
      <summary>Obtiene o establece la ruta de acceso del archivo de recursos que contiene las cadenas de categoría para el origen.</summary>
      <returns>Ruta de acceso al archivo de recursos de categoría. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.LogName">
      <summary>Obtiene o establece el nombre del registro de eventos en el que el origen escribe las entradas.</summary>
      <returns>Nombre del registro de eventos. Puede ser Application, System o el nombre de un registro personalizado. El valor predeterminado es "Application".</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MachineName">
      <summary>Obtiene o establece el nombre del equipo en el que se va a registrar el origen de eventos.</summary>
      <returns>El nombre del sistema en el que se va a registrar el origen de eventos. El valor predeterminado es el equipo local (".").</returns>
      <exception cref="T:System.ArgumentException">El nombre de equipo no es válido.</exception>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
      <summary>Obtiene o establece la ruta de acceso al archivo de recursos de mensaje que contiene las cadenas de formato de mensajes del origen.</summary>
      <returns>Ruta de acceso al archivo de recursos de mensaje. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
      <summary>Obtiene o establece la ruta de acceso del archivo de recursos que contiene las cadenas de parámetros de mensaje para el origen.</summary>
      <returns>Ruta de acceso al archivo de recursos de parámetros. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.Source">
      <summary>Obtiene o establece el nombre que se va a registrar con el registro de eventos como origen de eventos.</summary>
      <returns>Nombre que se va a registrar con el registro de eventos como origen de entradas. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="T:System.Diagnostics.OverflowAction">
      <summary>Especifica el modo de tratar las entradas de un registro de eventos que ha alcanzado el tamaño de archivo máximo.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.DoNotOverwrite">
      <summary>Indica que las entradas existentes se retienen cuando el registro de eventos está lleno y las entradas nuevas se descartan.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteAsNeeded">
      <summary>Indica que cada nueva entrada sobrescribe la más antigua cuando el registro de eventos está lleno.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteOlder">
      <summary>Indica que los nuevos eventos sobrescriben los eventos anteriores a los especificados en el valor de la propiedad <see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" /> cuando el registro de eventos se llena. Los eventos nuevos se descartan si el registro de eventos está lleno y no hay eventos anteriores a los especificados en el valor de la propiedad <see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" />.</summary>
    </member>
  </members>
</doc>