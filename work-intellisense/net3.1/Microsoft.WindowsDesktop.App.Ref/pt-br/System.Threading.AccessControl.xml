<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.AccessControl</name>
  </assembly>
  <members>
    <member name="T:System.Security.AccessControl.EventWaitHandleAccessRule">
      <summary>Representa um conjunto de direitos de acesso permitidos ou negados para um usuário ou grupo. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />, especificando o usuário ou grupo ao qual a regra se aplica, os direitos de acesso e se estes são permitidos ou negados.</summary>
      <param name="identity">O usuário ou grupo ao qual a regra se aplica. Deve ser do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que especificam os direitos permitidos ou negados.</param>
      <param name="type">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que especificam se os direitos são permitidos ou negados.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> especifica um valor inválido.
- ou -
<paramref name="type" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> é <see langword="null" />.
- ou -
<paramref name="eventRights" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> não é do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />, especificando o nome do usuário ou do grupo ao qual a regra se aplica, os direitos de acesso e se eles são permitidos ou negados.</summary>
      <param name="identity">O nome do usuário ou grupo ao qual a regra se aplica.</param>
      <param name="eventRights">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que especificam os direitos permitidos ou negados.</param>
      <param name="type">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que especificam se os direitos são permitidos ou negados.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> especifica um valor inválido.
- ou -
<paramref name="type" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> é <see langword="null" />.
- ou -
<paramref name="identity" /> é uma cadeia de comprimento zero.
- ou -
<paramref name="identity" /> tem mais de 512 caracteres.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights">
      <summary>Obtém os direitos permitidos ou negados pela regra de acesso.</summary>
      <returns>Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que indicam os direitos permitidos ou negados pela regra de acesso.</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleAuditRule">
      <summary>Representa um conjunto de direitos de acesso a serem auditados para um usuário ou grupo. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />, especificando o usuário ou grupo a ser auditado, os direitos a serem auditados e se a auditoria deve ser realizada em caso de êxito, de falha ou ambos.</summary>
      <param name="identity">O usuário ou grupo ao qual a regra se aplica. Deve ser do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que especifica os tipos de acesso a serem auditados.</param>
      <param name="flags">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que especifica se a auditoria deve ser realizada em caso de êxito, de falha ou ambos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> especifica um valor inválido.
- ou -
<paramref name="flags" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> é <see langword="null" />.
- ou -
<paramref name="eventRights" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> não é do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights">
      <summary>Obtém os direitos de acesso afetados pela regra de auditoria.</summary>
      <returns>Uma combinação de bits <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> de valores que indica os direitos afetados pela regra de auditoria.</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleRights">
      <summary>Especifica os direitos de controle de acesso que podem ser aplicados a objetos de evento do sistema nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions">
      <summary>O direito de alterar as regras de segurança e auditoria associadas a um evento nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Delete">
      <summary>O direito de excluir um evento nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.FullControl">
      <summary>O direito de exercer controle total sobre um evento nomeado e modificar suas regras de acesso e auditoria.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Modify">
      <summary>O direito de definir ou redefinir o estado sinalizado de um evento nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions">
      <summary>O direito de abrir e copiar as regras de acesso e auditoria de um evento nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Synchronize">
      <summary>O direito de aguardar um evento nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.TakeOwnership">
      <summary>O direito de alterar o proprietário de um evento nomeado.</summary>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleSecurity">
      <summary>Representa a segurança de controle de acesso do Windows aplicada a um identificador de espera do sistema nomeado. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> com valores padrão.</summary>
      <exception cref="T:System.NotSupportedException">Essa classe não é compatível com o Windows 98 nem com o Windows Millennium Edition.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType">
      <summary>Obtém o tipo de enumeração que a classe <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> usa para representar os direitos de acesso.</summary>
      <returns>Um objeto <see cref="T:System.Type" /> que representa a enumeração <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Cria uma nova regra de controle de acesso para o usuário especificado, com os direitos de acesso, o controle de acesso e os sinalizadores especificados.</summary>
      <param name="identityReference">Um <see cref="T:System.Security.Principal.IdentityReference" /> que identifica o usuário ou o grupo ao qual a regra se aplica.</param>
      <param name="accessMask">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que especificam os direitos de acesso a serem permitidos ou negados, convertidos em um inteiro.</param>
      <param name="isInherited">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="inheritanceFlags">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="propagationFlags">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="type">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que especificam se os direitos são permitidos ou negados.</param>
      <returns>Um objeto <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> que representa os direitos especificados para o usuário indicado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="type" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> é <see langword="null" />.
- ou -
<paramref name="accessMask" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> não e do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType">
      <summary>Obtém o tipo que a classe <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> usa para representar as regras de acesso.</summary>
      <returns>Um objeto <see cref="T:System.Type" /> que representa a classe <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Pesquisa por uma regra de controle de acesso correspondente com a qual a nova regra pode ser mesclada. Se nenhum erro for encontrado, adiciona a nova regra.</summary>
      <param name="rule">A regra de controle de acesso a ser adicionada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Pesquisa uma regra de auditoria com a qual a nova regra pode ser mesclada. Se nenhum erro for encontrado, adiciona a nova regra.</summary>
      <param name="rule">A regra de auditoria a adicionar. O usuário especificado por essa regra determina a pesquisa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Cria uma nova regra de auditoria, especificando o usuário ao qual a regra se aplica, os direitos de acesso para auditoria e o resultado que dispara a regra de auditoria.</summary>
      <param name="identityReference">Um <see cref="T:System.Security.Principal.IdentityReference" /> que identifica o usuário ou o grupo ao qual a regra se aplica.</param>
      <param name="accessMask">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que especifica os direitos de acesso a serem auditados e convertidos em um inteiro.</param>
      <param name="isInherited">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="inheritanceFlags">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="propagationFlags">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="flags">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que especifica se a auditoria deve ser realizada em caso de acesso com êxito, com falha ou ambos.</param>
      <returns>Um objeto <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> que representa a regra de auditoria especificada para o usuário indicado. O tipo de retorno do método é a classe base, <see cref="T:System.Security.AccessControl.AuditRule" />, mas o valor retornado pode ser convertido com segurança para a classe derivada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="flags" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> é <see langword="null" />.
- ou -
<paramref name="accessMask" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> não e do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType">
      <summary>Obtém o tipo que a classe <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> usa para representar as regras de auditoria.</summary>
      <returns>Um objeto <see cref="T:System.Type" /> que representa a classe <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Pesquisa por uma regra de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) como a regra de acesso especificada e com sinalizadores de herança e de propagação compatíveis; se uma regra com essas características for encontrada, os direitos contidos na regra de acesso especificada serão removidos dela.</summary>
      <param name="rule">Um <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> que especifica o usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> pelo qual pesquisar, bem como um conjunto de sinalizadores de herança e de propagação com os quais uma regra correspondente, se encontrada, deve ser compatível. Especifica os direitos a serem removidos da regra compatível, se encontrado.</param>
      <returns>
        <see langword="true" /> se uma regra compatível for encontrada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Pesquisa por todas as regras de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) como a regra especificada e, se encontradas, remove-as.</summary>
      <param name="rule">Um <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> que especifica o usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> pelos quais pesquisar. Todos os direitos especificados por essa regra são ignorados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Pesquisa por uma regra de controle de acesso que corresponda exatamente à regra especificada e, se encontrada, remove-a.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Pesquisa por uma regra de auditoria com o mesmo usuário que a regra especificada e com sinalizadores de herança e de propagação compatíveis; se uma regra compatível for encontrada, os direitos contidos na regra especificada serão removidos dela.</summary>
      <param name="rule">Um <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> que especifica o usuário pelo qual pesquisar, bem como um conjunto de sinalizadores de herança e de propagação com os quais uma regra correspondente, se encontrada, deve ser compatível. Especifica os direitos a serem removidos da regra compatível, se encontrado.</param>
      <returns>
        <see langword="true" /> se uma regra compatível for encontrada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Pesquisa todas as regras de auditoria com o mesmo usuário que a regra especificada e, se encontradas, remove-as.</summary>
      <param name="rule">Um <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> que especifica o usuário pelo qual pesquisar. Todos os direitos especificados por essa regra são ignorados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Pesquisa por uma regra de auditoria que corresponda exatamente à regra especificada e, se encontrada, remove-a.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Remove todas as regras de controle de acesso com o mesmo usuário que a regra especificada, independentemente de <see cref="T:System.Security.AccessControl.AccessControlType" /> e, em seguida, adiciona a regra especificada.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> a ser adicionado. O usuário especificado por essa regra determina as regras a serem removidas antes dessa regra ser adicionada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Remove todas as regras de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) que a regra especificada e, em seguida, adiciona a regra especificada.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> a ser adicionado. O usuário e o <see cref="T:System.Security.AccessControl.AccessControlType" /> dessa regra determinam as regras a serem removidas antes dessa regra ser adicionada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Remove todas as regras de auditoria com o mesmo usuário que a regra especificada, independentemente do valor de <see cref="T:System.Security.AccessControl.AuditFlags" /> e, em seguida, adiciona a regra especificada.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> a ser adicionado. O usuário especificado por essa regra determina as regras a serem removidas antes dessa regra ser adicionada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.AccessControl.MutexAccessRule">
      <summary>Representa um conjunto de direitos de acesso permitidos ou negados para um usuário ou grupo. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.MutexAccessRule" />, especificando o usuário ou grupo ao qual a regra se aplica, os direitos de acesso e se estes são permitidos ou negados.</summary>
      <param name="identity">O usuário ou grupo ao qual a regra se aplica. Deve ser do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.MutexRights" /> que especificam os direitos permitidos ou negados.</param>
      <param name="type">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que especificam se os direitos são permitidos ou negados.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> especifica um valor inválido.
- ou -
<paramref name="type" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> é <see langword="null" />.
- ou -
<paramref name="eventRights" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> não é do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.MutexAccessRule" />, especificando o nome do usuário ou do grupo ao qual a regra se aplica, os direitos de acesso e se eles são permitidos ou negados.</summary>
      <param name="identity">O nome do usuário ou grupo ao qual a regra se aplica.</param>
      <param name="eventRights">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.MutexRights" /> que especificam os direitos permitidos ou negados.</param>
      <param name="type">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que especificam se os direitos são permitidos ou negados.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> especifica um valor inválido.
- ou -
<paramref name="type" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> é <see langword="null" />.
- ou -
<paramref name="identity" /> é uma cadeia de comprimento zero.
- ou -
<paramref name="identity" /> tem mais de 512 caracteres.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
      <summary>Obtém os direitos permitidos ou negados pela regra de acesso.</summary>
      <returns>Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.MutexRights" /> que indicam os direitos permitidos ou negados pela regra de acesso.</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexAuditRule">
      <summary>Representa um conjunto de direitos de acesso a serem auditados para um usuário ou grupo. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.MutexAuditRule" />, especificando o usuário ou grupo a ser auditado, os direitos a serem auditados e se a auditoria deve ser realizada em caso de êxito, de falha ou ambos.</summary>
      <param name="identity">O usuário ou grupo ao qual a regra se aplica. Deve ser do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.MutexRights" /> que especifica os tipos de acesso a serem auditados.</param>
      <param name="flags">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que especifica se a auditoria deve ser realizada em caso de êxito, de falha ou ambos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> especifica um valor inválido.
- ou -
<paramref name="flags" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> é <see langword="null" />.
- ou -
<paramref name="eventRights" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> não é do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo, como <see cref="T:System.Security.Principal.NTAccount" />, que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAuditRule.MutexRights">
      <summary>Obtém os direitos de acesso afetados pela regra de auditoria.</summary>
      <returns>Uma combinação de bits <see cref="T:System.Security.AccessControl.MutexRights" /> de valores que indica os direitos afetados pela regra de auditoria.</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexRights">
      <summary>Especifica os direitos de controle de acesso que podem ser aplicados a objetos mutex do sistema nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ChangePermissions">
      <summary>O direito de alterar as regras de segurança e auditoria associadas a um mutex nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Delete">
      <summary>O direito de excluir um mutex nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.FullControl">
      <summary>O direito de exercer controle total sobre um mutex nomeado e modificar suas regras de acesso e de auditoria.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Modify">
      <summary>O direito de liberar um mutex nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ReadPermissions">
      <summary>O direito de abrir e copiar as regras de acesso e de auditoria para um mutex nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Synchronize">
      <summary>O direito de esperar um mutex nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.TakeOwnership">
      <summary>O direito de alterar o proprietário de um mutex nomeado.</summary>
    </member>
    <member name="T:System.Security.AccessControl.MutexSecurity">
      <summary>Representa a segurança do controle de acesso do Windows de um mutex nomeado. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> com valores padrão.</summary>
      <exception cref="T:System.NotSupportedException">Essa classe não é compatível com o Windows 98 nem com o Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> com as seções especificadas das regras de segurança de controle de acesso do mutex do sistema com o nome especificado.</summary>
      <param name="name">O nome do sistema mutex cujas regras de segurança de controle de acesso devem ser recuperadas.</param>
      <param name="includeSections">Uma combinação de sinalizadores <see cref="T:System.Security.AccessControl.AccessControlSections" /> que especificam as seções a serem recuperadas.</param>
      <exception cref="T:System.IO.FileNotFoundException">Não há nenhum objeto do sistema com o nome especificado.</exception>
      <exception cref="T:System.NotSupportedException">Essa classe não é compatível com o Windows 98 nem com o Windows Millennium Edition.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
      <summary>Obtém a enumeração que a classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> usa para representar os direitos de acesso.</summary>
      <returns>Um objeto <see cref="T:System.Type" /> que representa a enumeração <see cref="T:System.Security.AccessControl.MutexRights" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Cria uma nova regra de controle de acesso para o usuário especificado, com os direitos de acesso, o controle de acesso e os sinalizadores especificados.</summary>
      <param name="identityReference">Um <see cref="T:System.Security.Principal.IdentityReference" /> que identifica o usuário ou o grupo ao qual a regra se aplica.</param>
      <param name="accessMask">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.MutexRights" /> que especificam os direitos de acesso a serem permitidos ou negados, convertidos em um inteiro.</param>
      <param name="isInherited">Sem utilidade para mutexes nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="inheritanceFlags">Sem utilidade para mutexes nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="propagationFlags">Sem utilidade para mutexes nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="type">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que especificam se os direitos são permitidos ou negados.</param>
      <returns>Um objeto <see cref="T:System.Security.AccessControl.MutexAccessRule" /> que representa os direitos especificados para o usuário especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="type" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> é <see langword="null" />.
- ou -
<paramref name="accessMask" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> não e do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
      <summary>Obtém o tipo que a classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> usa para representar as regras de acesso.</summary>
      <returns>Um objeto <see cref="T:System.Type" /> que representa a classe <see cref="T:System.Security.AccessControl.MutexAccessRule" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Pesquisa por uma regra de controle de acesso correspondente com a qual a nova regra pode ser mesclada. Se nenhum erro for encontrado, adiciona a nova regra.</summary>
      <param name="rule">A regra de controle de acesso a ser adicionada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Principal.IdentityNotMappedException">
        <paramref name="rule" /> não pode ser mapeado para uma identidade conhecida.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>Pesquisa uma regra de auditoria com a qual a nova regra pode ser mesclada. Se nenhum erro for encontrado, adiciona a nova regra.</summary>
      <param name="rule">A regra de auditoria a adicionar. O usuário especificado por essa regra determina a pesquisa.</param>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Cria uma nova regra de auditoria, especificando o usuário ao qual a regra se aplica, os direitos de acesso para auditoria e o resultado que dispara a regra de auditoria.</summary>
      <param name="identityReference">Um <see cref="T:System.Security.Principal.IdentityReference" /> que identifica o usuário ou o grupo ao qual a regra se aplica.</param>
      <param name="accessMask">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.MutexRights" /> que especifica os direitos de acesso a serem auditados e convertidos em um inteiro.</param>
      <param name="isInherited">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="inheritanceFlags">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="propagationFlags">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="flags">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que especificam se deve-se auditar acesso com êxito, acesso com falha ou ambos.</param>
      <returns>Um objeto <see cref="T:System.Security.AccessControl.MutexAuditRule" /> que representa a regra de auditoria para o usuário especificado. O tipo de retorno do método é a classe base, <see cref="T:System.Security.AccessControl.AuditRule" />, mas o valor retornado pode ser convertido com segurança para a classe derivada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="flags" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> é <see langword="null" />.
- ou -
<paramref name="accessMask" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> não e do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
      <summary>Obtém o tipo que a classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> usa para representar as regras de auditoria.</summary>
      <returns>Um objeto <see cref="T:System.Type" /> que representa a classe <see cref="T:System.Security.AccessControl.MutexAuditRule" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Procura uma regra de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) como a regra especificada e com herança compatível e sinalizadores de propagação; se uma regra com essas características for encontrada, os direitos contidos na regra de acesso especificada serão removidos dela.</summary>
      <param name="rule">Um <see cref="T:System.Security.AccessControl.MutexAccessRule" /> que especifica o usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> pelo qual pesquisar, bem como um conjunto de sinalizadores de herança e de propagação com os quais uma regra correspondente, se encontrada, deve ser compatível. Especifica os direitos a serem removidos da regra compatível, se encontrado.</param>
      <returns>
        <see langword="true" /> se uma regra compatível for encontrada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
      <summary>Pesquisa por todas as regras de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) como a regra especificada e, se encontradas, remove-as.</summary>
      <param name="rule">Um <see cref="T:System.Security.AccessControl.MutexAccessRule" /> que especifica o usuário e o <see cref="T:System.Security.AccessControl.AccessControlType" /> pelos quais pesquisar. Todos os direitos especificados por essa regra são ignorados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
      <summary>Pesquisa por uma regra de controle de acesso que corresponda exatamente à regra especificada e, se encontrada, remove-a.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.MutexAccessRule" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>Pesquisa uma regra de controle de auditoria com o mesmo usuário que a regra especificada e com sinalizadores de herança e de propagação compatíveis; se uma regra compatível for encontrada, os direitos contidos na regra especificada serão removidos dela.</summary>
      <param name="rule">Um <see cref="T:System.Security.AccessControl.MutexAuditRule" /> que especifica o usuário pelo qual pesquisar, bem como um conjunto de sinalizadores de herança e de propagação com os quais uma regra correspondente, se encontrada, deve ser compatível. Especifica os direitos a serem removidos da regra compatível, se encontrado.</param>
      <returns>
        <see langword="true" /> se uma regra compatível for encontrada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
      <summary>Pesquisa todas as regras de auditoria com o mesmo usuário que a regra especificada e, se encontradas, remove-as.</summary>
      <param name="rule">Um <see cref="T:System.Security.AccessControl.MutexAuditRule" /> que especifica o usuário pelo qual pesquisar. Todos os direitos especificados por essa regra são ignorados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
      <summary>Pesquisa por uma regra de auditoria que corresponda exatamente à regra especificada e, se encontrada, remove-a.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.MutexAuditRule" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Remove todas as regras de controle de acesso com o mesmo usuário que a regra especificada, independentemente de <see cref="T:System.Security.AccessControl.AccessControlType" /> e, em seguida, adiciona a regra especificada.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.MutexAccessRule" /> a ser adicionado. O usuário especificado por essa regra determina as regras a serem removidas antes dessa regra ser adicionada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Remove todas as regras de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) que a regra especificada e, em seguida, adiciona a regra especificada.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.MutexAccessRule" /> a ser adicionado. O usuário e o <see cref="T:System.Security.AccessControl.AccessControlType" /> dessa regra determinam as regras a serem removidas antes dessa regra ser adicionada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>Remove todas as regras de auditoria com o mesmo usuário que a regra especificada, independentemente do valor de <see cref="T:System.Security.AccessControl.AuditFlags" /> e, em seguida, adiciona a regra especificada.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.MutexAuditRule" /> a ser adicionado. O usuário especificado por essa regra determina as regras a serem removidas antes dessa regra ser adicionada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAccessRule">
      <summary>Representa um conjunto de direitos de acesso permitidos ou negados para um usuário ou grupo. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />, especificando o usuário ou grupo ao qual a regra se aplica, os direitos de acesso e se estes são permitidos ou negados.</summary>
      <param name="identity">O usuário ou grupo ao qual a regra se aplica. Deve ser do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que especificam os direitos permitidos ou negados.</param>
      <param name="type">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que especificam se os direitos são permitidos ou negados.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> especifica um valor inválido.
- ou -
<paramref name="type" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> é <see langword="null" />.
- ou -
<paramref name="eventRights" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> não é do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />, especificando o nome do usuário ou do grupo ao qual a regra se aplica, os direitos de acesso e se eles são permitidos ou negados.</summary>
      <param name="identity">O nome do usuário ou grupo ao qual a regra se aplica.</param>
      <param name="eventRights">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que especificam os direitos permitidos ou negados.</param>
      <param name="type">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que especificam se os direitos são permitidos ou negados.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> especifica um valor inválido.
- ou -
<paramref name="type" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> é <see langword="null" />.
- ou -
<paramref name="identity" /> é uma cadeia de comprimento zero.
- ou -
<paramref name="identity" /> tem mais de 512 caracteres.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
      <summary>Obtém os direitos permitidos ou negados pela regra de acesso.</summary>
      <returns>Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que indicam os direitos permitidos ou negados pela regra de acesso.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAuditRule">
      <summary>Representa um conjunto de direitos de acesso a serem auditados para um usuário ou grupo. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />, especificando o usuário ou grupo a ser auditado, os direitos a serem auditados e se a auditoria deve ser realizada em caso de êxito, de falha ou ambos.</summary>
      <param name="identity">O usuário ou grupo ao qual a regra se aplica. Deve ser do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que especifica os tipos de acesso a serem auditados.</param>
      <param name="flags">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que especifica se a auditoria deve ser realizada em caso de êxito, de falha ou ambos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> especifica um valor inválido.
- ou -
<paramref name="flags" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> é <see langword="null" />.
- ou -
<paramref name="eventRights" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> não é do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights">
      <summary>Obtém os direitos de acesso afetados pela regra de auditoria.</summary>
      <returns>Uma combinação de bits <see cref="T:System.Security.AccessControl.SemaphoreRights" /> de valores que indica os direitos afetados pela regra de auditoria.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreRights">
      <summary>Especifica os direitos de controle de acesso que podem ser aplicados a objetos de semáforo do sistema nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions">
      <summary>O direito de alterar as regras de segurança e auditoria associadas a um semáforo nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Delete">
      <summary>O direito de excluir um semáforo nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.FullControl">
      <summary>O direito de exercer controle total sobre um semáforo nomeado e modificar suas regras de acesso e auditoria.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Modify">
      <summary>O direito de liberar um semáforo nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions">
      <summary>O direito de abrir e copiar as regras de acesso e auditoria de um semáforo nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Synchronize">
      <summary>O direito de aguardar um semáforo nomeado.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.TakeOwnership">
      <summary>O direito de alterar o proprietário de um semáforo nomeado.</summary>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreSecurity">
      <summary>Representa a segurança do controle de acesso do Windows de um semáforo nomeado. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> com valores padrão.</summary>
      <exception cref="T:System.NotSupportedException">Essa classe não é compatível com o Windows 98 nem com o Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> com as seções especificadas das regras de segurança de controle de acesso do semáforo do sistema com o nome especificado.</summary>
      <param name="name">O nome do semáforo do sistema cujas regras de segurança de controle de acesso devem ser recuperadas.</param>
      <param name="includeSections">Uma combinação de sinalizadores <see cref="T:System.Security.AccessControl.AccessControlSections" /> que especificam as seções a serem recuperadas.</param>
      <exception cref="T:System.NotSupportedException">Essa classe não é compatível com o Windows 98 nem com o Windows Millennium Edition.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType">
      <summary>Obtém a enumeração que a classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> usa para representar os direitos de acesso.</summary>
      <returns>Um objeto <see cref="T:System.Type" /> que representa a enumeração <see cref="T:System.Security.AccessControl.SemaphoreRights" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Cria uma nova regra de controle de acesso para o usuário especificado, com os direitos de acesso, o controle de acesso e os sinalizadores especificados.</summary>
      <param name="identityReference">Um <see cref="T:System.Security.Principal.IdentityReference" /> que identifica o usuário ou o grupo ao qual a regra se aplica.</param>
      <param name="accessMask">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que especificam os direitos de acesso a serem permitidos ou negados, convertidos em um inteiro.</param>
      <param name="isInherited">Sem utilidade para semáforos nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="inheritanceFlags">Sem utilidade para semáforos nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="propagationFlags">Sem utilidade para semáforos nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="type">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que especificam se os direitos são permitidos ou negados.</param>
      <returns>Um objeto <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> que representa os direitos especificados para o usuário especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="type" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> é <see langword="null" />.
- ou -
<paramref name="accessMask" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> não e do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType">
      <summary>Obtém o tipo que a classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> usa para representar as regras de acesso.</summary>
      <returns>Um objeto <see cref="T:System.Type" /> que representa a classe <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Pesquisa por uma regra correspondente com a qual a nova regra pode ser mesclada. Se nenhum erro for encontrado, adiciona a nova regra.</summary>
      <param name="rule">A regra de controle de acesso a ser adicionada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Pesquisa uma regra de auditoria com a qual a nova regra pode ser mesclada. Se nenhum erro for encontrado, adiciona a nova regra.</summary>
      <param name="rule">A regra de auditoria a adicionar. O usuário especificado por essa regra determina a pesquisa.</param>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Cria uma nova regra de auditoria, especificando o usuário ao qual a regra se aplica, os direitos de acesso para auditoria e o resultado que dispara a regra de auditoria.</summary>
      <param name="identityReference">Um <see cref="T:System.Security.Principal.IdentityReference" /> que identifica o usuário ou o grupo ao qual a regra se aplica.</param>
      <param name="accessMask">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que especifica os direitos de acesso a serem auditados e convertidos em um inteiro.</param>
      <param name="isInherited">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="inheritanceFlags">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="propagationFlags">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</param>
      <param name="flags">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que especificam se deve-se auditar acesso com êxito, acesso com falha ou ambos.</param>
      <returns>Um objeto <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> que representa a regra de auditoria para o usuário especificado. O tipo de retorno do método é a classe base, <see cref="T:System.Security.AccessControl.AuditRule" />, mas o valor retornado pode ser convertido com segurança para a classe derivada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="flags" /> especifica um valor inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> é <see langword="null" />.
- ou -
<paramref name="accessMask" /> é zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> não e do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType">
      <summary>Obtém o tipo que a classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> usa para representar as regras de auditoria.</summary>
      <returns>Um objeto <see cref="T:System.Type" /> que representa a classe <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Procura uma regra de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) como a regra especificada e com herança compatível e sinalizadores de propagação; se uma regra com essas características for encontrada, os direitos contidos na regra de acesso especificada serão removidos dela.</summary>
      <param name="rule">Um <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> que especifica o usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> pelo qual pesquisar, bem como um conjunto de sinalizadores de herança e de propagação com os quais uma regra correspondente, se encontrada, deve ser compatível. Especifica os direitos a serem removidos da regra compatível, se encontrado.</param>
      <returns>
        <see langword="true" /> se uma regra compatível for encontrada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Pesquisa por todas as regras de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) como a regra especificada e, se encontradas, remove-as.</summary>
      <param name="rule">Um <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> que especifica o usuário e o <see cref="T:System.Security.AccessControl.AccessControlType" /> pelos quais pesquisar. Todos os direitos especificados por essa regra são ignorados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Pesquisa por uma regra de controle de acesso que corresponda exatamente à regra especificada e, se encontrada, remove-a.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Pesquisa uma regra de controle de auditoria com o mesmo usuário que a regra especificada e com sinalizadores de herança e de propagação compatíveis; se uma regra compatível for encontrada, os direitos contidos na regra especificada serão removidos dela.</summary>
      <param name="rule">Um <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> que especifica o usuário pelo qual pesquisar, bem como um conjunto de sinalizadores de herança e de propagação com os quais uma regra correspondente, se encontrada, deve ser compatível. Especifica os direitos a serem removidos da regra compatível, se encontrado.</param>
      <returns>
        <see langword="true" /> se uma regra compatível for encontrada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Pesquisa todas as regras de auditoria com o mesmo usuário que a regra especificada e, se encontradas, remove-as.</summary>
      <param name="rule">Um <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> que especifica o usuário pelo qual pesquisar. Todos os direitos especificados por essa regra são ignorados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Pesquisa por uma regra de auditoria que corresponda exatamente à regra especificada e, se encontrada, remove-a.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Remove todas as regras de controle de acesso com o mesmo usuário que a regra especificada, independentemente de <see cref="T:System.Security.AccessControl.AccessControlType" /> e, em seguida, adiciona a regra especificada.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> a ser adicionado. O usuário especificado por essa regra determina as regras a serem removidas antes dessa regra ser adicionada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Remove todas as regras de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) que a regra especificada e, em seguida, adiciona a regra especificada.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> a ser adicionado. O usuário e o <see cref="T:System.Security.AccessControl.AccessControlType" /> dessa regra determinam as regras a serem removidas antes dessa regra ser adicionada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Remove todas as regras de auditoria com o mesmo usuário que a regra especificada, independentemente do valor de <see cref="T:System.Security.AccessControl.AuditFlags" /> e, em seguida, adiciona a regra especificada.</summary>
      <param name="rule">O <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> a ser adicionado. O usuário especificado por essa regra determina as regras a serem removidas antes dessa regra ser adicionada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Threading.ThreadingAclExtensions" />
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.EventWaitHandle)">
      <param name="handle" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Mutex)">
      <param name="mutex" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Semaphore)">
      <param name="semaphore" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.EventWaitHandle,System.Security.AccessControl.EventWaitHandleSecurity)">
      <param name="handle" />
      <param name="eventSecurity" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Mutex,System.Security.AccessControl.MutexSecurity)">
      <param name="mutex" />
      <param name="mutexSecurity" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Semaphore,System.Security.AccessControl.SemaphoreSecurity)">
      <param name="semaphore" />
      <param name="semaphoreSecurity" />
    </member>
  </members>
</doc>