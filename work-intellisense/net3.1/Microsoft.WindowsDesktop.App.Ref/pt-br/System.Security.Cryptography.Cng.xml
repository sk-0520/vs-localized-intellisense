<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Cng</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <summary>Fornece um identificador seguro que pode ser usado por objetos CNG (Cryptography Next Generation).</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)">
      <summary>Cria uma nova instância da classe <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />.</summary>
      <param name="handle">O identificador pré-existente a ser usado. O uso de <see cref="F:System.IntPtr.Zero" /> retorna um identificador inválido.</param>
      <param name="parentHandle">O identificador pai deste <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentHandle" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="parentHandle" /> está fechado.
- ou -
<paramref name="parentHandle" /> é inválido.</exception>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeNCryptHandle.IsInvalid" />
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle">
      <summary>Libera um identificador usado por um objeto CNG (Cryptography Next Generation).</summary>
      <returns>
        <see langword="true" /> se o identificador é liberado com êxito; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle">
      <summary>Libera um identificador nativo usado por um objeto CNG (Cryptography Next Generation).</summary>
      <returns>
        <see langword="true" /> se o identificador é liberado com êxito; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle">
      <summary>Fornece um identificador seguro que representa uma chave (NCRYPT_KEY_HANDLE).</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)">
      <summary>Cria uma nova instância da classe <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />.</summary>
      <param name="handle">O identificador pré-existente a ser usado. O uso de <see cref="F:System.IntPtr.Zero" /> retorna um identificador inválido.</param>
      <param name="parentHandle">O identificador pai deste <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentHandle" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="parentHandle" /> está fechado.
- ou -
<paramref name="parentHandle" /> é inválido.</exception>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle">
      <summary>Fornece um identificador seguro que representa um provedor de armazenamento de chaves (NCRYPT_PROV_HANDLE).</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" />.</summary>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle">
      <summary>Fornece um identificador seguro que representa um valor de acordo secreto (NCRYPT_SECRET_HANDLE).</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" />.</summary>
    </member>
    <member name="T:System.Security.Cryptography.AesCng">
      <summary>Fornece uma implementação CNG (Cryptography Next Generation) do algoritmo da criptografia AES.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.AesCng" /> com uma chave efêmera.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.AesCng" /> com o nome da chave especificado, que representa uma chave AES persistente existente.</summary>
      <param name="keyName">O nome da chave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.AesCng" /> com o nome da chave especificado, que representa uma chave AES persistente existente e o KSP (provedor de armazenamento de chave) especificado.</summary>
      <param name="keyName">O nome da chave.</param>
      <param name="provider">O KSP que contém a chave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> é <see langword="null" />.
- ou -
<paramref name="provider" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.AesCng" /> com o nome da chave especificado, que representa uma chave AES persistente existente, KSP (provedor de armazenamento de chave) especificado e opções de abertura de chave.</summary>
      <param name="keyName">O nome da chave.</param>
      <param name="provider">O KSP que contém a chave.</param>
      <param name="openOptions">Uma combinação bit a bit dos valores de enumeração que especifica opções para abrir a chave, como de onde a chave é aberta (armazenamento do usuário ou computador) e se o prompt da interface do usuário deve ser suprimido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> é <see langword="null" />.
- ou -
<paramref name="provider" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.CreateDecryptor">
      <summary>Cria um objeto descriptografador AES simétrico com a chave atual e o <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> (vetor de inicialização).</summary>
      <returns>Um objeto descriptografador AES simétrico.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Cria um objeto descriptografador AES simétrico com a chave especificada e o IV (vetor de inicialização).</summary>
      <param name="rgbKey">A chave secreta a ser usada para o algoritmo AES. O tamanho da chave deve ser 128, 192 ou 256 bits.</param>
      <param name="rgbIV">O vetor de inicialização a ser usado para o algoritmo AES.</param>
      <returns>Um objeto descriptografador AES simétrico.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbKey" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rgbKey" /> não é um tamanho válido para este algoritmo.
- ou -
O tamanho de <paramref name="rgbIV" /> não corresponde ao tamanho do bloco deste algoritmo.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="rgbKey" /> é uma chave fraca conhecida para este algoritmo e não pode ser usada.
- ou -
<paramref name="rgbIV" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.CreateEncryptor">
      <summary>Cria um objeto criptografador AES simétrico usando a chave atual e o <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> (vetor de inicialização).</summary>
      <returns>Um objeto criptografador AES simétrico.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Cria um objeto criptografador AES simétrico com a chave especificada e o IV (vetor de inicialização).</summary>
      <param name="rgbKey">A chave secreta a ser usada para o algoritmo AES. O tamanho da chave deve ser 128, 192 ou 256 bits.</param>
      <param name="rgbIV">O vetor de inicialização a ser usado para o algoritmo AES.</param>
      <returns>Um objeto criptografador AES simétrico.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbKey" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rgbKey" /> não é um tamanho válido para este algoritmo.
- ou -
O tamanho de <paramref name="rgbIV" /> não corresponde ao tamanho do bloco deste algoritmo.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="rgbKey" /> é uma chave fraca conhecida para este algoritmo e não pode ser usada.
- ou -
<paramref name="rgbIV" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.GenerateIV">
      <summary>Gera um IV (vetor de inicialização) aleatório a ser usado para o algoritmo AES.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.GenerateKey">
      <summary>Gera uma chave aleatória a ser usada para o algoritmo AES.</summary>
    </member>
    <member name="P:System.Security.Cryptography.AesCng.Key">
      <summary>Obtém ou define a chave para o algoritmo <see cref="T:System.Security.Cryptography.AesCng" />.</summary>
      <returns>A chave do <see cref="T:System.Security.Cryptography.AesCng" /> algoritmo.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCng.KeySize">
      <summary>Obtém ou define o tamanho, em bits, da chave secreta usada pelo algoritmo <see cref="T:System.Security.Cryptography.AesCng" />.</summary>
      <returns>O tamanho, em bits, da chave secreta usada pelo <see cref="T:System.Security.Cryptography.AesCng" /> algoritmo.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngAlgorithm">
      <summary>Encapsula o nome de um algoritmo de criptografia.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</summary>
      <param name="algorithm">O nome do algoritmo a ser inicializado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="algorithm" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O comprimento do parâmetro <paramref name="algorithm" /> é 0 (zero).</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Algorithm">
      <summary>Obtém o nome do algoritmo que o objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> atual especifica.</summary>
      <returns>O nome do algoritmo inserido.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellman">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica um algoritmo de troca de chaves Diffie-Hellman de Curva Elíptica (ECDH) cuja curva é descrita por meio de uma propriedade de chave.</summary>
      <returns>Um objeto que especifica um algoritmo de troca de chaves ECDH cuja curva é descrita por meio de uma propriedade de chave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica um algoritmo de troca de chaves ECDH (Diffie-Hellman de Curva Elíptica) que usa a curva P-256.</summary>
      <returns>Um objeto que especifica um algoritmo ECDH que usa a curva P-256.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica um algoritmo de troca de chaves ECDH (Diffie-Hellman de Curva Elíptica) que usa a curva P-384.</summary>
      <returns>Um objeto que especifica um algoritmo ECDH que usa a curva P-384.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica um algoritmo de troca de chaves ECDH (Diffie-Hellman de Curva Elíptica) que usa a curva P-521.</summary>
      <returns>Um objeto que especifica um algoritmo ECDH que usa a curva P-521.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsa">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica um ECDSA (Algoritmo de Assinatura Digital Curva Elíptica) cuja curva é descrita por meio de uma propriedade de chave.</summary>
      <returns>Um objeto que especifica um ECDSA cuja curva é descrita por meio de uma propriedade de chave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsaP256">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica um ECDSA (Algoritmo de Assinatura Digital Curva Elíptica) que usa a curva P-256.</summary>
      <returns>Um objeto que especifica um algoritmo ECDSA que usa a curva P-256.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsaP384">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica um ECDSA (Algoritmo de Assinatura Digital Curva Elíptica) que usa a curva P-384.</summary>
      <returns>Um objeto que especifica um algoritmo ECDSA que usa a curva P-384.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsaP521">
      <summary>Obtém um novo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica um ECDSA (Algoritmo de Assinatura Digital Curva Elíptica) que usa a curva P-521.</summary>
      <returns>Um objeto que especifica um algoritmo ECDSA que usa a curva P-521.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Object)">
      <summary>Compara o objeto especificado ao objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> atual.</summary>
      <param name="obj">Um objeto a ser comparado ao objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> atual.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="obj" /> for um <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica o mesmo algoritmo que o objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)">
      <summary>Compara o objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> especificado ao objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> atual.</summary>
      <param name="other">Um objeto a ser comparado ao objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> atual.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="other" /> especifica o mesmo algoritmo que o objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.GetHashCode">
      <summary>Gera um valor de hash para o nome do algoritmo que está inserido no objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> atual.</summary>
      <returns>O valor de hash do nome do algoritmo inserido.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.MD5">
      <summary>Obtém um novo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica o algoritmo de hash MD5 (Resumo da Mensagem 5).</summary>
      <returns>Um objeto que especifica o algoritmo MD5.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)">
      <summary>Determina se dois objetos <see cref="T:System.Security.Cryptography.CngAlgorithm" /> especificam o mesmo nome de algoritmo.</summary>
      <param name="left">Um objeto que especifica um nome de algoritmo.</param>
      <param name="right">Um segundo objeto, a ser comparado ao objeto que é identificado pelo parâmetro <paramref name="left" />.</param>
      <returns>
        <see langword="true" /> se os dois objetos especificam o mesmo nome de algoritmo, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)">
      <summary>Determina se dois objetos <see cref="T:System.Security.Cryptography.CngAlgorithm" /> não especificam o mesmo algoritmo.</summary>
      <param name="left">Um objeto que especifica um nome de algoritmo.</param>
      <param name="right">Um segundo objeto, a ser comparado ao objeto que é identificado pelo parâmetro <paramref name="left" />.</param>
      <returns>
        <see langword="true" /> se os dois objetos não especificam o mesmo nome de algoritmo, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Rsa">
      <summary>Obtém um novo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica o algoritmo de hash RSA.</summary>
      <returns>Um objeto que especifica o algoritmo RSA.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha1">
      <summary>Obtém um novo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica o algoritmo SHA-1 (Secure Hash Algorithm 1).</summary>
      <returns>Um objeto que especifica o algoritmo SHA-1.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha256">
      <summary>Obtém um novo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica o algoritmo SHA-256 (Secure Hash Algorithm 256).</summary>
      <returns>Um objeto que especifica o algoritmo SHA-256.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha384">
      <summary>Obtém um novo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica o algoritmo SHA-384 (Secure Hash Algorithm 384).</summary>
      <returns>Um objeto que especifica o algoritmo SHA-384.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha512">
      <summary>Obtém um novo objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> que especifica o algoritmo SHA-512 (Secure Hash Algorithm 512).</summary>
      <returns>Um objeto que especifica o algoritmo SHA-512.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.ToString">
      <summary>Obtém o nome do algoritmo que o objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> atual especifica.</summary>
      <returns>O nome do algoritmo inserido.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngAlgorithmGroup">
      <summary>Encapsula o nome de um grupo de algoritmos de criptografia.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />.</summary>
      <param name="algorithmGroup">O nome do grupo de algoritmos a ser inicializado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="algorithmGroup" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O comprimento do parâmetro <paramref name="algorithmGroup" /> é 0 (zero).</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup">
      <summary>Obtém o nome do grupo de algoritmos que o objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> atual especifica.</summary>
      <returns>O nome do grupo de algoritmos inserido.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica a família de algoritmos Diffie-Hellman.</summary>
      <returns>Um objeto que especifica a família de algoritmos Diffie-Hellman.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.Dsa">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica a família de algoritmos DSA (Algoritmo de Assinatura Digital).</summary>
      <returns>Um objeto que especifica a família de algoritmos DSA.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica a família de algoritmos ECDH (Diffie-Hellman de Curva Elíptica).</summary>
      <returns>Um objeto que especifica a família de algoritmos ECDH.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.ECDsa">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica a família de algoritmos ECDSA (Algoritmo de Assinatura Digital Curva Elíptica).</summary>
      <returns>Um objeto que especifica a família de algoritmos de ECDSA.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)">
      <summary>Compara o objeto especificado ao objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> atual.</summary>
      <param name="obj">Um objeto a ser comparado ao objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> atual.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="obj" /> for um <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica o mesmo grupo de algoritmos que o objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)">
      <summary>Compara o objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> especificado ao objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> atual.</summary>
      <param name="other">Um objeto a ser comparado ao objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> atual.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="other" /> especifica o mesmo grupo de algoritmos que o objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.GetHashCode">
      <summary>Gera um valor de hash para o nome do grupo de algoritmos que está inserido no objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> atual.</summary>
      <returns>O valor de hash do nome do grupo de algoritmos inserido.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)">
      <summary>Determina se dois objetos <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> especificam o mesmo grupo de algoritmos.</summary>
      <param name="left">Um objeto que especifica um grupo de algoritmos.</param>
      <param name="right">Um segundo objeto, a ser comparado ao objeto que é identificado pelo parâmetro <paramref name="left" />.</param>
      <returns>
        <see langword="true" /> se os dois objetos especificam o mesmo grupo de algoritmos, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)">
      <summary>Determina se dois objetos <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> não especificam o mesmo grupo de algoritmos.</summary>
      <param name="left">Um objeto que especifica um grupo de algoritmos.</param>
      <param name="right">Um segundo objeto, a ser comparado ao objeto que é identificado pelo parâmetro <paramref name="left" />.</param>
      <returns>
        <see langword="true" /> se os dois objetos não especificam o mesmo grupo de algoritmos, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.Rsa">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica a família de algoritmos RSA (Rivest-Shamir-Adleman).</summary>
      <returns>Um objeto que especifica a família de algoritmos RSA.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.ToString">
      <summary>Obtém o nome do grupo de algoritmos que o objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> atual especifica.</summary>
      <returns>O nome do grupo de algoritmos inserido.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngExportPolicies">
      <summary>Especifica as políticas de exportação de chave para uma chave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowArchiving">
      <summary>A chave privada pode ser exportada uma vez para fins de arquivamento.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowExport">
      <summary>A chave privada pode ser exportada várias vezes.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowPlaintextArchiving">
      <summary>A chave privada pode ser exportada uma vez como texto não criptografado.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowPlaintextExport">
      <summary>A chave privada pode ser exportada várias vezes como texto não criptografado.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.None">
      <summary>Nenhuma política de exportação é estabelecida. A exportação de chave é permitida sem restrição.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKey">
      <summary>Define a funcionalidade básica das chaves usadas com objetos CNG (Cryptography Next Generation).</summary>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.Algorithm">
      <summary>Obtém o algoritmo que é usado pela chave.</summary>
      <returns>Um objeto que especifica o nome de um algoritmo de criptografia.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.AlgorithmGroup">
      <summary>Obtém o grupo de algoritmos que é usado pela chave.</summary>
      <returns>Um objeto que especifica o nome de um grupo de algoritmos de criptografia.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)">
      <summary>Cria um objeto <see cref="T:System.Security.Cryptography.CngKey" /> que pode ser usado com o algoritmo especificado.</summary>
      <param name="algorithm">O algoritmo com o qual a chave será usada.</param>
      <returns>Uma chave efêmera.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithm" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)">
      <summary>Cria um objeto <see cref="T:System.Security.Cryptography.CngKey" /> nomeado que fornece o algoritmo especificado.</summary>
      <param name="algorithm">O algoritmo com o qual a chave será usada.</param>
      <param name="keyName">O nome da chave. Se um nome não for fornecido, a chave não será persistente.</param>
      <returns>Uma chave efêmera ou persistente que fornece o algoritmo especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithm" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)">
      <summary>Cria um objeto <see cref="T:System.Security.Cryptography.CngKey" /> nomeado que fornece o algoritmo especificado, usando os parâmetros de criação de chave fornecidos.</summary>
      <param name="algorithm">O algoritmo com o qual a chave será usada.</param>
      <param name="keyName">O nome da chave. Se um nome não for fornecido, a chave não será persistente.</param>
      <param name="creationParameters">Um objeto que especifica os parâmetros avançados para o método, incluindo o <see cref="T:System.Security.Cryptography.CngProvider" />.</param>
      <returns>Uma chave efêmera ou persistente que fornece o algoritmo especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithm" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Delete">
      <summary>Remove a chave que está associada ao objeto.</summary>
      <exception cref="T:System.ObjectDisposedException">Foi feita uma tentativa de acessar uma chave excluída.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Dispose">
      <summary>Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Security.Cryptography.CngKey" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Exists(System.String)">
      <summary>Verifica se existe uma chave nomeada no KSP (provedor de armazenamento de chaves) padrão.</summary>
      <param name="keyName">O nome da chave.</param>
      <returns>
        <see langword="true" /> se a chave nomeada existir no KSP padrão, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)">
      <summary>Verifica se existe uma chave nomeada no KSP (provedor de armazenamento de chaves) especificada.</summary>
      <param name="keyName">O nome da chave.</param>
      <param name="provider">O KSP a ser verificado para a chave.</param>
      <returns>
        <see langword="true" /> se a chave nomeada existir no provedor especificado, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> ou <paramref name="provider" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>Verifica se existe uma chave nomeada no KSP (provedor de armazenamento de chaves) especificada, de acordo com as opções especificadas.</summary>
      <param name="keyName">O nome da chave.</param>
      <param name="provider">O KSP a ser pesquisado para a chave.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que especifica opções para abrir uma chave.</param>
      <returns>
        <see langword="true" /> se a chave nomeada existir no provedor especificado, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> ou <paramref name="provider" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Exporta o material da chave em um BLOB, no formato especificado.</summary>
      <param name="format">Um objeto que especifica o formato do BLOB de chaves.</param>
      <returns>Um BLOB que contém o material da chave, no formato especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros. Normalmente, o <see cref="P:System.Security.Cryptography.CngKey.ExportPolicy" /> não permite que a chave seja exportada.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.ExportPolicy">
      <summary>Obtém a política de exportação que é usada pela chave.</summary>
      <returns>Um objeto que especifica a política de exportação para a chave.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)">
      <summary>Obtém uma propriedade, dado um nome e um conjunto de opções da propriedade.</summary>
      <param name="name">O nome da propriedade desejada.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que especifica opções para a propriedade nomeada.</param>
      <returns>Um objeto que contém o valor bruto da propriedade especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.Handle">
      <summary>Obtém um identificador seguro que representa uma chave nativa (NCRYPT_KEY_HANDLE).</summary>
      <returns>Um identificador seguro que representa a chave.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)">
      <summary>Verifica para ver se a propriedade especificada existe na chave.</summary>
      <param name="name">O nome da propriedade a ser verificada.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que especifica opções para a propriedade nomeada.</param>
      <returns>
        <see langword="true" /> se a propriedade especificada for encontrada, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Cria uma nova chave ao importar o material chave especificado para o KSP (provedor de armazenamento de chaves) padrão, usando o formato especificado.</summary>
      <param name="keyBlob">Uma matriz que contém as informações de chave.</param>
      <param name="format">Um objeto que especifica o formato da matriz <paramref name="keyBlob" />.</param>
      <returns>Uma nova chave.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyBlob" /> ou <paramref name="format" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)">
      <summary>Cria uma nova chave ao importar o material chave especificado para o KSP (provedor de armazenamento de chaves), usando o formato especificado.</summary>
      <param name="keyBlob">Uma matriz que contém as informações de chave.</param>
      <param name="format">Um objeto que especifica o formato da matriz <paramref name="keyBlob" />.</param>
      <param name="provider">O KSP.</param>
      <returns>Uma nova chave.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyBlob" />, <paramref name="format" /> ou <paramref name="provider" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.IsEphemeral">
      <summary>Obtém o estado de persistência da chave.</summary>
      <returns>
        <see langword="true" /> se a chave for efêmera; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.IsMachineKey">
      <summary>Obtém o escopo (computador ou usuário) da chave.</summary>
      <returns>
        <see langword="true" /> se a chave estiver disponível em todo o computador; <see langword="false" /> se a chave for somente para o usuário atual.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.KeyName">
      <summary>Obtém o nome da chave.</summary>
      <returns>O nome da chave. Se a chave for efêmera, o valor será <see langword="null" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.KeySize">
      <summary>Obtém o tamanho da chave em bits.</summary>
      <returns>O tamanho da chave em bits.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.KeyUsage">
      <summary>Obtém as operações criptográficas especificadas pela chave.</summary>
      <returns>Uma combinação de bits de bit que especifica os usos permitidos para a chave.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)">
      <summary>Cria uma instância de um objeto <see cref="T:System.Security.Cryptography.CngKey" /> usando um identificador para uma chave existente.</summary>
      <param name="keyHandle">Um identificador para uma chave existente.</param>
      <param name="keyHandleOpenOptions">Um dos valores de enumeração que indica se <paramref name="keyHandle" /> representa uma chave efêmera ou uma chave nomeada.</param>
      <returns>Uma chave existente.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyHandle" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyHandle" /> é inválido ou mal formado ou já está fechado. Essa exceção também será gerada se a chave for uma chave efêmera criada pelo CLR (Common Language Runtime), mas o valor <see cref="F:System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey" /> não for especificado.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(System.String)">
      <summary>Cria uma instância de um objeto <see cref="T:System.Security.Cryptography.CngKey" /> que representa uma chave nomeada existente.</summary>
      <param name="keyName">O nome da chave.</param>
      <returns>Uma chave existente.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)">
      <summary>Cria uma instância de um objeto <see cref="T:System.Security.Cryptography.CngKey" /> que representa uma chave nomeada existente, usando o KSP (provedor de armazenamento de chaves) especificado.</summary>
      <param name="keyName">O nome da chave.</param>
      <param name="provider">O KSP que contém a chave.</param>
      <returns>Uma chave existente.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> ou <paramref name="provider" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>Cria uma instância de um objeto <see cref="T:System.Security.Cryptography.CngKey" /> que representa uma chave nomeada existente, usando o KSP (provedor de armazenamento de chaves) e as opções de abertura da chave especificados.</summary>
      <param name="keyName">O nome da chave.</param>
      <param name="provider">O KSP que contém a chave.</param>
      <param name="openOptions">Uma combinação bit a bit dos valores de enumeração que especifica opções para abrir a chave, como de onde a chave é aberta (armazenamento do usuário ou computador) e se o prompt da interface do usuário deve ser suprimido.</param>
      <returns>Uma chave existente.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> ou <paramref name="provider" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.ParentWindowHandle">
      <summary>Obtém ou define o identificador de janela (HWND) que deve ser usado para prompts de interface do usuário causados pelo acesso à chave.</summary>
      <returns>O identificador da janela pai da chave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.Provider">
      <summary>Obtém o KSP (provedor de armazenamento de chaves) que gerencia a chave.</summary>
      <returns>O KSP que gerencia a chave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.ProviderHandle">
      <summary>Obtém um identificador nativo (um NCRYPT_PROV_HANDLE) para o KSP (provedor de armazenamento de chaves).</summary>
      <returns>Um identificador para o KSP.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)">
      <summary>Define uma propriedade nomeada na chave.</summary>
      <param name="property">A propriedade da chave a ser definida.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.UIPolicy">
      <summary>Obtém os parâmetros que controlam a interface do usuário para acessar a chave.</summary>
      <returns>Um objeto que contém parâmetros de configuração para exibir a interface do usuário.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.UniqueName">
      <summary>Obtém o nome exclusivo da chave.</summary>
      <returns>Um nome alternativo para a chave. Se a chave for efêmera, o valor será <see langword="null" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyBlobFormat">
      <summary>Especifica um formato BLOB de chave para uso com objetos CNG (Cryptography Next Generation) da Microsoft.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> usando o formato especificado.</summary>
      <param name="format">O formato de BLOB de chave a ser inicializado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="format" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O comprimento do parâmetro <paramref name="format" /> é 0 (zero).</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccFullPrivateBlob">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica um BLOB de chave privada para uma chave de criptografia de curva elíptica (ECC) que contém parâmetros de curva explícita.</summary>
      <returns>Um objeto que descreve um BLOB de chave privada.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccFullPublicBlob">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica um BLOB de chave pública para uma chave de criptografia de curva elíptica (ECC) que contém parâmetros de curva explícita.</summary>
      <returns>Um objeto que descreve um BLOB de chave pública.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica um BLOB de chave privada para uma chave ECC (criptografia de curva elíptica).</summary>
      <returns>Um objeto que especifica um BLOB de chaves privadas do ECC.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica um BLOB de chave pública para uma chave ECC (criptografia de curva elíptica).</summary>
      <returns>Um objeto que especifica um BLOB de chaves públicas do ECC.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)">
      <summary>Compara o objeto especificado ao objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> atual.</summary>
      <param name="obj">Um objeto a ser comparado ao objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> atual.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="obj" /> for um objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica o mesmo formato de BLOB de chave que o objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Compara o objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> especificado ao objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> atual.</summary>
      <param name="other">Um objeto a ser comparado ao objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> atual.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="other" /> especifica o mesmo formato de BLOB de chave que o objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.Format">
      <summary>Obtém o nome do formato de BLOB de chave que o objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> atual especifica.</summary>
      <returns>O nome do formato de BLOB de chave inserido.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica um BLOB de chave privada genérica.</summary>
      <returns>Um objeto que especifica um BLOB de chave privada genérica.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica um BLOB de chave pública genérica.</summary>
      <returns>Um objeto que especifica um BLOB de chave pública genérico.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.GetHashCode">
      <summary>Gera um valor de hash para o formato de BLOB de chave inserido no objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> atual.</summary>
      <returns>O valor de hash do formato de BLOB de chave inserido.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Determina se dois objetos <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> especificam o mesmo formato de BLOB da chave.</summary>
      <param name="left">Um objeto que especifica um formato de BLOB de chave.</param>
      <param name="right">Um segundo objeto, a ser comparado ao objeto identificado pelo parâmetro <paramref name="left" />.</param>
      <returns>
        <see langword="true" /> se os dois objetos especificam o mesmo formato de BLOB da chave, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Determina se dois objetos <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> não especificam o mesmo formato de BLOB da chave.</summary>
      <param name="left">Um objeto que especifica um formato de BLOB de chave.</param>
      <param name="right">Um segundo objeto, a ser comparado ao objeto identificado pelo parâmetro <paramref name="left" />.</param>
      <returns>
        <see langword="true" /> se os dois objetos não especificam o mesmo formato de BLOB da chave, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica um BLOB de chave de transporte opaco.</summary>
      <returns>Um objeto que especifica um BLOB de chave de transporte opaco.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> que especifica um BLOB de chaves PKCS n º 8 (Private Key Information Syntax Standard).</summary>
      <returns>Um objeto que especifica um BLOB de chave privada PKCS n º 8.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.ToString">
      <summary>Obtém o nome do formato de BLOB de chave que o objeto <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> atual especifica.</summary>
      <returns>O nome do formato de BLOB de chave inserido.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyCreationOptions">
      <summary>Especifica as opções usadas para a criação da chave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyCreationOptions.MachineKey">
      <summary>Uma chave para todo o computador é criada.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyCreationOptions.None">
      <summary>Não é usada nenhuma opção de criação de chave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyCreationOptions.OverwriteExistingKey">
      <summary>A chave existente será substituída durante a criação da chave.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyCreationParameters">
      <summary>Contém propriedades avançadas para a criação da chave.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyCreationParameters.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CngKeyCreationParameters" />.</summary>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.ExportPolicy">
      <summary>Obtém ou define a política de exportação da chave.</summary>
      <returns>Um objeto que especifica uma política de exportação de chave. O valor padrão é <see langword="null" />, que indica que a política de exportação padrão do provedor de armazenamento de chaves está definida.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.KeyCreationOptions">
      <summary>Obtém ou define as opções de criação de chave.</summary>
      <returns>Um objeto que especifica as opções para a criação de chaves. O valor padrão é <see langword="null" />, que indica que as opções de criação de chave padrão do provedor de armazenamento de chaves estão definidas.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.KeyUsage">
      <summary>Obtém ou define as operações criptográficas que se aplicam à chave atual.</summary>
      <returns>Uma combinação de bits de um ou mais valores de enumeração que especificam o uso da chave. O valor padrão é <see langword="null" />, que indica que o uso padrão da chave do provedor de armazenamento de chaves está definido.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.Parameters">
      <summary>Habilita um objeto <see cref="T:System.Security.Cryptography.CngKey" /> para ser criado com propriedades adicionais que são definidas antes de a chave ser finalizada.</summary>
      <returns>Um objeto de coleção que contém parâmetros adicionais que você deve definir em um <see cref="T:System.Security.Cryptography.CngKey" /> objeto durante a criação da chave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.ParentWindowHandle">
      <summary>Obtém ou define o identificador de janela que deve ser usado como a janela pai para caixas de diálogo que são criadas pelas classes CNG (Cryptography Next Generation).</summary>
      <returns>O HWND da janela pai que é usada para caixas de diálogo CNG.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.Provider">
      <summary>Obtém ou define o KSP (provedor de armazenamento de chaves) no qual criar uma chave.</summary>
      <returns>Um objeto que especifica o KSP no qual uma nova chave será criada.</returns>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Security.Cryptography.CngKeyCreationParameters.Provider" /> é definida com um valor <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.UIPolicy">
      <summary>Obtém ou define informações sobre a interface do usuário a ser exibido quando uma chave é criada ou acessada.</summary>
      <returns>Um objeto que contém detalhes sobre a interface do usuário mostrada pelas classes CNG (Cryptography Next Generation) quando uma chave é criada ou acessada. Um <see langword="null" /> valor indica que a política de interface de usuário padrão do provedor de armazenamento de chaves está definida.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyHandleOpenOptions">
      <summary>Especifica opções para abrir identificadores de chave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey">
      <summary>O identificador de chave sendo aberto especifica uma chave efêmera.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyHandleOpenOptions.None">
      <summary>O identificador de chave sendo aberto não especifica uma chave efêmera.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyOpenOptions">
      <summary>Especifica opções para abrir uma chave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.MachineKey">
      <summary>Uma chave para todo o computador é aberta.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.None">
      <summary>Nenhuma opção de abertura de chave foi especificada.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.Silent">
      <summary>O prompt da interface do usuário é suprimido.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.UserKey">
      <summary>Se o valor <see cref="F:System.Security.Cryptography.CngKeyOpenOptions.MachineKey" /> não for especificado, uma chave de usuário será aberta em vez disso.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyUsages">
      <summary>Especifica as operações criptográficas com as quais uma chave CNG (Cryptography Next Generation) pode ser usada.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.AllUsages">
      <summary>A chave pode ser usada para todas as finalidades.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.Decryption">
      <summary>A chave pode ser usada para criptografia e descriptografia.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.KeyAgreement">
      <summary>A chave pode ser usada para a geração de acordo de segredo e troca de chaves.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.None">
      <summary>Nenhum valor de uso é atribuído à chave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.Signing">
      <summary>A chave pode ser usada para assinatura e verificação.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngProperty">
      <summary>Encapsula uma propriedade de uma chave CNG (Cryptography Next Generation) ou provedor.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CngProperty" />.</summary>
      <param name="name">O nome da propriedade a ser inicializada.</param>
      <param name="value">O valor da propriedade a ser inicializada.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que especifica como a propriedade é armazenada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.Equals(System.Object)">
      <summary>Compara o objeto especificado ao objeto <see cref="T:System.Security.Cryptography.CngProperty" /> atual.</summary>
      <param name="obj">Um objeto a ser comparado ao objeto <see cref="T:System.Security.Cryptography.CngProperty" /> atual.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="obj" /> for um objeto <see cref="T:System.Security.Cryptography.CngProperty" /> que especifica a mesma propriedade que o objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)">
      <summary>Compara o objeto <see cref="T:System.Security.Cryptography.CngProperty" /> especificado ao objeto <see cref="T:System.Security.Cryptography.CngProperty" /> atual.</summary>
      <param name="other">Um objeto a ser comparado ao objeto <see cref="T:System.Security.Cryptography.CngProperty" /> atual.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="other" /> representar a mesma propriedade que o objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.GetHashCode">
      <summary>Gera um valor de hash para o objeto <see cref="T:System.Security.Cryptography.CngProperty" /> atual.</summary>
      <returns>O valor de hash do objeto <see cref="T:System.Security.Cryptography.CngProperty" /> atual.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.GetValue">
      <summary>Obtém o valor da propriedade que o objeto <see cref="T:System.Security.Cryptography.CngProperty" /> atual especifica.</summary>
      <returns>Uma matriz que representa o valor armazenado na propriedade.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProperty.Name">
      <summary>Obtém o nome da propriedade que o objeto <see cref="T:System.Security.Cryptography.CngProperty" /> atual especifica.</summary>
      <returns>O nome da propriedade que é definida no objeto <see cref="T:System.Security.Cryptography.CngProperty" /> atual.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)">
      <summary>Determina se dois objetos <see cref="T:System.Security.Cryptography.CngProperty" /> especificam o mesmo nome, valor e opções de propriedade.</summary>
      <param name="left">Um objeto que especifica uma propriedade de um provedor ou uma chave CNG (Cryptography Next Generation).</param>
      <param name="right">Um segundo objeto, a ser comparado ao objeto que é identificado pelo parâmetro <paramref name="left" />.</param>
      <returns>
        <see langword="true" /> se os dois objetos especificam a mesma propriedade, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)">
      <summary>Determina se dois objetos <see cref="T:System.Security.Cryptography.CngProperty" /> não especificam o mesmo nome, valor e opções de propriedade.</summary>
      <param name="left">Um objeto que especifica uma propriedade de um provedor ou uma chave CNG (Cryptography Next Generation).</param>
      <param name="right">Um segundo objeto, a ser comparado ao objeto que é identificado pelo parâmetro <paramref name="left" />.</param>
      <returns>
        <see langword="true" /> se os dois objetos não especificam a mesma propriedade, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProperty.Options">
      <summary>Obtém as opções da propriedade que o objeto <see cref="T:System.Security.Cryptography.CngProperty" /> atual especifica.</summary>
      <returns>Um objeto que especifica as opções que são definidas no objeto atual <see cref="T:System.Security.Cryptography.CngProperty" /> .</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngPropertyCollection">
      <summary>Fornece uma coleção com rigidez de tipos de propriedades de CNG (Cryptography Next Generation).</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngPropertyCollection.#ctor">
      <summary>Inicializa um novo objeto <see cref="T:System.Security.Cryptography.CngPropertyCollection" />.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngPropertyOptions">
      <summary>Especifica opções de propriedade de chave CNG (Cryptography Next Generation).</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngPropertyOptions.CustomProperty">
      <summary>A propriedade não é especificada pela CNG. Usar esta opção para evitar futuros conflitos de nome com propriedades de CNG.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngPropertyOptions.None">
      <summary>A propriedade referenciada não tem opções.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngPropertyOptions.Persist">
      <summary>A propriedade deve ser persistida.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngProvider">
      <summary>Encapsula o nome de um KSP (Provedor de Armazenamento de Chaves) para uso com objetos CNG (Cryptography Next Generation).</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CngProvider" />.</summary>
      <param name="provider">O nome do KSP (provedor de armazenamento de chaves) a ser inicializado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="provider" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O comprimento do parâmetro <paramref name="provider" /> é 0 (zero).</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.Equals(System.Object)">
      <summary>Compara o objeto especificado ao objeto <see cref="T:System.Security.Cryptography.CngProvider" /> atual.</summary>
      <param name="obj">Um objeto a ser comparado ao objeto <see cref="T:System.Security.Cryptography.CngProvider" /> atual.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="obj" /> for um <see cref="T:System.Security.Cryptography.CngProvider" /> que especifica o mesmo KSP (provedor de armazenamento de chaves) que o objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)">
      <summary>Compara o objeto <see cref="T:System.Security.Cryptography.CngProvider" /> especificado ao objeto <see cref="T:System.Security.Cryptography.CngProvider" /> atual.</summary>
      <param name="other">Um objeto a ser comparado ao objeto <see cref="T:System.Security.Cryptography.CngProvider" /> atual.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="other" /> especifica o mesmo KSP (provedor de armazenamento de chaves) que o objeto atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.GetHashCode">
      <summary>Gera um valor de hash para o nome do KSP (provedor de armazenamento de chaves) que está inserido no objeto <see cref="T:System.Security.Cryptography.CngProvider" /> atual.</summary>
      <returns>O valor de hash do nome do KSP inserido.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngProvider" /> que especifica o Provedor de Armazenamento de Chaves de Cartão Inteligente da Microsoft.</summary>
      <returns>Um objeto que especifica o provedor de armazenamento de chaves de cartão inteligente da Microsoft.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider">
      <summary>Obtém um objeto <see cref="T:System.Security.Cryptography.CngProvider" /> que especifica o Provedor de Armazenamento de Chaves de Software Microsoft.</summary>
      <returns>Um objeto que especifica o Provedor de Armazenamento de Chaves de Software Microsoft.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)">
      <summary>Determina se dois objetos <see cref="T:System.Security.Cryptography.CngProvider" /> especificam o mesmo KSP (provedor de armazenamento de chaves).</summary>
      <param name="left">Um objeto que especifica um KSP.</param>
      <param name="right">Um segundo objeto, a ser comparado ao objeto que é identificado pelo parâmetro <paramref name="left" />.</param>
      <returns>
        <see langword="true" /> se os dois objetos representarem o mesmo KSP, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)">
      <summary>Determina se dois objetos <see cref="T:System.Security.Cryptography.CngProvider" /> não representam o mesmo KSP (provedor de armazenamento de chaves).</summary>
      <param name="left">Um objeto que especifica um KSP.</param>
      <param name="right">Um segundo objeto, a ser comparado ao objeto que é identificado pelo parâmetro <paramref name="left" />.</param>
      <returns>
        <see langword="true" /> se os dois objetos não representarem o mesmo KSP, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProvider.Provider">
      <summary>Obtém o nome do KSP (provedor de armazenamento de chaves) que o objeto <see cref="T:System.Security.Cryptography.CngProvider" /> atual especifica.</summary>
      <returns>O nome do KSP inserido.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.ToString">
      <summary>Obtém o nome do KSP (provedor de armazenamento de chaves) que o objeto <see cref="T:System.Security.Cryptography.CngProvider" /> atual especifica.</summary>
      <returns>O nome do KSP inserido.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngUIPolicy">
      <summary>Encapsula os parâmetros de configuração opcionais para a interface do usuário que a CNG (Cryptography Next Generation) exibe quando você acessa uma chave protegida.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CngUIPolicy" /> usando o nível de proteção especificado.</summary>
      <param name="protectionLevel">Uma combinação bit a bit de valores de enumeração que especificam o nível de proteção.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CngUIPolicy" /> usando o nível de proteção e o nome amigável especificados.</summary>
      <param name="protectionLevel">Uma combinação bit a bit de valores de enumeração que especificam o nível de proteção.</param>
      <param name="friendlyName">Um nome amigável para a chave a ser usado pelo prompt da interface do usuário. Especifique uma cadeia de caracteres nula para usar o nome padrão.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CngUIPolicy" /> usando o nível de proteção, o nome amigável e a descrição especificados.</summary>
      <param name="protectionLevel">Uma combinação bit a bit de valores de enumeração que especificam o nível de proteção.</param>
      <param name="friendlyName">Um nome amigável para a chave a ser usado pelo prompt da interface do usuário. Especifique uma cadeia de caracteres nula para usar o nome padrão.</param>
      <param name="description">A descrição de texto completo da chave. Especifique uma cadeia de caracteres nula para usar a descrição padrão.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CngUIPolicy" /> usando o nível de proteção, o nome amigável, a cadeia de caracteres de descrição e o contexto de uso especificados.</summary>
      <param name="protectionLevel">Uma combinação bit a bit de valores de enumeração que especificam o nível de proteção.</param>
      <param name="friendlyName">Um nome amigável para a chave a ser usado pelo prompt da interface do usuário. Especifique uma cadeia de caracteres nula para usar o nome padrão.</param>
      <param name="description">A descrição de texto completo da chave. Especifique uma cadeia de caracteres nula para usar a descrição padrão.</param>
      <param name="useContext">Uma descrição de como a chave será usada. Especifique uma cadeia de caracteres nula para usar a descrição padrão.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CngUIPolicy" /> usando o nível de proteção, o nome amigável, a cadeia de caracteres de descrição, o contexto de uso e o título especificados.</summary>
      <param name="protectionLevel">Uma combinação bit a bit de valores de enumeração que especificam o nível de proteção.</param>
      <param name="friendlyName">Um nome amigável para a chave a ser usado pelo prompt da interface do usuário. Especifique uma cadeia de caracteres nula para usar o nome padrão.</param>
      <param name="description">A descrição de texto completo da chave. Especifique uma cadeia de caracteres nula para usar a descrição padrão.</param>
      <param name="useContext">Uma descrição de como a chave será usada. Especifique uma cadeia de caracteres nula para usar a descrição padrão.</param>
      <param name="creationTitle">O título da caixa de diálogo que fornece o prompt da interface do usuário. Especifique uma cadeia de caracteres nula para usar o título padrão.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.CreationTitle">
      <summary>Obtém o título exibido pelo prompt da interface do usuário.</summary>
      <returns>O título da caixa de diálogo que aparece quando a chave é acessada.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.Description">
      <summary>Obtém a cadeia de caracteres de descrição exibida pelo prompt da interface do usuário.</summary>
      <returns>O texto de descrição da caixa de diálogo que aparece quando a chave é acessada.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.FriendlyName">
      <summary>Obtém o nome amigável exibido pelo prompt da interface do usuário.</summary>
      <returns>O nome amigável que é usado para descrever a chave na caixa de diálogo que aparece quando a chave é acessada.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.ProtectionLevel">
      <summary>Obtém o nível de proteção da interface do usuário para a chave.</summary>
      <returns>Um objeto que descreve o nível de proteção da interface do usuário a ser aplicado à chave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.UseContext">
      <summary>Obtém a descrição de como a chave será usada.</summary>
      <returns>A descrição de como a chave será usada.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngUIProtectionLevels">
      <summary>Especifica o nível de proteção da chave nos cenários de aviso da interface do usuário.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngUIProtectionLevels.ForceHighProtection">
      <summary>Um prompt de interface do usuário é exibido sempre que a chave é acessada.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngUIProtectionLevels.None">
      <summary>Não é exibido nenhum prompt da interface do usuário quando a chave é acessada.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngUIProtectionLevels.ProtectKey">
      <summary>Um prompt de interface do usuário é exibido na primeira vez que a chave é acessada em um processo.</summary>
    </member>
    <member name="T:System.Security.Cryptography.DSACng">
      <summary>Fornece uma implementação CNG (Cryptography Next Generation) do DSA (Algoritmo de Assinatura Digital).</summary>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.DSACng" /> com um par de chaves aleatório de 2.048 bits.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.DSACng" /> com uma chave gerada aleatoriamente do tamanho especificado.</summary>
      <param name="keySize">O tamanho da chave a ser gerada em bits.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="keySize" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.DSACng" /> com a chave especificada.</summary>
      <param name="key">A chave a ser usada para as operações de DSA.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> não é uma chave DSA válida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])">
      <summary>Cria a assinatura <see cref="T:System.Security.Cryptography.DSA" /> dos dados especificados.</summary>
      <param name="rgbHash">O valor de hash a ser assinado.</param>
      <returns>A assinatura digital para os dados especificados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbHash" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Essa instância representa apenas uma chave pública.
- ou -
Ocorreu um erro durante a criação da assinatura.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="rgbHash" /> é mais curta que o valor Q da chave DSA.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)">
      <summary>Exporta os parâmetros de algoritmo de DSA.</summary>
      <param name="includePrivateParameters">
        <see langword="true" /> para incluir parâmetros particulares; caso contrário, <see langword="false" />.</param>
      <returns>Os parâmetros de algoritmo de DSA.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A chave DSA não é uma chave pública ou privada válida.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)">
      <summary>Substitui a chave existente em que a instância atual está trabalhando, criando um novo <see cref="T:System.Security.Cryptography.CngKey" /> para a estrutura dos parâmetros.</summary>
      <param name="parameters">Os parâmetros DSA.</param>
      <exception cref="T:System.ArgumentException">Os parâmetros DSA especificados não são válidos.</exception>
    </member>
    <member name="P:System.Security.Cryptography.DSACng.Key">
      <summary>Obtém a chave que será usada pelo objeto <see cref="T:System.Security.Cryptography.DSACng" /> para qualquer operação criptográfica realizada.</summary>
      <returns>A chave usada pelo objeto <see cref="T:System.Security.Cryptography.DSACng" /> para realizar as operações criptográficas.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACng.KeyExchangeAlgorithm">
      <summary>Obtém o nome do algoritmo de troca de chaves.</summary>
      <returns>Sempre <see langword="null" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACng.LegalKeySizes">
      <summary>Obtém os tamanhos de chave, em bits, compatíveis com o algoritmo de DSA.</summary>
      <returns>Uma matriz que contém os tamanhos de chave com suporte pelo algoritmo.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACng.SignatureAlgorithm">
      <summary>Obtém o nome do algoritmo de assinatura.</summary>
      <returns>A cadeia de caracteres "DSA".</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])">
      <summary>Verifica se a assinatura digital especificada corresponde ao hash especificado.</summary>
      <param name="rgbHash">O hash assinado.</param>
      <param name="rgbSignature">A assinatura digital a ser verificada.</param>
      <returns>
        <see langword="true" /> se <paramref name="rgbSignature" /> corresponder à assinatura calculada usando o hash especificado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Os parâmetros <paramref name="rgbHash" /> ou <paramref name="rgbSignature" /> são <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellmanCng">
      <summary>Fornece uma implementação CNG (Cryptography Next Generation) do algoritmo ECDH (Diffie-Hellman de curva elíptica). Essa classe é usada para executar operações de criptografia.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> com um par de chaves aleatório.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> com um par de chaves aleatório, usando o tamanho da chave especificado.</summary>
      <param name="keySize">O tamanho da chave. Os tamanhos de chave válidos são 256, 384 e 521 bits.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="keySize" /> especifica um tamanho inválido.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Classes CNG (Cryptography Next Generation) não são compatíveis com este sistema.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> usando o objeto <see cref="T:System.Security.Cryptography.CngKey" /> especificado.</summary>
      <param name="key">A chave que será usada como entrada para as operações criptográficas executadas pelo objeto atual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> não especifica um grupo de algoritmos ECDH (Diffie-Hellman de curva elíptica).</exception>
      <exception cref="T:System.PlatformNotSupportedException">Classes CNG (Cryptography Next Generation) não são compatíveis com este sistema.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> cujo par de chaves pública/privada é gerado ao longo da curva especificada.</summary>
      <param name="curve">A curva usada para gerar o par de chaves pública/privada.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="curve" /> não é validado.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
      <summary>Executa a derivação de chave usando um algoritmo de hash especificado com os dados opcionais anexados ou acrescentados.</summary>
      <param name="otherPartyPublicKey">A chave pública do outro participante.</param>
      <param name="hashAlgorithm">O algoritmo de hash a ser usado para derivar o material de chave.</param>
      <param name="secretPrepend">Um valor a ser precedido ao segredo derivado antes do hash.</param>
      <param name="secretAppend">Um valor a ser acrescentado ao segredo derivado antes do hash.</param>
      <returns>O hash do segredo compartilhado após a anexação ou o acréscimo de dados, conforme solicitado.</returns>
      <exception cref="T:System.NotImplementedException">Uma classe derivada deve substituir esse método.</exception>
      <exception cref="T:System.ArgumentException">A curva usada por <paramref name="otherPartyPublicKey" /> tem um tamanho diferente da curva dessa chave.
- ou -
O parâmetro <paramref name="hashAlgorithm" /> não especifica um hash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A curva usada por <paramref name="otherPartyPublicKey" /> é diferente da curva dessa chave.
- ou -
Essa instância representa apenas uma chave pública.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
      <summary>Executa a derivação de chave usando um algoritmo HMAC (Message Authentication Code baseado em hash) especificado com os dados opcionais acrescentados ou anexados.</summary>
      <param name="otherPartyPublicKey">A chave pública do outro participante.</param>
      <param name="hashAlgorithm">O algoritmo de hash a ser usado para derivar o material de chave.</param>
      <param name="hmacKey">A chave para o HMAC.</param>
      <param name="secretPrepend">Um valor a ser precedido ao segredo derivado antes do hash.</param>
      <param name="secretAppend">Um valor a ser acrescentado ao segredo derivado antes do hash.</param>
      <returns>O HMAC do segredo compartilhado após a anexação ou o acréscimo de dados, conforme solicitado.</returns>
      <exception cref="T:System.ArgumentException">A curva usada por <paramref name="otherPartyPublicKey" /> tem um tamanho diferente da curva dessa chave.
- ou -
O parâmetro <paramref name="hashAlgorithm" /> não especifica um hash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">A curva usada por <paramref name="otherPartyPublicKey" /> é diferente da curva dessa chave.
- ou -
Essa instância representa apenas uma chave pública.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
      <summary>Deriva o material da chave que é gerado com base no acordo secreto entre duas partes, dado um objeto <see cref="T:System.Security.Cryptography.CngKey" /> que contém a chave pública do segundo participante.</summary>
      <param name="otherPartyPublicKey">Um objeto que contém a parte pública da chave ECDH (Diffie-Hellman de curva elíptica) da outra parte na troca de chaves.</param>
      <returns>Uma matriz de bytes que contém o material da chave. Essa informação é gerada do contrato secreto que é calculado usando a chave privada do objeto atual e a chave pública especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" /> é inválido. A propriedade <see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /> não especifica <see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /> ou o tamanho da chave não corresponde ao tamanho da chave desta instância.</exception>
      <exception cref="T:System.InvalidOperationException">Esta propriedade <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /> do objeto especifica a função de derivação de chaves <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />, mas <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> ou <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
      <summary>Deriva o material da chave que é gerado com base no acordo secreto entre duas partes, dado um objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> que contém a chave pública do segundo participante.</summary>
      <param name="otherPartyPublicKey">A chave pública da outra parte na troca de chaves.</param>
      <returns>Uma matriz de bytes que contém o material da chave. Essa informação é gerada do contrato secreto que é calculado usando a chave privada do objeto atual e a chave pública especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" /> não é uma chave <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
      <summary>Executa a derivação de chave usando a PRF (função pseudoaleatória) do protocolo TLS 1.1.</summary>
      <param name="otherPartyPublicKey">A chave pública do outro participante.</param>
      <param name="prfLabel">O rótulo PRF codificado em ASCII.</param>
      <param name="prfSeed">A semente PRF de 64 bytes.</param>
      <returns>Os primeiros 48 bytes do protocolo TLS 1.1 PRF, usando o segredo compartilhado como a chave.</returns>
      <exception cref="T:System.NotImplementedException">Uma classe derivada deve substituir esse método.</exception>
      <exception cref="T:System.ArgumentException">A curva usada por <paramref name="otherPartyPublicKey" /> tem um tamanho diferente da curva dessa chave.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" />, <paramref name="prfLabel" /> ou <paramref name="prfSeed" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="prfSeed" /> não tem tamanho de exatamente 64 bytes.
- ou -
A curva usada por <paramref name="otherPartyPublicKey" /> é diferente da curva dessa chave.
- ou -
Essa instância representa apenas uma chave pública.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
      <summary>Obtém um identificador para o acordo secreto gerado entre duas partes, dado um objeto <see cref="T:System.Security.Cryptography.CngKey" /> que contém a chave pública do segundo participante.</summary>
      <param name="otherPartyPublicKey">Um objeto que contém a parte pública da chave ECDH (Diffie-Hellman de curva elíptica) da outra parte na troca de chaves.</param>
      <returns>Um identificador para o acordo secreto. Essa informação é calculada usando a chave privada do objeto atual e a chave pública especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" /> não é uma chave ECDH ou não tem o tamanho correto.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
      <summary>Obtém um identificador para o acordo secreto gerado entre duas partes, dado um objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> que contém a chave pública do segundo participante.</summary>
      <param name="otherPartyPublicKey">A chave pública da outra parte na troca de chaves.</param>
      <returns>Um identificador para o acordo secreto. Essa informação é calculada usando a chave privada do objeto atual e a chave pública especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" /> não é uma chave <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
      <summary>Exporta os parâmetros de chave e curva explícita usados pelo objeto <see cref="T:System.Security.Cryptography.ECCurve" /> em um objeto <see cref="T:System.Security.Cryptography.ECParameters" />.</summary>
      <param name="includePrivateParameters">
        <see langword="true" /> para incluir parâmetros particulares; caso contrário, <see langword="false" />.</param>
      <returns>Os parâmetros de chave e curva explícita usados pelo objeto <see cref="T:System.Security.Cryptography.ECCurve" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">O método não pode obter valores de curva.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A exportação explícita não tem suporte nesta plataforma. O Windows 10 ou superior é necessário.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
      <summary>Exporta a chave usada pelo objeto <see cref="T:System.Security.Cryptography.ECCurve" /> em um objeto <see cref="T:System.Security.Cryptography.ECParameters" />.</summary>
      <param name="includePrivateParameters">
        <see langword="true" /> para incluir parâmetros particulares; caso contrário, <see langword="false" />.</param>
      <returns>A chave e os parâmetros de curva nomeada usados pelo objeto <see cref="T:System.Security.Cryptography.ECCurve" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">O método não pode obter valores de curva.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>Desserializa as informações da chave de uma cadeia de caracteres XML usando o formato especificado.</summary>
      <param name="xml">As informações de chave baseadas em XML a serem desserializadas.</param>
      <param name="format">Um dos valores de enumeração que especifica o formato da cadeia de caracteres XML. O único formato aceito atualmente é <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xml" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="xml" /> está malformado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" /> especifica um formato inválido. O único valor aceito é <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
      <summary>Gera um novo par de chaves pública/privada efêmero para a curva especificada.</summary>
      <param name="curve">A curva usada para gerar um par de chaves pública/privada efêmero.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="curve" /> não é validado.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
      <summary>Obtém ou define o algoritmo de hash a ser usado ao gerar o material de chave.</summary>
      <returns>Um objeto que especifica o algoritmo de hash.</returns>
      <exception cref="T:System.ArgumentNullException">O valor é <see langword="null." /></exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
      <summary>Obtém ou define a chave de HMAC (Hash-based Message Authentication Code) a ser usada ao derivar o material de chave.</summary>
      <returns>A chave de Message Authentication Code com base em hash (HMAC) a ser usada ao derivar o material da chave.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
      <summary>Importa os parâmetros especificados para um objeto <see cref="T:System.Security.Cryptography.ECCurve" /> como uma chave para a instância atual.</summary>
      <param name="parameters">Os parâmetros da curva a serem importados.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="parameters" /> não é validado.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="parameters" /> faz referência a uma curva que não pode ser importada.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="parameters" /> faz referência a uma curva que não tem suporte nesta plataforma.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.Key">
      <summary>Especifica o <see cref="T:System.Security.Cryptography.CngKey" /> que é usado pelo objeto atual para operações criptográficas.</summary>
      <returns>O par de chaves usado por esse objeto para executar operações criptográficas.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
      <summary>Obtém ou define a função de derivação de chaves para a classe <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />.</summary>
      <returns>Um dos <see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" /> valores de enumeração: <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />, <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />ou <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />. O valor padrão é <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor da enumeração está fora do intervalo.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.KeySize">
      <summary>Obtém ou define o tamanho, em bits, do módulo chave usado pelo algoritmo assimétrico.</summary>
      <returns>O tamanho, em bits, do módulo chave usado pelo algoritmo assimétrico.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" /> não é permitido por <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.LegalKeySizes" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
      <summary>Obtém ou define o valor de rótulo que é usado para derivação de chave.</summary>
      <returns>O valor do rótulo.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey">
      <summary>Obtém a chave pública que pode ser usada por outro objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> para gerar um contrato de segredo compartilhado.</summary>
      <returns>A chave pública que está associada a essa instância do objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
      <summary>Obtém ou define um valor que será acrescentado ao acordo secreto ao gerar o material de chave.</summary>
      <returns>O valor que é anexado ao acordo secreto.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
      <summary>Obtém ou define um valor que será adicionado ao início do acordo secreto ao derivar o material de chave.</summary>
      <returns>O valor que é anexado ao início do contrato secreto durante a derivação de chave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
      <summary>Obtém ou define o valor de semente que será usado ao derivar o material de chave.</summary>
      <returns>O valor de semente.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>Serializa as informações de chave para uma cadeia de caracteres XML usando o formato especificado.</summary>
      <param name="format">Um dos valores de enumeração que especifica o formato da cadeia de caracteres XML. O único formato aceito atualmente é <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</param>
      <returns>Um objeto de cadeia de caracteres que contém as informações de chave, serializadas como uma cadeia de caracteres XML, conforme o formato solicitado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" /> especifica um formato inválido. O único valor aceito é <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
      <summary>Obtém um valor que indica se o acordo secreto é usado como uma chave HMAC (Hash-based Message Authentication Code) para derivar o material de chave.</summary>
      <returns>
        <see langword="true" /> se o acordo secreto for usado como uma chave HMAC para derivar o material da chave; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey">
      <summary>Especifica uma chave pública ECDH (Diffie-Hellman de curva elíptica) a ser usada com a classe <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />.</summary>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.BlobFormat">
      <summary>Obtém o formato BLOB de chave para um objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />.</summary>
      <returns>O formato no qual o BLOB de chave é expresso.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.ExportExplicitParameters">
      <summary>Exporta os parâmetros de chave e curva explícita usados pelo objeto <see cref="T:System.Security.Cryptography.ECCurve" /> em um objeto <see cref="T:System.Security.Cryptography.ECParameters" />.</summary>
      <returns>Os parâmetros de chave e curva explícita usados pelo objeto <see cref="T:System.Security.Cryptography.ECCurve" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">O método não pode obter valores de curva.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A exportação explícita não tem suporte nesta plataforma. O Windows 10 ou superior é necessário.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.ExportParameters">
      <summary>Exporta a chave usada pelo objeto <see cref="T:System.Security.Cryptography.ECCurve" /> em um objeto <see cref="T:System.Security.Cryptography.ECParameters" />.</summary>
      <returns>A chave e os parâmetros de curva nomeada usados pelo objeto <see cref="T:System.Security.Cryptography.ECCurve" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">O método não pode obter valores de curva.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromByteArray(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Converte uma matriz de bytes que contém uma chave pública para um objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> de acordo com o formato especificado.</summary>
      <param name="publicKeyBlob">Uma matriz de bytes que contém uma chave pública ECDH (Diffie-Hellman de curva elíptica).</param>
      <param name="format">Um objeto que especifica o formato do BLOB de chaves.</param>
      <returns>Um objeto que contém a chave pública ECDH é serializado na matriz de bytes.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="publicKeyBlob" /> ou <paramref name="format" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="publicKeyBlob" /> não contém uma chave <see cref="T:System.Security.Cryptography.ECDiffieHellman" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromXmlString(System.String)">
      <summary>Converte uma cadeia de caracteres XML em um objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />.</summary>
      <param name="xml">Uma cadeia de caracteres XML que contém uma chave ECDH (Diffie-Hellman de curva elíptica).</param>
      <returns>Um objeto que contém a chave pública ECDH é especificado pelo XML informado.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="xml" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="xml" /> não especifica uma chave <see cref="T:System.Security.Cryptography.ECDiffieHellman" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.Import">
      <summary>Converte o objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> em um objeto <see cref="T:System.Security.Cryptography.CngKey" />.</summary>
      <returns>Um objeto que contém a chave representada pelo objeto <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.ToXmlString">
      <summary>Serializa a chave pública <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> para uma cadeia de caracteres XML no formato RFC 4050.</summary>
      <returns>Uma cadeia de caracteres XML que contém a chave pública <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> serializada.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
      <summary>Especifica a função de derivação de chaves que a classe <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> usará para converter os acordos secretos no material de chave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash">
      <summary>Um algoritmo de hash é usado para gerar o material de chave. A propriedade <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> especifica o nome do algoritmo a ser usado. Se o nome do algoritmo não for especificado, <see cref="T:System.Security.Cryptography.SHA256" /> será usado como o algoritmo padrão. Você também pode especificar as propriedades <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" /> e <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" />, mas elas não são obrigatórias. A quantidade de material de chave que é gerado é equivalente ao tamanho do valor de hash para o algoritmo especificado.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac">
      <summary>Um algoritmo de HMAC (Hash-based Message Authentication Code) é usado para gerar o material de chave. A propriedade <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> especifica a chave a ser usada. Esta propriedade precisa ser definida ou a propriedade <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> precisa ser definida como <see langword="true" />; caso contrário, um <see cref="T:System.Security.Cryptography.CryptographicException" /> será gerado quando você usar <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />. Se ambas as propriedades estiverem definidas, o contrato secreto será usado como a chave de HMAC. Você também pode especificar as propriedades <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" /> e <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" />, mas elas não são obrigatórias. A quantidade de material de chave que é gerado é equivalente ao tamanho do valor de HMAC.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls">
      <summary>O protocolo TLS é usado para gerar o material de chave. As propriedades <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> e <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> devem ser definidas, caso contrário, uma <see cref="T:System.Security.Cryptography.CryptographicException" /> será gerada quando você usar <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />. Esse valor gera 160 bits do material de chave.</summary>
    </member>
    <member name="T:System.Security.Cryptography.ECDsaCng">
      <summary>Fornece uma implementação CNG (Cryptography Next Generation) do ECDSA (Algoritmo de Assinatura Digital de Curva Elíptica).</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.ECDsaCng" /> com um par de chaves aleatório.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Classes CNG (Cryptography Next Generation) não são compatíveis com este sistema.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.ECDsaCng" /> com um tamanho de chave de destino especificado.</summary>
      <param name="keySize">O tamanho da chave. Os tamanhos de chave válidos são 256, 384 e 521 bits.</param>
      <exception cref="T:System.PlatformNotSupportedException">Classes CNG (Cryptography Next Generation) não são compatíveis com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="keySize" /> especifica um tamanho inválido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.ECDsaCng" /> usando o objeto <see cref="T:System.Security.Cryptography.CngKey" /> especificado.</summary>
      <param name="key">A chave que será usada como entrada para as operações criptográficas executadas pelo objeto atual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> não especifica um grupo de ECDSA (Algoritmo de Assinatura Digital Curva Elíptica).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Classes CNG (Cryptography Next Generation) não são compatíveis com este sistema.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.ECDsaCng" /> cujo par de chaves pública/privada é gerado ao longo da curva especificada.</summary>
      <param name="curve">A curva usada para gerar o par de chaves pública/privada.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="curve" /> não é validado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="curve" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">se <paramref name="curve" /> não contiver um OID com um FriendlyName.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
      <summary>Exporta os parâmetros de chave e curva explícita usados pelo objeto de criptografia de curva elíptica (ECC) em um objeto <see cref="T:System.Security.Cryptography.ECParameters" />.</summary>
      <param name="includePrivateParameters">
        <see langword="true" /> para incluir parâmetros particulares; caso contrário, <see langword="false" />.</param>
      <returns>Os parâmetros de chave e curva explícita usados pelo objeto ECC.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Erro ao obter os valores de curva.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A exportação explícita não tem suporte nesta plataforma. O Windows 10 ou superior é necessário.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
      <summary>Exporta a chave usada pelo objeto de criptografia de curva elíptica (ECC) em um objeto <see cref="T:System.Security.Cryptography.ECParameters" />. Se a chave foi criada como uma curva nomeada, o campo <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> contém parâmetros de curva nomeada; caso contrário, ele contém parâmetros explícitos.</summary>
      <param name="includePrivateParameters">
        <see langword="true" /> para incluir parâmetros particulares; caso contrário, <see langword="false" />.</param>
      <returns>A chave e os parâmetros de curva nomeada usados pelo objeto ECC.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Erro ao obter os valores de curva.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>Desserializa as informações da chave de uma cadeia de caracteres XML usando o formato especificado.</summary>
      <param name="xml">As informações de chave baseadas em XML a serem desserializadas.</param>
      <param name="format">Um dos valores de enumeração que especifica o formato da cadeia de caracteres XML. O único formato aceito atualmente é <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xml" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" /> especifica um formato inválido. O único valor aceito é <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)">
      <summary>Gera um novo par de chaves pública/privada efêmero para a curva especificada, que substitui a chave atual.</summary>
      <param name="curve">A curva a usar para gerar a chave.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="curve" /> não é validado.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
      <summary>Obtém ou define o algoritmo de chave a ser usado ao assinar e verificar os dados.</summary>
      <returns>Um objeto que especifica o algoritmo de hash.</returns>
      <exception cref="T:System.ArgumentNullException">O valor é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
      <summary>Substitui a chave existente em que a instância atual está trabalhando, criando um novo <see cref="T:System.Security.Cryptography.CngKey" /> para a estrutura dos parâmetros.</summary>
      <param name="parameters">Os parâmetros de curva.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="parameters" /> não contêm valores válidos.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="parameters" /> faz referência a uma curva que não pode ser importada.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="parameters" /> faz referência a uma curva que não tem suporte nesta plataforma.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.Key">
      <summary>Obtém ou define a chave a ser usada ao assinar e verificar dados.</summary>
      <returns>Um objeto que especifica a chave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.KeySize">
      <summary>Obtém ou define o tamanho, em bits, do módulo chave usado pelo algoritmo assimétrico.</summary>
      <returns>O tamanho, em bits, do módulo chave usado pelo algoritmo assimétrico.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" /> não é permitido por <see cref="P:System.Security.Cryptography.ECDsaCng.LegalKeySizes" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.LegalKeySizes">
      <summary>Obtém os tamanhos de chave, em bits, compatíveis com o setter de propriedade <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" />.</summary>
      <returns>Uma matriz que contém os tamanhos de chave com suporte pelo setter da propriedade <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
      <summary>Gera uma assinatura para os dados especificados.</summary>
      <param name="data">Os dados da mensagem a serem assinados.</param>
      <returns>Uma assinatura digital para os dados especificados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">As informações de chave associadas com a instância não têm uma chave privada.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
      <summary>Gera uma assinatura digital para o tamanho especificado dos dados, começando no deslocamento indicado.</summary>
      <param name="data">Os dados da mensagem a serem assinados.</param>
      <param name="offset">O local na cadeia de caracteres no qual a assinatura é iniciada.</param>
      <param name="count">O tamanho da cadeia de caracteres, em caracteres, após o <paramref name="offset" /> que será assinado.</param>
      <returns>Uma assinatura digital para os tamanho dos dados especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> ou <paramref name="offset" /> causou leitura fora dos limites da cadeia de caracteres de dados.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">As informações de chave associadas com a instância não têm uma chave privada.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
      <summary>Gera uma assinatura para o fluxo de dados especificado, lendo até o final do fluxo.</summary>
      <param name="data">O fluxo de dados a ser assinado.</param>
      <returns>Uma assinatura digital para os fluxos de dados especificados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">As informações de chave associadas com a instância não têm uma chave privada.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
      <summary>Gera uma assinatura para o valor de hash especificado.</summary>
      <param name="hash">O valor de hash dos dados a serem assinados.</param>
      <returns>Uma assinatura digital para os valores de hash especificados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">As informações de chave associadas com a instância não têm uma chave privada.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>Serializa as informações de chave para uma cadeia de caracteres XML usando o formato especificado.</summary>
      <param name="format">Um dos valores de enumeração que especifica o formato da cadeia de caracteres XML. O único formato aceito atualmente é <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</param>
      <returns>Um objeto de cadeia de caracteres que contém as informações de chave, serializadas como uma cadeia de caracteres XML acordo com o formato solicitado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" /> especifica um formato inválido. O único valor aceito é <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
      <summary>Verifica a assinatura digital dos dados especificados.</summary>
      <param name="data">Os dados que receberam um sinal.</param>
      <param name="signature">A assinatura a ser verificada.</param>
      <returns>
        <see langword="true" /> se a assinatura for válida; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> ou <paramref name="signature" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
      <summary>Verifica uma assinatura digital para o tamanho especificado dos dados, começando no deslocamento indicado.</summary>
      <param name="data">Os dados que receberam um sinal.</param>
      <param name="offset">O local nos dados no qual os dados assinados começam.</param>
      <param name="count">A extensão dos dados, em caracteres, após o <paramref name="offset" /> que será assinado.</param>
      <param name="signature">A assinatura a ser verificada.</param>
      <returns>
        <see langword="true" /> se a assinatura for válida; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> é menor que zero.
- ou -
<paramref name="offset" /> ou <paramref name="count" /> é maior do que o tamanho da matriz de bytes passada no parâmetro <paramref name="data" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> ou <paramref name="signature" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
      <summary>Verifica uma assinatura digital do fluxo de dados especificado, lendo até o final do fluxo.</summary>
      <param name="data">O fluxo de dados que foi assinado.</param>
      <param name="signature">A assinatura a ser verificada.</param>
      <returns>
        <see langword="true" /> se a assinatura for válida; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> ou <paramref name="signature" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
      <summary>Verifica se uma assinatura digital é adequada para a chave atual e para o hash de dados fornecido.</summary>
      <param name="hash">O valor de hash dos dados a serem verificados.</param>
      <param name="signature">A assinatura digital dos dados a serem verificados em relação ao valor de hash.</param>
      <returns>
        <see langword="true" /> se a assinatura for válida; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> ou <paramref name="signature" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.Cryptography.ECKeyXmlFormat">
      <summary>Define os formatos de serialização de XML para chaves de curva elíptica.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050">
      <summary>Um formato de serialização de XML descrito no RFC 4050, “Usando ECDSA (Algoritmo de Assinatura Digital Curva Elíptica) para assinaturas digitais XML”.</summary>
    </member>
    <member name="T:System.Security.Cryptography.RSACng">
      <summary>Fornece uma implementação CNG (Cryptography Next Generation) do algoritmo RSA.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.RSACng" /> com um par de chaves aleatório de 2.048 bits.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.RSACng" /> com uma chave gerada aleatoriamente do tamanho especificado.</summary>
      <param name="keySize">O tamanho da chave a ser gerada em bits.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="keySize" /> não é válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.RSACng" /> com a chave especificada.</summary>
      <param name="key">A chave a ser usada para operações de RSA.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> não é uma chave RSA válida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>Descriptografa os dados de entrada usando o modo de preenchimento especificado.</summary>
      <param name="data">Os dados a serem descriptografados.</param>
      <param name="padding">O modo de preenchimento.</param>
      <returns>Os dados descriptografados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> é <see langword="null" />.
-ou-
<paramref name="padding" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" /> não é igual a <see cref="P:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1" /> ou então <see cref="P:System.Security.Cryptography.RSAEncryptionPadding.Mode" /> de <paramref name="padding" /> não é igual a <see cref="F:System.Security.Cryptography.RSAEncryptionPaddingMode.Oaep" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>Criptografa os dados de entrada usando o preenchimento especificado.</summary>
      <param name="data">Os dados a serem criptografados.</param>
      <param name="padding">O modo de preenchimento.</param>
      <returns>Os dados criptografados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> é <see langword="null" />.
-ou-
<paramref name="padding" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" /> não é igual a <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /> ou a <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pss" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)">
      <summary>Exporta a chave usada pelo objeto RSA para um objeto <see cref="T:System.Security.Cryptography.RSAParameters" />.</summary>
      <param name="includePrivateParameters">
        <see langword="true" /> para incluir parâmetros particulares; caso contrário, <see langword="false" />.</param>
      <returns>A chave usada pelo objeto RSA.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)">
      <summary>Substitui a chave existente em que a instância atual está trabalhando, criando um novo <see cref="T:System.Security.Cryptography.CngKey" /> para a estrutura dos parâmetros.</summary>
      <param name="parameters">Os parâmetros RSA.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="parameters" /> não contém um expoente nem um módulo.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="parameters" /> não é uma chave RSA válida.
-ou-
<paramref name="parameters" /> é um par de chave completo e o KSP padrão é usado.</exception>
    </member>
    <member name="P:System.Security.Cryptography.RSACng.Key">
      <summary>Obtém a chave que será usada pelo objeto <see cref="T:System.Security.Cryptography.RSACng" /> para qualquer operação criptográfica realizada.</summary>
      <returns>A chave usada pelo objeto <see cref="T:System.Security.Cryptography.RSACng" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACng.LegalKeySizes" />
    <member name="M:System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
      <summary>Assina dados que passaram por hash usando o algoritmo de hash especificado e o modo de preenchimento.</summary>
      <param name="hash">O hash a assinar.</param>
      <param name="hashAlgorithm">O nome do algoritmo hash.</param>
      <param name="padding">O modo de preenchimento.</param>
      <returns>Os dados assinados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> é <see langword="null" />.
-ou-
<paramref name="padding" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O valor da propriedade <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> de <paramref name="hashAlgorithm" /> é <see langword="null" /> ou <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" /> não é igual a <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /> ou a <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pss" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
      <summary>Verifica os dados que assinados e que já passaram por hash com o algoritmo e o modo de preenchimento especificados.</summary>
      <param name="hash">O hash a verificar.</param>
      <param name="signature">A assinatura dos dados.</param>
      <param name="hashAlgorithm">O nome do algoritmo hash.</param>
      <param name="padding">O modo de preenchimento.</param>
      <returns>
        <see langword="true" /> se a assinatura for verificada para o hash; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> é <see langword="null" />.
-ou-
<paramref name="signature" /> é <see langword="null" />.
-ou-
<paramref name="padding" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O valor da propriedade <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> de <paramref name="hashAlgorithm" /> é <see langword="null" /> ou <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" /> não é igual a <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /> ou a <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pss" />.
-ou-
A assinatura está formatada incorretamente. (Na .NET Framework 4.6 e na 4.6.1 somente; da .NET Framework 4.6.2 em diante, o método retornará <see langword="false" /> se uma assinatura estiver formatada incorretamente.</exception>
    </member>
    <member name="T:System.Security.Cryptography.TripleDESCng">
      <summary>Fornece uma implementação Cryptography Next Generation (CNG) do algoritmo DES Triplo (3DES).</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.TripleDESCng" /> com uma chave efêmera.</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.TripleDESCng" /> com o nome da chave especificado, que representa uma chave 3DES persistente existente.</summary>
      <param name="keyName">O nome da chave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.TripleDESCng" /> com o nome da chave especificado, que representa uma chave 3DES persistente existente e o KSP (provedor de armazenamento de chave) especificado.</summary>
      <param name="keyName">O nome da chave.</param>
      <param name="provider">O KSP que contém a chave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> é <see langword="null" />.
- ou -
<paramref name="provider" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.TripleDESCng" /> com o nome da chave especificado, que representa uma chave 3DES persistente existente, KSP (provedor de armazenamento de chave) especificado e opções de abertura de chave.</summary>
      <param name="keyName">O nome da chave.</param>
      <param name="provider">O KSP que contém a chave.</param>
      <param name="openOptions">Uma combinação bit a bit dos valores de enumeração que especifica opções para abrir a chave, como de onde a chave é aberta (armazenamento do usuário ou computador) e se o prompt da interface do usuário deve ser suprimido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> é <see langword="null" />.
- ou -
<paramref name="provider" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A CNG (Cryptography Next Generation) não é compatível com este sistema.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Todos os outros erros.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.CreateDecryptor">
      <summary>Cria um objeto descriptografador 3DES simétrico com a chave atual e o <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> (vetor de inicialização).</summary>
      <returns>Um objeto descriptografador 3DES simétrico.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Cria um objeto descriptografador 3DES simétrico com a chave especificada e o IV (vetor de inicialização).</summary>
      <param name="rgbKey">A chave secreta a ser usada para o algoritmo 3DES. O tamanho da chave deve ser de 192 bits.</param>
      <param name="rgbIV">O vetor de inicialização a ser usado para o algoritmo 3DES.</param>
      <returns>Um objeto descriptografador 3DES simétrico.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbKey" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rgbKey" /> não é um tamanho válido para este algoritmo.
- ou -
O tamanho de <paramref name="rgbIV" /> não corresponde ao tamanho do bloco deste algoritmo.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="rgbKey" /> é uma chave fraca conhecida para este algoritmo e não pode ser usada.
- ou -
<paramref name="rgbIV" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.CreateEncryptor">
      <summary>Cria um objeto criptografador 3DES simétrico usando a chave atual e o vetor de inicialização (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <returns>Um objeto criptografador 3DES simétrico.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Cria um objeto criptografador 3DES simétrico com a chave especificada e o IV (vetor de inicialização).</summary>
      <param name="rgbKey">A chave secreta a ser usada para o algoritmo 3DES. O tamanho da chave deve ser de 192 bits.</param>
      <param name="rgbIV">O vetor de inicialização a ser usado para o algoritmo 3DES.</param>
      <returns>Um objeto criptografador 3DES simétrico.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbKey" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rgbKey" /> não é um tamanho válido para este algoritmo.
- ou -
O tamanho de <paramref name="rgbIV" /> não corresponde ao tamanho do bloco deste algoritmo.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="rgbKey" /> é uma chave fraca conhecida para este algoritmo e não pode ser usada.
- ou -
<paramref name="rgbIV" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.GenerateIV">
      <summary>Gera um IV (vetor de inicialização) aleatório a ser usado para o algoritmo 3DES.</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.GenerateKey">
      <summary>Gera uma chave aleatória a ser usada para o algoritmo 3DES.</summary>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCng.Key">
      <summary>Obtém ou define a chave para o algoritmo <see cref="T:System.Security.Cryptography.TripleDESCng" />.</summary>
      <returns>A chave do <see cref="T:System.Security.Cryptography.TripleDESCng" /> algoritmo.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCng.KeySize">
      <summary>Obtém ou define o tamanho, em bits, da chave secreta usada pelo algoritmo <see cref="T:System.Security.Cryptography.TripleDESCng" />.</summary>
      <returns>O tamanho, em bits, da chave secreta usada pelo <see cref="T:System.Security.Cryptography.TripleDESCng" /> algoritmo.</returns>
    </member>
  </members>
</doc>