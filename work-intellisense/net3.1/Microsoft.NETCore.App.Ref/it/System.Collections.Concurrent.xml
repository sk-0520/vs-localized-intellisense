<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Collections.Concurrent</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Concurrent.BlockingCollection`1">
      <summary vsli:raw="Provides blocking and bounding capabilities for thread-safe collections that implement &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt;.">Fornisce funzionalità di blocco e limitazione per le raccolte thread-safe che implementano <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</summary>
      <typeparam name="T" vsli:raw="The type of elements in the collection.">Tipo di elementi contenuti nella raccolta.</typeparam>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; class without an upper-bound.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> senza un limite superiore.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; class without an upper-bound and using the provided &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt; as its underlying data store.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> senza un limite superiore e utilizzando l'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> fornito come archivio dati sottostante.</summary>
      <param name="collection" vsli:raw="The collection to use as the underlying data store.">Insieme da utilizzare come archivio dati sottostante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collection&quot; /&gt; argument is null.">L'argomento <paramref name="collection" /> è Null.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; class with the specified upper-bound and using the provided &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt; as its underlying data store.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> con il limite superiore specificato e utilizzando l'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> fornito come archivio dati sottostante.</summary>
      <param name="collection" vsli:raw="The collection to use as the underlying data store.">Raccolta da usare come archivio dati sottostante.</param>
      <param name="boundedCapacity" vsli:raw="The bounded size of the collection.">Dimensione delimitata della raccolta.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collection&quot; /&gt; argument is null.">L'argomento <paramref name="collection" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;boundedCapacity&quot; /&gt; is not a positive value.">
        <paramref name="boundedCapacity" /> non è un valore positivo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The supplied &lt;paramref name=&quot;collection&quot; /&gt; contains more values than is permitted by &lt;paramref name=&quot;boundedCapacity&quot; /&gt;.">L'elemento <paramref name="collection" /> contiene più valori rispetto a quelli consentiti da <paramref name="boundedCapacity" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; class with the specified upper-bound.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> con il limite superiore specificato.</summary>
      <param name="boundedCapacity" vsli:raw="The bounded size of the collection.">Dimensione delimitata dell'insieme.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;boundedCapacity&quot; /&gt; is not a positive value.">
        <paramref name="boundedCapacity" /> non è un valore positivo.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
      <summary vsli:raw="Adds the item to the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt;.">Aggiunge l'elemento all'oggetto <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="item" vsli:raw="The item to be added to the collection. The value can be a null reference.">Elemento da aggiungere alla raccolta. Il valore può essere un riferimento Null.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been marked as complete with regards to additions.&#xA;&#xA; -or-&#xA;&#xA; The underlying collection didn't accept the item.">
        <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stato contrassegnato come completo in relazione alle aggiunte.
-oppure-
La raccolta sottostante non ha accettato l'elemento.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
      <summary vsli:raw="Adds the item to the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt;.">Aggiunge l'elemento all'oggetto <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="item" vsli:raw="The item to be added to the collection. The value can be a null reference.">Elemento da aggiungere alla raccolta. Il valore può essere un riferimento Null.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to observe.">Token di annullamento da osservare.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; is canceled.">Se <see cref="T:System.Threading.CancellationToken" /> viene annullato.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed or the &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; that owns &lt;paramref name=&quot;cancellationToken&quot; /&gt; has been disposed.">È stato eliminato <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> oppure <see cref="T:System.Threading.CancellationTokenSource" /> proprietario di <paramref name="cancellationToken" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been marked as complete with regards to additions.&#xA;&#xA; -or-&#xA;&#xA; The underlying collection didn't accept the item.">
        <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stato contrassegnato come completo in relazione alle aggiunte.
-oppure-
La raccolta sottostante non ha accettato l'elemento.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
      <summary vsli:raw="Adds the specified item to any one of the specified &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances.">Aggiunge l'elemento specificato a una qualsiasi delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> specificate.</summary>
      <param name="collections" vsli:raw="The array of collections.">Matrice di raccolte.</param>
      <param name="item" vsli:raw="The item to be added to one of the collections.">Elemento da aggiungere a uno degli insiemi.</param>
      <returns vsli:raw="The index of the collection in the &lt;paramref name=&quot;collections&quot; /&gt; array to which the item was added.">Indice della raccolta nella matrice <paramref name="collections" /> cui è stato aggiunto l'elemento.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="At least one of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances has been disposed.">Almeno una delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is null.">L'argomento <paramref name="collections" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The count of &lt;paramref name=&quot;collections&quot; /&gt; is greater than the maximum size of 62 for STA and 63 for MTA.">Il conteggio di <paramref name="collections" /> è più grande della dimensione massima di 62 per STA e 63 per MTA.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.">L'argomento <paramref name="collections" /> è una matrice di lunghezza 0 o contiene un elemento null o almeno uno degli insiemi è stato contrassegnato come completo per l'aggiunta.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="At least one underlying collection didn't accept the item.">Almeno un insieme sottostante non ha accettato l'elemento.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
      <summary vsli:raw="Adds the specified item to any one of the specified &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances.">Aggiunge l'elemento specificato a una qualsiasi delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> specificate.</summary>
      <param name="collections" vsli:raw="The array of collections.">Matrice di raccolte.</param>
      <param name="item" vsli:raw="The item to be added to one of the collections.">Elemento da aggiungere a una delle raccolte.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to observe.">Token di annullamento da osservare.</param>
      <returns vsli:raw="The index of the collection in the &lt;paramref name=&quot;collections&quot; /&gt; array to which the item was added.">Indice della raccolta nella matrice <paramref name="collections" /> cui è stato aggiunto l'elemento.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; is canceled.">Se <see cref="T:System.Threading.CancellationToken" /> viene annullato.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="At least one underlying collection didn't accept the item.">Almeno un insieme sottostante non ha accettato l'elemento.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is null.">L'argomento <paramref name="collections" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The count of &lt;paramref name=&quot;collections&quot; /&gt; is greater than the maximum size of 62 for STA and 63 for MTA.">Il conteggio di <paramref name="collections" /> è più grande della dimensione massima di 62 per STA e 63 per MTA.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.">L'argomento <paramref name="collections" /> è una matrice di lunghezza 0 o contiene un elemento null o almeno uno degli insiemi è stato contrassegnato come completo per l'aggiunta.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="At least one of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances has been disposed, or the &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; that created &lt;paramref name=&quot;cancellationToken&quot; /&gt; has been disposed.">Almeno una delle istanze <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata oppure l'istanza <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è stata eliminata.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.BlockingCollection`1.BoundedCapacity">
      <summary vsli:raw="Gets the bounded capacity of this &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance.">Ottiene un valore che indica la capacità delimitata di questa istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <returns vsli:raw="The bounded capacity of this collection, or -1 if no bound was supplied.">Capacità delimitata di questa raccolta, o int.MaxValue se non è stato fornito alcun limite.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding">
      <summary vsli:raw="Marks the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances as not accepting any more additions.">Contrassegna le istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> per non accettare più alcuna aggiunta.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies all of the items in the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance to a compatible one-dimensional array, starting at the specified index of the target array.">Copia tutti gli elementi dell'istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> in una matrice unidimensionale compatibile, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance. The array must have zero-based indexing.">Matrice unidimensionale che è la destinazione degli elementi copiati dall'istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;array&quot; /&gt; argument is null.">L'argomento <paramref name="array" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;index&quot; /&gt; argument is less than zero.">L'argomento <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;index&quot; /&gt; argument is equal to or greater than the length of the &lt;paramref name=&quot;array&quot; /&gt;.&#xA;&#xA; The destination array is too small to hold all of the BlockingCollection elements.&#xA;&#xA; The array rank doesn't match.&#xA;&#xA; The array type is incompatible with the type of the BlockingCollection elements.">L'argomento <paramref name="index" /> è uguale a o più grande della lunghezza di <paramref name="array" />.
La matrice di destinazione è troppo piccola per contenere tutti gli elementi BlockingCollection.
Il numero di dimensioni della matrice non corrisponde.
Il tipo di matrice non è compatibile con il tipo degli elementi BlockingCollection.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.BlockingCollection`1.Count">
      <summary vsli:raw="Gets the number of items contained in the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt;.">Ottiene il numero di elementi contenuti nella classe <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <returns vsli:raw="The number of items contained in the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt;.">Numero di elementi contenuti in <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; class.">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.Dispose(System.Boolean)">
      <summary vsli:raw="Releases resources used by the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance.">Rilascia risorse utilizzate dall'istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="disposing" vsli:raw="Whether being disposed explicitly (true) or due to a finalizer (false).">Se eliminato in modo esplicito (true) o destinato a un finalizzatore (false).</param>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable">
      <summary vsli:raw="Provides a consuming &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; for items in the collection.">Fornisce un oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> usato per gli elementi nella raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that removes and returns items from the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> che rimuove e restituisce elementi dalla raccolta.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
      <summary vsli:raw="Provides a consuming &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; for items in the collection.">Fornisce un oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> usato per gli elementi nella raccolta.</summary>
      <param name="cancellationToken" vsli:raw="A cancellation token to observe.">Token di annullamento da osservare.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that removes and returns items from the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> che rimuove e restituisce elementi dalla raccolta.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; is canceled.">Se <see cref="T:System.Threading.CancellationToken" /> viene annullato.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed or the &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; that created &lt;paramref name=&quot;cancellationToken&quot; /&gt; has been disposed">L'oggetto <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stato eliminato o è stato eliminato l'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che aveva creato <paramref name="cancellationToken" />.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.BlockingCollection`1.IsAddingCompleted">
      <summary vsli:raw="Gets whether this &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been marked as complete for adding.">Ottiene un valore che indica se questo oggetto <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stato contrassegnato come completo per l'aggiunta.</summary>
      <returns vsli:raw="Whether this collection has been marked as complete for adding.">Viene indicato se questo insieme è stato contrassegnato come completo per l'aggiunta.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.BlockingCollection`1.IsCompleted">
      <summary vsli:raw="Gets whether this &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been marked as complete for adding and is empty.">Ottiene un valore che indica se questo oggetto <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stato contrassegnato come completo per l'aggiunta ed è vuoto.</summary>
      <returns vsli:raw="Whether this collection has been marked as complete for adding and is empty.">Viene indicato se questo insieme è stato contrassegnato come completo per l'aggiunta ed è vuoto.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; for items in the collection.">Fornisce un oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> per gli elementi nell'insieme.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; for the items in the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> per gli elementi nella raccolta.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all of the items in the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance to a compatible one-dimensional array, starting at the specified index of the target array.">Copia tutti gli elementi dell'istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> in una matrice unidimensionale compatibile, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance. The array must have zero-based indexing.">Matrice unidimensionale che è la destinazione degli elementi copiati dall'istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;array&quot; /&gt; argument is null.">L'argomento <paramref name="array" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;index&quot; /&gt; argument is less than zero.">L'argomento <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;index&quot; /&gt; argument is equal to or greater than the length of the &lt;paramref name=&quot;array&quot; /&gt;, the array is multidimensional, or the type parameter for the collection cannot be cast automatically to the type of the destination array.">L'argomento <paramref name="index" /> è uguale a o più grande della lunghezza di <paramref name="array" />, la matrice è multidimensionale o non può essere eseguito automaticamente il cast al tipo della matrice di destinazione del parametro di tipo per l'insieme.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt; to indicate the access is not synchronized.">Restituisce sempre <see langword="false" /> per indicare che l'accesso non è sincronizzato.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. This property is not supported.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />. Questa proprietà non è supportata.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce null.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The SyncRoot property is not supported.">La proprietà SyncRoot non è supportata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for items in the collection.">Fornisce un oggetto <see cref="T:System.Collections.IEnumerator" /> per gli elementi nell'insieme.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the items in the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> per gli elementi nell'insieme.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.Take">
      <summary vsli:raw="Removes an item from the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt;.">Rimuove un elemento da <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <returns vsli:raw="The item that was removed from the collection.">Elemento rimosso dalla raccolta.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The underlying collection was modified outside of this &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance, or the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; is empty and has been marked as complete with regards to additions.">L'insieme sottostante è stato modificato all'esterno di questa istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> o <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è vuoto e l'insieme è stato contrassegnato come completo per l'aggiunta.</exception>
      <exception cref="T:System.OperationCanceledException">La raccolta <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è vuota ed è stata contrassegnata come completa in relazione alle aggiunte.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
      <summary vsli:raw="Removes an item from the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt;.">Rimuove un elemento da <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="cancellationToken" vsli:raw="A token that can be used to cancel the &quot;take&quot; operation.">Oggetto che può essere usato per annullare l'operazione di prelevamento.</param>
      <returns vsli:raw="The item that was removed from the collection.">Elemento rimosso dalla raccolta.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; is canceled.">L'oggetto <see cref="T:System.Threading.CancellationToken" /> viene annullato.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'oggetto <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stato eliminato o è stato annullato l'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che aveva creato il token.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The underlying collection was modified outside of this &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance, or the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; is empty and has been marked as complete with regards to additions.">L'insieme sottostante è stato modificato al di fuori di questa istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> o BlockingCollection è contrassegnato come completo per l'aggiunta o <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è vuoto.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
      <summary vsli:raw="Takes an item from any one of the specified &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances.">Preleva un elemento da una delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> specificate.</summary>
      <param name="collections" vsli:raw="The array of collections.">Matrice di insiemi.</param>
      <param name="item" vsli:raw="The item that was removed from one of the collections.">Elemento rimosso da uno degli insiemi.</param>
      <returns vsli:raw="The index of the collection in the &lt;paramref name=&quot;collections&quot; /&gt; array from which the item was removed.">Indice della raccolta nella matrice <paramref name="collections" /> da cui è stato rimosso l'elemento.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="At least one of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances has been disposed.">Almeno una delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is null.">L'argomento <paramref name="collections" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The count of &lt;paramref name=&quot;collections&quot; /&gt; is greater than the maximum size of 62 for STA and 63 for MTA.">Il conteggio di <paramref name="collections" /> è più grande della dimensione massima di 62 per STA e 63 per MTA.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is a 0-length array or contains a null element or &lt;see cref=&quot;M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding&quot; /&gt; has been called on the collection.">L'argomento <paramref name="collections" /> è una matrice di lunghezza 0 o contiene un elemento null o <see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /> è stato chiamato nell'insieme.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="At least one of the underlying collections was modified outside of its &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance.">Almeno uno degli insiemi sottostanti è stato modificato all'esterno dell'istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
      <summary vsli:raw="Takes an item from any one of the specified &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances while observing the specified cancellation token.">Preleva un elemento da una delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> specificate considerando il token di annullamento specificato.</summary>
      <param name="collections" vsli:raw="The array of collections.">Matrice di insiemi.</param>
      <param name="item" vsli:raw="The item that was removed from one of the collections.">Elemento rimosso da una delle raccolte.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to observe.">Token di annullamento da osservare.</param>
      <returns vsli:raw="The index of the collection in the &lt;paramref name=&quot;collections&quot; /&gt; array from which the item was removed.">Indice della raccolta nella matrice <paramref name="collections" /> da cui è stato rimosso l'elemento.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; is canceled.">Se <see cref="T:System.Threading.CancellationToken" /> viene annullato.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="At least one of the underlying collections was modified outside of its &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance.">Almeno uno degli insiemi sottostanti è stato modificato all'esterno dell'istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is null.">L'argomento <paramref name="collections" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The count of &lt;paramref name=&quot;collections&quot; /&gt; is greater than the maximum size of 62 for STA and 63 for MTA.">Il conteggio di <paramref name="collections" /> è più grande della dimensione massima di 62 per STA e 63 per MTA.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is a 0-length array or contains a null element, or &lt;see cref=&quot;M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding&quot; /&gt; has been called on the collection.">L'argomento <paramref name="collections" /> è una matrice di lunghezza 0 o contiene un elemento null o <see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /> è stato chiamato nell'insieme.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="At least one of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances has been disposed.">Almeno una delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
      <summary vsli:raw="Copies the items from the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance into a new array.">Copia gli elementi dall'istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> in una nuova matrice.</summary>
      <returns vsli:raw="An array containing copies of the elements of the collection.">Matrice che contiene copie degli elementi della raccolta.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
      <summary vsli:raw="Tries to add the specified item to the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt;.">Prova ad aggiungere l'elemento specificato a <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="item" vsli:raw="The item to be added to the collection.">Elemento da aggiungere alla raccolta.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; could be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If the item is a duplicate, and the underlying collection does not accept duplicate items, then an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown.">
        <see langword="true" /> se è possibile aggiungere <paramref name="item" />; in caso contrario, <see langword="false" />. Se l'elemento è un duplicato e la raccolta sottostante non accetta elementi duplicati, viene generato un oggetto <see cref="T:System.InvalidOperationException" />.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been marked as complete with regards to additions.&#xA;&#xA; -or-&#xA;&#xA; The underlying collection didn't accept the item.">
        <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stato contrassegnato come completo in relazione alle aggiunte.
-oppure-
La raccolta sottostante non ha accettato l'elemento.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
      <summary vsli:raw="Tries to add the specified item to the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; within the specified time period.">Prova ad aggiungere l'elemento specificato a <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> nel periodo di tempo specificato.</summary>
      <param name="item" vsli:raw="The item to be added to the collection.">Elemento da aggiungere all'insieme.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the collection to accept the item, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;item&quot; /&gt; could be added to the collection within the specified time; otherwise, false. If the item is a duplicate, and the underlying collection does not accept duplicate items, then an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown.">
        <see langword="true" /> se è stato possibile aggiungere <paramref name="item" /> alla raccolta entro il tempo specificato. In caso contrario, false. Se l'elemento è un duplicato e la raccolta sottostante non accetta elementi duplicati, viene generato un oggetto <see cref="T:System.InvalidOperationException" />.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is a negative number other than -1, which represents an infinite time-out.">
        <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been marked as complete with regards to additions.&#xA;&#xA; -or-&#xA;&#xA; The underlying collection didn't accept the item.">
        <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stato contrassegnato come completo in relazione alle aggiunte.
-oppure-
La raccolta sottostante non ha accettato l'elemento.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Tries to add the specified item to the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; within the specified time period, while observing a cancellation token.">Prova ad aggiungere l'elemento specificato a <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> nel periodo di tempo specificato, considerando un token di annullamento.</summary>
      <param name="item" vsli:raw="The item to be added to the collection.">Elemento da aggiungere all'insieme.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the collection to accept the item, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to observe.">Token di annullamento da osservare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;item&quot; /&gt; could be added to the collection within the specified time; otherwise, false. If the item is a duplicate, and the underlying collection does not accept duplicate items, then an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown.">
        <see langword="true" /> se è stato possibile aggiungere <paramref name="item" /> alla raccolta entro il tempo specificato. In caso contrario, false. Se l'elemento è un duplicato e la raccolta sottostante non accetta elementi duplicati, viene generato un oggetto <see cref="T:System.InvalidOperationException" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; is canceled.">Se <see cref="T:System.Threading.CancellationToken" /> viene annullato.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed or the underlying &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; has been disposed.">È stato eliminato <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> o l'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> sottostante.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is a negative number other than -1, which represents an infinite time-out.">
        <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been marked as complete with regards to additions.&#xA;&#xA; -or-&#xA;&#xA; The underlying collection didn't accept the item.">
        <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stato contrassegnato come completo in relazione alle aggiunte.
-oppure-
La raccolta sottostante non ha accettato l'elemento.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
      <summary vsli:raw="Tries to add the specified item to the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt;.">Prova ad aggiungere l'elemento specificato a <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="item" vsli:raw="The item to be added to the collection.">Elemento da aggiungere alla raccolta.</param>
      <param name="timeout" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that represents the number of milliseconds to wait, or a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that represents -1 milliseconds to wait indefinitely.">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;item&quot; /&gt; could be added to the collection within the specified time span; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è stato possibile aggiungere <paramref name="item" /> alla raccolta nell'intervallo di tempo specificato. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1 milliseconds, which represents an infinite time-out&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;timeout&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="timeout" /> è un numero negativo diverso da -1 millisecondi che rappresenta un timeout infinito - o - il timeout è più grande di <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been marked as complete with regards to additions.&#xA;&#xA; -or-&#xA;&#xA; The underlying collection didn't accept the item.">
        <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stato contrassegnato come completo in relazione alle aggiunte.
-oppure-
La raccolta sottostante non ha accettato l'elemento.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
      <summary vsli:raw="Tries to add the specified item to any one of the specified &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances.">Prova ad aggiungere l'elemento specificato a una delle istanze specifiche di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="collections" vsli:raw="The array of collections.">Matrice di raccolte.</param>
      <param name="item" vsli:raw="The item to be added to one of the collections.">Elemento da aggiungere a una delle raccolte.</param>
      <returns vsli:raw="The index of the collection in the &lt;paramref name=&quot;collections&quot; /&gt; array to which the item was added, or -1 if the item could not be added.">Indice dell'insieme nella matrice <paramref name="collections" /> cui è stato aggiunto l'elemento o -1 se non è stato possibile aggiungere l'elemento.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="At least one of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances has been disposed.">Almeno una delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is null.">L'argomento <paramref name="collections" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The count of &lt;paramref name=&quot;collections&quot; /&gt; is greater than the maximum size of 62 for STA and 63 for MTA.">Il conteggio di <paramref name="collections" /> è più grande della dimensione massima di 62 per STA e 63 per MTA.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.">L'argomento <paramref name="collections" /> è una matrice di lunghezza 0 o contiene un elemento null o almeno uno degli insiemi è stato contrassegnato come completo per l'aggiunta.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="At least one underlying collection didn't accept the item.">Almeno un insieme sottostante non ha accettato l'elemento.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
      <summary vsli:raw="Tries to add the specified item to any one of the specified &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances.">Prova ad aggiungere l'elemento specificato a una delle istanze specifiche di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="collections" vsli:raw="The array of collections.">Matrice di raccolte.</param>
      <param name="item" vsli:raw="The item to be added to one of the collections.">Elemento da aggiungere a una delle raccolte.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the collection to accept the item, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</param>
      <returns vsli:raw="The index of the collection in the &lt;paramref name=&quot;collections&quot; /&gt; array to which the item was added, or -1 if the item could not be added.">Indice dell'insieme nella matrice <paramref name="collections" /> cui è stato aggiunto l'elemento o -1 se non è stato possibile aggiungere l'elemento.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="At least one of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances has been disposed.">Almeno una delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is null.">L'argomento <paramref name="collections" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is a negative number other than -1, which represents an infinite time-out.&#xA;&#xA; -or-&#xA;&#xA; The count of &lt;paramref name=&quot;collections&quot; /&gt; is greater than the maximum size of 62 for STA and 63 for MTA.">
        <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.
-oppure-
Il conteggio di <paramref name="collections" /> è più grande della dimensione massima di 62 per STA e 63 per MTA.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.">L'argomento <paramref name="collections" /> è una matrice di lunghezza 0 o contiene un elemento null o almeno uno degli insiemi è stato contrassegnato come completo per l'aggiunta.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="At least one underlying collection didn't accept the item.">Almeno un insieme sottostante non ha accettato l'elemento.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Tries to add the specified item to any one of the specified &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances.">Prova ad aggiungere l'elemento specificato a una delle istanze specifiche di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="collections" vsli:raw="The array of collections.">Matrice di raccolte.</param>
      <param name="item" vsli:raw="The item to be added to one of the collections.">Elemento da aggiungere a una delle raccolte.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the collection to accept the item, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to observe.">Token di annullamento da osservare.</param>
      <returns vsli:raw="The index of the collection in the &lt;paramref name=&quot;collections&quot; /&gt; array to which the item was added, or -1 if the item could not be added.">Indice della raccolta nella matrice <paramref name="collections" /> cui è stato aggiunto l'elemento o -1 se non è stato possibile aggiungere l'elemento.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; is canceled.">Se <see cref="T:System.Threading.CancellationToken" /> viene annullato.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="At least one underlying collection didn't accept the item.">Almeno un insieme sottostante non ha accettato l'elemento.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is null.">L'argomento <paramref name="collections" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is a negative number other than -1, which represents an infinite time-out.&#xA;&#xA; -or-&#xA;&#xA; The count of &lt;paramref name=&quot;collections&quot; /&gt; is greater than the maximum size of 62 for STA and 63 for MTA.">
        <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.
-oppure-
Il conteggio di <paramref name="collections" /> è più grande della dimensione massima di 62 per STA e 63 per MTA.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.">L'argomento <paramref name="collections" /> è una matrice di lunghezza 0 o contiene un elemento null o almeno uno degli insiemi è stato contrassegnato come completo per l'aggiunta.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="At least one of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances has been disposed.">Almeno una delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
      <summary vsli:raw="Tries to add the specified item to any one of the specified &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances while observing the specified cancellation token.">Tenta di aggiungere l'elemento specificato a una delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> specificate considerando il token di annullamento specificato.</summary>
      <param name="collections" vsli:raw="The array of collections.">Matrice di raccolte.</param>
      <param name="item" vsli:raw="The item to be added to one of the collections.">Elemento da aggiungere a una delle raccolte.</param>
      <param name="timeout" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that represents the number of milliseconds to wait, or a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that represents -1 milliseconds to wait indefinitely.">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita.</param>
      <returns vsli:raw="The index of the collection in the &lt;paramref name=&quot;collections&quot; /&gt; array to which the item was added, or -1 if the item could not be added.">Indice della raccolta nella matrice <paramref name="collections" /> cui è stato aggiunto l'elemento o -1 se non è stato possibile aggiungere l'elemento.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="At least one of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances or the &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; that created &lt;paramref name=&quot;cancellationToken&quot; /&gt; has been disposed.">Almeno una delle istanze <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> o <see cref="T:System.Threading.CancellationTokenSource" /> che hanno creato <paramref name="cancellationToken" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is null.">L'argomento <paramref name="collections" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1 milliseconds, which represents an infinite time-out.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;timeout&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.&#xA;&#xA;-or-&#xA;&#xA; The count of &lt;paramref name=&quot;collections&quot; /&gt; is greater than the maximum size of 62 for STA and 63 for MTA.">
        <paramref name="timeout" /> è un numero negativo diverso da -1 millisecondi che rappresenta un timeout infinito - o - il timeout è più grande di <see cref="F:System.Int32.MaxValue" />.
-oppure-
Il conteggio di <paramref name="collections" /> è più grande della dimensione massima di 62 per STA e 63 per MTA.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.">L'argomento <paramref name="collections" /> è una matrice di lunghezza 0 o contiene un elemento null o almeno uno degli insiemi è stato contrassegnato come completo per l'aggiunta.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="At least one underlying collection didn't accept the item.">Almeno un insieme sottostante non ha accettato l'elemento.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
      <summary vsli:raw="Tries to remove an item from the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt;.">Prova a rimuovere un elemento da <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="item" vsli:raw="The item to be removed from the collection.">Elemento da rimuovere dalla raccolta.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è stato possibile rimuovere un elemento. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The underlying collection was modified outside of this &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance.">La raccolta sottostante è stata modificata all'esterno di questa istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
      <summary vsli:raw="Tries to remove an item from the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; in the specified time period.">Prova rimuovere un elemento da <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> entro il periodo di tempo specificato.</summary>
      <param name="item" vsli:raw="The item to be removed from the collection.">Elemento da rimuovere dalla raccolta.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the item to be removed, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be removed from the collection within the specified  time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è stato possibile rimuovere un elemento dalla raccolta entro il tempo specificato. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is a negative number other than -1, which represents an infinite time-out.">
        <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The underlying collection was modified outside of this &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance.">La raccolta sottostante è stata modificata all'esterno di questa istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Tries to remove an item from the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; in the specified time period while observing a cancellation token.">Tenta di rimuovere un elemento da <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> nel periodo di tempo specificato, considerando un token di annullamento.</summary>
      <param name="item" vsli:raw="The item to be removed from the collection.">Elemento da rimuovere dalla raccolta.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the item to be removed, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to observe.">Token di annullamento da osservare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be removed from the collection within the specified  time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è stato possibile rimuovere un elemento dalla raccolta entro il tempo specificato. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; has been canceled.">
        <see cref="T:System.Threading.CancellationToken" /> annullata.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed or the underlying &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; has been disposed.">
        <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stato eliminato o l'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> sottostante è stato eliminato.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is a negative number other than -1, which represents an infinite time-out.">
        <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The underlying collection was modified outside this &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance.">La raccolta sottostante è stata modificata all'esterno di questa istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
      <summary vsli:raw="Tries to remove an item from the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; in the specified time period.">Tenta di rimuovere un elemento da <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> nel periodo di tempo specificato.</summary>
      <param name="item" vsli:raw="The item to be removed from the collection.">Elemento da rimuovere dalla raccolta.</param>
      <param name="timeout" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that represents the number of milliseconds to wait for the item to be removed, or a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that represents -1 milliseconds to wait indefinitely.">Oggetto che rappresenta il numero di millisecondi di attesa oppure un oggetto che rappresenta -1 millisecondi per un'attesa indefinita.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be removed from the collection within the specified time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è stato possibile rimuovere un elemento dalla raccolta entro il tempo specificato. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1 milliseconds, which represents an infinite time-out.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;timeout&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="timeout" /> è un numero negativo diverso da -1 millisecondi, che rappresenta un timeout infinito.
-oppure-
<paramref name="timeout" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The underlying collection was modified outside of this &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance.">L'insieme sottostante è stato modificato all'esterno di questa istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
      <summary vsli:raw="Tries to remove an item from any one of the specified &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances.">Prova a rimuovere un elemento da una delle istanze specifiche di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="collections" vsli:raw="The array of collections.">Matrice di raccolte.</param>
      <param name="item" vsli:raw="The item that was removed from one of the collections.">Elemento rimosso da una delle raccolte.</param>
      <returns vsli:raw="The index of the collection in the &lt;paramref name=&quot;collections&quot; /&gt; array from which the item was removed, or -1 if an item could not be removed.">Indice della raccolta nella matrice <paramref name="collections" /> da cui è stato rimosso l'elemento o -1 se non è stato possibile rimuovere un elemento.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="At least one of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances has been disposed.">Almeno una delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is null.">L'argomento <paramref name="collections" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The count of &lt;paramref name=&quot;collections&quot; /&gt; is greater than the maximum size of 62 for STA and 63 for MTA.">Il conteggio di <paramref name="collections" /> è più grande della dimensione massima di 62 per STA e 63 per MTA.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is a 0-length array or contains a null element.">L'argomento <paramref name="collections" /> è una matrice di lunghezza 0 matrice o contiene un elemento null.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="At least one of the underlying collections was modified outside of its &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance.">Almeno uno degli insiemi sottostanti è stato modificato all'esterno dell'istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
      <summary vsli:raw="Tries to remove an item from any one of the specified &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances.">Prova a rimuovere un elemento da una delle istanze specifiche di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="collections" vsli:raw="The array of collections to remove an item from.">Matrice di insiemi.</param>
      <param name="item" vsli:raw="The item that was removed from one of the collections.">Elemento rimosso da una delle raccolte.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the item to be removed, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</param>
      <returns vsli:raw="The index of the collection in the &lt;paramref name=&quot;collections&quot; /&gt; array from which the item was removed, or -1 if an item could not be removed.">Indice della raccolta nella matrice <paramref name="collections" /> da cui è stato rimosso l'elemento o -1 se non è stato possibile rimuovere un elemento.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="At least one of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances has been disposed.">Almeno una delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is null.">L'argomento <paramref name="collections" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is a negative number other than -1, which represents an infinite time-out.&#xA;&#xA; -or-&#xA;&#xA; The count of &lt;paramref name=&quot;collections&quot; /&gt; is greater than the maximum size of 62 for STA and 63 for MTA.">
        <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.
-oppure-
Il conteggio di <paramref name="collections" /> è più grande della dimensione massima di 62 per STA e 63 per MTA.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is a 0-length array or contains a null element.">L'argomento <paramref name="collections" /> è una matrice di lunghezza 0 matrice o contiene un elemento null.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="At least one of the underlying collections was modified outside of its &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance.">Almeno uno degli insiemi sottostanti è stato modificato all'esterno dell'istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Tries to remove an item from any one of the specified &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances.">Tenta di rimuovere un elemento da una delle istanze specifiche di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="collections" vsli:raw="The array of collections to remove an item from.">Matrice di insiemi.</param>
      <param name="item" vsli:raw="The item that was removed from one of the collections.">Elemento rimosso da una delle raccolte.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the item to be removed, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to observe.">Token di annullamento da osservare.</param>
      <returns vsli:raw="The index of the collection in the &lt;paramref name=&quot;collections&quot; /&gt; array from which the item was removed, or -1 if an item could not be removed.">Indice della raccolta nella matrice <paramref name="collections" /> da cui è stato rimosso l'elemento o -1 se non è stato possibile rimuovere un elemento.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; is canceled.">Se <see cref="T:System.Threading.CancellationToken" /> viene annullato.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="At least one of the underlying collections was modified outside of its &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance.">Almeno uno degli insiemi sottostanti è stato modificato all'esterno dell'istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is null.">L'argomento <paramref name="collections" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is a negative number other than -1, which represents an infinite time-out.&#xA;&#xA; -or-&#xA;&#xA; The count of &lt;paramref name=&quot;collections&quot; /&gt; is greater than the maximum size of 62 for STA and 63 for MTA.">
        <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.
-oppure-
Il conteggio di <paramref name="collections" /> è più grande della dimensione massima di 62 per STA e 63 per MTA.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is a 0-length array or contains a null element.">L'argomento <paramref name="collections" /> è una matrice di lunghezza 0 matrice o contiene un elemento null.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="At least one of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances has been disposed.">Almeno una delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
      <summary vsli:raw="Tries to remove an item from any one of the specified &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances.">Prova a rimuovere un elemento da una delle istanze specifiche di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</summary>
      <param name="collections" vsli:raw="The array of collections.">Matrice di insiemi.</param>
      <param name="item" vsli:raw="The item that was removed from one of the collections.">Elemento rimosso da una delle raccolte.</param>
      <param name="timeout" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that represents the number of milliseconds to wait, or a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that represents -1 milliseconds to wait indefinitely.">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita.</param>
      <returns vsli:raw="The index of the collection in the &lt;paramref name=&quot;collections&quot; /&gt; array from which the item was removed, or -1 if an item could not be removed.">Indice della raccolta nella matrice <paramref name="collections" /> da cui è stato rimosso l'elemento o -1 se non è stato possibile rimuovere un elemento.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="At least one of the &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instances has been disposed.">Almeno una delle istanze di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is null.">L'argomento <paramref name="collections" /> è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1 milliseconds, which represents an infinite time-out&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;timeout&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.&#xA;&#xA; -or-&#xA;&#xA; The count of &lt;paramref name=&quot;collections&quot; /&gt; is greater than the maximum size of 62 for STA and 63 for MTA.">
        <paramref name="timeout" /> è un numero negativo diverso da -1 millisecondi che rappresenta un timeout infinito - o - il timeout è più grande di <see cref="F:System.Int32.MaxValue" />.
-oppure-
Il conteggio di <paramref name="collections" /> è più grande della dimensione massima di 62 per STA e 63 per MTA.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;collections&quot; /&gt; argument is a 0-length array or contains a null element.">L'argomento <paramref name="collections" /> è una matrice di lunghezza 0 matrice o contiene un elemento null.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="At least one of the underlying collections was modified outside of its &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; instance.">Almeno uno degli insiemi sottostanti è stato modificato all'esterno dell'istanza di <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</exception>
    </member>
    <member name="T:System.Collections.Concurrent.ConcurrentBag`1">
      <summary vsli:raw="Represents a thread-safe, unordered collection of objects.">Rappresenta una raccolta thread-safe non ordinata di oggetti.</summary>
      <typeparam name="T" vsli:raw="The type of the elements to be stored in the collection.">Tipo degli elementi da archiviare nella raccolta.</typeparam>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt; class that contains elements copied from the specified collection.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> che contiene gli elementi copiati dalla raccolta specificata.</summary>
      <param name="collection" vsli:raw="The collection whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;.">Raccolta i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="collection" /> è un riferimento null (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.Add(`0)">
      <summary vsli:raw="Adds an object to the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;.">Aggiunge un oggetto all'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
      <param name="item" vsli:raw="The object to be added to the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;. The value can be a null reference (Nothing in Visual Basic) for reference types.">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />. Il valore può essere un riferimento Null (Nothing in Visual Basic) per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.Clear">
      <summary vsli:raw="Removes all values from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;.">Rimuove tutti i valori da <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt; elements to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">Copia gli elementi di <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> in un oggetto <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="array" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than the length of the &lt;paramref name=&quot;array&quot; /&gt; -or- the number of elements in the source &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="index" /> è uguale o maggiore della lunghezza di <paramref name="array" /> o il numero di elementi nel <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> di origine è maggiore dello spazio disponibile da <paramref name="index" /> alla fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentBag`1.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;.">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;.">Il numero di elementi contenuti in <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
      <returns vsli:raw="An enumerator for the contents of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;.">Enumeratore per il contenuto dell'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentBag`1.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt; is empty.">Ottiene un valore che indica se <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> è vuoto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt; is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> è vuoto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)">
      <summary vsli:raw="Attempts to add an object to the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;.">Tenta di aggiungere un oggetto all'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
      <param name="item" vsli:raw="The object to be added to the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;. The value can be a null reference (Nothing in Visual Basic) for reference types.">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />. Il valore può essere un riferimento Null (Nothing in Visual Basic) per i tipi di riferimento.</param>
      <returns vsli:raw="Always returns true.">Restituisce sempre true.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="array" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional. -or- &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing. -or- &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than the length of the &lt;paramref name=&quot;array&quot; /&gt; -or- The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;. -or- The type of the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale. oppure <paramref name="array" /> non dispone di indicizzazione a base zero. o <paramref name="index" /> è uguale o maggiore della lunghezza di <paramref name="array" /> o il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile da <paramref name="index" /> alla fine dell'oggetto <paramref name="array" /> di destinazione. oppure non è possibile eseguire automaticamente il cast del tipo dell'insieme <see cref="T:System.Collections.ICollection" /> di origine nel tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized with the SyncRoot.">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato con SyncRoot.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt; to indicate access is not synchronized.">Restituisce sempre <see langword="false" /> per indicare che l'accesso non è sincronizzato.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. This property is not supported.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />. Questa proprietà non è supportata.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce null (Nothing in Visual Basic).</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The SyncRoot property is not supported.">La proprietà SyncRoot non è supportata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
      <returns vsli:raw="An enumerator for the contents of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;.">Enumeratore per il contenuto dell'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.ToArray">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt; elements to a new array.">Copia gli elementi di <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> in una nuova matrice.</summary>
      <returns vsli:raw="A new array containing a snapshot of elements copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;.">Nuova matrice contenente uno snapshot degli elementi copiati da <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.TryPeek(`0@)">
      <summary vsli:raw="Attempts to return an object from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt; without removing it.">Tenta di restituire un oggetto da <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> senza rimuoverlo.</summary>
      <param name="result" vsli:raw="When this method returns, &lt;paramref name=&quot;result&quot; /&gt; contains an object from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt; or the default value of &lt;typeparamref name=&quot;T&quot; /&gt; if the operation failed.">Quando questo metodo termina, <paramref name="result" /> contiene un oggetto da <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> o il valore predefinito di <typeparamref name="T" /> se l'operazione ha esito negativo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an object was returned successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se un oggetto è stato restituito correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.TryTake(`0@)">
      <summary vsli:raw="Attempts to remove and return an object from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;.">Tenta di rimuovere e restituire un oggetto dall'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
      <param name="result" vsli:raw="When this method returns, &lt;paramref name=&quot;result&quot; /&gt; contains the object removed from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt; or the default value of &lt;typeparamref name=&quot;T&quot; /&gt; if the bag is empty.">Quando questo metodo termina, <paramref name="result" /> contiene l'oggetto rimosso da <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> o il valore predefinito di <typeparamref name="T" /> se il contenitore è vuoto.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an object was removed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se un oggetto è stato rimosso correttamente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Collections.Concurrent.ConcurrentDictionary`2">
      <summary vsli:raw="Represents a thread-safe collection of key/value pairs that can be accessed by multiple threads concurrently.">Rappresenta una raccolta thread-safe di coppie chiave/valore a cui è possibile accedere contemporaneamente da più thread.</summary>
      <typeparam name="TKey" vsli:raw="The type of the keys in the dictionary.">Tipo di chiavi nel dizionario.</typeparam>
      <typeparam name="TValue" vsli:raw="The type of the values in the dictionary.">Tipo di valori nel dizionario.</typeparam>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; class that is empty, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, con il livello di concorrenza e la capacità iniziale predefiniti e che usa l'operatore di confronto predefinito per il tipo di chiave.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; class that contains elements copied from the specified &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> che contiene elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" />, dispone del livello di concorrenza e della capacità iniziale predefiniti e utilizza l'operatore di confronto predefinito per il tipo di chiave.</summary>
      <param name="collection" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; or any of its keys is  &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="collection" /> o le relative chiavi sono <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; contains one or more duplicate keys.">
        <paramref name="collection" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; class that contains elements copied from the specified &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; has the default concurrency level, has the default initial capacity, and uses the specified  &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> che contiene elementi copiati dall'oggetto <see cref="T:System.Collections.IEnumerable" /> specificato, con il livello di concorrenza e la capacità iniziale predefiniti e che usa l'oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> specificato.</summary>
      <param name="collection" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; implementation to use when comparing keys.">Implementazione di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare quando si confrontano le chiavi.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="collection" /> o <paramref name="comparer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; class that is empty, has the default concurrency level and capacity, and uses the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, con il livello di concorrenza e la capacità predefiniti e che usa l'oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> specificato.</summary>
      <param name="comparer" vsli:raw="The equality comparison implementation to use when comparing keys.">Implementazione confronto di uguaglianza da usare quando si confrontano le chiavi.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comparer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; class that contains elements copied from the specified &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt;, and uses the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> che contiene gli elementi copiati dall'interfaccia <see cref="T:System.Collections.IEnumerable" /> specificata e che usa l'interfaccia <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> indicata.</summary>
      <param name="concurrencyLevel" vsli:raw="The estimated number of threads that will update the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; concurrently, or in .NET 8+ only, -1 to indicate the default concurrency level.">Numero stimato di thread che aggiorneranno contemporaneamente l'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</param>
      <param name="collection" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; implementation to use when comparing keys.">Implementazione di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare quando si confrontano le chiavi.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="collection" /> o <paramref name="comparer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;concurrencyLevel&quot; /&gt; is less than 1.">
        <paramref name="concurrencyLevel" /> è minore di 1.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; contains one or more duplicate keys.">
        <paramref name="collection" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; class that is empty, has the specified concurrency level and capacity, and uses the default comparer for the key type.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, con il livello di concorrenza e la capacità specificati e che usa l'operatore di confronto predefinito per il tipo di chiave.</summary>
      <param name="concurrencyLevel" vsli:raw="The estimated number of threads that will update the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; concurrently, or in .NET 8+ only, -1 to indicate the default concurrency level.">Numero stimato di thread che aggiorneranno contemporaneamente l'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</param>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; can contain.">Numero iniziale degli elementi che <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> può contenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;concurrencyLevel&quot; /&gt; is less than 1.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than 0.">
        <paramref name="concurrencyLevel" /> è minore di 1.
-oppure-
<paramref name="capacity" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; class that is empty, has the specified concurrency level, has the specified initial capacity, and uses the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, con il livello di concorrenza e la capacità iniziale specificati e che utilizza l'oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> specificato.</summary>
      <param name="concurrencyLevel" vsli:raw="The estimated number of threads that will update the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; concurrently, or in .NET 8+ only, -1 to indicate the default concurrency level.">Numero stimato di thread che aggiorneranno contemporaneamente l'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</param>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; can contain.">Numero iniziale degli elementi che <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> può contenere.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; implementation to use when comparing keys.">Implementazione di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare quando si confrontano le chiavi.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comparer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;concurrencyLevel&quot; /&gt; or &lt;paramref name=&quot;capacity&quot; /&gt; is less than 1.">
        <paramref name="concurrencyLevel" /> o <paramref name="capacity" /> è minore di 1.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
      <summary vsli:raw="Adds a key/value pair to the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; if the key does not already exist, or updates a key/value pair in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; by using the specified function if the key already exists.">Aggiunge una coppia chiave/valore a <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, se la chiave non esiste già, oppure aggiorna una coppia chiave/valore in <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> usando la funzione specificata, se la chiave esiste già.</summary>
      <param name="key" vsli:raw="The key to be added or whose value should be updated.">Chiave da aggiungere o di cui aggiornare il valore.</param>
      <param name="addValue" vsli:raw="The value to be added for an absent key.">Valore da aggiungere per una chiave assente.</param>
      <param name="updateValueFactory" vsli:raw="The function used to generate a new value for an existing key based on the key's existing value.">Funzione usata per generare un nuovo valore per una chiave esistente in base al valore esistente della chiave.</param>
      <returns vsli:raw="The new value for the key. This will be either be &lt;paramref name=&quot;addValue&quot; /&gt; (if the key was absent) or the result of &lt;paramref name=&quot;updateValueFactory&quot; /&gt; (if the key was present).">Nuovo valore della chiave. Sarà <paramref name="addValue" /> se la chiave è assente o il risultato di <paramref name="updateValueFactory" /> se la chiave è presente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; or &lt;paramref name=&quot;updateValueFactory&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> o <paramref name="updateValueFactory" /> è <see langword="null" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The dictionary contains too many elements.">Il dizionario contiene già il numero massimo di elementi (<see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
      <summary vsli:raw="Uses the specified functions to add a key/value pair to the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; if the key does not already exist, or to update a key/value pair in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; if the key already exists.">Utilizza le funzioni specificate per aggiungere una coppia chiave/valore a <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, se la chiave non esiste già, oppure per aggiornare una coppia chiave/valore in <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> se la chiave esiste già.</summary>
      <param name="key" vsli:raw="The key to be added or whose value should be updated.">Chiave da aggiungere o di cui aggiornare il valore.</param>
      <param name="addValueFactory" vsli:raw="The function used to generate a value for an absent key.">Funzione utilizzata per generare un valore per una chiave assente.</param>
      <param name="updateValueFactory" vsli:raw="The function used to generate a new value for an existing key based on the key's existing value.">Funzione usata per generare un nuovo valore per una chiave esistente in base al valore esistente della chiave.</param>
      <returns vsli:raw="The new value for the key. This will be either be the result of &lt;paramref name=&quot;addValueFactory&quot; /&gt; (if the key was absent) or the result of &lt;paramref name=&quot;updateValueFactory&quot; /&gt; (if the key was present).">Nuovo valore della chiave. Sarà il risultato di <paramref name="addValueFactory" /> se la chiave è assente o il risultato di <paramref name="updateValueFactory" /> se la chiave è presente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt;, &lt;paramref name=&quot;addValueFactory&quot; /&gt;, or &lt;paramref name=&quot;updateValueFactory&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />, <paramref name="addValueFactory" /> o <paramref name="updateValueFactory" /> è <see langword="null" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The dictionary contains too many elements.">Il dizionario contiene già il numero massimo di elementi (<see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
      <summary vsli:raw="Uses the specified functions and argument to add a key/value pair to the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; if the key does not already exist, or to update a key/value pair in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; if the key already exists.">Usa le funzioni e l'argomento specificati per aggiungere una coppia chiave/valore a <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, se la chiave non esiste già, oppure per aggiornare una coppia chiave/valore in <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> se la chiave esiste già.</summary>
      <param name="key" vsli:raw="The key to be added or whose value should be updated.">Chiave da aggiungere o di cui aggiornare il valore.</param>
      <param name="addValueFactory" vsli:raw="The function used to generate a value for an absent key.">Funzione usata per generare un valore per una chiave assente.</param>
      <param name="updateValueFactory" vsli:raw="The function used to generate a new value for an existing key based on the key's existing value.">Funzione usata per generare un nuovo valore per una chiave esistente in base al valore esistente della chiave.</param>
      <param name="factoryArgument" vsli:raw="An argument to pass into &lt;paramref name=&quot;addValueFactory&quot; /&gt; and &lt;paramref name=&quot;updateValueFactory&quot; /&gt;.">Argomento da passare in <paramref name="addValueFactory" /> e <paramref name="updateValueFactory" />.</param>
      <typeparam name="TArg" vsli:raw="The type of an argument to pass into &lt;paramref name=&quot;addValueFactory&quot; /&gt; and &lt;paramref name=&quot;updateValueFactory&quot; /&gt;.">Tipo di un argomento da passare in <paramref name="addValueFactory" /> e <paramref name="updateValueFactory" />.</typeparam>
      <returns vsli:raw="The new value for the key. This will be either be the result of &lt;paramref name=&quot;addValueFactory&quot; /&gt; (if the key was absent) or the result of &lt;paramref name=&quot;updateValueFactory&quot; /&gt; (if the key was present).">Nuovo valore della chiave. Sarà il risultato di <paramref name="addValueFactory" /> se la chiave è assente o il risultato di <paramref name="updateValueFactory" /> se la chiave è presente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt;, &lt;paramref name=&quot;addValueFactory&quot; /&gt;, or &lt;paramref name=&quot;updateValueFactory&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="key" />, <paramref name="addValueFactory" /> o <paramref name="updateValueFactory" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The dictionary contains too many elements.">Il dizionario contiene troppi elementi.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.Clear">
      <summary vsli:raw="Removes all keys and values from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Rimuove tutte le chiavi e i valori della raccolta <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; contains the specified key.">Determina se la raccolta <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> contiene la chiave specificata.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Chiave da individuare in <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count">
      <summary vsli:raw="Gets the number of key/value pairs contained in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Ottiene il numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</summary>
      <returns vsli:raw="The number of key/value pairs contained in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="The dictionary contains too many elements.">Il dizionario contiene già il numero massimo di elementi (<see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Enumeratore per l'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
      <summary vsli:raw="Adds a key/value pair to the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; if the key does not already exist. Returns the new value, or the existing value if the key exists.">Aggiunge una coppia chiave/valore a <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> se la chiave non esiste già. Restituisce il nuovo valore, oppure, se la chiave esiste, restituisce il valore esistente.</summary>
      <param name="key" vsli:raw="The key of the element to add.">Chiave dell'elemento da aggiungere.</param>
      <param name="value" vsli:raw="The value to be added, if the key does not already exist.">Valore da aggiungere, se la chiave non esiste ancora.</param>
      <returns vsli:raw="The value for the key. This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.">Valore della chiave. Si tratta del valore esistente se la chiave esiste già nel dizionario o del nuovo valore se la chiave non è presente nel dizionario.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The dictionary contains too many elements.">Il dizionario contiene già il numero massimo di elementi (<see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
      <summary vsli:raw="Adds a key/value pair to the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; by using the specified function if the key does not already exist. Returns the new value, or the existing value if the key exists.">Aggiunge una coppia chiave/valore a <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> usando la funzione specificata se la chiave non esiste già. Restituisce il nuovo valore, oppure, se la chiave esiste, restituisce il valore esistente.</summary>
      <param name="key" vsli:raw="The key of the element to add.">Chiave dell'elemento da aggiungere.</param>
      <param name="valueFactory" vsli:raw="The function used to generate a value for the key.">Funzione usata per generare un valore per la chiave.</param>
      <returns vsli:raw="The value for the key. This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.">Valore della chiave. Si tratta del valore esistente se la chiave esiste già nel dizionario o del nuovo valore se la chiave non è presente nel dizionario.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; or &lt;paramref name=&quot;valueFactory&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> o <paramref name="valueFactory" /> è <see langword="null" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The dictionary contains too many elements.">Il dizionario contiene già il numero massimo di elementi (<see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
      <summary vsli:raw="Adds a key/value pair to the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; by using the specified function and an argument if the key does not already exist, or returns the existing value if the key exists.">Aggiunge una coppia chiave/valore a <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> usando la funzione specificata e un argomento se la chiave non esiste ancora, oppure, se la chiave esiste già, restituisce il valore esistente.</summary>
      <param name="key" vsli:raw="The key of the element to add.">Chiave dell'elemento da aggiungere.</param>
      <param name="valueFactory" vsli:raw="The function used to generate a value for the key.">Funzione usata per generare un valore per la chiave.</param>
      <param name="factoryArgument" vsli:raw="An argument value to pass into &lt;paramref name=&quot;valueFactory&quot; /&gt;.">Valore dell'argomento da passare in <paramref name="valueFactory" />.</param>
      <typeparam name="TArg" vsli:raw="The type of an argument to pass into &lt;paramref name=&quot;valueFactory&quot; /&gt;.">Tipo di un argomento da passare in <paramref name="valueFactory" />.</typeparam>
      <returns vsli:raw="The value for the key. This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.">Valore della chiave. Si tratta del valore esistente se la chiave esiste già nel dizionario o del nuovo valore se la chiave non è presente nel dizionario.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference (Nothing in Visual Basic).">
        <paramref name="key" /> è un riferimento <see langword="null" /> (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The dictionary contains too many elements.">Il dizionario contiene troppi elementi.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; is empty.">Ottiene un valore che indica se <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> è vuoto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> è vuoto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">Ottiene o imposta il valore associato alla chiave specificata.</summary>
      <param name="key" vsli:raw="The key of the value to get or set.">Chiave del valore da ottenere o impostare.</param>
      <returns vsli:raw="The value of the key/value pair at the specified index.">Valore del coppia chiave/valore in corrispondenza dell'indice specificato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is  &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException" vsli:raw="The property is retrieved and &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection.">La proprietà viene recuperata e <paramref name="key" /> non esiste nella raccolta.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys">
      <summary vsli:raw="Gets a collection containing the keys in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Ottiene una raccolta contenente le chiavi della classe <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns vsli:raw="A collection of keys in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Raccolta di chiavi in <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary vsli:raw="Adds an item to the collection.">Aggiunge un elemento alla raccolta.</summary>
      <param name="keyValuePair" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; to add to the dictionary.">Oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da aggiungere al dizionario.</param>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary vsli:raw="Gets whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; contains an element with the specified key.">Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un elemento con la chiave specificata.</summary>
      <param name="keyValuePair" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Chiave da individuare in <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an array, starting at the specified array index.">Copia gli elementi dell'interfaccia <see cref="T:System.Collections.ICollection" /> in una matrice, iniziando dall'indice di matrice specificato.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The array must have zero-based indexing.">Matrice unidimensionale che è la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.ICollection" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.ICollection" /> è di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary vsli:raw="Removes the specified key/value pair from the collection.">Rimuove la coppia chiave/valore specificata dalla raccolta.</summary>
      <param name="keyValuePair" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; to remove.">Oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da rimuovere.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns false if &lt;paramref name=&quot;key&quot; /&gt; was not found in the original &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">
        <see langword="true" /> se l'elemento viene rimosso correttamente; in caso contrario, <see langword="false" />. Questo metodo restituisce false anche se l'oggetto <paramref name="key" /> non è stato trovato nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> originale.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Add(`0,`1)">
      <summary vsli:raw="Adds the specified key and value to the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Aggiunge a <see cref="T:System.Collections.Generic.IDictionary`2" /> la chiave e il valore specificati.</summary>
      <param name="key" vsli:raw="The object to use as the key of the element to add.">Oggetto da usare come chiave dell'elemento da aggiungere.</param>
      <param name="value" vsli:raw="The object to use as the value of the element to add.">Oggetto da usare come valore dell'elemento da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the same key already exists in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">In <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> è già presente un elemento con la stessa chiave.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The dictionary contains too many elements.">Il dizionario contiene già il numero massimo di elementi (<see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Remove(`0)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Chiave dell'elemento da rimuovere.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; was not found in the original &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">
        <see langword="true" /> se l'elemento viene rimosso correttamente; in caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se <paramref name="key" /> non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> originale.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
      <summary vsli:raw="Gets a collection containing the keys in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Ottiene una raccolta contenente le chiavi della classe <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns vsli:raw="A collection containing the keys in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Raccolta contenente le chiavi presenti in <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
      <summary vsli:raw="Gets a collection that contains the values in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Ottiene una raccolta contenente i valori presenti in <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns vsli:raw="A collection that contains the values in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Raccolta contenente i valori presenti in <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an array, starting at the specified array index.">Copia gli elementi dell'interfaccia <see cref="T:System.Collections.ICollection" /> in una matrice, iniziando dall'indice di matrice specificato.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The array must have zero-based indexing.">Matrice unidimensionale che è la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than the length of the &lt;paramref name=&quot;array&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="index" /> è maggiore o uguale alla lunghezza di <paramref name="array" />.
-oppure-
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized with the SyncRoot.">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato con SyncRoot.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. For &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />. Per <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. This property is not supported.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />. Questa proprietà non è supportata.</summary>
      <returns vsli:raw="Always returns null.">Restituisce sempre null.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="This property is not supported.">Questa proprietà non è supportata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds the specified key and value to the dictionary.">Aggiunge la chiave e il valore specificati al dizionario.</summary>
      <param name="key" vsli:raw="The object to use as the key.">Oggetto da usare come chiave.</param>
      <param name="value" vsli:raw="The object to use as the value.">Oggetto da utilizzare come valore.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is of a type that is not assignable to the key type  of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;value&quot; /&gt; is of a type that is not assignable to the type of values in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; A value with the same key already exists in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">
        <paramref name="key" /> è di un tipo non assegnabile al tipo di chiave di <see cref="T:System.Collections.Generic.Dictionary`2" />.
-oppure-
<paramref name="value" /> è di un tipo non assegnabile al tipo di valore in <see cref="T:System.Collections.Generic.Dictionary`2" />.
-oppure-
nell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" /> è già presente un valore con la stessa chiave.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The dictionary contains too many elements.">Il dizionario contiene già il numero massimo di elementi (<see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Gets a value that indicates the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; contains an element with the specified key.">Ottiene un valore che indica se <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento con la chiave specificata.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Chiave da individuare in <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Fornisce un oggetto <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Oggetto <see cref="T:System.Collections.IDictionaryEnumerator" /> per <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; has a fixed size.">Ottiene un valore che indica se le dimensioni dell'oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> sono fisse.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. For &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.IDictionary`2" /> è di dimensioni fisse; in caso contrario, <see langword="false" />. Per <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.Generic.IDictionary`2" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. For &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.IDictionary`2" /> è di sola lettura; in caso contrario, <see langword="false" />. Per <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">Ottiene o imposta il valore associato alla chiave specificata.</summary>
      <param name="key" vsli:raw="The key of the value to get or set.">Chiave del valore da ottenere o impostare.</param>
      <returns vsli:raw="The value associated with the specified key, or  &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; is not in the dictionary or &lt;paramref name=&quot;key&quot; /&gt; is of a type that is not assignable to the key type of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Il valore associato alla chiave specificata, o <see langword="null" /> se <paramref name="key" /> non è presente nel dizionario o se il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave di <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is  &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A value is being assigned, and &lt;paramref name=&quot;key&quot; /&gt; is of a type that is not assignable to the key type or the value type of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Viene assegnato un valore e il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave o al tipo di valore dell'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /></exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys of the  &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Ottiene un oggetto <see cref="T:System.Collections.ICollection" /> che contiene le chiavi di <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns vsli:raw="An interface that contains the keys of the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Un'interfaccia che contiene le chiavi di <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Ottiene un oggetto <see cref="T:System.Collections.ICollection" /> contenente i valori di <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An interface that contains the values in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Interfaccia che contiene i valori in <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Enumeratore per l'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray">
      <summary vsli:raw="Copies the key and value pairs stored in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; to a new array.">Copia le coppie chiave/valore archiviate in <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> in una nuova matrice.</summary>
      <returns vsli:raw="A new array containing a snapshot of key and value pairs copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Nuova matrice che contiene uno snapshot delle coppie chiave/valore copiate da <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
      <summary vsli:raw="Attempts to add the specified key and value to the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Tenta di aggiungere la chiave e il valore specificati a <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</summary>
      <param name="key" vsli:raw="The key of the element to add.">Chiave dell'elemento da aggiungere.</param>
      <param name="value" vsli:raw="The value of the element to add. The value can be  &lt;see langword=&quot;null&quot; /&gt; for reference types.">Valore dell'elemento da aggiungere. Il valore può essere <see langword="null" /> per i tipi riferimento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the key/value pair was added to the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; successfully; &lt;see langword=&quot;false&quot; /&gt; if the key already exists.">
        <see langword="true" /> se la coppia chiave/valore è stata aggiunta correttamente all'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />; <see langword="false" /> se la chiave esiste già.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is  &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The dictionary contains too many elements.">Il dizionario contiene già il numero massimo di elementi (<see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
      <summary vsli:raw="Attempts to get the value associated with the specified key from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Tenta di ottenere il valore associato alla chiave specificata da <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</summary>
      <param name="key" vsli:raw="The key of the value to get.">Chiave del valore da ottenere.</param>
      <param name="value" vsli:raw="When this method returns, contains the object from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt; that has the specified key, or the default value of the type if the operation failed.">Quando questo metodo termina, contiene l'oggetto da <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> con la chiave specificata o il valore predefinito del tipo, se l'operazione ha esito negativo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the key was found in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la chiave viene trovata in <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is  &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
      <summary vsli:raw="Attempts to remove and return the value that has the specified key from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;.">Tenta di rimuovere e restituire il valore con la chiave specificata da <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove and return.">Chiave dell'elemento da rimuovere e restituire.</param>
      <param name="value" vsli:raw="When this method returns, contains the object removed from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentDictionary`2&quot; /&gt;, or the default value of  the &lt;see langword=&quot;TValue&quot; /&gt; type if &lt;paramref name=&quot;key&quot; /&gt; does not exist.">Quando questo metodo termina, contiene l'oggetto rimosso da <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> o il valore predefinito del tipo <see langword="TValue" /> se <paramref name="key" /> non esiste.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object was removed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto è stato rimosso correttamente; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is  &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
      <summary vsli:raw="Updates the value associated with &lt;paramref name=&quot;key&quot; /&gt; to &lt;paramref name=&quot;newValue&quot; /&gt; if the existing value with &lt;paramref name=&quot;key&quot; /&gt; is equal to &lt;paramref name=&quot;comparisonValue&quot; /&gt;.">Aggiorna il valore associato a <paramref name="key" /> impostandolo su <paramref name="newValue" /> se il valore esistente con <paramref name="key" /> è uguale a <paramref name="comparisonValue" />.</summary>
      <param name="key" vsli:raw="The key of the value that is compared with &lt;paramref name=&quot;comparisonValue&quot; /&gt; and possibly replaced.">Chiave del valore confrontato con <paramref name="comparisonValue" /> ed eventualmente sostituito.</param>
      <param name="newValue" vsli:raw="The value that replaces the value of the element that has the specified &lt;paramref name=&quot;key&quot; /&gt; if the comparison results in equality.">Valore che sostituisce il valore dell'elemento con <paramref name="key" /> specificato se il confronto rileva l'uguaglianza.</param>
      <param name="comparisonValue" vsli:raw="The value that is compared with the value of the element that has the specified &lt;paramref name=&quot;key&quot; /&gt;.">Valore confrontato con il valore dell'elemento con il valore <paramref name="key" /> specificato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value with &lt;paramref name=&quot;key&quot; /&gt; was equal to &lt;paramref name=&quot;comparisonValue&quot; /&gt; and was replaced with &lt;paramref name=&quot;newValue&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore con <paramref name="key" /> è uguale a <paramref name="comparisonValue" /> ed è stato sostituito con <paramref name="newValue" />; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.Values">
      <summary vsli:raw="Gets a collection that contains the values in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Ottiene una raccolta contenente i valori presenti in <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns vsli:raw="A collection that contains the values in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Raccolta contenente i valori presenti in <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="T:System.Collections.Concurrent.ConcurrentQueue`1">
      <summary vsli:raw="Represents a thread-safe first in-first out (FIFO) collection.">Rappresenta una raccolta FIFO (First In First Out) thread-safe.</summary>
      <typeparam name="T" vsli:raw="The type of the elements contained in the queue.">Tipo di elementi contenuti nella coda.</typeparam>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt; class that contains elements copied from the specified collection.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> che contiene gli elementi copiati dalla raccolta specificata.</summary>
      <param name="collection" vsli:raw="The collection whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt;.">Raccolta i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collection&quot; /&gt; argument is null.">L'argomento <paramref name="collection" /> è Null.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt;.">Rimuove tutti gli oggetti da <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt; elements to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">Copia gli elementi di <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> in un oggetto <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="array" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than the length of the &lt;paramref name=&quot;array&quot; /&gt; -or- The number of elements in the source &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="index" /> è uguale o maggiore della lunghezza di <paramref name="array" /> o il numero di elementi nel <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> di origine è maggiore dello spazio disponibile da <paramref name="index" /> alla fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentQueue`1.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt;.">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt;.">Il numero di elementi contenuti in <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.Enqueue(`0)">
      <summary vsli:raw="Adds an object to the end of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt;.">Aggiunge un oggetto alla fine di <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</summary>
      <param name="item" vsli:raw="The object to add to the end of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt;. The value can be a null reference (Nothing in Visual Basic) for reference types.">Oggetto da aggiungere alla fine di <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />. Il valore può essere un riferimento Null (Nothing in Visual Basic) per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</summary>
      <returns vsli:raw="An enumerator for the contents of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt;.">Enumeratore per il contenuto dell'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentQueue`1.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt; is empty.">Ottiene un valore che indica se <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> è vuoto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt; is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> è vuoto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)">
      <summary vsli:raw="Attempts to add an object to the &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt;.">Tenta di aggiungere un oggetto all'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt;. The value can be a null reference (Nothing in Visual Basic) for reference types.">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />. Il valore può essere un riferimento Null (Nothing in Visual Basic) per i tipi di riferimento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object was added successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto viene aggiunto correttamente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake(`0@)">
      <summary vsli:raw="Attempts to remove and return an object from the &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt;.">Tenta di rimuovere e restituire un oggetto dall'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</summary>
      <param name="item" vsli:raw="When this method returns, if the operation was successful, &lt;paramref name=&quot;item&quot; /&gt; contains the object removed. If no object was available to be removed, the value is unspecified.">Quando questo metodo termina, se l'operazione è stata completata correttamente, <paramref name="item" /> contiene l'oggetto rimosso. Se non sono presenti oggetti disponibili per la rimozione, il valore non è specificato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an element was removed and returned successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se un elemento è stato rimosso e restituito correttamente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentBag`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="array" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional. -or- &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing. -or- &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than the length of the &lt;paramref name=&quot;array&quot; /&gt; -or- The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;. -or- The type of the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale. oppure <paramref name="array" /> non dispone di indicizzazione a base zero. o <paramref name="index" /> è uguale o maggiore della lunghezza di <paramref name="array" /> o il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile da <paramref name="index" /> alla fine dell'oggetto <paramref name="array" /> di destinazione. oppure non è possibile eseguire automaticamente il cast del tipo dell'insieme <see cref="T:System.Collections.ICollection" /> di origine nel tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized with the SyncRoot.">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato con SyncRoot.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt; to indicate access is not synchronized.">Restituisce sempre <see langword="false" /> per indicare che l'accesso non è sincronizzato.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. This property is not supported.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />. Questa proprietà non è supportata.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce null (Nothing in Visual Basic).</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The SyncRoot property is not supported.">La proprietà SyncRoot non è supportata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.ToArray">
      <summary vsli:raw="Copies the elements stored in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt; to a new array.">Copia gli elementi archiviati in <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> in una nuova matrice.</summary>
      <returns vsli:raw="A new array containing a snapshot of elements copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt;.">Nuova matrice contenente uno snapshot degli elementi copiati da <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.TryDequeue(`0@)">
      <summary vsli:raw="Tries to remove and return the object at the beginning of the concurrent queue.">Tenta di rimuovere e restituire l'oggetto all'inizio della coda simultanea.</summary>
      <param name="result" vsli:raw="When this method returns, if the operation was successful, &lt;paramref name=&quot;result&quot; /&gt; contains the object removed. If no object was available to be removed, the value is unspecified.">Quando questo metodo termina, se l'operazione è stata completata correttamente, <paramref name="result" /> contiene l'oggetto rimosso. Se non sono presenti oggetti disponibili per la rimozione, il valore non è specificato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an element was removed and returned from the beginning of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt; successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se un elemento è stato rimosso e restituito correttamente dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.TryPeek(`0@)">
      <summary vsli:raw="Tries to return an object from the beginning of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt; without removing it.">Tenta di restituire un oggetto dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> senza rimuoverlo.</summary>
      <param name="result" vsli:raw="When this method returns, &lt;paramref name=&quot;result&quot; /&gt; contains an object from the beginning of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentQueue`1&quot; /&gt; or an unspecified value if the operation failed.">Quando questo metodo termina, <paramref name="result" /> contiene un oggetto dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> o un valore non specificato se l'operazione ha esito negativo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an object was returned successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se un oggetto è stato restituito correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Collections.Concurrent.ConcurrentStack`1">
      <summary vsli:raw="Represents a thread-safe last in-first out (LIFO) collection.">Rappresenta un insieme LIFO (Last In, First Out) thread-safe.</summary>
      <typeparam name="T" vsli:raw="The type of the elements contained in the stack.">Tipo di elementi contenuti nello stack.</typeparam>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; class that contains elements copied from the specified collection.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> che contiene gli elementi copiati dalla raccolta specificata.</summary>
      <param name="collection" vsli:raw="The collection whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Raccolta i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collection&quot; /&gt; argument is null.">L'argomento <paramref name="collection" /> è Null.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Rimuove tutti gli oggetti da <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; elements to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">Copia gli elementi di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> in un oggetto <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="array" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than the length of the &lt;paramref name=&quot;array&quot; /&gt; -or- The number of elements in the source &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="index" /> è uguale o maggiore della lunghezza di <paramref name="array" /> o il numero di elementi nel <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> di origine è maggiore dello spazio disponibile da <paramref name="index" /> alla fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentStack`1.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Il numero di elementi contenuti in <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Enumeratore per l'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentStack`1.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; is empty.">Ottiene un valore che indica se <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> è vuoto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> è vuoto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.Push(`0)">
      <summary vsli:raw="Inserts an object at the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Inserisce un oggetto all'inizio della classe <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</summary>
      <param name="item" vsli:raw="The object to push onto the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;. The value can be a null reference (Nothing in Visual Basic) for reference types.">Oggetto di cui effettuare il push in <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />. Il valore può essere un riferimento Null (Nothing in Visual Basic) per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[])">
      <summary vsli:raw="Inserts multiple objects at the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; atomically.">Inserisce più oggetti all'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> in modo atomico.</summary>
      <param name="items" vsli:raw="The objects to push onto the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Oggetti da inserire nell'oggetto <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;items&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="items" /> è un riferimento null (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[],System.Int32,System.Int32)">
      <summary vsli:raw="Inserts multiple objects at the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; atomically.">Inserisce più oggetti all'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> in modo atomico.</summary>
      <param name="items" vsli:raw="The objects to push onto the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Oggetti di cui effettuare il push in <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</param>
      <param name="startIndex" vsli:raw="The zero-based offset in &lt;paramref name=&quot;items&quot; /&gt; at which to begin inserting elements onto the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Offset in base zero in <paramref name="items" /> in corrispondenza del quale iniziare l'inserimento di elementi all'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</param>
      <param name="count" vsli:raw="The number of elements to be inserted onto the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Numero di elementi da inserire all'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;items&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="items" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is negative. Or &lt;paramref name=&quot;startIndex&quot; /&gt; is greater than or equal to the length of &lt;paramref name=&quot;items&quot; /&gt;.">
        <paramref name="startIndex" /> o <paramref name="count" /> è negativo. Oppure <paramref name="startIndex" /> è maggiore o uguale alla lunghezza di <paramref name="items" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; + &lt;paramref name=&quot;count&quot; /&gt; is greater than the length of &lt;paramref name=&quot;items&quot; /&gt;.">
        <paramref name="startIndex" /> + <paramref name="count" /> è maggiore della lunghezza di <paramref name="items" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)">
      <summary vsli:raw="Attempts to add an object to the &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt;.">Tenta di aggiungere un oggetto all'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt;. The value can be a null reference (Nothing in Visual Basic) for reference types.">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />. Il valore può essere un riferimento Null (Nothing in Visual Basic) per i tipi di riferimento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object was added successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto viene aggiunto correttamente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake(`0@)">
      <summary vsli:raw="Attempts to remove and return an object from the &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt;.">Tenta di rimuovere e restituire un oggetto dall'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</summary>
      <param name="item" vsli:raw="When this method returns, if the operation was successful, &lt;paramref name=&quot;item&quot; /&gt; contains the object removed. If no object was available to be removed, the value is unspecified.">Quando questo metodo termina, se l'operazione è stata completata correttamente, <paramref name="item" /> contiene l'oggetto rimosso. Se non sono presenti oggetti disponibili per la rimozione, il valore non è specificato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an element was removed and returned successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se un elemento è stato rimosso e restituito correttamente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="array" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional. -or- &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing. -or- &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than the length of the &lt;paramref name=&quot;array&quot; /&gt; -or- The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;. -or- The type of the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale. oppure <paramref name="array" /> non dispone di indicizzazione a base zero. o <paramref name="index" /> è uguale o maggiore della lunghezza di <paramref name="array" /> o il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile da <paramref name="index" /> alla fine dell'oggetto <paramref name="array" /> di destinazione. oppure non è possibile eseguire automaticamente il cast del tipo dell'insieme <see cref="T:System.Collections.ICollection" /> di origine nel tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized with the SyncRoot.">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato con SyncRoot.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt; to indicate access is not synchronized.">Restituisce sempre <see langword="false" /> per indicare che l'accesso non è sincronizzato.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. This property is not supported.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />. Questa proprietà non è supportata.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce null (Nothing in Visual Basic).</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The SyncRoot property is not supported">La proprietà SyncRoot non è supportata</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.ToArray">
      <summary vsli:raw="Copies the items stored in the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; to a new array.">Copia gli elementi archiviati in <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> in una nuova matrice.</summary>
      <returns vsli:raw="A new array containing a snapshot of elements copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Nuova matrice contenente uno snapshot degli elementi copiati da <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.TryPeek(`0@)">
      <summary vsli:raw="Attempts to return an object from the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; without removing it.">Tenta di restituire un oggetto dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> senza rimuoverlo.</summary>
      <param name="result" vsli:raw="When this method returns, &lt;paramref name=&quot;result&quot; /&gt; contains an object from the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; or an unspecified value if the operation failed.">Quando questo metodo termina, <paramref name="result" /> contiene un oggetto dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> o un valore non specificato se l'operazione ha esito negativo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if and object was returned successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se un oggetto è stato restituito correttamente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.TryPop(`0@)">
      <summary vsli:raw="Attempts to pop and return the object at the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Tenta di estrarre e restituire l'oggetto all'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</summary>
      <param name="result" vsli:raw="When this method returns, if the operation was successful, &lt;paramref name=&quot;result&quot; /&gt; contains the object removed. If no object was available to be removed, the value is unspecified.">Quando questo metodo termina, se l'operazione è stata completata correttamente, <paramref name="result" /> contiene l'oggetto rimosso. Se non sono presenti oggetti disponibili per la rimozione, il valore non è specificato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an element was removed and returned from the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se un elemento è stato rimosso e restituito correttamente dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[])">
      <summary vsli:raw="Attempts to pop and return multiple objects from the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; atomically.">Tenta di estrarre e restituire più oggetti dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> in modo atomico.</summary>
      <param name="items" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; to which objects popped from the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; will be added.">Oggetto <see cref="T:System.Array" /> a cui verranno aggiunti gli oggetti estratti dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</param>
      <returns vsli:raw="The number of objects successfully popped from the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; and inserted in &lt;paramref name=&quot;items&quot; /&gt;.">Numero di oggetti estratti correttamente dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> e inseriti in <paramref name="items" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;items&quot; /&gt; is a null argument (Nothing in Visual Basic).">
        <paramref name="items" /> è un argomento Null (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[],System.Int32,System.Int32)">
      <summary vsli:raw="Attempts to pop and return multiple objects from the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; atomically.">Tenta di estrarre e restituire più oggetti dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> in modo separato.</summary>
      <param name="items" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; to which objects popped from the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; will be added.">
        <see cref="T:System.Array" /> a cui verranno aggiunti gli oggetti estratti dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</param>
      <param name="startIndex" vsli:raw="The zero-based offset in &lt;paramref name=&quot;items&quot; /&gt; at which to begin inserting elements from the top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt;.">Offset in base zero in <paramref name="items" /> in corrispondenza del quale iniziare l'inserimento di elementi dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</param>
      <param name="count" vsli:raw="The number of elements to be popped from top of the &lt;see cref=&quot;T:System.Collections.Concurrent.ConcurrentStack`1&quot; /&gt; and inserted into &lt;paramref name=&quot;items&quot; /&gt;.">Numero di elementi da estrarre dall'inizio di <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> e inserire in <paramref name="items" />.</param>
      <returns vsli:raw="The number of objects successfully popped from the top of the stack and inserted in &lt;paramref name=&quot;items&quot; /&gt;.">Numero di oggetti estratti correttamente dall'inizio dello stack e inseriti in <paramref name="items" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;items&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="items" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is negative. Or &lt;paramref name=&quot;startIndex&quot; /&gt; is greater than or equal to the length of &lt;paramref name=&quot;items&quot; /&gt;.">
        <paramref name="startIndex" /> o <paramref name="count" /> è negativo. Oppure <paramref name="startIndex" /> è maggiore o uguale alla lunghezza di <paramref name="items" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; + &lt;paramref name=&quot;count&quot; /&gt; is greater than the length of &lt;paramref name=&quot;items&quot; /&gt;.">
        <paramref name="startIndex" /> + <paramref name="count" /> è maggiore della lunghezza di <paramref name="items" />.</exception>
    </member>
    <member name="T:System.Collections.Concurrent.EnumerablePartitionerOptions">
      <summary vsli:raw="Specifies options to control the buffering behavior of a partitioner.">Specifica le opzioni per controllare il comportamento di buffer di un Partitioner.</summary>
    </member>
    <member name="F:System.Collections.Concurrent.EnumerablePartitionerOptions.NoBuffering">
      <summary vsli:raw="Create a partitioner that takes items from the source enumerable one at a time and does not use intermediate storage that can be accessed more efficiently by multiple threads. This option provides support for low latency (items will be processed as soon as they are available from the source) and provides partial support for dependencies between items (a thread cannot deadlock waiting for an item that the thread itself is responsible for processing).">Creare un Partitioner che accetta un elemento di un'origine enumerabile alla volta e non utilizza l'archiviazione intermedia a cui possono accedere in modo più efficiente più thread. Questa opzione fornisce supporto per la bassa latenza (gli elementi vengono elaborati non appena sono disponibili nell'origine) e fornisce supporto parziale per le dipendenze tra elementi (un thread non può determinare un deadlock in attesa di un elemento che il thread stesso deve elaborare).</summary>
    </member>
    <member name="F:System.Collections.Concurrent.EnumerablePartitionerOptions.None">
      <summary vsli:raw="Use the default behavior, which is to use buffering to achieve optimal performance.">Utilizza il funzionamento predefinito, cioè il buffer per ottenere prestazioni ottimali.</summary>
    </member>
    <member name="T:System.Collections.Concurrent.IProducerConsumerCollection`1">
      <summary vsli:raw="Defines methods to manipulate thread-safe collections intended for producer/consumer usage. This interface provides a unified representation for producer/consumer collections so that higher level abstractions such as &lt;see cref=&quot;T:System.Collections.Concurrent.BlockingCollection`1&quot; /&gt; can use the collection as the underlying storage mechanism.">Definisce i metodi per modificare gli insiemi thread-safe destinati all'utilizzo da parte di producer/consumer. Questa interfaccia fornisce una rappresentazione unificata per gli insiemi producer-consumer in modo che le astrazioni di livello superiore, quale <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> possano utilizzare l'insieme come meccanismo di archiviazione sottostante.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of elements in the collection.">Specifica il tipo di elementi nell'insieme.</typeparam>
    </member>
    <member name="M:System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a specified index.">Copia gli elementi dell'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> in un oggetto <see cref="T:System.Array" />, a partire da un indice specificato.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt;.  &#xA;  &#xA; The array must have zero-based indexing.">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.
La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="array" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than the length of the &lt;paramref name=&quot;array&quot; /&gt; -or- The number of elements in the collection is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="index" /> è uguale o maggiore della lunghezza di <paramref name="array" /> o il numero di elementi nell'insieme è maggiore dello spazio disponibile da <paramref name="index" /> alla fine dell'oggetto di destinazione <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray">
      <summary vsli:raw="Copies the elements contained in the &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt; to a new array.">Copia gli elementi contenuti nell'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> in una nuova matrice.</summary>
      <returns vsli:raw="A new array containing the elements copied from the &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt;.">Nuova matrice contenente gli elementi copiati da <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)">
      <summary vsli:raw="Attempts to add an object to the &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt;.">Tenta di aggiungere un oggetto all'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt;.">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object was added successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto viene aggiunto correttamente. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;item&quot; /&gt; was invalid for this collection.">
        <paramref name="item" /> non è valido per questo insieme.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)">
      <summary vsli:raw="Attempts to remove and return an object from the &lt;see cref=&quot;T:System.Collections.Concurrent.IProducerConsumerCollection`1&quot; /&gt;.">Tenta di rimuovere e restituire un oggetto dall'oggetto <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</summary>
      <param name="item" vsli:raw="When this method returns, if the object was removed and returned successfully, &lt;paramref name=&quot;item&quot; /&gt; contains the removed object. If no object was available to be removed, the value is unspecified.">Quando questo metodo termina, se l'oggetto è stato rimosso e restituito correttamente, <paramref name="item" /> contiene l'oggetto rimosso. Se non sono presenti oggetti disponibili per la rimozione, il valore non è specificato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an object was removed and returned successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se un oggetto è stato rimosso e restituito correttamente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Collections.Concurrent.OrderablePartitioner`1">
      <summary vsli:raw="Represents a particular manner of splitting an orderable data source into multiple partitions.">Rappresenta un determinato modo di suddividere un'origine dati ordinabile in più partizioni.</summary>
      <typeparam name="TSource" vsli:raw="Type of the elements in the collection.">Tipo degli elementi contenuti nell'insieme.</typeparam>
    </member>
    <member name="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Called from constructors in derived classes to initialize the &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; class with the specified constraints on the index keys.">Chiamato dai costruttori nelle classi derivate per inizializzare la classe <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> con i vincoli specificati sulle chiavi di indice.</summary>
      <param name="keysOrderedInEachPartition" vsli:raw="Indicates whether the elements in each partition are yielded in the order of increasing keys.">Indica se gli elementi in ogni partizione sono prodotti nell'ordine di chiavi crescenti.</param>
      <param name="keysOrderedAcrossPartitions" vsli:raw="Indicates whether elements in an earlier partition always come before elements in a later partition. If true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.">Indica se gli elementi di una partizione precedente vengono sempre prima degli elementi di una partizione più recente. Se è true, ogni elemento nella partizione 0 ha una chiave di ordine inferiore rispetto a qualsiasi elemento della partizione 1, ogni elemento nella partizione 1 ha una chiave di ordine inferiore rispetto a qualsiasi elemento della partizione 2 e così via.</param>
      <param name="keysNormalized" vsli:raw="Indicates whether keys are normalized. If true, all order keys are distinct integers in the range [0 .. numberOfElements-1]. If false, order keys must still be distinct, but only their relative order is considered, not their absolute values.">Indica se le chiavi sono normalizzate. Se true, tutte le chiavi di ordine sono numeri interi distinti nell'intervallo [0 .. numberOfElements-1]. Se è false, le chiavi di ordine devono comunque essere distinte, ma ne viene considerato solo l'ordine relativo, non i valori assoluti.</param>
    </member>
    <member name="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
      <summary vsli:raw="Creates an object that can partition the underlying collection into a variable number of partitions.">Crea un oggetto che può suddividere l'insieme sottostante in un numero variabile di partizioni.</summary>
      <returns vsli:raw="An object that can create partitions over the underlying data source.">Oggetto che può creare partizioni sull'origine dati sottostante.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Dynamic partitioning is not supported by the base class. It must be implemented in derived classes.">Il partizionamento dinamico non è supportato da questa classe di base. Deve essere implementato nelle classi derivate.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
      <summary vsli:raw="Creates an object that can partition the underlying collection into a variable number of partitions.">Crea un oggetto che può suddividere l'insieme sottostante in un numero variabile di partizioni.</summary>
      <returns vsli:raw="An object that can create partitions over the underlying data source.">Oggetto che può creare partizioni sull'origine dati sottostante.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Dynamic partitioning is not supported by this partitioner.">Il partizionamento dinamico non è supportato da questo partitioner.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
      <summary vsli:raw="Partitions the underlying collection into the specified number of orderable partitions.">Suddivide l'insieme sottostante nel numero specificato di partizioni ordinabili.</summary>
      <param name="partitionCount" vsli:raw="The number of partitions to create.">Numero di partizioni da creare.</param>
      <returns vsli:raw="A list containing &lt;paramref name=&quot;partitionCount&quot; /&gt; enumerators.">Elenco che contiene enumeratori <paramref name="partitionCount" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)">
      <summary vsli:raw="Partitions the underlying collection into the given number of ordered partitions.">Suddivide l'insieme sottostante nel numero specificato di partizioni ordinate.</summary>
      <param name="partitionCount" vsli:raw="The number of partitions to create.">Numero di partizioni da creare.</param>
      <returns vsli:raw="A list containing &lt;paramref name=&quot;partitionCount&quot; /&gt; enumerators.">Elenco che contiene enumeratori <paramref name="partitionCount" />.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized">
      <summary vsli:raw="Gets whether order keys are normalized.">Ottiene un valore che indica se le chiavi di ordine sono normalizzate.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the keys are normalized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se le chiavi sono normalizzate; in caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedAcrossPartitions">
      <summary vsli:raw="Gets whether elements in an earlier partition always come before elements in a later partition.">Ottiene un valore che indica se gli elementi di una partizione precedente vengono sempre prima degli elementi di una partizione più recente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the elements in an earlier partition always come before elements in a later partition; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se gli elementi di una partizione precedente precedono sempre gli elementi in una partizione successiva; in caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedInEachPartition">
      <summary vsli:raw="Gets whether elements in each partition are yielded in the order of increasing keys.">Ottiene un valore che indica se gli elementi in ogni partizione sono prodotti nell'ordine di chiavi crescenti.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the elements in each partition are yielded in the order of increasing keys; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se gli elementi in ogni partizione vengono ceduti nell'ordine di chiavi crescenti; in caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="T:System.Collections.Concurrent.Partitioner">
      <summary vsli:raw="Provides common partitioning strategies for arrays, lists, and enumerables.">Fornisce strategie di partizionamento comuni per matrici, elenchi e tipi enumerabili.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32)">
      <summary vsli:raw="Creates a partitioner that chunks the user-specified range.">Crea un partitioner che divide in blocchi l'intervallo specificato dall'utente.</summary>
      <param name="fromInclusive" vsli:raw="The lower, inclusive bound of the range.">Limite inferiore incluso dell'intervallo.</param>
      <param name="toExclusive" vsli:raw="The upper, exclusive bound of the range.">Limite superiore escluso dell'intervallo.</param>
      <returns vsli:raw="A partitioner.">Partitioner.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;toExclusive&quot; /&gt; argument is less than or equal to the &lt;paramref name=&quot;fromInclusive&quot; /&gt; argument.">L'argomento <paramref name="toExclusive" /> è minore di o uguale all'argomento <paramref name="fromInclusive" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Creates a partitioner that chunks the user-specified range.">Crea un partitioner che divide in blocchi l'intervallo specificato dall'utente.</summary>
      <param name="fromInclusive" vsli:raw="The lower, inclusive bound of the range.">Limite inferiore incluso dell'intervallo.</param>
      <param name="toExclusive" vsli:raw="The upper, exclusive bound of the range.">Limite superiore escluso dell'intervallo.</param>
      <param name="rangeSize" vsli:raw="The size of each subrange.">Dimensione di ogni intervallo secondario.</param>
      <returns vsli:raw="A partitioner.">Partitioner.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;toExclusive&quot; /&gt; argument is less than or equal to the &lt;paramref name=&quot;fromInclusive&quot; /&gt; argument.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;rangeSize&quot; /&gt; argument is less than or equal to 0.">L'argomento <paramref name="toExclusive" /> è minore di o uguale all'argomento <paramref name="fromInclusive" />.
In alternativa
L'argomento <paramref name="rangeSize" /> è minore o uguale a 0.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64)">
      <summary vsli:raw="Creates a partitioner that chunks the user-specified range.">Crea un partitioner che divide in blocchi l'intervallo specificato dall'utente.</summary>
      <param name="fromInclusive" vsli:raw="The lower, inclusive bound of the range.">Limite inferiore incluso dell'intervallo.</param>
      <param name="toExclusive" vsli:raw="The upper, exclusive bound of the range.">Limite superiore escluso dell'intervallo.</param>
      <returns vsli:raw="A partitioner.">Partitioner.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;toExclusive&quot; /&gt; argument is less than or equal to the &lt;paramref name=&quot;fromInclusive&quot; /&gt; argument.">L'argomento <paramref name="toExclusive" /> è minore di o uguale all'argomento <paramref name="fromInclusive" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)">
      <summary vsli:raw="Creates a partitioner that chunks the user-specified range.">Crea un partitioner che divide in blocchi l'intervallo specificato dall'utente.</summary>
      <param name="fromInclusive" vsli:raw="The lower, inclusive bound of the range.">Limite inferiore incluso dell'intervallo.</param>
      <param name="toExclusive" vsli:raw="The upper, exclusive bound of the range.">Limite superiore escluso dell'intervallo.</param>
      <param name="rangeSize" vsli:raw="The size of each subrange.">Dimensione di ogni intervallo secondario.</param>
      <returns vsli:raw="A partitioner.">Partitioner.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;toExclusive&quot; /&gt; argument is less than or equal to the &lt;paramref name=&quot;fromInclusive&quot; /&gt; argument.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;rangeSize&quot; /&gt; argument is less than or equal to 0.">L'argomento <paramref name="toExclusive" /> è minore di o uguale all'argomento <paramref name="fromInclusive" />.
-oppure-
L'argomento <paramref name="rangeSize" /> è minore o uguale a 0.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.Partitioner.Create``1(``0[],System.Boolean)">
      <summary vsli:raw="Creates an orderable partitioner from a &lt;see cref=&quot;T:System.Array&quot; /&gt; instance.">Crea un Partitioner ordinabile da un'istanza di <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The array to be partitioned.">Matrice da partizionare.</param>
      <param name="loadBalance" vsli:raw="A Boolean value that indicates whether the created partitioner should dynamically load balance between partitions rather than statically partition.">Valore booleano che indica se il partitioner creato deve bilanciare in modo dinamico il carico tra le partizioni anziché partizionarlo in modo statico.</param>
      <typeparam name="TSource" vsli:raw="Type of the elements in source array.">Tipo degli elementi della matrice di origine.</typeparam>
      <returns vsli:raw="An orderable partitioner based on the input array.">Partitioner ordinabile basato sulla matrice di input.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Creates an orderable partitioner from a &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; instance.">Crea un Partitioner ordinabile da un'istanza di <see cref="T:System.Collections.Generic.IEnumerable`1" />.</summary>
      <param name="source" vsli:raw="The enumerable to be partitioned.">Tipo enumerabile da partizionare.</param>
      <typeparam name="TSource" vsli:raw="Type of the elements in source enumerable.">Tipo degli elementi nel tipo enumerabile di origine.</typeparam>
      <returns vsli:raw="An orderable partitioner based on the input array.">Partitioner ordinabile basato sulla matrice di input.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Concurrent.EnumerablePartitionerOptions)">
      <summary vsli:raw="Creates an orderable partitioner from a &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; instance.">Crea un Partitioner ordinabile da un'istanza di <see cref="T:System.Collections.Generic.IEnumerable`1" />.</summary>
      <param name="source" vsli:raw="The enumerable to be partitioned.">Tipo enumerabile da partizionare.</param>
      <param name="partitionerOptions" vsli:raw="Options to control the buffering behavior of the partitioner.">Opzioni per controllare il comportamento di buffer del Partitioner.</param>
      <typeparam name="TSource" vsli:raw="Type of the elements in source enumerable.">Tipo degli elementi nel tipo enumerabile di origine.</typeparam>
      <returns vsli:raw="An orderable partitioner based on the input array.">Partitioner ordinabile basato sulla matrice di input.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;partitionerOptions&quot; /&gt; argument specifies an invalid value for &lt;see cref=&quot;T:System.Collections.Concurrent.EnumerablePartitionerOptions&quot; /&gt;.">L'argomento <paramref name="partitionerOptions" /> specifica un valore non valido per <see cref="T:System.Collections.Concurrent.EnumerablePartitionerOptions" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IList{``0},System.Boolean)">
      <summary vsli:raw="Creates an orderable partitioner from an &lt;see cref=&quot;T:System.Collections.Generic.IList`1&quot; /&gt; instance.">Crea un Partitioner ordinabile da un'istanza di <see cref="T:System.Collections.Generic.IList`1" />.</summary>
      <param name="list" vsli:raw="The list to be partitioned.">Elenco da partizionare.</param>
      <param name="loadBalance" vsli:raw="A Boolean value that indicates whether the created partitioner should dynamically load balance between partitions rather than statically partition.">Valore booleano che indica se il partitioner creato deve bilanciare in modo dinamico il carico tra le partizioni anziché partizionarlo in modo statico.</param>
      <typeparam name="TSource" vsli:raw="Type of the elements in source list.">Tipo degli elementi nell'insieme di origine.</typeparam>
      <returns vsli:raw="An orderable partitioner based on the input list.">Partitioner ordinabile basato sull'elenco di input.</returns>
    </member>
    <member name="T:System.Collections.Concurrent.Partitioner`1">
      <summary vsli:raw="Represents a particular manner of splitting a data source into multiple partitions.">Rappresenta un determinato modo di suddividere un'origine dati in più partizioni.</summary>
      <typeparam name="TSource" vsli:raw="Type of the elements in the collection.">Tipo degli elementi contenuti nell'insieme.</typeparam>
    </member>
    <member name="M:System.Collections.Concurrent.Partitioner`1.#ctor">
      <summary vsli:raw="Creates a new partitioner instance.">Crea una nuova istanza del Partitioner.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions">
      <summary vsli:raw="Creates an object that can partition the underlying collection into a variable number of partitions.">Crea un oggetto che può suddividere l'insieme sottostante in un numero variabile di partizioni.</summary>
      <returns vsli:raw="An object that can create partitions over the underlying data source.">Oggetto che può creare partizioni sull'origine dati sottostante.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Dynamic partitioning is not supported by the base class. You must implement it in a derived class.">Il partizionamento dinamico non è supportato da questa classe di base. Occorre implementare questo metodo in una classe derivata.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)">
      <summary vsli:raw="Partitions the underlying collection into the given number of partitions.">Suddivide l'insieme sottostante nel numero specificato di partizioni.</summary>
      <param name="partitionCount" vsli:raw="The number of partitions to create.">Numero di partizioni da creare.</param>
      <returns vsli:raw="A list containing &lt;paramref name=&quot;partitionCount&quot; /&gt; enumerators.">Elenco che contiene enumeratori <paramref name="partitionCount" />.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions">
      <summary vsli:raw="Gets whether additional partitions can be created dynamically.">Ottiene un valore che indica se è possibile creare partizioni aggiuntive in modo dinamico.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner`1&quot; /&gt; can create partitions dynamically as they are requested; &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner`1&quot; /&gt; can only allocate partitions statically.">
        <see langword="true" />
        <see cref="T:System.Collections.Concurrent.Partitioner`1" /> se può creare partizioni in modo dinamico quando vengono richieste; <see langword="false" /> se può solo allocare partizioni <see cref="T:System.Collections.Concurrent.Partitioner`1" />  in modo statico.</returns>
    </member>
  </members>
</doc>