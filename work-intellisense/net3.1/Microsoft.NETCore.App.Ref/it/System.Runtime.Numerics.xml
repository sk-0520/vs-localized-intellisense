<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Numerics</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.BigInteger">
      <summary vsli:raw="Represents an arbitrarily large signed integer.">Rappresenta un intero con segno arbitrariamente grande.</summary>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using the values in a byte array.">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando i valori di una matrice di byte.</summary>
      <param name="value" vsli:raw="An array of byte values in little-endian order.">Matrice di valori byte in ordine little-endian.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un valore <see cref="T:System.Decimal" />.</summary>
      <param name="value" vsli:raw="A decimal number.">Numero decimale.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a double-precision floating-point value.">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un valore a virgola mobile con precisione doppia.</summary>
      <param name="value" vsli:raw="A double-precision floating-point value.">Valore a virgola mobile e precisione doppia.</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Double.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;.">
        <paramref name="value" /> è <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a 32-bit signed integer value.">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un Signed Integer a 32 bit.</summary>
      <param name="value" vsli:raw="A 32-bit signed integer.">Intero con segno a 32 bit.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a 64-bit signed integer value.">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> usando un valore intero con segno a 64 bit.</summary>
      <param name="value" vsli:raw="A 64-bit signed integer.">Intero con segno a 64 bit.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using the values in a read-only span of bytes, and optionally indicating the signing encoding and the endianness byte order.">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> usando i valori in un intervallo di byte di sola lettura e indicando facoltativamente la codifica con firma e l'ordine dei byte.</summary>
      <param name="value" vsli:raw="A read-only span of bytes representing the big integer.">Intervallo di byte di sola lettura che rappresentano i dati big integer.</param>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate &lt;paramref name=&quot;value&quot; /&gt; uses unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt; (the default value).">
        <see langword="true" /> per indicare che <paramref name="value" /> usa la codifica senza segno; in caso contrario, <see langword="false" /> (valore predefinito).</param>
      <param name="isBigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate &lt;paramref name=&quot;value&quot; /&gt; is in big-endian byte order; otherwise, &lt;see langword=&quot;false&quot; /&gt;  (the default value).">
        <see langword="true" /> per indicare che <paramref name="value" /> è nell'ordine dei byte big endian; in caso contrario, <see langword="false" /> (valore predefinito).</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a single-precision floating-point value.">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un valore a virgola mobile con precisione singola.</summary>
      <param name="value" vsli:raw="A single-precision floating-point value.">Valore a virgola mobile e precisione singola.</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Single.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Single.NegativeInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Single.PositiveInfinity&quot; /&gt;.">
        <paramref name="value" /> è <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> o <see cref="F:System.Single.PositiveInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using an unsigned 32-bit integer value.">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un valore Unsigned Integer a 32 bit.</summary>
      <param name="value" vsli:raw="An unsigned 32-bit integer value.">Valore intero senza segno a 32 bit.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure with an unsigned 64-bit integer value.">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> con un valore Unsigned Integer a 64 bit.</summary>
      <param name="value" vsli:raw="An unsigned 64-bit integer.">Intero senza segno a 64 bit.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
      <summary vsli:raw="Gets the absolute value of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object.">Ottiene il valore assoluto di un oggetto <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="A number.">Numero.</param>
      <returns vsli:raw="The absolute value of &lt;paramref name=&quot;value&quot; /&gt;.">Valore assoluto di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Adds two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values and returns the result.">Somma due valori <see cref="T:System.Numerics.BigInteger" /> e restituisce il risultato.</summary>
      <param name="left" vsli:raw="The first value to add.">Primo valore da sommare.</param>
      <param name="right" vsli:raw="The second value to add.">Secondo valore da sommare.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Somma di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.">Confronta due valori <see cref="T:System.Numerics.BigInteger" /> e restituisce un Integer che indica se il primo valore è minore, uguale o maggiore rispetto al secondo valore.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="A signed integer that indicates the relative values of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;left&quot; /&gt; equals &lt;paramref name=&quot;right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Intero con segno che indica i valori relativi di <paramref name="left" /> e <paramref name="right" />, come illustrato nella tabella seguente.
  Value 
  Condizione 
  Minore di zero 
 <paramref name="left" /> è minore di <paramref name="right" />.  
  
  Zero 
 <paramref name="left" /> è uguale a <paramref name="right" />.  
  
  Maggiore di zero 
 <paramref name="left" /> è maggiore di <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
      <summary vsli:raw="Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.">Confronta questa istanza con un intero con segno a 64 bit e restituisce un intero che indica se il valore di questa istanza è minore, uguale o maggiore del valore dell'intero con segno a 64 bit.</summary>
      <param name="other" vsli:raw="The signed 64-bit integer to compare.">Intero con segno a 64 bit da confrontare.</param>
      <returns vsli:raw="A signed integer value that indicates the relationship of this instance to &lt;paramref name=&quot;other&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The current instance is less than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; The current instance equals &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; The current instance is greater than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Signed Integer che indica la relazione dell'istanza con <paramref name="other" />, come illustrato nella tabella seguente.
  Valore restituito 
  Description 
  Minore di zero 
  L'istanza corrente è minore di <paramref name="other" />.  
  
  Zero 
  L'istanza corrente è uguale a <paramref name="other" />.  
  
  Maggiore di zero 
  L'istanza corrente è maggiore di <paramref name="other" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
      <summary vsli:raw="Compares this instance to a second &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.">Confronta questa istanza con un secondo <see cref="T:System.Numerics.BigInteger" /> e restituisce un Integer che indica se il valore di questa istanza è minore, uguale o maggiore rispetto al valore dell'oggetto specificato.</summary>
      <param name="other" vsli:raw="The object to compare.">Oggetto da confrontare.</param>
      <returns vsli:raw="A signed integer value that indicates the relationship of this instance to &lt;paramref name=&quot;other&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The current instance is less than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; The current instance equals &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; The current instance is greater than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Signed Integer che indica la relazione dell'istanza con <paramref name="other" />, come illustrato nella tabella seguente.
  Valore restituito 
  Description 
  Minore di zero 
  L'istanza corrente è minore di <paramref name="other" />.  
  
  Zero 
  L'istanza corrente è uguale a <paramref name="other" />.  
  
  Maggiore di zero 
  L'istanza corrente è maggiore di <paramref name="other" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Object)">
      <summary vsli:raw="Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.">Confronta questa istanza con un oggetto specificato e restituisce un intero che indica se il valore di questa istanza è minore, uguale o maggiore rispetto al valore dell'oggetto specificato.</summary>
      <param name="obj" vsli:raw="The object to compare.">Oggetto da confrontare.</param>
      <returns vsli:raw="A signed integer that indicates the relationship of the current instance to the &lt;paramref name=&quot;obj&quot; /&gt; parameter, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The current instance is less than &lt;paramref name=&quot;obj&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; The current instance equals &lt;paramref name=&quot;obj&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; The current instance is greater than &lt;paramref name=&quot;obj&quot; /&gt;, or the &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Signed Integer che indica la relazione dell'istanza corrente con il parametro <paramref name="obj" />, come illustrato nella tabella seguente.
  Valore restituito 
  Description 
  Minore di zero 
  L'istanza corrente è minore di <paramref name="obj" />.  
  
  Zero 
  L'istanza corrente è uguale a <paramref name="obj" />.  
  
  Maggiore di zero 
  L'istanza corrente è maggiore di <paramref name="obj" />, oppure il parametro <paramref name="obj" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is not a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <paramref name="obj" /> non è un oggetto <see cref="T:System.Numerics.BigInteger" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
      <summary vsli:raw="Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.">Confronta questa istanza con un intero senza segno a 64 bit e restituisce un intero che indica se il valore di questa istanza è minore, uguale o maggiore del valore dell'intero senza segno a 64 bit.</summary>
      <param name="other" vsli:raw="The unsigned 64-bit integer to compare.">Intero senza segno a 64 bit da confrontare.</param>
      <returns vsli:raw="A signed integer that indicates the relative value of this instance and &lt;paramref name=&quot;other&quot; /&gt;, as shown in the following table.&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;Return value&lt;/term&gt;&lt;description&gt;Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;Less than zero&lt;/term&gt;&lt;description&gt;The current instance is less than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;Zero&lt;/term&gt;&lt;description&gt;The current instance equals &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;Greater than zero&lt;/term&gt;&lt;description&gt;The current instance is greater than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Signed Integer che indica il valore relativo dell'istanza e <paramref name="other" />, come illustrato nella tabella seguente.
Valore restituitoDescriptionMinore di zeroL'istanza corrente è minore di <paramref name="other" />.ZeroL'istanza corrente è uguale a <paramref name="other" />.Maggiore di zeroL'istanza corrente è maggiore di <paramref name="other" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Divides one &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by another and returns the result.">Divide un valore <see cref="T:System.Numerics.BigInteger" /> per un altro e restituisce il risultato.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">Valore da dividere.</param>
      <param name="divisor" vsli:raw="The value to divide by.">Valore per cui dividere.</param>
      <returns vsli:raw="The quotient of the division.">Quoziente della divisione.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> è 0 (zero).</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
      <summary vsli:raw="Divides one &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by another, returns the result, and returns the remainder in an output parameter.">Divide un valore <see cref="T:System.Numerics.BigInteger" /> per un altro, restituisce il risultato e restituisce il resto in un parametro di output.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">Valore da dividere.</param>
      <param name="divisor" vsli:raw="The value to divide by.">Valore per cui dividere.</param>
      <param name="remainder" vsli:raw="When this method returns, contains a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value that represents the remainder from the division. This parameter is passed uninitialized.">Quando termina, questo metodo contiene un valore <see cref="T:System.Numerics.BigInteger" /> che rappresenta il resto dalla divisione. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="The quotient of the division.">Quoziente della divisione.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> è 0 (zero).</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.">Restituisce un valore che indica se l'istanza corrente e un intero con segno a 64 bit hanno lo stesso valore.</summary>
      <param name="other" vsli:raw="The signed 64-bit integer value to compare.">Valore intero con segno a 64 bit da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the signed 64-bit integer and the current instance have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il Signed Integer a 64 bit e l'istanza corrente hanno lo stesso valore; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object have the same value.">Restituisce un valore che indica se l'istanza corrente e un oggetto <see cref="T:System.Numerics.BigInteger" /> specificato hanno lo stesso valore.</summary>
      <param name="other" vsli:raw="The object to compare.">Oggetto da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object and &lt;paramref name=&quot;other&quot; /&gt; have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questo oggetto <see cref="T:System.Numerics.BigInteger" /> e <paramref name="other" /> hanno lo stesso valore; <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified object have the same value.">Restituisce un valore che indica se l'istanza corrente e un oggetto specificato hanno lo stesso valore.</summary>
      <param name="obj" vsli:raw="The object to compare.">Oggetto da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj&quot; /&gt; argument is a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object, and its value is equal to the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'argomento di <paramref name="obj" /> è un oggetto <see cref="T:System.Numerics.BigInteger" /> e se il valore è uguale a quello dell'istanza <see cref="T:System.Numerics.BigInteger" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.">Restituisce un valore che indica se l'istanza corrente e un intero senza segno a 64 bit hanno lo stesso valore.</summary>
      <param name="other" vsli:raw="The unsigned 64-bit integer to compare.">Intero senza segno a 64 bit da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and the unsigned 64-bit integer have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'Unsigned Integer a 64 bit e l'istanza corrente hanno lo stesso valore; <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GetByteCount(System.Boolean)">
      <summary vsli:raw="Gets the number of bytes that will be output by &lt;see cref=&quot;M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)&quot; /&gt; and &lt;see cref=&quot;M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)&quot; /&gt;.">Ottiene il numero di byte che saranno restituiti da <see cref="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" /> e <see cref="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />.</summary>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per usare la codifica senza segno; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="The number of bytes.">Numero di byte.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object.">Restituisce il codice hash per l'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Finds the greatest common divisor of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Trova il massimo comune divisore di due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value.">Primo valore.</param>
      <param name="right" vsli:raw="The second value.">Secondo valore.</param>
      <returns vsli:raw="The greatest common divisor of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Massimo comune divisore di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsEven">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is an even number.">Indica se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente è un numero pari.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is an even number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> è un numero pari; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsOne">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.One&quot; /&gt;.">Indica se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente è <see cref="P:System.Numerics.BigInteger.One" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.One&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> è <see cref="P:System.Numerics.BigInteger.One" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsPowerOfTwo">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is a power of two.">Indica se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente è una potenza di due.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is a power of two; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> è una potenza di due; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsZero">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt;.">Indica se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente è <see cref="P:System.Numerics.BigInteger.Zero" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> è <see cref="P:System.Numerics.BigInteger.Zero" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of a specified number.">Restituisce il logaritmo naturale (in base <see langword="e" />) di un numero specificato.</summary>
      <param name="value" vsli:raw="The number whose logarithm is to be found.">Numero di cui è necessario trovare il logaritmo.</param>
      <returns vsli:raw="The natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of &lt;paramref name=&quot;value&quot; /&gt;, as shown in the table in the Remarks section.">Logaritmo naturale (di base <see langword="e" />) di <paramref name="value" />, come mostrato nella tabella della sezione Osservazioni.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The natural log of &lt;paramref name=&quot;value&quot; /&gt; is out of range of the &lt;see cref=&quot;T:System.Double&quot; /&gt; data type.">Il logaritmo naturale di <paramref name="value" /> non è compreso nell'intervallo del tipo di dati <see cref="T:System.Double" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
      <summary vsli:raw="Returns the logarithm of a specified number in a specified base.">Restituisce il logaritmo del numero specificato in una base specificata.</summary>
      <param name="value" vsli:raw="A number whose logarithm is to be found.">Numero di cui trovare il logaritmo.</param>
      <param name="baseValue" vsli:raw="The base of the logarithm.">Base del logaritmo.</param>
      <returns vsli:raw="The base &lt;paramref name=&quot;baseValue&quot; /&gt; logarithm of &lt;paramref name=&quot;value&quot; /&gt;, as shown in the table in the Remarks section.">Logaritmo di base <paramref name="baseValue" /> di <paramref name="value" />, come mostrato nella tabella della sezione Osservazioni.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The log of &lt;paramref name=&quot;value&quot; /&gt; is out of range of the &lt;see cref=&quot;T:System.Double&quot; /&gt; data type.">Il logaritmo di <paramref name="value" /> non è compreso nell'intervallo del tipo di dati <see cref="T:System.Double" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the base 10 logarithm of a specified number.">Restituisce il logaritmo in base 10 del numero specificato.</summary>
      <param name="value" vsli:raw="A number whose logarithm is to be found.">Numero di cui trovare il logaritmo.</param>
      <returns vsli:raw="The base 10 logarithm of &lt;paramref name=&quot;value&quot; /&gt;, as shown in the table in the Remarks section.">Logaritmo in base 10 di <paramref name="value" />, come mostrato nella tabella della sezione Osservazioni.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The base 10 log of &lt;paramref name=&quot;value&quot; /&gt; is out of range of the &lt;see cref=&quot;T:System.Double&quot; /&gt; data type.">Il logaritmo a base 10 di <paramref name="value" /> non è compreso nell'intervallo del tipo di dati <see cref="T:System.Double" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the larger of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Restituisce il maggiore di due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="The &lt;paramref name=&quot;left&quot; /&gt; or &lt;paramref name=&quot;right&quot; /&gt; parameter, whichever is larger.">Parametro <paramref name="left" /> o <paramref name="right" />, qualunque sia il maggiore.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the smaller of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Restituisce il minore di due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="The &lt;paramref name=&quot;left&quot; /&gt; or &lt;paramref name=&quot;right&quot; /&gt; parameter, whichever is smaller.">Parametro <paramref name="left" /> o <paramref name="right" />, qualunque sia il minore.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.MinusOne">
      <summary vsli:raw="Gets a value that represents the number negative one (-1).">Ottiene un valore che rappresenta il numero negativo uno (-1).</summary>
      <returns vsli:raw="An integer whose value is negative one (-1).">Intero il cui valore è il numero negativo uno (-1).</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs modulus division on a number raised to the power of another number.">Esegue la divisione con modulo per un numero elevato alla potenza di un altro numero.</summary>
      <param name="value" vsli:raw="The number to raise to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">Numero da elevare alla potenza di <paramref name="exponent" /></param>
      <param name="exponent" vsli:raw="The exponent to raise &lt;paramref name=&quot;value&quot; /&gt; by.">Esponente per il quale elevare alla potenza <paramref name="value" />.</param>
      <param name="modulus" vsli:raw="The number by which to divide &lt;paramref name=&quot;value&quot; /&gt; raised to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">Numero per il quale eseguire la divisione di <paramref name="value" /> elevato alla potenza di <paramref name="exponent" />.</param>
      <returns vsli:raw="The remainder after dividing &lt;paramref name=&quot;value&quot; /&gt;exponent by &lt;paramref name=&quot;modulus&quot; /&gt;.">Resto risultante dalla divisione di <paramref name="value" />exponent per <paramref name="modulus" />.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;modulus&quot; /&gt; is zero.">
        <paramref name="modulus" /> è zero.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;exponent&quot; /&gt; is negative.">
        <paramref name="exponent" /> è negativo.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the product of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Restituisce il prodotto di due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first number to multiply.">Primo numero da moltiplicare.</param>
      <param name="right" vsli:raw="The second number to multiply.">Secondo numero da moltiplicare.</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">Prodotto dei parametri <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
      <summary vsli:raw="Negates a specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Nega un valore <see cref="T:System.Numerics.BigInteger" /> specificato.</summary>
      <param name="value" vsli:raw="The value to negate.">Valore da negare.</param>
      <returns vsli:raw="The result of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by negative one (-1).">Risultato del parametro <paramref name="value" /> moltiplicato per il valore uno negativo (-1).</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.One">
      <summary vsli:raw="Gets a value that represents the number one (1).">Ottiene un valore che rappresenta il numero uno (1).</summary>
      <returns vsli:raw="An object whose value is one (1).">Oggetto il cui valore è il numero uno (1).</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Adds the values of two specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; objects.">Somma i valori di due oggetti <see cref="T:System.Numerics.BigInteger" /> specificati.</summary>
      <param name="left" vsli:raw="The first value to add.">Primo valore da sommare.</param>
      <param name="right" vsli:raw="The second value to add.">Secondo valore da sommare.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Somma di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Esegue un'operazione <see langword="And" /> bit per bit su due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value.">Primo valore.</param>
      <param name="right" vsli:raw="The second value.">Secondo valore.</param>
      <returns vsli:raw="The result of the bitwise &lt;see langword=&quot;And&quot; /&gt; operation.">Risultato dell'operazione <see langword="And" /> bit per bit.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Esegue un'operazione <see langword="Or" /> bit per bit su due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value.">Primo valore.</param>
      <param name="right" vsli:raw="The second value.">Secondo valore.</param>
      <returns vsli:raw="The result of the bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">Risultato dell'operazione <see langword="Or" /> bit per bit.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
      <summary vsli:raw="Decrements a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by 1.">Decrementa un valore <see cref="T:System.Numerics.BigInteger" /> di 1.</summary>
      <param name="value" vsli:raw="The value to decrement.">Il valore da decrementare.</param>
      <returns vsli:raw="The value of the &lt;paramref name=&quot;value&quot; /&gt; parameter decremented by 1.">Valore del parametro <paramref name="value" /> decrementato di 1.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Divides a specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by another specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by using integer division.">Divide un valore <see cref="T:System.Numerics.BigInteger" /> specificato per un altro valore <see cref="T:System.Numerics.BigInteger" /> specificato tramite una divisione intera.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">Valore da dividere.</param>
      <param name="divisor" vsli:raw="The value to divide by.">Valore per cui dividere.</param>
      <returns vsli:raw="The integral result of the division.">Risultato integrale della divisione.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> è 0 (zero).</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a signed long integer value and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are equal.">Restituisce un valore che indica se un valore Signed Long Integer e un valore <see cref="T:System.Numerics.BigInteger" /> sono uguali.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and a signed long integer value are equal.">Restituisce un valore che indica se un valore Signed Long Integer e un valore <see cref="T:System.Numerics.BigInteger" /> sono uguali.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether the values of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; objects are equal.">Restituisce un valore che indica se i valori di due oggetti <see cref="T:System.Numerics.BigInteger" /> sono uguali.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and an unsigned long integer value are equal.">Restituisce un valore che indica se un valore Unsigned Long Integer e un valore <see cref="T:System.Numerics.BigInteger" /> sono uguali.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether an unsigned long integer value and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are equal.">Restituisce un valore che indica se un valore Unsigned Long Integer e un valore <see cref="T:System.Numerics.BigInteger" /> sono uguali.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs a bitwise exclusive &lt;see langword=&quot;Or&quot; /&gt; (&lt;see langword=&quot;XOr&quot; /&gt;) operation on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Esegue un'operazione <see langword="Or" /> (<see langword="XOr" />) bit per bit esclusiva su due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value.">Primo valore.</param>
      <param name="right" vsli:raw="The second value.">Secondo valore.</param>
      <returns vsli:raw="The result of the bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">Risultato dell'operazione <see langword="Or" /> bit per bit.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Definisce una conversione esplicita di un oggetto <see cref="T:System.Decimal" /> in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Definisce una conversione esplicita di un valore <see cref="T:System.Double" /> in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Double.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;.">
        <paramref name="value" /> è <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NegativeInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned byte value.">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore byte senza segno.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Byte&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Byte" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Byte.MinValue&quot;&gt;Byte.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Byte.MaxValue&quot;&gt;Byte.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> è minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore <see cref="T:System.Decimal" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Decimal" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Decimal.MinValue&quot;&gt;Decimal.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> è minore di <see cref="F:System.Decimal.MinValue" /> o maggiore di <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore <see cref="T:System.Double" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Double" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a 16-bit signed integer value.">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore Signed Integer a 16 bit.</summary>
      <param name="value" vsli:raw="The value to convert to a 16-bit signed integer.">Valore da convertire in un intero con segno a 16 bit.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Int16.MinValue&quot;&gt;Int16.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.Int16.MaxValue&quot;&gt;Int16.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> è minore di <see cref="F:System.Int16.MinValue" /> o è maggiore di <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a 32-bit signed integer value.">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore intero con segno a 32 bit.</summary>
      <param name="value" vsli:raw="The value to convert to a 32-bit signed integer.">Valore da convertire in un intero con segno a 32 bit.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> è minore di <see cref="F:System.Int32.MinValue" /> o è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a 64-bit signed integer value.">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore intero con segno a 64 bit.</summary>
      <param name="value" vsli:raw="The value to convert to a 64-bit signed integer.">Valore da convertire in un intero con segno a 64 bit.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> è minore di <see cref="F:System.Int64.MinValue" /> o è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a signed 8-bit value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore a 8 bit con segno.
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="T:System.Int16" />.</summary>
      <param name="value" vsli:raw="The value to convert to a signed 8-bit value.">Valore da convertire in un valore con segno a 8 bit.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.SByte.MinValue&quot;&gt;SByte.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.SByte.MaxValue&quot;&gt;SByte.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> è minore di <see cref="F:System.SByte.MinValue" /> o è maggiore di <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a single-precision floating-point value.">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore in virgola mobile a precisione singola.</summary>
      <param name="value" vsli:raw="The value to convert to a single-precision floating-point value.">Valore da convertire in un valore a virgola mobile e precisione singola.</param>
      <returns vsli:raw="An object that contains the closest possible representation of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto che contiene la rappresentazione più vicina possibile del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned 16-bit integer value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore Unsigned Integer a 16 bit.
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="T:System.Int32" />.</summary>
      <param name="value" vsli:raw="The value to convert to an unsigned 16-bit integer.">Valore da convertire in un intero senza segno a 16 bit.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.UInt16.MinValue&quot;&gt;UInt16.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> è minore di <see cref="F:System.UInt16.MinValue" /> o è maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned 32-bit integer value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore intero senza segno a 32 bit.
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="T:System.Int64" />.</summary>
      <param name="value" vsli:raw="The value to convert to an unsigned 32-bit integer.">Valore da convertire in un intero senza segno a 32 bit.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> è minore di <see cref="F:System.UInt32.MinValue" /> o è maggiore di <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned 64-bit integer value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore intero senza segno a 64 bit.
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="T:System.Double" />.</summary>
      <param name="value" vsli:raw="The value to convert to an unsigned 64-bit integer.">Valore da convertire in un intero senza segno a 64 bit.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> è minore di <see cref="F:System.UInt64.MinValue" /> o è maggiore di <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Single&quot; /&gt; value to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Definisce una conversione esplicita di un valore <see cref="T:System.Single" /> in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Single.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Single.PositiveInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Single.NegativeInfinity&quot; /&gt;.">
        <paramref name="value" /> è <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" /> o <see cref="F:System.Single.NegativeInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is greater than a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Restituisce un valore che indica se un Signed Integer a 64 bit è maggiore di un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; is greater than a 64-bit signed integer value.">Restituisce un valore che indica se un <see cref="T:System.Numerics.BigInteger" /> è maggiore di un valore Signed Integer a 64 bit.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore di un altro valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than a 64-bit unsigned integer.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore di un Unsigned Integer a 64 bit.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than a 64-bit unsigned integer.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore di un Unsigned Integer a 64 bit.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Restituisce un valore che indica se un Signed Integer a 64 bit è maggiore o uguale a un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than or equal to a 64-bit signed integer value.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore o uguale a un valore Signed Integer a 64 bit.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than or equal to another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore o uguale a un altro valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than or equal to a 64-bit unsigned integer value.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore o uguale a un valore Unsigned Integer a 64 bit.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Restituisce un valore che indica se un Unsigned Integer a 64 bit è maggiore o uguale a un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of an unsigned byte to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Definisce una conversione implicita di un byte senza segno in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a signed 16-bit integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Definisce una conversione implicita di un Signed Integer a 16 bit in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a signed 32-bit integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Definisce una conversione implicita di un intero con segno a 32 bit in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a signed 64-bit integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Definisce una conversione implicita di un intero con segno a 64 bit in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of an 8-bit signed integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;M:System.Numerics.BigInteger.#ctor(System.Int32)&quot; /&gt;.">Definisce una conversione implicita di un Signed Integer a 8 bit in un valore <see cref="T:System.Numerics.BigInteger" />.
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a 16-bit unsigned integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger&quot; /&gt;.">Definisce una conversione implicita di un Unsigned Integer a 16 bit in un valore <see cref="T:System.Numerics.BigInteger" />.
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a 32-bit unsigned integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger&quot; /&gt;.">Definisce una conversione implicita di un intero senza segno a 32 bit in un valore <see cref="T:System.Numerics.BigInteger" />.
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a 64-bit unsigned integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Definisce una conversione implicita di un intero senza segno a 64 bit in un valore <see cref="T:System.Numerics.BigInteger" />.
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="T:System.Double" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
      <summary vsli:raw="Increments a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by 1.">Incrementa un valore <see cref="T:System.Numerics.BigInteger" /> di 1.</summary>
      <param name="value" vsli:raw="The value to increment.">Valore da incrementare.</param>
      <returns vsli:raw="The value of the &lt;paramref name=&quot;value&quot; /&gt; parameter incremented by 1.">Valore del parametro <paramref name="value" /> incrementato di 1.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are not equal.">Restituisce un valore che indica se un Signed Integer a 64 bit e un valore <see cref="T:System.Numerics.BigInteger" /> non sono uguali.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and a 64-bit signed integer are not equal.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> e un Signed Integer a 64 bit non sono uguali.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; objects have different values.">Restituisce un valore che indica se due oggetti <see cref="T:System.Numerics.BigInteger" /> hanno valori diversi.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and a 64-bit unsigned integer are not equal.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> e un Unsigned Integer a 64 bit non sono uguali.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are not equal.">Restituisce un valore che indica se un Unsigned Integer a 64 bit e un valore <see cref="T:System.Numerics.BigInteger" /> non sono uguali.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
      <summary vsli:raw="Shifts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value a specified number of bits to the left.">Sposta un valore <see cref="T:System.Numerics.BigInteger" /> di un numero specificato di bit verso sinistra.</summary>
      <param name="value" vsli:raw="The value whose bits are to be shifted.">Valore di cui spostare i bit.</param>
      <param name="shift" vsli:raw="The number of bits to shift &lt;paramref name=&quot;value&quot; /&gt; to the left.">Numero di bit <paramref name="value" /> da spostare a sinistra.</param>
      <returns vsli:raw="A value that has been shifted to the left by the specified number of bits.">Valore spostato a sinistra del numero specificato di bit.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is less than a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Restituisce un valore che indica se un Signed Integer a 64 bit è minore di un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than a 64-bit signed integer.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore di un Signed Integer a 64 bit.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore di un altro valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than a 64-bit unsigned integer.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore di un Unsigned Integer a 64 bit.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer is less than a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Restituisce un valore che indica se un Unsigned Integer a 64 bit è minore di un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is less than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Restituisce un valore che indica se un Signed Integer a 64 bit è minore o uguale a un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than or equal to a 64-bit signed integer.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore o uguale a un Signed Integer a 64 bit.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than or equal to another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore o uguale a un altro valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than or equal to a 64-bit unsigned integer.">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore o uguale a un Unsigned Integer a 64 bit.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Restituisce un valore che indica se un Unsigned Integer a 64 bit è minore o uguale a un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the remainder that results from division with two specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Restituisce il resto risultante dalla divisione di due valori <see cref="T:System.Numerics.BigInteger" /> specificati.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">Valore da dividere.</param>
      <param name="divisor" vsli:raw="The value to divide by.">Valore per cui dividere.</param>
      <returns vsli:raw="The remainder that results from the division.">Resto risultante dalla divisione.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> è 0 (zero).</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Multiplies two specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Moltiplica due valori <see cref="T:System.Numerics.BigInteger" /> specificati.</summary>
      <param name="left" vsli:raw="The first value to multiply.">Primo valore da moltiplicare.</param>
      <param name="right" vsli:raw="The second value to multiply.">Secondo valore da moltiplicare.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Prodotto di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the bitwise one's complement of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Restituisce il complemento a uno bit per bit di un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="An integer value.">Valore intero.</param>
      <returns vsli:raw="The bitwise one's complement of &lt;paramref name=&quot;value&quot; /&gt;.">Complemento a uno bit per bit dell'oggetto <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
      <summary vsli:raw="Shifts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value a specified number of bits to the right.">Sposta un valore <see cref="T:System.Numerics.BigInteger" /> di un numero specificato di bit verso destra.</summary>
      <param name="value" vsli:raw="The value whose bits are to be shifted.">Valore di cui spostare i bit.</param>
      <param name="shift" vsli:raw="The number of bits to shift &lt;paramref name=&quot;value&quot; /&gt; to the right.">Numero di bit in base al quale spostare <paramref name="value" /> a destra.</param>
      <returns vsli:raw="A value that has been shifted to the right by the specified number of bits.">Valore spostato a destra del numero specificato di bit.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Subtracts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value from another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Sottrae un valore <see cref="T:System.Numerics.BigInteger" /> da un altro valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">Valore da cui sottrarre (minuendo).</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">Valore da sottrarre (sottraendo).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
      <summary vsli:raw="Negates a specified BigInteger value.">Nega un valore BigInteger specificato.</summary>
      <param name="value" vsli:raw="The value to negate.">Valore da negare.</param>
      <returns vsli:raw="The result of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by negative one (-1).">Risultato del parametro <paramref name="value" /> moltiplicato per il valore uno negativo (-1).</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; operand. (The sign of the operand is unchanged.)">Restituisce il valore dell'operando <see cref="T:System.Numerics.BigInteger" />. Il segno dell'operando resta invariato.</summary>
      <param name="value" vsli:raw="An integer value.">Valore intero.</param>
      <returns vsli:raw="The value of the &lt;paramref name=&quot;value&quot; /&gt; operand.">Valore dell'operando <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary vsli:raw="Converts the representation of a number, contained in the specified read-only span of characters, in a specified style to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">Converte la rappresentazione di un numero, contenuto nell'intervallo di caratteri di sola lettura specificato, in uno stile specificato nell'equivalente <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="A read-only span of characters that contains the number to convert.">Intervallo di caratteri di sola lettura che contiene il numero da convertire.</param>
      <param name="style" vsli:raw="A bitwise combination of the enumeration values that specify the permitted format of &lt;paramref name=&quot;value&quot; /&gt;.">Combinazione bit per bit dei valori di enumerazione che specifica il formato consentito di <paramref name="value" />.</param>
      <param name="provider" vsli:raw="An object that provides culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <paramref name="value" />.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Valore equivalente al numero specificato nel parametro <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> non è un valore di <see cref="T:System.Globalization.NumberStyles" />.
-oppure-
<paramref name="style" /> include il contrassegno <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> insieme a un altro valore.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not comply with the input pattern specified by &lt;paramref name=&quot;style&quot; /&gt;.">
        <paramref name="value" /> non è conforme al criterio di input specificato da <paramref name="style" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String)">
      <summary vsli:raw="Converts the string representation of a number to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">Converte la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente.</summary>
      <param name="value" vsli:raw="A string that contains the number to convert.">Stringa che contiene il numero da convertire.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Valore equivalente al numero specificato nel parametro <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not in the correct format.">Il formato di <paramref name="value" /> non è corretto.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
      <summary vsli:raw="Converts the string representation of a number in a specified style to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">Converte la rappresentazione di stringa di un numero in uno stile specificato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente.</summary>
      <param name="value" vsli:raw="A string that contains a number to convert.">Stringa contenente un numero da convertire.</param>
      <param name="style" vsli:raw="A bitwise combination of the enumeration values that specify the permitted format of &lt;paramref name=&quot;value&quot; /&gt;.">Combinazione bit per bit dei valori di enumerazione che specifica il formato consentito di <paramref name="value" />.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Valore equivalente al numero specificato nel parametro <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> non è un valore di <see cref="T:System.Globalization.NumberStyles" />.
-oppure-
<paramref name="style" /> include il contrassegno <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> insieme a un altro valore.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not comply with the input pattern specified by &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt;.">
        <paramref name="value" /> non è conforme al criterio di input specificato da <see cref="T:System.Globalization.NumberStyles" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary vsli:raw="Converts the string representation of a number in a specified style and culture-specific format to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">Converte la rappresentazione di stringa di un numero in uno stile specificato e un formato specifico delle impostazioni cultura indicato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente.</summary>
      <param name="value" vsli:raw="A string that contains a number to convert.">Stringa contenente un numero da convertire.</param>
      <param name="style" vsli:raw="A bitwise combination of the enumeration values that specify the permitted format of &lt;paramref name=&quot;value&quot; /&gt;.">Combinazione bit per bit dei valori di enumerazione che specifica il formato consentito di <paramref name="value" />.</param>
      <param name="provider" vsli:raw="An object that provides culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <paramref name="value" />.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Valore equivalente al numero specificato nel parametro <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> non è un valore di <see cref="T:System.Globalization.NumberStyles" />.
-oppure-
<paramref name="style" /> include il contrassegno <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> insieme a un altro valore.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not comply with the input pattern specified by &lt;paramref name=&quot;style&quot; /&gt;.">
        <paramref name="value" /> non è conforme al criterio di input specificato da <paramref name="style" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
      <summary vsli:raw="Converts the string representation of a number in a specified culture-specific format to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">Converte la rappresentazione di stringa di un numero in un formato specifico delle impostazioni cultura indicato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente.</summary>
      <param name="value" vsli:raw="A string that contains a number to convert.">Stringa contenente un numero da convertire.</param>
      <param name="provider" vsli:raw="An object that provides culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <paramref name="value" />.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Valore equivalente al numero specificato nel parametro <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not in the correct format.">Il formato di <paramref name="value" /> non è corretto.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value to the power of a specified value.">Eleva alla potenza di un valore specificato il valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The number to raise to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">Numero da elevare alla potenza di <paramref name="exponent" /></param>
      <param name="exponent" vsli:raw="The exponent to raise &lt;paramref name=&quot;value&quot; /&gt; by.">Esponente per il quale elevare alla potenza <paramref name="value" />.</param>
      <returns vsli:raw="The result of raising &lt;paramref name=&quot;value&quot; /&gt; to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">Risultato di <paramref name="value" /> elevato alla potenza di <paramref name="exponent" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;exponent&quot; /&gt; is negative.">
        <paramref name="exponent" /> è negativo.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs integer division on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values and returns the remainder.">Esegue una divisione intera su due valori <see cref="T:System.Numerics.BigInteger" /> e restituisce il resto.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">Valore da dividere.</param>
      <param name="divisor" vsli:raw="The value to divide by.">Valore per cui dividere.</param>
      <returns vsli:raw="The remainder after dividing &lt;paramref name=&quot;dividend&quot; /&gt; by &lt;paramref name=&quot;divisor&quot; /&gt;.">Resto risultante dalla divisione di <paramref name="dividend" /> per <paramref name="divisor" />.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> è 0 (zero).</exception>
    </member>
    <member name="P:System.Numerics.BigInteger.Sign">
      <summary vsli:raw="Gets a number that indicates the sign (negative, positive, or zero) of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object.">Ottiene un numero che indica il segno (negativo, positivo o zero) dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente.</summary>
      <returns vsli:raw="A number that indicates the sign of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Number&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt; The value of this object is negative.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; The value of this object is 0 (zero).&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; The value of this object is positive.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Numero che indica il segno dell'oggetto <see cref="T:System.Numerics.BigInteger" />, come illustrato nella tabella seguente.
  Number 
  Description 
  -1 
  Il valore di questo oggetto è negativo.  
  
  0 
  Il valore di questo oggetto è 0 (zero).  
  
  1 
  Il valore di questo oggetto è positivo.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Subtracts one &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value from another and returns the result.">Sottrae un valore <see cref="T:System.Numerics.BigInteger" /> da un altro e restituisce il risultato.</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">Valore da cui sottrarre (minuendo).</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">Valore da sottrarre (sottraendo).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToByteArray">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value to a byte array.">Converte un valore <see cref="T:System.Numerics.BigInteger" /> in una matrice di byte.</summary>
      <returns vsli:raw="The value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object converted to an array of bytes.">Valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente convertito in una matrice di byte.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns the value of this &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; as a byte array using the fewest number of bytes possible. If the value is zero, returns an array of one byte whose element is 0x00.">Restituisce il valore di <see cref="T:System.Numerics.BigInteger" /> come matrice di byte usando il minor numero possibile di byte. Se il valore è zero, restituisce una matrice di un byte il cui elemento è 0x00.</summary>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per usare la codifica senza segno; in caso contrario, <see langword="false" />.</param>
      <param name="isBigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the bytes in a big-endian byte order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per scrivere i byte in un ordine di byte big endian; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="The value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object converted to an array of bytes.">Valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente convertito in una matrice di byte.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="If &lt;paramref name=&quot;isUnsigned&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.BigInteger.Sign&quot; /&gt; is negative.">Se <paramref name="isUnsigned" /> è <see langword="true" /> e <see cref="P:System.Numerics.BigInteger.Sign" /> è negativo.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation.">Converte il valore numerico dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente nella rappresentazione di stringa equivalente.</summary>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Rappresentazione di stringa del valore <see cref="T:System.Numerics.BigInteger" /> corrente.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation by using the specified culture-specific formatting information.">Converte il valore numerico dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente nella rappresentazione di stringa equivalente usando le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value in the format specified by the &lt;paramref name=&quot;provider&quot; /&gt; parameter.">Rappresentazione di stringa del valore <see cref="T:System.Numerics.BigInteger" /> corrente nel formato specificato dal parametro <paramref name="provider" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.String)">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation by using the specified format.">Converte il valore numerico dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente nella rappresentazione di stringa equivalente, usando il formato specificato.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">Stringa di formato numerico standard o personalizzato.</param>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value in the format specified by the &lt;paramref name=&quot;format&quot; /&gt; parameter.">Rappresentazione di stringa del valore <see cref="T:System.Numerics.BigInteger" /> corrente nel formato specificato dal parametro <paramref name="format" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" /> non è una stringa di formato valida.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation by using the specified format and culture-specific format information.">Converte il valore numerico dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">Stringa di formato numerico standard o personalizzato.</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value as specified by the &lt;paramref name=&quot;format&quot; /&gt; and &lt;paramref name=&quot;provider&quot; /&gt; parameters.">Rappresentazione di stringa del valore corrente di <see cref="T:System.Numerics.BigInteger" />, come specificato dai parametri <paramref name="format" /> e <paramref name="provider" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" /> non è una stringa di formato valida.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
      <summary vsli:raw="Formats this big integer instance into a span of characters.">Formatta questa istanza di big integer in un intervallo di caratteri.</summary>
      <param name="destination" vsli:raw="The span of characters into which this instance will be written.">Intervallo di caratteri in cui verrà scritta l'istanza.</param>
      <param name="charsWritten" vsli:raw="When the method returns, contains the length of the span in number of characters.">Quando termina, questo metodo contiene la lunghezza dell'intervallo in numero di caratteri.</param>
      <param name="format" vsli:raw="A read-only span of characters that specifies the format for the formatting operation.">Intervallo di caratteri di sola lettura che specifica il formato per l'operazione di formattazione.</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="value" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting operation succeeds; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> se l'operazione di formattazione ha esito positivo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the string representation of a number to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Prova a convertire la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <param name="value" vsli:raw="The representation of a number as a read-only span of characters.">Rappresentazione di un numero come intervallo di caratteri di sola lettura.</param>
      <param name="style" vsli:raw="A bitwise combination of enumeration values that indicates the style elements that can be present in &lt;paramref name=&quot;value&quot; /&gt;. A typical value to specify is &lt;see cref=&quot;F:System.Globalization.NumberStyles.Integer&quot; /&gt;.">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="value" />. Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="value" />.</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt; if the conversion failed. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is an empty character span or is not in a format that is compliant with &lt;paramref name=&quot;style&quot; /&gt;. This parameter is passed uninitialized.">Quando questo metodo restituisce un risultato, esso contiene <see cref="T:System.Numerics.BigInteger" /> equivalente al numero contenuto in <paramref name="value" />, oppure <see cref="P:System.Numerics.BigInteger.Zero" /> in caso di errore nella conversione. La conversione non viene eseguita se il parametro <paramref name="value" /> è un intervallo di caratteri vuoto oppure è in un formato non conforme a <paramref name="style" />. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> non è un valore di <see cref="T:System.Globalization.NumberStyles" />.
-oppure-
<paramref name="style" /> include il contrassegno <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> insieme a un altro valore.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the representation of a number contained in the specified read-only character span, to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Prova a convertire la rappresentazione di un numero contenuto nell'intervallo di caratteri di sola lettura specificato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <param name="value" vsli:raw="The representation of a number as a read-only span of characters.">Rappresentazione di un numero come intervallo di caratteri di sola lettura.</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or zero (0) if the conversion fails. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is an empty character span or is not of the correct format. This parameter is passed uninitialized.">Quando questo metodo restituisce un risultato, esso contiene <see cref="T:System.Numerics.BigInteger" /> equivalente al numero contenuto in <paramref name="value" />, oppure zero (0) in caso di errore nella conversione. La conversione non viene eseguita se il parametro <paramref name="value" /> è un intervallo di caratteri vuoto o non è nel formato corretto. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the string representation of a number in a specified style and culture-specific format to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Prova a convertire la rappresentazione di stringa di un numero in uno stile specificato e un formato specifico delle impostazioni cultura indicato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <param name="value" vsli:raw="The string representation of a number. The string is interpreted using the style specified by &lt;paramref name=&quot;style&quot; /&gt;.">Rappresentazione di stringa di un numero. La stringa viene interpreta usando lo stile specificato da <paramref name="style" />.</param>
      <param name="style" vsli:raw="A bitwise combination of enumeration values that indicates the style elements that can be present in &lt;paramref name=&quot;value&quot; /&gt;. A typical value to specify is &lt;see cref=&quot;F:System.Globalization.NumberStyles.Integer&quot; /&gt;.">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="value" />. Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="value" />.</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt; if the conversion failed. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or is not in a format that is compliant with &lt;paramref name=&quot;style&quot; /&gt;. This parameter is passed uninitialized.">Quando questo metodo restituisce un risultato, esso contiene <see cref="T:System.Numerics.BigInteger" /> equivalente al numero contenuto in <paramref name="value" />, oppure <see cref="P:System.Numerics.BigInteger.Zero" /> in caso di errore nella conversione. La conversione non viene eseguita se il parametro <paramref name="value" /> è <see langword="null" /> oppure è in un formato non conforme a <paramref name="style" />. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;value&quot; /&gt; parameter was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il parametro <paramref name="value" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> non è un valore di <see cref="T:System.Globalization.NumberStyles" />.
-oppure-
<paramref name="style" /> include il contrassegno <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> insieme a un altro valore.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the string representation of a number to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Prova a convertire la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <param name="value" vsli:raw="The string representation of a number.">Rappresentazione di stringa di un numero.</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or zero (0) if the conversion fails. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or is not of the correct format. This parameter is passed uninitialized.">Quando questo metodo restituisce un risultato, esso contiene <see cref="T:System.Numerics.BigInteger" /> equivalente al numero contenuto in <paramref name="value" />, oppure zero (0) in caso di errore nella conversione. La conversione non viene eseguita se il parametro <paramref name="value" /> è <see langword="null" />, o non è nel formato corretto. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)">
      <summary vsli:raw="Copies the value of this &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; as little-endian twos-complement bytes, using the fewest number of bytes possible. If the value is zero, outputs one byte whose element is 0x00.">Copia il valore di <see cref="T:System.Numerics.BigInteger" /> come byte di complemento a due little endian usando il minor numero possibile di byte. Se il valore è zero, restituisce un byte il cui elemento è 0x00.</summary>
      <param name="destination" vsli:raw="The destination span to which the resulting bytes should be written.">Intervallo di destinazione in cui devono essere scritti i byte risultanti.</param>
      <param name="bytesWritten" vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Numero di byte scritti in <paramref name="destination" />.</param>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per usare la codifica senza segno; in caso contrario, <see langword="false" />.</param>
      <param name="isBigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the bytes in a big-endian byte order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per scrivere i byte in un ordine di byte big endian; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the bytes fit in &lt;paramref name=&quot;destination&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if not all bytes could be written due to lack of space.">
        <see langword="true" /> se è possibile inserire i byte in <paramref name="destination" />; <see langword="false" /> se non è possibile scrivere tutti i byte per mancanza di spazio.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;isUnsigned&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.BigInteger.Sign&quot; /&gt; is negative.">
        <paramref name="isUnsigned" /> è <see langword="true" /> e <see cref="P:System.Numerics.BigInteger.Sign" /> è negativo.</exception>
    </member>
    <member name="P:System.Numerics.BigInteger.Zero">
      <summary vsli:raw="Gets a value that represents the number 0 (zero).">Ottiene un valore che rappresenta il numero 0 (zero).</summary>
      <returns vsli:raw="An integer whose value is 0 (zero).">Intero il cui valore è 0 (zero).</returns>
    </member>
    <member name="T:System.Numerics.Complex">
      <summary vsli:raw="Represents a complex number.">Rappresenta un numero complesso.</summary>
    </member>
    <member name="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; structure using the specified real and imaginary values.">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.Complex" /> usando i valori reali e immaginari specificati.</summary>
      <param name="real" vsli:raw="The real part of the complex number.">Parte reale del numero complesso.</param>
      <param name="imaginary" vsli:raw="The imaginary part of the complex number.">Parte immaginaria del numero complesso.</param>
    </member>
    <member name="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
      <summary vsli:raw="Gets the absolute value (or magnitude) of a complex number.">Ottiene il valore assoluto (o grandezza) di un numero complesso.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The absolute value of &lt;paramref name=&quot;value&quot; /&gt;.">Valore assoluto di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
      <summary vsli:raw="Returns the angle that is the arc cosine of the specified complex number.">Restituisce l'angolo che costituisce l'arcocoseno del numero complesso specificato.</summary>
      <param name="value" vsli:raw="A complex number that represents a cosine.">Numero complesso che rappresenta un coseno.</param>
      <returns vsli:raw="The angle, measured in radians, which is the arc cosine of &lt;paramref name=&quot;value&quot; /&gt;.">Angolo espresso in radianti che costituisce l'arcocoseno di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Adds a double-precision real number to a complex number and returns the result.">Aggiunge un numero reale a precisione doppia a un numero complesso e restituisce il risultato.</summary>
      <param name="left" vsli:raw="The double-precision real value to add.">Valore reale a precisione doppia da aggiungere.</param>
      <param name="right" vsli:raw="The complex value to add.">Valore complesso da aggiungere.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Somma di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Adds a complex number to a double-precision real number and returns the result.">Aggiunge un numero complesso a un numero reale a precisione doppia e restituisce il risultato.</summary>
      <param name="left" vsli:raw="The complex value to add.">Valore complesso da aggiungere.</param>
      <param name="right" vsli:raw="The double-precision real value to add.">Valore reale a precisione doppia da aggiungere.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Somma di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Adds two complex numbers and returns the result.">Somma due numeri complessi e restituisce il risultato.</summary>
      <param name="left" vsli:raw="The first complex number to add.">Primo numero complesso da sommare.</param>
      <param name="right" vsli:raw="The second complex number to add.">Secondo numero complesso da sommare.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Somma di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
      <summary vsli:raw="Returns the angle that is the arc sine of the specified complex number.">Restituisce l'angolo che costituisce l'arcoseno del numero complesso specificato.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The angle which is the arc sine of &lt;paramref name=&quot;value&quot; /&gt;.">Angolo che costituisce l'arcoseno di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
      <summary vsli:raw="Returns the angle that is the arc tangent of the specified complex number.">Restituisce l'angolo che costituisce l'arcotangente del numero complesso specificato.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The angle that is the arc tangent of &lt;paramref name=&quot;value&quot; /&gt;.">Angolo che costituisce l'arcotangente di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
      <summary vsli:raw="Computes the conjugate of a complex number and returns the result.">Calcola il coniugato di un numero complesso e restituisce il risultato.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The conjugate of &lt;paramref name=&quot;value&quot; /&gt;.">Coniugato di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
      <summary vsli:raw="Returns the cosine of the specified complex number.">Restituisce il coseno del numero complesso specificato.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The cosine of &lt;paramref name=&quot;value&quot; /&gt;.">Coseno di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
      <summary vsli:raw="Returns the hyperbolic cosine of the specified complex number.">Restituisce il coseno iperbolico del numero complesso specificato.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The hyperbolic cosine of &lt;paramref name=&quot;value&quot; /&gt;.">Coseno iperbolico di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Divides one double-precision real number by a complex number and returns the result.">Divide un numero reale a precisione doppia per un numero complesso e restituisce il risultato.</summary>
      <param name="dividend" vsli:raw="The double-precision real number to be divided.">Numero reale a precisione doppia da dividere.</param>
      <param name="divisor" vsli:raw="The complex number to divide by.">Numero complesso per cui dividere.</param>
      <returns vsli:raw="The quotient of the division.">Quoziente della divisione.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Divides one complex number by a double-precision real number and returns the result.">Divide un numero complesso per un numero reale a precisione doppia e restituisce il risultato.</summary>
      <param name="dividend" vsli:raw="The complex number to be divided.">Numero complesso da dividere.</param>
      <param name="divisor" vsli:raw="The double-precision real number to divide by.">Numero reale a precisione doppia per cui dividere.</param>
      <returns vsli:raw="The quotient of the division.">Quoziente della divisione.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Divides one complex number by another and returns the result.">Divide un numero complesso per un altro e restituisce il risultato.</summary>
      <param name="dividend" vsli:raw="The complex number to be divided.">Numero complesso da dividere.</param>
      <param name="divisor" vsli:raw="The complex number to divide by.">Numero complesso per cui dividere.</param>
      <returns vsli:raw="The quotient of the division.">Quoziente della divisione.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified complex number have the same value.">Restituisce un valore che indica se l'istanza corrente e un numero complesso specificato hanno lo stesso valore.</summary>
      <param name="value" vsli:raw="The complex number to compare.">Numero complesso da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this complex number and &lt;paramref name=&quot;value&quot; /&gt; have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questo numero complesso e <paramref name="value" /> presentano lo stesso valore. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified object have the same value.">Restituisce un valore che indica se l'istanza corrente e un oggetto specificato hanno lo stesso valore.</summary>
      <param name="obj" vsli:raw="The object to compare.">Oggetto da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj&quot; /&gt; parameter is a &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object or a type capable of implicit conversion to a &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object, and its value is equal to the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il parametro <paramref name="obj" /> è un oggetto <see cref="T:System.Numerics.Complex" /> o un tipo in grado di eseguire la conversione implicita in un oggetto <see cref="T:System.Numerics.Complex" /> e il relativo valore è uguale all'oggetto <see cref="T:System.Numerics.Complex" /> corrente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
      <summary vsli:raw="Returns &lt;see langword=&quot;e&quot; /&gt; raised to the power specified by a complex number.">Restituisce <see langword="e" /> elevato alla potenza specificata da un numero complesso.</summary>
      <param name="value" vsli:raw="A complex number that specifies a power.">Numero complesso che specifica una potenza.</param>
      <returns vsli:raw="The number &lt;see langword=&quot;e&quot; /&gt; raised to the power &lt;paramref name=&quot;value&quot; /&gt;.">Numero <see langword="e" /> elevato alla potenza <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
      <summary vsli:raw="Creates a complex number from a point's polar coordinates.">Crea un numero complesso dalle coordinate polari di un punto.</summary>
      <param name="magnitude" vsli:raw="The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.">La grandezza che è la distanza dall'origine (l'intersezione dell'asse x con l'asse y) al numero.</param>
      <param name="phase" vsli:raw="The phase, which is the angle from the line to the horizontal axis, measured in radians.">La fase che è l'angolo dalla riga all'asse orizzontale, espresso nei radianti.</param>
      <returns vsli:raw="A complex number.">Numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object.">Restituisce il codice hash per l'oggetto <see cref="T:System.Numerics.Complex" /> corrente.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Imaginary">
      <summary vsli:raw="Gets the imaginary component of the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object.">Ottiene il componente immaginario dell'oggetto <see cref="T:System.Numerics.Complex" /> corrente.</summary>
      <returns vsli:raw="The imaginary component of a complex number.">Componente immaginario di un numero complesso.</returns>
    </member>
    <member name="F:System.Numerics.Complex.ImaginaryOne">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; instance with a real number equal to zero and an imaginary number equal to one.">Restituisce una nuova istanza di <see cref="T:System.Numerics.Complex" /> con un numero reale uguale a zero e un numero immaginario uguale a uno.</summary>
    </member>
    <member name="F:System.Numerics.Complex.Infinity">
      <summary vsli:raw="Represents infinity as a complex number.">Rappresenta l'infinito come numero complesso.</summary>
    </member>
    <member name="M:System.Numerics.Complex.IsFinite(System.Numerics.Complex)">
      <summary vsli:raw="Determines whether the specified complex number is finite.">Determina se il numero complesso specificato è finito.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both, the real and imaginary parts are finite (zero, subnormal or normal); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se entrambe le parti, reale e immaginaria, sono finite (zero, subnormali o normali); in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.IsInfinity(System.Numerics.Complex)">
      <summary vsli:raw="Returns a value indicating whether the specified complex number evaluates to infinity.">Restituisce un valore che indica se il numero complesso specificato restituisce l'infinito.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if either, the real or imaginary part are &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt; or &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se una delle due parti, reale o immaginaria, è <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NegativeInfinity" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.IsNaN(System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether the specified complex instance is not a number (NaN).">Restituisce un valore che indica se l'istanza complessa specificata non è un numero (NaN).</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is not finite or infinite; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore specificato non è finito o infinito; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
      <summary vsli:raw="Returns the natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of a specified complex number.">Restituisce <see langword="e" />, la base del logaritmo naturale del numero complesso specificato.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of &lt;paramref name=&quot;value&quot; /&gt;.">Logaritmo naturale (base <see langword="e" />) di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Returns the logarithm of a specified complex number in a specified base.">Restituisce il logaritmo del numero complesso specificato nella base specificata.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <param name="baseValue" vsli:raw="The base of the logarithm.">Base del logaritmo.</param>
      <returns vsli:raw="The logarithm of &lt;paramref name=&quot;value&quot; /&gt; in base &lt;paramref name=&quot;baseValue&quot; /&gt;.">Logaritmo di <paramref name="value" /> in base <paramref name="baseValue" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
      <summary vsli:raw="Returns the base-10 logarithm of a specified complex number.">Restituisce il logaritmo in base 10 del numero complesso specificato.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The base-10 logarithm of &lt;paramref name=&quot;value&quot; /&gt;.">Logaritmo in base 10 di <paramref name="value" />.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Magnitude">
      <summary vsli:raw="Gets the magnitude (or absolute value) of a complex number.">Ottiene la grandezza (o valore assoluto) di un numero complesso.</summary>
      <returns vsli:raw="The magnitude of the current instance.">Grandezza dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Returns the product of a double-precision real number and a complex number.">Restituisce il prodotto di un numero reale a precisione doppia e un numero complesso.</summary>
      <param name="left" vsli:raw="The double-precision real number to multiply.">Numero reale a precisione doppia da moltiplicare.</param>
      <param name="right" vsli:raw="The complex number to multiply.">Numero complesso da moltiplicare.</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">Prodotto dei parametri <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Returns the product of a complex number and a double-precision real number.">Restituisce il prodotto di un numero complesso e un numero reale a precisione doppia.</summary>
      <param name="left" vsli:raw="The complex number to multiply.">Numero complesso da moltiplicare.</param>
      <param name="right" vsli:raw="The double-precision real number to multiply.">Numero reale a precisione doppia da moltiplicare.</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">Prodotto dei parametri <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns the product of two complex numbers.">Restituisce il prodotto di due numeri complessi.</summary>
      <param name="left" vsli:raw="The first complex number to multiply.">Primo numero complesso da moltiplicare.</param>
      <param name="right" vsli:raw="The second complex number to multiply.">Secondo numero complesso da moltiplicare.</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">Prodotto dei parametri <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="F:System.Numerics.Complex.NaN">
      <summary vsli:raw="Represents a complex instance that is not a number (NaN).">Rappresenta un'istanza complessa che non è un numero (NaN).</summary>
    </member>
    <member name="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
      <summary vsli:raw="Returns the additive inverse of a specified complex number.">Restituisce l'inverso additivo di un numero complesso specificato.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The result of the &lt;see cref=&quot;P:System.Numerics.Complex.Real&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.Complex.Imaginary&quot; /&gt; components of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by -1.">Risultato dei componenti <see cref="P:System.Numerics.Complex.Real" /> e <see cref="P:System.Numerics.Complex.Imaginary" /> del parametro <paramref name="value" /> moltiplicato per -1.</returns>
    </member>
    <member name="F:System.Numerics.Complex.One">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; instance with a real number equal to one and an imaginary number equal to zero.">Restituisce una nuova istanza di <see cref="T:System.Numerics.Complex" /> con un numero reale uguale a uno e un numero immaginario uguale a zero.</summary>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Adds a double-precision real number to a complex number.">Aggiunge un numero reale a precisione doppia a un numero complesso.</summary>
      <param name="left" vsli:raw="The double-precision real value to add.">Valore reale a precisione doppia da aggiungere.</param>
      <param name="right" vsli:raw="The complex value to add.">Valore complesso da aggiungere.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; as a complex number.">Somma di <paramref name="left" /> e <paramref name="right" /> espressa come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Adds a complex number to a double-precision real number.">Aggiunge un numero complesso a un numero reale a precisione doppia.</summary>
      <param name="left" vsli:raw="The complex value to add.">Valore complesso da aggiungere.</param>
      <param name="right" vsli:raw="The double-precision real value to add.">Valore reale a precisione doppia da aggiungere.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; as a complex number.">Somma di <paramref name="left" /> e <paramref name="right" /> espressa come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Adds two complex numbers.">Somma due numeri complessi.</summary>
      <param name="left" vsli:raw="The first complex value to add.">Primo valore complesso da aggiungere.</param>
      <param name="right" vsli:raw="The second complex value to add.">Secondo valore complesso da aggiungere.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Somma di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Divides a specified double-precision real number by a specified complex number.">Divide un numero reale a precisione doppia specificato per un numero complesso specificato.</summary>
      <param name="left" vsli:raw="The double-precision real value to be divided.">Valore reale a precisione doppia da dividere.</param>
      <param name="right" vsli:raw="The complex value to divide by.">Valore complesso per cui dividere.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">Risultato della divisione di <paramref name="left" /> per <paramref name="right" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Divides a specified complex number by a specified double-precision real number.">Divide un numero complesso specificato per un numero reale a precisione doppia specificato.</summary>
      <param name="left" vsli:raw="The complex value to be divided.">Valore complesso da dividere.</param>
      <param name="right" vsli:raw="The double-precision real value to divide by.">Valore reale a precisione doppia per cui dividere.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">Risultato della divisione di <paramref name="left" /> per <paramref name="right" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Divides a specified complex number by another specified complex number.">Divide un numero complesso specificato per un altro numero complesso specificato.</summary>
      <param name="left" vsli:raw="The complex value to be divided.">Valore complesso da dividere.</param>
      <param name="right" vsli:raw="The complex value to divide by.">Valore complesso per cui dividere.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">Risultato della divisione di <paramref name="left" /> in base a <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether two complex numbers are equal.">Restituisce un valore che indica se due numeri complessi sono uguali.</summary>
      <param name="left" vsli:raw="The first complex number to compare.">Primo numero complesso da confrontare.</param>
      <param name="right" vsli:raw="The second complex number to compare.">Secondo numero complesso da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a complex number.">Definisce una conversione esplicita di un valore <see cref="T:System.Decimal" /> in un numero complesso.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valore da convertire in un numero complesso.</param>
      <returns vsli:raw="A complex number that has a real component equal to &lt;paramref name=&quot;value&quot; /&gt; and an imaginary component equal to zero.">Numero complesso contenente un componente reale uguale a <paramref name="value" /> e un componente immaginario uguale a zero.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value to a complex number.">Definisce una conversione esplicita di un valore <see cref="T:System.Numerics.BigInteger" /> in un numero complesso.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valore da convertire in un numero complesso.</param>
      <returns vsli:raw="A complex number that has a real component equal to &lt;paramref name=&quot;value&quot; /&gt; and an imaginary component equal to zero.">Numero complesso contenente un componente reale uguale a <paramref name="value" /> e un componente immaginario uguale a zero.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of an unsigned byte to a complex number.">Definisce una conversione implicita di un byte senza segno in un numero complesso.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valore da convertire in un numero complesso.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a double-precision floating-point number to a complex number.">Definisce una conversione implicita di un numero a virgola mobile a precisione doppia in un numero complesso.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valore da convertire in un numero complesso.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 16-bit signed integer to a complex number.">Definisce una conversione implicita di un intero con segno a 16 bit in un numero complesso.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valore da convertire in un numero complesso.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 32-bit signed integer to a complex number.">Definisce una conversione implicita di un Intero con segno a 32 bit in un numero complesso.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valore da convertire in un numero complesso.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 64-bit signed integer to a complex number.">Definisce una conversione implicita di un Intero con segno a 64 bit in un numero complesso.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valore da convertire in un numero complesso.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a signed byte to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">Definisce una conversione implicita di un byte con segno in un numero complesso.
Questa API non è conforme a CLS.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valore da convertire in un numero complesso.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a single-precision floating-point number to a complex number.">Definisce una conversione implicita di un numero a virgola mobile a precisione singola in un numero complesso.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valore da convertire in un numero complesso.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 16-bit unsigned integer to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">Definisce una conversione implicita di un intero senza segno a 16 bit in un numero complesso.
Questa API non è conforme a CLS.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valore da convertire in un numero complesso.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 32-bit unsigned integer to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">Definisce una conversione implicita di un intero senza segno a 32 bit in un numero complesso.
Questa API non è conforme a CLS.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valore da convertire in un numero complesso.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 64-bit unsigned integer to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">Definisce una conversione implicita di un intero senza segno a 64 bit in un numero complesso.
Questa API non è conforme a CLS.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valore da convertire in un numero complesso.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether two complex numbers are not equal.">Restituisce un valore che indica se due numeri complessi non sono uguali.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primo valore da confrontare.</param>
      <param name="right" vsli:raw="The second value to compare.">Secondo valore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Multiplies a specified double-precision real number by a specified complex number.">Moltiplica un numero reale a precisione doppia specificato per un numero complesso specificato.</summary>
      <param name="left" vsli:raw="The double-precision real value to multiply.">Valore reale a precisione doppia da moltiplicare.</param>
      <param name="right" vsli:raw="The complex value to multiply.">Valore complesso da moltiplicare.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">Prodotto di <paramref name="left" /> e <paramref name="right" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Multiplies the specified complex number by a specified double-precision real number.">Moltiplica il numero complesso specificato per un numero reale a precisione doppia specificato.</summary>
      <param name="left" vsli:raw="The complex value to multiply.">Valore complesso da moltiplicare.</param>
      <param name="right" vsli:raw="The double-precision real value to multiply.">Valore reale a precisione doppia da moltiplicare.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">Prodotto di <paramref name="left" /> e <paramref name="right" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Multiplies two specified complex numbers.">Moltiplica due numeri complessi specificati.</summary>
      <param name="left" vsli:raw="The first complex value to multiply.">Primo valore complesso da moltiplicare.</param>
      <param name="right" vsli:raw="The second complex value to multiply.">Secondo valore complesso da moltiplicare.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Prodotto di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts a complex number from a double-precision real number.">Sottrae un numero complesso da un numero reale a precisione doppia.</summary>
      <param name="left" vsli:raw="The double-precision real value to subtract from (the minuend).">Valore reale a precisione doppia da cui sottrarre (minuendo).</param>
      <param name="right" vsli:raw="The complex value to subtract (the subtrahend).">Valore complesso da sottrarre (sottraendo).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Subtracts a double-precision real number from a complex number.">Sottrae un numero reale a precisione doppia da un numero complesso.</summary>
      <param name="left" vsli:raw="The complex value to subtract from (the minuend).">Valore complesso da cui sottrarre (minuendo).</param>
      <param name="right" vsli:raw="The double-precision real value to subtract (the subtrahend).">Valore reale a precisione doppia da sottrarre (sottraendo).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts a complex number from another complex number.">Sottrae un numero complesso da un altro numero complesso.</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">Valore da cui sottrarre (minuendo).</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">Valore da sottrarre (sottraendo).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
      <summary vsli:raw="Returns the additive inverse of a specified complex number.">Restituisce l'inverso additivo di un numero complesso specificato.</summary>
      <param name="value" vsli:raw="The value to negate.">Valore da negare.</param>
      <returns vsli:raw="The result of the &lt;see cref=&quot;P:System.Numerics.Complex.Real&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.Complex.Imaginary&quot; /&gt; components of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by -1.">Risultato dei componenti <see cref="P:System.Numerics.Complex.Real" /> e <see cref="P:System.Numerics.Complex.Imaginary" /> del parametro <paramref name="value" /> moltiplicato per -1.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Phase">
      <summary vsli:raw="Gets the phase of a complex number.">Ottiene la fase di un numero complesso.</summary>
      <returns vsli:raw="The phase of a complex number, in radians.">Fase di un numero complesso, in radianti.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Returns a specified complex number raised to a power specified by a double-precision floating-point number.">Restituisce un numero complesso specificato elevato a una potenza specificata da un numero a virgola mobile a precisione doppia.</summary>
      <param name="value" vsli:raw="A complex number to be raised to a power.">Numero complesso da elevare a una potenza.</param>
      <param name="power" vsli:raw="A double-precision floating-point number that specifies a power.">Numero a virgola mobile a precisione doppia che specifica una potenza.</param>
      <returns vsli:raw="The complex number &lt;paramref name=&quot;value&quot; /&gt; raised to the power &lt;paramref name=&quot;power&quot; /&gt;.">Numero complesso <paramref name="value" /> elevato alla potenza <paramref name="power" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns a specified complex number raised to a power specified by a complex number.">Restituisce un numero complesso specificato elevato a una potenza specificata da un numero complesso.</summary>
      <param name="value" vsli:raw="A complex number to be raised to a power.">Numero complesso da elevare a una potenza.</param>
      <param name="power" vsli:raw="A complex number that specifies a power.">Numero complesso che specifica una potenza.</param>
      <returns vsli:raw="The complex number &lt;paramref name=&quot;value&quot; /&gt; raised to the power &lt;paramref name=&quot;power&quot; /&gt;.">Numero complesso <paramref name="value" /> elevato alla potenza <paramref name="power" />.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Real">
      <summary vsli:raw="Gets the real component of the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object.">Ottiene il componente reale dell'oggetto <see cref="T:System.Numerics.Complex" /> corrente.</summary>
      <returns vsli:raw="The real component of a complex number.">Componente reale di un numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
      <summary vsli:raw="Returns the multiplicative inverse of a complex number.">Restituisce il reciproco moltiplicativo di un numero complesso.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The reciprocal of &lt;paramref name=&quot;value&quot; /&gt;.">Reciproco di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
      <summary vsli:raw="Returns the sine of the specified complex number.">Restituisce il seno del numero complesso specificato.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The sine of &lt;paramref name=&quot;value&quot; /&gt;.">Seno di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
      <summary vsli:raw="Returns the hyperbolic sine of the specified complex number.">Restituisce il seno iperbolico del numero complesso specificato.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The hyperbolic sine of &lt;paramref name=&quot;value&quot; /&gt;.">Seno iperbolico di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
      <summary vsli:raw="Returns the square root of a specified complex number.">Restituisce la radice quadrata del numero complesso specificato.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The square root of &lt;paramref name=&quot;value&quot; /&gt;.">Radice quadrata di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts one complex number from a double-precision real number and returns the result.">Sottrae un numero complesso da un numero reale a precisione doppia e restituisce il risultato.</summary>
      <param name="left" vsli:raw="The double-precision real value to subtract from (the minuend).">Valore reale a precisione doppia da cui sottrarre (minuendo).</param>
      <param name="right" vsli:raw="The complex value to subtract (the subtrahend).">Valore complesso da sottrarre (sottraendo).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Subtracts one double-precision real number from a complex number and returns the result.">Sottrae un numero reale a precisione doppia da un numero complesso e restituisce il risultato.</summary>
      <param name="left" vsli:raw="The complex value to subtract from (the minuend).">Valore complesso da cui sottrarre (minuendo).</param>
      <param name="right" vsli:raw="The double-precision real value to subtract (the subtrahend).">Valore reale a precisione doppia da sottrarre (sottraendo).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts one complex number from another and returns the result.">Sottrae un numero complesso da un altro e restituisce il risultato.</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">Valore da cui sottrarre (minuendo).</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">Valore da sottrarre (sottraendo).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
      <summary vsli:raw="Returns the tangent of the specified complex number.">Restituisce la tangente del numero complesso specificato.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The tangent of &lt;paramref name=&quot;value&quot; /&gt;.">Tangente di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
      <summary vsli:raw="Returns the hyperbolic tangent of the specified complex number.">Restituisce la tangente iperbolica del numero complesso specificato.</summary>
      <param name="value" vsli:raw="A complex number.">Numero complesso.</param>
      <returns vsli:raw="The hyperbolic tangent of &lt;paramref name=&quot;value&quot; /&gt;.">Tangente iperbolica di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form.">Converte il valore del numero complesso corrente nella relativa rappresentazione di stringa equivalente in formato cartesiano.</summary>
      <returns vsli:raw="The string representation of the current instance in Cartesian form.">Rappresentazione di stringa dell'istanza corrente in formato cartesiano.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.">Converte il valore del numero complesso corrente nella relativa rappresentazione di stringa equivalente in formato cartesiano usando le informazioni di formattazione relative alle impostazioni cultura specificate.</summary>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="The string representation of the current instance in Cartesian form, as specified by &lt;paramref name=&quot;provider&quot; /&gt;.">Rappresentazione di stringa dell'istanza corrente in formato cartesiano, come specificato da <paramref name="provider" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String)">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.">Converte il valore del numero complesso corrente nella relativa rappresentazione di stringa equivalente in formato cartesiano usando il formato specificato per le parti reale e immaginaria.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">Stringa di formato numerico standard o personalizzato.</param>
      <returns vsli:raw="The string representation of the current instance in Cartesian form.">Rappresentazione di stringa dell'istanza corrente in formato cartesiano.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" /> non è una stringa di formato valida.</exception>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.">Converte il valore del numero complesso corrente nella relativa rappresentazione di stringa equivalente in formato cartesiano usando il formato specificato e le informazioni sul formato relative alle impostazioni cultura per le parti reale e immaginaria.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">Stringa di formato numerico standard o personalizzato.</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="The string representation of the current instance in Cartesian form, as specified by &lt;paramref name=&quot;format&quot; /&gt; and &lt;paramref name=&quot;provider&quot; /&gt;.">Rappresentazione di stringa dell'istanza corrente in formato cartesiano, come specificato da <paramref name="format" /> e da <paramref name="provider" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" /> non è una stringa di formato valida.</exception>
    </member>
    <member name="F:System.Numerics.Complex.Zero">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; instance with a real number equal to zero and an imaginary number equal to zero.">Restituisce una nuova istanza di <see cref="T:System.Numerics.Complex" /> con un numero reale uguale a zero e un numero immaginario uguale a zero.</summary>
    </member>
  </members>
</doc>