<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.InteropServices</name>
  </assembly>
  <members>
    <member name="T:System.DataMisalignedException">
      <summary>L'eccezione generata quando viene eseguita la lettura o la scrittura di un'unità di dati da o in un indirizzo che non è un multiplo delle dimensioni dei dati. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.DataMisalignedException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.DataMisalignedException" />.</summary>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.DataMisalignedException" /> utilizzando un messaggio di errore specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore. Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.DataMisalignedException" /> utilizzando il messaggio di errore specificato e l'eccezione sottostante.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore. Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="innerException">Eccezione che è la causa della generazione dell'oggetto <see cref="T:System.DataMisalignedException" /> corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.DllNotFoundException">
      <summary>Eccezione che viene generata quando non è possibile individuare un file DLL specificato in un'importazione di file DLL.</summary>
    </member>
    <member name="M:System.DllNotFoundException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.DllNotFoundException" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.DllNotFoundException" /> con dati serializzati.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati oggetto serializzati relativi all'eccezione generata.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.DllNotFoundException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.DllNotFoundException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.IO.UnmanagedMemoryAccessor">
      <summary>Fornisce l'accesso casuale a blocchi di memoria non gestiti da codice gestito.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryAccessor" />.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryAccessor" /> con un valore specificato di buffer, offset e capacità.</summary>
      <param name="buffer">Buffer che deve contenere la funzione di accesso.</param>
      <param name="offset">Byte in corrispondenza del quale iniziare la funzione di accesso.</param>
      <param name="capacity">Dimensione, in byte, della memoria da allocare.</param>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="offset" /> e <paramref name="capacity" /> è maggiore di <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="capacity" /> è minore di zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="offset" /> e <paramref name="capacity" /> devono disporsi attorno all'estremità superiore dello spazio di indirizzi.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryAccessor" /> con un valore specificato di buffer, offset, capacità e diritto di accesso.</summary>
      <param name="buffer">Buffer che deve contenere la funzione di accesso.</param>
      <param name="offset">Byte in corrispondenza del quale iniziare la funzione di accesso.</param>
      <param name="capacity">Dimensione, in byte, della memoria da allocare.</param>
      <param name="access">Tipo di accesso consentito alla memoria. Il valore predefinito è <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="offset" /> e <paramref name="capacity" /> è maggiore di <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="capacity" /> è minore di zero.
-oppure-
<paramref name="access" /> non è un valore di enumerazione <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> valido.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="offset" /> e <paramref name="capacity" /> devono disporsi attorno all'estremità superiore dello spazio di indirizzi.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.CanRead">
      <summary>Determina se la funzione di accesso è leggibile.</summary>
      <returns>
        <see langword="true" /> se la funzione di accesso è leggibile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.CanWrite">
      <summary>Determina se funzione di accesso è scrivibile.</summary>
      <returns>
        <see langword="true" /> se la funzione di accesso è scrivibile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.Capacity">
      <summary>Ottiene la capacità della funzione di accesso.</summary>
      <returns>Capacità della funzione di accesso.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.IO.UnmanagedMemoryAccessor" />.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.IO.UnmanagedMemoryAccessor" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Imposta i valori iniziali per la funzione di accesso.</summary>
      <param name="buffer">Buffer che deve contenere la funzione di accesso.</param>
      <param name="offset">Byte in corrispondenza del quale iniziare la funzione di accesso.</param>
      <param name="capacity">Dimensione, in byte, della memoria da allocare.</param>
      <param name="access">Tipo di accesso consentito alla memoria. Il valore predefinito è <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="offset" /> e <paramref name="capacity" /> è maggiore di <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="capacity" /> è minore di zero.
-oppure-
<paramref name="access" /> non è un valore di enumerazione <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> valido.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="offset" /> e <paramref name="capacity" /> devono disporsi attorno all'estremità superiore dello spazio di indirizzi.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.IsOpen">
      <summary>Determina se la funzione di accesso è attualmente aperta da un processo.</summary>
      <returns>
        <see langword="true" /> se la funzione di accesso è aperta; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)">
      <summary>Legge una struttura di tipo <paramref name="T" /> dalla funzione di accesso in un riferimento fornito.</summary>
      <param name="position">Posizione nella funzione di accesso da cui iniziare la lettura.</param>
      <param name="structure">Struttura per contenere i dati letti.</param>
      <typeparam name="T">Tipo di struttura.</typeparam>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere una struttura di tipo <paramref name="T" />.
-oppure-
<see langword="T" /> è un tipo di valore che contiene uno o più tipi di riferimento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)">
      <summary>Legge strutture di tipo <paramref name="T" /> dalla funzione di accesso in una matrice di tipo <paramref name="T" />.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <param name="array">Matrice per contenere le strutture lette dalla funzione di accesso.</param>
      <param name="offset">Indice in <paramref name="array" /> nel quale posizionare la prima struttura copiata.</param>
      <param name="count">Numero di strutture di tipo <c>T</c> da leggere dalla funzione di accesso.</param>
      <typeparam name="T">Tipo di struttura.</typeparam>
      <returns>Numero di strutture lette in <paramref name="array" />. Questo valore può essere inferiore a <paramref name="count" /> se ci sono meno strutture disponibili o zero se viene raggiunta la fine della funzione di accesso.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> non dispone delle dimensioni sufficienti per contenere <paramref name="count" /> di strutture (a partire da <paramref name="position" />).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)">
      <summary>Legge un valore booleano dalla funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns>
        <see langword="true" /> o <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)">
      <summary>Legge un valore byte dalla funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns>Valore letto.</returns>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)">
      <summary>Legge un carattere dalla funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns>Valore letto.</returns>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)">
      <summary>Legge un valore decimale dalla funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns>Valore letto.</returns>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.
-oppure-
Il numero decimale da leggere non è valido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)">
      <summary>Restituisce un valore a virgola mobile con precisione doppia dalla funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns>Valore letto.</returns>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)">
      <summary>Legge un intero a 16 bit dalla funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns>Valore letto.</returns>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)">
      <summary>Legge un intero a 32 bit dalla funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns>Valore letto.</returns>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)">
      <summary>Legge un intero a 64 bit dalla funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns>Valore letto.</returns>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)">
      <summary>Legge un intero con segno a 8 bit dalla funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns>Valore letto.</returns>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)">
      <summary>Restituisce un valore a virgola mobile con precisione singola dalla funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns>Valore letto.</returns>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)">
      <summary>Legge un intero senza segno a 16 bit dalla funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns>Valore letto.</returns>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)">
      <summary>Legge un intero senza segno a 32 bit dalla funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns>Valore letto.</returns>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)">
      <summary>Legge un intero senza segno a 64 bit dalla funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la lettura.</param>
      <returns>Valore letto.</returns>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per leggere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)">
      <summary>Scrive un valore booleano nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)">
      <summary>Scrive un valore byte nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)">
      <summary>Scrive un carattere nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)">
      <summary>Scrive un valore decimale nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.
-oppure-
Il numero decimale non è valido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)">
      <summary>Scrive un valore <see langword="Double" /> nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)">
      <summary>Scrive un intero a 16 bit nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)">
      <summary>Scrive un intero a 32 bit nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)">
      <summary>Scrive un intero a 64 bit nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo la posizione per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)">
      <summary>Scrive un intero a 8 bit nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)">
      <summary>Scrive un valore <see langword="Single" /> nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)">
      <summary>Scrive un intero senza segno a 16 bit nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)">
      <summary>Scrive un intero senza segno a 32 bit nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)">
      <summary>Scrive un intero senza segno a 64 bit nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte dopo <paramref name="position" /> per scrivere un valore.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)">
      <summary>Scrive una struttura nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="structure">Struttura da scrivere.</param>
      <typeparam name="T">Tipo di struttura.</typeparam>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte nella funzione di accesso dopo <paramref name="position" /> per scrivere una struttura di tipo <paramref name="T" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)">
      <summary>Scrive strutture da una matrice di tipo <paramref name="T" /> nella funzione di accesso.</summary>
      <param name="position">Numero di byte nella funzione di accesso in corrispondenza del quale iniziare la scrittura.</param>
      <param name="array">Matrice da scrivere nella funzione di accesso.</param>
      <param name="offset">Indice in <paramref name="array" /> a partire dal quale iniziare la scrittura.</param>
      <param name="count">Numero di strutture in <paramref name="array" /> da scrivere.</param>
      <typeparam name="T">Tipo di struttura.</typeparam>
      <exception cref="T:System.ArgumentException">Non ci sono abbastanza byte nella funzione di accesso dopo <paramref name="position" /> per scrivere il numero di strutture specificato da <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> è minore di zero o maggiore della capacità della funzione di accesso.
-oppure-
<paramref name="offset" /> o <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La funzione di accesso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">La funzione di accesso è stata eliminata.</exception>
    </member>
    <member name="T:System.IO.UnmanagedMemoryStream">
      <summary>Fornisce l'accesso a blocchi di memoria non gestiti da codice gestito.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" />.</summary>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" /> usando la posizione e la dimensione di memoria specificate.</summary>
      <param name="pointer">Puntatore a una posizione di memoria non gestita.</param>
      <param name="length">Lunghezza della memoria da usare.</param>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone dell'autorizzazione richiesta.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="pointer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <paramref name="length" /> è minore di zero.
oppure
Il valore <paramref name="length" /> è sufficientemente grande da causare un overflow.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" /> usando la posizione, la lunghezza e la quantità totale di memoria e i valori di accesso ai file specificati.</summary>
      <param name="pointer">Puntatore a una posizione di memoria non gestita.</param>
      <param name="length">Lunghezza della memoria da usare.</param>
      <param name="capacity">Quantità totale di memoria assegnata al flusso.</param>
      <param name="access">Uno dei valori di <see cref="T:System.IO.FileAccess" />.</param>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone dell'autorizzazione richiesta.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="pointer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <paramref name="length" /> è minore di zero.
oppure
Il valore <paramref name="capacity" /> è minore di zero.
oppure
Il valore <paramref name="length" /> è maggiore del valore <paramref name="capacity" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" /> in un buffer sicuro, con un valore specificato di offset e lunghezza.</summary>
      <param name="buffer">Buffer che deve contenere il flusso di memoria non gestita.</param>
      <param name="offset">Posizione di byte nel buffer in corrispondenza della quale avviare il flusso di memoria non gestita.</param>
      <param name="length">Lunghezza del flusso di memoria non gestita.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" /> in un buffer sicuro, con un valore specificato di offset, lunghezza e accesso ai file.</summary>
      <param name="buffer">Buffer che deve contenere il flusso di memoria non gestita.</param>
      <param name="offset">Posizione di byte nel buffer in corrispondenza della quale avviare il flusso di memoria non gestita.</param>
      <param name="length">Lunghezza del flusso di memoria non gestita.</param>
      <param name="access">La modalità di accesso ai file al flusso di memoria non gestito.</param>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanRead">
      <summary>Ottiene un valore che indica se il flusso supporta la lettura.</summary>
      <returns>
        <see langword="false" /> se l'oggetto è stato creato da un costruttore con parametro <paramref name="access" /> che non include la lettura del flusso e se il flusso è chiuso; in caso contrario, <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanSeek">
      <summary>Ottiene un valore che indica se il flusso supporta la ricerca.</summary>
      <returns>
        <see langword="false" /> se il flusso è chiuso; in caso contrario, <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanWrite">
      <summary>Ottiene un valore che indica se il flusso supporta la scrittura.</summary>
      <returns>
        <see langword="false" /> se l'oggetto è stato creato da un costruttore con un valore di parametro <paramref name="access" /> che supporta la scrittura, se è stato creato da un costruttore senza parametri oppure se il flusso è chiuso; in caso contrario, <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Capacity">
      <summary>Ottiene la lunghezza (dimensione) del flusso o la quantità totale di memoria assegnata al flusso (capacità).</summary>
      <returns>La dimensione o la capacità del flusso.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.IO.UnmanagedMemoryStream" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Flush">
      <summary>Esegue l'override del metodo <see cref="M:System.IO.Stream.Flush" /> in modo che non venga effettuata alcuna operazione.</summary>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Esegue l'override del metodo <see cref="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" /> in modo che, se specificato, l'operazione venga annullata, ma non vengano eseguite altre azioni.</summary>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scaricamento asincrona.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" /> usando un puntatore a una posizione di memoria non gestita.</summary>
      <param name="pointer">Puntatore a una posizione di memoria non gestita.</param>
      <param name="length">Lunghezza della memoria da usare.</param>
      <param name="capacity">Quantità totale di memoria assegnata al flusso.</param>
      <param name="access">Uno dei valori di <see cref="T:System.IO.FileAccess" />.</param>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone dell'autorizzazione richiesta.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="pointer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <paramref name="length" /> è minore di zero.
oppure
Il valore <paramref name="capacity" /> è minore di zero.
oppure
Il valore <paramref name="length" /> è sufficientemente grande da causare un overflow.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.UnmanagedMemoryStream" /> in un buffer sicuro, con un valore specificato di offset, lunghezza e accesso ai file.</summary>
      <param name="buffer">Buffer che deve contenere il flusso di memoria non gestita.</param>
      <param name="offset">Posizione di byte nel buffer in corrispondenza della quale avviare il flusso di memoria non gestita.</param>
      <param name="length">Lunghezza del flusso di memoria non gestita.</param>
      <param name="access">La modalità di accesso ai file al flusso di memoria non gestito.</param>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Length">
      <summary>Ottiene la lunghezza dei dati in un flusso.</summary>
      <returns>La lunghezza dei dati nel flusso.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Position">
      <summary>Ottiene o imposta la posizione corrente nel flusso.</summary>
      <returns>Posizione corrente all'interno del flusso.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La posizione viene impostata su un valore minore di zero oppure la posizione è maggiore del campo <see cref="F:System.Int32.MaxValue" /> o restituisce un overflow durante l'aggiunta al puntatore corrente.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.PositionPointer">
      <summary>Ottiene o imposta un puntatore byte al flusso in base alla posizione corrente nel flusso.</summary>
      <returns>Puntatore byte.</returns>
      <exception cref="T:System.IndexOutOfRangeException">La posizione corrente è maggiore della capacità del flusso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La posizione che si sta tentando di impostare non è una posizione valida nel flusso corrente.</exception>
      <exception cref="T:System.IO.IOException">Si sta tentando di impostare il puntatore su un valore inferiore alla posizione iniziale del flusso.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso è stato inizializzato per l'uso con <see cref="T:System.Runtime.InteropServices.SafeBuffer" />. La proprietà <see cref="P:System.IO.UnmanagedMemoryStream.PositionPointer" /> è valida solo per flussi inizializzati con un puntatore <see cref="T:System.Byte" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Legge il numero di byte specificato in una matrice specificata.</summary>
      <param name="buffer">Quando questo metodo viene restituito, contiene la matrice di byte specificata con i valori compresi tra <paramref name="offset" /> e (<paramref name="offset" /> + <paramref name="count" /> - 1) sostituiti con i byte letti dall'origine corrente. Questo parametro viene passato non inizializzato.</param>
      <param name="offset">Offset dei byte in base zero in <paramref name="buffer" /> in corrispondenza del quale iniziare l'archiviazione dei dati letti dal flusso corrente.</param>
      <param name="count">Numero massimo di byte da leggere dal flusso corrente.</param>
      <returns>Numero complessivo di byte letti nel buffer. È possibile che questo numero sia inferiore a quello dei byte richiesti se la quantità di byte disponibili è minore oppure che corrisponda a zero (0) se è stata raggiunta la fine del flusso.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">La memoria sottostante non supporta la lettura.
oppure
La proprietà <see cref="P:System.IO.UnmanagedMemoryStream.CanRead" /> è impostata su <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="buffer" /> viene impostato su <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="offset" /> è minore di zero.
oppure
Il parametro <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza della matrice del buffer meno il parametro <paramref name="offset" /> è minore del parametro <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Read(System.Span{System.Byte})">
      <summary>Legge tutti i byte di questo flusso di memoria non gestita nell'intervallo di byte specificato.</summary>
      <param name="destination">Quando questo metodo viene restituito, l'intervallo contiene tutti i byte provenienti dal flusso di memoria non gestita.</param>
      <returns>Numero complessivo di byte letti nella destinazione.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Legge in modalità asincrona il numero di byte specificato nella matrice specificata.</summary>
      <param name="buffer">Buffer in cui scrivere i dati.</param>
      <param name="offset">Offset dei byte in <paramref name="buffer" /> da cui iniziare la scrittura dei dati dal flusso.</param>
      <param name="count">Numero massimo di byte da leggere.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro di <paramref name="TResult" /> contiene il numero totale di byte letti nel buffer. Il valore del risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a 0 (zero) se è stata raggiunta la fine del flusso.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Legge in modo asincrono i byte del flusso di memoria non gestita nell'area di memoria.</summary>
      <param name="buffer">Al termine del metodo asincrono, questa area di memoria contiene tutti i byte letti dal flusso di memoria non gestita.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona e incapsula il numero totale di byte letti nel buffer.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadByte">
      <summary>Legge un byte dal flusso e sposta in avanti la posizione corrente all'interno del flusso di un byte o restituisce -1 se si trova alla fine del flusso.</summary>
      <returns>Byte senza segno di cui è stato eseguito il cast a un tipo <see cref="T:System.Int32" /> o -1 se alla fine del flusso.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">La memoria sottostante non supporta la lettura.
oppure
La posizione corrente è alla fine del flusso.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Imposta la posizione corrente del flusso corrente sul valore dato.</summary>
      <param name="offset">Punto rispetto a <c>origin</c> da cui avviare la ricerca.</param>
      <param name="loc">Specifica l'inizio, la fine o la posizione corrente come punto di riferimento per <c>origin</c>, usando un valore di tipo <see cref="T:System.IO.SeekOrigin" />.</param>
      <returns>Nuova posizione all'interno del flusso.</returns>
      <exception cref="T:System.IO.IOException">È stato eseguito un tentativo di ricerca prima dell'inizio del flusso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <paramref name="offset" /> è maggiore della dimensione massima del flusso.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="loc" /> non è valido.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.SetLength(System.Int64)">
      <summary>Imposta la lunghezza di un flusso al valore specificato.</summary>
      <param name="value">Lunghezza del flusso.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">La memoria sottostante non supporta la scrittura.
oppure
È stato eseguito un tentativo di scrittura nel flusso e la proprietà <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> è <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="value" /> specificato supera la capacità del flusso.
oppure
Il parametro <paramref name="value" /> specificato è negativo.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Scrive un blocco di byte nel flusso corrente usando dati da un buffer.</summary>
      <param name="buffer">Matrice di byte da cui copiare i byte nel flusso corrente.</param>
      <param name="offset">Offset nel buffer da cui avviare la copia dei byte nel flusso corrente.</param>
      <param name="count">Numero di byte da scrivere nel flusso corrente.</param>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">La memoria sottostante non supporta la scrittura.
oppure
È stato eseguito un tentativo di scrittura nel flusso e la proprietà <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> è <see langword="false" />.
oppure
Il valore <paramref name="count" /> è maggiore della capacità del flusso.
oppure
La posizione è alla fine della capacità del flusso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Uno dei parametri specificati è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="offset" /> meno la lunghezza del parametro <paramref name="buffer" /> è minore del parametro <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="buffer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Scrive un blocco di byte nel flusso di memoria non gestita corrente usando i dati dell'intervallo di byte specificato.</summary>
      <param name="source">Intervallo di byte da cui copiare i byte nel flusso di memoria non gestita corrente.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono una sequenza di byte nel flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte scritti e monitora le richieste di annullamento.</summary>
      <param name="buffer">Buffer da cui scrivere i dati.</param>
      <param name="offset">Offset dei byte in base zero in <paramref name="buffer" /> da cui iniziare la copia dei byte nel flusso.</param>
      <param name="count">Numero massimo di byte da scrivere.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono un intervallo di byte nel flusso corrente, fa avanzare la posizione corrente all'interno del flusso in base al numero di byte scritti e monitora le richieste di annullamento.</summary>
      <param name="buffer">Buffer da cui scrivere i dati.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)">
      <summary>Scrive un byte nella posizione corrente all'interno del flusso di file.</summary>
      <param name="value">Valore byte scritto nel flusso.</param>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">La memoria sottostante non supporta la scrittura.
oppure
È stato eseguito un tentativo di scrittura nel flusso e la proprietà <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> è <see langword="false" />.
oppure
La posizione corrente è alla fine della capacità del flusso.</exception>
      <exception cref="T:System.IO.IOException">Il parametro <paramref name="value" /> fornito provoca il superamento della capacità massima del flusso.</exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.IDispatchConstantAttribute">
      <summary>Indica che il valore predefinito per il campo o il parametro con attributi è un'istanza di <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />, in cui la proprietà <see cref="P:System.Runtime.InteropServices.DispatchWrapper.WrappedObject" /> è <see langword="null" />.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IDispatchConstantAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.IDispatchConstantAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.IDispatchConstantAttribute.Value">
      <summary>Ottiene la costante <see langword="IDispatch" /> memorizzata in questo attributo.</summary>
      <returns>Costante <see langword="IDispatch" /> memorizzata in questo attributo. <see langword="null" /> è l'unico valore consentito per un valore della costante <see langword="IDispatch" />.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IUnknownConstantAttribute">
      <summary>Indica che il valore predefinito per il campo o il parametro con attributi è un'istanza di <see cref="T:System.Runtime.InteropServices.UnknownWrapper" />, in cui la proprietà <see cref="P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject" /> è <see langword="null" />. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IUnknownConstantAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.IUnknownConstantAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.IUnknownConstantAttribute.Value">
      <summary>Ottiene la costante <see langword="IUnknown" /> memorizzata in questo attributo.</summary>
      <returns>Costante <see langword="IUnknown" /> memorizzata in questo attributo. <see langword="null" /> è l'unico valore consentito per un valore della costante <see langword="IUnknown" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute">
      <summary>Consente a un metodo non gestito di chiamare un metodo gestito.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ArrayWithOffset">
      <summary>Incapsula una matrice e un offset all'interno della matrice specificata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.#ctor(System.Object,System.Int32)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <param name="array">Matrice gestita.</param>
      <param name="offset">Offset in byte dell'elemento da passare mediante chiamata alla piattaforma.</param>
      <exception cref="T:System.ArgumentException">La matrice è maggiore di 2 GB.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Object)">
      <summary>Indica se l'oggetto specificato corrisponde alla struttura <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
      <returns>
        <see langword="true" /> se l'oggetto corrisponde a questa struttura <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Runtime.InteropServices.ArrayWithOffset)">
      <summary>Indica se l'oggetto specificato <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> corrisponde all'istanza corrente.</summary>
      <param name="obj">Oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> da confrontare con questa istanza.</param>
      <returns>
        <see langword="true" /> se l’oggetto specificato <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />corrisponde all'istanza corrente; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetArray">
      <summary>Restituisce la matrice gestita cui questa struttura <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> fa riferimento.</summary>
      <returns>Matrice gestita cui questa istanza fa riferimento.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetHashCode">
      <summary>Restituisce un codice hash per questo tipo di valore.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetOffset">
      <summary>Restituisce l'offset fornito al momento della costruzione di questa struttura <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <returns>Offset per questa istanza.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)">
      <summary>Determina se due oggetti <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> specificati hanno lo stesso valore.</summary>
      <param name="a">Oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> da confrontare con il parametro <paramref name="b" />.</param>
      <param name="b">Oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> da confrontare con il parametro <paramref name="a" />.</param>
      <returns>
        <see langword="true" /> se il valore di <paramref name="a" /> è uguale al valore di <paramref name="b" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)">
      <summary>Determina se due oggetti <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> specificati non hanno lo stesso valore.</summary>
      <param name="a">Oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> da confrontare con il parametro <paramref name="b" />.</param>
      <param name="b">Oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> da confrontare con il parametro <paramref name="a" />.</param>
      <returns>
        <see langword="true" /> se il valore di <paramref name="a" /> non è uguale al valore di <paramref name="b" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.AutomationProxyAttribute">
      <summary>Specifica se il marshalling del tipo deve essere effettuato mediante il gestore di marshalling di Automazione oppure un proxy e uno stub personalizzati.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.AutomationProxyAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.AutomationProxyAttribute" />.</summary>
      <param name="val">Il valore è <see langword="true" />, se il marshalling della classe deve essere effettuato utilizzando il gestore di marshalling di automazione; <see langword="false" />, se è necessario utilizzare un gestore di marshalling di stub proxy.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.AutomationProxyAttribute.Value">
      <summary>Ottiene un valore che indica il tipo di gestore di marshalling da utilizzare.</summary>
      <returns>Il valore è <see langword="true" />, se il marshalling della classe deve essere effettuato utilizzando il gestore di marshalling di automazione; <see langword="false" />, se è necessario utilizzare un gestore di marshalling di stub proxy.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.BestFitMappingAttribute">
      <summary>Controlla se i caratteri Unicode vengono convertiti nei caratteri ANSI corrispondenti più vicini.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.BestFitMappingAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.BestFitMappingAttribute" /> impostata sul valore della proprietà <see cref="P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping" />.</summary>
      <param name="BestFitMapping">
        <see langword="true" /> per indicare che è abilitato il mapping più appropriato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping">
      <summary>Ottiene il comportamento di mapping più appropriato quando si convertono i caratteri Unicode in caratteri ANSI.</summary>
      <returns>
        <see langword="true" /> se è attivato il mapping più appropriato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="F:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar">
      <summary>Abilita o disabilita la generazione di un'eccezione su un carattere Unicode di cui non è possibile eseguire il mapping convertito in un carattere ANSI "?".</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.BStrWrapper">
      <summary>Esegue il marshalling dei dati di tipo <see langword="VT_BSTR" /> dal codice gestito al codice non gestito. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.BStrWrapper" /> con l'oggetto <see cref="T:System.Object" /> specificato.</summary>
      <param name="value">Oggetto da includere e sottoporre a marshalling come <see langword="VT_BSTR" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.BStrWrapper" /> con l'oggetto <see cref="T:System.String" /> specificato.</summary>
      <param name="value">Oggetto da includere e sottoporre a marshalling come <see langword="VT_BSTR" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.BStrWrapper.WrappedObject">
      <summary>Ottiene l'oggetto <see cref="T:System.String" /> incluso da sottoporre a marshalling come tipo <see langword="VT_BSTR" />.</summary>
      <returns>Oggetto di cui è stato eseguito il wrapping da <see cref="T:System.Runtime.InteropServices.BStrWrapper" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.CallingConvention">
      <summary>Specifica la convenzione di chiamata necessaria per chiamare i metodi implementati nel codice non gestito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.Cdecl">
      <summary>Il chiamante esegue la pulizia dello stack. Questa operazione attiva funzioni chiamanti con <see langword="varargs" />, pertanto può essere utilizzata per metodi che accettano un numero variabile di parametri, ad esempio <see langword="Printf" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.FastCall">
      <summary>Questa convenzione di chiamata non è supportata.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.StdCall">
      <summary>Il chiamato esegue la pulizia dello stack. Si tratta della convenzione predefinita per chiamare funzioni non gestite tramite platform invoke.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.ThisCall">
      <summary>Il primo parametro è il puntatore <see langword="this" /> ed è archiviato in ECX del Registro di sistema. Altri parametri vengono inseriti nello stack. Questa convenzione di chiamata viene utilizzata per chiamare metodi su classi esportate da una DLL non gestita.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.Winapi">
      <summary>In realtà il membro non è una convenzione di chiamata, ma utilizza la convenzione di chiamata predefinita di platform invoke. In Windows, ad esempio, l'impostazione predefinita è <see cref="F:System.Runtime.InteropServices.CallingConvention.StdCall" />, mentre in Windows CE .NET è <see cref="F:System.Runtime.InteropServices.CallingConvention.Cdecl" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ClassInterfaceAttribute">
      <summary>Indica il tipo di interfaccia di classe da generare per una classe esposta a COM, se viene generata un'interfaccia.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Int16)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> con il valore di enumerazione <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> specificato.</summary>
      <param name="classInterfaceType">Descrive il tipo di interfaccia generata per una classe.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> con il membro di enumerazione <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> specificato.</summary>
      <param name="classInterfaceType">Uno dei valori <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> che descrive il tipo di interfaccia generato per una classe.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ClassInterfaceAttribute.Value">
      <summary>Ottiene il valore <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> che descrive il tipo di interfaccia che deve essere generato per la classe.</summary>
      <returns>Valore <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> che descrive il tipo di interfaccia che deve essere generato per la classe.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ClassInterfaceType">
      <summary>Identifica il tipo di interfaccia di classe generata per una classe.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch">
      <summary>Indica che la classe supporta solo l'associazione tardiva dei client COM. Una <see langword="dispinterface" /> per la classe viene esposta automaticamente ai client COM su richiesta. La libreria dei tipi prodotta da Tlbexp.exe (utilità di esportazione della libreria dei tipi) non contiene informazioni sui tipi per <see langword="dispinterface" /> allo scopo di impedire ai client di memorizzare nella cache i DISPID dell'interfaccia. La <see langword="dispinterface" /> non mostra i problemi di controllo delle versioni descritti in <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> perché i client possono eseguire soltanto l'associazione tardiva all'interfaccia.
Questa è l'impostazione predefinita per <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDual">
      <summary>Indica che un'interfaccia di classe duale viene generata automaticamente per la classe ed esposta a COM. Le informazioni sul tipo sono prodotte per l'interfaccia di classe e pubblicate nella libreria dei tipi. L'utilizzo di <see langword="AutoDual" /> è fortemente sconsigliato a causa delle limitazioni nel controllo delle versioni descritte in <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.None">
      <summary>Indica che per la classe non viene generata alcuna interfaccia di classe. Se nessuna interfaccia viene implementata in modo esplicito, la classe può fornire solo accesso ad associazione tardiva tramite l'interfaccia <see langword="IDispatch" />. Si tratta dell'impostazione consigliata per <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />. L'utilizzo di <see langword="ClassInterfaceType.None" /> è l'unico modo per l'esporre la funzionalità tramite interfacce implementate in modo esplicito dalla classe.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CoClassAttribute">
      <summary>Specifica l'identificatore di classe di una coclasse importata da una libreria dei tipi.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CoClassAttribute.#ctor(System.Type)">
      <summary>Inizializza la nuova istanza di <see cref="T:System.Runtime.InteropServices.CoClassAttribute" /> con l'ID di classe della coclasse originale.</summary>
      <param name="coClass">Oggetto <see cref="T:System.Type" /> che contiene l'identificatore di classe della coclasse originale.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.CoClassAttribute.CoClass">
      <summary>Ottiene l'identificatore di classe della coclasse originale.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che contiene l'identificatore di classe della coclasse originale.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComAliasNameAttribute">
      <summary>Indica l'alias COM per un tipo di parametro o campo.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAliasNameAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComAliasNameAttribute" /> con l'alias del parametro o del campo con attributi.</summary>
      <param name="alias">L'alias del campo o del parametro così come riportato nella libreria dei tipi al momento dell'importazione.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAliasNameAttribute.Value">
      <summary>Ottiene l'alias del campo o del parametro così come riportato nella libreria dei tipi al momento dell'importazione.</summary>
      <returns>L'alias del campo o del parametro così come riportato nella libreria dei tipi al momento dell'importazione.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComAwareEventInfo">
      <summary>Consente la registrazione ad associazione tardiva di un gestore eventi.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> utilizzando il tipo specificato e un nome dell'evento nel tipo.</summary>
      <param name="type">Tipo di oggetto.</param>
      <param name="eventName">Nome di un evento in <paramref name="type" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
      <summary>Associa un gestore dell'evento a un oggetto COM.</summary>
      <param name="target">Oggetto di destinazione al quale deve essere associato il delegato dell'evento.</param>
      <param name="handler">Delegato dell'evento.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes">
      <summary>Ottiene gli attributi per questo evento.</summary>
      <returns>Attributi di sola lettura per questo evento.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType">
      <summary>Ottiene la classe che dichiara questo membro.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> per la classe che dichiara questo membro.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
      <summary>Ottiene il metodo utilizzato per aggiungere un delegato del gestore dell'evento all'origine evento.</summary>
      <param name="nonPublic">
        <see langword="true" /> per restituire metodi non pubblici; in caso contrario, <see langword="false" />.</param>
      <returns>Metodo utilizzato per aggiungere un delegato del gestore dell'evento all'origine evento.</returns>
      <exception cref="T:System.MethodAccessException">
        <paramref name="nonPublic" /> è <see langword="true" /> e il metodo utilizzato per aggiungere un delegato del gestore eventi non è pubblico, ma il chiamante non dispone dell'autorizzazione per la reflection su metodi non pubblici.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
      <summary>Se sottoposto a override in una classe derivata, ottiene una matrice contenente tutti gli attributi personalizzati applicati a questo membro.</summary>
      <param name="inherit">
        <see langword="true" /> per eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi; in caso contrario, <see langword="false" />.</param>
      <returns>Matrice contenente tutti gli attributi personalizzati o matrice che non dispone di alcun elemento se non è stato definito alcun attributo.</returns>
      <exception cref="T:System.InvalidOperationException">Questo membro appartiene a un tipo caricato nel contesto Reflection-Only. Vedere: Procedura: Caricare assembly nel contesto Reflection-Only.</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile caricare un tipo di attributo personalizzato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Se sottoposto a override in una classe derivata, ottiene una matrice contenente tutti gli attributi personalizzati del tipo specificato applicati a questo membro.</summary>
      <param name="attributeType">Tipo di attributo da cercare. Possono venire restituiti solo gli attributi assegnabili a questo tipo.</param>
      <param name="inherit">
        <see langword="true" /> per eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi; in caso contrario, <see langword="false" />.</param>
      <returns>Matrice contenente tutti gli attributi personalizzati del tipo specificato o matrice che non dispone di alcun elemento se non è stato definito alcun attributo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Questo membro appartiene a un tipo caricato nel contesto Reflection-Only. Vedere How to: Caricare assembly nel contesto Reflection-Only</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile caricare un tipo di attributo personalizzato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributesData">
      <summary>Restituisce un elenco di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> per l'oggetto <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />corrente.</summary>
      <returns>Elenco generico di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati relativi agli attributi applicati al <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> corrente.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetOtherMethods(System.Boolean)">
      <summary>Restituisce i metodi pubblici o non pubblici associati a un evento nei metadati.</summary>
      <param name="nonPublic">
        <see langword="true" /> per includere i metodi non pubblici; in caso contrario,<see langword="false" />.</param>
      <returns>Matrice che rappresenta i metodi associati all'evento nei metadati. In assenza di metodi con queste caratteristiche, viene restituita una matrice vuota.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
      <summary>Se sottoposto a override in una classe derivata, restituisce il metodo chiamato quando è stato generato l'evento.</summary>
      <param name="nonPublic">
        <see langword="true" /> per restituire metodi non pubblici; in caso contrario, <see langword="false" />.</param>
      <returns>Oggetto chiamato quando è stato generato l'evento.</returns>
      <exception cref="T:System.MethodAccessException">
        <paramref name="nonPublic" /> è <see langword="true" /> e il metodo utilizzato per aggiungere un delegato del gestore eventi non è pubblico, ma il chiamante non dispone dell'autorizzazione per la reflection su metodi non pubblici.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
      <summary>Se sottoposto a override in una classe derivata, recupera l'oggetto <see cref="T:System.Reflection.MethodInfo" /> per la rimozione di un metodo dell'evento.</summary>
      <param name="nonPublic">
        <see langword="true" /> per restituire metodi non pubblici; in caso contrario, <see langword="false" />.</param>
      <returns>Metodo utilizzato per rimuovere un delegato del gestore dell'evento dall'origine eventi.</returns>
      <exception cref="T:System.MethodAccessException">
        <paramref name="nonPublic" /> è <see langword="true" /> e il metodo utilizzato per aggiungere un delegato del gestore eventi non è pubblico, ma il chiamante non dispone dell'autorizzazione per la reflection su metodi non pubblici.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
      <summary>Indica se una o più istanze dell'attributo specificato sono applicate al membro.</summary>
      <param name="attributeType">Tipo di attributo da cercare.</param>
      <param name="inherit">
        <see langword="true" /> per eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi; in caso contrario, <see langword="false" />.</param>
      <returns>
        <see langword="true" /> se l'attributo specificato è stato applicato a questo membro. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.MetadataToken">
      <summary>Ottiene il token di metadati associato all'oggetto <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> corrente.</summary>
      <returns>Intero A 32 bit che rappresenta il token di metadati.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Module">
      <summary>Ottiene il modulo associato all'oggetto <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> corrente.</summary>
      <returns>Modulo associato all'oggetto corrente <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> .</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Name">
      <summary>Ottiene il nome del membro corrente.</summary>
      <returns>Nome del membro.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType">
      <summary>Ottiene l'oggetto classe utilizzato per inizializzare questa istanza.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> utilizzato per inizializzare l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
      <summary>Scollega un gestore eventi da un oggetto COM.</summary>
      <param name="target">Oggetto di destinazione a cui è associato il delegato dell'evento.</param>
      <param name="handler">Delegato dell'evento.</param>
      <exception cref="T:System.InvalidOperationException">L'evento non ha una funzione di accesso <see langword="remove" /> pubblica.</exception>
      <exception cref="T:System.ArgumentException">Non è possibile usare il gestore passato.</exception>
      <exception cref="T:System.Reflection.TargetException">In .NET per app di Windows Store o nella libreria di classi portabile rilevare invece l'eccezione <see cref="T:System.Exception" />.  
  

            
  
 Il parametro <paramref name="target" /> è <see langword="null" /> e l'evento non è statico.  
  
-oppure- 
L'oggetto <see cref="T:System.Reflection.EventInfo" /> non è dichiarato nella destinazione.</exception>
      <exception cref="T:System.MethodAccessException">In .NET per app di Windows Store o nella libreria di classi portabile rilevare invece l'eccezione della classe di base, <see cref="T:System.MemberAccessException" />.  
  

            
  
 Il chiamante non ha l'autorizzazione necessaria per accedere al membro.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.ComCompatibleVersionAttribute">
      <summary>Indica a un client COM che tutte le classi della versione corrente di un assembly sono compatibili con le classi della versione precedente.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComCompatibleVersionAttribute.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComCompatibleVersionAttribute" /> con i numeri di versione principale e secondaria, di build e di revisione dell'assembly.</summary>
      <param name="major">Numero della versione principale dell'assembly.</param>
      <param name="minor">Numero della versione secondaria dell'assembly.</param>
      <param name="build">Numero di build dell'assembly.</param>
      <param name="revision">Numero di revisione dell'assembly.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.BuildNumber">
      <summary>Ottiene il numero di build dell'assembly.</summary>
      <returns>Numero di build dell'assembly.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.MajorVersion">
      <summary>Ottiene il numero della versione principale dell'assembly.</summary>
      <returns>Numero della versione principale dell'assembly.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.MinorVersion">
      <summary>Ottiene il numero della versione secondaria dell'assembly.</summary>
      <returns>Numero della versione secondaria dell'assembly.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.RevisionNumber">
      <summary>Ottiene il numero di revisione dell'assembly.</summary>
      <returns>Numero di revisione dell'assembly.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComConversionLossAttribute">
      <summary>Indica che le informazioni relative a una classe o a un'interfaccia sono state perse durante l'importazione da una libreria dei tipi in un assembly.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComConversionLossAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see langword="ComConversionLossAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute">
      <summary>Specifica un'interfaccia predefinita da esporre a COM. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComDefaultInterfaceAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute" /> con l'oggetto <see cref="T:System.Type" /> specificato impostato come interfaccia predefinita esposta a COM.</summary>
      <param name="defaultInterface">Valore <see cref="T:System.Type" /> che indica l'interfaccia predefinita da esporre a COM.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComDefaultInterfaceAttribute.Value">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> che specifica l'interfaccia predefinita da esporre a COM.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che specifica l'interfaccia predefinita da esporre a COM.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
      <summary>Identifica l'interfaccia di origine e la classe che implementa i metodi dell'interfaccia eventi generata quando si importa una coclasse da una libreria dei tipi COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventInterfaceAttribute.#ctor(System.Type,System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" /> con la classe dell'interfaccia di origine e del provider di eventi.</summary>
      <param name="SourceInterface">
        <see cref="T:System.Type" /> che contiene l'originale interfaccia di origine della libreria dei tipi. COM utilizza questa interfaccia per richiamare la classe gestita.</param>
      <param name="EventProvider">
        <see cref="T:System.Type" /> che contiene la classe che implementa i metodi dell'interfaccia eventi.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider">
      <summary>Ottiene la classe che implementa i metodi dell'interfaccia eventi.</summary>
      <returns>
        <see cref="T:System.Type" /> che contiene la classe che implementa i metodi dell'interfaccia eventi.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.SourceInterface">
      <summary>Ottiene l'originale interfaccia di origine dalla libreria dei tipi.</summary>
      <returns>
        <see cref="T:System.Type" /> contenente l'interfaccia di origine.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComEventsHelper">
      <summary>Fornisce metodi che consentono l'aggiunta e la rimozione dagli oggetti COM di delegati di .NET Framework che gestiscono gli eventi.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventsHelper.Combine(System.Object,System.Guid,System.Int32,System.Delegate)">
      <summary>Aggiunge un delegato all'elenco chiamate di eventi che provengono da un oggetto COM.</summary>
      <param name="rcw">Oggetto COM che lancia gli eventi ai quali il chiamante vorrebbe rispondere.</param>
      <param name="iid">Identificatore dell'interfaccia di origine utilizzata dall'oggetto COM per lanciare gli eventi.</param>
      <param name="dispid">Identificatore di invio del metodo sull'interfaccia di origine.</param>
      <param name="d">Delegato da richiamare al lancio dell'evento COM.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventsHelper.Remove(System.Object,System.Guid,System.Int32,System.Delegate)">
      <summary>Rimuove un delegato dall'elenco chiamate di un evento generato da un oggetto COM.</summary>
      <param name="rcw">Oggetto COM a cui il delegato è associato.</param>
      <param name="iid">Identificatore dell'interfaccia di origine utilizzata dall'oggetto COM per lanciare gli eventi.</param>
      <param name="dispid">Identificatore di invio del metodo sull'interfaccia di origine.</param>
      <param name="d">Delegato da rimuovere dall'elenco delle chiamate.</param>
      <returns>Delegato rimosso dall'elenco delle chiamate.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.COMException">
      <summary>Eccezione generata quando viene restituito un HRESULT non riconosciuto da una chiamata a un metodo COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.COMException" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.COMException" /> da dati di serializzazione.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati oggetto serializzati.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che fornisce le informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.COMException" /> con un messaggio specificato.</summary>
      <param name="message">Messaggio che indica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.COMException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.COMException" /> con un messaggio e il codice di errore specificati.</summary>
      <param name="message">Messaggio che indica il motivo per il quale è stata generata l'eccezione.</param>
      <param name="errorCode">Valore del codice di errore (HRESULT) associato a questa eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.ToString">
      <summary>Converte il contenuto dell'eccezione in una stringa.</summary>
      <returns>Stringa contenente le proprietà <see cref="P:System.Exception.HResult" />, <see cref="P:System.Exception.Message" />, <see cref="P:System.Exception.InnerException" /> e <see cref="P:System.Exception.StackTrace" /> dell'eccezione.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComImportAttribute">
      <summary>Indica che il tipo a cui è stato applicato l'attributo è stato definito in precedenza in COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComImportAttribute.#ctor">
      <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComInterfaceType">
      <summary>Identifica come esporre un'interfaccia a COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual">
      <summary>Indica che l'interfaccia viene esposta a COM come interfaccia duale, consentendo così l'associazione anticipata e tardiva. <see cref="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual" /> è il valore predefinito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIDispatch">
      <summary>Indica che un'interfaccia viene esposta a COM come interfaccia dispatch, consentendo così solo l'associazione tardiva.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIInspectable">
      <summary>Indica che un'interfaccia viene esposta a COM come interfaccia Windows Runtime.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown">
      <summary>Indica che un'interfaccia viene esposta a COM come interfaccia derivante da IUnknown, consentendo così solo l'associazione anticipata.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComMemberType">
      <summary>Descrive il tipo di un membro COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.Method">
      <summary>Il membro è un metodo normale.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.PropGet">
      <summary>Il membro ottiene le proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.PropSet">
      <summary>Il membro imposta le proprietà.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute">
      <summary>Specifica il metodo da chiamare quando si registra un assembly per l'utilizzo in COM; questo metodo consente l'esecuzione di codice scritto dall'utente durante la procedura di registrazione.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComRegisterFunctionAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
      <summary>Identifica un elenco di interfacce esposte come origini di eventi COM per la classe con attributi.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> con il nome dell'interfaccia di origine eventi.</summary>
      <param name="sourceInterfaces">Elenco delimitato da valori null di nomi completi di interfacce di origine eventi.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> con il tipo da utilizzare come interfaccia di origine.</summary>
      <param name="sourceInterface">Tipo <see cref="T:System.Type" /> dell'interfaccia di origine.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> con i tipi da utilizzare come interfacce di origine.</summary>
      <param name="sourceInterface1">Tipo <see cref="T:System.Type" /> dell'interfaccia di origine predefinita.</param>
      <param name="sourceInterface2">Tipo <see cref="T:System.Type" /> di un'interfaccia di origine.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type)">
      <summary>Inizializza una nuova istanza della classe <see langword="ComSourceInterfacesAttribute" /> con i tipi da utilizzare come interfacce di origine.</summary>
      <param name="sourceInterface1">Tipo <see cref="T:System.Type" /> dell'interfaccia di origine predefinita.</param>
      <param name="sourceInterface2">Tipo <see cref="T:System.Type" /> di un'interfaccia di origine.</param>
      <param name="sourceInterface3">Tipo <see cref="T:System.Type" /> di un'interfaccia di origine.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> con i tipi da utilizzare come interfacce di origine.</summary>
      <param name="sourceInterface1">Tipo <see cref="T:System.Type" /> dell'interfaccia di origine predefinita.</param>
      <param name="sourceInterface2">Tipo <see cref="T:System.Type" /> di un'interfaccia di origine.</param>
      <param name="sourceInterface3">Tipo <see cref="T:System.Type" /> di un'interfaccia di origine.</param>
      <param name="sourceInterface4">Tipo <see cref="T:System.Type" /> di un'interfaccia di origine.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComSourceInterfacesAttribute.Value">
      <summary>Ottiene il nome completo dell'interfaccia di origine eventi.</summary>
      <returns>Nome completo dell'interfaccia di origine eventi.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ADVF">
      <summary>Specifica il comportamento richiesto durante l'impostazione di un sink di notifica o una connessione con memorizzazione nella cache con un oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_DATAONSTOP">
      <summary>Per connessioni consultive di dati, assicura l'accessibilità ai dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_NODATA">
      <summary>Per le connessioni consultive di dati (<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> o <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />), questo flag richiede che l'oggetto dati non invii i dati quando chiama <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_ONLYONCE">
      <summary>Richiede che l'oggetto effettui una sola notifica di modifica o aggiornamento della cache prima di eliminare la connessione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_PRIMEFIRST">
      <summary>Richiede che l'oggetto non attenda la modifica dei dati o della visualizzazione prima di effettuare una chiamata iniziale al metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> (per connessioni consultive di dati o visualizzazione) o aggiornare la cache (per connessioni cache).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN">
      <summary>Questo valore viene utilizzato dalle applicazioni di oggetti DLL e gestori di oggetti che disegnano i propri oggetti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_NOHANDLER">
      <summary>Sinonimo di <see cref="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN" />, utilizzato più spesso.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_ONSAVE">
      <summary>Per le connessioni cache, questo flag aggiorna la rappresentazione nella cache solo quando viene salvato l'oggetto contenente la cache.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.BIND_OPTS">
      <summary>Archivia i parametri usati durante un'operazione di associazione del moniker.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.cbStruct">
      <summary>Specifica la dimensione, in byte, della struttura <see langword="BIND_OPTS" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.dwTickCountDeadline">
      <summary>Indica la quantità di tempo (tempo di clock in millisecondi, restituito dalla funzione <see langword="GetTickCount" />) specificata dal chiamante per completare l'operazione di associazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfFlags">
      <summary>Controlla gli aspetti delle operazioni di associazione del moniker.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfMode">
      <summary>Rappresenta i flag da utilizzare all'apertura del file che contiene l'oggetto identificato dal moniker.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.BINDPTR">
      <summary>Contiene un puntatore a una struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> o <see cref="T:System.Runtime.InteropServices.VARDESC" /> associata o a un'interfaccia <see langword="ITypeComp" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpfuncdesc">
      <summary>Rappresenta un puntatore a una struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lptcomp">
      <summary>Rappresenta un puntatore a un'interfaccia <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeComp" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpvardesc">
      <summary>Rappresenta un puntatore a una struttura <see cref="T:System.Runtime.InteropServices.VARDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
      <summary>Identifica la convenzione di chiamata usata da un metodo descritto in una struttura METHODDATA.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL">
      <summary>Indica che per un metodo viene usata la convenzione di chiamata CDECL (C Declaration).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MACPASCAL">
      <summary>Indica che per un metodo viene usata la convenzione di chiamata MACPASCAL (Macintosh Pascal).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MAX">
      <summary>Indica la fine dell'enumerazione <see cref="T:System.Runtime.InteropServices.ComTypes.CALLCONV" /> .</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWCDECL">
      <summary>Indica che per un metodo viene usata la convenzione di chiamata CDECL MPW (Macintosh Programmers' Workbench).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWPASCAL">
      <summary>Indica che per un metodo viene usata la convenzione di chiamata PASCAL MPW (Macintosh Programmers' Workbench).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MSCPASCAL">
      <summary>Indica che per un metodo viene usata la convenzione di chiamata MSCPASCAL (MSC Pascal).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_PASCAL">
      <summary>Indica che per un metodo viene usata la convenzione di chiamata Pascal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_RESERVED">
      <summary>Questo valore è riservato per l'uso futuro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_STDCALL">
      <summary>Indica che per un metodo viene usata la convenzione di chiamata standard (STDCALL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_SYSCALL">
      <summary>Indica che per un metodo viene usata la convenzione di chiamata SYSCALL standard.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.CONNECTDATA">
      <summary>Descrive una connessione esistente in un determinato punto di connessione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.dwCookie">
      <summary>Rappresenta un token di connessione restituito da una chiamata a <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.pUnk">
      <summary>Rappresenta un puntatore all'interfaccia <see langword="IUnknown" /> su un sink consultivo connesso. Il chiamante deve chiamare <see langword="IUnknown::Release" /> su questo puntatore quando la struttura <see langword="CONNECTDATA" /> non è più necessaria.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DATADIR">
      <summary>Specifica la direzione del flusso di dati nel parametro <paramref name="dwDirection" /> del metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />. Determina i formati che possono essere enumerati dall'enumeratore risultante.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_GET">
      <summary>Richiede che il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> fornisca un enumeratore per i formati che è possibile specificare nel metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_SET">
      <summary>Richiede che il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> fornisca un enumeratore per i formati che è possibile specificare nel metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DESCKIND">
      <summary>Identifica la descrizione del tipo da associare.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_FUNCDESC">
      <summary>Indica che è stata restituita una struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_IMPLICITAPPOBJ">
      <summary>Indica che è stato restituito un oggetto <see langword="IMPLICITAPPOBJ" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_MAX">
      <summary>Indica un marcatore di fine enumerazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_NONE">
      <summary>Indica che non è stata trovata alcuna corrispondenza.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_TYPECOMP">
      <summary>Indica che è stato restituito un oggetto <see langword="TYPECOMP" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_VARDESC">
      <summary>Indica che è stato restituito un oggetto <see langword="VARDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DISPPARAMS">
      <summary>Contiene gli argomenti passati a un metodo o una proprietà tramite <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.cArgs">
      <summary>Rappresenta il numero di argomenti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.cNamedArgs">
      <summary>Rappresenta il conteggio degli argomenti denominati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.rgdispidNamedArgs">
      <summary>Rappresenta gli ID dispatch degli argomenti denominati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.rgvarg">
      <summary>Rappresenta un riferimento alla matrice di argomenti.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DVASPECT">
      <summary>Specifica l'aspetto desiderato dei dati o della visualizzazione dell'oggetto durante il disegno o il recupero dei dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_CONTENT">
      <summary>Rappresentazione di un oggetto che consente la visualizzazione dell'oggetto stesso come incorporato all'interno di un contenitore. Questo valore è in genere specificato per gli oggetti documento compositi. La presentazione può essere fornita per lo schermo o la stampante.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_DOCPRINT">
      <summary>Rappresentazione di un oggetto sullo schermo come se fosse stampato da una stampante scegliendo Stampa dal menu File. I dati descritti possono rappresentare una sequenza di pagine.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_ICON">
      <summary>Rappresentazione in formato di icona di un oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_THUMBNAIL">
      <summary>Rappresentazione in formato anteprima di un oggetto che consente la visualizzazione dell'oggetto stesso in uno strumento di esplorazione. L'anteprima è una bitmap di circa 120 per 120 pixel, a 16 colori (consigliato), indipendente dal dispositivo, di cui può essere eseguito il wrapping in un metafile.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ELEMDESC">
      <summary>Contiene la descrizione del tipo e le informazioni sul trasferimento del processo per una variabile, una funzione o un parametro di funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.desc">
      <summary>Contiene informazioni relative a un elemento.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION">
      <summary>Contiene informazioni relative a un elemento.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION.idldesc">
      <summary>Contiene informazioni per la gestione remota dell'elemento.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION.paramdesc">
      <summary>Contiene informazioni relative al parametro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.tdesc">
      <summary>Identifica il tipo dell'elemento.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.EXCEPINFO">
      <summary>Descrive le eccezioni che si verificano durante <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrDescription">
      <summary>Descrive l'errore destinato al cliente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrHelpFile">
      <summary>Contiene l'unità, il percorso e il nome di file completi di un file della Guida contenente ulteriori informazioni sull'errore.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrSource">
      <summary>Indica il nome dell'origine dell'eccezione. In genere, corrisponde al nome di un'applicazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.dwHelpContext">
      <summary>Indica l'ID del contesto dell'argomento all'interno del file della Guida.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.pfnDeferredFillIn">
      <summary>Rappresenta un puntatore a una funzione che accetta una struttura <see cref="T:System.Runtime.InteropServices.EXCEPINFO" /> come argomento e restituisce un valore HRESULT. Se non è desiderato il riempimento rinviato, questo campo è impostato su <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.pvReserved">
      <summary>Il campo è riservato e deve essere impostato su <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.scode">
      <summary>Valore restituito che descrive l'errore.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.wCode">
      <summary>Rappresenta un codice di errore che identifica l'errore.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.wReserved">
      <summary>Il campo è riservato e deve essere impostato su 0.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FILETIME">
      <summary>Rappresenta il numero di intervalli da 100 nanosecondi trascorsi dal 1 gennaio 1601. Questa struttura è un valore a 64 bit.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FILETIME.dwHighDateTime">
      <summary>Specifica i 32 bit alti di <see langword="FILETIME" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FILETIME.dwLowDateTime">
      <summary>Specifica i 32 bit bassi di <see langword="FILETIME" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FORMATETC">
      <summary>Rappresenta un formato degli Appunti generalizzato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat">
      <summary>Specifica un determinato formato degli Appunti di interesse.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect">
      <summary>Specifica una delle costanti di enumerazione <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" /> che indica la quantità di dettagli che deve essere contenuta nel rendering.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex">
      <summary>Specifica parte dell'aspetto quando è necessario dividere i dati attraverso i limiti di pagina.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.ptd">
      <summary>Specifica un puntatore a una struttura <see langword="DVTARGETDEVICE" /> contenente informazioni sulla periferica di destinazione per la quale vengono composti i dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed">
      <summary>Specifica una delle costanti di enumerazione <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />, che indica il tipo di supporto di archiviazione utilizzato per trasferire i dati dell'oggetto.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCDESC">
      <summary>Definisce una descrizione della funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.callconv">
      <summary>Specifica la convenzione di chiamata di una funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cParams">
      <summary>Conta il numero totale di parametri.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cParamsOpt">
      <summary>Conta i parametri opzionali.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cScodes">
      <summary>Conta i valori restituiti consentiti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.elemdescFunc">
      <summary>Contiene il tipo restituito della funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.funckind">
      <summary>Specifica se la funzione è virtual, static o solo dispatch.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.invkind">
      <summary>Specifica il tipo di una funzione di proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.lprgelemdescParam">
      <summary>Indica la dimensione di <see cref="F:System.Runtime.InteropServices.FUNCDESC.cParams" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.lprgscode">
      <summary>Memorizza il numero di errori che una funzione può restituire su un sistema a 16 bit.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.memid">
      <summary>Identifica l'ID del membro funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.oVft">
      <summary>Specifica l'offset nella VTBL per <see cref="F:System.Runtime.InteropServices.FUNCKIND.FUNC_VIRTUAL" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.wFuncFlags">
      <summary>Indica il <see cref="T:System.Runtime.InteropServices.FUNCFLAGS" /> di una funzione.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCFLAGS">
      <summary>Identifica le costanti che definiscono le proprietà di una funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FBINDABLE">
      <summary>Funzione che supporta l'associazione dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDEFAULTBIND">
      <summary>Funzione che meglio rappresenta l'oggetto. L'attributo può essere applicato solo a una funzione in un tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDEFAULTCOLLELEM">
      <summary>Consente un'ottimizzazione nella quale il compilatore ricerca un membro denominato "xyz" sul tipo di "abc". Se tale membro viene individuato e gli viene assegnato un flag come funzione di accesso per un elemento dell'insieme predefinito, viene generata una chiamata alla funzione del membro. È consentito sui membri nelle interfacce dispatch e nelle interfacce, ma non sui moduli.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDISPLAYBIND">
      <summary>Funzione che viene visualizzata dall'utente come associabile. È inoltre necessario impostare <see cref="F:System.Runtime.InteropServices.FUNCFLAGS.FUNCFLAG_FBINDABLE" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FHIDDEN">
      <summary>La funzione non deve essere visualizzata all'utente, anche se è disponibile ed è associabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FIMMEDIATEBIND">
      <summary>Mappata come singole proprietà associabili.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FNONBROWSABLE">
      <summary>La proprietà viene visualizzata in un visualizzatore oggetti, ma non in un visualizzatore proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FREPLACEABLE">
      <summary>Inserisce dei tag nell'interfaccia in modo che abbia comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FREQUESTEDIT">
      <summary>Quando è impostato, qualsiasi chiamata a un metodo che imposta la proprietà determina anzitutto una chiamata a <see langword="IPropertyNotifySink::OnRequestEdit" />. L'implementazione di <see langword="OnRequestEdit" /> determina se alla chiamata è consentito impostare la proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FRESTRICTED">
      <summary>La funzione non deve essere accessibile dai linguaggi macro. Il flag è destinato alle funzioni a livello di sistema o alle funzioni che non devono essere visualizzate dai visualizzatori dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FSOURCE">
      <summary>La funzione restituisce un oggetto che rappresenta un'origine di eventi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FUIDEFAULT">
      <summary>Il membro delle informazioni sul tipo è il membro predefinito per la visualizzazione nell'interfaccia utente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FUSESGETLASTERROR">
      <summary>La funzione supporta <see langword="GetLastError" />. Se si verifica un errore durante la funzione, il chiamante può chiamare <see langword="GetLastError" /> per recuperare il codice di errore.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCKIND">
      <summary>Definisce come accedere a una funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_DISPATCH">
      <summary>Alla funzione è possibile accedere solo mediante <see langword="IDispatch" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_NONVIRTUAL">
      <summary>La funzione è accessibile tramite un indirizzo <see langword="static" /> e accetta un puntatore <see langword="this" /> implicito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_PUREVIRTUAL">
      <summary>La funzione è accessibile tramite la tabella di funzioni virtual (VTBL) e assume un puntatore <see langword="this" /> implicito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_STATIC">
      <summary>La funzione è accessibile tramite un indirizzo <see langword="static" /> e non accetta un puntatore <see langword="this" /> implicito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_VIRTUAL">
      <summary>L'accesso alla funzione avviene in modo identico a <see cref="F:System.Runtime.InteropServices.FUNCKIND.FUNC_PUREVIRTUAL" />, ad eccezione del fatto che essa dispone di un'implementazione.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IAdviseSink">
      <summary>Fornisce una definizione gestita dell'interfaccia <see langword="IAdviseSink" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnClose">
      <summary>Notifica a tutti i sink consultivi registrati la modifica dello stato dell'oggetto da in esecuzione a caricato.  Questo metodo viene chiamato da un server.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary>Notifica a tutti i sink consultivi attualmente registrati degli oggetti dati che i dati nell'oggetto sono stati modificati.</summary>
      <param name="format">Oggetto <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che descrive informazioni relative a formato, dispositivo di destinazione, rendering e archiviazione dell'oggetto dati chiamante.</param>
      <param name="stgmedium">Oggetto <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passato per riferimento, che definisce il supporto di archiviazione (memoria globale, file su disco, oggetto di archiviazione, oggetto flusso, oggetto GDI (Graphics Device Interface) o supporto non definito) e la proprietà di tale supporto per l'oggetto dati chiamante.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnRename(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary>Notifica a tutti i sink consultivi registrati che l'oggetto è stato rinominato. Questo metodo viene chiamato da un server.</summary>
      <param name="moniker">Puntatore all'interfaccia <see langword="IMoniker" /> sul nuovo moniker completo dell'oggetto.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnSave">
      <summary>Notifica a tutti i sink consultivi registrati che l'oggetto è stato salvato. Questo metodo viene chiamato da un server.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnViewChange(System.Int32,System.Int32)">
      <summary>Notifica ai sink consultivi registrati di un oggetto che la visualizzazione è stata modificata. Questo metodo viene chiamato da un server.</summary>
      <param name="aspect">Aspetto, o visualizzazione, dell'oggetto. Contiene un valore ricavato dall'enumerazione <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" />.</param>
      <param name="index">Parte della visualizzazione modificata. Attualmente, è valido solo il valore -1.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IBindCtx">
      <summary>Fornisce la definizione gestita dell'interfaccia <see langword="IBindCtx" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.EnumObjectParam(System.Runtime.InteropServices.ComTypes.IEnumString@)">
      <summary>Enumera le stringhe che sono le chiavi della tabella gestita internamente dei parametri degli oggetti contestuali.</summary>
      <param name="ppenum">Quando termina, questo metodo contiene un riferimento all'enumeratore del parametro dell'oggetto. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)">
      <summary>Restituisce le opzioni di associazione correnti archiviate nel contesto di associazione corrente.</summary>
      <param name="pbindopts">Puntatore alla struttura per ricevere le opzioni di associazione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetObjectParam(System.String,System.Object@)">
      <summary>Cerca la chiave specificata nella tabella gestita internamente dei parametri degli oggetti contestuali e restituisce l'oggetto corrispondente, se disponibile.</summary>
      <param name="pszKey">Nome dell'oggetto di cui eseguire la ricerca.</param>
      <param name="ppunk">Quando termina, questo metodo contiene il puntatore all'interfaccia dell'oggetto. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.ComTypes.IRunningObjectTable@)">
      <summary>Restituisce l'accesso alla tabella degli oggetti in esecuzione (ROT, Running Object Table) relativa a questo processo di associazione.</summary>
      <param name="pprot">Quando termina, questo metodo contiene un riferimento alla tabella ROT. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)">
      <summary>Registra l'oggetto passato come uno degli oggetti associati durante un'operazione di moniker e che deve essere liberato al completamento dell'operazione.</summary>
      <param name="punk">Oggetto da registrare per il rilascio.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectParam(System.String,System.Object)">
      <summary>Registra il puntatore all'oggetto specificato sotto il nome specificato nella tabella gestita internamente dei puntatori all'oggetto.</summary>
      <param name="pszKey">Nome con il quale registrare il parametro <paramref name="punk" />.</param>
      <param name="punk">Oggetto da registrare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.ReleaseBoundObjects">
      <summary>Libera tutti gli oggetti correntemente registrati con il contesto di associazione mediante il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectBound(System.Object)">
      <summary>Rimuove l'oggetto dall'insieme di oggetti registrati che devono essere liberati.</summary>
      <param name="punk">Oggetto di cui annullare la registrazione per il rilascio.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectParam(System.String)">
      <summary>Revoca la registrazione dell'oggetto correntemente trovato sotto la chiave specificata nella tabella gestita internamente dei parametri degli oggetti contestuali, se tale chiave è attualmente registrata.</summary>
      <param name="pszKey">Chiave di cui annullare la registrazione.</param>
      <returns>Valore <see langword="S_OK" /><see langword="HRESULT" /> se la rimozione della chiave specificata dalla tabella è stata completata; in caso contrario, un valore <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.SetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)">
      <summary>Archivia un blocco di parametri nel contesto di associazione. Questi parametri verranno applicati alle successive operazioni <see langword="UCOMIMoniker" /> che utilizzeranno questo contesto di associazione.</summary>
      <param name="pbindopts">Struttura contenente le opzioni di associazione da impostare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IConnectionPoint">
      <summary>Fornisce la definizione gestita dell'interfaccia <see langword="IConnectionPoint" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)">
      <summary>Stabilisce una connessione consultiva tra il punto di connessione e l'oggetto sink del chiamante.</summary>
      <param name="pUnkSink">Riferimento al sink per ricevere le chiamate per l'interfaccia in uscita gestita da questo punto di connessione.</param>
      <param name="pdwCookie">Quando termina, questo metodo contiene il cookie di connessione. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.EnumConnections(System.Runtime.InteropServices.ComTypes.IEnumConnections@)">
      <summary>Crea un oggetto enumeratore per lo scorrimento delle connessioni esistenti fino a questo punto di connessione.</summary>
      <param name="ppEnum">Quando termina, questo metodo contiene l'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.GetConnectionInterface(System.Guid@)">
      <summary>Restituisce l'IID dell'interfaccia in uscita gestita da questo punto di connessione.</summary>
      <param name="pIID">Quando termina, questo parametro contiene l'IID dell'interfaccia in uscita gestita da questo punto di connessione. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.GetConnectionPointContainer(System.Runtime.InteropServices.ComTypes.IConnectionPointContainer@)">
      <summary>Recupera il puntatore dell'interfaccia <see langword="IConnectionPointContainer" /> all'oggetto collegabile che concettualmente è proprietario di questo punto di connessione.</summary>
      <param name="ppCPC">Quando termina, questo parametro contiene l'interfaccia <see langword="IConnectionPointContainer" /> dell'oggetto collegabile. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Unadvise(System.Int32)">
      <summary>Termina una connessione consultiva precedentemente stabilita tramite il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</summary>
      <param name="dwCookie">Cookie di connessione precedentemente restituito dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer">
      <summary>Fornisce la definizione gestita dell'interfaccia <see langword="IConnectionPointContainer" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer.EnumConnectionPoints(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)">
      <summary>Crea un enumeratore di tutti i punti di connessione supportati nell'oggetto collegabile, un punto di connessione per ciascun IID.</summary>
      <param name="ppEnum">Quando termina, questo metodo contiene il puntatore a interfaccia dell'enumeratore. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer.FindConnectionPoint(System.Guid@,System.Runtime.InteropServices.ComTypes.IConnectionPoint@)">
      <summary>Chiede all'oggetto collegabile se contiene un punto di connessione per un particolare IID e, in caso affermativo, restituisce al punto di connessione il puntatore all'interfaccia <see langword="IConnectionPoint" />.</summary>
      <param name="riid">Riferimento all'IID di interfaccia in uscita il cui punto di connessione è richiesto.</param>
      <param name="ppCP">Quando termina, questo metodo contiene il punto di connessione che gestisce il parametro <paramref name="riid" /> dell'interfaccia in uscita. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDataObject">
      <summary>Fornisce la definizione gestita dell'interfaccia <see langword="IDataObject" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)">
      <summary>Crea una connessione tra un oggetto dati e un sink consultivo. Questo metodo viene chiamato da un oggetto che supporta un sink consultivo e attiva tale sink per ricevere una notifica delle modifiche nei dati dell'oggetto.</summary>
      <param name="pFormatetc">Struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passata per riferimento, che definisce formato, periferica di destinazione, aspetto e supporto che verranno utilizzati per notifiche future.</param>
      <param name="advf">Uno dei valori di <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> che specifica un gruppo di flag per il controllo della connessione consultiva.</param>
      <param name="adviseSink">Puntatore all'interfaccia <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> nel sink consultivo che riceverà la notifica della modifica.</param>
      <param name="connection">Quando termina, il metodo contiene un puntatore a un token DWORD che identifica la connessione. È possibile utilizzare questo token in un secondo momento per eliminare la connessione consultiva passandolo al metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. Se il valore è zero, la connessione non è stata stabilita. Questo parametro viene passato non inizializzato.</param>
      <returns>Questo metodo supporta i valori restituiti standard E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, nonché quanto segue:
  Value 
  Description 
  S_OK 
  La connessione consultiva è stata creata.  
  
  E_NOTIMPL 
  Questo metodo non è implementato nell'oggetto dati.  
  
  DV_E_LINDEX 
  È presente un valore non valido per <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; attualmente, è supportato solo il valore -1.  
  
  DV_E_FORMATETC 
  È presente un valore non valido per il parametro <paramref name="pFormatetc" />.  
  
  OLE_E_ADVISENOTSUPPORTED 
  L'oggetto dati non supporta la notifica delle modifiche.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)">
      <summary>Elimina definitivamente una connessione di notifica stabilita in precedenza.</summary>
      <param name="connection">Token DWORD che specifica la connessione da rimuovere. Usare il valore restituito da <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> quando è stata originariamente stabilita la connessione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary>Crea un oggetto che può essere utilizzato per enumerare le connessioni consultive correnti.</summary>
      <param name="enumAdvise">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> che riceve il puntatore a interfaccia per il nuovo oggetto enumeratore. Se l'implementazione imposta <paramref name="enumAdvise" /> su <see langword="null" />, non sono attualmente presenti connessioni a sink consultivi. Questo parametro viene passato non inizializzato.</param>
      <returns>Questo metodo supporta il valore restituito standard E_OUTOFMEMORY, nonché quanto riportato di seguito:
  Value  
  
  Description  
  
  S_OK  
  
  Viene creata un'istanza dell'oggetto enumeratore o non sono presenti connessioni.  
  
  OLE_E_ADVISENOTSUPPORTED  
  
  Questo oggetto non supporta le notifiche consultive.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)">
      <summary>Crea un oggetto per l'enumerazione delle strutture <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> per un oggetto dati. Queste strutture sono utilizzate nelle chiamate al metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> o <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
      <param name="direction">Uno dei valori di <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> che specifica la direzione dei dati.</param>
      <returns>Questo metodo supporta i valori restituiti standard E_INVALIDARG e E_OUTOFMEMORY, nonché quanto riportato di seguito:
  Value 
  Description 
  S_OK 
  L'oggetto enumeratore è stato creato correttamente.  
  
  E_NOTIMPL 
  La direzione specificata dal parametro <paramref name="direction" /> non è supportata.  
  
  OLE_S_USEREG 
  Richiede l'enumerazione OLE dei formati dal Registro di sistema.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary>Fornisce una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> standard logicamente equivalente a una struttura più complessa. Utilizzare questo metodo per determinare se due strutture <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> diverse restituiscono gli stessi dati, eliminando la necessità di rendering duplicati.</summary>
      <param name="formatIn">Un puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che definisce formato, supporto e periferica di destinazione che il chiamante desidera utilizzare per recuperare dati in una chiamata successiva quale <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Il membro <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> non è significativo in questo caso e deve essere ignorato.</param>
      <param name="formatOut">Quando termina, questo metodo contiene un puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> che include le informazioni più generali possibili per un rendering specifico, che lo rendono equivalente in modo canonico a <c>formatetcIn</c>. Il chiamante deve allocare questa struttura e il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> deve inserire i dati. Per recuperare dati in una chiamata successiva quale <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, il chiamante utilizza il valore fornito di <paramref name="formatOut" />, a meno che il valore fornito non sia <see langword="null" />. Questo valore è <see langword="null" /> se il metodo restituisce <see langword="DATA_S_SAMEFORMATETC" />. Il membro <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> non è significativo in questo caso e deve essere ignorato. Questo parametro viene passato non inizializzato.</param>
      <returns>Questo metodo supporta i valori restituiti standard E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, nonché quanto segue:
  Value 
  Description 
  S_OK 
  La struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> restituita è diversa da quella passata.  
  
  DATA_S_SAMEFORMATETC 
  Le strutture <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> sono uguali e nel parametro <paramref name="formatOut" /> viene restituito <see langword="null" />.  
  
  DV_E_LINDEX 
  È presente un valore non valido per <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; attualmente, è supportato solo il valore -1.  
  
  DV_E_FORMATETC 
  È presente un valore non valido per il parametro <paramref name="pFormatetc" />.  
  
  OLE_E_NOTRUNNING 
  L'applicazione non è in esecuzione.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary>Ottiene i dati da un oggetto dati di origine. Il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, chiamato da un consumer di dati, esegue il rendering dei dati descritti nella struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> specificata e li trasferisce mediante la struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> specificata. Il chiamante si assume la responsabilità del rilascio della struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />.</summary>
      <param name="format">Puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che definisce formato, supporto e periferica di destinazione da utilizzare per il passaggio di dati. È possibile specificare più supporti utilizzando l'operatore booleano OR, consentendo al metodo di scegliere il supporto ottimale tra quelli specificati.</param>
      <param name="medium">Quando termina, questo metodo contiene un puntatore alla struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> che indica il supporto di archiviazione contenente i dati restituiti mediante il membro <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> e la responsabilità del rilascio del supporto mediante il valore del relativo membro <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" />. Se <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, il ricevente del supporto è responsabile del rilascio; in caso contrario <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> punta all'interfaccia <see langword="IUnknown" /> nell'oggetto appropriato per consentire la chiamata al metodo <see langword="Release" /> relativo. È necessario che il supporto sia allocato e compilato dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary>Ottiene i dati da un oggetto dati di origine. Questo metodo, chiamato da un consumer di dati, si differenzia dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> in quanto il chiamante deve allocare e liberare il supporto di archiviazione specificato.</summary>
      <param name="format">Puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che definisce formato, supporto e periferica di destinazione da utilizzare per il passaggio di dati. È possibile specificare un solo supporto in <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> e sono validi solo i seguenti valori di <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" /> o <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
      <param name="medium">Oggetto <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passato per riferimento, che definisce il supporto di archiviazione contenente i dati di cui è in corso il trasferimento. È necessario che il supporto sia allocato dal chiamante e compilato dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Il chiamante deve anche liberare il supporto. L'implementazione di questo metodo deve sempre fornire un valore <see langword="null" /> per il membro <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> della struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> alla quale punta il parametro.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary>Determina se l'oggetto dati è in grado di eseguire il rendering dei dati descritti nella struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />. Gli oggetti che tentano un'operazione di inserimento o rilascio possono chiamare questo metodo prima di chiamare <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> per ottenere indicazioni relative alla riuscita dell'operazione.</summary>
      <param name="format">Puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che definisce formato, supporto e periferica di destinazione da utilizzare per la query.</param>
      <returns>Questo metodo supporta i valori restituiti standard E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, nonché quanto segue:
  Value 
  Description 
  S_OK 
  Una successiva chiamata al metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> avrà probabilmente esito positivo.  
  
  DV_E_LINDEX 
  Valore non valido per <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; attualmente, è supportato solo il valore -1.  
  
  DV_E_FORMATETC 
  Valore non valido per il parametro <paramref name="pFormatetc" />.  
  
  DV_E_TYMED 
  Valore di <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> non valido.  
  
  DV_E_DVASPECT 
  Valore di <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> non valido.  
  
  OLE_E_NOTRUNNING 
  L'applicazione non è in esecuzione.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)">
      <summary>Trasferisce i dati all'oggetto che implementa il metodo. Questo metodo viene chiamato da un oggetto contenente un'origine dati.</summary>
      <param name="formatIn">Struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passata per riferimento, che definisce il formato utilizzato dall'oggetto dati nell'interpretazione dei dati contenuti nel supporto di archiviazione.</param>
      <param name="medium">Struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passata per riferimento, che definisce il supporto di archiviazione in cui vengono passati i dati.</param>
      <param name="release">
        <see langword="true" /> per specificare che l'oggetto dati chiamato, il quale implementa il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, è proprietario del supporto di archiviazione al termine della chiamata. L'oggetto dati deve pertanto liberare il supporto dopo l'utilizzo chiamando la funzione <see langword="ReleaseStgMedium" />. <see langword="false" /> per specificare che il chiamante mantiene la proprietà del supporto di archiviazione e che l'oggetto dati chiamato utilizza tale supporto solo per la durata della chiamata.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDLDESC">
      <summary>Contiene le informazioni necessarie per il trasferimento di un elemento di struttura, un parametro o un valore restituito di funzione tra processi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLDESC.dwReserved">
      <summary>Riservato; impostato su <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLDESC.wIDLFlags">
      <summary>Indica un valore <see cref="T:System.Runtime.InteropServices.IDLFLAG" /> che descrive il tipo.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDLFLAG">
      <summary>Descrive come trasferire un elemento di struttura, un parametro o un valore restituito di funzione tra processi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FIN">
      <summary>Il parametro passa informazioni dal chiamante al chiamato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FLCID">
      <summary>Il parametro è l'identificatore locale di un'applicazione client.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FOUT">
      <summary>Il parametro restituisce informazioni dal chiamante al chiamato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FRETVAL">
      <summary>Il parametro è il valore restituito del membro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_NONE">
      <summary>Non specifica se il parametro passa o riceve informazioni.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints">
      <summary>Gestisce la definizione dell'interfaccia <see langword="IEnumConnectionPoints" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)">
      <summary>Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione di quello corrente.</summary>
      <param name="ppenum">Quando termina, questo metodo contiene un riferimento all'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Next(System.Int32,System.Runtime.InteropServices.ComTypes.IConnectionPoint[],System.IntPtr)">
      <summary>Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di riferimenti <see langword="IConnectionPoint" />da restituire in <paramref name="rgelt" />.</param>
      <param name="rgelt">Quando termina, questo metodo contiene un riferimento alle connessioni enumerate. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched">Quando termina, questo metodo contiene un riferimento al numero effettivo di connessioni enumerate in <paramref name="rgelt" />.</param>
      <returns>
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Reset">
      <summary>Riporta all'inizio la sequenza di enumerazione.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Skip(System.Int32)">
      <summary>Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di elementi da saltare nell'enumerazione.</param>
      <returns>
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumConnections">
      <summary>Gestisce la definizione dell'interfaccia <see langword="IEnumConnections" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnections@)">
      <summary>Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione di quello corrente.</summary>
      <param name="ppenum">Quando termina, questo metodo contiene un riferimento all'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Next(System.Int32,System.Runtime.InteropServices.ComTypes.CONNECTDATA[],System.IntPtr)">
      <summary>Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di strutture <see cref="T:System.Runtime.InteropServices.CONNECTDATA" /> da restituire in <paramref name="rgelt" />.</param>
      <param name="rgelt">Quando termina, questo metodo contiene un riferimento alle connessioni enumerate. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched">Quando termina, questo metodo contiene un riferimento al numero effettivo di connessioni enumerate in <paramref name="rgelt" />.</param>
      <returns>
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Reset">
      <summary>Riporta all'inizio la sequenza di enumerazione.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Skip(System.Int32)">
      <summary>Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di elementi da saltare nell'enumerazione.</param>
      <returns>
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC">
      <summary>Fornisce la definizione gestita dell'interfaccia <see langword="IEnumFORMATETC" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Clone(System.Runtime.InteropServices.ComTypes.IEnumFORMATETC@)">
      <summary>Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione dell'enumeratore corrente.</summary>
      <param name="newEnum">Quando termina, questo metodo contiene un riferimento all'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Next(System.Int32,System.Runtime.InteropServices.ComTypes.FORMATETC[],System.Int32[])">
      <summary>Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di riferimenti <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />da restituire in <paramref name="rgelt" />.</param>
      <param name="rgelt">Quando termina, questo metodo contiene un riferimento ai riferimenti <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> enumerati. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched">Quando termina, questo metodo contiene un riferimento al numero effettivo di riferimenti enumerati in <paramref name="rgelt" />. Questo parametro viene passato non inizializzato.</param>
      <returns>
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Reset">
      <summary>Riporta all'inizio la sequenza di enumerazione.</summary>
      <returns>HRESULT con il valore <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Skip(System.Int32)">
      <summary>Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di elementi da saltare nell'enumerazione.</param>
      <returns>
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumMoniker">
      <summary>Gestisce la definizione dell'interfaccia <see langword="IEnumMoniker" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Clone(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary>Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione di quello corrente.</summary>
      <param name="ppenum">Quando termina, questo metodo contiene un riferimento all'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Next(System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker[],System.IntPtr)">
      <summary>Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di moniker da restituire in <paramref name="rgelt" />.</param>
      <param name="rgelt">Quando termina, questo metodo contiene un riferimento ai moniker enumerati. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched">Quando termina, questo metodo contiene un riferimento al numero effettivo di moniker enumerati in <paramref name="rgelt" />.</param>
      <returns>
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Reset">
      <summary>Riporta all'inizio la sequenza di enumerazione.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Skip(System.Int32)">
      <summary>Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di elementi da saltare nell'enumerazione.</param>
      <returns>
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA">
      <summary>Fornisce la definizione gestita dell'interfaccia <see langword="IEnumSTATDATA" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Clone(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary>Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione dell'enumeratore corrente.</summary>
      <param name="newEnum">Quando termina, questo metodo contiene un riferimento all'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Next(System.Int32,System.Runtime.InteropServices.ComTypes.STATDATA[],System.Int32[])">
      <summary>Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di riferimenti <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" />da restituire in <paramref name="rgelt" />.</param>
      <param name="rgelt">Quando termina, questo metodo contiene un riferimento ai riferimenti <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" /> enumerati. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched">Quando termina, questo parametro contiene un riferimento al numero effettivo di riferimenti enumerati in <paramref name="rgelt" />. Questo parametro viene passato non inizializzato.</param>
      <returns>
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Reset">
      <summary>Riporta all'inizio la sequenza di enumerazione.</summary>
      <returns>HRESULT con il valore <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Skip(System.Int32)">
      <summary>Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di elementi da saltare nell'enumerazione.</param>
      <returns>
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumString">
      <summary>Gestisce la definizione dell'interfaccia <see langword="IEnumString" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Clone(System.Runtime.InteropServices.ComTypes.IEnumString@)">
      <summary>Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione di quello corrente.</summary>
      <param name="ppenum">Quando termina, questo metodo contiene un riferimento all'enumeratore appena creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Next(System.Int32,System.String[],System.IntPtr)">
      <summary>Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di stringhe da restituire in <paramref name="rgelt" />.</param>
      <param name="rgelt">Quando termina, questo metodo contiene un riferimento alle stringhe enumerate. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched">Quando termina, questo metodo contiene un riferimento al numero effettivo di stringhe enumerate in <paramref name="rgelt" />.</param>
      <returns>
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Reset">
      <summary>Riporta all'inizio la sequenza di enumerazione.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Skip(System.Int32)">
      <summary>Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di elementi da saltare nell'enumerazione.</param>
      <returns>
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT">
      <summary>Gestisce la definizione dell'interfaccia <see langword="IEnumVARIANT" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Clone">
      <summary>Crea un nuovo enumeratore che contiene lo stesso stato di enumerazione di quello corrente.</summary>
      <returns>Riferimento <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT" /> all'enumeratore appena creato.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32,System.Object[],System.IntPtr)">
      <summary>Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di elementi da restituire in <c>rgelt</c>.</param>
      <param name="rgVar">Quando termina, questo metodo contiene un riferimento agli elementi enumerati. Questo parametro viene passato non inizializzato.</param>
      <param name="pceltFetched">Quando termina, questo metodo contiene un riferimento al numero effettivo di elementi enumerati in <c>rgelt</c>.</param>
      <returns>
        <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Reset">
      <summary>Riporta all'inizio la sequenza di enumerazione.</summary>
      <returns>HRESULT con il valore <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Skip(System.Int32)">
      <summary>Ignora un determinato numero di elementi nella sequenza di enumerazione.</summary>
      <param name="celt">Numero di elementi da saltare nell'enumerazione.</param>
      <returns>
        <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IMoniker">
      <summary>Fornisce la definizione gestita dell'interfaccia <see langword="IMoniker" />, con funzionalità COM da <see langword="IPersist" /> e <see langword="IPersistStream" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
      <summary>Utilizza il moniker per l'associazione all'oggetto che identifica.</summary>
      <param name="pbc">Riferimento all'interfaccia <see langword="IBindCtx" /> sull'oggetto del contesto di associazione utilizzato in questa operazione di associazione.</param>
      <param name="pmkToLeft">Riferimento al moniker alla sinistra del moniker corrente, se fa parte di un moniker composto.</param>
      <param name="riidResult">Identificatore di interfaccia (IID) che il client intende utilizzare per comunicare con l'oggetto identificato dal moniker.</param>
      <param name="ppvResult">Quando termina, questo metodo contiene un riferimento all'interfaccia richiesta da <paramref name="riidResult" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
      <summary>Recupera un puntatore di interfaccia all'archiviazione che contiene l'oggetto identificato dal moniker.</summary>
      <param name="pbc">Riferimento all'interfaccia <see langword="IBindCtx" /> sull'oggetto del contesto di associazione utilizzato in questa operazione di associazione.</param>
      <param name="pmkToLeft">Riferimento al moniker alla sinistra del moniker corrente, se fa parte di un moniker composto.</param>
      <param name="riid">Identificatore di interfaccia (IID) dell'interfaccia di memoria richiesta.</param>
      <param name="ppvObj">Quando termina, questo metodo contiene un riferimento all'interfaccia richiesta da <paramref name="riid" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary>Crea un nuovo moniker in base al prefisso comune che il moniker condivide con un altro.</summary>
      <param name="pmkOther">Riferimento all'interfaccia <see langword="IMoniker" /> su un altro moniker per il confronto con il moniker corrente per individuare un prefisso comune.</param>
      <param name="ppmkPrefix">Quando termina, questo metodo contiene il moniker con il prefisso comune del moniker corrente e <paramref name="pmkOther" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary>Combina il moniker corrente con un altro, creando un nuovo moniker composito.</summary>
      <param name="pmkRight">Riferimento all'interfaccia <see langword="IMoniker" /> su un moniker da aggiungere alla fine del moniker corrente.</param>
      <param name="fOnlyIfNotGeneric">
        <see langword="true" /> per indicare che il chiamante richiede una composizione non generica. L'operazione prosegue solo se <paramref name="pmkRight" /> è una classe di moniker con cui può essere combinato il moniker corrente in un modo che non comporti la creazione di un composto generico. <see langword="false" /> per indicare che il metodo può creare un composto generico, se necessario.</param>
      <param name="ppmkComposite">Quando termina, questo metodo contiene un riferimento al moniker composto risultante. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary>Fornisce un puntatore a un enumeratore in grado di enumerare i componenti di un moniker composito.</summary>
      <param name="fForward">
        <see langword="true" /> per enumerare i moniker da sinistra a destra. <see langword="false" /> per enumerare i moniker da destra a sinistra.</param>
      <param name="ppenumMoniker">Quando termina, questo metodo contiene un riferimento all'oggetto enumeratore per il moniker. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(System.Guid@)">
      <summary>Recupera l'identificatore di classe (CLSID) di un oggetto.</summary>
      <param name="pClassID">Quando termina, questo metodo contiene il CLSID. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)">
      <summary>Ottiene il nome visualizzato, ossia una rappresentazione del moniker corrente leggibile dall'utente.</summary>
      <param name="pbc">Riferimento al contesto di associazione da utilizzare in questa operazione.</param>
      <param name="pmkToLeft">Riferimento al moniker alla sinistra del moniker corrente, se fa parte di un moniker composto.</param>
      <param name="ppszDisplayName">Quando termina, questo metodo contiene la stringa del nome visualizzato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(System.Int64@)">
      <summary>Restituisce la dimensione, in byte, del flusso necessario per salvare l'oggetto.</summary>
      <param name="pcbSize">Quando termina, questo metodo contiene un valore <see langword="long" /> che indica la dimensione, in byte, del flusso necessario per salvare l'oggetto. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary>Fornisce un numero che rappresenta l'ora dell'ultima modifica apportata all'oggetto identificato dal moniker corrente.</summary>
      <param name="pbc">Riferimento al contesto di associazione da utilizzare in questa operazione.</param>
      <param name="pmkToLeft">Riferimento al moniker alla sinistra del moniker corrente, se fa parte di un moniker composto.</param>
      <param name="pFileTime">Quando termina, questo metodo contiene l'ora dell'ultima modifica. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Hash(System.Int32@)">
      <summary>Calcola un intero a 32 bit utilizzando lo stato interno del moniker.</summary>
      <param name="pdwHash">Quando termina, questo metodo contiene il valore hash del moniker. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary>Fornisce un moniker che, quando composto a destra del moniker corrente o di uno con struttura analoga, risulta in una composizione nulla.</summary>
      <param name="ppmk">Quando termina, questo metodo contiene il moniker inverso del moniker corrente. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty">
      <summary>Verifica se l'oggetto ha subito modifiche dall'ultimo salvataggio.</summary>
      <returns>Valore <see langword="S_OK" /><see langword="HRESULT" /> se l'oggetto è stato modificato; in caso contrario, un valore <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary>Confronta il moniker corrente con un moniker specificato e indica se sono identici.</summary>
      <param name="pmkOtherMoniker">Riferimento al moniker da utilizzare per il confronto.</param>
      <returns>Valore <see langword="S_OK" /><see langword="HRESULT" /> se i moniker sono identici; in caso contrario, un valore <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary>Determina se l'oggetto identificato dal moniker corrente è attualmente caricato e in esecuzione.</summary>
      <param name="pbc">Riferimento al contesto di associazione da utilizzare in questa operazione.</param>
      <param name="pmkToLeft">Riferimento al moniker alla sinistra del moniker corrente, se il moniker corrente fa parte di un composto.</param>
      <param name="pmkNewlyRunning">Riferimento al moniker aggiunto di recente alla tabella degli oggetti in esecuzione (ROT, Running Object Table).</param>
      <returns>Valore <see langword="S_OK" /><see langword="HRESULT" /> se il moniker è in esecuzione, un valore <see langword="S_FALSE" /><see langword="HRESULT" /> se il moniker non è in esecuzione, oppure un valore <see langword="E_UNEXPECTED" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(System.Int32@)">
      <summary>Indica se il moniker corrente è uno dei moniker delle classi di moniker fornite dal sistema.</summary>
      <param name="pdwMksys">Quando termina, questo metodo contiene un puntatore a un intero che corrisponde a uno dei valori nell'enumerazione <see langword="MKSYS" /> e fa riferimento a una delle classi di moniker COM. Questo parametro viene passato non inizializzato.</param>
      <returns>Valore <see langword="S_OK" /><see langword="HRESULT" /> se si tratta di un moniker di sistema; in caso contrario, un valore <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)">
      <summary>Inizializza un oggetto dal flusso in cui è stato salvato in precedenza.</summary>
      <param name="pStm">Flusso dal quale viene caricato l'oggetto.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary>Legge il numero massimo di caratteri del nome visualizzato specificato che il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)" /> è in grado di comprendere e compila un moniker corrispondente alla porzione letta.</summary>
      <param name="pbc">Riferimento al contesto di associazione da utilizzare in questa operazione.</param>
      <param name="pmkToLeft">Riferimento al moniker compilato dal nome visualizzato fino a questo punto.</param>
      <param name="pszDisplayName">Riferimento alla stringa contenente il nome visualizzato rimanente da analizzare.</param>
      <param name="pchEaten">Quando termina, questo metodo contiene il numero di caratteri utilizzati nell'analisi di <paramref name="pszDisplayName" />. Questo parametro viene passato non inizializzato.</param>
      <param name="ppmkOut">Quando termina, questo metodo contiene un riferimento al moniker compilato da <paramref name="pszDisplayName" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary>Restituisce un moniker ridotto, ovvero un altro moniker che fa riferimento allo stesso oggetto del moniker corrente, ma la cui associazione può avere pari o maggiore efficienza.</summary>
      <param name="pbc">Riferimento all'interfaccia <see langword="IBindCtx" /> nel contesto di associazione da utilizzare in questa operazione.</param>
      <param name="dwReduceHowFar">Valore che specifica il grado di riduzione del moniker corrente.</param>
      <param name="ppmkToLeft">Riferimento al moniker alla sinistra del moniker corrente.</param>
      <param name="ppmkReduced">Quando termina, questo metodo contiene un riferimento alla forma ridotta del moniker corrente, che può essere <see langword="null" /> se si verifica un errore o se il moniker corrente è ridotto a nulla. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary>Fornisce un moniker che, quando aggiunto a quello corrente o a uno con struttura analoga, produce il moniker specificato.</summary>
      <param name="pmkOther">Riferimento al moniker per il quale deve essere adottato un percorso relativo.</param>
      <param name="ppmkRelPath">Quando termina, questo metodo contiene un riferimento al moniker relativo. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)">
      <summary>Salva un oggetto nel flusso specificato.</summary>
      <param name="pStm">Flusso nel quale viene salvato l'oggetto.</param>
      <param name="fClearDirty">
        <see langword="true" /> per cancellare il flag modificato al termine del salvataggio. In caso contrario, <see langword="false" /></param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS">
      <summary>Definisce gli attributi di un'interfaccia implementata o ereditata di un tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FDEFAULT">
      <summary>L'interfaccia o interfaccia dispatch è quella predefinita per l'origine o sink.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FDEFAULTVTABLE">
      <summary>I sink ricevono gli eventi tramite la tabella di funzioni virtual (VTBL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FRESTRICTED">
      <summary>Il membro non dovrebbe essere visualizzabile o programmabile dagli utenti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FSOURCE">
      <summary>Questo membro di una coclasse viene chiamato piuttosto che implementato.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND">
      <summary>Specifica come richiamare una funzione mediante <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_FUNC">
      <summary>Il membro viene chiamato utilizzando una normale sintassi di chiamata delle funzioni.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYGET">
      <summary>La funzione viene richiamata utilizzando una normale sintassi di accesso alle proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYPUT">
      <summary>La funzione viene richiamata utilizzando una sintassi di assegnazione di valori a una proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYPUTREF">
      <summary>La funzione viene richiamata utilizzando una sintassi di assegnazione di riferimenti a una proprietà.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IPersistFile">
      <summary>Fornisce la definizione gestita dell'interfaccia <see langword="IPersistFile" /> con funzionalità da <see langword="IPersist" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(System.Guid@)">
      <summary>Recupera l'identificatore di classe (CLSID) di un oggetto.</summary>
      <param name="pClassID">Quando termina, questo metodo contiene un riferimento al CLSID. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(System.String@)">
      <summary>Recupera il percorso assoluto del file di lavoro corrente dell'oggetto oppure, se non è presente alcun file di lavoro corrente, la richiesta del nome file predefinito dell'oggetto.</summary>
      <param name="ppszFileName">Quando termina, questo metodo contiene l'indirizzo di un puntatore a una stringa con terminazione zero contenente il percorso del file corrente oppure la richiesta del nome file predefinito (ad esempio *.txt). Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.IsDirty">
      <summary>Verifica se un oggetto è stato modificato dall'ultimo salvataggio nel file corrente.</summary>
      <returns>
        <see langword="S_OK" /> se il file è stato modificato dall'ultimo salvataggio; in caso contrario, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String,System.Int32)">
      <summary>Apre il file specificato e inizializza un oggetto dal contenuto del file.</summary>
      <param name="pszFileName">Stringa con terminazione zero che contiene il percorso assoluto del file da aprire.</param>
      <param name="dwMode">Combinazione di valori dall'enumerazione <see langword="STGM" /> per indicare la modalità di accesso con cui aprire <paramref name="pszFileName" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String,System.Boolean)">
      <summary>Salva una copia dell'oggetto nel file specificato.</summary>
      <param name="pszFileName">Stringa con terminazione zero che contiene il percorso assoluto del file nel quale è salvato l'oggetto.</param>
      <param name="fRemember">
        <see langword="true" /> per utilizzare il parametro <paramref name="pszFileName" /> come file di lavoro corrente; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)">
      <summary>Indica all'oggetto che può scrivere nel relativo file.</summary>
      <param name="pszFileName">Percorso assoluto del file nel quale l'oggetto è stato precedentemente salvato.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IRunningObjectTable">
      <summary>Fornisce la definizione gestita dell'interfaccia <see langword="IRunningObjectTable" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.EnumRunning(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary>Enumera gli oggetti correntemente registrati come oggetti in esecuzione.</summary>
      <param name="ppenumMoniker">Quando termina, questo metodo contiene il nuovo enumeratore per la tabella degli oggetti in esecuzione (ROT, Running Object Table). Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.GetObject(System.Runtime.InteropServices.ComTypes.IMoniker,System.Object@)">
      <summary>Restituisce l'oggetto registrato se il nome dell'oggetto fornito è registrato come oggetto in esecuzione.</summary>
      <param name="pmkObjectName">Riferimento al moniker da cercare nella tabella ROT.</param>
      <param name="ppunkObject">Quando termina, questo metodo contiene l'oggetto in esecuzione richiesto. Questo parametro viene passato non inizializzato.</param>
      <returns>Un <see langword="HRESULT" /> che indica l'esito positivo o negativo dell'operazione.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary>Cerca questo moniker nella tabella ROT e riporta l'ora registrata della modifica, se presente.</summary>
      <param name="pmkObjectName">Riferimento al moniker da cercare nella tabella ROT.</param>
      <param name="pfiletime">Quando termina, questo oggetto contiene l'ora dell'ultima modifica degli oggetti. Questo parametro viene passato non inizializzato.</param>
      <returns>Un <see langword="HRESULT" /> che indica l'esito positivo o negativo dell'operazione.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.IsRunning(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary>Determina se il moniker specificato è correntemente registrato nella tabella ROT.</summary>
      <param name="pmkObjectName">Riferimento al moniker da cercare nella tabella ROT.</param>
      <returns>Un <see langword="HRESULT" /> che indica l'esito positivo o negativo dell'operazione.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary>Annota l'ora di modifica di un determinato oggetto per consentire all'interfaccia <see langword="IMoniker::GetTimeOfLastChange" /> di riportare un'ora di modifica corretta.</summary>
      <param name="dwRegister">Voce della tabella ROT dell'oggetto modificato.</param>
      <param name="pfiletime">Riferimento all'ora dell'ultima modifica dell'oggetto.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary>Registra l'ingresso dell'oggetto fornito nello stato di esecuzione.</summary>
      <param name="grfFlags">Specifica se il riferimento della tabella degli oggetti in esecuzione (ROT, Running Object Table) a <paramref name="punkObject" /> è debole o forte e controlla l'accesso all'oggetto tramite la corrispondente voce nella ROT.</param>
      <param name="punkObject">Riferimento all'oggetto da registrare come oggetto in esecuzione.</param>
      <param name="pmkObjectName">Riferimento al moniker che identifica <paramref name="punkObject" />.</param>
      <returns>Valore che può essere utilizzato per identificare questa voce della ROT in successive chiamate al metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke(System.Int32)" /> o <see cref="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke(System.Int32)">
      <summary>Annulla la registrazione dell'oggetto specificato dalla tabella ROT.</summary>
      <param name="dwRegister">Voce della tabella ROT da revocare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IStream">
      <summary>Fornisce la definizione gestita dell'interfaccia <see langword="IStream" />, con funzionalità <see langword="ISequentialStream" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Clone(System.Runtime.InteropServices.ComTypes.IStream@)">
      <summary>Crea un nuovo oggetto flusso con il proprio puntatore di ricerca che fa riferimento agli stessi byte del flusso originale.</summary>
      <param name="ppstm">Quando termina, questo metodo contiene il nuovo oggetto flusso. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)">
      <summary>Assicura che eventuali modifiche apportate a un oggetto flusso aperto in modalità di transazione siano riflesse nell'archivio padre.</summary>
      <param name="grfCommitFlags">Valore che controlla la modalità di esecuzione del commit delle modifiche dell'oggetto flusso.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
      <summary>Copia un numero specificato di byte dal puntatore di ricerca corrente del flusso al puntatore di ricerca corrente in un altro flusso.</summary>
      <param name="pstm">Riferimento al flusso di destinazione.</param>
      <param name="cb">Numero di byte da copiare dal flusso di origine.</param>
      <param name="pcbRead">In caso di esito positivo, contiene il numero effettivo di byte letti dall'origine.</param>
      <param name="pcbWritten">In caso di esito positivo, contiene il numero effettivo di byte scritti nella destinazione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)">
      <summary>Limita l'accesso a un intervallo specificato di byte nel flusso.</summary>
      <param name="libOffset">Offset di byte per l'inizio dell'intervallo.</param>
      <param name="cb">Lunghezza in byte dell'intervallo da limitare.</param>
      <param name="dwLockType">Limitazioni richieste nell'accesso all'intervallo.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Read(System.Byte[],System.Int32,System.IntPtr)">
      <summary>Legge un numero specificato di byte dall'oggetto flusso nella memoria a partire dal puntatore di ricerca corrente.</summary>
      <param name="pv">Quando termina, questo metodo contiene i dati letti dal flusso. Questo parametro viene passato non inizializzato.</param>
      <param name="cb">Numero di byte da leggere dall'oggetto flusso.</param>
      <param name="pcbRead">Puntatore a una variabile <see langword="ULONG" /> che riceve il numero effettivo di byte letti dall'oggetto flusso.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Revert">
      <summary>Elimina tutte le modifiche apportate a un flusso sottoposto a transazione dall'ultima chiamata a <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Seek(System.Int64,System.Int32,System.IntPtr)">
      <summary>Modifica il puntatore di ricerca in una nuova posizione relativa all'inizio del flusso, alla fine del flusso o al puntatore di ricerca corrente.</summary>
      <param name="dlibMove">Spostamento da aggiungere a <paramref name="dwOrigin" />.</param>
      <param name="dwOrigin">Origine della ricerca. L'origine può essere l'inizio del file, il puntatore di ricerca corrente o la fine del file.</param>
      <param name="plibNewPosition">In caso di esito positivo, contiene l'offset del puntatore di ricerca dall'inizio del flusso.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.SetSize(System.Int64)">
      <summary>Modifica la dimensione dell'oggetto flusso.</summary>
      <param name="libNewSize">Nuova dimensione del flusso come numero di byte.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
      <summary>Recupera la struttura <see cref="T:System.Runtime.InteropServices.STATSTG" /> per questo flusso.</summary>
      <param name="pstatstg">Quando termina, questo metodo contiene una struttura <see langword="STATSTG" /> che descrive l'oggetto flusso. Questo parametro viene passato non inizializzato.</param>
      <param name="grfStatFlag">Membri nella struttura <see langword="STATSTG" /> che non vengono restituiti da questo metodo, salvando in tal modo alcune operazioni di allocazione della memoria.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.UnlockRegion(System.Int64,System.Int64,System.Int32)">
      <summary>Rimuove le restrizioni di accesso in un intervallo di byte precedentemente limitato con il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)" />.</summary>
      <param name="libOffset">Offset di byte per l'inizio dell'intervallo.</param>
      <param name="cb">Lunghezza in byte dell'intervallo da limitare.</param>
      <param name="dwLockType">Limitazioni di accesso precedentemente imposte all'intervallo.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Write(System.Byte[],System.Int32,System.IntPtr)">
      <summary>Scrive un numero specificato di byte nell'oggetto flusso a partire dal puntatore di ricerca corrente.</summary>
      <param name="pv">Buffer in cui scrivere questo flusso.</param>
      <param name="cb">Numero di byte da scrivere nel flusso.</param>
      <param name="pcbWritten">In caso di esito positivo, contiene il numero effettivo di byte scritti nell'oggetto flusso. Se il chiamante imposta questo puntatore su <see cref="F:System.IntPtr.Zero" />, questo metodo non fornirà il numero effettivo di byte scritti.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeComp">
      <summary>Fornisce la definizione gestita dell'interfaccia <see langword="ITypeComp" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeComp.Bind(System.String,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.DESCKIND@,System.Runtime.InteropServices.ComTypes.BINDPTR@)">
      <summary>Esegue il mapping di un nome a un membro di un tipo o associa le variabili e le funzioni globali presenti in una libreria dei tipi.</summary>
      <param name="szName">Nome da associare.</param>
      <param name="lHashVal">Valore hash per <paramref name="szName" /> calcolato da <see langword="LHashValOfNameSys" />.</param>
      <param name="wFlags">Parola flag contenente uno o più flag di chiamata definiti nell'enumerazione <see langword="INVOKEKIND" />.</param>
      <param name="ppTInfo">Quando termina, questo metodo contiene un riferimento alla descrizione del tipo che contiene l'elemento a cui è associato, se è stato restituito <see langword="FUNCDESC" /> o <see langword="VARDESC" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pDescKind">Quando termina, questo metodo contiene un riferimento a un enumeratore <see langword="DESCKIND" /> che indica se il nome associato è <see langword="VARDESC" />, <see langword="FUNCDESC" /> o <see langword="TYPECOMP" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pBindPtr">Quando termina, questo metodo contiene un riferimento all'interfaccia <see langword="VARDESC" />, <see langword="FUNCDESC" /> o <see langword="ITypeComp" /> associata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeComp.BindType(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary>Effettua l'associazione alle descrizioni di tipi contenute all'interno di una libreria dei tipi.</summary>
      <param name="szName">Nome da associare.</param>
      <param name="lHashVal">Valore hash per <paramref name="szName" /> determinato da <see langword="LHashValOfNameSys" />.</param>
      <param name="ppTInfo">Quando termina, questo metodo contiene un riferimento a un <see langword="ITypeInfo" /> del tipo a cui è stato associato <paramref name="szName" />. Questo parametro viene passato non inizializzato.</param>
      <param name="ppTComp">Quando termina, questo metodo contiene un riferimento a una variabile <see langword="ITypeComp" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeInfo">
      <summary>Specifica la definizione gestita dell'interfaccia ITypeInfo di automazione dei componenti.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
      <summary>Recupera gli indirizzi delle funzioni o delle variabili statiche, come quelle definite in una DLL.</summary>
      <param name="memid">ID membro dell'indirizzo del membro <see langword="static" /> da recuperare.</param>
      <param name="invKind">Uno dei valori <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> che specifica se il membro è una proprietà e, in caso positivo, ne indica il tipo.</param>
      <param name="ppv">Quando termina, questo metodo contiene un riferimento al membro <see langword="static" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)">
      <summary>Crea una nuova istanza di un tipo che descrive una classe di componenti (coclass).</summary>
      <param name="pUnkOuter">Oggetto che funge da interfaccia <see langword="IUnknown" /> di controllo.</param>
      <param name="riid">IID dell'interfaccia utilizzata dal chiamante per comunicare con l'oggetto risultante.</param>
      <param name="ppvObj">Quando termina, questo metodo contiene un riferimento all'oggetto creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
      <summary>Recupera la libreria dei tipi che contiene questa descrizione del tipo e il relativo indice all'interno della libreria.</summary>
      <param name="ppTLB">Quando termina, questo metodo contiene un riferimento alla libreria dei tipi contenitore. Questo parametro viene passato non inizializzato.</param>
      <param name="pIndex">Quando termina, questo metodo contiene un riferimento all'indice della descrizione dei tipi all'interno della libreria dei tipi contenitore. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>Recupera una descrizione o specifica di un punto di ingresso per una funzione in una DLL.</summary>
      <param name="memid">ID della funzione membro di cui restituire la descrizione del punto di ingresso della DLL.</param>
      <param name="invKind">Uno dei valori <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> che specifica il tipo di membro identificato da <paramref name="memid" />.</param>
      <param name="pBstrDllName">Se non è <see langword="null" />, la funzione imposterà <paramref name="pBstrDllName" /> su un <see langword="BSTR" /> che contiene il nome della DLL.</param>
      <param name="pBstrName">Se non è <see langword="null" />, la funzione imposterà <c>lpbstrName</c> su un <see langword="BSTR" /> che contiene il nome del punto di ingresso.</param>
      <param name="pwOrdinal">Se non è <see langword="null" /> e la funzione è definita da un numero ordinale, <c>lpwOrdinal</c> verrà impostato in modo da puntare all'ordinale.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>Recupera la stringa di documentazione, il nome e il percorso completo del file della Guida e l'ID del contesto per l'argomento della Guida relativo a una descrizione del tipo specifica.</summary>
      <param name="index">ID del membro di cui restituire la documentazione.</param>
      <param name="strName">Quando termina, questo metodo contiene il nome del metodo dell'elemento. Questo parametro viene passato non inizializzato.</param>
      <param name="strDocString">Quando termina, questo metodo contiene la stringa di documentazione per l'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="dwHelpContext">Quando termina, questo metodo contiene un riferimento al contesto della Guida associato all'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="strHelpFile">Quando termina, questo metodo contiene il nome completo del file della Guida. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)">
      <summary>Recupera la struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> che contiene le informazioni relative a una funzione specificata.</summary>
      <param name="index">Indice della descrizione della funzione da restituire.</param>
      <param name="ppFuncDesc">Quando termina, questo metodo contiene un riferimento a una struttura <see langword="FUNCDESC" /> che descrive la funzione specificata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
      <summary>Esegue il mapping tra i nomi e gli ID dei membri e tra i nomi e gli ID dei parametri.</summary>
      <param name="rgszNames">Matrice di nomi di cui eseguire il mapping.</param>
      <param name="cNames">Conteggio dei nomi di cui eseguire il mapping.</param>
      <param name="pMemId">Quando termina, questo metodo contiene un riferimento a una matrice in cui si trovano i mapping dei nomi. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
      <summary>Recupera il valore <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> per un'interfaccia implementata o un'interfaccia di base in una descrizione del tipo.</summary>
      <param name="index">Indice dell'interfaccia implementata o dell'interfaccia di base.</param>
      <param name="pImplTypeFlags">Quando termina, questo metodo contiene un riferimento all'enumerazione <see langword="IMPLTYPEFLAGS" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetMops(System.Int32,System.String@)">
      <summary>Recupera le informazioni di marshalling.</summary>
      <param name="memid">ID del membro che indica le informazioni di marshalling necessarie.</param>
      <param name="pBstrMops">Quando termina, questo metodo contiene un riferimento alla stringa <see langword="opcode" /> utilizzata nel marshaling dei campi della struttura descritta dalla descrizione del tipo a cui viene fatto riferimento oppure restituisce <see langword="null" /> se non sono disponibili informazioni da restituire. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
      <summary>Recupera la variabile con l'ID del membro specificato (o il nome della proprietà o del metodo e i relativi parametri) che corrisponde all'ID di funzione specificato.</summary>
      <param name="memid">ID del membro di cui restituire il cui nome o i nomi.</param>
      <param name="rgBstrNames">Quando termina, questo metodo contiene il nome o i nomi associati al membro. Questo parametro viene passato non inizializzato.</param>
      <param name="cMaxNames">Lunghezza della matrice <paramref name="rgBstrNames" />.</param>
      <param name="pcNames">Quando termina, questo metodo contiene il numero di nomi nella matrice <paramref name="rgBstrNames" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary>Recupera le descrizioni del tipo cui viene fatto riferimento, se una descrizione del tipo fa riferimento ad altre.</summary>
      <param name="hRef">Handle alla descrizione del tipo cui viene fatto riferimento da restituire.</param>
      <param name="ppTI">Quando termina, questo metodo contiene la descrizione del tipo cui viene fatto riferimento. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetRefTypeOfImplType(System.Int32,System.Int32@)">
      <summary>Recupera la descrizione dei tipi di interfaccia implementati, se una descrizione del tipo descrive una classe COM.</summary>
      <param name="index">Indice del tipo implementato di cui viene restituito l'handle.</param>
      <param name="href">Quando termina, questo metodo contiene un riferimento a un handle per l'interfaccia implementata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)">
      <summary>Recupera una struttura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> che contiene gli attributi della descrizione del tipo.</summary>
      <param name="ppTypeAttr">Quando termina, questo metodo contiene un riferimento alla struttura che contiene gli attributi della descrizione del tipo. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary>Recupera l'interfaccia <see langword="ITypeComp" /> per la descrizione del tipo, che consente a un compilatore client di eseguire l'associazione ai membri della descrizione del tipo.</summary>
      <param name="ppTComp">Quando termina, questo metodo contiene un riferimento all'interfaccia <see langword="ITypeComp" /> della libreria dei tipi contenitore. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)">
      <summary>Recupera una struttura <see langword="VARDESC" /> che descrive la variabile specificata.</summary>
      <param name="index">Indice della descrizione della variabile da restituire.</param>
      <param name="ppVarDesc">Quando termina, questo metodo contiene un riferimento alla struttura <see langword="VARDESC" /> che descrive la variabile specificata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary>Richiama un metodo o accede a una proprietà di un oggetto, che implementa l'interfaccia descritta dalla descrizione del tipo.</summary>
      <param name="pvInstance">Riferimento all'interfaccia descritta da questa descrizione del tipo.</param>
      <param name="memid">Valore che identifica il membro di interfaccia.</param>
      <param name="wFlags">Flag che descrivono il contesto della chiamata Invoke.</param>
      <param name="pDispParams">Riferimento a una struttura che contiene una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi in ogni matrice.</param>
      <param name="pVarResult">Riferimento al percorso in cui archiviare il risultato. Se <paramref name="wFlags" /> specifica <see langword="DISPATCH_PROPERTYPUT" /> o <see langword="DISPATCH_PROPERTYPUTREF" />, <paramref name="pVarResult" /> verrà ignorato. Impostare su <see langword="null" /> se non si desidera alcun risultato.</param>
      <param name="pExcepInfo">Puntatore a una struttura di informazioni sulle eccezioni, compilata solo se viene restituito <see langword="DISP_E_EXCEPTION" />.</param>
      <param name="puArgErr">Se <see langword="Invoke" /> restituisce <see langword="DISP_E_TYPEMISMATCH" />, <paramref name="puArgErr" /> indica l'indice all'interno di <c>rgvarg</c> dell'argomento con tipo non corretto. Se più argomenti restituiscono un errore, <paramref name="puArgErr" /> indicherà solo il primo argomento con l'errore. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseFuncDesc(System.IntPtr)">
      <summary>Libera una struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> precedentemente restituita dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pFuncDesc">Riferimento alla struttura <see langword="FUNCDESC" /> da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseTypeAttr(System.IntPtr)">
      <summary>Libera una struttura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> precedentemente restituita dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)" />.</summary>
      <param name="pTypeAttr">Riferimento alla struttura <see langword="TYPEATTR" /> da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseVarDesc(System.IntPtr)">
      <summary>Libera una struttura <see langword="VARDESC" /> precedentemente restituita dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pVarDesc">Riferimento alla struttura <see langword="VARDESC" /> da liberare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeInfo2">
      <summary>Fornisce la definizione gestita dell'interfaccia <see langword="ITypeInfo2" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
      <summary>Recupera gli indirizzi delle funzioni o delle variabili statiche, come quelle definite in una DLL.</summary>
      <param name="memid">ID membro dell'indirizzo del membro <see langword="static" /> da recuperare.</param>
      <param name="invKind">Uno dei valori <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> che specifica se il membro è una proprietà e, in caso positivo, ne indica il tipo.</param>
      <param name="ppv">Quando termina, questo metodo contiene un riferimento al membro <see langword="static" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.CreateInstance(System.Object,System.Guid@,System.Object@)">
      <summary>Crea una nuova istanza di un tipo che descrive una classe di componenti (coclass).</summary>
      <param name="pUnkOuter">Oggetto che funge da interfaccia <see langword="IUnknown" /> di controllo.</param>
      <param name="riid">IID dell'interfaccia utilizzata dal chiamante per comunicare con l'oggetto risultante.</param>
      <param name="ppvObj">Quando termina, questo metodo contiene un riferimento all'oggetto creato. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllCustData(System.IntPtr)">
      <summary>Ottiene tutti gli elementi dati personalizzati della libreria.</summary>
      <param name="pCustData">Puntatore a <see langword="CUSTDATA" /> che contiene tutti gli elementi di dati personalizzati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllFuncCustData(System.Int32,System.IntPtr)">
      <summary>Ottiene tutti i dati personalizzati dalla funzione specificata.</summary>
      <param name="index">Indice della funzione per la quale ottenere i dati personalizzati.</param>
      <param name="pCustData">Puntatore a <see langword="CUSTDATA" /> che contiene tutti gli elementi di dati personalizzati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllImplTypeCustData(System.Int32,System.IntPtr)">
      <summary>Ottiene tutti i dati personalizzati per il tipo di implementazione specificato.</summary>
      <param name="index">Indice del tipo di implementazione per i dati personalizzati.</param>
      <param name="pCustData">Puntatore a <see langword="CUSTDATA" /> che contiene tutti gli elementi di dati personalizzati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllParamCustData(System.Int32,System.Int32,System.IntPtr)">
      <summary>Ottiene tutti i dati personalizzati per il parametro della funzione specificato.</summary>
      <param name="indexFunc">Indice della funzione per la quale ottenere i dati personalizzati.</param>
      <param name="indexParam">Indice del parametro della funzione per la quale ottenere i dati personalizzati.</param>
      <param name="pCustData">Puntatore a <see langword="CUSTDATA" /> che contiene tutti gli elementi di dati personalizzati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllVarCustData(System.Int32,System.IntPtr)">
      <summary>Ottiene la variabile per i dati personalizzati.</summary>
      <param name="index">Indice della variabile per la quale ottenere i dati personalizzati.</param>
      <param name="pCustData">Puntatore a <see langword="CUSTDATA" /> che contiene tutti gli elementi di dati personalizzati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
      <summary>Recupera la libreria dei tipi che contiene questa descrizione del tipo e il relativo indice all'interno della libreria.</summary>
      <param name="ppTLB">Quando termina, questo metodo contiene un riferimento alla libreria dei tipi contenitore. Questo parametro viene passato non inizializzato.</param>
      <param name="pIndex">Quando termina, questo metodo contiene un riferimento all'indice della descrizione dei tipi all'interno della libreria dei tipi contenitore. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetCustData(System.Guid@,System.Object@)">
      <summary>Ottiene i dati personalizzati.</summary>
      <param name="guid">GUID usato per identificare i dati.</param>
      <param name="pVarVal">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="Object" /> che specifica dove inserire i dati recuperati. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>Recupera una descrizione o specifica di un punto di ingresso per una funzione in una DLL.</summary>
      <param name="memid">ID della funzione membro di cui restituire la descrizione del punto di ingresso della DLL.</param>
      <param name="invKind">Uno dei valori <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> che specifica il tipo di membro identificato da <paramref name="memid" />.</param>
      <param name="pBstrDllName">Se non è <see langword="null" />, la funzione imposterà <paramref name="pBstrDllName" /> su un <see langword="BSTR" /> che contiene il nome della DLL.</param>
      <param name="pBstrName">Se non è <see langword="null" />, la funzione imposterà <c>lpbstrName</c> su un <see langword="BSTR" /> che contiene il nome del punto di ingresso.</param>
      <param name="pwOrdinal">Se non è <see langword="null" /> e la funzione è definita da un numero ordinale, <c>lpwOrdinal</c> verrà impostato in modo da puntare all'ordinale.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>Recupera la stringa di documentazione, il nome e il percorso completo del file della Guida e l'ID del contesto per l'argomento della Guida relativo a una descrizione del tipo specifica.</summary>
      <param name="index">ID del membro di cui restituire la documentazione.</param>
      <param name="strName">Quando termina, questo metodo contiene il nome del metodo dell'elemento. Questo parametro viene passato non inizializzato.</param>
      <param name="strDocString">Quando termina, questo metodo contiene la stringa di documentazione per l'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="dwHelpContext">Quando termina, questo metodo contiene un riferimento al contesto della Guida associato all'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="strHelpFile">Quando termina, questo metodo contiene il nome completo del file della Guida. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
      <summary>Recupera la stringa di documentazione, il percorso e il nome completo del file della Guida, il contesto di localizzazione da usare e l'ID del contesto per l'argomento della Guida della libreria nel file della Guida.</summary>
      <param name="memid">Identificatore del membro per la descrizione del tipo.</param>
      <param name="pbstrHelpString">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="BSTR" /> che contiene il nome dell'elemento specificato. Se il chiamante non necessita del nome dell'elemento, <paramref name="pbstrHelpString" /> può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pdwHelpStringContext">Quando restituisce il controllo, questo metodo contiene il contesto di localizzazione della Guida. Se il chiamante non necessita del contesto della Guida, <paramref name="pdwHelpStringContext" /> può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pbstrHelpStringDll">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="BSTR" /> che contiene il nome completo del file contenente la DLL usata per il file della Guida. Se il chiamante non necessita del nome del file, <paramref name="pbstrHelpStringDll" /> può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncCustData(System.Int32,System.Guid@,System.Object@)">
      <summary>Ottiene i dati personalizzati dalla funzione specificata.</summary>
      <param name="index">Indice della funzione per la quale ottenere i dati personalizzati.</param>
      <param name="guid">GUID usato per identificare i dati.</param>
      <param name="pVarVal">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="Object" /> che specifica dove inserire i dati. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncDesc(System.Int32,System.IntPtr@)">
      <summary>Recupera la struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> che contiene le informazioni relative a una funzione specificata.</summary>
      <param name="index">Indice della descrizione della funzione da restituire.</param>
      <param name="ppFuncDesc">Quando termina, questo metodo contiene un riferimento a una struttura <see langword="FUNCDESC" /> che descrive la funzione specificata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncIndexOfMemId(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.Int32@)">
      <summary>Si associa a un membro specifico basato su un DISPID noto, in cui il nome del membro è sconosciuto (ad esempio, quando si associa a un membro predefinito).</summary>
      <param name="memid">Identificatore del membro.</param>
      <param name="invKind">Uno dei valori <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> che specifica il tipo di membro identificato da memid.</param>
      <param name="pFuncIndex">Quando restituisce il controllo, questo metodo contiene un indice nella funzione. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
      <summary>Esegue il mapping tra i nomi e gli ID dei membri e tra i nomi e gli ID dei parametri.</summary>
      <param name="rgszNames">Matrice di nomi di cui eseguire il mapping.</param>
      <param name="cNames">Conteggio dei nomi di cui eseguire il mapping.</param>
      <param name="pMemId">Quando termina, questo metodo contiene un riferimento a una matrice in cui si trovano i mapping dei nomi. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetImplTypeCustData(System.Int32,System.Guid@,System.Object@)">
      <summary>Ottiene il tipo di implementazione dei dati personalizzati.</summary>
      <param name="index">Indice del tipo di implementazione per i dati personalizzati.</param>
      <param name="guid">GUID usato per identificare i dati.</param>
      <param name="pVarVal">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="Object" /> che specifica dove inserire i dati recuperati. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
      <summary>Recupera il valore <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> per un'interfaccia implementata o un'interfaccia di base in una descrizione del tipo.</summary>
      <param name="index">Indice dell'interfaccia implementata o dell'interfaccia di base.</param>
      <param name="pImplTypeFlags">Quando termina, questo metodo contiene un riferimento all'enumerazione <see langword="IMPLTYPEFLAGS" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetMops(System.Int32,System.String@)">
      <summary>Recupera le informazioni di marshalling.</summary>
      <param name="memid">ID del membro che indica le informazioni di marshalling necessarie.</param>
      <param name="pBstrMops">Quando termina, questo metodo contiene un riferimento alla stringa <see langword="opcode" /> utilizzata nel marshaling dei campi della struttura descritta dalla descrizione del tipo a cui viene fatto riferimento oppure restituisce <see langword="null" /> se non sono disponibili informazioni da restituire. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
      <summary>Recupera la variabile con l'ID del membro specificato (o il nome della proprietà o del metodo e i relativi parametri) che corrisponde all'ID di funzione specificato.</summary>
      <param name="memid">ID del membro di cui restituire il cui nome o i nomi.</param>
      <param name="rgBstrNames">Quando termina, questo metodo contiene il nome o i nomi associati al membro. Questo parametro viene passato non inizializzato.</param>
      <param name="cMaxNames">Lunghezza della matrice <paramref name="rgBstrNames" />.</param>
      <param name="pcNames">Quando termina, questo metodo contiene il numero di nomi nella matrice <paramref name="rgBstrNames" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetParamCustData(System.Int32,System.Int32,System.Guid@,System.Object@)">
      <summary>Ottiene il parametro specificato per i dati personalizzati.</summary>
      <param name="indexFunc">Indice della funzione per la quale ottenere i dati personalizzati.</param>
      <param name="indexParam">Indice del parametro della funzione per la quale ottenere i dati personalizzati.</param>
      <param name="guid">GUID usato per identificare i dati.</param>
      <param name="pVarVal">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="Object" /> che specifica dove inserire i dati recuperati. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary>Recupera le descrizioni di tipo cui viene fatto riferimento, se una descrizione del tipo fa riferimento ad altre.</summary>
      <param name="hRef">Handle alla descrizione del tipo cui viene fatto riferimento da restituire.</param>
      <param name="ppTI">Quando termina, questo metodo contiene la descrizione del tipo cui viene fatto riferimento. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetRefTypeOfImplType(System.Int32,System.Int32@)">
      <summary>Recupera la descrizione dei tipi di interfaccia implementati, se una descrizione del tipo descrive una classe COM.</summary>
      <param name="index">Indice del tipo implementato di cui viene restituito l'handle.</param>
      <param name="href">Quando termina, questo metodo contiene un riferimento a un handle per l'interfaccia implementata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeAttr(System.IntPtr@)">
      <summary>Recupera una struttura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> che contiene gli attributi della descrizione del tipo.</summary>
      <param name="ppTypeAttr">Quando termina, questo metodo contiene un riferimento alla struttura che contiene gli attributi della descrizione del tipo. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary>Recupera l'interfaccia <see langword="ITypeComp" /> per la descrizione del tipo, che consente a un compilatore client di eseguire l'associazione ai membri della descrizione del tipo.</summary>
      <param name="ppTComp">Quando termina, questo metodo contiene un riferimento all'interfaccia <see langword="ITypeComp" /> della libreria dei tipi contenitore. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeFlags(System.Int32@)">
      <summary>Restituisce i flag di tipo senza allocazioni. Questo metodo restituisce un flag di tipo <see langword="DWORD" /> che espande i flag di tipo senza accrescere l'attributo di tipo <see langword="TYPEATTR" />.</summary>
      <param name="pTypeFlags">Quando restituisce il controllo, questo metodo contiene un riferimento <see langword="DWORD" /> a <see langword="TYPEFLAG" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeKind(System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary>Restituisce l'enumerazione <see langword="TYPEKIND" /> rapidamente, senza eseguire allocazioni.</summary>
      <param name="pTypeKind">Quando restituisce il controllo, questo metodo contiene un riferimento a un'enumerazione <see langword="TYPEKIND" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarCustData(System.Int32,System.Guid@,System.Object@)">
      <summary>Ottiene la variabile per i dati personalizzati.</summary>
      <param name="index">Indice della variabile per la quale ottenere i dati personalizzati.</param>
      <param name="guid">GUID usato per identificare i dati.</param>
      <param name="pVarVal">Quando restituisce il controllo, questo metodo contiene un oggetto <see langword="Object" /> che specifica dove inserire i dati recuperati. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarDesc(System.Int32,System.IntPtr@)">
      <summary>Recupera una struttura <see langword="VARDESC" /> che descrive la variabile specificata.</summary>
      <param name="index">Indice della descrizione della variabile da restituire.</param>
      <param name="ppVarDesc">Quando termina, questo metodo contiene un riferimento alla struttura <see langword="VARDESC" /> che descrive la variabile specificata. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarIndexOfMemId(System.Int32,System.Int32@)">
      <summary>Si associa a un membro specifico basato su un <see langword="DISPID" /> noto, in cui il nome del membro è sconosciuto (ad esempio, quando si associa a un membro predefinito).</summary>
      <param name="memid">Identificatore del membro.</param>
      <param name="pVarIndex">Quando restituisce il controllo, questo metodo contiene un indice di <paramref name="memid" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary>Richiama un metodo o accede a una proprietà di un oggetto, che implementa l'interfaccia descritta dalla descrizione del tipo.</summary>
      <param name="pvInstance">Riferimento all'interfaccia descritta da questa descrizione del tipo.</param>
      <param name="memid">Identificatore del membro di interfaccia.</param>
      <param name="wFlags">Flag che descrivono il contesto della chiamata Invoke.</param>
      <param name="pDispParams">Riferimento a una struttura che contiene una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi in ogni matrice.</param>
      <param name="pVarResult">Riferimento al percorso in cui archiviare il risultato. Se <paramref name="wFlags" /> specifica <see langword="DISPATCH_PROPERTYPUT" /> o <see langword="DISPATCH_PROPERTYPUTREF" />, <paramref name="pVarResult" /> verrà ignorato. Impostare su <see langword="null" /> se non si desidera alcun risultato.</param>
      <param name="pExcepInfo">Puntatore a una struttura di informazioni sulle eccezioni, compilata solo se viene restituito <see langword="DISP_E_EXCEPTION" />.</param>
      <param name="puArgErr">Se <see langword="Invoke" /> restituisce <see langword="DISP_E_TYPEMISMATCH" />, <paramref name="puArgErr" /> indica l'indice dell'argomento con il tipo non corretto. Se più argomenti restituiscono un errore, <paramref name="puArgErr" /> indicherà solo il primo argomento con l'errore.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseFuncDesc(System.IntPtr)">
      <summary>Libera una struttura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> precedentemente restituita dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pFuncDesc">Riferimento alla struttura <see langword="FUNCDESC" /> da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseTypeAttr(System.IntPtr)">
      <summary>Libera una struttura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> precedentemente restituita dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)" />.</summary>
      <param name="pTypeAttr">Riferimento alla struttura <see langword="TYPEATTR" /> da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseVarDesc(System.IntPtr)">
      <summary>Libera una struttura <see langword="VARDESC" /> precedentemente restituita dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pVarDesc">Riferimento alla struttura <see langword="VARDESC" /> da liberare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeLib">
      <summary>Fornisce la definizione gestita dell'interfaccia <see langword="ITypeLib" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)">
      <summary>Individua le occorrenze di una descrizione dei tipi in una libreria dei tipi.</summary>
      <param name="szNameBuf">Nome da cercare. Parametro in/out.</param>
      <param name="lHashVal">Valore hash per accelerare la ricerca, calcolato dalla funzione <see langword="LHashValOfNameSys" />. Se <paramref name="lHashVal" /> è 0, verrà calcolato un valore.</param>
      <param name="ppTInfo">Quando termina, questo metodo restituisce una matrice di puntatori alle descrizioni dei tipi che contengono il nome specificato in <paramref name="szNameBuf" />. Questo parametro viene passato non inizializzato.</param>
      <param name="rgMemId">Matrice dell'oggetto <see langword="MEMBERID" /> degli elementi individuati; <paramref name="rgMemId" />[i] è l'oggetto <see langword="MEMBERID" /> che crea indici nella descrizione dei tipi specificata da <paramref name="ppTInfo" />[i]. Non può essere <see langword="null" />.</param>
      <param name="pcFound">In ingresso, indica il numero di istanze da ricercare. <paramref name="pcFound" /> = 1, ad esempio, può essere chiamato per cercare la prima occorrenza. La ricerca termina quando viene trovata un'istanza.
In uscita, indica il numero delle istanze trovate. Se i valori <see langword="in" /> e <see langword="out" /> di <paramref name="pcFound" /> sono identici, è possibile che siano disponibili più descrizioni dei tipi che contengono il nome.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>Recupera la stringa di documentazione della libreria, il nome e il percorso completo del file della Guida e l'identificatore del contesto per l'argomento della Guida della libreria nel file della Guida.</summary>
      <param name="index">Indice della descrizione del tipo di cui restituire la documentazione.</param>
      <param name="strName">Quando termina, questo metodo contiene una stringa che rappresenta il nome dell'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="strDocString">Quando termina, questo metodo contiene una stringa che rappresenta la stringa di documentazione per l'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="dwHelpContext">Quando termina, questo metodo contiene l'identificatore di contesto della Guida associato all'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="strHelpFile">Quando termina, questo metodo contiene una stringa che rappresenta il nome completo del file della Guida. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)">
      <summary>Recupera la struttura che contiene gli attributi della libreria.</summary>
      <param name="ppTLibAttr">Quando termina, questo metodo contiene una struttura che contiene gli attributi della libreria. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary>Consente a un compilatore client di effettuare l'associazione ai tipi, alle variabili, alle costanti e alle funzioni globali di una libreria.</summary>
      <param name="ppTComp">Quando termina, questo metodo contiene un'istanza di un'istanza di <see langword="ITypeComp" /> per <see langword="ITypeLib" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary>Recupera la descrizione del tipo specificata nella libreria.</summary>
      <param name="index">Indice dell'interfaccia <see langword="ITypeInfo" /> da restituire.</param>
      <param name="ppTI">Quando termina, questo metodo contiene un'interfaccia <see langword="ITypeInfo" /> che descrive il tipo a cui fa riferimento <paramref name="index" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoCount">
      <summary>Restituisce il numero delle descrizioni dei tipi nella libreria dei tipi.</summary>
      <returns>Numero delle descrizioni dei tipi nella libreria dei tipi.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary>Recupera la descrizione del tipo che corrisponde al GUID specificato.</summary>
      <param name="guid">IID dell'interfaccia o CLSID della classe di cui vengono richieste le informazioni sul tipo.</param>
      <param name="ppTInfo">Quando termina, questo metodo contiene l'interfaccia <see langword="ITypeInfo" /> richiesta. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary>Recupera il tipo di una descrizione del tipo.</summary>
      <param name="index">Indice della descrizione dei tipi all'interno della libreria dei tipi.</param>
      <param name="pTKind">Quando termina, questo metodo contiene un riferimento all'enumerazione <see langword="TYPEKIND" /> per la descrizione del tipo. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.IsName(System.String,System.Int32)">
      <summary>Indica se una stringa passata contiene il nome di un tipo o di un membro descritto nella libreria.</summary>
      <param name="szNameBuf">Stringa da testare. Parametro in/out.</param>
      <param name="lHashVal">Valore hash di <paramref name="szNameBuf" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="szNameBuf" /> viene trovato nella libreria dei tipi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary>Libera la struttura <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> originariamente ottenuta dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr">Struttura <see langword="TLIBATTR" /> da liberare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeLib2">
      <summary>Fornisce una definizione gestita dell'interfaccia <see langword="ITypeLib2" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)">
      <summary>Individua le occorrenze di una descrizione dei tipi in una libreria dei tipi.</summary>
      <param name="szNameBuf">Nome da cercare.</param>
      <param name="lHashVal">Valore hash per accelerare la ricerca, calcolato dalla funzione <see langword="LHashValOfNameSys" />. Se <paramref name="lHashVal" /> è 0, verrà calcolato un valore.</param>
      <param name="ppTInfo">Quando termina, questo metodo restituisce una matrice di puntatori alle descrizioni dei tipi che contengono il nome specificato in <paramref name="szNameBuf" />. Questo parametro viene passato non inizializzato.</param>
      <param name="rgMemId">Quando termina, questo metodo contiene una matrice di <see langword="MEMBERID" /> degli elementi trovati; <paramref name="rgMemId" /> [i] è l'oggetto <see langword="MEMBERID" /> che indicizza nella descrizione dei tipi specificata da <paramref name="ppTInfo" /> [i]. Questo parametro non può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pcFound">In ingresso, valore passato per riferimento che indica quante istanze cercare. <paramref name="pcFound" /> = 1, ad esempio, può essere chiamato per cercare la prima occorrenza. La ricerca termina quando viene trovata un'istanza.
In uscita, indica il numero delle istanze trovate. Se i valori <see langword="in" /> e <see langword="out" /> di <paramref name="pcFound" /> sono identici, è possibile che siano disponibili più descrizioni dei tipi che contengono il nome.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetAllCustData(System.IntPtr)">
      <summary>Ottiene tutti gli elementi dati personalizzati della libreria.</summary>
      <param name="pCustData">Puntatore a <see langword="CUSTDATA" /> che contiene tutti gli elementi di dati personalizzati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetCustData(System.Guid@,System.Object@)">
      <summary>Ottiene i dati personalizzati.</summary>
      <param name="guid">Oggetto <see cref="T:System.Guid" />, passato per riferimento, che viene usato per identificare i dati.</param>
      <param name="pVarVal">Quando restituisce il controllo, questo metodo contiene un oggetto che specifica dove inserire i dati recuperati. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>Recupera la stringa di documentazione della libreria, il nome e il percorso completo del file della Guida e l'identificatore del contesto per l'argomento della Guida della libreria nel file della Guida.</summary>
      <param name="index">Indice della descrizione del tipo di cui restituire la documentazione.</param>
      <param name="strName">Quando termina, questo metodo contiene una stringa che specifica il nome dell'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="strDocString">Quando termina, questo metodo contiene la stringa di documentazione per l'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="dwHelpContext">Quando termina, questo metodo contiene l'identificatore di contesto della Guida associato all'elemento specificato. Questo parametro viene passato non inizializzato.</param>
      <param name="strHelpFile">Quando termina, questo metodo contiene una stringa che specifica il nome completo del file della Guida. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
      <summary>Recupera la stringa di documentazione della libreria, il percorso e il nome completo del file della Guida, il contesto di localizzazione da usare e l'ID del contesto per l'argomento della Guida della libreria nel file della Guida.</summary>
      <param name="index">Indice della descrizione del tipo la cui documentazione deve essere restituita. Se <paramref name="index" /> è -1, la documentazione relativa alla libreria viene restituita.</param>
      <param name="pbstrHelpString">Quando restituisce il controllo, questo metodo contiene un oggetto BSTR che indica il nome dell'elemento specificato. Se il chiamante non necessita del nome dell'elemento, <paramref name="pbstrHelpString" /> può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pdwHelpStringContext">Quando restituisce il controllo, questo metodo contiene il contesto di localizzazione della Guida. Se il chiamante non necessita del contesto della Guida, <paramref name="pdwHelpStringContext" /> può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
      <param name="pbstrHelpStringDll">Quando restituisce il controllo, questo metodo contiene un oggetto BSTR che specifica il nome completo del file contenente la DLL usata per il file della Guida. Se il chiamante non necessita del nome del file, <paramref name="pbstrHelpStringDll" /> può essere <see langword="null" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetLibAttr(System.IntPtr@)">
      <summary>Recupera la struttura che contiene gli attributi della libreria.</summary>
      <param name="ppTLibAttr">Quando termina, questo metodo contiene una struttura che contiene gli attributi della libreria. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetLibStatistics(System.IntPtr,System.Int32@)">
      <summary>Restituisce statistiche su una libreria dei tipi richieste per l'efficiente dimensionamento di tabelle hash.</summary>
      <param name="pcUniqueNames">Puntatore a un conteggio di nomi univoci. Se il chiamante non necessita di queste informazioni, impostare su <see langword="null" />.</param>
      <param name="pcchUniqueNames">Quando termina, questo metodo contiene un puntatore a una modifica nel conteggio di nomi univoci. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary>Consente a un compilatore client di effettuare l'associazione ai tipi, alle variabili, alle costanti e alle funzioni globali di una libreria.</summary>
      <param name="ppTComp">Quando termina, questo metodo contiene un'istanza di <see langword="ITypeComp" /> per questo <see langword="ITypeLib" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary>Recupera la descrizione del tipo specificata nella libreria.</summary>
      <param name="index">Indice dell'interfaccia <see langword="ITypeInfo" /> da restituire.</param>
      <param name="ppTI">Quando termina, questo metodo contiene un'interfaccia <see langword="ITypeInfo" /> che descrive il tipo a cui fa riferimento <paramref name="index" />. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoCount">
      <summary>Restituisce il numero delle descrizioni dei tipi nella libreria dei tipi.</summary>
      <returns>Numero delle descrizioni dei tipi nella libreria dei tipi.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary>Recupera la descrizione del tipo che corrisponde al GUID specificato.</summary>
      <param name="guid">Oggetto <see cref="T:System.Guid" />, passato per riferimento, che rappresenta l'IID dell'interfaccia <see langword="CLSID" /> della classe di cui sono richieste informazioni sul tipo.</param>
      <param name="ppTInfo">Quando termina, questo metodo contiene l'interfaccia <see langword="ITypeInfo" /> richiesta. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary>Recupera il tipo di una descrizione del tipo.</summary>
      <param name="index">Indice della descrizione dei tipi all'interno della libreria dei tipi.</param>
      <param name="pTKind">Quando termina, questo metodo contiene un riferimento all'enumerazione <see langword="TYPEKIND" /> per la descrizione del tipo. Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.IsName(System.String,System.Int32)">
      <summary>Indica se una stringa passata contiene il nome di un tipo o di un membro descritto nella libreria.</summary>
      <param name="szNameBuf">Stringa da testare.</param>
      <param name="lHashVal">Valore hash di <paramref name="szNameBuf" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="szNameBuf" /> viene trovato nella libreria dei tipi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.ReleaseTLibAttr(System.IntPtr)">
      <summary>Libera la struttura <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> originariamente ottenuta dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr">Struttura <see langword="TLIBATTR" /> da liberare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.LIBFLAGS">
      <summary>Definisce i flag applicabili alle librerie dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FCONTROL">
      <summary>La libreria dei tipi descrive i controlli e non deve essere visualizzata nei visualizzatori dei tipi destinati agli oggetti non visibili.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FHASDISKIMAGE">
      <summary>La libreria dei tipi viene mantenuta in modo persistente sul disco.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FHIDDEN">
      <summary>La libreria dei tipi non deve essere visibile agli utenti, anche se l'utilizzo non è limitato. La libreria dei tipi deve essere utilizzata da controlli. Gli host devono creare una nuova libreria dei tipi che esegua il wrapping del controllo con proprietà estese.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FRESTRICTED">
      <summary>L'utilizzo della libreria dei tipi è limitato e questa non deve essere visibile agli utenti.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.PARAMDESC">
      <summary>Contiene le informazioni su come eseguire il trasferimento di un elemento di struttura, un parametro o un valore restituito di funzione tra processi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMDESC.lpVarValue">
      <summary>Rappresenta un puntatore a un valore passato da un processo a un altro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMDESC.wParamFlags">
      <summary>Rappresenta valori bitmask che descrivono l'elemento strutturale, il parametro o il valore restituito.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.PARAMFLAG">
      <summary>Descrive come trasferire un elemento di struttura, un parametro o un valore restituito di funzione tra processi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FHASCUSTDATA">
      <summary>Il parametro contiene dati personalizzati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FHASDEFAULT">
      <summary>Il parametro contiene comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FIN">
      <summary>Il parametro passa informazioni dal chiamante al chiamato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FLCID">
      <summary>Il parametro è l'identificatore locale di un'applicazione client.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FOPT">
      <summary>Il parametro è facoltativo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FOUT">
      <summary>Il parametro restituisce informazioni dal chiamante al chiamato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FRETVAL">
      <summary>Il parametro è il valore restituito del membro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_NONE">
      <summary>Non specifica se il parametro passa o riceve informazioni.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STATDATA">
      <summary>Fornisce la definizione gestita della struttura <see langword="STATDATA" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advf">
      <summary>Rappresenta il valore di enumerazione di <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> che determina in quale momento il sink consultivo riceve la notifica delle modifiche apportate ai dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advSink">
      <summary>Rappresenta l'interfaccia <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> che riceverà le notifiche delle modifiche.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.connection">
      <summary>Rappresenta il token che identifica in modo univoco la connessione consultiva. Questo token viene restituito dal metodo che imposta la connessione consultiva.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.formatetc">
      <summary>Rappresenta la struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> per i dati di interesse per il sink di notifica. Il sink di notifica riceve la notifica delle modifiche apportate ai dati specificati da questa struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STATSTG">
      <summary>Contiene informazioni statistiche su un oggetto aperto di un'archiviazione, un flusso o una matrice di byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.atime">
      <summary>Specifica l'ora dell'ultimo accesso di questa archiviazione, flusso o matrice di byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.cbSize">
      <summary>Specifica la dimensione in byte del flusso o della matrice di byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.clsid">
      <summary>Indica l'identificatore di classe per l'oggetto di archiviazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.ctime">
      <summary>Indica l'ora di creazione di questo archivio, flusso o matrice di byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfLocksSupported">
      <summary>Indica i tipi di blocco di area supportati dal flusso o dalla matrice di byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfMode">
      <summary>Indica la modalità di accesso specificata quando l'oggetto è stato aperto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfStateBits">
      <summary>Indica i bit di stato correnti dell'oggetto di archiviazione (il valore impostato più di recente dal metodo <see langword="IStorage::SetStateBits" />).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.mtime">
      <summary>Indica l'ora dell'ultima modifica di questo archivio, flusso o matrice di byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.pwcsName">
      <summary>Rappresenta un puntatore a una stringa con terminazione null contenente il nome dell'oggetto descritto da questa struttura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.reserved">
      <summary>Riservato per usi futuri.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.type">
      <summary>Indica il tipo di oggetto di archiviazione che rappresenta uno dei valori dell'enumerazione di <see langword="STGTY" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM">
      <summary>Fornisce la definizione gestita della struttura <see langword="STGMEDIUM" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease">
      <summary>Rappresenta un puntatore a un'istanza di interfaccia che consente il controllo da parte del processo di invio della modalità di rilascio dell'archiviazione quando il processo ricevente chiama la funzione <see langword="ReleaseStgMedium" />. Se <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, <see langword="ReleaseStgMedium" /> utilizza le routine predefinite per rilasciare l'archiviazione; in caso contrario <see langword="ReleaseStgMedium" /> utilizza l'interfaccia <see langword="IUnknown" /> specificata.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed">
      <summary>Specifica il tipo di supporto di archiviazione. Nelle routine di marshaling e unmarshaling questo valore viene utilizzato per determinare quale membro di union è stato utilizzato. Questo valore deve essere uno degli elementi dell'enumerazione <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.unionmember">
      <summary>Rappresenta un handle, una stringa o un puntatore a interfaccia utilizzabile dal processo ricevente per accedere ai dati di cui è in corso il trasferimento.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.SYSKIND">
      <summary>Identifica la piattaforma del sistema operativo di destinazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_MAC">
      <summary>Il sistema operativo di destinazione per la libreria dei tipi è Apple Macintosh. Per impostazione predefinita, tutti i campi dati sono allineati secondo limiti con byte pari.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN16">
      <summary>Il sistema operativo di destinazione per la libreria dei tipi è il sistema Windows a 16 bit. Per impostazione predefinita, i campi dati sono compressi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN32">
      <summary>Il sistema operativo di destinazione per la libreria dei tipi è il sistema Windows a 32 bit. Per impostazione predefinita, i campi dati sono allineati naturalmente (gli interi a 2 byte, ad esempio, sono allineati secondo limiti a byte pari; gli interi a 4 byte sono allineati secondo limiti a quattro parole e così via).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN64">
      <summary>Il sistema operativo di destinazione per la libreria dei tipi è il sistema Windows a 64 bit.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYMED">
      <summary>Fornisce la definizione gestita della struttura <see langword="TYMED" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ENHMF">
      <summary>Il supporto di archiviazione è un enhanced metafile. Se il membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, il processo di destinazione deve usare <see langword="DeleteEnhMetaFile" /> per eliminare la bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE">
      <summary>Il supporto di archiviazione è un file su disco identificato da un percorso. Se il membro <see langword="STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, il processo di destinazione deve usare <see langword="OpenFile" /> per eliminare il file.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_GDI">
      <summary>Il supporto di archiviazione è un componente GDI (Graphics Device Interface, HBITMAP). Se il membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, il processo di destinazione deve usare <see langword="DeleteObject" /> per eliminare la bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL">
      <summary>Il supporto di archiviazione è un handle di memoria globale (HGLOBAL). Allocare il flag GMEM_SHARE all'handle globale. Se il membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, il processo di destinazione deve usare <see langword="GlobalFree" /> per rilasciare la memoria.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE">
      <summary>Il supporto di archiviazione è un componente di archiviazione identificato da un puntatore <see langword="IStorage" />. I dati si trovano nei flussi e negli archivi contenuti da questa istanza di <see langword="IStorage" />. Se il membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> non è <see langword="null" />, il processo di destinazione deve usare <see langword="IStorage::Release" /> per rilasciare il componente di archiviazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM">
      <summary>Il supporto di archiviazione è un oggetto di flusso identificato da un puntatore <see langword="IStream" />. Utilizzare <see langword="ISequentialStream::Read" /> per leggere i dati. Se il membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> non è <see langword="null" />, il processo di destinazione deve usare <see langword="IStream::Release" /> per rilasciare il componente di flusso.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_MFPICT">
      <summary>Il supporto di archiviazione è un metafile (HMETAFILE). Utilizzare le funzioni Windows o WIN32 per accedere ai dati del metafile. Se il membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, il processo di destinazione deve usare <see langword="DeleteMetaFile" /> per eliminare la bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_NULL">
      <summary>Non vengono passati dati.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEATTR">
      <summary>Contiene gli attributi di un <see langword="UCOMITypeInfo" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbAlignment">
      <summary>Specifica l'allineamento dei byte per un'istanza di questo tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbSizeInstance">
      <summary>Dimensione di un'istanza di questo tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbSizeVft">
      <summary>Dimensione della tabella del metodo virtual (VTBL) di questo tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cFuncs">
      <summary>Indica il numero delle funzioni sull'interfaccia descritta da questa struttura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cImplTypes">
      <summary>Indica il numero delle interfacce implementate sull'interfaccia descritta da questa struttura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cVars">
      <summary>Indica il numero delle variabili e dei campi dati sull'interfaccia descritta da questa struttura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.dwReserved">
      <summary>Riservato per usi futuri.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.guid">
      <summary>GUID delle informazioni sul tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.idldescType">
      <summary>Attributi IDL del tipo descritto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.lcid">
      <summary>Impostazioni locali dei nomi dei membri e delle stringhe della documentazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.lpstrSchema">
      <summary>Riservato per usi futuri.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.MEMBER_ID_NIL">
      <summary>Costante utilizzata con i campi <see cref="F:System.Runtime.InteropServices.TYPEATTR.memidConstructor" /> e <see cref="F:System.Runtime.InteropServices.TYPEATTR.memidDestructor" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.memidConstructor">
      <summary>ID del costruttore oppure <see cref="F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL" /> se non ne esiste nessuno.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.memidDestructor">
      <summary>ID del distruttore oppure <see cref="F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL" /> se non ne esiste nessuno.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.tdescAlias">
      <summary>Se <see cref="F:System.Runtime.InteropServices.TYPEATTR.typekind" /> == <see cref="F:System.Runtime.InteropServices.TYPEKIND.TKIND_ALIAS" />, specifica il tipo per il quale questo tipo è un alias.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.typekind">
      <summary>Valore di <see cref="T:System.Runtime.InteropServices.TYPEKIND" /> che descrive il tipo descritto da queste informazioni.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wMajorVerNum">
      <summary>Numero di versione principale.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wMinorVerNum">
      <summary>Numero di versione secondario.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wTypeFlags">
      <summary>Valore di <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" /> che descrive queste informazioni.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEDESC">
      <summary>Descrive il tipo di una variabile, il tipo restituito di una funzione o il tipo di un parametro di funzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEDESC.lpValue">
      <summary>Se la variabile è <see langword="VT_SAFEARRAY" /> oppure <see langword="VT_PTR" />, il campo <see langword="lpValue" /> conterrà un puntatore a un oggetto <see langword="TYPEDESC" /> che specifica il tipo di elemento.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEDESC.vt">
      <summary>Indica il tipo Variant per l'elemento descritto da questo <see langword="TYPEDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEFLAGS">
      <summary>Definisce le proprietà e gli attributi della descrizione di un tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FAGGREGATABLE">
      <summary>La classe supporta l'aggregazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FAPPOBJECT">
      <summary>Descrizione di tipo relativa a un oggetto <see langword="Application" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FCANCREATE">
      <summary>Le istanze del tipo possono essere create da <see langword="ITypeInfo::CreateInstance" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FCONTROL">
      <summary>Il tipo è un controllo da cui saranno derivati altri tipi e non deve essere visibile agli utenti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FDISPATCHABLE">
      <summary>Indica che l'interfaccia deriva da <see langword="IDispatch" />, direttamente o indirettamente. Il flag viene calcolato; pertanto non esiste alcun ODL (Object Description Language) per il flag.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FDUAL">
      <summary>L'interfaccia fornisce l'associazione a <see langword="IDispatch" /> e a VTBL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FHIDDEN">
      <summary>Il tipo non deve essere visibile ai visualizzatori.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FLICENSED">
      <summary>Il tipo è concesso in licenza.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FNONEXTENSIBLE">
      <summary>L'interfaccia non può aggiungere membri in fase di esecuzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FOLEAUTOMATION">
      <summary>I tipi utilizzati nell'interfaccia sono completamente compatibili con l'automazione, compreso il supporto per l'associazione VTBL. Se un'interfaccia viene impostata come duale, vengono impostati questo flag e <see cref="F:System.Runtime.InteropServices.TYPEFLAGS.TYPEFLAG_FDUAL" />. Questo flag non è consentito su interfacce dispatch.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FPREDECLID">
      <summary>Tipo già definito. È necessario che nell'applicazione client venga creata automaticamente una singola istanza dell'oggetto che contiene questo attributo. Il nome della variabile che punta all'oggetto corrisponde a quello della classe dell'oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FPROXY">
      <summary>Indica che l'interfaccia utilizzerà una libreria a collegamento dinamico proxy/stub. Il flag specifica che la registrazione del proxy della libreria dei tipi non deve essere annullata quando viene annullata la registrazione della libreria dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FREPLACEABLE">
      <summary>L'oggetto supporta <see langword="IConnectionPointWithDefault" /> e dispone di comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FRESTRICTED">
      <summary>Non deve essere accessibile dai linguaggi macro. Il flag viene utilizzato per i tipi a livello di sistema o che non devono essere visualizzati dai visualizzatori dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FREVERSEBIND">
      <summary>Indica che la risoluzione dei nomi delle interfacce di base deve essere verificata prima di verificare gli elementi figlio, ovvero il contrario del comportamento predefinito.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEKIND">
      <summary>Specifica vari tipi di dati e funzioni.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_ALIAS">
      <summary>Tipo che costituisce un alias per un altro tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_COCLASS">
      <summary>Insieme di interfacce di componenti implementate.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_DISPATCH">
      <summary>Insieme di metodi e proprietà accessibili mediante <see langword="IDispatch::Invoke" />. Per impostazione predefinita, le interfacce duali restituiscono <see langword="TKIND_DISPATCH" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_ENUM">
      <summary>Insieme di enumeratori.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_INTERFACE">
      <summary>Tipo con funzioni virtual, che sono tutte pure.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_MAX">
      <summary>Marcatore di fine numerazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_MODULE">
      <summary>Modulo che può avere solo dati e funzioni static (ad esempio, una DLL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_RECORD">
      <summary>Struttura senza metodi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_UNION">
      <summary>Unione di tutti i membri con offset zero.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPELIBATTR">
      <summary>Identifica una particolare libreria dei tipi e fornisce il supporto della localizzazione per i nomi dei membri.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.guid">
      <summary>Rappresenta un ID di libreria univoco globale per una libreria di tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.lcid">
      <summary>Rappresenta un ID delle impostazioni locali di una libreria di tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.syskind">
      <summary>Rappresenta la piattaforma hardware di destinazione di una libreria di tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wLibFlags">
      <summary>Rappresenta flag di librerie.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wMajorVerNum">
      <summary>Rappresenta il numero di versione principale di una libreria dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wMinorVerNum">
      <summary>Rappresenta il numero di versione secondario di una libreria dei tipi.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARDESC">
      <summary>Descrive una variabile, una costante o un membro dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.desc">
      <summary>Contiene le informazioni su una variabile.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION">
      <summary>Contiene le informazioni su una variabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.lpvarValue">
      <summary>Descrive una costante simbolica.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.oInst">
      <summary>Indica l'offset della variabile all'interno dell'istanza.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.elemdescVar">
      <summary>Contiene il tipo della variabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.lpstrSchema">
      <summary>Questo campo è riservato per un utilizzo futuro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.memid">
      <summary>Indica l'ID del membro di una variabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.varkind">
      <summary>Definisce la modalità di marshalling di una variabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.wVarFlags">
      <summary>Definisce le proprietà di una variabile.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARFLAGS">
      <summary>Identifica le costanti che definiscono le proprietà di una variabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FBINDABLE">
      <summary>La variabile supporta l'associazione dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDEFAULTBIND">
      <summary>La variabile è la singola proprietà che meglio rappresenta l'oggetto. Solo una variabile nelle informazioni sul tipo può disporre di questo attributo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDEFAULTCOLLELEM">
      <summary>Consente un'ottimizzazione nella quale il compilatore ricerca un membro denominato "xyz" sul tipo di "abc". Se tale membro viene individuato e gli viene assegnato un flag come funzione della funzione di accesso per un elemento dell'insieme predefinito, verrà generata una chiamata alla funzione di tale membro. È consentito sui membri nelle interfacce dispatch e nelle interfacce, ma non sui moduli.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDISPLAYBIND">
      <summary>Variabile che viene visualizzata dall'utente come associabile. È inoltre necessario impostare <see cref="F:System.Runtime.InteropServices.VARFLAGS.VARFLAG_FBINDABLE" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FHIDDEN">
      <summary>La variabile non deve essere visualizzata all'utente in un visualizzatore, anche se esiste ed è associabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FIMMEDIATEBIND">
      <summary>La variabile viene mappata come singole proprietà associabili.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FNONBROWSABLE">
      <summary>La variabile viene visualizzata in un visualizzatore oggetti, ma non in un visualizzatore proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREADONLY">
      <summary>L'assegnazione alla variabile non deve essere consentita.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREPLACEABLE">
      <summary>Inserisce dei tag nell'interfaccia in modo che abbia comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREQUESTEDIT">
      <summary>Quando è impostata, qualunque tentativo di modifica diretta della proprietà genererà una chiamata a <see langword="IPropertyNotifySink::OnRequestEdit" />. L'accettazione della modifica dipende dall'implementazione di <see langword="OnRequestEdit" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FRESTRICTED">
      <summary>La variabile non deve essere accessibile dai linguaggi macro. Il flag è destinato alle variabili a livello di sistema o alle variabili che non devono essere visualizzate dai visualizzatori di tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FSOURCE">
      <summary>La variabile restituisce un oggetto che rappresenta un'origine di eventi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FUIDEFAULT">
      <summary>La variabile è la visualizzazione predefinita nell'interfaccia utente.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARKIND">
      <summary>Definisce il tipo di variabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_CONST">
      <summary>La struttura <see langword="VARDESC" /> descrive una costante simbolica. Non vi è memoria associata.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_DISPATCH">
      <summary>La variabile è accessibile solo mediante <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_PERINSTANCE">
      <summary>La variabile è un campo o un membro del tipo. È presente in corrispondenza di un offset fisso all'interno di ciascuna istanza del tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_STATIC">
      <summary>Esiste una sola istanza della variabile.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
      <summary>Specifica il metodo da chiamare quando si annulla la registrazione di un assembly per l'utilizzo in COM; questo metodo consente l'esecuzione di codice scritto dall'utente durante la procedura di annullamento della registrazione.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComUnregisterFunctionAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CurrencyWrapper">
      <summary>Esegue il wrapping degli oggetti di cui il gestore di marshalling deve eseguire il marshalling come <see langword="VT_CY" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Decimal)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.CurrencyWrapper" /> con il valore <see langword="Decimal" /> di cui eseguire il wrapping e da trasformare e sottoporre a marshalling come tipo <see langword="VT_CY" />.</summary>
      <param name="obj">Valore <see langword="Decimal" /> di cui eseguire il wrapping e da sottoporre a marshalling come <see langword="VT_CY" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.CurrencyWrapper" /> con l'oggetto contenente il valore <see langword="Decimal" /> di cui eseguire il wrapping e da sottoporre a marshalling come tipo <see langword="VT_CY" />.</summary>
      <param name="obj">Oggetto contenente il valore <see langword="Decimal" /> di cui eseguire il wrapping e da sottoporre a marshalling come <see langword="VT_CY" />.</param>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="obj" /> non è di tipo <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.CurrencyWrapper.WrappedObject">
      <summary>Ottiene l'oggetto di cui è stato eseguito il wrapping, da sottoporre a marshalling come tipo <see langword="VT_CY" />.</summary>
      <returns>Oggetto di cui è stato eseguito il wrapping, da sottoporre a marshalling come tipo <see langword="VT_CY" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.CustomQueryInterfaceMode">
      <summary>Indica se le chiamate del metodo <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" /> di tipo IUnknown::QueryInterface possono usare l'interfaccia <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceMode.Allow">
      <summary>Le chiamate del metodo IUnknown::QueryInterface possono usare l'interfaccia <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />. Quando si utilizza questo valore, le funzioni di overload del metodo <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" /> preferiscono l'overload <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceMode.Ignore">
      <summary>Le chiamate del metodo IUnknown::QueryInterface dovrebbero ignorare l'interfaccia <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CustomQueryInterfaceResult">
      <summary>Fornisce i valori restituiti dal metodo <see cref="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.Failed">
      <summary>L'interfaccia per un ID di interfaccia specifico non è disponibile. In questo caso l'interfaccia restituita è <see langword="null" />. E_NOINTERFACE viene restituito al chiamante di IUnknown::QueryInterface.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled">
      <summary>Il puntatore a interfaccia restituito dal metodo <see cref="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)" /> può essere usato come risultato di IUnknown::QueryInterface.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled">
      <summary>La <see langword="QueryInterface" /> personalizzata non è stata utilizzata. Al contrario, deve essere usata l'implementazione predefinita di IUnknown::QueryInterface.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultCharSetAttribute">
      <summary>Specifica il valore dell'enumerazione <see cref="T:System.Runtime.InteropServices.CharSet" />. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultCharSetAttribute.#ctor(System.Runtime.InteropServices.CharSet)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.DefaultCharSetAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.CharSet" /> specificato.</summary>
      <param name="charSet">Uno dei valori di <see cref="T:System.Runtime.InteropServices.CharSet" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultCharSetAttribute.CharSet">
      <summary>Ottiene il valore predefinito <see cref="T:System.Runtime.InteropServices.CharSet" /> per qualsiasi chiamata a <see cref="T:System.Runtime.InteropServices.DllImportAttribute" />.</summary>
      <returns>Valore predefinito <see cref="T:System.Runtime.InteropServices.CharSet" /> per qualsiasi chiamata a <see cref="T:System.Runtime.InteropServices.DllImportAttribute" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
      <summary>Specifica i percorsi utilizzati per individuare le DLL che forniscono le funzioni per i platform invoke.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.#ctor(System.Runtime.InteropServices.DllImportSearchPath)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" />, specificando i percorsi da utilizzare nella ricerca delle destinazioni di platform invoke.</summary>
      <param name="paths">Combinazione bit per bit dei valori di enumerazione che specificano i percorsi in cui la funzione <c>LoadLibraryEx</c> effettua la ricerca nelle operazioni di platform invoke.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.Paths">
      <summary>Ottiene una combinazione bit per bit dei valori di enumerazione che specificano i percorsi in cui la funzione <c>LoadLibraryEx</c> effettua la ricerca nelle operazioni di platform invoke.</summary>
      <returns>Combinazione bit per bit dei valori di enumerazione che specificano i pInvoke.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultParameterValueAttribute">
      <summary>Imposta il valore predefinito di un parametro quando viene chiamato da un linguaggio che supporta parametri predefiniti. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultParameterValueAttribute.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.DefaultParameterValueAttribute" /> con il valore predefinito di un parametro.</summary>
      <param name="value">Oggetto che rappresenta il valore predefinito di un parametro.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultParameterValueAttribute.Value">
      <summary>Ottiene il valore predefinito di un parametro.</summary>
      <returns>Oggetto che rappresenta il valore predefinito di un parametro.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DispatchWrapper">
      <summary>Esegue il wrapping degli oggetti di cui il gestore di marshalling deve eseguire il marshalling come <see langword="VT_DISPATCH" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DispatchWrapper.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.DispatchWrapper" /> con l'oggetto di cui è stato eseguito il wrapping.</summary>
      <param name="obj">L'oggetto di cui è stato eseguito il wrapping e convertire in <see cref="F:System.Runtime.InteropServices.VarEnum.VT_DISPATCH" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> non è una classe né una matrice.
-oppure-
<paramref name="obj" /> non supporta <see langword="IDispatch" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il parametro <paramref name="obj" /> è contrassegnato con un attributo <see cref="T:System.Runtime.InteropServices.ComVisibleAttribute" /> al quale è stato passato il valore <see langword="false" />.
-oppure-
Il parametro <paramref name="obj" /> eredita da un tipo contrassegnato con un attributo <see cref="T:System.Runtime.InteropServices.ComVisibleAttribute" /> al quale è stato passato il valore <see langword="false" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.DispatchWrapper.WrappedObject">
      <summary>Ottiene l'oggetto di cui è stato eseguito il wrapping da <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />.</summary>
      <returns>L'oggetto di cui è stato eseguito il wrapping da <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DispIdAttribute">
      <summary>Specifica l'identificatore di invio (DISPID) COM di un metodo, un campo o una proprietà.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DispIdAttribute.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see langword="DispIdAttribute" /> con il DISPID specificato.</summary>
      <param name="dispId">DISPID del membro.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DispIdAttribute.Value">
      <summary>Ottiene il DISPID del membro.</summary>
      <returns>DISPID del membro.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportAttribute">
      <summary>Indica che il metodo con attributi viene esposto da una libreria a collegamento dinamico (DLL) non gestita come punto di ingresso statico.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DllImportAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> con il nome della DLL che contiene il metodo da importare.</summary>
      <param name="dllName">Nome della DLL che contiene il metodo non gestito. Può includere il nome visualizzato di un assembly, se la DLL è inclusa in un assembly.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping">
      <summary>Abilita o disabilita il comportamento di mapping più appropriato per la conversione di caratteri Unicode in caratteri ANSI.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention">
      <summary>Indica la convenzione di chiamata di un punto di ingresso.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.CharSet">
      <summary>Indica come eseguire il marshalling dei parametri di stringa nel metodo e controlla l'alterazione dei nomi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.EntryPoint">
      <summary>Indica il nome o l'ordinale del punto di ingresso DLL da chiamare.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling">
      <summary>Controlla se il campo <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" /> fa in modo che Common Language Runtime cerchi in una DLL non gestita i nomi dei punti di ingresso diversi da quello specificato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig">
      <summary>Indica se i metodi non gestiti con valore restituito <see langword="HRESULT" /> o <see langword="retval" /> vengono convertiti direttamente o se il valore restituito <see langword="HRESULT" /> o <see langword="retval" /> viene convertito automaticamente in eccezioni.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError">
      <summary>Indica se il destinatario della chiamata chiama la funzione API Windows <see langword="SetLastError" /> prima della restituzione di un risultato dal metodo con attributi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar">
      <summary>Abilita o disabilita la generazione di un'eccezione su un carattere Unicode di cui non è possibile eseguire il mapping convertito in un carattere ANSI "?".</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.DllImportAttribute.Value">
      <summary>Ottiene il nome del file DLL che contiene il punto di ingresso.</summary>
      <returns>Nome del file DLL che contiene il punto di ingresso.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportResolver">
      <summary>Specifica un delegato usato per risolvere le librerie native tramite callback.</summary>
      <param name="libraryName">Libreria nativa da risolvere.</param>
      <param name="assembly">Assembly che richiede la risoluzione.</param>
      <param name="searchPath">Eventuale <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> nel PInvoke. In caso contrario, eventuale <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> nell'assembly. In caso contrario, <see langword="null" />.</param>
      <returns>Handle per la libreria nativa caricata in caso di esito positivo o <see cref="F:System.IntPtr.Zero" /> in caso di esito negativo.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportSearchPath">
      <summary>Specifica i percorsi utilizzati per individuare le DLL che forniscono le funzioni per i platform invoke.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.ApplicationDirectory">
      <summary>Includere la directory dell'applicazione nel percorso di ricerca della DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.AssemblyDirectory">
      <summary>Una volta cercate le dipendenze dell'assembly, includere la directory contenente l'assembly stesso e cercare tale directory per prima. Questo valore viene usato da .NET Framework, prima che i percorsi vengano passati alla funzione Win32 LoadLibraryEx.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.LegacyBehavior">
      <summary>Effettuare la ricerca nella directory dell'applicazione e quindi chiamare la funzione Win32 LoadLibraryEx con il flag <c>LOAD_WITH_ALTERED_SEARCH_PATH</c>. Questo valore viene ignorato se viene specificato qualsiasi altro valore. I sistemi operativi che non supportano l'attributo <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> utilizzano questo valore e ignorano gli altri valori.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.SafeDirectories">
      <summary>Includere la directory dell'applicazione, la directory <see langword="%WinDir%\System32" />, e le directory utente nel percorso di ricerca della DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.System32">
      <summary>Includere la directory <see langword="%WinDir%\System32" /> nel percorso di ricerca della DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.UseDllDirectoryForDependencies">
      <summary>Cercare le dipendenze di una DLL nella cartella in cui si trova la DLL prima di cercare in altre cartelle.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.UserDirectories">
      <summary>Includere qualsiasi percorso aggiunto in modo esplicito al percorso di ricerca a livello di processo usando la funzione Win32 <c>AddDllDirectory</c>.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ErrorWrapper">
      <summary>Esegue il wrapping degli oggetti di cui il gestore di marshalling deve eseguire il marshalling come <see langword="VT_ERROR" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> con il valore HRESULT che corrisponde all'eccezione fornita.</summary>
      <param name="e">L'eccezione da convertire in codice di errore.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> con il valore HRESULT dell'errore.</summary>
      <param name="errorCode">Valore HRESULT dell'errore.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> con un oggetto contenente il valore HRESULT dell'errore.</summary>
      <param name="errorCode">L'oggetto contenente il valore HRESULT dell'errore.</param>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="errorCode" /> non è un tipo <see cref="T:System.Int32" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.ErrorWrapper.ErrorCode">
      <summary>Ottiene il codice di errore del wrapper.</summary>
      <returns>Valore HRESULT dell'errore.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.GuidAttribute">
      <summary>Fornisce un oggetto <see cref="T:System.Guid" /> esplicito quando un GUID automatico non è auspicabile.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.GuidAttribute" /> con il GUID specificato.</summary>
      <param name="guid">Oggetto <see cref="T:System.Guid" /> da assegnare.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.GuidAttribute.Value">
      <summary>Ottiene l'oggetto <see cref="T:System.Guid" /> della classe.</summary>
      <returns>Oggetto <see cref="T:System.Guid" /> della classe.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.HandleCollector">
      <summary>Tiene traccia degli handle in attesa e forza una procedura di Garbage Collection quando viene raggiunta la soglia specificata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.HandleCollector" /> utilizzando un nome e una soglia dopo la quale avviare la procedura di Garbage Collection per gli handle.</summary>
      <param name="name">Nome per lo strumento di raccolta. Questo parametro consente di denominare gli strumenti di raccolta che tengono traccia dei tipi di handle in modo separato.</param>
      <param name="initialThreshold">Valore che specifica il punto in cui le procedure di Garbage Collection devono essere avviate.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="initialThreshold" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.HandleCollector" /> utilizzando un nome, una soglia dopo la quale avviare la procedura di Garbage Collection per gli handle e una soglia dopo la quale la procedura deve essere eseguita.</summary>
      <param name="name">Nome per lo strumento di raccolta.  Questo parametro consente di denominare gli strumenti di raccolta che tengono traccia dei tipi di handle in modo separato.</param>
      <param name="initialThreshold">Valore che specifica il punto in cui le procedure di Garbage Collection devono essere avviate.</param>
      <param name="maximumThreshold">Valore che specifica il punto in cui devono essere eseguite le procedure di Garbage Collection. Questo valore deve essere impostato sul numero massimo di handle disponibili.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="initialThreshold" /> è minore di 0.
-oppure-
Il parametro <paramref name="maximumThreshold" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="maximumThreshold" /> è minore del parametro <paramref name="initialThreshold" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Add">
      <summary>Incrementa il numero corrente di handle.</summary>
      <exception cref="T:System.InvalidOperationException">Il valore della proprietà <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> è minore di 0.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Count">
      <summary>Ottiene il numero di handle raccolti.</summary>
      <returns>Numero di handle raccolti.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.InitialThreshold">
      <summary>Ottiene un valore che specifica il punto in cui le procedure di Garbage Collection devono essere avviate.</summary>
      <returns>Valore che specifica il punto in cui le procedure di Garbage Collection devono essere avviate.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.MaximumThreshold">
      <summary>Ottiene un valore che specifica il punto in cui devono essere eseguite le procedure di Garbage Collection.</summary>
      <returns>Valore che specifica il punto in cui devono essere eseguite le procedure di Garbage Collection.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Name">
      <summary>Ottiene il nome di un oggetto <see cref="T:System.Runtime.InteropServices.HandleCollector" />.</summary>
      <returns>Questa proprietà <see cref="P:System.Runtime.InteropServices.HandleCollector.Name" /> consente di denominare gli strumenti di raccolta che tengono traccia dei tipi di handle in modo separato.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Remove">
      <summary>Decrementa il numero corrente di handle.</summary>
      <exception cref="T:System.InvalidOperationException">Il valore della proprietà <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> è minore di 0.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.HandleRef">
      <summary>Esegue il wrapping di un oggetto gestito che contiene un handle a una risorsa passata a un codice non gestito attraverso il platform invoke.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.HandleRef" /> con l'oggetto di cui eseguire il wrapping e un handle alla risorsa utilizzata dal codice non gestito.</summary>
      <param name="wrapper">Oggetto gestito che non deve essere finalizzato fino alla restituzione di un risultato da parte di platform invoke.</param>
      <param name="handle">Oggetto <see cref="T:System.IntPtr" /> che indica un handle a una risorsa.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleRef.Handle">
      <summary>Ottiene l'handle a una risorsa.</summary>
      <returns>Handle a una risorsa.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef)~System.IntPtr">
      <summary>Restituisce l'handle a una risorsa dell'oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" /> specificato.</summary>
      <param name="value">Oggetto che necessita di un handle.</param>
      <returns>Handle a una risorsa dell'oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" /> specificato.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)">
      <summary>Restituisce la rappresentazione interna come valori interi di un oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" />.</summary>
      <param name="value">Oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" /> da recuperare in una rappresentazione interna di valori interi.</param>
      <returns>Oggetto <see cref="T:System.IntPtr" /> che rappresenta un oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" />.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleRef.Wrapper">
      <summary>Ottiene l'oggetto che contiene l'handle a una risorsa.</summary>
      <returns>Oggetto che contiene l'handle a una risorsa.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomAdapter">
      <summary>Fornisce un sistema con cui i client possono accedere all'oggetto effettivo, anziché all'oggetto adapter fornito da un gestore di marshalling personalizzato.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomAdapter.GetUnderlyingObject">
      <summary>Fornisce accesso all'oggetto sottostante di cui un gestore di marshalling personalizzato ha eseguito il wrapping.</summary>
      <returns>Oggetto contenuto dall'oggetto adattatore.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomFactory">
      <summary>Consente agli utenti di scrivere il codice di attivazione per gli oggetti gestiti che estendono <see cref="T:System.MarshalByRefObject" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomFactory.CreateInstance(System.Type)">
      <summary>Crea una nuova istanza del tipo specificato.</summary>
      <param name="serverType">Il tipo da attivare.</param>
      <returns>
        <see cref="T:System.MarshalByRefObject" /> associato al tipo specificato.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomMarshaler">
      <summary>Fornisce wrapper personalizzati per la gestione delle chiamate a metodi.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)">
      <summary>Esegue la necessaria eliminazione dei dati gestiti quando non sono più necessari.</summary>
      <param name="ManagedObj">L'oggetto gestito da distruggere.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)">
      <summary>Esegue la necessaria eliminazione dei dati non gestiti quando non sono più necessari.</summary>
      <param name="pNativeData">Puntatore ai dati non gestiti da distruggere.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize">
      <summary>Restituisce le dimensioni dei dati nativi di cui eseguire il marshalling.</summary>
      <returns>Dimensioni dei dati nativi, in byte.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
      <summary>Converte i dati gestiti in dati non gestiti.</summary>
      <param name="ManagedObj">L'oggetto gestito da convertire.</param>
      <returns>Puntatore alla visualizzazione COM dell'oggetto gestito.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
      <summary>Converte i dati non gestiti in dati gestiti.</summary>
      <param name="pNativeData">Puntatore ai dati non gestiti da trasformare.</param>
      <returns>Oggetto che rappresenta la visualizzazione gestita dei dati COM.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomQueryInterface">
      <summary>Consente agli sviluppatori di fornire un'implementazione gestita e personalizzata del metodo IUnknown::QueryInterface(REFIID riid, void **ppvObject).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)">
      <summary>Restituisce un'interfaccia in base a un ID di interfaccia specificato.</summary>
      <param name="iid">GUID dell'interfaccia richiesta.</param>
      <param name="ppv">Riferimento all'interfaccia richiesta, al completamento del metodo.</param>
      <returns>Uno dei valori di enumerazione che indica se è stata usata un'implementazione personalizzata di IUnknown::QueryInterface.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ImportedFromTypeLibAttribute">
      <summary>Indica che i tipi definiti all'interno di un assembly sono stati definiti in origine in una libreria dei tipi.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ImportedFromTypeLibAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ImportedFromTypeLibAttribute" /> con il nome del file originale della libreria dei tipi.</summary>
      <param name="tlbFile">La posizione del file originale della libreria dei tipi.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ImportedFromTypeLibAttribute.Value">
      <summary>Ottiene il nome del file originale della libreria dei tipi.</summary>
      <returns>Il nome del file originale della libreria dei tipi.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.InterfaceTypeAttribute">
      <summary>Indica se un'interfaccia gestita è del tipo dual, dispatch-only o solo <see langword="IUnknown" /> durante l'esposizione a COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Int16)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.InterfaceTypeAttribute" /> con il membro di enumerazione <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> specificato.</summary>
      <param name="interfaceType">Descrive come esporre l'interfaccia ai client COM.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.InterfaceTypeAttribute" /> con il membro di enumerazione <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> specificato.</summary>
      <param name="interfaceType">Uno dei valori <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> che descrive come esporre l'interfaccia a client COM.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.InterfaceTypeAttribute.Value">
      <summary>Ottiene il valore <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> che descrive come esporre l'interfaccia a COM.</summary>
      <returns>Il valore <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> che descrive come esporre l'interfaccia a COM.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.InvalidComObjectException">
      <summary>Eccezione generata quando si usa un oggetto COM non valido.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor">
      <summary>Inizializza un'istanza della classe <see langword="InvalidComObjectException" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see langword="COMException" /> da dati di serializzazione.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.String)">
      <summary>Inizializza un'istanza della classe <see langword="InvalidComObjectException" /> con un messaggio.</summary>
      <param name="message">Messaggio che indica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.InvalidComObjectException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
      <summary>L'eccezione generata dal gestore di marshalling quando rileva un argomento di un tipo Variant del quale non è possibile eseguire il marshalling nel codice gestito.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see langword="InvalidOleVariantTypeException" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see langword="InvalidOleVariantTypeException" /> da dati di serializzazione.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see langword="InvalidOleVariantTypeException" /> con un messaggio specificato.</summary>
      <param name="message">Messaggio che indica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.LCIDConversionAttribute">
      <summary>Indica che la firma non gestita di un metodo prevede un parametro di ID impostazioni locali (LCID).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.LCIDConversionAttribute.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see langword="LCIDConversionAttribute" /> con la posizione del LCID nella firma non gestita.</summary>
      <param name="lcid">Indica la posizione dell'argomento LCID nella firma non gestita, dove 0 è il primo argomento.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.LCIDConversionAttribute.Value">
      <summary>Ottiene la posizione dell'argomento LCID nella firma non gestita.</summary>
      <returns>Posizione dell'argomento LCID nella firma non gestita, dove 0 è il primo argomento.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute">
      <summary>Fornisce supporto per la personalizzazione dell'utente di stub di interoperabilità negli scenari di interoperabilità da gestito a COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" /> con il nome di metodo e il tipo di classe specificati.</summary>
      <param name="classType">Classe che contiene il metodo stub richiesto.</param>
      <param name="methodName">Nome del metodo stub.</param>
      <exception cref="T:System.ArgumentException">Non è possibile trovare l'oggetto <paramref name="methodName" />.
In alternativa
Il metodo non è statico o non generico.
In alternativa
L'elenco di parametri del metodo non corrisponde all'elenco di parametri previsto per lo stub.</exception>
      <exception cref="T:System.MethodAccessException">L'interfaccia che contiene il metodo di interoperabilità gestito non dispone di accesso al metodo stub, perché tale metodo dispone dell'accessibilità privata o protetta, o a causa di un problema di sicurezza.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType">
      <summary>Ottiene la classe che contiene il metodo stub richiesto.</summary>
      <returns>Classe che contiene lo stub di interoperabilità personalizzato.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName">
      <summary>Ottiene il nome del metodo stub.</summary>
      <returns>Nome di uno stub di interoperabilità personalizzato.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.Marshal">
      <summary>Fornisce una raccolta di metodi per l'allocazione della memoria non gestita, la copia di blocchi di memoria non gestita e la conversione di tipi gestiti in tipi non gestiti, oltre ad altri metodi usati durante l'interazione con codice non gestito.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
      <summary>Incrementa il numero di riferimenti nell'interfaccia specificata.</summary>
      <param name="pUnk">Numero di riferimenti nell'interfaccia da incrementare.</param>
      <returns>Nuovo valore del conteggio dei riferimenti sul parametro <paramref name="pUnk" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
      <summary>Alloca un blocco di memoria delle dimensioni specificate dall'allocatore di memoria delle attività COM.</summary>
      <param name="cb">Dimensioni del blocco di memoria da allocare.</param>
      <returns>Intero che rappresenta l'indirizzo del blocco di memoria allocato. Questa memoria deve essere liberata con <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Memoria insufficiente per soddisfare la richiesta.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
      <summary>Alloca memoria dalla memoria non gestita del processo tramite il numero specificato di byte.</summary>
      <param name="cb">Numero di byte necessari nella memoria.</param>
      <returns>Puntatore alla memoria appena allocata. Questa memoria deve essere liberata usando il metodo <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Memoria insufficiente per soddisfare la richiesta.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
      <summary>Alloca memoria dalla memoria non gestita del processo tramite il puntatore al numero specificato di byte.</summary>
      <param name="cb">Numero di byte necessari nella memoria.</param>
      <returns>Puntatore alla memoria appena allocata. Questa memoria deve essere liberata usando il metodo <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Memoria insufficiente per soddisfare la richiesta.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup">
      <summary>Indica se Runtime Callable Wrapper (RCW) provenienti da qualsiasi contesto sono disponibili per la pulizia.</summary>
      <returns>
        <see langword="true" /> se sono disponibili RCW per la pulizia. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
      <summary>Ottiene un puntatore a interfaccia identificato dal moniker specificato.</summary>
      <param name="monikerName">Moniker corrispondente al puntatore a interfaccia desiderato.</param>
      <returns>Oggetto contenente un riferimento al puntatore a interfaccia identificato dal parametro <paramref name="monikerName" />. Un moniker è rappresentato da un nome; in questo caso il moniker è definito da un'interfaccia.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">Un HRESULT non riconosciuto è stato restituito dal metodo <see langword="BindToMoniker" /> non gestito.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)">
      <summary>Modifica la forza dell'handle COM Callable Wrapper (CCW) di un oggetto.</summary>
      <param name="otp">Oggetto il cui CCW contiene un handle con conteggio dei riferimenti. L'handle è forte se il conteggio dei riferimenti su CCW è maggiore di zero; in caso contrario, è debole.</param>
      <param name="fIsWeak">
        <see langword="true" /> per impostare come debole l'handle sul parametro <paramref name="otp" />, indipendentemente dal numero di riferimenti, <see langword="false" /> per reimpostare la forza dell'handle su <paramref name="otp" /> per ottenere il numero di riferimenti.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
      <summary>Notifica al runtime di eseguire la pulizia di tutti i Runtime Callable Wrapper (RCW) allocati nel contesto corrente.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Copia i dati da una matrice di interi senza segno a 8 bit gestita e unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination">Puntatore di memoria in cui copiare.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Copia i dati da una matrice di caratteri gestita e unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination">Puntatore di memoria in cui copiare.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Copia i dati da una matrice di numeri a virgola mobile a precisione doppia gestita e unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination">Puntatore di memoria in cui copiare.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Copia i dati da una matrice di interi con segno a 16 bit gestita e unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination">Puntatore di memoria in cui copiare.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Copia i dati da una matrice di interi con segno a 32 bit gestita e unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination">Puntatore di memoria in cui copiare.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Copia i dati da una matrice di interi con segno a 64 bit gestita e unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination">Puntatore di memoria in cui copiare.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
      <summary>Copia i dati da un puntatore di memoria non gestita a una matrice di interi senza segno a 8 bit gestita.</summary>
      <param name="source">Puntatore di memoria da cui copiare.</param>
      <param name="destination">Matrice in cui effettuare la copia.</param>
      <param name="startIndex">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
      <summary>Copia i dati da un puntatore di memoria non gestita a una matrice di caratteri gestita.</summary>
      <param name="source">Puntatore di memoria da cui copiare.</param>
      <param name="destination">Matrice in cui effettuare la copia.</param>
      <param name="startIndex">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
      <summary>Copia i dati da un puntatore di memoria non gestita a una matrice di numeri a virgola mobile a precisione doppia gestita.</summary>
      <param name="source">Puntatore di memoria da cui copiare.</param>
      <param name="destination">Matrice in cui effettuare la copia.</param>
      <param name="startIndex">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
      <summary>Copia i dati da un puntatore di memoria non gestita a una matrice di interi con segno a 16 bit gestita.</summary>
      <param name="source">Puntatore di memoria da cui copiare.</param>
      <param name="destination">Matrice in cui effettuare la copia.</param>
      <param name="startIndex">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
      <summary>Copia i dati da un puntatore di memoria non gestita a una matrice di interi con segno a 32 bit gestita.</summary>
      <param name="source">Puntatore di memoria da cui copiare.</param>
      <param name="destination">Matrice in cui effettuare la copia.</param>
      <param name="startIndex">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
      <summary>Copia i dati da un puntatore di memoria non gestita a una matrice di interi con segno a 64 bit gestita.</summary>
      <param name="source">Puntatore di memoria da cui copiare.</param>
      <param name="destination">Matrice in cui effettuare la copia.</param>
      <param name="startIndex">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
      <summary>Copia i dati da un puntatore di memoria non gestita a una matrice <see cref="T:System.IntPtr" /> gestita.</summary>
      <param name="source">Puntatore di memoria da cui copiare.</param>
      <param name="destination">Matrice in cui effettuare la copia.</param>
      <param name="startIndex">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
      <summary>Copia i dati da un puntatore di memoria non gestita a una matrice di numeri a virgola mobile a precisione singola gestita.</summary>
      <param name="source">Puntatore di memoria da cui copiare.</param>
      <param name="destination">Matrice in cui effettuare la copia.</param>
      <param name="startIndex">Indice in base zero nella matrice di destinazione in corrispondenza del quale inizia la copia.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Copia i dati da una matrice <see cref="T:System.IntPtr" /> unidimensionale gestita a un puntatore di memoria non gestita.</summary>
      <param name="source">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination">Puntatore di memoria in cui copiare.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Copia i dati da una matrice di numeri a virgola mobile a precisione singola gestita unidimensionale a un puntatore di memoria non gestita.</summary>
      <param name="source">Matrice unidimensionale da cui copiare.</param>
      <param name="startIndex">Indice in base zero nella matrice di origine in corrispondenza del quale inizia la copia.</param>
      <param name="destination">Puntatore di memoria in cui copiare.</param>
      <param name="length">Numero degli elementi di matrice da copiare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> e <paramref name="length" /> non sono validi.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)">
      <summary>Aggrega un oggetto gestito all'oggetto COM specificato.</summary>
      <param name="pOuter">Puntatore <see langword="IUnknown" /> esterno.</param>
      <param name="o">Oggetto da aggregare.</param>
      <returns>Puntatore <see langword="IUnknown" /> interno dell'oggetto gestito.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> è un oggetto Windows Runtime.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Aggrega un oggetto gestito del tipo specificato con l'oggetto COM specificato.</summary>
      <param name="pOuter">Puntatore IUnknown esterno.</param>
      <param name="o">Oggetto gestito da aggregare.</param>
      <typeparam name="T">Tipo dell'oggetto gestito da aggregare.</typeparam>
      <returns>Puntatore IUnknown interno dell'oggetto gestito.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> è un oggetto Windows Runtime.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
      <summary>Include l'oggetto COM specificato in un oggetto del tipo specificato.</summary>
      <param name="o">Oggetto da includere.</param>
      <param name="t">Tipo di wrapper da creare.</param>
      <returns>L'oggetto appena incluso che è un'istanza del tipo desiderato.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="t" /> deve derivare da <see langword="__ComObject" />.
-oppure-
<paramref name="t" /> è un tipo Windows Runtime.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="t" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Non è possibile convertire <paramref name="o" /> nel tipo di destinazione perché non supporta tutte le interfacce richieste.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Include l'oggetto COM specificato in un oggetto del tipo specificato.</summary>
      <param name="o">Oggetto da includere.</param>
      <typeparam name="T">Tipo di oggetto di cui eseguire il wrapping.</typeparam>
      <typeparam name="TWrapper">Tipo di oggetto da restituire.</typeparam>
      <returns>Oggetto appena incluso.</returns>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="T" /> deve derivare da <see langword="__ComObject" />.
-oppure-
<typeparamref name="T" /> è un tipo Windows Runtime.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="o" /> non può essere convertito in <paramref name="TWrapper" /> perché non supporta tutte le interfacce richieste.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
      <summary>Libera tutte le sottostrutture a cui punta il blocco di memoria non gestita specificato.</summary>
      <param name="ptr">Puntatore a un blocco di memoria non gestita.</param>
      <param name="structuretype">Tipo di una classe formattata. Fornisce le informazioni di layout necessarie per eliminare il buffer o i buffer nel parametro <paramref name="ptr" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="structureType" /> dispone di un layout automatico. Utilizzare invece il layout sequenziale o esplicito.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Libera tutte le sottostrutture di un tipo specificato a cui punta il blocco di memoria non gestita specificato.</summary>
      <param name="ptr">Puntatore a un blocco di memoria non gestita.</param>
      <typeparam name="T">Tipo della struttura formattata. Fornisce le informazioni di layout necessarie per eliminare il buffer o i buffer nel parametro <paramref name="ptr" />.</typeparam>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="T" /> dispone di un layout automatico. Utilizzare invece il layout sequenziale o esplicito.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
      <summary>Rilascia tutti i riferimenti a un Runtime Callable Wrapper (RCW) impostando il conteggio dei riferimenti su 0.</summary>
      <param name="o">Wrapper RCW da rilasciare.</param>
      <returns>Nuovo valore del conteggio dei riferimenti del wrapper RCW associato al parametro <paramref name="o" />, corrispondente a 0 (zero) se il rilascio è stato eseguito correttamente.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> non è un oggetto COM valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="o" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)">
      <summary>Libera un <see langword="BSTR" /> usando la funzione COM SysFreeString.</summary>
      <param name="ptr">Indirizzo del BSTR da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)">
      <summary>Libera un blocco di memoria assegnato dall'allocatore di memoria non gestita delle attività COM.</summary>
      <param name="ptr">Indirizzo della memoria da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
      <summary>Libera la memoria precedentemente allocata dalla memoria non gestita del processo.</summary>
      <param name="hglobal">L'handle restituito dalla chiamata di corrispondenza originale a <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
      <summary>Restituisce il GUID (Globally Unique Identifier) del tipo specificato o genera un GUID mediante l'algoritmo usato da Type Library Exporter (Tlbexp.exe).</summary>
      <param name="type">Tipo per il quale generare un GUID.</param>
      <returns>Identificatore per il tipo specificato.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
      <summary>Restituisce un ProgID (Programmatic Identifier) per il tipo specificato.</summary>
      <param name="type">Tipo per il quale ottenere un ProgID.</param>
      <returns>ProgID del tipo specificato.</returns>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="type" /> non è una classe che può essere creata da COM. La classe deve essere pubblica, avere di un costruttore senza parametri pubblico e deve essere visibile a COM.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
      <summary>Restituisce un puntatore a un'interfaccia IUnknown che rappresenta l'interfaccia specificata sull'oggetto specificato. L'accesso all'interfaccia di query è abilitato per impostazione predefinita.</summary>
      <param name="o">Oggetto che fornisce l'interfaccia.</param>
      <param name="T">Tipo di interfaccia richiesto.</param>
      <returns>Puntatore a interfaccia che rappresenta l'interfaccia specificata per l'oggetto.</returns>
      <exception cref="T:System.ArgumentException">Il parametro <typeparamref name="T" /> non è un'interfaccia.
-oppure-
Il tipo non è visibile a COM.
-oppure-
Il parametro <typeparamref name="T" /> è una definizione di tipo generico.</exception>
      <exception cref="T:System.InvalidCastException">Il parametro <paramref name="o" /> non supporta l'interfaccia richiesta.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="o" /> è <see langword="null" />.
-oppure-
Il valore del parametro <typeparamref name="T" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
      <summary>Restituisce un puntatore a un'interfaccia IUnknown che rappresenta l'interfaccia specificata sull'oggetto specificato. L'accesso all'interfaccia di query personalizzato viene controllato dalla modalità della personalizzazione specificata.</summary>
      <param name="o">Oggetto che fornisce l'interfaccia.</param>
      <param name="T">Tipo di interfaccia richiesto.</param>
      <param name="mode">Uno dei valori di enumerazione che indica se applicare una personalizzazione <see langword="IUnknown::QueryInterface" /> fornita da un oggetto <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</param>
      <returns>Puntatore a interfaccia che rappresenta l'interfaccia per l'oggetto.</returns>
      <exception cref="T:System.ArgumentException">Il parametro <typeparamref name="T" /> non è un'interfaccia.
-oppure-
Il tipo non è visibile a COM.
-oppure-
Il parametro <typeparamref name="T" /> è una definizione di tipo generico.</exception>
      <exception cref="T:System.InvalidCastException">Il parametro <paramref name="o" /> dell'oggetto non supporta l'interfaccia richiesta.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="o" /> è <see langword="null" />.
-oppure-
Il valore del parametro <typeparamref name="T" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Restituisce un puntatore a un'interfaccia IUnknown che rappresenta l'interfaccia specificata sull'oggetto del tipo specificato. L'accesso all'interfaccia di query è abilitato per impostazione predefinita.</summary>
      <param name="o">Oggetto che fornisce l'interfaccia.</param>
      <typeparam name="T">Tipo di <paramref name="o" />.</typeparam>
      <typeparam name="TInterface">Tipo di interfaccia da restituire.</typeparam>
      <returns>Puntatore a interfaccia che rappresenta l'interfaccia <paramref name="TInterface" />.</returns>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="TInterface" /> non è un'interfaccia.
-oppure-
Il tipo non è visibile a COM.
-oppure-
Il parametro <typeparamref name="T" /> è un tipo generico aperto.</exception>
      <exception cref="T:System.InvalidCastException">Il parametro <paramref name="o" /> non supporta l'interfaccia <paramref name="TInterface" />.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="o" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
      <summary>Recupera i dati ai quali fa riferimento la chiave specificata dall'oggetto COM specificato.</summary>
      <param name="obj">Oggetto COM che contiene i dati desiderati.</param>
      <param name="key">Chiave nella tabella hash interna di <paramref name="obj" /> da cui recuperare i dati.</param>
      <returns>Dati rappresentati dal parametro <paramref name="key" /> nella tabella hash interna del parametro <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> è <see langword="null" />.
-oppure-
<paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> non è un oggetto COM.
-oppure-
<paramref name="obj" /> è un oggetto Windows Runtime.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
      <summary>Converte un puntatore a funzione non gestito in un delegato.</summary>
      <param name="ptr">Puntatore alla funzione non gestita da convertire.</param>
      <param name="t">Tipo di delegato da restituire.</param>
      <returns>Istanza di delegato di cui è possibile eseguire il cast al tipo di delegato appropriato.</returns>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="t" /> non è un delegato o è generico.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="ptr" /> è <see langword="null" />.
-oppure-
Il valore del parametro <paramref name="t" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Converte un puntatore a funzione non gestito in un delegato di un tipo specificato.</summary>
      <param name="ptr">Puntatore alla funzione non gestita da convertire.</param>
      <typeparam name="TDelegate">Tipo del delegato da restituire.</typeparam>
      <returns>Istanza del tipo di delegato specificato.</returns>
      <exception cref="T:System.ArgumentException">Il parametro generico <paramref name="TDelegate" /> non è un delegato oppure è un tipo generico aperto.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="ptr" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
      <summary>Recupera l'ultimo slot della tabella della funzione virtuale (V-Table o VTBL) di un tipo quando è esposto a COM.</summary>
      <param name="t">Tipo che rappresenta un'interfaccia o classe.</param>
      <returns>Ultimo slot VTBL dell'interfaccia quando è esposto a COM. Se il parametro <paramref name="t" /> è una classe, lo slot VTBL restituito è l'ultimo slot nell'interfaccia generata dalla classe.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionCode">
      <summary>Recupera un codice che identifica il tipo dell'eccezione che si è verificata.</summary>
      <returns>Tipo dell'eccezione.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)">
      <summary>Converte il codice errore HRESULT specificato in un oggetto <see cref="T:System.Exception" /> corrispondente.</summary>
      <param name="errorCode">Codice errore HRESULT da convertire.</param>
      <returns>Oggetto che rappresenta il valore HRESULT convertito oppure <see langword="null" /> se il valore HRESULT non rappresenta un codice errore (ad esempio, <see langword="S_OK" /> o <see langword="S_FALSE" />).</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
      <summary>Converte il codice di errore HRESULT specificato in un oggetto <see cref="T:System.Exception" /> corrispondente, con ulteriori informazioni sull'errore passate in un'interfaccia IErrorInfo per l'oggetto eccezione.</summary>
      <param name="errorCode">Codice errore HRESULT da convertire.</param>
      <param name="errorInfo">Puntatore all'interfaccia <see langword="IErrorInfo" /> che fornisce informazioni aggiuntive sull'errore. È possibile specificare <c>IntPtr(0)</c> per usare l'interfaccia <see langword="IErrorInfo" /> corrente oppure <c>IntPtr(-1)</c> per ignorare l'interfaccia <see langword="IErrorInfo" /> corrente e costruire l'eccezione unicamente dal codice di errore.</param>
      <returns>Oggetto che rappresenta il valore HRESULT convertito e le informazioni ottenute da <paramref name="errorInfo" /> oppure <see langword="null" /> se un valore HRESULT non rappresenta un codice errore (ad esempio, <see langword="S_OK" /> o <see langword="S_FALSE" />).</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers">
      <summary>Recupera la descrizione di un'eccezione indipendente dal computer e le informazioni sullo stato esistente per il thread nel momento in cui si è verificata l'eccezione.</summary>
      <returns>Puntatore a una struttura EXCEPTION_POINTERS.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
      <summary>Converte un delegato in un puntatore a funzione disponibile per la chiamata dal codice non gestito.</summary>
      <param name="d">Delegato da passare al codice non gestito.</param>
      <returns>Valore che può essere passato al codice non gestito, che a sua volta può usarlo per chiamare il delegato gestito sottostante.</returns>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="d" /> è una definizione di tipo generico.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="d" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Converte un delegato di un tipo specificato in un puntatore a funzione disponibile per la chiamata dal codice non gestito.</summary>
      <param name="d">Delegato da passare al codice non gestito.</param>
      <typeparam name="TDelegate">Tipo di delegato da convertire.</typeparam>
      <returns>Valore che può essere passato al codice non gestito, che a sua volta può usarlo per chiamare il delegato gestito sottostante.</returns>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="d" /> è una definizione di tipo generico.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="d" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)">
      <summary>Restituisce l'handle di istanza (HINSTANCE) per il modulo specificato.</summary>
      <param name="m">Modulo di cui si desidera l'HINSTANCE.</param>
      <returns>HINSTANCE per <paramref name="m" />; o -1 se il modulo non contiene un HINSTANCE.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="m" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
      <summary>Converte l'eccezione specificata in valore HRESULT.</summary>
      <param name="e">Eccezione da convertire in valore HRESULT.</param>
      <returns>Valore HRESULT mappato all'eccezione fornita.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error">
      <summary>Restituisce il valore HRESULT corrispondente all'ultimo errore in cui è incorso il codice Win32 eseguito usando <see cref="T:System.Runtime.InteropServices.Marshal" />.</summary>
      <returns>HRESULT corrispondente all'ultimo codice errore Win32.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
      <summary>Restituisce un'interfaccia IDispatch da un oggetto gestito.</summary>
      <param name="o">Oggetto di cui è richiesta l'interfaccia <see langword="IDispatch" />.</param>
      <returns>Puntatore <see langword="IDispatch" /> per il parametro <paramref name="o" />.</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="o" /> non supporta l'interfaccia richiesta.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
      <summary>Restituisce un'interfaccia IUnknown da un oggetto gestito.</summary>
      <param name="o">Oggetto di cui è richiesta l'interfaccia <see langword="IUnknown" />.</param>
      <returns>Puntatore <see langword="IUnknown" /> per il parametro <paramref name="o" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
      <summary>Restituisce il codice errore restituito dall'ultima funzione non gestita chiamata mediante una chiamata platform invoke con il flag <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> impostato.</summary>
      <returns>Ultimo codice di errore impostato da una chiamata alla funzione Win32 SetLastError.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)">
      <summary>Converte un oggetto nel tipo COM VARIANT.</summary>
      <param name="obj">Oggetto per il quale ottenere un tipo COM VARIANT.</param>
      <param name="pDstNativeVariant">Puntatore per ricevere il VARIANT corrispondente al parametro <paramref name="obj" />.</param>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="obj" /> è un'istanza di un tipo generico.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Esegue la conversione da un oggetto di tipo specificato in un oggetto COM VARIANT.</summary>
      <param name="obj">Oggetto per il quale ottenere un tipo COM VARIANT.</param>
      <param name="pDstNativeVariant">Puntatore per ricevere il VARIANT corrispondente al parametro <paramref name="obj" />.</param>
      <typeparam name="T">Tipo dell'oggetto da convertire.</typeparam>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
      <summary>Restituisce un'istanza di un tipo che rappresenta un oggetto COM tramite un puntatore alla relativa interfaccia IUnknown.</summary>
      <param name="pUnk">Puntatore all'interfaccia <see langword="IUnknown" />.</param>
      <returns>Oggetto che rappresenta l'oggetto COM non gestito specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pUnk" /> è <see cref="F:System.IntPtr.Zero" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
      <summary>Converte un tipo COM VARIANT in un oggetto.</summary>
      <param name="pSrcNativeVariant">Puntatore a un COM VARIANT.</param>
      <returns>Oggetto che corrisponde al parametro <paramref name="pSrcNativeVariant" />.</returns>
      <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
        <paramref name="pSrcNativeVariant" /> non è un tipo VARIANT valido.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pSrcNativeVariant" /> presenta un tipo non supportato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Esegue la conversione da un oggetto di tipo specificato a un oggetto COM VARIANT.</summary>
      <param name="pSrcNativeVariant">Puntatore a un COM VARIANT.</param>
      <typeparam name="T">Tipo in cui convertire COM VARIANT.</typeparam>
      <returns>Oggetto del tipo specificato che corrisponde al parametro <paramref name="pSrcNativeVariant" />.</returns>
      <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
        <paramref name="pSrcNativeVariant" /> non è un tipo VARIANT valido.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pSrcNativeVariant" /> presenta un tipo non supportato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
      <summary>Converte una matrice di tipi COM VARIANT in una matrice di oggetti.</summary>
      <param name="aSrcNativeVariant">Puntatore al primo elemento di una matrice di COM VARIANT.</param>
      <param name="cVars">Numero di tipi COM VARIANT in <paramref name="aSrcNativeVariant" />.</param>
      <returns>Matrice di oggetti che corrisponde a <paramref name="aSrcNativeVariant" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="cVars" /> è un numero negativo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Converte una matrice di tipi COM VARIANT in una matrice di un tipo specificato.</summary>
      <param name="aSrcNativeVariant">Puntatore al primo elemento di una matrice di COM VARIANT.</param>
      <param name="cVars">Numero di tipi COM VARIANT in <paramref name="aSrcNativeVariant" />.</param>
      <typeparam name="T">Tipo della matrice da restituire.</typeparam>
      <returns>Matrice di oggetti <typeparamref name="T" /> che corrisponde a <paramref name="aSrcNativeVariant" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="cVars" /> è un numero negativo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
      <summary>Ottiene il primo slot nella tabella di funzioni virtual (V-Table o VTBL) che contiene metodi definiti dall'utente.</summary>
      <param name="t">Tipo che rappresenta un'interfaccia o una classe.</param>
      <returns>Primo slot VTBL che contiene metodi definiti dall'utente. Il primo slot è 3 se l'interfaccia è basata su IUnknown e 7 se l'interfaccia è basata su IDispatch.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="t" /> non è visibile da COM.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
      <summary>Restituisce un oggetto gestito di un tipo specificato che rappresenta un oggetto COM.</summary>
      <param name="pUnk">Puntatore all'interfaccia <see langword="IUnknown" /> dell'oggetto non gestito.</param>
      <param name="t">Tipo della classe gestita richiesta.</param>
      <returns>Istanza della classe corrispondente all'oggetto <see cref="T:System.Type" /> che rappresenta l'oggetto COM non gestito richiesto.</returns>
      <exception cref="T:System.ArgumentException">A <paramref name="t" /> non è applicato l'attribuito <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.
-oppure-
<paramref name="t" /> è un tipo Windows Runtime.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)">
      <summary>Restituisce il tipo associato all'identificatore di classe specificato (CLSID).</summary>
      <param name="clsid">CLSID del tipo da restituire.</param>
      <returns>
        <see langword="System.__ComObject" /> indipendentemente dalla validità del CLSID.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
      <summary>Recupera il nome del tipo rappresentato da un oggetto ITypeInfo.</summary>
      <param name="typeInfo">Oggetto che rappresenta un puntatore <see langword="ITypeInfo" />.</param>
      <returns>Nome del tipo a cui punta il parametro <paramref name="typeInfo" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="typeInfo" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)">
      <summary>Crea un oggetto Runtime Callable Wrapper (RCW) univoco per un'interfaccia IUnknown specificata.</summary>
      <param name="unknown">Puntatore gestito a un'interfaccia <see langword="IUnknown" />.</param>
      <returns>RCW univoco per l'interfaccia <see langword="IUnknown" /> specificata.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
      <summary>Indica se un oggetto specificato rappresenta un oggetto COM.</summary>
      <param name="o">Oggetto da controllare.</param>
      <returns>
        <see langword="true" /> se il parametro <paramref name="o" /> è un tipo COM; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="o" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)">
      <summary>Indica se un tipo è visibile ai client COM.</summary>
      <param name="t">Tipo di cui verificare la visibilità COM.</param>
      <returns>
        <see langword="true" /> se il tipo è visibile a COM. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
      <summary>Restituisce l'offset del campo della forma non gestita della classe gestita.</summary>
      <param name="t">Tipo di valore o tipo di riferimento formattato che specifica la classe gestita. È necessario applicare <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> alla classe.</param>
      <param name="fieldName">Campo all'interno del parametro <paramref name="t" />.</param>
      <returns>Offset, in byte, per il parametro <paramref name="fieldName" /> all'interno della classe specificata dichiarata tramite platform invoke.</returns>
      <exception cref="T:System.ArgumentException">La classe non può essere esportata come struttura o il campo è non pubblico. A partire da .NET Framework versione 2.0, il campo può essere privato.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="t" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Restituisce l'offset del campo della forma non gestita della classe gestita specificata.</summary>
      <param name="fieldName">Nome del campo nel tipo <paramref name="T" />.</param>
      <typeparam name="T">Tipo di valore definito o tipo di riferimento formattato. È necessario applicare l'attributo <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> alla classe.</typeparam>
      <returns>Offset, in byte, per il parametro <paramref name="fieldName" /> all'interno della classe specificata dichiarata tramite platform invoke.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
      <summary>Esegue in un'unica operazione le attività di configurazione del metodo senza chiamarlo.</summary>
      <param name="m">Metodo da controllare.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="m" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="m" /> non è un oggetto <see cref="T:System.Reflection.MethodInfo" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
      <summary>Esegue un controllo pre-collegamento per tutti i metodi di una classe.</summary>
      <param name="c">Classe di cui è necessario controllare metodi.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="c" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
      <summary>Copia tutti i caratteri fino al primo carattere Null da una stringa ANSI non gestita a un oggetto <see cref="T:System.String" /> gestito e trasforma ogni carattere ANSI in Unicode.</summary>
      <param name="ptr">L'indirizzo del primo carattere della stringa non gestita.</param>
      <returns>Stringa gestita che contiene una copia della stringa ANSI non gestita. Se <paramref name="ptr" /> è <see langword="null" />, il metodo restituisce una stringa Null.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
      <summary>Alloca un oggetto <see cref="T:System.String" /> gestito, vi copia un numero di caratteri specificato da una stringa ANSI non gestita e trasforma ciascun carattere ANSI nel formato Unicode.</summary>
      <param name="ptr">L'indirizzo del primo carattere della stringa non gestita.</param>
      <param name="len">Conteggio dei byte della stringa di input da copiare.</param>
      <returns>Stringa gestita contenente una copia della stringa ANSI nativa se il valore del parametro <paramref name="ptr" /> non è <see langword="null" />; in caso contrario, il metodo restituisce <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="len" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
      <summary>Alloca un oggetto <see cref="T:System.String" /> gestito e vi copia tutti i caratteri fino al primo carattere null da una stringa archiviata nella memoria non gestita.</summary>
      <param name="ptr">Per le piattaforme Unicode, l'indirizzo del primo carattere Unicode.
-oppure-
Per le piattaforme ANSI, l'indirizzo del primo carattere ANSI.</param>
      <returns>Stringa gestita che contiene una copia della stringa non gestita se il valore del parametro <paramref name="ptr" /> non è <see langword="null" />; in caso contrario, questo metodo restituisce <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
      <summary>Alloca un oggetto <see cref="T:System.String" /> gestito e vi copia il numero di caratteri specificato da una stringa archiviata nella memoria non gestita.</summary>
      <param name="ptr">Per le piattaforme Unicode, l'indirizzo del primo carattere Unicode.
-oppure-
Per le piattaforme ANSI, l'indirizzo del primo carattere ANSI.</param>
      <param name="len">Numero di caratteri da copiare.</param>
      <returns>Stringa gestita che contiene una copia della stringa nativa se il valore del parametro <paramref name="ptr" /> non è <see langword="null" />; in caso contrario, questo metodo restituisce <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="len" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
      <summary>Alloca un oggetto <see cref="T:System.String" /> gestito e vi copia una stringa binaria (BSTR) archiviata nella memoria non gestita.</summary>
      <param name="ptr">L'indirizzo del primo carattere della stringa non gestita.</param>
      <returns>Stringa gestita che contiene una copia della stringa non gestita.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ptr" /> è uguale a <see cref="F:System.IntPtr.Zero" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
      <summary>Alloca un oggetto <see cref="T:System.String" /> gestito e vi copia tutti i caratteri fino al primo carattere Null da una stringa Unicode non gestita.</summary>
      <param name="ptr">L'indirizzo del primo carattere della stringa non gestita.</param>
      <returns>Stringa gestita che contiene una copia della stringa non gestita se il valore del parametro <paramref name="ptr" /> non è <see langword="null" />; in caso contrario, questo metodo restituisce <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
      <summary>Alloca un oggetto <see cref="T:System.String" /> gestito e vi copia un numero di caratteri specificato da una stringa Unicode non gestita.</summary>
      <param name="ptr">L'indirizzo del primo carattere della stringa non gestita.</param>
      <param name="len">Numero di caratteri Unicode da copiare.</param>
      <returns>Stringa gestita che contiene una copia della stringa non gestita se il valore del parametro <paramref name="ptr" /> non è <see langword="null" />; in caso contrario, questo metodo restituisce <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr)">
      <param name="ptr" />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr,System.Int32)">
      <param name="ptr" />
      <param name="byteLen" />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
      <summary>Effettua il marshalling di dati da un blocco di memoria non gestita a un oggetto gestito.</summary>
      <param name="ptr">Puntatore a un blocco di memoria non gestita.</param>
      <param name="structure">Oggetto nel quale devono essere copiati i dati. Deve essere un'istanza di una classe formattata.</param>
      <exception cref="T:System.ArgumentException">Il layout della struttura non è sequenziale o esplicito.
-oppure-
La struttura è un tipo valore boxed.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
      <summary>Effettua il marshalling di dati da un blocco di memoria non gestita a un oggetto gestito appena allocato del tipo specificato.</summary>
      <param name="ptr">Puntatore a un blocco di memoria non gestita.</param>
      <param name="structureType">Tipo di oggetto da creare. Questo oggetto deve rappresentare una classe formattata o una struttura.</param>
      <returns>Oggetto gestito contenente i dati a cui punta il parametro <paramref name="ptr" />.</returns>
      <exception cref="T:System.ArgumentException">Il layout del parametro <paramref name="structureType" /> non è sequenziale o esplicito.
-oppure-
Il parametro <paramref name="structureType" /> è una definizione di tipo generico.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="structureType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">La classe specificata da <paramref name="structureType" /> non ha un costruttore senza parametri accessibile.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Effettua il marshalling di dati da un blocco di memoria non gestita a un oggetto gestito appena allocato del tipo specificato per un parametro del tipo generico.</summary>
      <param name="ptr">Puntatore a un blocco di memoria non gestita.</param>
      <typeparam name="T">Tipo dell'oggetto nel quale devono essere copiati i dati. Questo deve rappresentare una classe formattata o una struttura.</typeparam>
      <returns>Oggetto gestito che contiene i dati a cui punta il parametro <paramref name="ptr" />.</returns>
      <exception cref="T:System.ArgumentException">Il layout di <typeparamref name="T" /> non è sequenziale o esplicito.</exception>
      <exception cref="T:System.MissingMethodException">La classe specificata da <typeparamref name="T" /> non ha un costruttore senza parametri accessibile.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Effettua il marshalling di dati da un blocco di memoria non gestita a un oggetto gestito di un tipo specificato.</summary>
      <param name="ptr">Puntatore a un blocco di memoria non gestita.</param>
      <param name="structure">Oggetto nel quale devono essere copiati i dati.</param>
      <typeparam name="T">Tipo di <paramref name="structure" />. Deve essere una classe formattata.</typeparam>
      <exception cref="T:System.ArgumentException">Il layout della struttura non è sequenziale o esplicito.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
      <summary>Richiede un puntatore a un'interfaccia specificata da un oggetto COM.</summary>
      <param name="pUnk">Interfaccia su cui eseguire una query.</param>
      <param name="iid">Identificatore di interfaccia (IID) dell'interfaccia richiesta.</param>
      <param name="ppv">Quando questo metodo restituisce un risultato, contiene un riferimento all'interfaccia restituita.</param>
      <returns>HRESULT che indica l'esito positivo o negativo della chiamata.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
      <summary>Legge un singolo byte da memoria non gestita.</summary>
      <param name="ptr">Indirizzo nella memoria non gestita da cui leggere.</param>
      <returns>Byte letto da memoria non gestita.</returns>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> non è un formato riconosciuto.
-oppure-
<paramref name="ptr" /> è <see langword="null" />.
-oppure-
<paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
      <summary>Legge un singolo byte in base a un determinato offset (o indice) dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo di base nella memoria non gestita da cui leggere.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns>Byte letto da memoria non gestita all'offset fornito.</returns>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
      <summary>Legge un singolo byte in base a un determinato offset (o indice) dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo di base dell'oggetto di origine nella memoria non gestita.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns>Byte letto da memoria non gestita all'offset fornito.</returns>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
      <summary>Legge un valore intero con segno a 16 bit dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo nella memoria non gestita da cui leggere.</param>
      <returns>Intero con segno a 16 bit letto dalla memoria non gestita.</returns>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> non è un formato riconosciuto.
-oppure-
<paramref name="ptr" /> è <see langword="null" />.
-oppure-
<paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
      <summary>Legge un intero con segno a 16 bit a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo di base nella memoria non gestita da cui leggere.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns>Intero con segno a 16 bit letto dalla memoria non gestita a un offset specificato.</returns>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
      <summary>Legge un intero con segno a 16 bit a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo di base dell'oggetto di origine nella memoria non gestita.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns>Intero con segno a 16 bit letto dalla memoria non gestita a un offset specificato.</returns>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
      <summary>Legge un valore intero con segno a 32 bit dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo nella memoria non gestita da cui leggere.</param>
      <returns>Intero con segno a 32 bit letto dalla memoria non gestita.</returns>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> non è un formato riconosciuto.
-oppure-
<paramref name="ptr" /> è <see langword="null" />.
-oppure-
<paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
      <summary>Legge un Intero con segno a 32 bit a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo di base nella memoria non gestita da cui leggere.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns>Intero con segno a 32 bit letto dalla memoria non gestita.</returns>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
      <summary>Legge un Intero con segno a 32 bit a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo di base dell'oggetto di origine nella memoria non gestita.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns>Intero con segno a 32 bit letto dalla memoria non gestita a un offset specificato.</returns>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
      <summary>Legge un valore intero con segno a 64 bit dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo nella memoria non gestita da cui leggere.</param>
      <returns>Intero con segno a 64 bit letto dalla memoria non gestita.</returns>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> non è un formato riconosciuto.
-oppure-
<paramref name="ptr" /> è <see langword="null" />.
-oppure-
<paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
      <summary>Legge un Intero con segno a 64 bit a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo di base nella memoria non gestita da cui leggere.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns>Intero con segno a 64 bit letto dalla memoria non gestita a un offset specificato.</returns>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
      <summary>Legge un Intero con segno a 64 bit a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo di base dell'oggetto di origine nella memoria non gestita.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns>Intero con segno a 64 bit letto dalla memoria non gestita a un offset specificato.</returns>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
      <summary>Legge un intero di dimensioni native del processore dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo nella memoria non gestita da cui leggere.</param>
      <returns>Intero letto da memoria non gestita. In computer a 32 bit viene restituito un intero a 32 bit, mentre in computer a 64 bit viene restituito un intero a 64 bit.</returns>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> non è un formato riconosciuto.
-oppure-
<paramref name="ptr" /> è <see langword="null" />.
-oppure-
<paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
      <summary>Legge un intero di dimensioni native del processore a un offset specificato dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo di base nella memoria non gestita da cui leggere.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns>Intero letto da memoria non gestita all'offset fornito.</returns>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
      <summary>Legge un valore intero della dimensione nativa del processore dalla memoria non gestita.</summary>
      <param name="ptr">Indirizzo di base dell'oggetto di origine nella memoria non gestita.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della lettura.</param>
      <returns>Intero letto da memoria non gestita all'offset fornito.</returns>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
      <summary>Ridimensiona un blocco di memoria allocato in precedenza con <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</summary>
      <param name="pv">Puntatore alla memoria allocata con <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</param>
      <param name="cb">Nuova dimensione del blocco allocato.</param>
      <returns>Intero che rappresenta l'indirizzo del blocco di memoria riallocato. Questa memoria deve essere liberata con <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Memoria insufficiente per soddisfare la richiesta.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
      <summary>Ridimensiona un blocco di memoria allocato in precedenza con <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</summary>
      <param name="pv">Puntatore alla memoria allocata con <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</param>
      <param name="cb">Nuova dimensione del blocco allocato. Non si tratta di un puntatore; corrisponde al conteggio dei byte richiesti, di cui è stato eseguito il cast al tipo <see cref="T:System.IntPtr" />. Se si passa un puntatore, viene trattato come una dimensione.</param>
      <returns>Puntatore alla memoria riallocata. Questa memoria deve essere liberata usando <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Memoria insufficiente per soddisfare la richiesta.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
      <summary>Riduce il numero di riferimenti nell'interfaccia specificata.</summary>
      <param name="pUnk">Interfaccia da liberare.</param>
      <returns>Nuovo valore del numero di riferimenti nell'interfaccia specificata dal parametro <paramref name="pUnk" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
      <summary>Decrementa il conteggio dei riferimenti del Runtime Callable Wrapper (RCW) associato all'oggetto COM specificato.</summary>
      <param name="o">Oggetto COM da rilasciare.</param>
      <returns>Nuovo valore del conteggio dei riferimenti dell'RCW associato a <paramref name="o" />. Questo valore in genere è zero poiché RCW conserva solo un riferimento all'oggetto COM incluso indipendentemente dal numero dei client gestiti che lo chiamano.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> non è un oggetto COM valido.</exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="o" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
      <summary>Alloca una stringa binaria (BSTR) non gestita e vi copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito.</summary>
      <param name="s">Oggetto gestito da copiare.</param>
      <returns>Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s">Oggetto gestito da copiare.</param>
      <returns>Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s">Oggetto gestito da copiare.</param>
      <returns>Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito nella memoria non gestita, effettuando contemporaneamente la conversione nel formato ANSI.</summary>
      <param name="s">Oggetto gestito da copiare.</param>
      <returns>Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito nella memoria non gestita.</summary>
      <param name="s">Oggetto gestito da copiare.</param>
      <returns>Indirizzo, nella memoria non gestita, in cui è stato copiato <paramref name="s" /> oppure 0 se <paramref name="s" /> è un oggetto <see cref="T:System.Security.SecureString" /> con lunghezza 0.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
      <summary>Imposta i dati ai quali fa riferimento la chiave specificata nell'oggetto COM specificato.</summary>
      <param name="obj">Oggetto COM in cui archiviare i dati.</param>
      <param name="key">Chiave nella tabella hash interna dell'oggetto COM in cui archiviare i dati.</param>
      <param name="data">Dati da impostare.</param>
      <returns>
        <see langword="true" /> se i dati sono stati impostati correttamente; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> è <see langword="null" />.
-oppure-
<paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> non è un oggetto COM.
-oppure-
<paramref name="obj" /> è un oggetto Windows Runtime.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
      <summary>Restituisce la dimensione non gestita di un oggetto, espressa in byte.</summary>
      <param name="structure">Oggetto di cui verrà restituita la dimensione.</param>
      <returns>Dimensione dell'oggetto specificato nel codice non gestito.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="structure" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
      <summary>Restituisce la dimensione di un tipo non gestito espressa in byte.</summary>
      <param name="t">Tipo di cui verrà restituita la dimensione.</param>
      <returns>Dimensione del tipo specificato nel codice non gestito.</returns>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="t" /> è una definizione di tipo generico.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="t" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Restituisce la dimensione di un tipo non gestito espressa in byte.</summary>
      <typeparam name="T">Tipo di cui verrà restituita la dimensione.</typeparam>
      <returns>Dimensione, in byte, del tipo specificato dal parametro di tipo generico <typeparamref name="T" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Restituisce la dimensione non gestita di un oggetto di un tipo specifico in byte.</summary>
      <param name="structure">Oggetto di cui verrà restituita la dimensione.</param>
      <typeparam name="T">Tipo del parametro <paramref name="structure" />.</typeparam>
      <returns>Dimensione, in byte, dell'oggetto specificato nel codice non gestito.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="structure" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
      <summary>Alloca un elemento BSTR e vi copia il contenuto di un oggetto <see cref="T:System.String" /> gestito.</summary>
      <param name="s">Stringa gestita da copiare.</param>
      <returns>Puntatore non gestito a <see langword="BSTR" /> o 0 se <paramref name="s" /> è Null.</returns>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza per <paramref name="s" /> non è compresa nell'intervallo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.String" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s">Stringa gestita da copiare.</param>
      <returns>Intero che rappresenta un puntatore al blocco di memoria allocato per la stringa oppure 0 se <paramref name="s" /> è <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="s" /> supera la lunghezza massima consentita dal sistema operativo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.String" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s">Stringa gestita da copiare.</param>
      <returns>Blocco di memoria allocato o 0 se <paramref name="s" /> è <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza per <paramref name="s" /> non è compresa nell'intervallo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.String" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s">Stringa gestita da copiare.</param>
      <returns>Intero che rappresenta un puntatore al blocco di memoria allocato per la stringa oppure 0 se s è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="s" /> supera la lunghezza massima consentita dal sistema operativo.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8(System.String)">
      <param name="s" />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.String" /> gestito nella memoria non gestita, effettuando contemporaneamente la conversione nel formato ANSI.</summary>
      <param name="s">Stringa gestita da copiare.</param>
      <returns>Indirizzo, nella memoria non gestita, in cui è stato copiato <paramref name="s" />, oppure 0 se <paramref name="s" /> è <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="s" /> supera la lunghezza massima consentita dal sistema operativo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.String" /> gestito nella memoria non gestita, effettuando, se necessario, la conversione nel formato ANSI.</summary>
      <param name="s">Stringa gestita da copiare.</param>
      <returns>Indirizzo, nella memoria non gestita, in cui è stata copiata la stringa, oppure 0 se <paramref name="s" /> è <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.String" /> gestito nella memoria non gestita.</summary>
      <param name="s">Stringa gestita da copiare.</param>
      <returns>Indirizzo, nella memoria non gestita, in cui è stato copiato <paramref name="s" />, oppure 0 se <paramref name="s" /> è <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Il metodo non è riuscito ad allocare memoria dell'heap nativo sufficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="s" /> supera la lunghezza massima consentita dal sistema operativo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
      <summary>Effettua il marshalling di dati da un oggetto gestito a un blocco di memoria non gestito.</summary>
      <param name="structure">Oggetto gestito che contiene i dati di cui effettuare il marshalling. L'oggetto deve essere una struttura o un'istanza di una classe formattata.</param>
      <param name="ptr">Puntatore a un blocco di memoria non gestito che deve essere allocato prima della chiamata al metodo.</param>
      <param name="fDeleteOld">
        <see langword="true" /> per chiamare il metodo <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> sul parametro <paramref name="ptr" /> prima che il metodo esegua la copia dei dati. Il blocco deve contenere dati validi. Si noti che passare il valore <see langword="false" /> quando il blocco di memoria contiene già dei dati può causare una perdita di memoria.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="structure" /> è un tipo di riferimento che non corrisponde a una classe formattata.
-oppure-
<paramref name="structure" /> è un'istanza di un tipo generico (in .NET Framework 4.5 e versioni precedenti).</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Effettua il marshalling di dati da un oggetto gestito di un tipo specificato a un blocco di memoria non gestita.</summary>
      <param name="structure">Oggetto gestito che contiene i dati di cui effettuare il marshalling. L'oggetto deve essere una struttura o un'istanza di una classe formattata.</param>
      <param name="ptr">Puntatore a un blocco di memoria non gestito che deve essere allocato prima della chiamata al metodo.</param>
      <param name="fDeleteOld">
        <see langword="true" /> per chiamare il metodo <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> sul parametro <paramref name="ptr" /> prima che il metodo esegua la copia dei dati. Il blocco deve contenere dati validi. Si noti che passare il valore <see langword="false" /> quando il blocco di memoria contiene già dei dati può causare una perdita di memoria.</param>
      <typeparam name="T">Tipo dell'oggetto gestito.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="structure" /> è un tipo di riferimento che non corrisponde a una classe formattata.</exception>
    </member>
    <member name="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize">
      <summary>Rappresenta la dimensione predefinita del carattere nel sistema. Il valore predefinito è 2 per i sistemi Unicode e 1 per i sistemi ANSI. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize">
      <summary>Rappresenta la dimensione massima di un set di caratteri a doppio byte (DBCS, double-byte character set), in byte, per il sistema operativo corrente. Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
      <summary>Genera un'eccezione con un valore HRESULT di un errore specifico.</summary>
      <param name="errorCode">Valore HRESULT corrispondente all'eccezione desiderata.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
      <summary>Genera un'eccezione con un valore HRESULT di errore specifico, basato sull'interfaccia IErrorInfo specificata.</summary>
      <param name="errorCode">Valore HRESULT corrispondente all'eccezione desiderata.</param>
      <param name="errorInfo">Puntatore all'interfaccia IErrorInfo che fornisce informazioni aggiuntive sull'errore. È possibile specificare <c>IntPtr(0)</c> per usare l'interfaccia IErrorInfo corrente oppure <c>IntPtr(-1)</c> per ignorare l'interfaccia IErrorInfo corrente e costruire l'eccezione unicamente dal codice di errore.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)">
      <summary>Ottiene l'indirizzo dell'elemento in corrispondenza dell'indice specificato all'interno della matrice specificata.</summary>
      <param name="arr">Matrice che contiene l'elemento desiderato.</param>
      <param name="index">Indice nel parametro <paramref name="arr" /> dell'elemento desiderato.</param>
      <returns>Indirizzo di <paramref name="index" /> all'interno di <paramref name="arr" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]
Ottiene l'indirizzo dell'elemento in corrispondenza dell'indice specificato in una matrice del tipo specificato.</summary>
      <param name="arr">Matrice che contiene l'elemento desiderato.</param>
      <param name="index">Indice dell'elemento desiderato nella matrice <paramref name="arr" />.</param>
      <typeparam name="T">Tipo della matrice</typeparam>
      <returns>Indirizzo di <paramref name="index" /> all'interno di <paramref name="arr" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
      <summary>Scrive un valore a singolo byte nella memoria non gestita.</summary>
      <param name="ptr">Indirizzo nella memoria non gestita sul quale scrivere.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> non è un formato riconosciuto.
-oppure-
<paramref name="ptr" /> è <see langword="null" />.
-oppure-
<paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
      <summary>Scrive un valore a singolo byte nella memoria non gestita a un offset specifico.</summary>
      <param name="ptr">Indirizzo di base nella memoria non gestita su cui scrivere.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
      <summary>Scrive un valore a singolo byte nella memoria non gestita a un offset specifico.</summary>
      <param name="ptr">L'indirizzo di base dell'oggetto di destinazione nella memoria non gestita.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
      <summary>Scrive un carattere sotto forma di intero a 16 bit nella memoria non gestita.</summary>
      <param name="ptr">Indirizzo nella memoria non gestita sul quale scrivere.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> non è un formato riconosciuto.
-oppure-
<paramref name="ptr" /> è <see langword="null" />.
-oppure-
<paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
      <summary>Scrive un valore intero a 16 bit nella memoria non gestita.</summary>
      <param name="ptr">Indirizzo nella memoria non gestita sul quale scrivere.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> non è un formato riconosciuto.
-oppure-
<paramref name="ptr" /> è <see langword="null" />.
-oppure-
<paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
      <summary>Scrive un intero con segno a 16 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr">L'indirizzo di base nell'heap nativo su cui scrivere.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
      <summary>Scrive un intero con segno a 16 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr">Indirizzo di base nella memoria non gestita su cui scrivere.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
      <summary>Scrive un intero con segno a 16 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr">L'indirizzo di base dell'oggetto di destinazione nella memoria non gestita.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
      <summary>Scrive un intero con segno a 16 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr">L'indirizzo di base dell'oggetto di destinazione nella memoria non gestita.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
      <summary>Scrive un valore intero con segno a 32 bit nella memoria non gestita.</summary>
      <param name="ptr">Indirizzo nella memoria non gestita sul quale scrivere.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> non è un formato riconosciuto.
-oppure-
<paramref name="ptr" /> è <see langword="null" />.
-oppure-
<paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
      <summary>Scrive un Intero con segno a 32 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr">Indirizzo di base nella memoria non gestita su cui scrivere.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
      <summary>Scrive un Intero con segno a 32 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr">L'indirizzo di base dell'oggetto di destinazione nella memoria non gestita.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
      <summary>Scrive un Intero con segno a 64 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr">Indirizzo di base nella memoria non gestita da scrivere.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
      <summary>Scrive un valore intero con segno a 64 bit nella memoria non gestita.</summary>
      <param name="ptr">Indirizzo nella memoria non gestita sul quale scrivere.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> non è un formato riconosciuto.
-oppure-
<paramref name="ptr" /> è <see langword="null" />.
-oppure-
<paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
      <summary>Scrive un Intero con segno a 64 bit nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr">L'indirizzo di base dell'oggetto di destinazione nella memoria non gestita.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
      <summary>Scrive un intero di dimensioni native del processore nella memoria non gestita in corrispondenza di un offset specificato.</summary>
      <param name="ptr">Indirizzo di base nella memoria non gestita su cui scrivere.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
      <summary>Scrive un valore intero della dimensione nativa del processore nella memoria non gestita.</summary>
      <param name="ptr">Indirizzo nella memoria non gestita sul quale scrivere.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> non è un formato riconosciuto.
-oppure-
<paramref name="ptr" /> è <see langword="null" />.
-oppure-
<paramref name="ptr" /> non è valido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
      <summary>Scrive un valore intero della dimensione nativa del processore nella memoria non gestita.</summary>
      <param name="ptr">L'indirizzo di base dell'oggetto di destinazione nella memoria non gestita.</param>
      <param name="ofs">Offset di byte supplementare, aggiunto al parametro <paramref name="ptr" /> prima della scrittura.</param>
      <param name="val">Valore da scrivere.</param>
      <exception cref="T:System.AccessViolationException">L'indirizzo di base (<paramref name="ptr" />) più il byte di offset (<paramref name="ofs" />) produce un indirizzo Null o non valido.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ptr" /> è un oggetto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Questo metodo non accetta parametri <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)">
      <summary>Libera un puntatore BSTR allocato usando il metodo <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />.</summary>
      <param name="s">Indirizzo dell'elemento <see langword="BSTR" /> da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)">
      <summary>Libera un puntatore a una stringa non gestita allocato tramite il metodo <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />.</summary>
      <param name="s">Indirizzo della stringa non gestita da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)">
      <summary>Libera un puntatore a una stringa non gestita allocato tramite il metodo <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />.</summary>
      <param name="s">Indirizzo della stringa non gestita da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8(System.IntPtr)">
      <param name="s" />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)">
      <summary>Libera un puntatore a una stringa non gestita allocato tramite il metodo <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />.</summary>
      <param name="s">Indirizzo della stringa non gestita da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)">
      <summary>Libera un puntatore a una stringa non gestita allocato tramite il metodo <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />.</summary>
      <param name="s">Indirizzo della stringa non gestita da liberare.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.MarshalAsAttribute">
      <summary>Indica come eseguire il marshalling dei dati tra codice gestito e non gestito.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> specificato.</summary>
      <param name="unmanagedType">Valore in base al quale viene eseguito il marshalling dei dati.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /> con il membro di enumerazione <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> specificato.</summary>
      <param name="unmanagedType">Valore in base al quale viene eseguito il marshalling dei dati.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
      <summary>Specifica il tipo di elemento dell'oggetto <see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray" /> o <see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValArray" /> non gestito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex">
      <summary>Specifica l'indice di parametro dell'attributo <see langword="iid_is" /> non gestito utilizzato da COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
      <summary>Fornisce informazioni aggiuntive a un gestore di marshalling personalizzato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
      <summary>Specifica il nome completo di un gestore di marshalling personalizzato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
      <summary>Implementa <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /> come tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
      <summary>Indica il tipo di elemento di <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /> .</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
      <summary>Indica il tipo di elemento di <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /> definito dall'utente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
      <summary>Indica il numero di elementi nella matrice a lunghezza fissa o il numero di caratteri (non byte) in una stringa da importare.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
      <summary>Indica il parametro in base zero che contiene il numero di elementi della matrice, come <see langword="size_is" /> in COM.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
      <summary>Ottiene il valore <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> in base al quale viene eseguito il marshalling dei dati.</summary>
      <returns>Valore <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> in base al quale viene eseguito il marshalling dei dati.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.MarshalDirectiveException">
      <summary>Eccezione generata dal gestore di marshalling quando rileva un oggetto <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /> non supportato.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see langword="MarshalDirectiveException" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see langword="MarshalDirectiveException" /> da dati di serializzazione.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see langword="MarshalDirectiveException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore che specifica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.MarshalDirectiveException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.NativeLibrary">
      <summary>Offre API per la gestione delle librerie native.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Free(System.IntPtr)">
      <summary>Libera una libreria caricata con l'handle del sistema operativo specificato oppure non esegue azioni se l'handle di input è <see cref="F:System.IntPtr.Zero" />.</summary>
      <param name="handle">Handle del sistema operativo della libreria nativa da liberare.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.GetExport(System.IntPtr,System.String)">
      <summary>Ottiene l'indirizzo di un simbolo esportato.</summary>
      <param name="handle">Handle del sistema operativo per la libreria nativa.</param>
      <param name="name">Nome del simbolo esportato.</param>
      <returns>Indirizzo del simbolo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handle" /> o <paramref name="name" /> è <see langword="null" />.</exception>
      <exception cref="T:System.EntryPointNotFoundException">Il simbolo non viene trovato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String)">
      <summary>Offre una semplice API per il caricamento di una libreria nativa che esegue il wrapping del caricatore del sistema operativo e usa i flag predefiniti.</summary>
      <param name="libraryPath">Nome della libreria nativa da caricare.</param>
      <returns>Handle del sistema operativo per la libreria nativa caricata.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="libraryPath" /> è <see langword="null" />.</exception>
      <exception cref="T:System.DllNotFoundException">La libreria non è stata trovata.</exception>
      <exception cref="T:System.BadImageFormatException">La libreria non è valida.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath})">
      <summary>Offre un'API avanzata per il caricamento di una libreria nativa.</summary>
      <param name="libraryName">Nome della libreria nativa da caricare.</param>
      <param name="assembly">Assembly che carica la libreria nativa.</param>
      <param name="searchPath">Percorso di ricerca.</param>
      <returns>Handle del sistema operativo per la libreria caricata.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="libraryName" /> o <paramref name="assembly" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assembly" /> non è un oggetto <see langword="RuntimeAssembly" />.</exception>
      <exception cref="T:System.DllNotFoundException">La libreria non è stata trovata.</exception>
      <exception cref="T:System.BadImageFormatException">La libreria non è valida.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver(System.Reflection.Assembly,System.Runtime.InteropServices.DllImportResolver)">
      <summary>Imposta un callback per la risoluzione di importazioni di librerie native da un assembly.</summary>
      <param name="assembly">Assembly per cui viene registrato il resolver.</param>
      <param name="resolver">Callback del resolver da registrare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> o paramref name="resolver" /&gt; è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un resolver è già impostato per questo assembly.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryGetExport(System.IntPtr,System.String,System.IntPtr@)">
      <summary>Ottiene l'indirizzo di un simbolo esportato e restituisce un valore che indica se la chiamata al metodo ha avuto esito positivo.</summary>
      <param name="handle">Handle del sistema operativo per la libreria nativa.</param>
      <param name="name">Nome del simbolo esportato.</param>
      <param name="address">Quando il metodo viene restituito, contiene l'indirizzo del simbolo se esiste.</param>
      <returns>
        <see langword="true" /> se il metodo viene restituito con esito positivo; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handle" /> o <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.IntPtr@)">
      <summary>Offre una semplice API per il caricamento di una libreria nativa e restituisce un valore che indica se l'operazione ha avuto esito positivo.</summary>
      <param name="libraryPath">Nome della libreria nativa da caricare.</param>
      <param name="handle">Quando il metodo viene restituito, contiene l'handle del sistema operativo per la libreria nativa caricata.</param>
      <returns>
        <see langword="true" /> se la libreria nativa è stata caricata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="libraryPath" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath},System.IntPtr@)">
      <summary>Offre un'API avanzata per il caricamento di una libreria nativa e restituisce un valore che indica se l'operazione ha avuto esito positivo.</summary>
      <param name="libraryName">Nome della libreria nativa da caricare.</param>
      <param name="assembly">Assembly che carica la libreria nativa.</param>
      <param name="searchPath">Percorso di ricerca.</param>
      <param name="handle">Quando il metodo viene restituito, contiene l'handle del sistema operativo per la libreria nativa caricata.</param>
      <returns>
        <see langword="true" /> se l'operazione è stata completata; in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="libraryPath" /> o <paramref name="assembly" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assembly" /> non è un oggetto <see langword="RuntimeAssembly" />.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.OptionalAttribute">
      <summary>Indica che un parametro è facoltativo.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.OptionalAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see langword="OptionalAttribute" /> con i valori predefiniti.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.PreserveSigAttribute">
      <summary>Indica che la trasformazione della firma del valore HRESULT o <see langword="retval" /> eseguita durante le chiamate di interoperabilità COM, deve essere evitata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.PreserveSigAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute">
      <summary>Indica che l'assembly con attributi è un assembly di interoperabilità primario.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute" /> con i numeri di versione principale e secondaria della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</summary>
      <param name="major">Versione principale della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</param>
      <param name="minor">Versione secondaria della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.MajorVersion">
      <summary>Ottiene il numero della versione principale della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</summary>
      <returns>Numero della versione principale della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.MinorVersion">
      <summary>Ottiene il numero della versione secondaria della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</summary>
      <returns>Numero della versione secondaria della libreria dei tipi per la quale l'assembly è l'assembly di interoperabilità primario.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ProgIdAttribute">
      <summary>Consente all'utente di specificare il ProgID di una classe.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ProgIdAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza di <see langword="ProgIdAttribute" /> con il ProgID specificato.</summary>
      <param name="progId">ProgID da assegnare alla classe.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ProgIdAttribute.Value">
      <summary>Ottiene il ProgID della classe.</summary>
      <returns>ProgID della classe.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.RuntimeEnvironment">
      <summary>Fornisce un insieme di metodi <see langword="static" /> che restituiscono informazioni sull'ambiente Common Language Runtime.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.FromGlobalAccessCache(System.Reflection.Assembly)">
      <summary>Verifica se l'assembly specificato è caricato nella Global Assembly Cache.</summary>
      <param name="a">Assembly di cui effettuare il test.</param>
      <returns>
        <see langword="true" /> se l'assembly è caricato nella Global Assembly Cache; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeDirectory">
      <summary>Restituisce la directory in cui è installato Common Language Runtime.</summary>
      <returns>Stringa contenente il percorso della directory in cui è installato Common Language Runtime.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeInterfaceAsIntPtr(System.Guid,System.Guid)">
      <summary>Restituisce l'interfaccia specificata nella classe specificata.</summary>
      <param name="clsid">Identificatore per la classe desiderata.</param>
      <param name="riid">Identificatore per l'interfaccia desiderata.</param>
      <returns>Puntatore non gestito all'interfaccia richiesta.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">Errore IUnknown::QueryInterface.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeInterfaceAsObject(System.Guid,System.Guid)">
      <summary>Restituisce un'istanza di un tipo che rappresenta un oggetto COM tramite un puntatore alla relativa interfaccia <see langword="IUnknown" />.</summary>
      <param name="clsid">Identificatore per la classe desiderata.</param>
      <param name="riid">Identificatore per l'interfaccia desiderata.</param>
      <returns>Oggetto che rappresenta l'oggetto COM non gestito specificato.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">Errore IUnknown::QueryInterface.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetSystemVersion">
      <summary>Ottiene il numero della versione di Common Language Runtime che esegue il processo corrente.</summary>
      <returns>Stringa contenente il numero di versione di Common Language Runtime.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.RuntimeEnvironment.SystemConfigurationFile">
      <summary>Ottiene il percorso del file di configurazione del sistema.</summary>
      <returns>Percorso del file di configurazione del sistema.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeArrayRankMismatchException">
      <summary>Eccezione generata quando il numero di dimensioni di un <see langword="SAFEARRAY" /> in entrata non corrisponde al numero di dimensioni specificato nella firma gestita.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see langword="SafeArrayTypeMismatchException" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see langword="SafeArrayTypeMismatchException" /> da dati di serializzazione.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see langword="SafeArrayRankMismatchException" /> con il messaggio specificato.</summary>
      <param name="message">Messaggio che indica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SafeArrayRankMismatchException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeArrayTypeMismatchException">
      <summary>Eccezione generata quando il tipo di <see langword="SAFEARRAY" /> in entrata non corrisponde al tipo specificato nella firma gestita.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see langword="SafeArrayTypeMismatchException" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see langword="SafeArrayTypeMismatchException" /> da dati di serializzazione.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see langword="SafeArrayTypeMismatchException" /> con il messaggio specificato.</summary>
      <param name="message">Messaggio che indica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SafeArrayTypeMismatchException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeBuffer">
      <summary>Fornisce un buffer di memoria controllato che può essere usato per la lettura e la scrittura. I tentativi di accedere alla memoria al di fuori del buffer controllato (sottocarichi e sovraccarichi) generano eccezioni.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.#ctor(System.Boolean)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SafeBuffer" />, specificando se l'handle del buffer deve essere rilasciato in modo affidabile.</summary>
      <param name="ownsHandle">
        <see langword="true" /> per rilasciare in modo affidabile l'handle durante la fase di finalizzazione; <see langword="false" /> per impedire il rilascio affidabile (opzione non consigliata).</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
      <summary>Ottiene un puntatore da un oggetto <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> per un blocco di memoria.</summary>
      <param name="pointer">Puntatore di byte, passato per riferimento, per ricevere il puntatore dall'interno dell'oggetto <see cref="T:System.Runtime.InteropServices.SafeBuffer" />. È necessario impostare questo puntatore a <see langword="null" /> prima di chiamare questo metodo.</param>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.SafeBuffer.ByteLength">
      <summary>Ottiene la dimensione, in byte, del buffer.</summary>
      <returns>Numero di byte nel buffer di memoria.</returns>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
      <summary>Specifica la dimensione di allocazione del buffer di memoria tramite il numero specificato di elementi e la dimensione dell'elemento. Questo metodo deve essere chiamato prima di utilizzare l'istanza <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numElements">Numero di elementi contenuti nel buffer.</param>
      <param name="sizeOfEachElement">Dimensioni di ogni elemento nel buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="numElements" /> è minore di zero.
-oppure-
<paramref name="sizeOfEachElement" /> è minore di zero.
-oppure-
<paramref name="numElements" /> moltiplicato per <paramref name="sizeOfEachElement" /> è maggiore dello spazio degli indirizzi disponibile.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)">
      <summary>Definisce la dimensione di allocazione, in byte, dell'area di memoria. Questo metodo deve essere chiamato prima di utilizzare l'istanza <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numBytes">Numero di byte nel buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="numBytes" /> è minore di zero.
-oppure-
<paramref name="numBytes" /> è maggiore dello spazio degli indirizzi disponibile.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)">
      <summary>Definisce la dimensione di allocazione dell'area della memoria specificando il numero di tipi di valore. Questo metodo deve essere chiamato prima di utilizzare l'istanza <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numElements">Numero di elementi del tipo di valore per il quale allocare memoria.</param>
      <typeparam name="T">Tipo di valore per il quale allocare memoria.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="numElements" /> è minore di zero.
-oppure-
<paramref name="numElements" /> moltiplicato per le dimensioni di ogni elemento è maggiore dello spazio degli indirizzi disponibile.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)">
      <summary>Legge un tipo di valore dalla memoria all'offset specificato.</summary>
      <param name="byteOffset">Posizione da cui leggere il tipo di valore. È possibile che sia necessario considerare problemi di allineamento.</param>
      <typeparam name="T">Tipo di valore da leggere.</typeparam>
      <returns>Il tipo di valore che è stato letto dalla memoria.</returns>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
      <summary>Legge il numero specificato di tipi di valore dal buffer di memoria partendo dall'offset e li scrive in una matrice iniziando all'indice.</summary>
      <param name="byteOffset">Posizione dalla quale iniziare a leggere.</param>
      <param name="array">Matrice di output in cui scrivere.</param>
      <param name="index">Posizione all'interno della matrice di output da cui iniziare a scrivere.</param>
      <param name="count">Numero di tipi di valore da leggere dalla matrice di input e scrivere nella matrice di output.</param>
      <typeparam name="T">Tipo di valore da leggere.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.
-oppure-
<paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza della matrice meno l'indice è inferiore a <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.ReleasePointer">
      <summary>Rilascia un puntatore ottenuto dal metodo <see cref="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)" />.</summary>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)">
      <summary>Scrive un tipo di valore in memoria in una posizione specificata.</summary>
      <param name="byteOffset">Posizione dalla quale iniziare a scrivere. È possibile che sia necessario considerare problemi di allineamento.</param>
      <param name="value">Valore da scrivere.</param>
      <typeparam name="T">Tipo di valore da scrivere.</typeparam>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
      <summary>Scrive il numero specificato di tipi di valore in una posizione di memoria leggendo i byte a partire dalla posizione specificata nella matrice di input.</summary>
      <param name="byteOffset">Posizione nella memoria sulla quale scrivere.</param>
      <param name="array">Matrice di input.</param>
      <param name="index">Offset nella matrice da cui cominciare a leggere.</param>
      <param name="count">Numero di tipi di valore da scrivere.</param>
      <typeparam name="T">Tipo di valore da scrivere.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza della matrice di input meno <paramref name="index" /> è inferiore a <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> non è stato chiamato.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.SEHException">
      <summary>Rappresenta errori SEH (Structured Exception Handling).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SEHException" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SEHException" /> da dati di serializzazione.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SEHException" /> con un messaggio specificato.</summary>
      <param name="message">Messaggio che indica la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.SEHException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.CanResume">
      <summary>Indica se l'eccezione può essere recuperata e se è possibile continuare l'esecuzione del codice dal punto in cui è stata generata l'eccezione.</summary>
      <returns>Sempre <see langword="false" />, perché non sono implementate eccezioni recuperabili.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.StandardOleMarshalObject">
      <summary>Sostituisce il gestore del marshalling con modello di threading Free CLR (Common Language Runtime) con il gestore del marshalling OLE STA.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.StandardOleMarshalObject.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.StandardOleMarshalObject" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeIdentifierAttribute">
      <summary>Fornisce supporto per l'equivalenza del tipo.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /> con ambito e identificatore specificati.</summary>
      <param name="scope">Prima stringa di equivalenza di tipo.</param>
      <param name="identifier">Seconda stringa di equivalenza di tipo.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Identifier">
      <summary>Ottiene il valore del parametro <paramref name="identifier" /> passato al costruttore <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" />.</summary>
      <returns>Valore del parametro <paramref name="identifier" /> del costruttore.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Scope">
      <summary>Ottiene il valore del parametro <paramref name="scope" /> passato al costruttore <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" />.</summary>
      <returns>Valore del parametro <paramref name="scope" /> del costruttore.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibFuncAttribute">
      <summary>Contiene l'oggetto <see cref="T:System.Runtime.InteropServices.FUNCFLAGS" /> originariamente importato per questo metodo dalla libreria dei tipi COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibFuncAttribute.#ctor(System.Int16)">
      <summary>Inizializza una nuova istanza della classe <see langword="TypeLibFuncAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> specificato.</summary>
      <param name="flags">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> per il metodo con attributi così come riportato nella libreria dei tipi dalla quale è stato importato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibFuncAttribute.#ctor(System.Runtime.InteropServices.TypeLibFuncFlags)">
      <summary>Inizializza una nuova istanza della classe <see langword="TypeLibFuncAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> specificato.</summary>
      <param name="flags">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> per il metodo con attributi così come riportato nella libreria dei tipi dalla quale è stato importato.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibFuncAttribute.Value">
      <summary>Ottiene il valore di <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> per questo metodo.</summary>
      <returns>Valore di <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> per questo metodo.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibFuncFlags">
      <summary>Descrive le impostazioni originali dell'oggetto <see langword="FUNCFLAGS" /> nella libreria dei tipi COM dalla quale questo metodo è stato importato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FBindable">
      <summary>Funzione che supporta l'associazione dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDefaultBind">
      <summary>Funzione che meglio rappresenta l'oggetto. L'attributo può essere applicato solo a una delle funzioni nelle informazioni su un tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDefaultCollelem">
      <summary>Consente un'ottimizzazione in cui il compilatore cerca un membro denominato "xyz" nel tipo "abc". Se tale membro viene individuato e gli viene assegnato un flag come funzione della funzione di accesso per un elemento dell'insieme predefinito, verrà generata una chiamata alla funzione di tale membro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDisplayBind">
      <summary>Funzione che viene visualizzata dall'utente come associabile. È inoltre necessario impostare <see cref="F:System.Runtime.InteropServices.TypeLibFuncFlags.FBindable" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FHidden">
      <summary>La funzione non deve essere visualizzata all'utente, anche se è disponibile ed è associabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FImmediateBind">
      <summary>La funzione viene mappata come singole proprietà associabili.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FNonBrowsable">
      <summary>La proprietà viene visualizzata in un visualizzatore oggetti, ma non in un visualizzatore proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FReplaceable">
      <summary>Inserisce dei tag nell'interfaccia in modo che abbia comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FRequestEdit">
      <summary>Quando è impostato, qualsiasi chiamata a un metodo che imposta la proprietà determina anzitutto una chiamata a <see langword="IPropertyNotifySink::OnRequestEdit" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FRestricted">
      <summary>Il flag è destinato alle funzioni a livello di sistema o alle funzioni che non devono essere visualizzate dai visualizzatori dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FSource">
      <summary>La funzione restituisce un oggetto che rappresenta un'origine di eventi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FUiDefault">
      <summary>Il membro delle informazioni sul tipo è il membro predefinito per la visualizzazione nell'interfaccia utente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FUsesGetLastError">
      <summary>La funzione supporta <see langword="GetLastError" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibImportClassAttribute">
      <summary>Specifica quale oggetto <see cref="T:System.Type" /> utilizza in modo esclusivo un'interfaccia. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibImportClassAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.TypeLibImportClassAttribute" /> specificando la classe <see cref="T:System.Type" /> che utilizza in modo esclusivo un'interfaccia.</summary>
      <param name="importClass">Oggetto <see cref="T:System.Type" /> che utilizza in modo esclusivo un'interfaccia.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibImportClassAttribute.Value">
      <summary>Ottiene il nome di un oggetto <see cref="T:System.Type" /> che utilizza in modo esclusivo un'interfaccia.</summary>
      <returns>Nome di un oggetto <see cref="T:System.Type" /> che utilizza in modo esclusivo un'interfaccia.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibTypeAttribute">
      <summary>Contiene l'oggetto <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" /> originariamente importato per questo tipo dalla libreria dei tipi COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibTypeAttribute.#ctor(System.Int16)">
      <summary>Inizializza una nuova istanza della classe <see langword="TypeLibTypeAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> specificato.</summary>
      <param name="flags">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> per il tipo con attributi così come riportato nella libreria dei tipi dalla quale è stato importato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibTypeAttribute.#ctor(System.Runtime.InteropServices.TypeLibTypeFlags)">
      <summary>Inizializza una nuova istanza della classe <see langword="TypeLibTypeAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> specificato.</summary>
      <param name="flags">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> per il tipo con attributi così come riportato nella libreria dei tipi dalla quale è stato importato.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibTypeAttribute.Value">
      <summary>Ottiene il valore di <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> per questo tipo.</summary>
      <returns>Valore di <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> per questo tipo.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibTypeFlags">
      <summary>Descrive le impostazioni originali dell'oggetto <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" /> nella libreria dei tipi COM dalla quale il tipo è stato importato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FAggregatable">
      <summary>La classe supporta l'aggregazione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FAppObject">
      <summary>Descrizione di tipo relativa a un oggetto <see langword="Application" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FCanCreate">
      <summary>Le istanze del tipo possono essere create da <see langword="ITypeInfo::CreateInstance" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FControl">
      <summary>Il tipo è un controllo da cui saranno derivati altri tipi e non deve essere visibile agli utenti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FDispatchable">
      <summary>Indica che l'interfaccia deriva da <see langword="IDispatch" />, direttamente o indirettamente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FDual">
      <summary>L'interfaccia fornisce l'associazione a <see langword="IDispatch" /> e a V-table.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FHidden">
      <summary>Il tipo non deve essere visibile ai visualizzatori.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FLicensed">
      <summary>Il tipo è concesso in licenza.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FNonExtensible">
      <summary>L'interfaccia non può aggiungere membri in fase di esecuzione.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FOleAutomation">
      <summary>I tipi utilizzati nell'interfaccia sono completamente compatibili con l'automazione, compreso il supporto per l'associazione vtable.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FPreDeclId">
      <summary>Tipo già definito. È necessario che nell'applicazione client venga creata automaticamente una singola istanza dell'oggetto che contiene questo attributo. Il nome della variabile che punta all'oggetto corrisponde a quello della classe dell'oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FReplaceable">
      <summary>L'oggetto supporta <see langword="IConnectionPointWithDefault" /> e dispone di comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FRestricted">
      <summary>Il flag viene utilizzato per i tipi a livello di sistema o che non devono essere visualizzati dai visualizzatori dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FReverseBind">
      <summary>Indica che la risoluzione dei nomi delle interfacce di base deve essere verificata prima di verificare gli elementi figlio. È il contrario del comportamento predefinito.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVarAttribute">
      <summary>Contiene l'oggetto <see cref="T:System.Runtime.InteropServices.VARFLAGS" /> originariamente importato per questo campo dalla libreria dei tipi COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVarAttribute.#ctor(System.Int16)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.TypeLibVarAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> specificato.</summary>
      <param name="flags">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> per il campo con attributi così come riportato nella libreria dei tipi dalla quale è stato importato.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVarAttribute.#ctor(System.Runtime.InteropServices.TypeLibVarFlags)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.TypeLibVarAttribute" /> con il valore <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> specificato.</summary>
      <param name="flags">Valore di <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> per il campo con attributi così come riportato nella libreria dei tipi dalla quale è stato importato.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVarAttribute.Value">
      <summary>Ottiene il valore di <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> per questo campo.</summary>
      <returns>Valore di <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> per questo campo.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVarFlags">
      <summary>Descrive le impostazioni originali dell'oggetto <see cref="T:System.Runtime.InteropServices.VARFLAGS" /> nella libreria dei tipi COM dalla quale la variabile è stata importata.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FBindable">
      <summary>La variabile supporta l'associazione dati.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDefaultBind">
      <summary>La variabile è la singola proprietà che meglio rappresenta l'oggetto. Solo una variabile nelle informazioni su un tipo può avere questo valore.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDefaultCollelem">
      <summary>Consente un'ottimizzazione in cui il compilatore cerca un membro denominato "xyz" nel tipo "abc". Se tale membro viene individuato e gli viene assegnato un flag come funzione della funzione di accesso per un elemento dell'insieme predefinito, verrà generata una chiamata alla funzione di tale membro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDisplayBind">
      <summary>La variabile viene visualizzata come associabile. È inoltre necessario impostare <see cref="F:System.Runtime.InteropServices.TypeLibVarFlags.FBindable" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FHidden">
      <summary>La variabile non deve essere visualizzata in un visualizzatore, anche se è presente ed è associabile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FImmediateBind">
      <summary>La variabile viene mappata come singole proprietà associabili.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FNonBrowsable">
      <summary>La variabile viene visualizzata in un visualizzatore oggetti, ma non in un visualizzatore proprietà.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FReadOnly">
      <summary>L'assegnazione alla variabile non deve essere consentita.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FReplaceable">
      <summary>Inserisce dei tag nell'interfaccia in modo che abbia comportamenti predefiniti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FRequestEdit">
      <summary>Indica che la proprietà supporta la notifica <see langword="OnRequestEdit" /> di COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FRestricted">
      <summary>Il flag è destinato alle funzioni a livello di sistema o alle funzioni che non devono essere visualizzate dai visualizzatori dei tipi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FSource">
      <summary>La variabile restituisce un oggetto che rappresenta un'origine di eventi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FUiDefault">
      <summary>Visualizzazione predefinita nell'interfaccia utente.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVersionAttribute">
      <summary>Specifica il numero della versione di una libreria dei tipi esportata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVersionAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.TypeLibVersionAttribute" /> con i numeri di versione principali e secondari della libreria dei tipi.</summary>
      <param name="major">Numero della versione principale della libreria dei tipi.</param>
      <param name="minor">Numero della versione secondaria della libreria dei tipi.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVersionAttribute.MajorVersion">
      <summary>Ottiene il numero della versione principale della libreria dei tipi.</summary>
      <returns>Numero della versione principale della libreria dei tipi.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVersionAttribute.MinorVersion">
      <summary>Ottiene il numero della versione secondaria della libreria dei tipi.</summary>
      <returns>Numero della versione secondaria della libreria dei tipi.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UnknownWrapper">
      <summary>Esegue il wrapping degli oggetti di cui il gestore di marshalling deve eseguire il marshalling come <see langword="VT_UNKNOWN" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UnknownWrapper.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.UnknownWrapper" /> con l'oggetto di cui eseguire il wrapping.</summary>
      <param name="obj">Oggetto di cui eseguire il wrapping.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject">
      <summary>Ottiene l'oggetto contenuto da questo wrapper.</summary>
      <returns>Oggetto di cui è stato eseguito il wrapping.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute">
      <summary>Controlla il comportamento di marshalling di una firma di delegato passata come un puntatore a una funzione non gestita o da codice non gestito. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute" /> con la convenzione di chiamata specificata.</summary>
      <param name="callingConvention">Convenzione di chiamata specificata.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping">
      <summary>Abilita o disabilita il comportamento di mapping più appropriato per la conversione di caratteri Unicode in caratteri ANSI.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention">
      <summary>Ottiene il valore della convenzione di chiamata.</summary>
      <returns>Valore della convenzione di chiamata specificato dal costruttore <see cref="M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)" />.</returns>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet">
      <summary>Indica come eseguire il marshalling dei parametri di stringa nel metodo e controlla l'alterazione dei nomi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError">
      <summary>Indica se il destinatario della chiamata chiama la funzione API Windows <see langword="SetLastError" /> prima della restituzione di un risultato dal metodo con attributi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar">
      <summary>Abilita o disabilita la generazione di un'eccezione su un carattere Unicode di cui non è possibile eseguire il mapping convertito in un carattere ANSI "?".</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.UnmanagedType">
      <summary>Identifica come eseguire il marshalling di parametri o campi nel codice gestito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.AnsiBStr">
      <summary>Stringa di caratteri ANSI costituita da un singolo byte con prefisso di lunghezza. È possibile usare questo membro nel tipo di dati <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.AsAny">
      <summary>Tipo dinamico che determina il tipo di un oggetto in fase di esecuzione ed effettua il marshalling dell'oggetto come quel tipo. Questo membro è valido solo per metodi di platform invoke.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Bool">
      <summary>Valore booleano a 4 byte (<see langword="true" /> != 0, <see langword="false" /> = 0). Si tratta del tipo BOOL Win32.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.BStr">
      <summary>Stringa di caratteri Unicode costituita da un byte doppio con prefisso di lunghezza. È possibile usare questo membro, ovvero la stringa predefinita in COM, nel tipo di dati <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.ByValArray">
      <summary>Quando la proprietà <see cref="P:System.Runtime.InteropServices.MarshalAsAttribute.Value" /> è impostata su <see langword="ByValArray" />, il campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /> deve essere impostato per indicare il numero di elementi nella matrice. Il campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType" /> può contenere facoltativamente l'oggetto <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> degli elementi della matrice quando è necessario distinguere tra più tipi di stringa. È possibile usare solo questo oggetto <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> in una matrice i cui elementi vengono visualizzati come campi in una struttura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.ByValTStr">
      <summary>Usato per matrici di caratteri di lunghezza fissa inline visualizzate all'interno di una struttura. I tipi <see langword="ByValTStr" /> si comportano come stringhe a dimensione fissa in stile C all'interno di una struttura (ad esempio, <c>char s[5]</c>). Il tipo di carattere usato con <see langword="ByValTStr" /> è determinato dall'argomento <see cref="T:System.Runtime.InteropServices.CharSet" /> dell'attributo <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> applicato alla struttura che lo contiene. Usare sempre il campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /> per indicare le dimensioni della matrice.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Currency">
      <summary>Tipo di valuta. Usato su un oggetto <see cref="T:System.Decimal" /> per effettuare il marshalling del valore decimale come tipo di valuta COM anziché come <see langword="Decimal" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler">
      <summary>Specifica la classe del gestore di marshalling personalizzato quando è usato con il campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /> o <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef" />. È possibile usare il campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie" /> per passare informazioni aggiuntive al gestore di marshalling personalizzato. È possibile usare questo membro su qualsiasi tipo di riferimento. Questo membro è valido solo per i parametri e i valori restituiti. Non può essere usato nei campi.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Error">
      <summary>Tipo nativo associato a <see cref="F:System.Runtime.InteropServices.UnmanagedType.I4" /> o a <see cref="F:System.Runtime.InteropServices.UnmanagedType.U4" /> e che determina l'esportazione del parametro come HRESULT nella libreria dei tipi esportata.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.FunctionPtr">
      <summary>Intero che può essere usato come puntatore a funzione di tipo C. È possibile usare questo membro in un tipo di dati <see cref="T:System.Delegate" /> o in un tipo che eredita da <see cref="T:System.Delegate" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.HString">
      <summary>Stringa Windows Runtime. È possibile usare questo membro nel tipo di dati <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I1">
      <summary>Intero con segno a 1 byte. È possibile usare questo membro per trasformare un valore booleano in un valore <see langword="bool" /> a 1 byte di tipo C (<see langword="true" /> = 1, <see langword="false" /> = 0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I2">
      <summary>Intero con segno a 2 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I4">
      <summary>Intero con segno a 4 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I8">
      <summary>Intero con segno a 8 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IDispatch">
      <summary>Puntatore a <see langword="IDispatch" /> COM (<see langword="Object" /> in Microsoft Visual Basic 6.0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IInspectable">
      <summary>Puntatore a interfaccia Windows Runtime. È possibile usare questo membro nel tipo di dati <see cref="T:System.Object" /> .</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Interface">
      <summary>Puntatore a interfaccia COM. L'oggetto <see cref="T:System.Guid" /> dell'interfaccia è ottenuto dai metadati della classe. Usare questo membro per specificare il tipo di interfaccia esatto o il tipo di interfaccia predefinito se lo si applica a una classe. Questo membro produce lo stesso comportamento di <see cref="F:System.Runtime.InteropServices.UnmanagedType.IUnknown" /> quando lo si applica al tipo di dati <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IUnknown">
      <summary>Puntatore a <see langword="IUnknown" /> COM. È possibile usare questo membro nel tipo di dati <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPArray">
      <summary>Puntatore al primo elemento di una matrice di tipo C. Quando si effettua il marshalling da codice gestito a non gestito, la lunghezza della matrice dipende dalla lunghezza della matrice gestita. Quando si effettua il marshalling da codice non gestito a gestito, la lunghezza della matrice dipende dai campi <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /> e <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex" />, facoltativamente seguiti dal tipo non gestito degli elementi all'interno della matrice quando è necessario distinguere tra più tipi di stringa.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPStr">
      <summary>Stringa di caratteri ANSI a un byte a terminazione Null. È possibile usare questo membro nei tipi di dati <see cref="T:System.String" /> e <see cref="T:System.Text.StringBuilder" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPStruct">
      <summary>Puntatore a una struttura di tipo C usata per effettuare il marshalling di classi formattate gestite. Questo membro è valido solo per metodi di platform invoke.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPTStr">
      <summary>Stringa di caratteri dipendente dalla piattaforma: ANSI in Windows 98 e Unicode in Windows NT e Windows XP. Questo valore è supportato solo per platform invoke, non per l'interoperabilità COM, perché l'esportazione di una stringa di tipo <see langword="LPTStr" /> non è supportata.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPUTF8Str">
      <summary>Puntatore a una stringa con codifica UTF-8.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPWStr">
      <summary>Stringa di caratteri Unicode a 2 byte a terminazione Null. Non è possibile usare il valore <see langword="LPWStr" /> con una stringa non gestita, a meno che la stringa non sia stata creata tramite la funzione <see langword="CoTaskMemAlloc" /> non gestita.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.R4">
      <summary>Numero a virgola mobile a 4 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.R8">
      <summary>Numero a virgola mobile a 8 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SafeArray">
      <summary>
        <see langword="SafeArray" /> è una matrice autodescrittiva che contiene il tipo, la dimensione e i limiti dei dati della matrice associati. È possibile usare questo membro con il campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType" /> per eseguire l'override del tipo di elemento predefinito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Struct">
      <summary>VARIANT usato per effettuare il marshalling di tipi valore e classi formattate gestite.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SysInt">
      <summary>Intero con segno dipendente dalla piattaforma: 4 byte in Windows a 32 bit, 8 byte in Windows a 64 bit.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SysUInt">
      <summary>Intero senza segno dipendente dalla piattaforma: 4 byte in Windows a 32 bit, 8 byte in Windows a 64 bit.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.TBStr">
      <summary>Stringa <see langword="char" /> dipendente dalla piattaforma con prefisso della lunghezza: ANSI in Windows 98, Unicode in Windows NT. Questo membro simile a BSTR viene usato raramente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U1">
      <summary>Intero senza segno a 1 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U2">
      <summary>Intero senza segno a 2 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U4">
      <summary>Intero senza segno a 4 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U8">
      <summary>Intero senza segno a 8 byte.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.VariantBool">
      <summary>Tipo VARIANT_BOOL definito da OLE a 2 byte (<see langword="true" /> = -1, <see langword="false" /> = 0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.VBByRefStr">
      <summary>Valore che consente a Visual Basic di modificare una stringa in codice non gestito e riflettere i risultati in codice gestito. Questo valore è supportato solo per platform invoke.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.VarEnum">
      <summary>Indica le modalità di esecuzione del marshalling degli elementi della matrice quando viene effettuato il marshalling di una matrice da codice gestito a codice non gestito come <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_ARRAY">
      <summary>Indica un puntatore a <see langword="SAFEARRAY" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BLOB">
      <summary>Indica i byte per il prefisso di lunghezza.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BLOB_OBJECT">
      <summary>Indica che un blob contiene un oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BOOL">
      <summary>Indica un valore Boolean.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BSTR">
      <summary>Indica una stringa BSTR.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BYREF">
      <summary>Indica che un valore è un riferimento.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CARRAY">
      <summary>Indica una matrice di tipo C.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CF">
      <summary>Indica il formato degli Appunti.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CLSID">
      <summary>Indica un ID di classe.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CY">
      <summary>Indica un valore di valuta.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DATE">
      <summary>Indica un valore DATE.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DECIMAL">
      <summary>Indica un valore <see langword="decimal" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DISPATCH">
      <summary>Indica un puntatore a <see langword="IDispatch" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_EMPTY">
      <summary>Indica che un valore non è stato specificato.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_ERROR">
      <summary>Indica un SCODE.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_FILETIME">
      <summary>Indica un valore FILETIME.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_HRESULT">
      <summary>Indica un HRESULT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I1">
      <summary>Indica un valore <see langword="char" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I2">
      <summary>Indica un intero <see langword="short" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I4">
      <summary>Indica un intero <see langword="long" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I8">
      <summary>Indica un intero a 64 bit.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_INT">
      <summary>Indica un intero.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_LPSTR">
      <summary>Indica una stringa con terminazione di tipo Null.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_LPWSTR">
      <summary>Indica una stringa di caratteri estesi con terminazione <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_NULL">
      <summary>Indica un valore null, simile a un valore null in SQL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_PTR">
      <summary>Indica un tipo puntatore.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_R4">
      <summary>Indica un valore <see langword="float" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_R8">
      <summary>Indica un valore <see langword="double" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_RECORD">
      <summary>Indica un tipo definito dall'utente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_SAFEARRAY">
      <summary>Indica un SAFEARRAY. Non valido in un VARIANT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STORAGE">
      <summary>Indica che segue il nome di un archivio.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STORED_OBJECT">
      <summary>Indica che un archivio contiene un oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STREAM">
      <summary>Indica che segue il nome di un flusso.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STREAMED_OBJECT">
      <summary>Indica che un flusso contiene un oggetto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI1">
      <summary>Indica un valore <see langword="byte" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI2">
      <summary>Indica un valore <see langword="unsigned" /><see langword="short" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI4">
      <summary>Indica un valore <see langword="unsigned" /><see langword="long" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI8">
      <summary>Rappresenta un intero senza segno a 64 bit.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UINT">
      <summary>Indica un intero <see langword="unsigned" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UNKNOWN">
      <summary>Indica un puntatore a <see langword="IUnknown" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_USERDEFINED">
      <summary>Indica un tipo definito dall'utente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VARIANT">
      <summary>Indica un puntatore <see langword="far" /> VARIANT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VECTOR">
      <summary>Indica una matrice a conteggio semplice.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VOID">
      <summary>Indica un <see langword="void" /> di tipo C.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.VariantWrapper">
      <summary>Esegue il marshalling dei dati di tipo <see langword="VT_VARIANT | VT_BYREF" /> dal codice gestito al codice non gestito. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.VariantWrapper.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.VariantWrapper" /> per il parametro <see cref="T:System.Object" /> specificato.</summary>
      <param name="obj">Oggetto di cui eseguire il marshalling.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.VariantWrapper.WrappedObject">
      <summary>Ottiene l'oggetto incluso dall'oggetto <see cref="T:System.Runtime.InteropServices.VariantWrapper" />.</summary>
      <returns>Oggetto incluso dall'oggetto <see cref="T:System.Runtime.InteropServices.VariantWrapper" />.</returns>
    </member>
    <member name="T:System.Security.SecureString">
      <summary>Rappresenta il testo che deve rimanere riservato, ad esempio eliminandolo dalla memoria del computer quando non è più necessario. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.SecureString.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.SecureString" />.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa istanza.</exception>
      <exception cref="T:System.NotSupportedException">Questa operazione non è supportata su questa piattaforma.</exception>
    </member>
    <member name="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.SecureString" /> da una sottomatrice di oggetti <see cref="T:System.Char" />.
Questo costruttore non è conforme a CLS. L'alternativa conforme a CLS è <see cref="M:System.Security.SecureString.#ctor" />.</summary>
      <param name="value">Puntatore a una matrice di oggetti <see cref="T:System.Char" />.</param>
      <param name="length">Numero di elementi di <paramref name="value" /> da includere nella nuova istanza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> è minore di zero o maggiore di 65.536.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa stringa protetta.</exception>
      <exception cref="T:System.NotSupportedException">Questa operazione non è supportata su questa piattaforma.</exception>
    </member>
    <member name="M:System.Security.SecureString.AppendChar(System.Char)">
      <summary>Aggiunge un carattere alla fine della stringa protetta corrente.</summary>
      <param name="c">Carattere da aggiungere a questa stringa protetta.</param>
      <exception cref="T:System.ObjectDisposedException">Questa stringa sicura è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException">Questa stringa protetta è di sola lettura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Con questa operazione la lunghezza della stringa protetta sarà superiore a 65.536 caratteri.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa stringa protetta.</exception>
    </member>
    <member name="M:System.Security.SecureString.Clear">
      <summary>Elimina il valore della stringa protetta corrente.</summary>
      <exception cref="T:System.ObjectDisposedException">Questa stringa sicura è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException">Questa stringa protetta è di sola lettura.</exception>
    </member>
    <member name="M:System.Security.SecureString.Copy">
      <summary>Crea una copia della stringa protetta corrente.</summary>
      <returns>Duplicato di questa stringa protetta.</returns>
      <exception cref="T:System.ObjectDisposedException">Questa stringa sicura è già stata eliminata.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa stringa protetta.</exception>
    </member>
    <member name="M:System.Security.SecureString.Dispose">
      <summary>Rilascia tutte le risorse usate dall'oggetto <see cref="T:System.Security.SecureString" /> corrente.</summary>
    </member>
    <member name="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
      <summary>Inserisce un carattere in questa stringa protetta nella posizione di indice specificata.</summary>
      <param name="index">Posizione di indice in cui viene inserito il parametro <paramref name="c" />.</param>
      <param name="c">Carattere da inserire.</param>
      <exception cref="T:System.ObjectDisposedException">Questa stringa sicura è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException">Questa stringa protetta è di sola lettura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero o maggiore della lunghezza della stringa protetta.
-oppure-
Con questa operazione la lunghezza della stringa protetta sarà superiore a 65.536 caratteri.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa stringa protetta.</exception>
    </member>
    <member name="M:System.Security.SecureString.IsReadOnly">
      <summary>Indica se questa stringa protetta è contrassegnata come di sola lettura.</summary>
      <returns>
        <see langword="true" /> se questa stringa protetta è contrassegnata come di sola lettura; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Questa stringa sicura è già stata eliminata.</exception>
    </member>
    <member name="P:System.Security.SecureString.Length">
      <summary>Ottiene il numero di caratteri nella stringa protetta corrente.</summary>
      <returns>Numero di oggetti <see cref="T:System.Char" /> in questa stringa protetta.</returns>
      <exception cref="T:System.ObjectDisposedException">Questa stringa sicura è già stata eliminata.</exception>
    </member>
    <member name="M:System.Security.SecureString.MakeReadOnly">
      <summary>Rende il valore di testo di questa stringa protetta di sola lettura.</summary>
      <exception cref="T:System.ObjectDisposedException">Questa stringa sicura è già stata eliminata.</exception>
    </member>
    <member name="M:System.Security.SecureString.RemoveAt(System.Int32)">
      <summary>Rimuove il carattere nella posizione di indice specificata da questa stringa protetta.</summary>
      <param name="index">Posizione di indice di un carattere in questa stringa protetta.</param>
      <exception cref="T:System.ObjectDisposedException">Questa stringa sicura è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException">Questa stringa protetta è di sola lettura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero oppure maggiore o uguale alla lunghezza di questa stringa protetta.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa stringa protetta.</exception>
    </member>
    <member name="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
      <summary>Sostituisce il carattere esistente nella posizione di indice specificata con un altro carattere.</summary>
      <param name="index">Posizione di indice di un carattere esistente in questa stringa protetta.</param>
      <param name="c">Carattere che sostituisce il carattere esistente.</param>
      <exception cref="T:System.ObjectDisposedException">Questa stringa sicura è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException">Questa stringa protetta è di sola lettura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero oppure maggiore o uguale alla lunghezza di questa stringa protetta.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Si è verificato un errore durante la protezione o la rimozione della protezione del valore di questa stringa protetta.</exception>
    </member>
    <member name="T:System.Security.SecureStringMarshal">
      <summary>Rende disponibile una raccolta di metodi per l'allocazione di memoria non gestita e per la copia di blocchi di memoria non gestita.</summary>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s">Oggetto gestito da copiare.</param>
      <returns>Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito in un blocco di memoria allocato dall'allocatore di memoria delle attività COM non gestite.</summary>
      <param name="s">Oggetto gestito da copiare.</param>
      <returns>Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito nella memoria non gestita, effettuando contemporaneamente la conversione nel formato ANSI.</summary>
      <param name="s">Oggetto gestito da copiare.</param>
      <returns>Indirizzo, nella memoria non gestita, in cui è stato copiato il parametro <paramref name="s" />, oppure 0 se è stato fornito un oggetto Null.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
      <summary>Copia il contenuto di un oggetto <see cref="T:System.Security.SecureString" /> gestito nella memoria non gestita.</summary>
      <param name="s">Oggetto gestito da copiare.</param>
      <returns>Indirizzo, nella memoria non gestita, in cui è stato copiato <paramref name="s" /> oppure 0 se <paramref name="s" /> è un oggetto <see cref="T:System.Security.SecureString" /> con lunghezza 0.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il computer corrente non esegue Windows 2000 Service Pack 3 o versione successiva.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile è insufficiente.</exception>
    </member>
  </members>
</doc>