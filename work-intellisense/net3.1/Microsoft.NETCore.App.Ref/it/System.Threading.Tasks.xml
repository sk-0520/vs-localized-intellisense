<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Tasks</name>
  </assembly>
  <members>
    <member name="T:System.OperationCanceledException">
      <summary>Eccezione generata in un thread all'annullamento di un'operazione eseguita dal thread.</summary>
    </member>
    <member name="M:System.OperationCanceledException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.OperationCanceledException" /> con un messaggio di errore fornito dal sistema.</summary>
    </member>
    <member name="M:System.OperationCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.OperationCanceledException" /> con dati serializzati.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.OperationCanceledException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.OperationCanceledException" /> con un messaggio di errore specificato.</summary>
      <param name="message">
        <see cref="T:System.String" /> che descrive l'errore.</param>
    </member>
    <member name="M:System.OperationCanceledException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.OperationCanceledException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="M:System.OperationCanceledException.#ctor(System.String,System.Exception,System.Threading.CancellationToken)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.OperationCanceledException" /> con un messaggio di errore specificato, un riferimento all'eccezione interna che è la causa di questa eccezione e un token di annullamento.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
      <param name="token">Token di annullamento associato all'operazione annullata.</param>
    </member>
    <member name="M:System.OperationCanceledException.#ctor(System.String,System.Threading.CancellationToken)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.OperationCanceledException" /> con un messaggio di errore specificato e un token di annullamento.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="token">Token di annullamento associato all'operazione annullata.</param>
    </member>
    <member name="M:System.OperationCanceledException.#ctor(System.Threading.CancellationToken)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.OperationCanceledException" /> con un token di annullamento.</summary>
      <param name="token">Token di annullamento associato all'operazione annullata.</param>
    </member>
    <member name="P:System.OperationCanceledException.CancellationToken">
      <summary>Ottiene un token associato all'operazione annullata.</summary>
      <returns>Token associato all'operazione annullata oppure token predefinito.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder">
      <summary>Rappresenta un generatore per gli iteratori asincroni.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder.AwaitOnCompleted``2(``0@,``1@)">
      <summary>Programma la macchina a stati per passare all'azione successiva una volta completato l'elemento awaiter specificato.</summary>
      <param name="awaiter">L'elemento awaiter.</param>
      <param name="stateMachine">Macchina a stati.</param>
      <typeparam name="TAwaiter">Tipo dell'elemento awaiter.</typeparam>
      <typeparam name="TStateMachine">Tipo della macchina di stati.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)">
      <summary>Programma la macchina a stati per passare all'azione successiva una volta completato l'elemento awaiter specificato.</summary>
      <param name="awaiter">L'elemento awaiter.</param>
      <param name="stateMachine">Macchina a stati.</param>
      <typeparam name="TAwaiter">Tipo dell'elemento awaiter.</typeparam>
      <typeparam name="TStateMachine">Tipo della macchina di stati.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder.Complete">
      <summary>Contrassegna l'iterazione come completata, sia che abbia avuto esito positivo o meno.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder.Create">
      <summary>Crea un'istanza dello struct <see cref="T:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder" />.</summary>
      <returns>Istanza inizializzata.</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder.MoveNext``1(``0@)">
      <summary>Richiama <see cref="M:System.Runtime.CompilerServices.IAsyncStateMachine.MoveNext" /> nella macchina a stati durante la protezione di <see cref="T:System.Threading.ExecutionContext" />.</summary>
      <param name="stateMachine">Istanza della macchina a stati passata per riferimento.</param>
      <typeparam name="TStateMachine">Tipo della macchina di stati.</typeparam>
    </member>
    <member name="T:System.Runtime.CompilerServices.AsyncTaskMethodBuilder">
      <summary>Rappresenta un generatore per i metodi asincroni che restituiscono un'attività.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted``2(``0@,``1@)">
      <summary>Programma la macchina a stati per passare all'azione successiva una volta completato l'elemento awaiter specificato.</summary>
      <param name="awaiter">L'elemento awaiter.</param>
      <param name="stateMachine">Macchina a stati.</param>
      <typeparam name="TAwaiter">Tipo dell'elemento awaiter.</typeparam>
      <typeparam name="TStateMachine">Tipo della macchina di stati.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)">
      <summary>Programma la macchina a stati per passare all'azione successiva una volta completato l'elemento awaiter specificato. Questo metodo può essere chiamato da codice parzialmente attendibile.</summary>
      <param name="awaiter">L'elemento awaiter.</param>
      <param name="stateMachine">Macchina a stati.</param>
      <typeparam name="TAwaiter">Tipo dell'elemento awaiter.</typeparam>
      <typeparam name="TStateMachine">Tipo della macchina di stati.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create">
      <summary>Crea un'istanza della classe <see cref="T:System.Runtime.CompilerServices.AsyncTaskMethodBuilder" />.</summary>
      <returns>Nuova istanza del generatore.</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(System.Exception)">
      <summary>Contrassegna l'attività come non riuscita e associa l'eccezione specificata all'attività.</summary>
      <param name="exception">Eccezione da associare all'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">L'attività è già stata completata.
-oppure-
Il generatore non è inizializzato.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult">
      <summary>Contrassegna l'attività come completata correttamente.</summary>
      <exception cref="T:System.InvalidOperationException">L'attività è già stata completata.
-oppure-
Il generatore non è inizializzato.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)">
      <summary>Associa il generatore alla macchina a stati specificata.</summary>
      <param name="stateMachine">Istanza della macchina a stati da associare al generatore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateMachine" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Macchina a stati precedentemente impostata.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start``1(``0@)">
      <summary>Inizia l'esecuzione del generatore con la macchina a stati associata.</summary>
      <param name="stateMachine">Istanza della macchina a stati passata per riferimento.</param>
      <typeparam name="TStateMachine">Tipo della macchina di stati.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateMachine" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task">
      <summary>Ottiene l'attività per questo generatore.</summary>
      <returns>Attività per questo generatore.</returns>
      <exception cref="T:System.InvalidOperationException">Il generatore non è inizializzato.</exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1">
      <summary>Rappresenta un generatore per i metodi asincroni che restituisce un'attività e fornisce un parametro per il risultato.</summary>
      <typeparam name="TResult">Risultato da utilizzare per completare l'attività.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitOnCompleted``2(``0@,``1@)">
      <summary>Programma la macchina a stati per passare all'azione successiva una volta completato l'elemento awaiter specificato.</summary>
      <param name="awaiter">L'elemento awaiter.</param>
      <param name="stateMachine">Macchina a stati.</param>
      <typeparam name="TAwaiter">Tipo dell'elemento awaiter.</typeparam>
      <typeparam name="TStateMachine">Tipo della macchina di stati.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitUnsafeOnCompleted``2(``0@,``1@)">
      <summary>Programma la macchina a stati per passare all'azione successiva una volta completato l'elemento awaiter specificato. Questo metodo può essere chiamato da codice parzialmente attendibile.</summary>
      <param name="awaiter">L'elemento awaiter.</param>
      <param name="stateMachine">Macchina a stati.</param>
      <typeparam name="TAwaiter">Tipo dell'elemento awaiter.</typeparam>
      <typeparam name="TStateMachine">Tipo della macchina di stati.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Create">
      <summary>Crea un'istanza della classe <see cref="T:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1" />.</summary>
      <returns>Nuova istanza del generatore.</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(System.Exception)">
      <summary>Contrassegna l'attività come non riuscita e associa l'eccezione specificata all'attività.</summary>
      <param name="exception">Eccezione da associare all'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">L'attività è già stata completata.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetResult(`0)">
      <summary>Contrassegna l'attività come completata correttamente.</summary>
      <param name="result">Risultato da utilizzare per completare l'attività.</param>
      <exception cref="T:System.InvalidOperationException">L'attività è già stata completata.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)">
      <summary>Associa il generatore alla macchina a stati specificata.</summary>
      <param name="stateMachine">Istanza della macchina a stati da associare al generatore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateMachine" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Macchina a stati precedentemente impostata.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start``1(``0@)">
      <summary>Inizia l'esecuzione del generatore con la macchina a stati associata.</summary>
      <param name="stateMachine">Istanza della macchina a stati passata per riferimento.</param>
      <typeparam name="TStateMachine">Tipo della macchina di stati.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateMachine" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Task">
      <summary>Ottiene l'attività per questo generatore.</summary>
      <returns>Attività per questo generatore.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.AsyncVoidMethodBuilder">
      <summary>Rappresenta un generatore per i metodi asincroni che non restituiscono un valore.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitOnCompleted``2(``0@,``1@)">
      <summary>Programma la macchina a stati per passare all'azione successiva una volta completato l'elemento awaiter specificato.</summary>
      <param name="awaiter">L'elemento awaiter.</param>
      <param name="stateMachine">Macchina a stati.</param>
      <typeparam name="TAwaiter">Tipo dell'elemento awaiter.</typeparam>
      <typeparam name="TStateMachine">Tipo della macchina di stati.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)">
      <summary>Programma la macchina a stati per passare all'azione successiva una volta completato l'elemento awaiter specificato. Questo metodo può essere chiamato da codice parzialmente attendibile.</summary>
      <param name="awaiter">L'elemento awaiter.</param>
      <param name="stateMachine">Macchina a stati.</param>
      <typeparam name="TAwaiter">Tipo dell'elemento awaiter.</typeparam>
      <typeparam name="TStateMachine">Tipo della macchina di stati.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Create">
      <summary>Crea un'istanza della classe <see cref="T:System.Runtime.CompilerServices.AsyncVoidMethodBuilder" />.</summary>
      <returns>Nuova istanza del generatore.</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetException(System.Exception)">
      <summary>Associa un'eccezione al generatore di metodo.</summary>
      <param name="exception">Eccezione da associare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il generatore non è inizializzato.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetResult">
      <summary>Contrassegna il generatore di metodi come correttamente completato.</summary>
      <exception cref="T:System.InvalidOperationException">Il generatore non è inizializzato.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)">
      <summary>Associa il generatore alla macchina a stati specificata.</summary>
      <param name="stateMachine">Istanza della macchina a stati da associare al generatore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateMachine" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Macchina a stati precedentemente impostata.</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Start``1(``0@)">
      <summary>Inizia l'esecuzione del generatore con la macchina a stati associata.</summary>
      <param name="stateMachine">Istanza della macchina a stati passata per riferimento.</param>
      <typeparam name="TStateMachine">Tipo della macchina di stati.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateMachine" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.ConfiguredAsyncDisposable">
      <summary>Specifica un tipo che può essere usato per configurare la modalità di esecuzione delle attese per un <see cref="T:System.IAsyncDisposable" />.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConfiguredAsyncDisposable.DisposeAsync">
      <summary>Consente di liberare in modo asincrono le risorse non gestite utilizzate da <see cref="T:System.Runtime.CompilerServices.ConfiguredAsyncDisposable" />.</summary>
      <returns>Attività che rappresenta l'operazione di eliminazione asincrona.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1">
      <summary>Rende disponibile un elemento enumerabile asincrono awaitable che consente iterazioni annullabili ed espressioni await configurate.</summary>
      <typeparam name="T">Tipo di valori da enumerare.</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.ConfigureAwait(System.Boolean)">
      <summary>Consente di configurare la modalità di esecuzione delle espressioni await per le attività restituite da un'iterazione asincrona.</summary>
      <param name="continueOnCapturedContext">
        <see langword="true" /> per acquisire ed effettuare il marshalling al contesto corrente. In caso contrario, <see langword="false" />.</param>
      <returns>Elemento enumerabile configurato.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.Enumerator">
      <summary>Fornisce un enumeratore asincrono awaitable che consente iterazioni annullabili ed espressioni await configurate.</summary>
      <typeparam name="T">Tipo di valori da enumerare.</typeparam>
    </member>
    <member name="P:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.Enumerator.Current">
      <summary>Ottiene l'elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.Enumerator.DisposeAsync">
      <summary>Esegue attività definite dall'applicazione, ad esempio libera, rilascia o reimposta risorse non gestite in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione di eliminazione asincrona.</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.Enumerator.MoveNextAsync">
      <summary>Sposta l'enumeratore in modo asincrono all'elemento successivo della raccolta.</summary>
      <returns>Un elemento <see cref="T:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1" /> viene completato con risultato <see langword="true" /> se l'enumeratore è stato spostato correttamente all'elemento successivo o con risultato <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.GetAsyncEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione in modo asincrono delle raccolte che consentono l'iterazione annullabile e le attese configurate.</summary>
      <returns>Enumeratore per la classe <see cref="T:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.WithCancellation(System.Threading.CancellationToken)">
      <summary>Imposta l'elemento <see cref="T:System.Threading.CancellationToken" /> da passare a <see cref="M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)" /> quando si esegue l'iterazione.</summary>
      <param name="cancellationToken">Token di annullamento da usare.</param>
      <returns>Elemento enumerabile configurato.</returns>
    </member>
    <member name="T:System.Threading.CancellationTokenSource">
      <summary>Segnala a un oggetto <see cref="T:System.Threading.CancellationToken" /> che deve essere annullato.</summary>
    </member>
    <member name="M:System.Threading.CancellationTokenSource.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.CancellationTokenSource" />.</summary>
    </member>
    <member name="M:System.Threading.CancellationTokenSource.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.CancellationTokenSource" /> che verrà annullata dopo il ritardo specificato in millisecondi.</summary>
      <param name="millisecondsDelay">Intervallo di tempo di attesa, in millisecondi, prima dell'annullamento dell'oggetto <see cref="T:System.Threading.CancellationTokenSource" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsDelay" /> è minore di -1.</exception>
    </member>
    <member name="M:System.Threading.CancellationTokenSource.#ctor(System.TimeSpan)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.CancellationTokenSource" /> che verrà annullata dopo l'intervallo di tempo specificato.</summary>
      <param name="delay">Intervallo di tempo di attesa prima dell'annullamento dell'oggetto <see cref="T:System.Threading.CancellationTokenSource" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="delay" />.<see cref="P:System.TimeSpan.TotalMilliseconds" /> è minore di -1 o maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Threading.CancellationTokenSource.Cancel">
      <summary>Comunica una richiesta di annullamento.</summary>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto <see cref="T:System.Threading.CancellationTokenSource" /> è stato eliminato.</exception>
      <exception cref="T:System.AggregateException">Eccezione di aggregazione che contiene tutte le eccezioni generate dai callback registrati sull'oggetto <see cref="T:System.Threading.CancellationToken" /> associato.</exception>
    </member>
    <member name="M:System.Threading.CancellationTokenSource.Cancel(System.Boolean)">
      <summary>Passa una richiesta di annullamento e specifica se i callback restanti e le operazioni annullabili devono essere elaborati se si verifica un'eccezione.</summary>
      <param name="throwOnFirstException">
        <see langword="true" /> se le eccezioni devono essere propagate immediatamente; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto <see cref="T:System.Threading.CancellationTokenSource" /> è stato eliminato.</exception>
      <exception cref="T:System.AggregateException">Eccezione di aggregazione che contiene tutte le eccezioni generate dai callback registrati sull'oggetto <see cref="T:System.Threading.CancellationToken" /> associato.</exception>
    </member>
    <member name="M:System.Threading.CancellationTokenSource.CancelAfter(System.Int32)">
      <summary>Programma un'operazione di annullamento in questo oggetto <see cref="T:System.Threading.CancellationTokenSource" /> dopo il numero di millisecondi specificato.</summary>
      <param name="millisecondsDelay">Intervallo di tempo da attendere prima di annullare questo <see cref="T:System.Threading.CancellationTokenSource" />.</param>
      <exception cref="T:System.ObjectDisposedException">Eccezione generata quando questo <see cref="T:System.Threading.CancellationTokenSource" /> è stato eliminato.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Eccezione generata quando <paramref name="millisecondsDelay" /> è inferiore a -1.</exception>
    </member>
    <member name="M:System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)">
      <summary>Programma un'operazione di annullamento in questo oggetto <see cref="T:System.Threading.CancellationTokenSource" /> dopo l'intervallo di tempo specificato.</summary>
      <param name="delay">Intervallo di tempo da attendere prima di annullare questo <see cref="T:System.Threading.CancellationTokenSource" />.</param>
      <exception cref="T:System.ObjectDisposedException">Eccezione generata quando questo <see cref="T:System.Threading.CancellationTokenSource" /> è stato eliminato.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Eccezione generata quando <paramref name="delay" /> è minore di -1 o maggiore di Int32.MaxValue.</exception>
    </member>
    <member name="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken,System.Threading.CancellationToken)">
      <summary>Crea un oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che sarà in stato annullato quando uno dei token di origine si troverà in stato annullato.</summary>
      <param name="token1">Primo token di annullamento da osservare.</param>
      <param name="token2">Secondo token di annullamento da osservare.</param>
      <returns>Oggetto <see cref="T:System.Threading.CancellationTokenSource" /> collegato ai token di origine.</returns>
      <exception cref="T:System.ObjectDisposedException">Un oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato a uno dei token di origine è stato eliminato.</exception>
    </member>
    <member name="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken[])">
      <summary>Crea un oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che sarà nello stato annullato quando uno dei token di origine nella matrice specificata si troverà nello stato annullato.</summary>
      <param name="tokens">Matrice contenente le istanze del token di annullamento da considerare.</param>
      <returns>Oggetto <see cref="T:System.Threading.CancellationTokenSource" /> collegato ai token di origine.</returns>
      <exception cref="T:System.ObjectDisposedException">Un oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato a uno dei token di origine è stato eliminato.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokens" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tokens" /> è vuoto.</exception>
    </member>
    <member name="M:System.Threading.CancellationTokenSource.Dispose">
      <summary>Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Threading.CancellationTokenSource" />.</summary>
    </member>
    <member name="M:System.Threading.CancellationTokenSource.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate dalla classe <see cref="T:System.Threading.CancellationTokenSource" /> e facoltativamente le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.Threading.CancellationTokenSource.IsCancellationRequested">
      <summary>Ottiene un valore che indica se per <see cref="T:System.Threading.CancellationTokenSource" /> è stato richiesto l'annullamento.</summary>
      <returns>
        <see langword="true" />Se per questo è stato richiesto l' <see cref="T:System.Threading.CancellationTokenSource" />annullamento; in <see langword="false" />caso contrario,.</returns>
    </member>
    <member name="P:System.Threading.CancellationTokenSource.Token">
      <summary>Ottiene l'oggetto <see cref="T:System.Threading.CancellationToken" /> associato a questo oggetto <see cref="T:System.Threading.CancellationTokenSource" />.</summary>
      <returns>Oggetto <see cref="T:System.Threading.CancellationToken" /> associato a questo oggetto <see cref="T:System.Threading.CancellationTokenSource" />.</returns>
      <exception cref="T:System.ObjectDisposedException">L'origine del token è stata eliminata.</exception>
    </member>
    <member name="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
      <summary>Fornisce utilità di pianificazione delle attività coordinate per eseguire attività assicurando al contempo che le attività simultanee possano essere eseguite contemporaneamente a differenza delle attività esclusive.</summary>
    </member>
    <member name="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> destinata all'utilità di pianificazione specificata.</summary>
      <param name="taskScheduler">Utilità di pianificazione di destinazione in base alla quale eseguire questa coppia.</param>
    </member>
    <member name="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> che si rivolge all'utilità di pianificazione specificata con un livello di concorrenza massimo.</summary>
      <param name="taskScheduler">Utilità di pianificazione di destinazione in base alla quale eseguire questa coppia.</param>
      <param name="maxConcurrencyLevel">Numero massimo di attività in esecuzione simultaneamente.</param>
    </member>
    <member name="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> che si rivolge all'utilità di pianificazione specificata con un livello di concorrenza massimo e un numero massimo di attività pianificate che possono essere elaborate come unità.</summary>
      <param name="taskScheduler">Utilità di pianificazione di destinazione in base alla quale eseguire questa coppia.</param>
      <param name="maxConcurrencyLevel">Numero massimo di attività in esecuzione simultaneamente.</param>
      <param name="maxItemsPerTask">Il numero massimo di attività da elaborare per ogni attività pianificata sottostante utilizzata dalla coppia.</param>
    </member>
    <member name="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete">
      <summary>Indica alla coppia dell'utilità di pianificazione di non accettare altre attività.</summary>
    </member>
    <member name="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion">
      <summary>Ottiene <see cref="T:System.Threading.Tasks.Task" /> che verrà completato al termine dell'elaborazione da parte dell'utilità di pianificazione.</summary>
      <returns>L'operazione asincrona che verrà completata quando l'utilità di pianificazione completa l'elaborazione.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler">
      <summary>Ottiene un oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> che è possibile utilizzare per pianificare le attività per la coppia eseguibili contemporaneamente ad altre attività sulla coppia.</summary>
      <returns>Oggetto che può essere utilizzato per pianificare le attività simultaneamente.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler">
      <summary>Ottiene un oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> che è possibile utilizzare per pianificare le attività per la coppia da eseguire esclusivamente in relazione ad altre attività sulla coppia.</summary>
      <returns>Oggetto che può essere utilizzato per pianificare le attività che non vengono eseguite contemporaneamente ad altre attività.</returns>
    </member>
    <member name="T:System.Threading.Tasks.TaskAsyncEnumerableExtensions">
      <summary>Fornisce un set di metodi statici per la configurazione dei comportamenti correlati alle attività in elementi enumerabili e disposable asincroni.</summary>
    </member>
    <member name="M:System.Threading.Tasks.TaskAsyncEnumerableExtensions.ConfigureAwait(System.IAsyncDisposable,System.Boolean)">
      <summary>Consente di configurare la modalità di esecuzione delle espressioni await per le attività restituite da un elemento disposable asincrono.</summary>
      <param name="source">Elemento disposable asincrono di origine.</param>
      <param name="continueOnCapturedContext">
        <see langword="true" /> per acquisire ed effettuare il marshalling al contesto corrente. In caso contrario, <see langword="false" />.</param>
      <returns>Elemento disposable asincrono.</returns>
    </member>
    <member name="M:System.Threading.Tasks.TaskAsyncEnumerableExtensions.ConfigureAwait``1(System.Collections.Generic.IAsyncEnumerable{``0},System.Boolean)">
      <summary>Consente di configurare la modalità di esecuzione delle espressioni await per le attività restituite da un'iterazione asincrona.</summary>
      <param name="source">Elemento enumerabile di origine di cui eseguire l'iterazione.</param>
      <param name="continueOnCapturedContext">
        <see langword="true" /> per acquisire ed effettuare il marshalling al contesto corrente. In caso contrario, <see langword="false" />.</param>
      <typeparam name="T">Tipo degli oggetti da scorrere.</typeparam>
      <returns>Elemento enumerabile configurato.</returns>
    </member>
    <member name="M:System.Threading.Tasks.TaskAsyncEnumerableExtensions.WithCancellation``1(System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken)">
      <summary>Imposta l'elemento <see cref="T:System.Threading.CancellationToken" /> da passare a <see cref="M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)" /> quando si esegue l'iterazione.</summary>
      <param name="source">Elemento enumerabile di origine di cui eseguire l'iterazione.</param>
      <param name="cancellationToken">Token di annullamento da usare.</param>
      <typeparam name="T">Tipo degli oggetti da scorrere.</typeparam>
      <returns>Elemento enumerabile configurato.</returns>
    </member>
    <member name="T:System.Threading.Tasks.TaskCanceledException">
      <summary>Rappresenta un'eccezione utilizzata per comunicare l'annullamento di un'attività.</summary>
    </member>
    <member name="M:System.Threading.Tasks.TaskCanceledException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.TaskCanceledException" /> con un messaggio fornito dal sistema in cui viene descritto l'errore.</summary>
    </member>
    <member name="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.TaskCanceledException" /> con dati serializzati.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.TaskCanceledException" /> con un messaggio specificato in cui viene descritto l'errore.</summary>
      <param name="message">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.TaskCanceledException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception,System.Threading.CancellationToken)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.TaskCanceledException" /> con un messaggio di errore specificato, un riferimento all'eccezione interna che rappresenta la causa di questa eccezione e l'elemento <see cref="T:System.Threading.CancellationToken" /> che ha attivato annullamento.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente.</param>
      <param name="token">Token di annullamento che ha attivato l'annullamento.</param>
    </member>
    <member name="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.TaskCanceledException" /> con un riferimento all'oggetto <see cref="T:System.Threading.Tasks.Task" /> che è stato annullato.</summary>
      <param name="task">Attività che è stata annullata.</param>
    </member>
    <member name="P:System.Threading.Tasks.TaskCanceledException.Task">
      <summary>Ottiene l'attività associata a questa eccezione.</summary>
      <returns>Riferimento all'oggetto <see cref="T:System.Threading.Tasks.Task" /> associato a questa eccezione.</returns>
    </member>
    <member name="T:System.Threading.Tasks.TaskCompletionSource`1">
      <summary>Rappresenta il lato producer di un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> non associato a un delegato, fornendo l'accesso al lato consumer tramite la proprietà <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />.</summary>
      <typeparam name="TResult">Tipo del valore risultante associato a questo <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor">
      <summary>Crea un oggetto <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)">
      <summary>Crea un oggetto <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> con lo stato specificato.</summary>
      <param name="state">Stato da usare come AsyncState dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante.</param>
    </member>
    <member name="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <summary>Crea un oggetto <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> con lo stato e le opzioni specificate.</summary>
      <param name="state">Stato da usare come AsyncState dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante.</param>
      <param name="creationOptions">Opzioni da usare quando si crea l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationOptions" /> rappresenta le opzioni non valide per l'utilizzo con <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)">
      <summary>Crea un oggetto <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> con le opzioni specificate.</summary>
      <param name="creationOptions">Opzioni da usare quando si crea l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationOptions" /> rappresenta le opzioni non valide per l'utilizzo con <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.TaskCompletionSource`1.SetCanceled">
      <summary>Esegue la transizione dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante allo stato <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</summary>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante si trova già in uno dei tre stati finali: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> o <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />, se l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante è già stato eliminato.</exception>
      <exception cref="T:System.ObjectDisposedException">La proprietà <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})">
      <summary>Esegue la transizione dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante allo stato <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e associa all'oggetto una raccolta di eccezioni.</summary>
      <param name="exceptions">Raccolta di eccezioni da associare a questo oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</param>
      <exception cref="T:System.ObjectDisposedException">La proprietà <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore dell'argomento <paramref name="exceptions" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Uno o più elementi Null sono presenti in <paramref name="exceptions" />.</exception>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante è già in uno dei tre stati finali: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> o <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)">
      <summary>Esegue la transizione dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante allo stato <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e associa questo oggetto a un'eccezione specificata.</summary>
      <param name="exception">Eccezione da associare a questo oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</param>
      <exception cref="T:System.ObjectDisposedException">La proprietà <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore dell'argomento <paramref name="exception" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante è già in uno dei tre stati finali: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> o <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)">
      <summary>Esegue la transizione dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante allo stato <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />.</summary>
      <param name="result">Valore del risultato da associare a questo oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</param>
      <exception cref="T:System.ObjectDisposedException">La proprietà <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> è stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante è già in uno dei tre stati finali: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> o <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</exception>
    </member>
    <member name="P:System.Threading.Tasks.TaskCompletionSource`1.Task">
      <summary>Ottiene l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato da questo oggetto <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</summary>
      <returns>Restituisce l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato da questo oggetto <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled">
      <summary>Tenta di eseguire la transizione dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante allo stato <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</summary>
      <returns>
        <see langword="true" /> se l'operazione è stata completata; false se l'operazione non è stata completata o se l'oggetto è già stato eliminato.</returns>
      <exception cref="T:System.ObjectDisposedException">La proprietà <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)">
      <summary>Tenta di eseguire la transizione dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante allo stato <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> e abilita l'archiviazione di un token di annullamento nell'attività annullata.</summary>
      <param name="cancellationToken">Token di annullamento.</param>
      <returns>
        <see langword="true" /> se l'operazione riesce; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})">
      <summary>Tenta di eseguire la transizione dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante allo stato <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e associa a questo oggetto una raccolta di eccezioni.</summary>
      <param name="exceptions">Raccolta di eccezioni da associare a questo oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</param>
      <returns>
        <see langword="true" /> se l'operazione è stata completata correttamente; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">La proprietà <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore dell'argomento <paramref name="exceptions" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Uno o più elementi Null sono presenti in <paramref name="exceptions" />.
-oppure-
La raccolta <paramref name="exceptions" /> è vuota.</exception>
    </member>
    <member name="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)">
      <summary>Tenta di eseguire la transizione dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante allo stato <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e associa tale oggetto a un'eccezione specificata.</summary>
      <param name="exception">Eccezione da associare a questo oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</param>
      <returns>
        <see langword="true" /> se l'operazione è stata completata correttamente; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">La proprietà <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> è stata eliminata.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore dell'argomento <paramref name="exception" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)">
      <summary>Tenta di eseguire la transizione dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> sottostante allo stato <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />.</summary>
      <param name="result">Valore del risultato da associare a questo oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</param>
      <returns>
        <see langword="true" /> se l'operazione è stata completata correttamente; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">La proprietà <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> è stata eliminata.</exception>
    </member>
    <member name="T:System.Threading.Tasks.TaskExtensions">
      <summary>Fornisce un set di metodi statici (Shared in Visual Basic) per l'utilizzo di tipi specifici di istanze di <see cref="T:System.Threading.Tasks.Task" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task})">
      <summary>Crea un oggetto proxy <see cref="T:System.Threading.Tasks.Task" /> che rappresenta l'operazione asincrona di un oggetto <see cref="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" />.</summary>
      <param name="task">Oggetto <see langword="Task&lt;Task&gt;" /> (C#) o <see langword="Task (Of Task)" /> (Visual Basic) di cui annullare il wrapping.</param>
      <returns>Attività che rappresenta l'operazione asincrona dell'oggetto <see langword="System.Threading.Tasks.Task(Of Task)" /> fornito.</returns>
      <exception cref="T:System.ArgumentNullException">Eccezione generata se l'argomento <paramref name="task" /> è Null.</exception>
    </member>
    <member name="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})">
      <summary>Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> proxy che rappresenta l'operazione asincrona di un oggetto <see langword="Task&lt;Task&lt;T&gt;&gt;" /> (C#) o <see langword="Task (Of Task(Of T))" /> (Visual Basic).</summary>
      <param name="task">Oggetto <see langword="Task&lt;Task&lt;T&gt;&gt;" /> (C#) o <see langword="Task (Of Task(Of T))" /> (Visual Basic) di cui annullare il wrapping.</param>
      <typeparam name="TResult">Tipo di risultato dell'attività.</typeparam>
      <returns>Oggetto <see cref="T:System.Threading.Tasks.Task" /> che rappresenta l'operazione asincrona dell'oggetto <see langword="Task&lt;Task&lt;T&gt;&gt;" /> (C#) o <see langword="Task (Of Task(Of T))" /> (Visual Basic) fornito.</returns>
      <exception cref="T:System.ArgumentNullException">Eccezione generata se l'argomento <paramref name="task" /> è Null.</exception>
    </member>
    <member name="T:System.Threading.Tasks.TaskSchedulerException">
      <summary>Rappresenta un'eccezione utilizzata per comunicare un'operazione non valida eseguita da <see cref="T:System.Threading.Tasks.TaskScheduler" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.TaskSchedulerException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.TaskSchedulerException" /> con un messaggio fornito dal sistema in cui viene descritto l'errore.</summary>
    </member>
    <member name="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.TaskSchedulerException" /> utilizzando il messaggio di errore predefinito e un riferimento all'eccezione interna che è la causa di questa eccezione.</summary>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente.</param>
    </member>
    <member name="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.TaskSchedulerException" /> con dati serializzati.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.TaskSchedulerException" /> con un messaggio specificato in cui viene descritto l'errore.</summary>
      <param name="message">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.TaskSchedulerException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
  </members>
</doc>