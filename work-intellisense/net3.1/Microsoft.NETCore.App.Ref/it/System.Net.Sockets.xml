<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Sockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.Sockets.IOControlCode">
      <summary>Specifica i codici di controllo IO supportati dal metodo <see cref="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AbsorbRouterAlert">
      <summary>Questo valore è uguale alla costante SIO_ABSORB_RTRALERT di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface">
      <summary>Esegue l'unione a un gruppo multicast utilizzando un'interfaccia identificata dal proprio indice. Questo codice di controllo è supportato nel sistema operativo Windows 2000 e versioni successive. Questo valore è uguale alla costante SIO_INDEX_ADD_MCAST di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListChange">
      <summary>Consente di ricevere un avviso se l'elenco delle interfacce locali relative alla famiglia di protocolli del socket viene modificato. Questo codice di controllo è supportato nel sistema operativo Windows 2000 e versioni successive. Questo valore è uguale alla costante SIO_ADDRESS_LIST_CHANGE di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListQuery">
      <summary>Restituisce l'elenco delle interfacce locali a cui è possibile associare il socket. Questo codice di controllo è supportato nel sistema operativo Windows 2000 e versioni successive. Questo valore è uguale alla costante SIO_ADDRESS_LIST_QUERY di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListSort">
      <summary>Ordina la struttura restituita dal campo <see cref="F:System.Net.Sockets.IOControlCode.AddressListQuery" /> e aggiunge le informazioni sull'ID dell'ambito per gli indirizzi IPv6. Questo codice di controllo è supportato nel sistema operativo Windows XP e versioni successive. Questo valore è uguale alla costante SIO_ADDRESS_LIST_SORT di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AssociateHandle">
      <summary>Associa il socket all'handle specificato di un'interfaccia correlata. Per altre informazioni, nei riferimenti o nella documentazione di Winsock 2 relativa all'interfaccia correlata desiderata, fare riferimento all'allegato specifico del protocollo. Si consiglia di utilizzare il modello COM (Component Object Model) anziché IOCTL per identificare e registrare le eventuali altre interfacce supportate da un socket. Questo codice di controllo garantisce la compatibilità con le versioni precedenti di sistemi in cui il modello COM non è disponibile o non può essere utilizzato per altri motivi. Questo valore è uguale alla costante SIO_ASSOCIATE_HANDLE di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AsyncIO">
      <summary>Consente l'invio di un avviso quando i dati sono in attesa di essere ricevuti. Questo valore è uguale alla costante FIOASYNC di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.BindToInterface">
      <summary>Associa il socket all'indice di un'interfaccia specificato. Questo codice di controllo è supportato nel sistema operativo Windows 2000 e versioni successive. Questo valore è uguale alla costante SIO_INDEX_BIND di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DataToRead">
      <summary>Restituisce il numero di byte disponibili per la lettura. Questo valore è uguale alla costante FIONREAD di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface">
      <summary>Rimuove il socket da un gruppo multicast. Questo codice di controllo è supportato nel sistema operativo Windows 2000 e versioni successive. Questo valore è uguale alla costante SIO_INDEX_ADD_MCAST di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.EnableCircularQueuing">
      <summary>Sostituisce il datagramma in coda da più tempo con un datagramma in arrivo se le code dei messaggi in arrivo sono piene. Questo valore è uguale alla costante SIO_ENABLE_CIRCULAR_QUEUEING di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.Flush">
      <summary>Elimina il contenuto della coda di invio. Questo valore è uguale alla costante SIO_FLUSH di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetBroadcastAddress">
      <summary>Restituisce una struttura SOCKADDR contenente l'indirizzo broadcast relativo alla famiglia di indirizzi del socket corrente. L'indirizzo restituito può essere utilizzato con il metodo <see cref="Overload:System.Net.Sockets.Socket.SendTo" />. Questo valore è uguale alla costante SIO_GET_BROADCAST_ADDRESS di Winsock 2. Questo valore può essere utilizzato solo in socket UDP (User Datagram Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer">
      <summary>Ottiene le funzioni specifiche del provider non incluse nella specifica Winsock. Le funzioni vengono specificate tramite il GUID assegnato dal provider. Questo valore è uguale alla costante SIO_GET_EXTENSION_FUNCTION_POINTER di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetGroupQos">
      <summary>Restituisce gli attributi della qualità di servizio (QOS) per il gruppo di socket. Questo valore è riservato per un uso futuro ed è uguale alla costante SIO_GET_GROUP_QOS di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetQos">
      <summary>Recupera la struttura QOS associata al socket. Questo controllo è supportato solo sulle piattaforme che dispongono di un trasporto con funzionalità QOS (Windows Me, Windows 2000 e versioni successive). Questo valore è uguale alla costante SIO_GET_QOS di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.KeepAliveValues">
      <summary>Controllo che invia pacchetti keep-alive TCP e l'intervallo con il quale vengono inviati. Questo codice di controllo è supportato nel sistema operativo Windows 2000 e versioni successive. Per ulteriori informazioni, vedere RFC 1122 sezione 4.2.3.6. Questo valore è uguale alla costante SIO_KEEPALIVE_VALS di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.LimitBroadcasts">
      <summary>Questo valore è uguale alla costante SIO_LIMIT_BROADCASTS di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastInterface">
      <summary>Imposta l'interfaccia utilizzata per i pacchetti multicast in uscita. L'interfaccia è identificata dal relativo indice. Questo codice di controllo è supportato nel sistema operativo Windows 2000 e versioni successive.  Questo valore è uguale alla costante SIO_INDEX_MCASTIF di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastScope">
      <summary>Controlla il numero di volte per il quale un pacchetto multicast può essere inoltrato da un router. È noto anche come durata (TTL) o numero di hop. Questo valore è uguale alla costante SIO_MULTICAST_SCOPE di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MultipointLoopback">
      <summary>Controlla se i dati multicast inviati dal socket vengono considerati dati in arrivo nella coda di ricezione del socket. Questo valore è uguale alla costante SIO_MULTIPOINT_LOOPBACK di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NamespaceChange">
      <summary>Controlla se il socket riceve un avviso quando la query di uno spazio dei nomi non è più valida. Questo codice di controllo è supportato nel sistema operativo Windows XP e versioni successive. Questo valore è uguale alla costante SIO_NSP_NOTIFY_CHANGE di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NonBlockingIO">
      <summary>Controlla il comportamento bloccante del socket. Se l'argomento specificato con questo controllo è zero, il socket viene impostato in modalità di blocco. Se l'argomento è diverso da zero, il socket viene impostato in modalità non di blocco. Questo valore è uguale alla costante FIONBIO di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.OobDataRead">
      <summary>Restituisce le informazioni sui dati fuori banda in attesa di essere ricevuti. Quando si utilizza questo codice di controllo nei socket di flusso, il valore restituito indica il numero di byte disponibili.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.QueryTargetPnpHandle">
      <summary>Recupera l'handle SOCKET del provider sottostante. L'handle può essere utilizzato per ricevere la notifica di eventi Plug and Play. Questo codice di controllo è supportato nel sistema operativo Windows 2000 e versioni successive. Questo valore è uguale alla costante SIO_QUERY_TARGET_PNP_HANDLE di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAll">
      <summary>Consente di ricevere tutti i pacchetti IPv4 sulla rete. Il socket deve avere la famiglia di indirizzi <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, il socket deve essere di tipo <see cref="F:System.Net.Sockets.SocketType.Raw" />, mentre il protocollo deve essere di tipo <see cref="F:System.Net.Sockets.ProtocolType.IP" />. L'utente corrente deve appartenere al gruppo Administrators del computer locale e il socket deve essere associato a una porta specifica. Questo codice di controllo è supportato nel sistema operativo Windows 2000 e versioni successive. Questo valore è uguale alla costante SIO_RCVALL di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast">
      <summary>Consente di ricevere tutti i pacchetti IGMP (Internet Group Management Protocol) sulla rete. Il socket deve avere la famiglia di indirizzi <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, il socket deve essere di tipo <see cref="F:System.Net.Sockets.SocketType.Raw" />, mentre il protocollo deve essere di tipo <see cref="F:System.Net.Sockets.ProtocolType.Igmp" />. L'utente corrente deve appartenere al gruppo Administrators del computer locale e il socket deve essere associato a una porta specifica. Questo codice di controllo è supportato nel sistema operativo Windows 2000 e versioni successive. Questo valore è uguale alla costante SIO_RCVALL_IGMPMCAST di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllMulticast">
      <summary>Consente di ricevere tutti i pacchetti IPv4 multicast sulla rete. Gli indirizzi di destinazione di questi pacchetti sono compresi nell'intervallo da 224.0.0.0 a 239.255.255.255. Il socket deve avere la famiglia di indirizzi <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, il socket deve essere di tipo <see cref="F:System.Net.Sockets.SocketType.Raw" />, mentre il protocollo deve essere di tipo <see cref="F:System.Net.Sockets.ProtocolType.Udp" />. L'utente corrente deve appartenere al gruppo Administrators del computer locale e il socket deve essere associato a una porta specifica. Questo codice di controllo è supportato nel sistema operativo Windows 2000 e versioni successive. Questo valore è uguale alla costante SIO_RCVALL_MCAST di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceChange">
      <summary>Consente di ricevere un avviso se l'interfaccia locale utilizzata per accedere a un endpoint remoto viene modificata. Questo valore è uguale alla costante SIO_ROUTING_INTERFACE_CHANGE di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceQuery">
      <summary>Restituisce gli indirizzi dell'interfaccia che è possibile utilizzare per la connessione all'indirizzo remoto specificato. Questo valore è uguale alla costante SIO_ROUTING_INTERFACE_QUERY di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetGroupQos">
      <summary>Imposta gli attributi della qualità di servizio (QOS) per il gruppo di socket. Questo valore è riservato per un uso futuro ed è uguale alla costante SIO_SET_GROUP_QOS di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetQos">
      <summary>Imposta gli attributi della qualità di servizio (QOS) per il socket. La qualità di servizio definisce i requisiti di larghezza di banda per il socket. Questo codice di controllo è supportato nei sistemi operativi Windows Me, Windows 2000 e versioni successive. Questo valore è uguale alla costante SIO_SET_QOS di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.TranslateHandle">
      <summary>Restituisce un handle per il socket valido nel contesto di un'interfaccia correlata. Questo valore è uguale alla costante SIO_TRANSLATE_HANDLE di Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.UnicastInterface">
      <summary>Imposta l'interfaccia utilizzata per i pacchetti unicast in uscita. Questo valore è uguale alla costante SIO_UCAST_IF di Winsock 2.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPPacketInformation">
      <summary>Riporta le informazioni sui pacchetti restituite da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> o <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Address">
      <summary>Ottiene le informazioni sull'origine del pacchetto ricevuto in seguito alla chiamata al metodo <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> o al metodo <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
      <returns>Classe <see cref="T:System.Net.IPAddress" /> indicante le informazioni sull'origine del pacchetto ricevuto in seguito alla chiamata al metodo <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> o al metodo <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />. Nel caso di pacchetti inviati da un indirizzo unicast, la proprietà <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> restituirà la classe <see cref="T:System.Net.IPAddress" /> del mittente; per i pacchetti broadcast o multicast, la proprietà <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> restituirà la classe <see cref="T:System.Net.IPAddress" /> multicast o broadcast.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="comparand">Oggetto da confrontare con questa istanza.</param>
      <returns>
        <see langword="true" /> se <paramref name="comparand" /> è un'istanza di una struttura <see cref="T:System.Net.Sockets.IPPacketInformation" /> ed è uguale al valore dell'istanza; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash Int32.</returns>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Interface">
      <summary>Ottiene le informazioni sull'interfaccia di rete associate a una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> o <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
      <returns>Valore <see cref="T:System.Int32" /> che rappresenta l'indice dell'interfaccia di rete. Questo indice può essere utilizzato con il metodo <see cref="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" /> per ottenere ulteriori informazioni sull'interfaccia corrispondente.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>Verifica se due istanze di <see cref="T:System.Net.Sockets.IPPacketInformation" /> specificate sono equivalenti.</summary>
      <param name="packetInformation1">Istanza della struttura <see cref="T:System.Net.Sockets.IPPacketInformation" /> a sinistra dell'operatore di uguaglianza.</param>
      <param name="packetInformation2">Istanza della struttura <see cref="T:System.Net.Sockets.IPPacketInformation" /> a destra dell'operatore di uguaglianza.</param>
      <returns>
        <see langword="true" /> se <paramref name="packetInformation1" /> e <paramref name="packetInformation2" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>Verifica se due istanze specificate della struttura <see cref="T:System.Net.Sockets.IPPacketInformation" /> non sono uguali.</summary>
      <param name="packetInformation1">Istanza di <see cref="T:System.Net.Sockets.IPPacketInformation" /> a sinistra dell'operatore di disuguaglianza.</param>
      <param name="packetInformation2">Istanza della struttura <see cref="T:System.Net.Sockets.IPPacketInformation" /> a destra dell'operatore di disuguaglianza.</param>
      <returns>
        <see langword="true" /> se <paramref name="packetInformation1" /> e <paramref name="packetInformation2" /> sono diversi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.IPProtectionLevel">
      <summary>Valore che abilita la restrizione di un socket IPv6 in un ambito specificato, ad esempio indirizzi con lo stesso prefisso locale rispetto al sito o al collegamento.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.EdgeRestricted">
      <summary>Il livello di protezione IP è limitato dal perimetro. Questo valore verrebbe utilizzato dalle applicazioni progettate per operare in Internet. Questa impostazione non consente l'attraversamento NAT (Network Address Translation) tramite l'implementazione di Windows Teredo. Tali applicazioni possono aggirare i firewall IPv4 e pertanto le applicazioni devono essere protette contro gli attacchi provenienti da Internet diretti alla porta aperta. In Windows Server 2003 e in Windows XP, il valore predefinito per il livello di protezione IP in un socket è limitato dal perimetro.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Restricted">
      <summary>Il livello di protezione IP è limitato. Questo valore verrebbe utilizzato da applicazioni Intranet che non implementano scenari Internet. Queste applicazioni non sono in genere testate o protette da attacchi analoghi a quelli provenienti da Internet. Questa impostazione limiterà il traffico ricevuto solo a quello locale rispetto al collegamento.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unrestricted">
      <summary>Il livello di protezione IP è illimitato. Questo valore verrebbe utilizzato dalle applicazioni progettate per operare in Internet, incluse la applicazioni che usufruiscono delle funzionalità di attraversamento NAT IPv6 compilate in Windows (ad esempio, Teredo). Tali applicazioni possono aggirare i firewall IPv4 e pertanto le applicazioni devono essere protette contro gli attacchi provenienti da Internet diretti alla porta aperta. In Windows Server 2008 R2 e in Windows Vista, il valore predefinito per il livello di protezione IP in un socket è illimitato.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unspecified">
      <summary>Il livello di protezione IP non è specificato. In Windows 7 e in Windows Server 2008 R2, il valore predefinito per il livello di protezione IP in un socket non è specificato.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPv6MulticastOption">
      <summary>Contiene valori di opzione per l'unione a un gruppo multicast IPv6.</summary>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>Inizializza una nuova versione della classe <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> per il gruppo IP multicast specificato.</summary>
      <param name="group">
        <see cref="T:System.Net.IPAddress" /> del gruppo multicast.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> con l'indirizzo IP del gruppo multicast e l'indirizzo dell'interfaccia locale specificati.</summary>
      <param name="group">Gruppo <see cref="T:System.Net.IPAddress" />.</param>
      <param name="ifindex">Indirizzo dell'interfaccia locale.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ifindex" /> è minore di 0.
-oppure-
<paramref name="ifindex" /> è maggiore di 0x00000000FFFFFFFF.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.Group">
      <summary>Ottiene o imposta l'indirizzo IP di un gruppo multicast.</summary>
      <returns>
        <see cref="T:System.Net.IPAddress" /> contenente l'indirizzo Internet di un gruppo multicast.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.InterfaceIndex">
      <summary>Ottiene o imposta l'indice dell'interfaccia associato a un gruppo multicast.</summary>
      <returns>Valore <see cref="T:System.UInt64" /> che specifica l'indirizzo dell'interfaccia.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato per un'operazione impostata è minore di 0 o maggiore di 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="T:System.Net.Sockets.LingerOption">
      <summary>Specifica se un oggetto <see cref="T:System.Net.Sockets.Socket" /> resterà connesso dopo una chiamata ai metodi <see cref="M:System.Net.Sockets.Socket.Close" /> o <see cref="M:System.Net.Sockets.TcpClient.Close" /> e il periodo di tempo che resterà connesso, se restano dati da inviare.</summary>
    </member>
    <member name="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.LingerOption" />.</summary>
      <param name="enable">
        <see langword="true" /> per mantenere la connessione dopo la chiamata del metodo <see cref="M:System.Net.Sockets.Socket.Close" />, in caso contrario <see langword="false" />.</param>
      <param name="seconds">Numero di secondi di permanenza della connessione dopo la chiamata del metodo <see cref="M:System.Net.Sockets.Socket.Close" />.</param>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.Enabled">
      <summary>Ottiene o imposta un valore che indica se attivare un ritardo dopo la chiusura del <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>
        <see langword="true" /> se deve essere generato un ritardo per il <see cref="T:System.Net.Sockets.Socket" /> dopo la chiamata a <see cref="M:System.Net.Sockets.Socket.Close" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.LingerTime">
      <summary>Ottiene o imposta il periodo di tempo durante il quale la connessione deve restare attiva dopo la chiamata del metodo <see cref="M:System.Net.Sockets.Socket.Close" /> se restano dati da inviare.</summary>
      <returns>Tempo di permanenza della connessione, espresso in secondi, dopo la chiamata a <see cref="M:System.Net.Sockets.Socket.Close" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.MulticastOption">
      <summary>Contiene valori <see cref="T:System.Net.IPAddress" /> utilizzati per l'unione e il rilascio dei gruppi multicast.</summary>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>Inizializza una nuova versione della classe <see cref="T:System.Net.Sockets.MulticastOption" /> per il gruppo IP multicast specificato.</summary>
      <param name="group">
        <see cref="T:System.Net.IPAddress" /> del gruppo multicast.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.MulticastOption" /> con l'indirizzo IP del gruppo multicast e l'indice dell'interfaccia specificati.</summary>
      <param name="group">
        <see cref="T:System.Net.IPAddress" /> del gruppo multicast.</param>
      <param name="interfaceIndex">Indice dell'interfaccia utilizzato per l'invio e la ricezione di pacchetti multicast.</param>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.MulticastOption" /> con l'indirizzo IP del gruppo multicast e l'indirizzo IP locale specificati associati a un'interfaccia di rete.</summary>
      <param name="group">Gruppo <see cref="T:System.Net.IPAddress" />.</param>
      <param name="mcint">Classe <see cref="T:System.Net.IPAddress" /> locale.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> è <see langword="null" />.
-oppure-
<paramref name="mcint" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.Group">
      <summary>Ottiene o imposta l'indirizzo IP di un gruppo multicast.</summary>
      <returns>
        <see cref="T:System.Net.IPAddress" /> contenente l'indirizzo Internet di un gruppo multicast.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.InterfaceIndex">
      <summary>Ottiene o imposta l'indice dell'interfaccia utilizzato per l'invio e la ricezione di pacchetti multicast.</summary>
      <returns>Un intero che rappresenta l'indice di un elemento della matrice <see cref="T:System.Net.NetworkInformation.NetworkInterface" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.LocalAddress">
      <summary>Ottiene o imposta l'indirizzo locale associato a un gruppo multicast.</summary>
      <returns>
        <see cref="T:System.Net.IPAddress" /> contenente l'indirizzo locale associato a un gruppo multicast.</returns>
    </member>
    <member name="T:System.Net.Sockets.NetworkStream">
      <summary>Offre il flusso sottostante di dati per l'accesso alla rete.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Sockets.NetworkStream" /> per l'oggetto <see cref="T:System.Net.Sockets.Socket" /> specificato.</summary>
      <param name="socket">
        <see cref="T:System.Net.Sockets.Socket" /> utilizzato dalla classe <see cref="T:System.Net.Sockets.NetworkStream" /> per inviare e ricevere dati.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="socket" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Il parametro <paramref name="socket" /> non è connesso.
-oppure-
La proprietà <see cref="P:System.Net.Sockets.Socket.SocketType" /> del parametro <paramref name="socket" /> non è <see cref="F:System.Net.Sockets.SocketType.Stream" />.
-oppure-
Il parametro <paramref name="socket" /> è in uno stato non di blocco.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.NetworkStream" /> per il <see cref="T:System.Net.Sockets.Socket" /> specificato con la proprietà <see cref="T:System.Net.Sockets.Socket" /> specificata.</summary>
      <param name="socket">
        <see cref="T:System.Net.Sockets.Socket" /> utilizzato dalla classe <see cref="T:System.Net.Sockets.NetworkStream" /> per inviare e ricevere dati.</param>
      <param name="ownsSocket">
        <see langword="true" /> per indicare che <see cref="T:System.Net.Sockets.NetworkStream" /> assumerà la proprietà dell'oggetto <see cref="T:System.Net.Sockets.Socket" />. In caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="socket" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Il parametro <paramref name="socket" /> non è connesso.
-oppure-
Il valore della proprietà <see cref="P:System.Net.Sockets.Socket.SocketType" /> del parametro <paramref name="socket" /> non è <see cref="F:System.Net.Sockets.SocketType.Stream" />.
-oppure-
Il parametro <paramref name="socket" /> è in uno stato non di blocco.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Sockets.NetworkStream" /> per l'oggetto <see cref="T:System.Net.Sockets.Socket" /> specificato con i diritti di accesso specificati.</summary>
      <param name="socket">
        <see cref="T:System.Net.Sockets.Socket" /> utilizzato dalla classe <see cref="T:System.Net.Sockets.NetworkStream" /> per inviare e ricevere dati.</param>
      <param name="access">Combinazione bit per bit dei valori <see cref="T:System.IO.FileAccess" /> che specifica il tipo di accesso assegnato alla classe <see cref="T:System.Net.Sockets.NetworkStream" /> per il <see cref="T:System.Net.Sockets.Socket" /> fornito.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="socket" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Il parametro <paramref name="socket" /> non è connesso.
-oppure-
La proprietà <see cref="P:System.Net.Sockets.Socket.SocketType" /> del parametro <paramref name="socket" /> non è <see cref="F:System.Net.Sockets.SocketType.Stream" />.
-oppure-
Il parametro <paramref name="socket" /> è in uno stato non di blocco.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Net.Sockets.NetworkStream" /> per l'oggetto <see cref="T:System.Net.Sockets.Socket" /> specificato con i diritti di accesso e la appartenenza alla classe <see cref="T:System.Net.Sockets.Socket" /> specificati.</summary>
      <param name="socket">
        <see cref="T:System.Net.Sockets.Socket" /> utilizzato dalla classe <see cref="T:System.Net.Sockets.NetworkStream" /> per inviare e ricevere dati.</param>
      <param name="access">Combinazione bit per bit dei valori <see cref="T:System.IO.FileAccess" /> che specifica il tipo di accesso assegnato alla classe <see cref="T:System.Net.Sockets.NetworkStream" /> per il <see cref="T:System.Net.Sockets.Socket" /> fornito.</param>
      <param name="ownsSocket">
        <see langword="true" /> per indicare che <see cref="T:System.Net.Sockets.NetworkStream" /> assumerà la proprietà dell'oggetto <see cref="T:System.Net.Sockets.Socket" />. In caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="socket" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Il parametro <paramref name="socket" /> non è connesso.
-oppure-
La proprietà <see cref="P:System.Net.Sockets.Socket.SocketType" /> del parametro <paramref name="socket" /> non è <see cref="F:System.Net.Sockets.SocketType.Stream" />.
-oppure-
Il parametro <paramref name="socket" /> è in uno stato non di blocco.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Avvia una lettura asincrona dalla classe <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che corrisponde alla posizione in memoria in cui archiviare i dati dalla classe <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset">Posizione in <paramref name="buffer" /> da cui avviare l'archiviazione dei dati.</param>
      <param name="size">Numero di byte da leggere dalla classe <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="callback">Il delegato <see cref="T:System.AsyncCallback" /> eseguito dopo il completamento del metodo <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</param>
      <param name="state">Oggetto che contiene i dati aggiuntivi definiti dall'utente.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che rappresenta la chiamata asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="offset" /> è minore di 0.
-oppure-
Il parametro <paramref name="offset" /> è maggiore della lunghezza del parametro <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" />.</exception>
      <exception cref="T:System.IO.IOException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è chiuso.
-oppure-
Si è verificato un errore durante la lettura dalla rete.
-oppure-
Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Avvia una scrittura asincrona in un flusso.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che contiene i dati da scrivere nella classe <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset">Posizione in <paramref name="buffer" /> da cui avviare l'invio dei dati.</param>
      <param name="size">Numero di byte da scrivere nella classe <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="callback">Il delegato <see cref="T:System.AsyncCallback" /> eseguito dopo il completamento del metodo <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</param>
      <param name="state">Oggetto che contiene i dati aggiuntivi definiti dall'utente.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che rappresenta la chiamata asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="offset" /> è minore di 0.
-oppure-
Il parametro <paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
Il parametro <paramref name="size" /> è minore di 0.
-oppure-
Il parametro <paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" />.</exception>
      <exception cref="T:System.IO.IOException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è chiuso.
-oppure-
Si è verificato un errore durante la scrittura nella rete.
-oppure-
Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanRead">
      <summary>Ottiene un valore che indica se la classe <see cref="T:System.Net.Sockets.NetworkStream" /> supporta la lettura.</summary>
      <returns>
        <see langword="true" /> se i dati possono essere letti dal flusso, in caso contrario <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanSeek">
      <summary>Ottiene un valore che indica se il flusso supporta la ricerca. Questa proprietà non è attualmente supportata. La proprietà restituisce sempre <see langword="false" />.</summary>
      <returns>
        <see langword="false" /> in tutti i casi per indicare che <see cref="T:System.Net.Sockets.NetworkStream" /> non può cercare una posizione specifica nel flusso.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanTimeout">
      <summary>Indica se le proprietà di timeout sono utilizzabili per <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <returns>
        <see langword="true" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanWrite">
      <summary>Ottiene un valore che indica se la classe <see cref="T:System.Net.Sockets.NetworkStream" /> supporta la scrittura.</summary>
      <returns>
        <see langword="true" /> se i dati possono essere scritti nella classe <see cref="T:System.Net.Sockets.NetworkStream" />, in caso contrario <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Close(System.Int32)">
      <summary>Chiude l'oggetto <see cref="T:System.Net.Sockets.NetworkStream" /> una volta trascorso l'intervallo di tempo specificato per consentire l'invio dei dati.</summary>
      <param name="timeout">Signed Integer a 32 bit che specifica il numero di millisecondi di attesa per l'invio dei restanti dati prima della chiusura.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="timeout" /> è minore di -1.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.DataAvailable">
      <summary>Ottiene un valore che indica se i dati sono disponibili per la lettura nella classe <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <returns>
        <see langword="true" /> se i dati sono disponibili per la lettura nel flusso, in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Usare la proprietà <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> per ottenere il codice di errore specifico e fare riferimento alla documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 per una descrizione dettagliata dell'errore.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Sockets.NetworkStream" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)">
      <summary>Gestisce la fine di una lettura asincrona.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che rappresenta una chiamata asincrona.</param>
      <returns>Numero di byte letti dalla classe <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.ArgumentException">Il valore del parametro <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è chiuso.
-oppure-
Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)">
      <summary>Gestisce la fine di una scrittura asincrona.</summary>
      <param name="asyncResult">L'oggetto <see cref="T:System.IAsyncResult" /> che rappresenta la chiamata asincrona.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è chiuso.
-oppure-
Si è verificato un errore durante la scrittura nella rete.
-oppure-
Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Finalize">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Flush">
      <summary>Scarica dati da un flusso. Questo metodo è riservato per utilizzi futuri.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Svuota i dati dal flusso come operazione asincrona.</summary>
      <param name="cancellationToken">Token di annullamento usato per propagare la notifica che indica che l'operazione deve essere annullata.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Length">
      <summary>Ottiene la lunghezza dei dati disponibili nel flusso. Questa proprietà non è attualmente supportata e genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Lunghezza dei dati disponibili nel flusso.</returns>
      <exception cref="T:System.NotSupportedException">Qualsiasi utilizzo di questa proprietà.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Position">
      <summary>Ottiene o imposta la posizione corrente nel flusso. Questa proprietà non è attualmente supportata e genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Posizione corrente all'interno del flusso.</returns>
      <exception cref="T:System.NotSupportedException">Qualsiasi utilizzo di questa proprietà.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Legge i dati da <see cref="T:System.Net.Sockets.NetworkStream" /> e li archivia in una matrice di byte.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che corrisponde alla posizione in memoria in cui archiviare i dati dalla classe <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset">Posizione in <paramref name="buffer" /> in cui avviare l'archiviazione dei dati.</param>
      <param name="size">Numero di byte da leggere dalla classe <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <returns>Numero di byte letti dalla classe <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" />, meno <paramref name="offset" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> non supporta la lettura.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore durante l'accesso al socket.
-oppure-
Si è verificato un errore durante la lettura dalla rete.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Span{System.Byte})">
      <summary>Legge i dati da <see cref="T:System.Net.Sockets.NetworkStream" /> e li archivia in un intervallo di byte in memoria.</summary>
      <param name="buffer">Area di memoria in cui archiviare i dati letti da <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <returns>Numero di byte letti dalla classe <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> non supporta la lettura.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore durante l'accesso al socket.
-oppure-
Si è verificato un errore durante la lettura dalla rete.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Readable">
      <summary>Ottiene o imposta un valore che indica se è possibile leggere la classe <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <returns>
        <see langword="true" /> per indicare che la classe <see cref="T:System.Net.Sockets.NetworkStream" /> può essere letta, in caso contrario <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Legge i dati da <see cref="T:System.Net.Sockets.NetworkStream" /> e li archivia in un intervallo specificato di una matrice di byte come operazione asincrona.</summary>
      <param name="buffer">Buffer in cui scrivere i dati.</param>
      <param name="offset">Posizione in <paramref name="buffer" /> in cui avviare l'archiviazione dei dati.</param>
      <param name="size">Numero di byte da leggere dalla classe <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore della proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> contiene il numero totale di byte letti in <paramref name="buffer" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> non supporta la lettura.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore durante l'accesso al socket.
-oppure-
Si è verificato un errore durante la lettura dalla rete.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Legge i dati da <see cref="T:System.Net.Sockets.NetworkStream" /> e li archivia in un intervallo di memoria di byte come operazione asincrona.</summary>
      <param name="buffer">Buffer in cui scrivere i dati.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.ValueTask`1" /> che rappresenta l'operazione di lettura asincrona. Il valore della proprietà <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> contiene il numero totale di byte letti in <paramref name="buffer" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> non supporta la lettura.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore durante l'accesso al socket.
-oppure-
Si è verificato un errore durante la lettura dalla rete.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadByte">
      <summary>Legge un byte da <see cref="T:System.Net.Sockets.NetworkStream" /> e sposta in avanti la posizione corrente all'interno del flusso di un byte o restituisce -1 se si trova alla fine del flusso.</summary>
      <returns>Cast di byte senza segno in un parametro <see langword="Int32" /> oppure -1 se si trova alla fine del flusso.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> non supporta la lettura.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore durante l'accesso al socket.
-oppure-
Si è verificato un errore durante la lettura dalla rete.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.ReadTimeout">
      <summary>Ottiene o imposta l'intervallo di tempo per il quale un'operazione di lettura si blocca in attesa dei dati.</summary>
      <returns>Valore <see cref="T:System.Int32" /> che specifica l'intervallo di tempo, in millisecondi, che deve trascorrere prima che l'operazione di lettura generi un errore. Il valore predefinito, <see cref="F:System.Threading.Timeout.Infinite" />, specifica che non è previsto un timeout per l'operazione di lettura.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato è minore o uguale a zero e non rappresenta il campo <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Imposta la posizione corrente del flusso sul valore dato. Questo metodo non è attualmente supportato e genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="offset">Questo parametro non viene usato.</param>
      <param name="origin">Questo parametro non viene usato.</param>
      <returns>La posizione all'interno del flusso.</returns>
      <exception cref="T:System.NotSupportedException">Qualsiasi utilizzo di questa proprietà.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)">
      <summary>Imposta la lunghezza del flusso. Mediante questo metodo viene sempre generata un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Questo parametro non viene usato.</param>
      <exception cref="T:System.NotSupportedException">Qualsiasi utilizzo di questa proprietà.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Socket">
      <summary>Ottiene l'elemento <see cref="T:System.Net.Sockets.Socket" /> sottostante.</summary>
      <returns>Oggetto <see cref="T:System.Net.Sockets.Socket" /> che rappresenta la connessione di rete sottostante.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Scrive i dati in <see cref="T:System.Net.Sockets.NetworkStream" /> da un intervallo specificato di una matrice di byte.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che contiene i dati da scrivere nella classe <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset">Posizione nel <paramref name="buffer" /> da cui avviare la scrittura dei dati.</param>
      <param name="size">Numero di byte da scrivere nella classe <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="offset" /> è minore di 0.
-oppure-
Il parametro <paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
Il parametro <paramref name="size" /> è minore di 0.
-oppure-
Il parametro <paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> non supporta la scrittura.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore durante l'accesso al socket.
-oppure-
Si è verificato un errore durante la scrittura nella rete.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Scrive i dati in <see cref="T:System.Net.Sockets.NetworkStream" /> da un intervallo di byte di sola lettura.</summary>
      <param name="buffer">Dati da scrivere in <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> non supporta la scrittura.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore durante l'accesso al socket.
-oppure-
Si è verificato un errore durante la scrittura nella rete.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Writeable">
      <summary>Ottiene un valore che indica se è possibile scrivere nella classe <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <returns>
        <see langword="true" /> se i dati possono essere scritti nel flusso, in caso contrario <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Scrive i dati in <see cref="T:System.Net.Sockets.NetworkStream" /> dall'intervallo specificato di una matrice di byte come operazione asincrona.</summary>
      <param name="buffer">Matrice di byte che contiene i dati da scrivere in <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset">Posizione nel <paramref name="buffer" /> da cui avviare la scrittura dei dati.</param>
      <param name="size">Numero di byte da scrivere nella classe <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="offset" /> è minore di 0.
-oppure-
Il parametro <paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
Il parametro <paramref name="size" /> è minore di 0.
-oppure-
Il parametro <paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> non supporta la scrittura.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore durante la scrittura nella rete.
-oppure-
Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Scrive i dati in <see cref="T:System.Net.Sockets.NetworkStream" /> da un intervallo di memoria di byte di sola lettura come operazione asincrona.</summary>
      <param name="buffer">Area di memoria che contiene i dati da scrivere in <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> non supporta la scrittura.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore durante l'accesso al socket.
-oppure-
Si è verificato un errore durante la scrittura nella rete.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteByte(System.Byte)">
      <summary>Scrive un byte nella posizione corrente di <see cref="T:System.Net.Sockets.NetworkStream" /> e sposta in avanti di un byte la posizione nel flusso.</summary>
      <param name="value">Byte da scrivere nel flusso.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> non supporta la scrittura.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore durante l'accesso al socket.
-oppure-
Si è verificato un errore durante la scrittura nella rete.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> è chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.WriteTimeout">
      <summary>Ottiene o imposta l'intervallo di tempo per il quale un'operazione di scrittura si blocca in attesa dei dati.</summary>
      <returns>Valore <see cref="T:System.Int32" /> che specifica l'intervallo di tempo, in millisecondi, che deve trascorrere prima che l'operazione di scrittura generi un errore. Il valore predefinito, <see cref="F:System.Threading.Timeout.Infinite" />, specifica che non è previsto un timeout per l'operazione di scrittura.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato è minore o uguale a zero e non rappresenta il campo <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="T:System.Net.Sockets.ProtocolFamily">
      <summary>Specifica il tipo di protocollo utilizzabile da un'istanza della classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.AppleTalk">
      <summary>Protocollo AppleTalk.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Atm">
      <summary>Protocollo dei servizi ATM nativi.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Banyan">
      <summary>Protocollo Banyan.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ccitt">
      <summary>Protocollo CCITT, ad esempio X.25.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Chaos">
      <summary>Protocollo MIT CHAOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Cluster">
      <summary>Protocollo per prodotti Microsoft Cluster.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ControllerAreaNetwork">
      <summary>Protocollo di rete dell'area del controller.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataKit">
      <summary>Protocollo DataKit.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataLink">
      <summary>Protocollo a collegamento dati diretto.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DecNet">
      <summary>Protocollo DECNet.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ecma">
      <summary>Protocollo ECMA (European Computer Manufacturers Association).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.FireFox">
      <summary>Protocollo FireFox.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.HyperChannel">
      <summary>Protocollo NSC Hyperchannel.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ieee12844">
      <summary>Protocollo per gruppo di lavoro IEEE 1284.4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ImpLink">
      <summary>Protocollo ARPANET IMP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetwork">
      <summary>Protocollo IP versione 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetworkV6">
      <summary>Protocollo IP versione 6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ipx">
      <summary>Protocollo IPX o SPX.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Irda">
      <summary>Protocollo IrDA.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Iso">
      <summary>Protocollo ISO.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Lat">
      <summary>Protocollo LAT.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Max">
      <summary>Protocollo MAX.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetBios">
      <summary>Protocollo NetBIOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetworkDesigners">
      <summary>Protocollo con funzionalità di gateway OSI Network Designers.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NS">
      <summary>Protocollo NS Xerox.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Osi">
      <summary>Protocollo OSI.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Packet">
      <summary>Protocollo per pacchetti di basso livello.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Pup">
      <summary>Protocollo PUP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Sna">
      <summary>Protocollo SNA IBM.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unix">
      <summary>Protocollo Unix da locale a host.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unknown">
      <summary>Protocollo sconosciuto.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unspecified">
      <summary>Protocollo non specificato.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.VoiceView">
      <summary>Protocollo VoiceView.</summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary>Specifica il protocollo supportato dalla classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ggp">
      <summary>Protocollo Gateway To Gateway.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Icmp">
      <summary>Protocollo ICMP (Internet Control Message Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IcmpV6">
      <summary>Protocollo ICMP (Internet Control Message Protocol) per IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Idp">
      <summary>Protocollo Internet Datagram.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Igmp">
      <summary>Protocollo IGMP (Internet Group Management Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IP">
      <summary>Protocollo IP (Internet Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecAuthenticationHeader">
      <summary>Intestazione di autenticazione IPv6. Per informazioni dettagliate vedere il documento RFC 2292 sezione 2.2.1, disponibile all'indirizzo https://www.ietf.org.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecEncapsulatingSecurityPayload">
      <summary>Intestazione ESP (Encapsulating Security Payload) IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv4">
      <summary>Protocollo IP versione 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6">
      <summary>Protocollo IP versione 6 (IPv6).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6DestinationOptions">
      <summary>Intestazione Destination Options IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6FragmentHeader">
      <summary>Intestazione Fragment IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6HopByHopOptions">
      <summary>Intestazione Hop by Hop Options IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6NoNextHeader">
      <summary>Intestazione No Next IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6RoutingHeader">
      <summary>Intestazione Routing IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ipx">
      <summary>Protocollo IPX (Internet Packet Exchange).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.ND">
      <summary>Protocollo Net Disk (non ufficiale).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Pup">
      <summary>Protocollo PUP (PARC Universal Packet).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Raw">
      <summary>Protocollo per pacchetti IP non elaborati.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Spx">
      <summary>Protocollo SPX (Sequenced Packet Exchange).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.SpxII">
      <summary>Protocollo SPX (Sequenced Packet Exchange) versione 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary>Protocollo TCP (Transmission Control Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Udp">
      <summary>Protocollo UDP (User Datagram Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary>Protocollo sconosciuto.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary>Protocollo non specificato.</summary>
    </member>
    <member name="T:System.Net.Sockets.SafeSocketHandle">
      <summary>Rappresenta una classe wrapper per un handle di socket.</summary>
    </member>
    <member name="M:System.Net.Sockets.SafeSocketHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.SafeSocketHandle" />.</summary>
      <param name="preexistingHandle">Handle preesistente da usare.</param>
      <param name="ownsHandle">
        <see langword="true" /> per rilasciare in modo affidabile l'handle durante la fase di finalizzazione; <see langword="false" /> per impedire il rilascio affidabile (opzione non consigliata).</param>
    </member>
    <member name="T:System.Net.Sockets.SelectMode">
      <summary>Definisce le modalità di polling per il metodo <see cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectError">
      <summary>Modalità stato di errore.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectRead">
      <summary>Modalità stato di lettura.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectWrite">
      <summary>Modalità stato di scrittura.</summary>
    </member>
    <member name="T:System.Net.Sockets.SendPacketsElement">
      <summary>Rappresenta un elemento in una matrice <see cref="T:System.Net.Sockets.SendPacketsElement" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> utilizzando il buffer specificato.</summary>
      <param name="buffer">Matrice di byte di dati da inviare tramite il metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="buffer" /> non può essere null.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> con l'intervallo del buffer specificato.</summary>
      <param name="buffer">Matrice di byte di dati da inviare tramite il metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Offset, in byte, dall'inizio del <paramref name="buffer" /> alla posizione nel <paramref name="buffer" /> per iniziare a inviare i dati specificati nel parametro <paramref name="buffer" />.</param>
      <param name="count">Numero di byte da inviare a partire dal parametro <paramref name="offset" />. Se <paramref name="count" /> è zero, non viene inviato alcun byte.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="buffer" /> non può essere null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">I parametri <paramref name="offset" /> e <paramref name="count" /> devono essere maggiori di o uguali a zero.
I parametri <paramref name="offset" /> e <paramref name="count" /> devono essere inferiori alla dimensione del buffer.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Inizializza un nuova istanza della classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando l'intervallo del buffer specificato con un'opzione per combinare questo elemento con l'elemento successivo in una singola richiesta di invio dal livello dei socket al trasporto.</summary>
      <param name="buffer">Matrice di byte di dati da inviare tramite il metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Offset, in byte, dall'inizio del <paramref name="buffer" /> alla posizione nel <paramref name="buffer" /> per iniziare a inviare i dati specificati nel parametro <paramref name="buffer" />.</param>
      <param name="count">Numero di byte da inviare a partire dal parametro <paramref name="offset" />. Se <paramref name="count" /> è zero, non viene inviato alcun byte.</param>
      <param name="endOfPacket">Valore booleano che specifica che questo elemento non deve essere combinato con l'elemento successivo in una singola richiesta di invio dal livello dei socket al trasporto. Questo flag viene utilizzato per il controllo granulare del contenuto di ogni messaggio su un socket di datagramma o orientato al messaggio.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="buffer" /> non può essere null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">I parametri <paramref name="offset" /> e <paramref name="count" /> devono essere maggiori di o uguali a zero.
I parametri <paramref name="offset" /> e <paramref name="count" /> devono essere inferiori alla dimensione del buffer.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando l'oggetto <see cref="T:System.IO.FileStream" /> specificato.</summary>
      <param name="fileStream">File da trasmettere usando il metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileStream" /> non è aperto per la lettura e la scrittura asincrone.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> non può essere Null.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> con l'intervallo specificato di un oggetto <see cref="T:System.IO.FileStream" />.</summary>
      <param name="fileStream">File da trasmettere usando il metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Offset, in byte, dall'inizio del file alla posizione nel file per iniziare a inviare i byte nel file.</param>
      <param name="count">Numero di byte da inviare a partire da <paramref name="offset" />. Se <paramref name="count" /> è zero, viene inviato l'intero file.</param>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="fileStream" /> deve essere stato aperto per la lettura e la scrittura asincrone.</exception>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="fileStream" /> non può essere <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">I parametri <paramref name="offset" /> e <paramref name="count" /> devono essere maggiori di o uguali a zero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32,System.Boolean)">
      <summary>Inizializza un nuova istanza della classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando l'intervallo specificato di un oggetto <see cref="T:System.IO.FileStream" /> con un'opzione per combinare questo elemento con l'elemento successivo in una singola richiesta di invio dal livello dei socket al trasporto.</summary>
      <param name="fileStream">File da trasmettere usando il metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Offset, in byte, dall'inizio del file alla posizione nel file per iniziare a inviare i byte nel file.</param>
      <param name="count">Numero di byte da inviare a partire dal parametro offset. Se count è zero, viene inviato l'intero file.</param>
      <param name="endOfPacket">Specifica che questo elemento non deve essere combinato con l'elemento successivo in una singola richiesta di invio dal livello dei socket al trasporto. Questo flag viene utilizzato per il controllo granulare del contenuto di ogni messaggio su un socket di datagramma o orientato al messaggio.</param>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="fileStream" /> deve essere stato aperto per la lettura e la scrittura asincrone.</exception>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="fileStream" /> non può essere <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">I parametri <paramref name="offset" /> e <paramref name="count" /> devono essere maggiori di o uguali a zero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> con il file specificato.</summary>
      <param name="filepath">Nome del file da trasmettere utilizzando il metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="filepath" /> non può essere null.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> con l'intervallo del file specificato.</summary>
      <param name="filepath">Nome del file da trasmettere utilizzando il metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Offset, in byte, dall'inizio del file alla posizione nel file per iniziare a inviare il file specificato nel parametro <paramref name="filepath" />.</param>
      <param name="count">Numero di byte da inviare a partire dal parametro <paramref name="offset" />. Se <paramref name="count" /> è zero, viene inviato l'intero file.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="filepath" /> non può essere null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">I parametri <paramref name="offset" /> e <paramref name="count" /> devono essere maggiori di o uguali a zero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Inizializza un nuova istanza della classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando l'intervallo del file specificato con un'opzione per combinare questo elemento con l'elemento successivo in una singola richiesta di invio dal livello dei socket al trasporto.</summary>
      <param name="filepath">Nome del file da trasmettere utilizzando il metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Offset, in byte, dall'inizio del file alla posizione nel file per iniziare a inviare il file specificato nel parametro <paramref name="filepath" />.</param>
      <param name="count">Numero di byte da inviare a partire dal parametro <paramref name="offset" />. Se <paramref name="count" /> è zero, viene inviato l'intero file.</param>
      <param name="endOfPacket">Valore booleano che specifica che questo elemento non deve essere combinato con l'elemento successivo in una singola richiesta di invio dal livello dei socket al trasporto. Questo flag viene utilizzato per il controllo granulare del contenuto di ogni messaggio su un socket di datagramma o orientato al messaggio.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="filepath" /> non può essere null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">I parametri <paramref name="offset" /> e <paramref name="count" /> devono essere maggiori di o uguali a zero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> con l'intervallo del file specificato.</summary>
      <param name="filepath">Nome del file da trasmettere utilizzando il metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Offset, in byte, dall'inizio del file alla posizione nel file per iniziare a inviare il file specificato nel parametro <paramref name="filepath" />.</param>
      <param name="count">Numero di byte da inviare a partire da <paramref name="offset" />. Se <paramref name="count" /> è zero, viene inviato l'intero file.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="filepath" /> non può essere <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">I parametri <paramref name="offset" /> e <paramref name="count" /> devono essere maggiori di o uguali a zero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32,System.Boolean)">
      <summary>Inizializza un nuova istanza della classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando l'intervallo del file specificato con un'opzione per combinare questo elemento con l'elemento successivo in una singola richiesta di invio dal livello dei socket al trasporto.</summary>
      <param name="filepath">Nome del file da trasmettere utilizzando il metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Offset, in byte, dall'inizio del file alla posizione nel file per iniziare a inviare il file specificato nel parametro <paramref name="filepath" />.</param>
      <param name="count">Numero di byte da inviare a partire dal parametro <paramref name="offset" />. Se <paramref name="count" /> è zero, viene inviato l'intero file.</param>
      <param name="endOfPacket">Specifica che questo elemento non deve essere combinato con l'elemento successivo in una singola richiesta di invio dal livello dei socket al trasporto. Questo flag viene utilizzato per il controllo granulare del contenuto di ogni messaggio su un socket di datagramma o orientato al messaggio.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="filepath" /> non può essere <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">I parametri <paramref name="offset" /> e <paramref name="count" /> devono essere maggiori di o uguali a zero.</exception>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Buffer">
      <summary>Ottiene il buffer da inviare se l'oggetto <see cref="T:System.Net.Sockets.SendPacketsElement" /> è stato inizializzato con un parametro <paramref name="buffer" />.</summary>
      <returns>Buffer di byte da inviare se l' <see cref="T:System.Net.Sockets.SendPacketsElement" /> oggetto è stato inizializzato <paramref name="buffer" /> con un parametro.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Count">
      <summary>Ottiene il conteggio di byte da inviare.</summary>
      <returns>Conteggio dei byte da inviare se la classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> è stata inizializzata con un parametro <paramref name="count" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.EndOfPacket">
      <summary>Ottiene un valore booleano che indica se questo elemento non deve essere combinato con l'elemento successivo in una singola richiesta di invio dal livello dei socket al trasporto.</summary>
      <returns>Valore booleano che indica se questo elemento non deve essere combinato con l'elemento successivo in una singola richiesta di invio.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FilePath">
      <summary>Ottiene il nome del file da inviare se l'oggetto <see cref="T:System.Net.Sockets.SendPacketsElement" /> è stato inizializzato con un parametro <paramref name="filepath" />.</summary>
      <returns>Nome del file da inviare se l' <see cref="T:System.Net.Sockets.SendPacketsElement" /> oggetto è stato inizializzato con un <paramref name="filepath" /> parametro.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FileStream">
      <summary>Ottiene la rappresentazione oggetto del file da inviare se l'oggetto <see cref="T:System.Net.Sockets.SendPacketsElement" /> è stato inizializzato con un parametro <see cref="T:System.IO.FileStream" />.</summary>
      <returns>Rappresentazione dell'oggetto del file da inviare se l' <see cref="T:System.Net.Sockets.SendPacketsElement" /> oggetto è stato inizializzato con un <see cref="T:System.IO.FileStream" /> parametro.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Offset">
      <summary>Ottiene l'offset, in byte, dall'inizio del buffer di dati o del file alla posizione nel buffer o nel file per iniziare a inviare i dati.</summary>
      <returns>Offset, in byte, dall'inizio del buffer di dati o del file alla posizione nel buffer o nel file per iniziare a inviare i dati.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.OffsetLong">
      <summary>Ottiene l'offset, in byte, dall'inizio del buffer di dati o del file alla posizione nel buffer o nel file per iniziare a inviare i dati.</summary>
      <returns>Offset, in byte, dall'inizio del buffer di dati o del file alla posizione nel buffer o nel file per iniziare a inviare i dati.</returns>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary>Implementa l'interfaccia dei socket Berkeley.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.Socket" /> utilizzando la famiglia di indirizzi, il tipo di socket e il protocollo specificati.</summary>
      <param name="addressFamily">Uno dei valori di <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
      <param name="socketType">Uno dei valori di <see cref="T:System.Net.Sockets.SocketType" />.</param>
      <param name="protocolType">Uno dei valori di <see cref="T:System.Net.Sockets.ProtocolType" />.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Il risultato della combinazione di <paramref name="addressFamily" />, <paramref name="socketType" /> e <paramref name="protocolType" /> è un socket non valido.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketInformation)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.Socket" /> utilizzando il valore specificato restituito da <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</summary>
      <param name="socketInformation">Le informazioni sul socket restituite da <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.Socket" /> utilizzando il tipo di socket e il protocollo specificati.</summary>
      <param name="socketType">Uno dei valori di <see cref="T:System.Net.Sockets.SocketType" />.</param>
      <param name="protocolType">Uno dei valori di <see cref="T:System.Net.Sockets.ProtocolType" />.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Il risultato della combinazione di <paramref name="socketType" /> e <paramref name="protocolType" /> è un socket non valido.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Accept">
      <summary>Crea un nuovo oggetto <see cref="T:System.Net.Sockets.Socket" /> per una nuova connessione.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> per una nuova connessione.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">Il socket preposto ad accettare la connessione non è in attesa di connessioni. È necessario chiamare i metodi <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> e <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> prima di chiamare il metodo <see cref="M:System.Net.Sockets.Socket.Accept" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Avvia un'operazione asincrona per accettare un tentativo di connessione in ingresso.</summary>
      <param name="e">Oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> da utilizzare per questa operazione socket asincrona.</param>
      <returns>
        <see langword="true" /> se l'operazione di I/O è in sospeso. Al completamento dell'operazione verrà generato l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" />.
<see langword="false" /> se l'operazione di I/O è stata completata in modo sincrono. L'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> nel parametro <paramref name="e" /> non verrà generato e l'oggetto <paramref name="e" /> passato come parametro potrebbe essere esaminato immediatamente dopo che la chiamata al metodo ha restituito il risultato, per recuperare il risultato dell'operazione.</returns>
      <exception cref="T:System.ArgumentException">Un argomento non è valido. Questa eccezione si verifica se il buffer fornito non è abbastanza grande. Il buffer deve essere di almeno 2 * (sizeof(SOCKADDR_STORAGE + 16) byte.
Questa eccezione si verifica anche se sono specificati più buffer e la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> non è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Un argomento non è compreso nell'intervallo. L'eccezione si verifica se l'oggetto <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> è minore di 0.</exception>
      <exception cref="T:System.InvalidOperationException">È stata richiesta un'operazione non valida. Questa eccezione si verifica se l'oggetto <see cref="T:System.Net.Sockets.Socket" /> preposto ad accettare la connessione non è in attesa di connessioni o se il socket accettato è associato.
È necessario chiamare il metodo <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> e <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> prima di chiamare il metodo <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.
Questa eccezione si verifica anche se il socket è già connesso o se un'operazione socket era già in corso utilizzando il parametro <paramref name="e" /> specificato.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è necessario Windows XP o versione successiva.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary>Ottiene la famiglia di indirizzi del <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Uno dei valori di <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Available">
      <summary>Ottiene la quantità dei dati ricevuti dalla rete e disponibili per essere letti.</summary>
      <returns>Numero di byte di dati ricevuti dalla rete e disponibili per essere letti.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per accettare un tentativo di connessione in ingresso.</summary>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto che contiene informazioni sullo stato per questa richiesta.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla creazione asincrona di <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è richiesto Windows NT.</exception>
      <exception cref="T:System.InvalidOperationException">Il socket preposto ad accettare la connessione non è in attesa di connessioni. È necessario chiamare i metodi <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> e <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> prima di chiamare il metodo <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.
-oppure-
Il socket accettato è associato.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> è minore di 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per accettare un tentativo di connessione in ingresso e riceve il primo blocco di dati inviato dall'applicazione client.</summary>
      <param name="receiveSize">Numero di byte da accettare dal mittente.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto che contiene informazioni sullo stato per questa richiesta.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla creazione asincrona di <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è richiesto Windows NT.</exception>
      <exception cref="T:System.InvalidOperationException">Il socket preposto ad accettare la connessione non è in attesa di connessioni. È necessario chiamare i metodi <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> e <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> prima di chiamare il metodo <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.
-oppure-
Il socket accettato è associato.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> è minore di 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per accettare un tentativo di connessione in ingresso da un socket specificato e riceve il primo blocco di dati inviato dall'applicazione client.</summary>
      <param name="acceptSocket">Oggetto <see cref="T:System.Net.Sockets.Socket" /> accettato. Questo valore può essere <see langword="null" />.</param>
      <param name="receiveSize">Il numero massimo dei byte da ricevere.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto che contiene informazioni sullo stato per questa richiesta.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla creazione asincrona dell'oggetto <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è richiesto Windows NT.</exception>
      <exception cref="T:System.InvalidOperationException">Il socket preposto ad accettare la connessione non è in attesa di connessioni. È necessario chiamare i metodi <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> e <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> prima di chiamare il metodo <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.
-oppure-
Il socket accettato è associato.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> è minore di 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>Avvia una richiesta asincrona di una connessione all'host remoto.</summary>
      <param name="remoteEP">Oggetto <see cref="T:System.Net.EndPoint" /> che rappresenta l'host remoto.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto che contiene informazioni sullo stato per questa richiesta.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla connessione asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> è stato collocato in uno stato di ascolto mediante la chiamata di <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> o è già in corso un'operazione asincrona.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Avvia una richiesta asincrona di una connessione all'host remoto. L'host remoto viene specificato da un <see cref="T:System.Net.IPAddress" /> e da un numero di porta.</summary>
      <param name="address">
        <see cref="T:System.Net.IPAddress" /> dell'host remoto.</param>
      <param name="port">Numero di porta dell'host remoto.</param>
      <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> che fa riferimento al metodo da richiamare al completamento dell'operazione di connessione.</param>
      <param name="state">Oggetto definito dall'utente che contiene informazioni sull'operazione di connessione. Questo oggetto viene passato al delegato <paramref name="requestCallback" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla connessione asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.NotSupportedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> non è incluso nella famiglia di socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di porta non è valido.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="address" /> è zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> è stato collocato in uno stato di ascolto mediante la chiamata di <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> o è già in corso un'operazione asincrona.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Avvia una richiesta asincrona di una connessione all'host remoto. L'host viene specificato da una matrice di <see cref="T:System.Net.IPAddress" /> e un numero di porta.</summary>
      <param name="addresses">Almeno un <see cref="T:System.Net.IPAddress" />, che specifica l'host remoto.</param>
      <param name="port">Numero di porta dell'host remoto.</param>
      <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> che fa riferimento al metodo da richiamare al completamento dell'operazione di connessione.</param>
      <param name="state">Oggetto definito dall'utente che contiene informazioni sull'operazione di connessione. Questo oggetto viene passato al delegato <paramref name="requestCallback" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alle connessioni asincrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.NotSupportedException">Questo metodo è valido per i socket che utilizzano <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di porta non è valido.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="address" /> è zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> è stato collocato in uno stato di ascolto mediante la chiamata di <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> o è già in corso un'operazione asincrona.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Avvia una richiesta asincrona di una connessione all'host remoto. L'host viene specificato da un nome host e da un numero di porta.</summary>
      <param name="host">Il nome dell'host remoto.</param>
      <param name="port">Numero di porta dell'host remoto.</param>
      <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> che fa riferimento al metodo da richiamare al completamento dell'operazione di connessione.</param>
      <param name="state">Oggetto definito dall'utente che contiene informazioni sull'operazione di connessione. Questo oggetto viene passato al delegato <paramref name="requestCallback" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla connessione asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.NotSupportedException">Questo metodo è valido per i socket nelle famiglie <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> .</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di porta non è valido.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> è stato collocato in uno stato di ascolto mediante la chiamata di <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> o è già in corso un'operazione asincrona.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)">
      <summary>Avvia una richiesta asincrona di disconnessione da un endpoint remoto.</summary>
      <param name="reuseSocket">
        <see langword="true" /> se il socket può essere riutilizzato una volta chiusa la connessione; in caso contrario, <see langword="false" />.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto che contiene informazioni sullo stato per questa richiesta.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona.</returns>
      <exception cref="T:System.NotSupportedException">Il sistema operativo è Windows 2000 o versioni precedenti e il metodo richiede Windows XP.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Inizia a ricevere dati in modalità asincrona da un <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <param name="offset">Posizione in base zero nel parametro <paramref name="buffer" />in cui memorizzare i dati ricevuti.</param>
      <param name="size">Numero di byte da ricevere.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
      <param name="state">Oggetto definito dall'utente contenente informazioni sull'operazione di ricezione. Questo oggetto viene passato al delegato <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla lettura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">Il <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Inizia a ricevere dati in modalità asincrona da un <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <param name="offset">Posizione in <paramref name="buffer" /> per memorizzare i dati ricevuti.</param>
      <param name="size">Numero di byte da ricevere.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Oggetto <see cref="T:System.Net.Sockets.SocketError" /> che memorizza l'errore del socket.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
      <param name="state">Oggetto definito dall'utente contenente informazioni sull'operazione di ricezione. Questo oggetto viene passato al delegato <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla lettura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">Il <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Inizia a ricevere dati in modalità asincrona da un <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="buffers">Matrice di tipo <see cref="T:System.Byte" /> che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
      <param name="state">Oggetto definito dall'utente contenente informazioni sull'operazione di ricezione. Questo oggetto viene passato al delegato <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla lettura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">Il <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Inizia a ricevere dati in modalità asincrona da un <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="buffers">Matrice di tipo <see cref="T:System.Byte" /> che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Oggetto <see cref="T:System.Net.Sockets.SocketError" /> che memorizza l'errore del socket.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
      <param name="state">Oggetto definito dall'utente contenente informazioni sull'operazione di ricezione. Questo oggetto viene passato al delegato <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla lettura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">Il <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>Inizia a ricevere dati in modalità asincrona da un dispositivo di rete specificato.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <param name="offset">Posizione in base zero nel parametro <paramref name="buffer" />in cui memorizzare i dati.</param>
      <param name="size">Numero di byte da ricevere.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> che rappresenta l'origine dei dati.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto che contiene informazioni sullo stato per questa richiesta.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla lettura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.
-oppure-
<paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>Avvia la ricezione asincrona del numero di byte di dati specificato nella posizione specificata del buffer di dati, usando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato e memorizza le informazioni su endpoint e pacchetti.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <param name="offset">Posizione in base zero nel parametro <paramref name="buffer" />in cui memorizzare i dati.</param>
      <param name="size">Numero di byte da ricevere.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> che rappresenta l'origine dei dati.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto che contiene informazioni sullo stato per questa richiesta.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla lettura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.
-oppure-
<paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.NotSupportedException">Il sistema operativo è Windows 2000 o versioni precedenti e il metodo richiede Windows XP.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Invia dati in modo asincrono a un <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <param name="offset">Posizione in base zero nel parametro <paramref name="buffer" /> in corrispondenza della quale iniziare a inviare dati.</param>
      <param name="size">Numero di byte da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto che contiene informazioni sullo stato per questa richiesta.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento all'invio asincrono.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket. Vedere la sezione Osservazioni riportata di seguito.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è minore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Invia dati in modo asincrono a un <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <param name="offset">Posizione in base zero nel parametro <paramref name="buffer" /> in corrispondenza della quale iniziare a inviare dati.</param>
      <param name="size">Numero di byte da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Oggetto <see cref="T:System.Net.Sockets.SocketError" /> che memorizza l'errore del socket.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto che contiene informazioni sullo stato per questa richiesta.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento all'invio asincrono.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket. Vedere la sezione Osservazioni riportata di seguito.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è minore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Invia dati in modo asincrono a un <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="buffers">Matrice di tipo <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto che contiene informazioni sullo stato per questa richiesta.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento all'invio asincrono.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> è vuoto.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket. Vedere la sezione Osservazioni riportata di seguito.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Invia dati in modo asincrono a un <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="buffers">Matrice di tipo <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Oggetto <see cref="T:System.Net.Sockets.SocketError" /> che memorizza l'errore del socket.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto che contiene informazioni sullo stato per questa richiesta.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento all'invio asincrono.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> è vuoto.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket. Vedere la sezione Osservazioni riportata di seguito.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)">
      <summary>Invia il file <paramref name="fileName" /> a un oggetto connesso <see cref="T:System.Net.Sockets.Socket" /> utilizzando il flag <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />.</summary>
      <param name="fileName">Stringa contenente il percorso e il nome del file da inviare. Questo parametro può essere <see langword="null" />.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto che contiene informazioni sullo stato per questa richiesta.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che rappresenta l'invio asincrono.</returns>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.NotSupportedException">Il socket non è connesso a un host remoto.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="fileName" /> del file non è stato trovato.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket. Vedere la sezione Osservazioni riportata di seguito.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)">
      <summary>Invia un file e buffer di dati in modo asincrono a un oggetto <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="fileName">Stringa contenente il percorso e il nome del file da inviare. Questo parametro può essere <see langword="null" />.</param>
      <param name="preBuffer">Oggetto matrice <see cref="T:System.Byte" /> che contiene i dati da inviare prima dell'invio del file. Questo parametro può essere <see langword="null" />.</param>
      <param name="postBuffer">Oggetto matrice <see cref="T:System.Byte" /> che contiene i dati da inviare dopo l'invio del file. Questo parametro può essere <see langword="null" />.</param>
      <param name="flags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.TransmitFileOptions" />.</param>
      <param name="callback">Delegato di <see cref="T:System.AsyncCallback" /> da chiamare al completamento dell'operazione. Questo parametro può essere <see langword="null" />.</param>
      <param name="state">Oggetto definito dall'utente contenente le informazioni di stato per la richiesta. Questo parametro può essere <see langword="null" />.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che rappresenta l'operazione asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket. Vedere la sezione Osservazioni riportata di seguito.</exception>
      <exception cref="T:System.NotSupportedException">Il sistema operativo non è Windows NT o versioni successive.
-oppure-
Il socket non è connesso a un host remoto.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="fileName" /> del file non è stato trovato.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>Invia i dati in modo asincrono a un host remoto specifico.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <param name="offset">Posizione in base zero nel <paramref name="buffer" /> in corrispondenza della quale iniziare a inviare dati.</param>
      <param name="size">Numero di byte da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Oggetto <see cref="T:System.Net.EndPoint" /> che rappresenta il dispositivo remoto.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Oggetto che contiene informazioni sullo stato per questa richiesta.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento all'invio asincrono.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.
-oppure-
<paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
      <summary>Associa un <see cref="T:System.Net.Sockets.Socket" /> a un endpoint locale.</summary>
      <param name="localEP">
        <see cref="T:System.Net.EndPoint" /> locale da associare al <see cref="T:System.Net.Sockets.Socket" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Blocking">
      <summary>Ottiene o imposta un valore che indica se il <see cref="T:System.Net.Sockets.Socket" /> è in modalità blocco.</summary>
      <returns>
        <see langword="true" /> se il <see cref="T:System.Net.Sockets.Socket" /> verrà bloccato, in caso contrario <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Annulla una richiesta asincrona di una connessione all'host remoto.</summary>
      <param name="e">Oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> utilizzato per richiedere la connessione all'host remoto chiamando uno dei metodi <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="e" /> non può essere Null e la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> non può essere Null.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Un chiamante nella parte superiore dello stack di chiamate non dispone dell'autorizzazione necessaria per l'operazione richiesta.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary>Chiude la connessione all'oggetto <see cref="T:System.Net.Sockets.Socket" /> e rilascia tutte le risorse associate.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary>Chiude la connessione <see cref="T:System.Net.Sockets.Socket" /> e rilascia tutte le risorse associate con un timeout specificato in modo da consentire l'invio dei dati in coda.</summary>
      <param name="timeout">Attende fino a <paramref name="timeout" /> secondi per inviare eventuali dati rimanenti, quindi chiude il socket.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)">
      <summary>Stabilisce una connessione a un host remoto.</summary>
      <param name="remoteEP">Oggetto <see cref="T:System.Net.EndPoint" /> che rappresenta il dispositivo remoto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> è stato collocato in uno stato di ascolto mediante la chiamata di <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Stabilisce una connessione a un host remoto. L'host è specificato da un indirizzo IP e da un numero di porta.</summary>
      <param name="address">L'indirizzo IP dell'host remoto.</param>
      <param name="port">Numero di porta dell'host remoto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di porta non è valido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.NotSupportedException">Questo metodo è valido per i socket nelle famiglie <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="address" /> è zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> è stato collocato in uno stato di ascolto mediante la chiamata di <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>Stabilisce una connessione a un host remoto. L'host è specificato da una matrice di indirizzi IP e da un numero di porta.</summary>
      <param name="addresses">L'indirizzo IP dell'host remoto.</param>
      <param name="port">Numero di porta dell'host remoto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di porta non è valido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.NotSupportedException">Questo metodo è valido per i socket nelle famiglie <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="address" /> è zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> è stato collocato in uno stato di ascolto mediante la chiamata di <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)">
      <summary>Stabilisce una connessione a un host remoto. L'host viene specificato da un nome host e da un numero di porta.</summary>
      <param name="host">Il nome dell'host remoto.</param>
      <param name="port">Numero di porta dell'host remoto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di porta non è valido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.NotSupportedException">Questo metodo è valido per i socket della famiglia <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> è stato collocato in uno stato di ascolto mediante la chiamata di <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Avvia una richiesta asincrona di una connessione all'host remoto.</summary>
      <param name="e">Oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> da utilizzare per questa operazione socket asincrona.</param>
      <returns>
        <see langword="true" /> se l'operazione di I/O è in sospeso. Al completamento dell'operazione verrà generato l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" />.
<see langword="false" /> se l'operazione di I/O è stata completata in modo sincrono. In questo caso, l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" /> non verrà generato e l'oggetto <paramref name="e" /> passato come parametro potrebbe essere esaminato immediatamente dopo che la chiamata al metodo è stata restituita per recuperare il risultato dell'operazione.</returns>
      <exception cref="T:System.ArgumentException">Un argomento non è valido. Questa eccezione si verifica se sono specificati più buffer e la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> non è null.</exception>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="e" /> non può essere Null e la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> non può essere Null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> è in attesa o era già in corso un'operazione di socket che utilizza l'oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> specificato nel parametro <paramref name="e" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è necessario Windows XP o versione successiva. Questa eccezione si verifica anche se l'endpoint locale e l'oggetto <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> non appartengono alla stessa famiglia di indirizzi.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Avvia una richiesta asincrona di una connessione all'host remoto.</summary>
      <param name="socketType">Uno dei valori di <see cref="T:System.Net.Sockets.SocketType" />.</param>
      <param name="protocolType">Uno dei valori di <see cref="T:System.Net.Sockets.ProtocolType" />.</param>
      <param name="e">Oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> da utilizzare per questa operazione socket asincrona.</param>
      <returns>
        <see langword="true" /> se l'operazione di I/O è in sospeso. Al completamento dell'operazione verrà generato l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" />.
<see langword="false" /> se l'operazione di I/O è stata completata in modo sincrono. In questo caso, l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" /> non verrà generato e l'oggetto <paramref name="e" /> passato come parametro potrebbe essere esaminato immediatamente dopo che la chiamata al metodo è stata restituita per recuperare il risultato dell'operazione.</returns>
      <exception cref="T:System.ArgumentException">Un argomento non è valido. Questa eccezione si verifica se sono specificati più buffer e la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> non è null.</exception>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="e" /> non può essere Null e la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> non può essere Null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> è in attesa o era già in corso un'operazione di socket che utilizza l'oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> specificato nel parametro <paramref name="e" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è necessario Windows XP o versione successiva. Questa eccezione si verifica anche se l'endpoint locale e l'oggetto <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> non appartengono alla stessa famiglia di indirizzi.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary>Ottiene un valore che indica se un <see cref="T:System.Net.Sockets.Socket" /> si è connesso a un host remoto dall'ultima operazione <see cref="Overload:System.Net.Sockets.Socket.Send" /> o <see cref="Overload:System.Net.Sockets.Socket.Receive" />.</summary>
      <returns>
        <see langword="true" /> se il <see cref="T:System.Net.Sockets.Socket" /> è connesso a una risorsa remota nel corso dell'operazione più recente, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Disconnect(System.Boolean)">
      <summary>Chiude la connessione al socket consentendo di riutilizzare il socket.</summary>
      <param name="reuseSocket">
        <see langword="true" /> se il socket può essere riutilizzato una volta chiusa la connessione in corso; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.PlatformNotSupportedException">Questo metodo richiede Windows 2000 o versioni precedenti; in caso contrario sarà generata un'eccezione.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Avvia una richiesta asincrona di disconnessione da un endpoint remoto.</summary>
      <param name="e">Oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> da utilizzare per questa operazione socket asincrona.</param>
      <returns>
        <see langword="true" /> se l'operazione di I/O è in sospeso. Al completamento dell'operazione verrà generato l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" />.
<see langword="false" /> se l'operazione di I/O è stata completata in modo sincrono. In questo caso, l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" /> non verrà generato e l'oggetto <paramref name="e" /> passato come parametro potrebbe essere esaminato immediatamente dopo che la chiamata al metodo è stata restituita per recuperare il risultato dell'operazione.</returns>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="e" /> non può essere Null.</exception>
      <exception cref="T:System.InvalidOperationException">Era già in corso un'operazione di socket che utilizza l'oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> specificato nel parametro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è necessario Windows XP o versione successiva.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary>Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Sockets.Socket" /> e, facoltativamente, elimina le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.Net.Sockets.Socket.DontFragment">
      <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se il <see cref="T:System.Net.Sockets.Socket" /> consente la frammentazione dei datagrammi IP (Internet Protocol).</summary>
      <returns>
        <see langword="true" /> se il <see cref="T:System.Net.Sockets.Socket" /> consente la frammentazione dei datagrammi; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
      <exception cref="T:System.NotSupportedException">È possibile impostare questa proprietà solo per i socket inclusi nella famiglia <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.DualMode">
      <summary>Ottiene o imposta un valore di <see cref="T:System.Boolean" /> che specifica se <see cref="T:System.Net.Sockets.Socket" /> è un socket dual mode usato per IPv4 e IPv6.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Net.Sockets.Socket" /> è un socket dual mode; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)">
      <summary>Duplica il riferimento al socket per il processo di destinazione e chiude il socket per tale processo.</summary>
      <param name="targetProcessId">L'ID del processo di destinazione in cui viene creato un duplicato del riferimento al socket.</param>
      <returns>Il riferimento al socket da passare al processo di destinazione.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="targetProcessID" /> non è un ID di processo valido.
-oppure-
La duplicazione del riferimento al socket non è riuscita.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.EnableBroadcast">
      <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se il <see cref="T:System.Net.Sockets.Socket" /> può inviare o ricevere pacchetti broadcast.</summary>
      <returns>
        <see langword="true" /> se il <see cref="T:System.Net.Sockets.Socket" /> consente lo scambio di pacchetti broadcast; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Questa opzione è valida solo per i socket di datagrammi.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)">
      <summary>Accetta in modo asincrono una connessione in ingresso e crea un nuovo oggetto <see cref="T:System.Net.Sockets.Socket" /> per gestire la comunicazione con l'host remoto. Questo metodo restituisce un buffer contenente i dati iniziali trasferiti.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> contenente i byte trasferiti.</param>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che memorizza informazioni sullo stato e qualsiasi dato definito dall'utente per l'operazione asincrona.</param>
      <returns>Oggetto <see cref="T:System.Net.Sockets.Socket" /> che gestisce la comunicazione con l'host remoto.</returns>
      <exception cref="T:System.NotSupportedException">Per questo metodo è richiesto Windows NT.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è vuoto.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato creato da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> è stato chiamato precedentemente.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al <see cref="T:System.Net.Sockets.Socket" /></exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)">
      <summary>Accetta in modo asincrono una connessione in ingresso e crea un nuovo oggetto <see cref="T:System.Net.Sockets.Socket" /> per gestire la comunicazione con l'host remoto. Questo metodo restituisce un buffer contenente i dati iniziali e il numero di byte trasferiti.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> contenente i byte trasferiti.</param>
      <param name="bytesTransferred">Il numero di byte trasferiti.</param>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che memorizza informazioni sullo stato e qualsiasi dato definito dall'utente per l'operazione asincrona.</param>
      <returns>Oggetto <see cref="T:System.Net.Sockets.Socket" /> che gestisce la comunicazione con l'host remoto.</returns>
      <exception cref="T:System.NotSupportedException">Per questo metodo è richiesto Windows NT.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è vuoto.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato creato da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> è stato chiamato precedentemente.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)">
      <summary>Accetta in modo asincrono una connessione in ingresso e crea un nuovo oggetto <see cref="T:System.Net.Sockets.Socket" /> per gestire la comunicazione con l'host remoto.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che memorizza informazioni sullo stato e qualsiasi dato definito dall'utente per l'operazione asincrona.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> che gestisce la comunicazione con l'host remoto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato creato da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket. Per altre informazioni, vedere la sezione Osservazioni.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> è stato chiamato precedentemente.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è richiesto Windows NT.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)">
      <summary>Termina una richiesta di connessione sincrona in sospeso.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che memorizza informazioni sullo stato e qualsiasi dato definito dall'utente per l'operazione asincrona.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" /> è stato precedentemente chiamato per la connessione asincrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)">
      <summary>Termina una richiesta di disconnessione asincrona in sospeso.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che memorizza informazioni sullo stato e qualsiasi dato definito dall'utente per l'operazione asincrona.</param>
      <exception cref="T:System.NotSupportedException">Il sistema operativo è Windows 2000 o versioni precedenti e il metodo richiede Windows XP.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" /> è stato precedentemente chiamato per la connessione asincrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.Net.WebException">Timeout della richiesta di disconnessione.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)">
      <summary>Termina una lettura asincrona in attesa.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che memorizza informazioni sullo stato e qualsiasi dato definito dall'utente per l'operazione asincrona.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> è stato precedentemente chiamato per la lettura asincrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>Termina una lettura asincrona in attesa.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che memorizza informazioni sullo stato e qualsiasi dato definito dall'utente per l'operazione asincrona.</param>
      <param name="errorCode">Oggetto <see cref="T:System.Net.Sockets.SocketError" /> che memorizza l'errore del socket.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> è stato precedentemente chiamato per la lettura asincrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)">
      <summary>Termina una lettura asincrona in sospeso da uno specifico endpoint.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che memorizza informazioni sullo stato e qualsiasi dato definito dall'utente per l'operazione asincrona.</param>
      <param name="endPoint">Il <see cref="T:System.Net.EndPoint" /> di origine.</param>
      <returns>Se ha esito positivo, numero di byte ricevuti. Se ha esito negativo restituisce 0.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> è stato precedentemente chiamato per la lettura asincrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>Termina una lettura asincrona in sospeso da uno specifico endpoint. Questo metodo fornisce inoltre ulteriori informazioni sul pacchetto rispetto a <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che memorizza informazioni sullo stato e qualsiasi dato definito dall'utente per l'operazione asincrona.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" /> relativi al pacchetto ricevuto.</param>
      <param name="endPoint">Il <see cref="T:System.Net.EndPoint" /> di origine.</param>
      <param name="ipPacketInformation">L'<see cref="T:System.Net.IPAddress" /> e l'interfaccia del pacchetto ricevuto.</param>
      <returns>Se ha esito positivo, numero di byte ricevuti. Se ha esito negativo restituisce 0.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />
-oppure-
<paramref name="endPoint" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> è stato precedentemente chiamato per la lettura asincrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)">
      <summary>Termina un invio asincrono in attesa.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> che memorizza le informazioni di stato per l'operazione asincrona.</param>
      <returns>Se ha esito positivo, numero di byte inviati al <see cref="T:System.Net.Sockets.Socket" />. In caso contrario, errore di <see cref="T:System.Net.Sockets.Socket" /> non valido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> è stato precedentemente chiamato per l'invio asincrono.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>Termina un invio asincrono in attesa.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> che memorizza le informazioni di stato per l'operazione asincrona.</param>
      <param name="errorCode">Oggetto <see cref="T:System.Net.Sockets.SocketError" /> che memorizza l'errore del socket.</param>
      <returns>Se ha esito positivo, numero di byte inviati al <see cref="T:System.Net.Sockets.Socket" />. In caso contrario, errore di <see cref="T:System.Net.Sockets.Socket" /> non valido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> è stato precedentemente chiamato per l'invio asincrono.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)">
      <summary>Termina l'invio asincrono di un file in sospeso.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che memorizza le informazioni di stato per l'operazione asincrona.</param>
      <exception cref="T:System.NotSupportedException">Per questo metodo è richiesto Windows NT.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è vuoto.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> è stato precedentemente chiamato il <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> asincrono.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket. Vedere la sezione Osservazioni riportata di seguito.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)">
      <summary>Termina un invio asincrono in sospeso a una posizione specifica.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che memorizza informazioni sullo stato e qualsiasi dato definito dall'utente per l'operazione asincrona.</param>
      <returns>Se ha esito positivo, numero di byte trasmessi. In caso contrario, errore di <see cref="T:System.Net.Sockets.Socket" /> non valido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" /> è stato precedentemente chiamato per l'invio asincrono.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ExclusiveAddressUse">
      <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se il <see cref="T:System.Net.Sockets.Socket" /> consente di associare a una porta un unico processo.</summary>
      <returns>
        <see langword="true" /> se il <see cref="T:System.Net.Sockets.Socket" /> consente a un solo socket di essere associato a una porta specifica; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" /> per Windows Server 2003 e Windows XP Service Pack 2 e <see langword="false" /> per tutte le altre versioni.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> è stato chiamato per questo <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary>Rilascia le risorse usate dalla classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)">
      <summary>Restituisce il valore di un'opzione <see cref="T:System.Net.Sockets.Socket" /> specificata, rappresentata da un oggetto.</summary>
      <param name="optionLevel">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <returns>Oggetto che rappresenta il valore dell'opzione. Quando il parametro <paramref name="optionName" /> è impostato su <see cref="F:System.Net.Sockets.SocketOptionName.Linger" />, il valore restituito è un'istanza della classe <see cref="T:System.Net.Sockets.LingerOption" />. Quando <paramref name="optionName" /> è impostato su <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> o <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" />, il valore restituito è un'istanza della classe <see cref="T:System.Net.Sockets.MulticastOption" />. Quando <paramref name="optionName" /> è qualsiasi altro valore, il valore restituito è un intero.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.
-oppure-
<paramref name="optionName" /> è stato impostato su un valore di <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" /> non supportato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>Restituisce l'impostazione dell'opzione <see cref="T:System.Net.Sockets.Socket" /> specificata, rappresentata come una matrice di byte.</summary>
      <param name="optionLevel">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">Matrice di tipo <see cref="T:System.Byte" /> che deve ricevere l'impostazione dell'opzione.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.
-oppure-
Nelle applicazioni di .NET Compact Framework, lo spazio di buffer predefinito per Windows CE è impostato su 32768 byte. È possibile modificare lo spazio di buffer per ciascun socket chiamando <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>Restituisce in una matrice il valore dell'opzione di <see cref="T:System.Net.Sockets.Socket" /> specificata.</summary>
      <param name="optionLevel">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionLength">Lunghezza in byte del valore restituito previsto.</param>
      <returns>Matrice di tipo <see cref="T:System.Byte" /> che contiene il valore dell'opzione di socket.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.
-oppure-
Nelle applicazioni di .NET Compact Framework, lo spazio di buffer predefinito per Windows CE è impostato su 32768 byte. È possibile modificare lo spazio di buffer per ciascun socket chiamando <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Handle">
      <summary>Ottiene l'handle del sistema operativo per il <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Valore <see cref="T:System.IntPtr" /> che rappresenta l'handle del sistema operativo per il <see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])">
      <summary>Imposta le modalità operative di basso livello per il <see cref="T:System.Net.Sockets.Socket" /> utilizzando codici di controllo numerici.</summary>
      <param name="ioControlCode">Valore di <see cref="T:System.Int32" /> che specifica il codice di controllo dell'operazione da eseguire.</param>
      <param name="optionInValue">Matrice <see cref="T:System.Byte" /> che contiene i dati di input richiesti dall'operazione.</param>
      <param name="optionOutValue">Matrice <see cref="T:System.Byte" /> che contiene i dati di output richiesti dall'operazione.</param>
      <returns>Numero di byte nel parametro <paramref name="optionOutValue" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di modificare la modalità di blocco senza utilizzare la proprietà <see cref="P:System.Net.Sockets.Socket.Blocking" />.</exception>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nello stack di chiamate non dispone delle autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])">
      <summary>Imposta le modalità operative di basso livello per il <see cref="T:System.Net.Sockets.Socket" /> utilizzando l'enumerazione <see cref="T:System.Net.Sockets.IOControlCode" /> per specificare i codici di controllo.</summary>
      <param name="ioControlCode">Valore di <see cref="T:System.Net.Sockets.IOControlCode" /> che specifica il codice di controllo dell'operazione da eseguire.</param>
      <param name="optionInValue">Matrice di tipo <see cref="T:System.Byte" /> che contiene i dati di input richiesti dall'operazione.</param>
      <param name="optionOutValue">Matrice di tipo <see cref="T:System.Byte" /> che contiene i dati di output restituiti dall'operazione.</param>
      <returns>Numero di byte nel parametro <paramref name="optionOutValue" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">È stato effettuato un tentativo di modificare la modalità di blocco senza utilizzare la proprietà <see cref="P:System.Net.Sockets.Socket.Blocking" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.IsBound">
      <summary>Ottiene un valore che indica se il <see cref="T:System.Net.Sockets.Socket" /> è associato a una porta locale specifica.</summary>
      <returns>
        <see langword="true" /> se il <see cref="T:System.Net.Sockets.Socket" /> è associato a una porta locale; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.LingerState">
      <summary>Ottiene o imposta un valore che specifica se il <see cref="T:System.Net.Sockets.Socket" /> ritarderà la chiusura di un socket durante un tentativo di invio di tutti i dati in sospeso.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.LingerOption" /> che specifica la modalità di attivazione del ritardo durante la chiusura di un socket.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen(System.Int32)">
      <summary>Colloca un <see cref="T:System.Net.Sockets.Socket" /> in uno stato di attesa.</summary>
      <param name="backlog">Lunghezza massima della coda delle connessioni in sospeso.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.LocalEndPoint">
      <summary>Ottiene l'endpoint locale.</summary>
      <returns>L'oggetto <see cref="T:System.Net.EndPoint" /> utilizzato dall'oggetto <see cref="T:System.Net.Sockets.Socket" /> per le comunicazioni.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.MulticastLoopback">
      <summary>Ottiene o imposta un valore che specifica se i pacchetti multicast in uscita devono essere recapitati all'applicazione mittente.</summary>
      <returns>
        <see langword="true" /> se il <see cref="T:System.Net.Sockets.Socket" /> riceve pacchetti multicast; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se il <see cref="T:System.Net.Sockets.Socket" /> di flusso utilizza l'algoritmo Nagle.</summary>
      <returns>
        <see langword="false" /> se il <see cref="T:System.Net.Sockets.Socket" /> utilizza l'algoritmo Nagle; in caso contrario, <see langword="true" />. Il valore predefinito è <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary>Indica se il sistema operativo sottostante e gli adattatori di rete supportano il protocollo IPv4.</summary>
      <returns>
        <see langword="true" /> se il sistema operativo e gli adattatori di rete supportano il protocollo IPv4. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary>Indica se il sistema operativo sottostante e gli adattatori di rete supportano il protocollo IPv6.</summary>
      <returns>
        <see langword="true" /> se il sistema operativo e gli adattatori di rete supportano il protocollo IPv6; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)">
      <summary>Determina lo stato del <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="microSeconds">Tempo di attesa per una risposta, espresso in microsecondi.</param>
      <param name="mode">Uno dei valori di <see cref="T:System.Net.Sockets.SelectMode" />.</param>
      <returns>Stato dell'oggetto <see cref="T:System.Net.Sockets.Socket" /> in base al valore della modalità di polling passato nel parametro <paramref name="mode" />.
  Modalità 
  Valore restituito 
 <see cref="F:System.Net.Sockets.SelectMode.SelectRead" /><see langword="true" /> se è stato chiamato il metodo <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> e vi è una connessione in sospeso; 
-oppure- 
 <see langword="true" /> se sono disponibili dati per la lettura 
-oppure- 
 <see langword="true" /> se la connessione è stata chiusa, ripristinata o terminata. 
In caso contrario, restituisce <see langword="false" />.  
  
 <see cref="F:System.Net.Sockets.SelectMode.SelectWrite" /><see langword="true" /> se viene elaborato un metodo <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> e la connessione ha avuto esito positivo; 
-oppure- 
 <see langword="true" /> se possono essere inviati dati; 
In caso contrario, restituisce <see langword="false" />.  
  
 <see cref="F:System.Net.Sockets.SelectMode.SelectError" /><see langword="true" /> se viene elaborato un metodo <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> che non si blocca e la connessione ha avuto esito negativo; 
-oppure- 
 <see langword="true" /> se non è stata impostata l'opzione <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> e sono disponibili dati fuori banda; 
In caso contrario, restituisce <see langword="false" />.</returns>
      <exception cref="T:System.NotSupportedException">Il parametro <paramref name="mode" /> non è uno dei valori di <see cref="T:System.Net.Sockets.SelectMode" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket. Vedere la sezione Note riportata di seguito.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary>Ottiene il tipo di protocollo del <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Uno dei valori di <see cref="T:System.Net.Sockets.ProtocolType" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[])">
      <summary>Riceve dati in un buffer di ricezione da un oggetto <see cref="T:System.Net.Sockets.Socket" /> associato.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nello stack di chiamate non dispone delle autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Riceve il numero specificato di byte da un <see cref="T:System.Net.Sockets.Socket" /> associato nella posizione di offset predefinita del buffer di ricezione, utilizzando il <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che rappresenta la posizione di archiviazione dei dati ricevuti.</param>
      <param name="offset">Posizione in <paramref name="buffer" /> per memorizzare i dati ricevuti.</param>
      <param name="size">Numero di byte da ricevere.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> non è una combinazione valida di valori.
-oppure-
La proprietà <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> non è stata impostata.
-oppure-
Si verifica un errore del sistema operativo durante l'accesso a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nello stack di chiamate non dispone delle autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Riceve dati in un buffer di ricezione da un <see cref="T:System.Net.Sockets.Socket" /> associato, utilizzando il <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <param name="offset">Posizione nel parametro <paramref name="buffer" /> in cui archiviare i dati ricevuti.</param>
      <param name="size">Numero di byte da ricevere.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Oggetto <see cref="T:System.Net.Sockets.SocketError" /> che memorizza l'errore del socket.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> non è una combinazione valida di valori.
-oppure-
La proprietà <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> non è impostata.
-oppure-
Si verifica un errore del sistema operativo durante l'accesso a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nello stack di chiamate non dispone delle autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Riceve in un buffer di ricezione il numero specificato di byte di dati da un oggetto <see cref="T:System.Net.Sockets.Socket" /> associato, utilizzando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <param name="size">Numero di byte da ricevere.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> supera la dimensione di <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nello stack di chiamate non dispone delle autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>Riceve dati in un buffer di ricezione da un <see cref="T:System.Net.Sockets.Socket" /> associato, utilizzando il <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nello stack di chiamate non dispone delle autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Riceve dati da un <see cref="T:System.Net.Sockets.Socket" /> associato nell'elenco dei buffer di ricezione.</summary>
      <param name="buffers">Elenco di <see cref="T:System.ArraySegment`1" /> di tipo <see cref="T:System.Byte" /> contenente i dati ricevuti.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Riceve dati in un elenco di buffer di ricezione da un <see cref="T:System.Net.Sockets.Socket" /> associato, utilizzando il <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffers">Elenco di <see cref="T:System.ArraySegment`1" /> di tipo <see cref="T:System.Byte" /> contenente i dati ricevuti.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> è <see langword="null" />.
-oppure-
<paramref name="buffers" />. Il numero totale è zero.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Riceve dati in un elenco di buffer di ricezione da un <see cref="T:System.Net.Sockets.Socket" /> associato, utilizzando il <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffers">Elenco di <see cref="T:System.ArraySegment`1" /> di tipo <see cref="T:System.Byte" /> contenente i dati ricevuti.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Oggetto <see cref="T:System.Net.Sockets.SocketError" /> che memorizza l'errore del socket.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> è <see langword="null" />.
-oppure-
<paramref name="buffers" />. Il numero totale è zero.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte})">
      <summary>Riceve dati in un buffer di ricezione da un oggetto <see cref="T:System.Net.Sockets.Socket" /> associato.</summary>
      <param name="buffer">Intervallo di byte che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nello stack di chiamate non dispone delle autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>Riceve dati in un buffer di ricezione da un <see cref="T:System.Net.Sockets.Socket" /> associato, utilizzando il <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Intervallo di byte che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di enumerazione che specifica i comportamenti di invio e ricezione.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nello stack di chiamate non dispone delle autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Riceve dati in un buffer di ricezione da un <see cref="T:System.Net.Sockets.Socket" /> associato, utilizzando il <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Intervallo di byte che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di enumerazione che specifica i comportamenti di invio e ricezione.</param>
      <param name="errorCode">Quando termina, questo metodo contiene uno dei valori di enumerazione che definisce i codici errore per il socket.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nello stack di chiamate non dispone delle autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Avvia una richiesta asincrona per ricevere dati da un oggetto <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="e">Oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> da utilizzare per questa operazione socket asincrona.</param>
      <returns>
        <see langword="true" /> se l'operazione di I/O è in sospeso. Al completamento dell'operazione verrà generato l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" />.
<see langword="false" /> se l'operazione di I/O è stata completata in modo sincrono. In questo caso, l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" /> non verrà generato e l'oggetto <paramref name="e" /> passato come parametro potrebbe essere esaminato immediatamente dopo che la chiamata al metodo è stata restituita per recuperare il risultato dell'operazione.</returns>
      <exception cref="T:System.ArgumentException">Un argomento non è valido. Le proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> o <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> sul parametro <paramref name="e" /> devono fare riferimento a buffer validi. È possibile impostare una di queste due proprietà, ma non entrambe contemporaneamente.</exception>
      <exception cref="T:System.InvalidOperationException">Era già in corso un'operazione di socket che utilizza l'oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> specificato nel parametro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è necessario Windows XP o versione successiva.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary>Ottiene o imposta un valore che specifica le dimensioni del buffer di ricezione del <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>
        <see cref="T:System.Int32" /> contenente le dimensioni, in byte, del buffer di ricezione. Il valore predefinito è 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato per un'operazione di impostazione è minore di 0.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Riceve il numero specificato di byte di dati nella posizione specificata del buffer di dati usando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato e archivia l'endpoint.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che rappresenta la posizione di archiviazione dei dati ricevuti.</param>
      <param name="offset">Posizione nel parametro <paramref name="buffer" /> in cui archiviare i dati ricevuti.</param>
      <param name="size">Numero di byte da ricevere.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Oggetto <see cref="T:System.Net.EndPoint" />, passato per riferimento, che rappresenta il server remoto.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.
-oppure-
<paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro di offset.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> non è una combinazione valida di valori.
-oppure-
La proprietà <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> non è stata impostata.
-oppure-
Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Riceve il numero di byte specificato nel buffer di dati, utilizzando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato e memorizza l'endpoint.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che rappresenta la posizione di archiviazione dei dati ricevuti.</param>
      <param name="size">Numero di byte da ricevere.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Oggetto <see cref="T:System.Net.EndPoint" />, passato per riferimento, che rappresenta il server remoto.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.
-oppure-
<paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> non è una combinazione valida di valori.
-oppure-
La proprietà <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> non è stata impostata.
-oppure-
Si verifica un errore del sistema operativo durante l'accesso a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nello stack di chiamate non dispone delle autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)">
      <summary>Riceve un datagramma nel buffer di dati e memorizza l'endpoint.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che rappresenta la posizione di archiviazione dei dati ricevuti.</param>
      <param name="remoteEP">Oggetto <see cref="T:System.Net.EndPoint" />, passato per riferimento, che rappresenta il server remoto.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.
-oppure-
<paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nello stack di chiamate non dispone delle autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Riceve un datagramma nel buffer di dati, utilizzando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato e memorizza l'endpoint.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Oggetto <see cref="T:System.Net.EndPoint" />, passato per riferimento, che rappresenta il server remoto.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.
-oppure-
<paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nello stack di chiamate non dispone delle autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Inizia a ricevere dati in modalità asincrona da un dispositivo di rete specificato.</summary>
      <param name="e">Oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> da utilizzare per questa operazione socket asincrona.</param>
      <returns>
        <see langword="true" /> se l'operazione di I/O è in sospeso. Al completamento dell'operazione verrà generato l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" />.
<see langword="false" /> se l'operazione di I/O è stata completata in modo sincrono. In questo caso, l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" /> non verrà generato e l'oggetto <paramref name="e" /> passato come parametro potrebbe essere esaminato immediatamente dopo che la chiamata al metodo è stata restituita per recuperare il risultato dell'operazione.</returns>
      <exception cref="T:System.ArgumentNullException">L'oggetto <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> non può essere null.</exception>
      <exception cref="T:System.InvalidOperationException">Era già in corso un'operazione di socket che utilizza l'oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> specificato nel parametro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è necessario Windows XP o versione successiva.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>Riceve il numero specificato di byte di dati nella posizione specificata del buffer dei dati usando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato e archivia le informazioni dell'endpoint e del pacchetto.</summary>
      <param name="buffer">Matrice di tipo <see cref="T:System.Byte" /> che rappresenta la posizione di archiviazione dei dati ricevuti.</param>
      <param name="offset">Posizione nel parametro <paramref name="buffer" /> in cui archiviare i dati ricevuti.</param>
      <param name="size">Numero di byte da ricevere.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Oggetto <see cref="T:System.Net.EndPoint" />, passato per riferimento, che rappresenta il server remoto.</param>
      <param name="ipPacketInformation">
        <see cref="T:System.Net.Sockets.IPPacketInformation" /> contenente informazioni sull'indirizzo e sull'interfaccia.</param>
      <returns>Numero di byte ricevuti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.
-oppure-
<paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro di offset.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> non è una combinazione valida di valori.
-oppure-
La proprietà <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> non è stata impostata.
-oppure-
.NET Framework viene eseguito in un processore AMD a 64 bit.
-oppure-
Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.NotSupportedException">Il sistema operativo è Windows 2000 o versioni precedenti e il metodo richiede Windows XP.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Avvia la ricezione asincrona del numero di byte specificato in una posizione specificata nel buffer di dati, utilizzando l'oggetto <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" /> specificato, e memorizza l'endpoint e le informazioni sui pacchetti.</summary>
      <param name="e">Oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> da utilizzare per questa operazione socket asincrona.</param>
      <returns>
        <see langword="true" /> se l'operazione di I/O è in sospeso. Al completamento dell'operazione verrà generato l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" />.
<see langword="false" /> se l'operazione di I/O è stata completata in modo sincrono. In questo caso, l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" /> non verrà generato e l'oggetto <paramref name="e" /> passato come parametro potrebbe essere esaminato immediatamente dopo che la chiamata al metodo è stata restituita per recuperare il risultato dell'operazione.</returns>
      <exception cref="T:System.ArgumentNullException">L'oggetto <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> non può essere null.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è necessario Windows XP o versione successiva.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveTimeout">
      <summary>Ottiene o imposta un valore che specifica l'intervallo di tempo dopo il quale si verifica il timeout di una chiamata <see cref="Overload:System.Net.Sockets.Socket.Receive" /> sincrona.</summary>
      <returns>Valore di timeout in millisecondi. Il valore predefinito è 0, che indica un periodo di timeout indeterminato. Anche il valore -1 indica un periodo di timeout indeterminato.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato per un'operazione set è minore di -1.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary>Ottiene l'endpoint remoto.</summary>
      <returns>
        <see cref="T:System.Net.EndPoint" /> con cui comunica il <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SafeHandle">
      <summary>Ottiene un oggetto <see cref="T:System.Net.Sockets.SafeSocketHandle" /> che rappresenta l'handle del socket incapsulato dall'oggetto corrente <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Un handle di socket esposto in modo sicuro per il socket incapsulato dall'oggetto <see cref="T:System.Net.Sockets.Socket" /> corrente.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary>Determina lo stato di uno o più socket.</summary>
      <param name="checkRead">Oggetto <see cref="T:System.Collections.IList" /> delle istanze di <see cref="T:System.Net.Sockets.Socket" /> di cui verificare la possibilità di lettura.</param>
      <param name="checkWrite">Oggetto <see cref="T:System.Collections.IList" /> delle istanze di <see cref="T:System.Net.Sockets.Socket" /> di cui verificare la possibilità di scrittura.</param>
      <param name="checkError">Oggetto <see cref="T:System.Collections.IList" /> delle istanze di <see cref="T:System.Net.Sockets.Socket" /> in cui verificare la presenza di errori.</param>
      <param name="microSeconds">Valore di timeout in microsecondi. Il valore -1 indica un periodo di timeout infinito.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="checkRead" /> è <see langword="null" /> o vuoto.
-e-
Il parametro <paramref name="checkWrite" /> è <see langword="null" /> o vuoto
-e-
Il parametro <paramref name="checkError" /> è <see langword="null" /> o vuoto.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[])">
      <summary>Invia dati a un <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="buffer">Matrice di <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <returns>Numero di byte inviati a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Invia il numero specificato di byte di dati a un oggetto <see cref="T:System.Net.Sockets.Socket" /> connesso, a partire dall'offset specificato e usando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Matrice di <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <param name="offset">Posizione nel buffer di dati da cui iniziare l'invio di dati.</param>
      <param name="size">Numero di byte da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Numero di byte inviati a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> non è una combinazione valida di valori.
-oppure-
Si verifica un errore del sistema operativo durante l'accesso a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Invia il numero specificato di byte di dati a un oggetto <see cref="T:System.Net.Sockets.Socket" /> connesso, a partire dall'offset specificato e utilizzando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Matrice di <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <param name="offset">Posizione nel buffer di dati da cui iniziare l'invio di dati.</param>
      <param name="size">Numero di byte da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Oggetto <see cref="T:System.Net.Sockets.SocketError" /> che memorizza l'errore del socket.</param>
      <returns>Numero di byte inviati a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> non è una combinazione valida di valori.
-oppure-
Si verifica un errore del sistema operativo durante l'accesso a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Invia il numero specificato di byte di dati a un oggetto <see cref="T:System.Net.Sockets.Socket" /> connesso, utilizzando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Matrice di <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <param name="size">Numero di byte da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Numero di byte inviati a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> è inferiore a 0 o supera la dimensione del buffer.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> non è una combinazione valida di valori.
-oppure-
Si è verificato un errore del sistema operativo durante l'accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>Invia dati a un oggetto <see cref="T:System.Net.Sockets.Socket" /> connesso utilizzando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Matrice di <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Numero di byte inviati a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Invia l'insieme di buffer dell'elenco a un <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="buffers">Elenco di oggetti <see cref="T:System.ArraySegment`1" /> di tipo <see cref="T:System.Byte" /> in cui sono contenuti i dati da inviare.</param>
      <returns>Numero di byte inviati a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> è vuoto.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket. Vedere la sezione Osservazioni riportata di seguito.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Invia l'insieme di buffer dell'elenco a un <see cref="T:System.Net.Sockets.Socket" /> connesso utilizzando i <see cref="T:System.Net.Sockets.SocketFlags" /> specificati.</summary>
      <param name="buffers">Elenco di oggetti <see cref="T:System.ArraySegment`1" /> di tipo <see cref="T:System.Byte" /> in cui sono contenuti i dati da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Numero di byte inviati a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> è vuoto.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Invia l'insieme di buffer dell'elenco a un <see cref="T:System.Net.Sockets.Socket" /> connesso utilizzando i <see cref="T:System.Net.Sockets.SocketFlags" /> specificati.</summary>
      <param name="buffers">Elenco di oggetti <see cref="T:System.ArraySegment`1" /> di tipo <see cref="T:System.Byte" /> in cui sono contenuti i dati da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Oggetto <see cref="T:System.Net.Sockets.SocketError" /> che memorizza l'errore del socket.</param>
      <returns>Numero di byte inviati a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> è vuoto.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte})">
      <summary>Invia dati a un <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="buffer">Intervallo di byte che contiene i dati da inviare.</param>
      <returns>Numero di byte inviati a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>Invia dati a un oggetto <see cref="T:System.Net.Sockets.Socket" /> connesso utilizzando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Intervallo di byte che contiene i dati da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di enumerazione che specifica i comportamenti di invio e ricezione.</param>
      <returns>Numero di byte inviati a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Invia dati a un oggetto <see cref="T:System.Net.Sockets.Socket" /> connesso utilizzando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Intervallo di byte che contiene i dati da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di enumerazione che specifica i comportamenti di invio e ricezione.</param>
      <param name="errorCode">Quando termina, questo metodo contiene uno dei valori di enumerazione che definisce i codici errore per il socket.</param>
      <returns>Numero di byte inviati a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Invia i dati in modo asincrono a un oggetto <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="e">Oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> da utilizzare per questa operazione socket asincrona.</param>
      <returns>
        <see langword="true" /> se l'operazione di I/O è in sospeso. Al completamento dell'operazione verrà generato l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" />.
<see langword="false" /> se l'operazione di I/O è stata completata in modo sincrono. In questo caso, l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" /> non verrà generato e l'oggetto <paramref name="e" /> passato come parametro potrebbe essere esaminato immediatamente dopo che la chiamata al metodo è stata restituita per recuperare il risultato dell'operazione.</returns>
      <exception cref="T:System.ArgumentException">Le proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> o <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> sul parametro <paramref name="e" /> devono fare riferimento a buffer validi. È possibile impostare una di queste due proprietà, ma non entrambe contemporaneamente.</exception>
      <exception cref="T:System.InvalidOperationException">Era già in corso un'operazione di socket che utilizza l'oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> specificato nel parametro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è necessario Windows XP o versione successiva.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> non è ancora connesso o non è stato ottenuto tramite un metodo <see cref="M:System.Net.Sockets.Socket.Accept" />, <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> o <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary>Ottiene o imposta un valore che specifica le dimensioni del buffer di invio del <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>
        <see cref="T:System.Int32" /> contenente le dimensioni, in byte, del buffer di invio. Il valore predefinito è 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato per un'operazione di impostazione è minore di 0.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String)">
      <summary>Invia il file <paramref name="fileName" /> a un oggetto connesso <see cref="T:System.Net.Sockets.Socket" /> con il flag di trasmissione <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />.</summary>
      <param name="fileName">Oggetto <see cref="T:System.String" /> che contiene il percorso e il nome del file da inviare. Questo parametro può essere <see langword="null" />.</param>
      <exception cref="T:System.NotSupportedException">Il socket non è connesso a un host remoto.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> non è in modalità di blocco e non può accettare questa chiamata sincrona.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="fileName" /> del file non è stato trovato.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions)">
      <summary>Invia il file <paramref name="fileName" /> e i buffer di dati a un oggetto <see cref="T:System.Net.Sockets.Socket" /> connesso usando il valore di <see cref="T:System.Net.Sockets.TransmitFileOptions" /> specificato.</summary>
      <param name="fileName">Oggetto <see cref="T:System.String" /> che contiene il percorso e il nome del file da inviare. Questo parametro può essere <see langword="null" />.</param>
      <param name="preBuffer">Oggetto matrice <see cref="T:System.Byte" /> che contiene i dati da inviare prima dell'invio del file. Questo parametro può essere <see langword="null" />.</param>
      <param name="postBuffer">Oggetto matrice <see cref="T:System.Byte" /> che contiene i dati da inviare dopo l'invio del file. Questo parametro può essere <see langword="null" />.</param>
      <param name="flags">Uno o più valori di <see cref="T:System.Net.Sockets.TransmitFileOptions" />.</param>
      <exception cref="T:System.NotSupportedException">Il sistema operativo non è Windows NT o versioni successive.
-oppure-
Il socket non è connesso a un host remoto.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> non è in modalità di blocco e non può accettare questa chiamata sincrona.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="fileName" /> del file non è stato trovato.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Invia in modo asincrono un insieme di file o di buffer di dati in memoria a un oggetto <see cref="T:System.Net.Sockets.Socket" /> connesso.</summary>
      <param name="e">Oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> da utilizzare per questa operazione socket asincrona.</param>
      <returns>
        <see langword="true" /> se l'operazione di I/O è in sospeso. Al completamento dell'operazione verrà generato l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" />.
<see langword="false" /> se l'operazione di I/O è stata completata in modo sincrono. In questo caso, l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" /> non verrà generato e l'oggetto <paramref name="e" /> passato come parametro potrebbe essere esaminato immediatamente dopo che la chiamata al metodo è stata restituita per recuperare il risultato dell'operazione.</returns>
      <exception cref="T:System.IO.FileNotFoundException">Impossibile trovare il file specificato dalla proprietà <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" />.</exception>
      <exception cref="T:System.InvalidOperationException">Era già in corso un'operazione di socket che utilizza l'oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> specificato nel parametro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è necessario Windows XP o versione successiva. Questa eccezione si verifica anche se l'oggetto <see cref="T:System.Net.Sockets.Socket" /> non è connesso a un host remoto.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">È in uso un oggetto <see cref="T:System.Net.Sockets.Socket" /> privo di connessione e il file inviato supera la dimensione massima del pacchetto del trasporto sottostante.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendTimeout">
      <summary>Ottiene o imposta un valore che specifica l'intervallo di tempo dopo il quale si verifica il timeout di una chiamata <see cref="Overload:System.Net.Sockets.Socket.Send" /> sincrona.</summary>
      <returns>Il valore di timeout in millisecondi. Se si imposta per la proprietà un valore compreso tra 1 e 499, il valore verrà impostato su 500. Il valore predefinito è 0, che indica un periodo di timeout indeterminato. Anche il valore -1 indica un periodo di timeout indeterminato.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato per un'operazione set è minore di -1.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Invia il numero di byte di dati specificato all'endpoint specificato, a partire dalla posizione specificata nel buffer, utilizzando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Matrice di <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <param name="offset">Posizione nel buffer di dati da cui iniziare l'invio di dati.</param>
      <param name="size">Numero di byte da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> che rappresenta la posizione di destinazione dei dati.</param>
      <returns>Numero di byte inviati.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.
-oppure-
<paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è minore di 0.
-oppure-
<paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.
-oppure-
<paramref name="size" /> è minore di 0.
-oppure-
<paramref name="size" /> è maggiore della lunghezza di <paramref name="buffer" /> meno il valore del parametro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> non è una combinazione valida di valori.
-oppure-
Si verifica un errore del sistema operativo durante l'accesso a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nello stack di chiamate non dispone delle autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Invia il numero specificato di byte di dati all'endpoint specificato, utilizzando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Matrice di <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <param name="size">Numero di byte da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> che rappresenta la posizione di destinazione dei dati.</param>
      <returns>Numero di byte inviati.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.
-oppure-
<paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="size" /> eccede la dimensione di <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)">
      <summary>Invia dati a un endpoint specifico.</summary>
      <param name="buffer">Matrice di <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <param name="remoteEP">Classe <see cref="T:System.Net.EndPoint" /> che rappresenta la destinazione dei dati.</param>
      <returns>Numero di byte inviati.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.
-oppure-
<paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Invia dati a un endpoint specifico utilizzando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato.</summary>
      <param name="buffer">Matrice di <see cref="T:System.Byte" /> che contiene i dati da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> che rappresenta la posizione di destinazione dei dati.</param>
      <returns>Numero di byte inviati.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.
-oppure-
<paramref name="remoteEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Invia i dati in modo asincrono a un host remoto specifico.</summary>
      <param name="e">Oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> da utilizzare per questa operazione socket asincrona.</param>
      <returns>
        <see langword="true" /> se l'operazione di I/O è in sospeso. Al completamento dell'operazione verrà generato l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" />.
<see langword="false" /> se l'operazione di I/O è stata completata in modo sincrono. In questo caso, l'evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sul parametro <paramref name="e" /> non verrà generato e l'oggetto <paramref name="e" /> passato come parametro potrebbe essere esaminato immediatamente dopo che la chiamata al metodo è stata restituita per recuperare il risultato dell'operazione.</returns>
      <exception cref="T:System.ArgumentNullException">L'oggetto <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> non può essere null.</exception>
      <exception cref="T:System.InvalidOperationException">Era già in corso un'operazione di socket che utilizza l'oggetto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> specificato nel parametro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">Per questo metodo è necessario Windows XP o versione successiva.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Il protocollo specificato è orientato alla connessione, ma l'oggetto <see cref="T:System.Net.Sockets.Socket" /> non è ancora connesso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)">
      <summary>Imposta il livello di protezione IP in un socket.</summary>
      <param name="level">Livello di protezione IP da impostare in questo socket.</param>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="level" /> non può essere <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" />. Non è possibile impostare il livello di protezione IP su non specificato.</exception>
      <exception cref="T:System.NotSupportedException">Il <see cref="T:System.Net.Sockets.AddressFamily" /> del socket deve essere <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)">
      <summary>Imposta l'opzione <see cref="T:System.Net.Sockets.Socket" /> specificata sul valore <see cref="T:System.Boolean" /> specificato.</summary>
      <param name="optionLevel">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">Il valore dell'opzione, rappresentato come <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>Imposta l'opzione <see cref="T:System.Net.Sockets.Socket" /> specificata sul valore specificato, rappresentato come una matrice di byte.</summary>
      <param name="optionLevel">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">Matrice di tipo <see cref="T:System.Byte" /> che rappresenta il valore dell'opzione.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>Imposta l'opzione <see cref="T:System.Net.Sockets.Socket" /> specificata sull'intero specificato.</summary>
      <param name="optionLevel">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">Valore dell'opzione.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)">
      <summary>Imposta l'opzione <see cref="T:System.Net.Sockets.Socket" /> specificata sul valore specificato, rappresentato come un oggetto.</summary>
      <param name="optionLevel">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno dei valori di <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">
        <see cref="T:System.Net.Sockets.LingerOption" /> o <see cref="T:System.Net.Sockets.MulticastOption" /> contenente il valore dell'opzione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="optionValue" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary>Disabilita le operazioni di invio e di ricezione su un <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="how">Uno dei valori <see cref="T:System.Net.Sockets.SocketShutdown" /> che specifica che l'operazione non sarà più consentita.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SocketType">
      <summary>Ottiene il tipo di <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Uno dei valori di <see cref="T:System.Net.Sockets.SocketType" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv4">
      <summary>Ottiene un valore che indica se è disponibile il supporto per IPv4 e se IPv4 è abilitato sull'host corrente.</summary>
      <returns>
        <see langword="true" /> se l'host corrente supporta il protocollo IPv4; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv6">
      <summary>Ottiene un valore che indica se Framework supporta IPv6 per determinati membri <see cref="T:System.Net.Dns" /> obsoleti.</summary>
      <returns>
        <see langword="true" /> se Framework supporta IPv6 per determinati metodi <see cref="T:System.Net.Dns" /> obsoleti; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary>Ottiene o imposta un valore che specifica la durata (TTL) dei pacchetti IP inviati dal <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>La durata (TTL).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Non è possibile impostare il valore TTL su un numero negativo.</exception>
      <exception cref="T:System.NotSupportedException">È possibile impostare questa proprietà solo per i socket inclusi nella famiglia <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket. Questo errore viene restituito anche quando si tenta di impostare TTL su un valore superiore a 255.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.UseOnlyOverlappedIO">
      <summary>Specifica se il socket deve utilizzare solo la modalità operazioni di I/O sovrapposte.</summary>
      <returns>
        <see langword="true" /> se il <see cref="T:System.Net.Sockets.Socket" /> utilizza solo operazioni di I/O sovrapposte; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Il socket è stato associato a una porta di completamento.</exception>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary>Rappresenta un'operazione socket asincrona.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary>Crea un'istanza vuota della classe <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />.</summary>
      <exception cref="T:System.NotSupportedException">La piattaforma non è supportata.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
      <summary>Ottiene o imposta il socket da utilizzare o il socket creato per accettare una connessione con un metodo socket asincrono.</summary>
      <returns>Oggetto <see cref="T:System.Net.Sockets.Socket" /> da utilizzare o socket creato per accettare una connessione con un metodo socket asincrono.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary>Ottiene il buffer di dati da utilizzare con un metodo socket asincrono.</summary>
      <returns>Matrice <see cref="T:System.Byte" /> che rappresenta il buffer di dati da utilizzare con un metodo socket asincrono.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary>Ottiene o imposta una matrice di buffer di dati da utilizzare con un metodo socket asincrono.</summary>
      <returns>Matrice <see cref="T:System.Collections.IList" /> che rappresenta una matrice di buffer di dati da utilizzare con un metodo socket asincrono.</returns>
      <exception cref="T:System.ArgumentException">Esistono buffer ambigui specificati su un'operazione di impostazione. Questa eccezione si verifica se la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> è stata impostata su un valore non Null e si tenta di impostare la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> su un valore non Null.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary>Ottiene il numero di byte trasferiti nell'operazione socket.</summary>
      <returns>Oggetto <see cref="T:System.Int32" /> contenente il numero di byte trasferiti nell'operazione socket.</returns>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary>Evento utilizzato per completare un'operazione asincrona.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary>Ottiene l'eccezione nel caso di errore di connessione quando viene utilizzato <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns>Oggetto <see cref="T:System.Exception" /> che indica la causa dell'errore di connessione quando è stato specificato un oggetto <see cref="T:System.Net.DnsEndPoint" /> per la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary>Oggetto <see cref="T:System.Net.Sockets.Socket" /> creato e connesso dopo il completamento del metodo <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />.</summary>
      <returns>Oggetto <see cref="T:System.Net.Sockets.Socket" /> connesso.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary>Ottiene la quantità massima di dati, in byte, da inviare o ricevere in un'operazione asincrona.</summary>
      <returns>Oggetto <see cref="T:System.Int32" /> che contiene la quantità massima di dati, in byte, da inviare o ricevere.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
      <summary>Ottiene o imposta un valore che specifica se il socket può essere riutilizzato dopo un'operazione di disconnessione.</summary>
      <returns>Oggetto <see cref="T:System.Boolean" /> che specifica se il socket può essere riutilizzato dopo un'operazione di disconnessione.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary>Rilascia le risorse non gestite utilizzate dall'istanza <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> e facoltativamente elimina anche le risorse gestite.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary>Rilascia le risorse usate dalla classe <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary>Ottiene il tipo di operazione socket eseguita più di recente con questo oggetto di contesto.</summary>
      <returns>Istanza di <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> che indica il tipo di operazione socket eseguita più di recente con questo oggetto di contesto.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer">
      <summary>Ottiene l'area di memoria da usare come buffer con un metodo socket asincrono.</summary>
      <returns>Area di memoria che rappresenta il buffer di dati da utilizzare con un metodo socket asincrono.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary>Ottiene l'offset, in byte, nel buffer di dati a cui fa riferimento la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</summary>
      <returns>Oggetto <see cref="T:System.Int32" /> che contiene l'offset, in byte, nel buffer di dati a cui fa riferimento la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Rappresenta un metodo chiamato quando un'operazione asincrona viene completata.</summary>
      <param name="e">Evento segnalato.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
      <summary>Ottiene l'indirizzo IP e l'interfaccia di un pacchetto ricevuto.</summary>
      <returns>Istanza di <see cref="T:System.Net.Sockets.IPPacketInformation" /> che contiene l'indirizzo IP di destinazione e l'interfaccia di un pacchetto ricevuto.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary>Ottiene o imposta l'endpoint IP remoto per un'operazione asincrona.</summary>
      <returns>Oggetto <see cref="T:System.Net.EndPoint" /> che rappresenta l'endpoint IP remoto per un'operazione asincrona.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
      <summary>Ottiene o imposta una matrice di buffer da inviare per un'operazione asincrona utilizzata dal metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</summary>
      <returns>Matrice di oggetti <see cref="T:System.Net.Sockets.SendPacketsElement" /> che rappresentano una matrice di buffer da inviare.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
      <summary>Ottiene o imposta una combinazione bit per bit di valori <see cref="T:System.Net.Sockets.TransmitFileOptions" /> per un'operazione asincrona utilizzata dal metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</summary>
      <returns>Oggetto <see cref="T:System.Net.Sockets.TransmitFileOptions" /> che contiene una combinazione bit per bit di valori utilizzati con un'operazione asincrona.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
      <summary>Ottiene o imposta la dimensione, in byte, del blocco di dati utilizzato nell'operazione di invio.</summary>
      <returns>Oggetto <see cref="T:System.Int32" /> contenente la dimensione, in byte, del blocco di dati utilizzato nell'operazione di invio.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary>Imposta il buffer di dati da utilizzare con un metodo socket asincrono.</summary>
      <param name="buffer">Buffer di dati da utilizzare con un metodo socket asincrono.</param>
      <param name="offset">Offset, in byte, nel buffer di dati dove viene avviata l'operazione.</param>
      <param name="count">Quantità massima di dati, in byte, da inviare o ricevere nel buffer.</param>
      <exception cref="T:System.ArgumentException">Sono stati specificati buffer ambigui. Questa eccezione si verifica anche se le proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> e <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> non sono null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Un argomento non è stato compreso nell'intervallo. Questa eccezione si verifica se il parametro <paramref name="offset" /> è minore di zero o maggiore della lunghezza della matrice nella proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />. Questa eccezione si verifica anche se il parametro <paramref name="count" /> è minore di zero o maggiore della lunghezza della matrice nella proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> meno il parametro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary>Imposta il buffer di dati da utilizzare con un metodo socket asincrono.</summary>
      <param name="offset">Offset, in byte, nel buffer di dati dove viene avviata l'operazione.</param>
      <param name="count">Quantità massima di dati, in byte, da inviare o ricevere nel buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Un argomento non è stato compreso nell'intervallo. Questa eccezione si verifica se il parametro <paramref name="offset" /> è minore di zero o maggiore della lunghezza della matrice nella proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />. Questa eccezione si verifica anche se il parametro <paramref name="count" /> è minore di zero o maggiore della lunghezza della matrice nella proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> meno il parametro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Memory{System.Byte})">
      <summary>Imposta l'area di memoria da usare come buffer con un metodo socket asincrono.</summary>
      <param name="buffer">Area di memoria da usare come buffer con un metodo socket asincrono.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary>Ottiene o imposta i risultati dell'operazione socket asincrona.</summary>
      <returns>Oggetto <see cref="T:System.Net.Sockets.SocketError" /> che rappresenta il risultato dell'operazione socket asincrona.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
      <summary>Ottiene i risultati di un'operazione socket asincrona o imposta il comportamento di un'operazione asincrona.</summary>
      <returns>Oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> che rappresenta i risultati di un'operazione socket asincrona.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary>Ottiene o imposta un oggetto utente o applicazione associato a questa operazione socket asincrona.</summary>
      <returns>Oggetto che rappresenta l'oggetto utente o applicazione associato a questa operazione socket asincrona.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary>Tipo di operazione socket asincrona eseguita più di recente con questo oggetto di contesto.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Accept">
      <summary>Operazione socket Accept.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary>Operazione socket Connect.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Disconnect">
      <summary>Operazione socket Disconnect.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary>Nessuna delle operazioni socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary>Operazione socket Receive.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveFrom">
      <summary>Operazione socket ReceiveFrom.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveMessageFrom">
      <summary>Operazione socket ReceiveMessageFrom.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary>Operazione socket Send.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendPackets">
      <summary>Operazione socket SendPackets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendTo">
      <summary>Operazione socket SendTo.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketFlags">
      <summary>Specifica i comportamenti di invio e ricezione di socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Broadcast">
      <summary>Indica un pacchetto broadcast.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.ControlDataTruncated">
      <summary>Indica che i dati del controllo non rientravano nel buffer interno a 64 KB e sono stati troncati.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.DontRoute">
      <summary>Invia senza usare tabelle di routing.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Multicast">
      <summary>Indica un pacchetto multicast.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.None">
      <summary>Non usa flag per questa chiamata.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.OutOfBand">
      <summary>Elabora dati fuori banda.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Partial">
      <summary>Invia o riceve parzialmente il messaggio.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Peek">
      <summary>Legge il messaggio in entrata.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Truncated">
      <summary>Il messaggio era troppo grande per rientrare nel buffer specificato ed è stato troncato.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketInformation">
      <summary>Incapsula le informazioni necessarie per duplicare un <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.Options">
      <summary>Ottiene e imposta le opzioni per un <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Istanza di <see cref="T:System.Net.Sockets.SocketInformationOptions" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.ProtocolInformation">
      <summary>Ottiene o imposta le informazioni di protocollo per un <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Matrice di tipo <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketInformationOptions">
      <summary>Descrive gli stati di un <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Connected">
      <summary>Il <see cref="T:System.Net.Sockets.Socket" /> è connesso.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Listening">
      <summary>Il <see cref="T:System.Net.Sockets.Socket" /> è in attesa di nuove connessioni.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.NonBlocking">
      <summary>Il <see cref="T:System.Net.Sockets.Socket" /> è di tipo non bloccante.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.UseOnlyOverlappedIO">
      <summary>Il <see cref="T:System.Net.Sockets.Socket" /> utilizza operazioni di I/O sovrapposte.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionLevel">
      <summary>Definisce i livelli delle opzioni di socket per i metodi <see cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" /> e <see cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IP">
      <summary>Le opzioni di <see cref="T:System.Net.Sockets.Socket" /> sono valide solo per i socket IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IPv6">
      <summary>Le opzioni di <see cref="T:System.Net.Sockets.Socket" /> sono valide solo per i socket IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Socket">
      <summary>Le opzioni di <see cref="T:System.Net.Sockets.Socket" /> sono valide per tutti i socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Tcp">
      <summary>Le opzioni di <see cref="T:System.Net.Sockets.Socket" /> sono valide solo per i socket TCP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Udp">
      <summary>Le opzioni di <see cref="T:System.Net.Sockets.Socket" /> sono valide solo per i socket UDP.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionName">
      <summary>Definisce i nomi delle opzioni di configurazione.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AcceptConnection">
      <summary>Il socket è in ascolto.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddMembership">
      <summary>Aggiunge un'appartenenza a un gruppo IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddSourceMembership">
      <summary>Unisce a un gruppo di origine.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BlockSource">
      <summary>Blocca i dati da un'origine.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Broadcast">
      <summary>Consente l'invio di messaggi trasmessi sul socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BsdUrgent">
      <summary>Usa dati urgenti come definito in RFC-1222. Questa opzione può essere impostata una sola volta. Dopo essere stata impostata, non può essere disattivata.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ChecksumCoverage">
      <summary>Imposta o ottiene la copertura checksum UDP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Debug">
      <summary>Registra informazioni di debug.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontFragment">
      <summary>Non frammenta i datagrammi IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontLinger">
      <summary>Chiude normalmente il socket senza tempo di ritardo.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontRoute">
      <summary>Non effettua il routing e invia il pacchetto direttamente agli indirizzi di interfaccia.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropMembership">
      <summary>Rilasciare un'appartenenza a un gruppo IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropSourceMembership">
      <summary>Rilascia un gruppo di origine.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Error">
      <summary>Ottiene ed elimina lo stato di errore.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ExclusiveAddressUse">
      <summary>Abilita l'associazione di un socket per l'accesso esclusivo.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Expedited">
      <summary>Usa dati accelerati come definito in RFC-1222. Questa opzione può essere impostata una sola volta. Dopo essere stata impostata, non può essere disattivata.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HeaderIncluded">
      <summary>Indica che l'applicazione fornisce l'intestazione IP per i datagrammi in uscita.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HopLimit">
      <summary>Specifica il numero massimo di hop del router per un pacchetto IPv6. È simile alla durata (TTL) per IPv4.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPOptions">
      <summary>Specifica le opzioni IP da inserire nei datagrammi in uscita.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel">
      <summary>Abilita la restrizione di un socket IPv6 a un ambito specificato, ad esempio indirizzi con lo stesso prefisso locale rispetto al collegamento o al sito. Questa opzione socket consente alle applicazioni di inserire restrizioni di accesso sui socket IPv6. Tali restrizioni consentono a un'applicazione in esecuzione su una LAN privata di proteggersi in modo semplice e affidabile da attacchi esterni. Questa opzione socket allarga o restringe l'ambito di un socket in attesa, consentendo l'accesso illimitato di utenti pubblici e privati, laddove appropriato, o limitando l'accesso solo al medesimo sito, secondo le necessità. Questa opzione socket ha definito i livelli di protezione specificati nell'enumerazione <see cref="T:System.Net.Sockets.IPProtectionLevel" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IpTimeToLive">
      <summary>Imposta il campo della durata dell'intestazione IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPv6Only">
      <summary>Indica se un socket creato per la famiglia di indirizzi AF_INET6 è limitato solo alle comunicazioni IPv6. I socket creati per la famiglia di indirizzi AF_INET6 possono essere usati per le comunicazioni IPv6 e IPv4. È possibile che in alcune applicazioni sia necessario limitare l'uso di un socket creato per la famiglia di indirizzi AF_INET6 alle sole comunicazioni IPv6. Quando questo valore è diverso da zero (l'impostazione predefinita in Windows), un socket creato per la famiglia di indirizzi AF_INET6 può essere usato per inviare e ricevere solo pacchetti IPv6. Quando questo valore è uguale a zero, un socket creato per la famiglia di indirizzi AF_INET6 può essere usato per inviare e ricevere pacchetti a e da un indirizzo IPv6 o IPv4. Si noti che la possibilità di interagire con un indirizzo IPv4 richiede l'uso di indirizzi IPv4 mappati. Questa opzione socket è supportata in Windows Vista o versioni successive.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.KeepAlive">
      <summary>Usa keep-alive.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Linger">
      <summary>Ritarda la chiusura se sono presenti dati non inviati.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MaxConnections">
      <summary>Non supportata; se usata, genera una <see cref="T:System.Net.Sockets.SocketException" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastInterface">
      <summary>Imposta l'interfaccia per i pacchetti multicast in uscita.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastLoopback">
      <summary>Loopback dell'IP multicast.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastTimeToLive">
      <summary>Durata di un IP multicast.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoChecksum">
      <summary>Invia datagrammi UDP con checksum impostato su zero.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoDelay">
      <summary>Disabilita l'algoritmo Nagle di unione dei pacchetti in invio.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.OutOfBandInline">
      <summary>Riceve dati fuori banda nel flusso dei dati normali.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.PacketInformation">
      <summary>Restituisce informazioni sui pacchetti ricevuti.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveBuffer">
      <summary>Specifica lo spazio totale di buffer per socket che deve essere riservato alle ricezioni. Non esiste alcuna relazione con la dimensione massima dei messaggi o con la dimensione della finestra TCP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveLowWater">
      <summary>Specifica il limite minimo per le operazioni di <see cref="Overload:System.Net.Sockets.Socket.Receive" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveTimeout">
      <summary>Riceve un timeout. Questa opzione è applicabile unicamente ai metodi sincroni; non influisce sui metodi asincroni quali il metodo <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseAddress">
      <summary>Consente al socket di essere associato a un indirizzo già in uso.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseUnicastPort">
      <summary>Indica che il sistema deve rinviare l'allocazione delle porte temporanee per le connessioni in uscita. Ciò equivale all'uso dell'opzione socket Winsock2 SO_REUSE_UNICASTPORT.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendBuffer">
      <summary>Specifica lo spazio totale di buffer per socket che deve essere riservato agli invii. Non esiste alcuna relazione con la dimensione massima dei messaggi o con la dimensione della finestra TCP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendLowWater">
      <summary>Specifica il limite minimo per le operazioni di <see cref="Overload:System.Net.Sockets.Socket.Send" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendTimeout">
      <summary>Invia un timeout. Questa opzione è applicabile unicamente ai metodi sincroni; non influisce sui metodi asincroni quali il metodo <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveInterval">
      <summary>Numero di secondi di attesa di una connessione TCP per una risposta keep-alive prima di inviare un altro probe keep-alive.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveRetryCount">
      <summary>Numero di probe keep-alive TCP che verranno inviati prima che la connessione venga terminata.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveTime">
      <summary>Numero di secondi per cui una connessione TCP rimarrà attiva/inattiva prima dell'invio di probe keep-alive al computer remoto.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Type">
      <summary>Ottiene il tipo di socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TypeOfService">
      <summary>Modifica il campo relativo al tipo di servizio dell'intestazione IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UnblockSource">
      <summary>Sblocca un'origine precedentemente bloccata.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateAcceptContext">
      <summary>Aggiorna le proprietà di un socket accettato usando quelle di un socket esistente. Equivale a usare l'opzione socket Winsock2 SO_UPDATE_ACCEPT_CONTEXT ed è supportata solo sui socket orientati alla connessione.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateConnectContext">
      <summary>Aggiorna le proprietà di un socket connesso usando quelle di un socket esistente. Equivale a usare l'opzione socket Winsock2 SO_UPDATE_CONNECT_CONTEXT ed è supportata solo sui socket orientati alla connessione.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UseLoopback">
      <summary>Ignora l'hardware quando possibile.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveFromResult">
      <summary>Il risultato di un'operazione <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.ReceivedBytes">
      <summary>Numero di byte ricevuti. Se l'operazione <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> non è riuscita, il valore sarà 0.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.RemoteEndPoint">
      <summary>Il <see cref="T:System.Net.EndPoint" /> di origine.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveMessageFromResult">
      <summary>Il risultato di un'operazione <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.PacketInformation">
      <summary>
        <see cref="T:System.Net.Sockets.IPPacketInformation" /> contenente informazioni sull'indirizzo e sull'interfaccia.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.ReceivedBytes">
      <summary>Numero di byte ricevuti. Se l'operazione <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> non è riuscita, questo valore sarà 0.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.RemoteEndPoint">
      <summary>Il <see cref="T:System.Net.EndPoint" /> di origine.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.SocketFlags">
      <summary>Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" /> relativi al pacchetto ricevuto.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary>Definisce le costanti utilizzate dal metodo <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary>Disabilita un <see cref="T:System.Net.Sockets.Socket" /> per l'invio e la ricezione. Questo campo è costante.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary>Disabilita un <see cref="T:System.Net.Sockets.Socket" /> per la ricezione. Questo campo è costante.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary>Disabilita un <see cref="T:System.Net.Sockets.Socket" /> per l'invio. Questo campo è costante.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketTaskExtensions">
      <summary>Questa classe contiene metodi di estensione per la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)">
      <summary>Esegue un'operazione asincrona per accettare un tentativo di connessione in ingresso nel socket.</summary>
      <param name="socket">Il socket che è in ascolto per le connessioni.</param>
      <returns>Attività asincrona che viene completata con un oggetto <see cref="T:System.Net.Sockets.Socket" /> per la gestione della comunicazione con l'host remoto.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
      <summary>Esegue un'operazione asincrona per accettare un tentativo di connessione in ingresso nel socket.</summary>
      <param name="socket">Il socket in ascolto per le connessioni in ingresso.</param>
      <param name="acceptSocket">Oggetto <see cref="T:System.Net.Sockets.Socket" /> accettato. Questo valore può essere <see langword="null" />.</param>
      <returns>Attività asincrona che viene completata con un oggetto <see cref="T:System.Net.Sockets.Socket" /> per la gestione della comunicazione con l'host remoto.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
      <summary>Stabilisce una connessione a un host remoto.</summary>
      <param name="socket">Socket usato per stabilire una connessione.</param>
      <param name="remoteEP">Endpoint che rappresenta il dispositivo remoto.</param>
      <returns>Attività asincrona.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
      <summary>Stabilisce una connessione a un host remoto. L'host è specificato da un indirizzo IP e da un numero di porta.</summary>
      <param name="socket">Il socket per eseguire l'operazione di connessione.</param>
      <param name="address">L'indirizzo IP dell'host remoto.</param>
      <param name="port">Numero di porta dell'host remoto.</param>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
      <summary>Stabilisce una connessione a un host remoto. L'host è specificato da una matrice di indirizzi IP e da un numero di porta.</summary>
      <param name="socket">Il socket in cui viene eseguita l'operazione di connessione.</param>
      <param name="addresses">L'indirizzo IP dell'host remoto.</param>
      <param name="port">Numero di porta dell'host remoto.</param>
      <returns>Attività che rappresenta l'operazione di connessione asincrona.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
      <summary>Stabilisce una connessione a un host remoto. L'host viene specificato da un nome host e da un numero di porta.</summary>
      <param name="socket">Il socket per eseguire l'operazione di connessione.</param>
      <param name="host">Il nome dell'host remoto.</param>
      <param name="port">Numero di porta dell'host remoto.</param>
      <returns>Attività asincrona.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>Riceve i dati da un socket connesso.</summary>
      <param name="socket">Socket in cui eseguire l'operazione di ricezione.</param>
      <param name="buffer">Matrice che rappresenta la posizione di archiviazione dei dati ricevuti.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Attività che rappresenta l'operazione di ricezione asincrona. Il valore del parametro <paramref name="TResult" /> contiene il numero di byte ricevuti.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Riceve i dati da un socket connesso.</summary>
      <param name="socket">Socket in cui eseguire l'operazione di ricezione.</param>
      <param name="buffers">Matrice che rappresenta la posizione di archiviazione dei dati ricevuti.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Attività che rappresenta l'operazione di ricezione asincrona. Il valore del parametro <paramref name="TResult" /> contiene il numero di byte ricevuti.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Memory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <summary>Riceve i dati da un socket connesso.</summary>
      <param name="socket">Socket in cui eseguire l'operazione di ricezione.</param>
      <param name="buffer">Area di memoria che costituisce la posizione di archiviazione per i dati ricevuti.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="cancellationToken">Token di annullamento che può essere usato per segnalare che l'operazione asincrona deve essere annullata.</param>
      <returns>Attività che viene completata con il numero di byte ricevuti oppure 0 se è stata raggiunta la fine del flusso.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Riceve i dati da un dispositivo di rete specificato.</summary>
      <param name="socket">Il socket in cui eseguire l'operazione ReceiveFrom.</param>
      <param name="buffer">Una matrice di tipo Byte che rappresenta la posizione di archiviazione dei dati ricevuti.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEndPoint">Un endpoint che rappresenta l'origine dei dati.</param>
      <returns>Un'attività asincrona che viene completata con uno struct SocketReceiveFromResult.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Riceve il numero specificato di byte di dati nella posizione specificata del buffer dei dati usando l'oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> specificato e archivia le informazioni dell'endpoint e del pacchetto.</summary>
      <param name="socket">Il socket nel quale eseguire l'operazione.</param>
      <param name="buffer">Matrice che rappresenta la posizione di archiviazione dei dati ricevuti.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEndPoint">Oggetto <see cref="T:System.Net.EndPoint" /> che rappresenta il server remoto.</param>
      <returns>Un'attività asincrona che viene completata con uno struct <see cref="T:System.Net.Sockets.SocketReceiveMessageFromResult" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>Invia i dati a un socket connesso.</summary>
      <param name="socket">Il socket nel quale eseguire l'operazione.</param>
      <param name="buffer">Matrice di tipo Byte che contiene i dati da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Attività asincrona che viene completata con il numero di byte inviati al socket, se l'operazione è riuscita. In caso contrario, l'attività viene completata con un errore di socket non valido.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Invia i dati a un socket connesso.</summary>
      <param name="socket">Il socket nel quale eseguire l'operazione.</param>
      <param name="buffers">Matrice che contiene i dati da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Attività asincrona che viene completata con il numero di byte inviati al socket, se l'operazione è riuscita. In caso contrario, l'attività viene completata con un errore di socket non valido.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ReadOnlyMemory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <summary>Invia i dati a un socket connesso.</summary>
      <param name="socket">Il socket nel quale eseguire l'operazione.</param>
      <param name="buffer">Area di memoria che contiene i dati da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="cancellationToken">Token di annullamento che può essere usato per segnalare che l'operazione asincrona deve essere annullata.</param>
      <returns>Attività che viene completata con il numero di byte inviati al socket, se l'operazione è riuscita. In caso contrario, l'attività viene completata con un errore di socket non valido.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Invia i dati in modo asincrono a un host remoto specifico.</summary>
      <param name="socket">Il socket nel quale eseguire l'operazione.</param>
      <param name="buffer">Matrice che contiene i dati da inviare.</param>
      <param name="socketFlags">Combinazione bit per bit dei valori di <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Oggetto <see cref="T:System.Net.EndPoint" /> che rappresenta il dispositivo remoto.</param>
      <returns>Attività asincrona completata con il numero di byte inviati, se l'operazione è riuscita. In caso contrario, l'attività viene completata con un errore di socket non valido.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary>Specifica il tipo di socket rappresentato da un'istanza della classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Dgram">
      <summary>Supporta datagrammi, che sono messaggi senza connessione, non affidabili di lunghezza massima fissa (generalmente piccola). I messaggi potrebbero essere persi o duplicati e potrebbero arrivare non nell'ordine corretto. Un oggetto <see cref="T:System.Net.Sockets.Socket" /> di tipo <see cref="F:System.Net.Sockets.SocketType.Dgram" /> non richiede alcuna connessione prima dell'invio e della ricezione dei dati ed è in grado di comunicare con più peer. <see cref="F:System.Net.Sockets.SocketType.Dgram" /> usa il Datagram Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) e <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> famiglia di indirizzi.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Raw">
      <summary>Supporta l'accesso al protocollo di trasporto sottostante. L'uso di <see cref="F:System.Net.Sockets.SocketType.Raw" /> consente di comunicare tramite protocolli come Internet Control Message Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) e Internet Group Management Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />). È necessario che nell'applicazione venga fornita un'intestazione IP completa durante l'invio. I datagrammi ricevuti vengono restituiti con l'intestazione IP e le opzioni non modificate.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Rdm">
      <summary>Supporta messaggi senza connessione, orientati ai messaggi e consegnati in modo affidabile; inoltre conserva i limiti del messaggio nei dati. I messaggi Rdm ( Reliably-Delivered Messages) arrivano non duplicati e nell'ordine corretto. Inoltre, il mittente viene avvisato se i messaggi vengono persi. Se si inizializza un <see cref="T:System.Net.Sockets.Socket" /> utilizzando <see cref="F:System.Net.Sockets.SocketType.Rdm" />, non sarà necessario stabilire una connessione all'host remoto prima di inviare e ricevere dati. Con <see cref="F:System.Net.Sockets.SocketType.Rdm" /> è possibile comunicare con più peer.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Seqpacket">
      <summary>Fornisce il trasferimento bidirezionale orientato alla connessione e affidabile di flussi di byte ordinati in una rete. <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> non duplica i dati e preserva i limiti all'interno del flusso di dati. Un <see cref="T:System.Net.Sockets.Socket" /> di tipo <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> comunica con un unico peer e richiede una connessione all'host remoto prima di poter iniziare una comunicazione.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary>Supporta flussi di byte affidabili, a due vie e orientati alla connessione senza la duplicazione di dati e senza la conservazione dei limiti. Un oggetto <see cref="T:System.Net.Sockets.Socket" /> di questo tipo comunica con un unico peer e richiede una connessione all'host remoto prima di poter avviare una comunicazione. <see cref="F:System.Net.Sockets.SocketType.Stream" /> usa il protocollo TCP (Transmission Control Protocol) (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) e <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> famiglia di indirizzi.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary>Specifica un tipo di <see cref="T:System.Net.Sockets.Socket" /> sconosciuto.</summary>
    </member>
    <member name="T:System.Net.Sockets.TcpClient">
      <summary>Fornisce connessioni client per i servizi di rete TCP.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.TcpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.TcpClient" /> e la associa all'endpoint locale specificato.</summary>
      <param name="localEP">Oggetto <see cref="T:System.Net.IPEndPoint" /> a cui associare l'oggetto <see cref="T:System.Net.Sockets.Socket" /> TCP.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="localEP" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.TcpClient" /> con la famiglia specificata.</summary>
      <param name="family">La <see cref="P:System.Net.IPAddress.AddressFamily" /> del protocollo IP.</param>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="family" /> non è uguale a AddressFamily.InterNetwork
-oppure-
Il parametro <paramref name="family" /> non è uguale a AddressFamily.InterNetworkV6</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.TcpClient" /> ed effettua la connessione alla porta specificata sull'host specificato.</summary>
      <param name="hostname">Nome DNS dell'host remoto a cui si intende connettersi.</param>
      <param name="port">Numero di porta dell'host remoto a cui si intende connettersi.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="hostname" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Active">
      <summary>Ottiene o imposta un valore che indica se è stata stabilita una connessione.</summary>
      <returns>
        <see langword="true" /> se la connessione è stata stabilita; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Available">
      <summary>Ottiene la quantità dei dati ricevuti dalla rete e disponibili per essere letti.</summary>
      <returns>Numero di byte di dati ricevuti dalla rete e disponibili per essere letti.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Avvia una richiesta asincrona di una connessione all'host remoto. L'host remoto viene specificato da un <see cref="T:System.Net.IPAddress" /> e un numero di porta (<see cref="T:System.Int32" />).</summary>
      <param name="address">
        <see cref="T:System.Net.IPAddress" /> dell'host remoto.</param>
      <param name="port">Numero di porta dell'host remoto.</param>
      <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
      <param name="state">Oggetto definito dall'utente che contiene informazioni sull'operazione di connessione. Questo oggetto viene passato al delegato <paramref name="requestCallback" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla connessione asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di porta non è valido.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Avvia una richiesta asincrona di una connessione all'host remoto. L'host remoto viene specificato da una matrice di <see cref="T:System.Net.IPAddress" /> e un numero di porta (<see cref="T:System.Int32" />).</summary>
      <param name="addresses">Almeno un <see cref="T:System.Net.IPAddress" />, che specifica gli host remoti.</param>
      <param name="port">Numero di porta degli host remoti.</param>
      <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
      <param name="state">Oggetto definito dall'utente che contiene informazioni sull'operazione di connessione. Questo oggetto viene passato al delegato <paramref name="requestCallback" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla connessione asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="addresses" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di porta non è valido.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Avvia una richiesta asincrona di una connessione all'host remoto. L'host remoto viene specificato da un nome host (<see cref="T:System.String" />) e un numero di porta (<see cref="T:System.Int32" />).</summary>
      <param name="host">Il nome dell'host remoto.</param>
      <param name="port">Numero di porta dell'host remoto.</param>
      <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
      <param name="state">Oggetto definito dall'utente che contiene informazioni sull'operazione di connessione. Questo oggetto viene passato al delegato <paramref name="requestCallback" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla connessione asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="host" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di porta non è valido.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Client">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante.</summary>
      <returns>Oggetto <see cref="T:System.Net.Sockets.Socket" /> di rete sottostante.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Close">
      <summary>Elimina questa istanza di <see cref="T:System.Net.Sockets.TcpClient" /> e richiede che la connessione TCP sottostante venga chiusa.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Connette il client a un host TCP remoto usando l'indirizzo IP e il numero di porta specificati.</summary>
      <param name="address">
        <see cref="T:System.Net.IPAddress" /> dell'host a cui si desidera connettersi.</param>
      <param name="port">Numero di porta a cui si intende connettersi.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>Connette il client a un host TCP remoto usando gli indirizzi IP e il numero di porta specificati.</summary>
      <param name="ipAddresses">Matrice <see cref="T:System.Net.IPAddress" /> dell'host a cui si desidera connettersi.</param>
      <param name="port">Numero di porta a cui si desidera connettersi.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="ipAddresses" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di porta non è valido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</exception>
      <exception cref="T:System.NotSupportedException">Questo metodo è valido per i socket che utilizzano il flag <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
      <summary>Connette il client a un host TCP remoto usando l'endpoint remoto della rete specificato.</summary>
      <param name="remoteEP">
        <see cref="T:System.Net.IPEndPoint" /> a cui si intende connettersi.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="remoteEp" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
      <summary>Connette il client alla porta specificata sull'host specificato.</summary>
      <param name="hostname">Nome DNS dell'host remoto a cui si intende connettersi.</param>
      <param name="port">Numero di porta dell'host remoto a cui si intende connettersi.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="hostname" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
      <summary>Connette il client a un host TCP remoto utilizzando l'indirizzo IP specificato e il numero di porta specificati come operazione asincrona.</summary>
      <param name="address">
        <see cref="T:System.Net.IPAddress" /> dell'host a cui si intende connettersi.</param>
      <param name="port">Numero di porta a cui si intende connettersi.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
      <summary>Connette il client a un host TCP remoto utilizzando gli indirizzi IP specificati e il numero di porta specificati come operazione asincrona.</summary>
      <param name="addresses">Matrice <see cref="T:System.Net.IPAddress" /> dell'host a cui si desidera connettersi.</param>
      <param name="port">Numero di porta a cui si intende connettersi.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="ipAddresses" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di porta non è valido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
      <exception cref="T:System.Security.SecurityException">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</exception>
      <exception cref="T:System.NotSupportedException">Questo metodo è valido per i socket che utilizzano il flag <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
      <summary>Connette il client alla porta TCP specificata sull'host specificato come operazione asincrona.</summary>
      <param name="host">Nome DNS dell'host remoto a cui si intende connettersi.</param>
      <param name="port">Numero di porta dell'host remoto a cui si intende connettersi.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="hostname" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> è chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Connected">
      <summary>Ottiene un valore che indica se il <see cref="T:System.Net.Sockets.Socket" /> sottostante di un <see cref="T:System.Net.Sockets.TcpClient" /> è connesso a un host remoto.</summary>
      <returns>
        <see langword="true" /> se il socket <see cref="P:System.Net.Sockets.TcpClient.Client" /> è stato connesso a una risorsa remota nel corso dell'operazione più recente, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose">
      <summary>Rilascia le risorse gestite e non gestite usate dall'oggetto <see cref="T:System.Net.Sockets.TcpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Sockets.TcpClient" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">Impostare su <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
      <summary>Termina un tentativo di connessione sincrona in sospeso.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> restituito da un chiamata a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="asyncResult" /> non è stato restituito da una chiamata a un metodo <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> è stato precedentemente chiamato per la connessione asincrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
      <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se la classe <see cref="T:System.Net.Sockets.TcpClient" /> consente a un unico client di usare una porta.</summary>
      <returns>
        <see langword="true" /> se la classe <see cref="T:System.Net.Sockets.TcpClient" /> consente a un solo client di utilizzare una porta specifica; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="true" /> per Windows Server 2003 e Windows XP Service Pack 2 e versioni successive e <see langword="false" /> per tutte le altre versioni.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket sottostante.</exception>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Finalize">
      <summary>Rilascia le risorse usate dalla classe <see cref="T:System.Net.Sockets.TcpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.GetStream">
      <summary>Restituisce il <see cref="T:System.Net.Sockets.NetworkStream" /> utilizzato per inviare e ricevere dati.</summary>
      <returns>Oggetto <see cref="T:System.Net.Sockets.NetworkStream" /> sottostante.</returns>
      <exception cref="T:System.InvalidOperationException">Il <see cref="T:System.Net.Sockets.TcpClient" /> non è connesso a un host remoto.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.TcpClient" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.LingerState">
      <summary>Ottiene o imposta le informazioni sullo stato di ritardo del socket associato.</summary>
      <returns>Oggetto <see cref="T:System.Net.Sockets.LingerOption" />. Per impostazione predefinita, il tempo di ritardo è disabilitato.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.NoDelay">
      <summary>Ottiene o imposta un valore che disabilita un ritardo quando i buffer di invio o di ricezione non sono pieni.</summary>
      <returns>
        <see langword="true" /> se il ritardo è disabilitato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
      <summary>Ottiene o imposta la dimensione del buffer di ricezione.</summary>
      <returns>Dimensione del buffer di ricezione, espressa in byte. Il valore predefinito è 8192 byte.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'impostazione delle dimensioni del buffer.
-oppure-
Nelle applicazioni di .NET Compact Framework non è possibile impostare questa proprietà. Per risolvere il problema, vedere la nota sulla piattaforma nella sezione Osservazioni.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
      <summary>Ottiene o imposta il tempo di attesa di <see cref="T:System.Net.Sockets.TcpClient" /> prima di ricevere i dati una volta iniziata un'operazione di lettura.</summary>
      <returns>Valore di timeout della connessione in millisecondi. Il valore predefinito è 0.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendBufferSize">
      <summary>Ottiene o imposta la dimensione del buffer di invio.</summary>
      <returns>Dimensione del buffer di invio in byte. Il valore predefinito è 8192 byte.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendTimeout">
      <summary>Ottiene o imposta il tempo per cui un <see cref="T:System.Net.Sockets.TcpClient" /> attende che un'operazione di invio venga completata.</summary>
      <returns>Valore del timeout di invio in millisecondi. Il valore predefinito è 0.</returns>
    </member>
    <member name="T:System.Net.Sockets.TcpListener">
      <summary>Vengono attese le connessioni dai client di rete TCP.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.TcpListener" /> che è in attesa sulla porta specificata.</summary>
      <param name="port">Porta su cui attendere i tentativi di connessione in ingresso.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.TcpListener" /> in attesa dei tentativi di connessione in ingrasso sull'indirizzo IP e sul numero di porta specificati.</summary>
      <param name="localaddr">
        <see cref="T:System.Net.IPAddress" /> che rappresenta l'indirizzo IP locale.</param>
      <param name="port">Porta su cui attendere i tentativi di connessione in ingresso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localaddr" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.TcpListener" /> con l'endpoint locale specificato.</summary>
      <param name="localEP">
        <see cref="T:System.Net.IPEndPoint" /> che rappresenta l'endpoint locale a cui associare il <see cref="T:System.Net.Sockets.Socket" /> listener.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocket">
      <summary>Accetta una richiesta di connessione in sospeso.</summary>
      <returns>Oggetto <see cref="T:System.Net.Sockets.Socket" /> utilizzato per inviare e ricevere dati.</returns>
      <exception cref="T:System.InvalidOperationException">Il listener non è stato avviato con una chiamata a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
      <summary>Accetta una richiesta di connessione in sospeso come operazione asincrona.</summary>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce <see cref="T:System.Net.Sockets.Socket" /> utilizzato per inviare e ricevere i dati.</returns>
      <exception cref="T:System.InvalidOperationException">Il listener non è stato avviato con una chiamata a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
      <summary>Accetta una richiesta di connessione in sospeso.</summary>
      <returns>Oggetto <see cref="T:System.Net.Sockets.TcpClient" /> utilizzato per inviare e ricevere dati.</returns>
      <exception cref="T:System.InvalidOperationException">Il listener non è stato avviato con una chiamata a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Per ottenere il codice di errore specificato, utilizzare la proprietà <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />. Una volta ottenuto il codice, è possibile trovare una descrizione dettagliata dell'errore nella documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
      <summary>Accetta una richiesta di connessione in sospeso come operazione asincrona.</summary>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce <see cref="T:System.Net.Sockets.TcpClient" /> utilizzato per inviare e ricevere i dati.</returns>
      <exception cref="T:System.InvalidOperationException">Il listener non è stato avviato con una chiamata a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Per ottenere il codice di errore specificato, utilizzare la proprietà <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />. Una volta ottenuto il codice, è possibile trovare una descrizione dettagliata dell'errore nella documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Active">
      <summary>Ottiene un valore che indica se <see cref="T:System.Net.Sockets.TcpListener" /> è attivamente in attesa di connessioni client.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Net.Sockets.TcpListener" /> è attivamente in attesa; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
      <summary>Abilita o disabilita l'attraversamento NAT (Network Address Translation) in un'istanza di <see cref="T:System.Net.Sockets.TcpListener" />.</summary>
      <param name="allowed">Valore booleano che specifica se abilitare o disabilitare l'attraversamento NAT.</param>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> è stato chiamato dopo avere chiamato il metodo <see cref="M:System.Net.Sockets.TcpListener.Start" /></exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per accettare un tentativo di connessione in ingresso.</summary>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
      <param name="state">Oggetto definito dall'utente contenente informazioni sull'operazione di accettazione. Questo oggetto viene passato al delegato <paramref name="callback" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla creazione asincrona di <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per accettare un tentativo di connessione in ingresso.</summary>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare quando l'operazione è completa.</param>
      <param name="state">Oggetto definito dall'utente contenente informazioni sull'operazione di accettazione. Questo oggetto viene passato al delegato <paramref name="callback" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla creazione asincrona di <see cref="T:System.Net.Sockets.TcpClient" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
      <summary>Crea una nuova istanza di <see cref="T:System.Net.Sockets.TcpListener" /> in ascolto sulla porta specificata.</summary>
      <param name="port">Porta su cui attendere i tentativi di connessione in ingresso.</param>
      <returns>Nuova istanza di <see cref="T:System.Net.Sockets.TcpListener" /> in ascolto sulla porta specificata.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
      <summary>Accetta in modo asincrono una connessione in ingresso e crea un nuovo oggetto <see cref="T:System.Net.Sockets.Socket" /> per gestire la comunicazione con l'host remoto.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</param>
      <returns>Oggetto <see cref="T:System.Net.Sockets.Socket" />.
Oggetto <see cref="T:System.Net.Sockets.Socket" /> utilizzato per inviare e ricevere dati.</returns>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="asyncResult" /> non è stato creato da una chiamata al metodo <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> è stato chiamato precedentemente.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
      <summary>Accetta in modo asincrono una connessione in ingresso e crea un nuovo oggetto <see cref="T:System.Net.Sockets.TcpClient" /> per gestire la comunicazione con l'host remoto.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />.</param>
      <returns>Oggetto <see cref="T:System.Net.Sockets.TcpClient" />.
Oggetto <see cref="T:System.Net.Sockets.TcpClient" /> utilizzato per inviare e ricevere dati.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
      <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se il <see cref="T:System.Net.Sockets.TcpListener" /> consente a un unico socket sottostante di restare in attesa di una porta specifica.</summary>
      <returns>
        <see langword="true" /> se il <see cref="T:System.Net.Sockets.TcpListener" /> consente a un solo <see cref="T:System.Net.Sockets.TcpListener" /> di restare in attesa di una porta specifica; in caso contrario, <see langword="false" />. . Il valore predefinito è <see langword="true" /> per Windows Server 2003 e Windows XP Service Pack 2 e versioni successive e <see langword="false" /> per tutte le altre versioni.</returns>
      <exception cref="T:System.InvalidOperationException">Il <see cref="T:System.Net.Sockets.TcpListener" /> è stato avviato. Chiamare il metodo <see cref="M:System.Net.Sockets.TcpListener.Stop" />, quindi impostare la proprietà <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket sottostante.</exception>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.LocalEndpoint">
      <summary>Ottiene il <see cref="T:System.Net.EndPoint" /> sottostante del <see cref="T:System.Net.Sockets.TcpListener" /> corrente.</summary>
      <returns>
        <see cref="T:System.Net.EndPoint" /> a cui è associato il <see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Pending">
      <summary>Determina se sono presenti richieste di connessione in sospeso.</summary>
      <returns>
        <see langword="true" /> se vi sono connessioni in sospeso; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Il listener non è stato avviato con una chiamata a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Server">
      <summary>Ottiene il <see cref="T:System.Net.Sockets.Socket" /> di rete sottostante.</summary>
      <returns>Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start">
      <summary>Avvia l'attesa delle richieste di connessione in ingresso.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Per ottenere il codice di errore specificato, utilizzare la proprietà <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />. Una volta ottenuto il codice, è possibile trovare una descrizione dettagliata dell'errore nella documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
      <summary>Avvia l'attesa delle richieste di connessione in ingresso specificando un numero massimo di possibili connessioni in sospeso.</summary>
      <param name="backlog">Lunghezza massima della coda delle connessioni in sospeso.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="backlog" /> è minore di zero o supera il numero massimo di connessioni consentite.</exception>
      <exception cref="T:System.InvalidOperationException">Il <see cref="T:System.Net.Sockets.Socket" /> sottostante è null.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Stop">
      <summary>Chiude il listener.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Per ottenere il codice di errore specificato, utilizzare la proprietà <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />. Una volta ottenuto il codice, è possibile trovare una descrizione dettagliata dell'errore nella documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2.</exception>
    </member>
    <member name="T:System.Net.Sockets.TransmitFileOptions">
      <summary>L'enumerazione <see cref="T:System.Net.Sockets.TransmitFileOptions" /> definisce i valori utilizzati nelle richieste di trasferimento dei file.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.Disconnect">
      <summary>Avviare una disconnessione a livello di trasporto dopo che tutti i dati dei file sono stati accodati per la trasmissione. Se utilizzati con <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />, i flag riportano il socket a uno stato disconnesso consentendone il riutilizzo.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket">
      <summary>L'handle del socket può essere riutilizzato una volta completata la richiesta. Questo flag è valido solo se viene specificato anche <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />. Se utilizzati con <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />, i flag riportano il socket a uno stato disconnesso consentendone il riutilizzo.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread">
      <summary>Utilizzare il thread predefinito per elaborare richieste di trasferimento di file di lunga durata.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseKernelApc">
      <summary>Utilizzare chiamate asincrone di procedura del kernel anziché thread di lavoro per elaborare richieste di trasferimento dei file di lunga durata. Vengono definite richieste di lunga durata le richieste per le quali sono necessarie più letture del file o della cache. La richiesta dipende pertanto dalle dimensioni del file e dalla lunghezza del pacchetto di invio specificata.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseSystemThread">
      <summary>Utilizzare thread di sistema per elaborare richieste di trasferimento dei file di lunga durata.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.WriteBehind">
      <summary>Completare immediatamente la richiesta di trasferimento dei file, senza sospensioni. Se viene specificato questo flag e il trasferimento dei file viene completato correttamente, i dati sono stati accettati dal sistema ma potrebbero non essere stati riconosciuti dal punto finale remoto. Non utilizzare questo flag con i flag <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> e <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />.</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpClient">
      <summary>Fornisce servizi di rete UDP (User Datagram Protocol).</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpClient" /> e la associa al numero di porta locale fornito.</summary>
      <param name="port">Numero di porta locale da cui si desidera comunicare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="port" /> è maggiore di <see cref="F:System.Net.IPEndPoint.MaxPort" /> o minore di <see cref="F:System.Net.IPEndPoint.MinPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpClient" /> e la associa al numero di porta locale fornito.</summary>
      <param name="port">Porta su cui attendere i tentativi di connessione in ingresso.</param>
      <param name="family">Uno dei valori <see cref="T:System.Net.Sockets.AddressFamily" /> mediante il quale viene specificato lo schema di indirizzamento del socket.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> non è <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> è maggiore di <see cref="F:System.Net.IPEndPoint.MaxPort" /> o minore di <see cref="F:System.Net.IPEndPoint.MinPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpClient" /> e la associa all'endpoint locale specificato.</summary>
      <param name="localEP">
        <see cref="T:System.Net.IPEndPoint" /> che rappresenta l'endpoint locale a cui associare la connessione UDP.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <param name="family">Uno dei valori <see cref="T:System.Net.Sockets.AddressFamily" /> mediante il quale viene specificato lo schema di indirizzamento del socket.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> non è <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpClient" /> e stabilisce un host remoto predefinito.</summary>
      <param name="hostname">Nome dell'host remoto DNS a cui si desidera connettersi.</param>
      <param name="port">Numero di porta remota a cui si desidera connettersi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Active">
      <summary>Ottiene o imposta un valore che indica se è stato stabilito un host remoto predefinito.</summary>
      <returns>
        <see langword="true" /> se è attiva una connessione; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
      <summary>Abilita o disabilita l'attraversamento NAT (Network Address Translation) in un'istanza di <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <param name="allowed">Valore booleano che specifica se abilitare o disabilitare l'attraversamento NAT.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Available">
      <summary>Ottiene la quantità di dati ricevuti dalla rete disponibili per essere letti.</summary>
      <returns>Numero di byte di dati ricevuti dalla rete.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Riceve un datagramma da un host remoto in modalità asincrona.</summary>
      <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
      <param name="state">Oggetto definito dall'utente contenente informazioni sull'operazione di ricezione. Questo oggetto viene passato al delegato <paramref name="requestCallback" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla ricezione asincrona.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Invia un datagramma a un host remoto in modalità asincrona. La destinazione è stata specificata precedentemente da una chiamata al metodo <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</summary>
      <param name="datagram">Matrice <see cref="T:System.Byte" /> contenente i dati da inviare.</param>
      <param name="bytes">Numero di byte da inviare.</param>
      <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
      <param name="state">Oggetto definito dall'utente contenente informazioni sull'operazione di invio. Questo oggetto viene passato al delegato <paramref name="requestCallback" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento all'invio asincrono.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>Invia un datagramma a una destinazione in modalità asincrona. La destinazione è specificata da una classe <see cref="T:System.Net.EndPoint" />.</summary>
      <param name="datagram">Matrice <see cref="T:System.Byte" /> contenente i dati da inviare.</param>
      <param name="bytes">Numero di byte da inviare.</param>
      <param name="endPoint">Classe <see cref="T:System.Net.EndPoint" /> che rappresenta la destinazione dei dati.</param>
      <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
      <param name="state">Oggetto definito dall'utente contenente informazioni sull'operazione di invio. Questo oggetto viene passato al delegato <paramref name="requestCallback" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento all'invio asincrono.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Invia un datagramma a una destinazione in modalità asincrona. La destinazione è specificata mediante il nome dell'host e il numero di porta.</summary>
      <param name="datagram">Matrice <see cref="T:System.Byte" /> contenente i dati da inviare.</param>
      <param name="bytes">Numero di byte da inviare.</param>
      <param name="hostname">Host di destinazione.</param>
      <param name="port">Numero della porta di destinazione.</param>
      <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
      <param name="state">Oggetto definito dall'utente contenente informazioni sull'operazione di invio. Questo oggetto viene passato al delegato <paramref name="requestCallback" /> al completamento dell'operazione.</param>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento all'invio asincrono.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Client">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Net.Sockets.Socket" /> di rete sottostante.</summary>
      <returns>Oggetto <see cref="T:System.Net.Sockets.Socket" /> di rete sottostante.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Close">
      <summary>Chiude la connessione UDP.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Stabilisce un host remoto predefinito utilizzando l'indirizzo IP e il numero di porta specificati.</summary>
      <param name="addr">Classe <see cref="T:System.Net.IPAddress" /> dell'host remoto a cui si desidera inviare dati.</param>
      <param name="port">Numero di porta a cui si intende inviare dati.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addr" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
      <summary>Stabilisce un host remoto predefinito utilizzando l'endpoint di rete specificato.</summary>
      <param name="endPoint">Classe <see cref="T:System.Net.IPEndPoint" /> che specifica l'endpoint di rete a cui si intende inviare dati.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endPoint" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
      <summary>Stabilisce un host remoto predefinito utilizzando il nome host e il numero di porta specificati.</summary>
      <param name="hostname">Nome DNS dell'host remoto a cui si desidera inviare dati.</param>
      <param name="port">Numero di porta sull'host remoto a cui si desidera inviare dati.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose">
      <summary>Rilascia le risorse gestite e non gestite usate dall'oggetto <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Net.Sockets.UdpClient" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.DontFragment">
      <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se il <see cref="T:System.Net.Sockets.UdpClient" /> consente la frammentazione dei datagrammi IP (Internet Protocol).</summary>
      <returns>
        <see langword="true" /> se il <see cref="T:System.Net.Sockets.UdpClient" /> consente la frammentazione dei datagrammi; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
      <exception cref="T:System.NotSupportedException">Questa proprietà può essere impostata soltanto per i socket con cui viene utilizzato il flag <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
      <summary>Esce da un gruppo multicast.</summary>
      <param name="multicastAddr">Oggetto <see cref="T:System.Net.IPAddress" /> del gruppo multicast da cui uscire.</param>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ArgumentException">L'indirizzo IP non è compatibile con il valore <see cref="T:System.Net.Sockets.AddressFamily" /> che definisce lo schema di indirizzamento del socket.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>Esce da un gruppo multicast.</summary>
      <param name="multicastAddr">Oggetto <see cref="T:System.Net.IPAddress" /> del gruppo multicast da cui uscire.</param>
      <param name="ifindex">Indirizzo locale del gruppo multicast da cui uscire.</param>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ArgumentException">L'indirizzo IP non è compatibile con il valore <see cref="T:System.Net.Sockets.AddressFamily" /> che definisce lo schema di indirizzamento del socket.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.EnableBroadcast">
      <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se la classe <see cref="T:System.Net.Sockets.UdpClient" /> può inviare o ricevere pacchetti broadcast.</summary>
      <returns>
        <see langword="true" /> se il <see cref="T:System.Net.Sockets.UdpClient" /> consente lo scambio di pacchetti broadcast; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>Termina una ricezione asincrona in attesa.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> restituito da un chiamata a <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</param>
      <param name="remoteEP">Endpoint remoto specificato.</param>
      <returns>In caso di esito positivo, matrice di byte che contiene i dati del datagramma.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> è stato precedentemente chiamato per la lettura asincrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso all'oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante.</exception>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
      <summary>Termina un invio asincrono in attesa.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> restituito da un chiamata a <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</param>
      <returns>Se ha esito positivo, numero di byte inviati alla classe <see cref="T:System.Net.Sockets.UdpClient" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> è stato precedentemente chiamato per la lettura asincrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket sottostante.</exception>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
      <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se la classe <see cref="T:System.Net.Sockets.UdpClient" /> consente a un unico client di usare una porta.</summary>
      <returns>
        <see langword="true" /> se la classe <see cref="T:System.Net.Sockets.UdpClient" /> consente a un solo client di utilizzare una porta specifica; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="true" /> per Windows Server 2003 e Windows XP Service Pack 2 e versioni successive e <see langword="false" /> per tutte le altre versioni.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket sottostante.</exception>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
      <summary>Aggiunge una classe <see cref="T:System.Net.Sockets.UdpClient" /> a un gruppo multicast.</summary>
      <param name="ifindex">L'indice dell'interfaccia associato all'indirizzo IP locale a cui unire il gruppo multicast.</param>
      <param name="multicastAddr">Classe <see cref="T:System.Net.IPAddress" /> multicast del gruppo a cui si desidera unirsi.</param>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
      <summary>Aggiunge una classe <see cref="T:System.Net.Sockets.UdpClient" /> a un gruppo multicast.</summary>
      <param name="multicastAddr">Classe <see cref="T:System.Net.IPAddress" /> multicast del gruppo a cui si desidera unirsi.</param>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ArgumentException">L'indirizzo IP non è compatibile con il valore <see cref="T:System.Net.Sockets.AddressFamily" /> che definisce lo schema di indirizzamento del socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>Aggiunge una classe <see cref="T:System.Net.Sockets.UdpClient" /> a un gruppo multicast con il Time to Live (TTL) specificato.</summary>
      <param name="multicastAddr">Oggetto <see cref="T:System.Net.IPAddress" /> del gruppo multicast a cui unirsi.</param>
      <param name="timeToLive">TTL misurato in hop di router.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il TTL fornito non è compreso tra 0 e 255</exception>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">L'indirizzo IP non è compatibile con il valore <see cref="T:System.Net.Sockets.AddressFamily" /> che definisce lo schema di indirizzamento del socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>Aggiunge una classe <see cref="T:System.Net.Sockets.UdpClient" /> a un gruppo multicast.</summary>
      <param name="multicastAddr">Classe <see cref="T:System.Net.IPAddress" /> multicast del gruppo a cui si desidera unirsi.</param>
      <param name="localAddress">Classe <see cref="T:System.Net.IPAddress" /> locale.</param>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.MulticastLoopback">
      <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se i pacchetti multicast in uscita devono essere recapitati all'applicazione mittente.</summary>
      <returns>
        <see langword="true" /> se il <see cref="T:System.Net.Sockets.UdpClient" /> riceve pacchetti multicast; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
      <summary>Restituisce un datagramma UDP che era stato inviato da un host remoto.</summary>
      <param name="remoteEP">Classe <see cref="T:System.Net.IPEndPoint" /> che rappresenta l'host remoto dal quale sono stati inviati i dati.</param>
      <returns>Matrice di tipo <see cref="T:System.Byte" /> che contiene dati di datagrammi.</returns>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.ReceiveAsync">
      <summary>Restituisce in modo asincrono un datagramma UDP inviato da un host remoto.</summary>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
      <summary>Invia un datagramma UDP a un host remoto.</summary>
      <param name="dgram">Matrice di tipo <see cref="T:System.Byte" /> che specifica il datagramma UDP che si intende inviare rappresentato come una matrice di byte.</param>
      <param name="bytes">Numero di byte nel datagramma.</param>
      <returns>Numero di byte inviati.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> ha già stabilito un host remoto predefinito.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>Invia un datagramma UDP all'host nell'endpoint remoto specificato.</summary>
      <param name="dgram">Matrice di tipo <see cref="T:System.Byte" /> che specifica il datagramma UDP che si intende inviare rappresentato come una matrice di byte.</param>
      <param name="bytes">Numero di byte nel datagramma.</param>
      <param name="endPoint">Oggetto <see cref="T:System.Net.IPEndPoint" /> che rappresenta l'host e la porta a cui inviare il datagramma.</param>
      <returns>Numero di byte inviati.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> ha già stabilito un host remoto predefinito.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>Invia un datagramma UDP a una porta specificata su un host remoto specificato.</summary>
      <param name="dgram">Matrice di tipo <see cref="T:System.Byte" /> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</param>
      <param name="bytes">Numero di byte nel datagramma.</param>
      <param name="hostname">Nome dell'host remoto a cui si desidera inviare il datagramma.</param>
      <param name="port">Numero di porta remota con cui si desidera comunicare.</param>
      <returns>Numero di byte inviati.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> ha già stabilito un host remoto predefinito.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
      <summary>Invia un datagramma UDP in modo asincrono a un host remoto.</summary>
      <param name="datagram">Matrice di tipo <see cref="T:System.Byte" /> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</param>
      <param name="bytes">Numero di byte nel datagramma.</param>
      <returns>Restituisca il valore <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> ha già stabilito un host remoto predefinito.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>Invia un datagramma UDP in modo asincrono a un host remoto.</summary>
      <param name="datagram">Matrice di tipo <see cref="T:System.Byte" /> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</param>
      <param name="bytes">Numero di byte nel datagramma.</param>
      <param name="endPoint">
        <see cref="T:System.Net.IPEndPoint" /> che rappresenta l'host e la porta a cui inviare il datagramma.</param>
      <returns>Restituisca il valore <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> ha già stabilito un host remoto predefinito.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>Invia un datagramma UDP in modo asincrono a un host remoto.</summary>
      <param name="datagram">Matrice di tipo <see cref="T:System.Byte" /> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</param>
      <param name="bytes">Numero di byte nel datagramma.</param>
      <param name="hostname">Nome dell'host remoto a cui si desidera inviare il datagramma.</param>
      <param name="port">Numero di porta remota con cui si vuole comunicare.</param>
      <returns>Restituisca il valore <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> ha già stabilito un host remoto predefinito.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'accesso al socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Ttl">
      <summary>Ottiene o imposta un valore che specifica la durata (TTL) dei pacchetti IP inviati dall'oggetto <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <returns>La durata (TTL).</returns>
    </member>
    <member name="T:System.Net.Sockets.UdpReceiveResult">
      <summary>Presenta le informazioni sul risultato della ricezione UDP da una chiamata al metodo <see cref="M:System.Net.Sockets.UdpClient.ReceiveAsync" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpReceiveResult" />.</summary>
      <param name="buffer">Un buffer di dati da ricevere nel pacchetto UDP.</param>
      <param name="remoteEndPoint">Endpoint remoto del pacchetto UDP.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.Buffer">
      <summary>Ottiene un buffer con i dati ricevuti nel pacchetto UDP.</summary>
      <returns>Matrice <see cref="T:System.Byte" /> con i dati ricevuti nel pacchetto UDP.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="other">Oggetto da confrontare con questa istanza.</param>
      <returns>
        <see langword="true" /> se <paramref name="other" /> è un'istanza di una struttura <see cref="T:System.Net.Sockets.UdpReceiveResult" /> ed è uguale al valore dell'istanza; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> è un'istanza di una struttura <see cref="T:System.Net.Sockets.UdpReceiveResult" /> ed è uguale al valore dell'istanza; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>Verifica se due istanze di <see cref="T:System.Net.Sockets.UdpReceiveResult" /> specificate sono equivalenti.</summary>
      <param name="left">Istanza della struttura <see cref="T:System.Net.Sockets.UdpReceiveResult" /> a sinistra dell'operatore di uguaglianza.</param>
      <param name="right">Istanza della struttura <see cref="T:System.Net.Sockets.UdpReceiveResult" /> a destra dell'operatore di uguaglianza.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>Verifica se due istanze specificate della struttura <see cref="T:System.Net.Sockets.UdpReceiveResult" /> non sono uguali.</summary>
      <param name="left">Istanza di <see cref="T:System.Net.Sockets.UdpReceiveResult" /> a sinistra dell'operatore di disuguaglianza.</param>
      <param name="right">Istanza della struttura <see cref="T:System.Net.Sockets.UdpReceiveResult" /> a destra dell'operatore di disuguaglianza.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> sono diversi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.RemoteEndPoint">
      <summary>Ottiene l'endpoint remoto da cui è stato ricevuto il pacchetto UDP.</summary>
      <returns>Endpoint remoto da cui è stato ricevuto il pacchetto UDP.</returns>
    </member>
    <member name="T:System.Net.Sockets.UnixDomainSocketEndPoint">
      <summary>Rappresenta un endpoint del socket di dominio locale Unix come un percorso.</summary>
    </member>
    <member name="M:System.Net.Sockets.UnixDomainSocketEndPoint.#ctor(System.String)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Net.Sockets.UnixDomainSocketEndPoint" /> con il percorso file per la connessione di un socket di dominio Unix.</summary>
      <param name="path">Percorso per la connessione di un socket di dominio Unix.</param>
    </member>
  </members>
</doc>