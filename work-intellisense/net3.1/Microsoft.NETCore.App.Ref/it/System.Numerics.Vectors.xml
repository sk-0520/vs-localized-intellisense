<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Numerics.Vectors</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.Matrix3x2">
      <summary vsli:raw="Represents a 3x2 matrix.">Rappresenta una matrice 3x2.</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 3x2 matrix from the specified components.">Crea una matrice 3x2 dai componenti specificati.</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">Valore da assegnare al primo elemento nella prima riga.</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">Valore da assegnare al secondo elemento nella prima riga.</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">Valore da assegnare al primo elemento nella seconda riga.</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">Valore da assegnare al secondo elemento nella seconda riga.</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">Valore da assegnare al primo elemento nella terza riga.</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">Valore da assegnare al secondo elemento nella terza riga.</param>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">Aggiunge ogni elemento in una matrice con il relativo elemento corrispondente in una seconda matrice.</summary>
      <param name="value1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="value2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">Matrice contenente i valori sommati di <paramref name="value1" /> e <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single)">
      <summary vsli:raw="Creates a rotation matrix using the given rotation in radians.">Crea una matrice di rotazione usando la rotazione specificata in radianti.</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">Quantità in base a cui eseguire la rotazione, in radianti.</param>
      <returns vsli:raw="The rotation matrix.">Matrice di rotazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a rotation matrix using the specified rotation in radians and a center point.">Crea una matrice di rotazione usando la rotazione specificata in radianti e un punto centrale.</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">Quantità in base a cui eseguire la rotazione, in radianti.</param>
      <param name="centerPoint" vsli:raw="The center point.">Punto centrale.</param>
      <returns vsli:raw="The rotation matrix.">Matrice di rotazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">Crea una matrice di scala dalla scala del vettore specificata.</summary>
      <param name="scales" vsli:raw="The scale to use.">Scala da usare.</param>
      <returns vsli:raw="The scaling matrix.">Matrice di scala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale with an offset from the specified center point.">Crea una matrice di scala dalla scala del vettore specificata con un offset dal punto centrale specificato.</summary>
      <param name="scales" vsli:raw="The scale to use.">Scala da usare.</param>
      <param name="centerPoint" vsli:raw="The center offset.">Offset centrale.</param>
      <returns vsli:raw="The scaling matrix.">Matrice di scala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the given scale.">Crea una matrice di scala che viene ridimensionata in modo uniforme in base alla scala specificata.</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">Scala uniforme da usare.</param>
      <returns vsli:raw="The scaling matrix.">Matrice di scala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified center.">Crea una matrice di scala che viene ridimensionata in modo uniforme in base alla scala specificata con un offset dal centro specificato.</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">Scala uniforme da usare.</param>
      <param name="centerPoint" vsli:raw="The center offset.">Offset centrale.</param>
      <returns vsli:raw="The scaling matrix.">Matrice di scala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X and Y components.">Crea una matrice di scala dai componenti X e Y specificati.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">Valore di scala per l'asse X.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Valore di scala per l'asse Y.</param>
      <returns vsli:raw="The scaling matrix.">Matrice di scala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">Crea una matrice di scala con un offset in base a un punto centrale specificato.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">Valore di scala per l'asse X.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Valore di scala per l'asse Y.</param>
      <param name="centerPoint" vsli:raw="The center point.">Punto centrale.</param>
      <returns vsli:raw="The scaling matrix.">Matrice di scala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians.">Crea una matrice di inclinazione dagli angoli specificati in radianti.</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">Angolo X, in radianti.</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">Angolo Y, in radianti.</param>
      <returns vsli:raw="The skew matrix.">Matrice di inclinazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians and a center point.">Crea una matrice di inclinazione dagli angoli specificati in radianti e da un punto centrale.</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">Angolo X, in radianti.</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">Angolo Y, in radianti.</param>
      <param name="centerPoint" vsli:raw="The center point.">Punto centrale.</param>
      <returns vsli:raw="The skew matrix.">Matrice di inclinazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a translation matrix from the specified 2-dimensional vector.">Crea una matrice di traslazione dal vettore bidimensionale specificato.</summary>
      <param name="position" vsli:raw="The translation position.">Posizione di traslazione.</param>
      <returns vsli:raw="The translation matrix.">Matrice di traslazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X and Y components.">Crea una matrice di traslazione dai componenti X e Y specificati.</summary>
      <param name="xPosition" vsli:raw="The X position.">Posizione X.</param>
      <param name="yPosition" vsli:raw="The Y position.">Posizione Y.</param>
      <returns vsli:raw="The translation matrix.">Matrice di traslazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 3x2 matrix are equal.">Restituisce un valore che indica se questa istanza è uguale a un'altra matrice 3x2.</summary>
      <param name="other" vsli:raw="The other matrix.">L'altra matrice.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le due matrici sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Oggetto da confrontare con l'istanza corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'istanza corrente è uguale a <paramref name="obj" />; in caso contrario, <see langword="false" />. Se <paramref name="obj" /> è <see langword="null" />, il metodo restituisce <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetDeterminant">
      <summary vsli:raw="Calculates the determinant for this matrix.">Calcola il determinante per la matrice.</summary>
      <returns vsli:raw="The determinant.">Determinante.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Restituisce il codice hash per l'istanza.</summary>
      <returns vsli:raw="The hash code.">Codice hash.</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">Ottiene la matrice identità moltiplicativa.</summary>
      <returns vsli:raw="The multiplicative identify matrix.">Matrice identità moltiplicativa.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">Inverte la matrice specificata. Il valore restituito indica se l'operazione è riuscita.</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">Matrice da invertire.</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">Il valore restituito dal metodo, se l'operazione è riuscita, contiene la matrice invertita.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="matrix" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">Indica se la matrice corrente è la matrice identità.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la matrice corrente è la matrice identità; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">Esegue un'interpolazione lineare da una matrice a una seconda matrice in base a un valore che specifica il peso della seconda matrice.</summary>
      <param name="matrix1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="matrix2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">Peso relativo di <paramref name="matrix2" />.</param>
      <returns vsli:raw="The interpolated matrix.">Matrice interpolata.</returns>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M11">
      <summary vsli:raw="The first element of the first row.">Primo elemento della prima riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M12">
      <summary vsli:raw="The second element of the first row.">Secondo elemento della prima riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M21">
      <summary vsli:raw="The first element of the second row.">Primo elemento della seconda riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M22">
      <summary vsli:raw="The second element of the second row.">Secondo elemento della seconda riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M31">
      <summary vsli:raw="The first element of the third row.">Primo elemento della terza riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M32">
      <summary vsli:raw="The second element of the third row.">Secondo elemento della terza riga.</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">Restituisce la matrice risultante dalla moltiplicazione di due matrici.</summary>
      <param name="value1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="value2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <returns vsli:raw="The product matrix.">Matrice prodotto.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">Restituisce la matrice risultante dall'operazione di ridimensionamento su tutti gli elementi di una matrice specificata in base a un fattore scalare.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">Matrice da scalare.</param>
      <param name="value2" vsli:raw="The scaling value to use.">Valore di scala da usare.</param>
      <returns vsli:raw="The scaled matrix.">Matrice scalata.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">Nega la matrice specificata moltiplicando tutti i relativi valori per -1.</summary>
      <param name="value" vsli:raw="The matrix to negate.">Matrice da negare.</param>
      <returns vsli:raw="The negated matrix.">Matrice negata.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">Aggiunge ogni elemento in una matrice con il relativo elemento corrispondente in una seconda matrice.</summary>
      <param name="value1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="value2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <returns vsli:raw="The matrix that contains the summed values.">Matrice contenente i valori sommati.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">Restituisce un valore che indica se le matrici specificate sono uguali.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">Prima matrice da confrontare.</param>
      <param name="value2" vsli:raw="The second matrix to compare.">Seconda matrice da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">Restituisce un valore che indica se le matrici specificate non sono uguali.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">Prima matrice da confrontare.</param>
      <param name="value2" vsli:raw="The second matrix to compare.">Seconda matrice da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">Restituisce la matrice risultante dalla moltiplicazione di due matrici.</summary>
      <param name="value1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="value2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <returns vsli:raw="The product matrix.">Matrice prodotto.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">Restituisce la matrice risultante dall'operazione di ridimensionamento su tutti gli elementi di una matrice specificata in base a un fattore scalare.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">Matrice da scalare.</param>
      <param name="value2" vsli:raw="The scaling value to use.">Valore di scala da usare.</param>
      <returns vsli:raw="The scaled matrix.">Matrice scalata.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">Sottrae ogni elemento in una seconda matrice dall'elemento corrispondente in una prima matrice.</summary>
      <param name="value1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="value2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">Matrice contenente i valori risultanti dalla sottrazione di ogni elemento in <paramref name="value2" /> dal relativo elemento corrispondente in <paramref name="value1" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">Nega la matrice specificata moltiplicando tutti i relativi valori per -1.</summary>
      <param name="value" vsli:raw="The matrix to negate.">Matrice da negare.</param>
      <returns vsli:raw="The negated matrix.">Matrice negata.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">Sottrae ogni elemento in una seconda matrice dall'elemento corrispondente in una prima matrice.</summary>
      <param name="value1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="value2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">Matrice contenente i valori risultanti dalla sottrazione di ogni elemento in <paramref name="value2" /> dal relativo elemento corrispondente in <paramref name="value1" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">Restituisce una stringa che rappresenta la matrice.</summary>
      <returns vsli:raw="The string representation of this matrix.">Rappresentazione di stringa di questa matrice.</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">Ottiene o imposta il componente traslazione di questa matrice.</summary>
      <returns vsli:raw="The translation component of the current instance.">Componente traslazione dell'istanza corrente.</returns>
    </member>
    <member name="T:System.Numerics.Matrix4x4">
      <summary vsli:raw="Represents a 4x4 matrix.">Rappresenta una matrice 4x4.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Matrix4x4&quot; /&gt; object from a specified &lt;see cref=&quot;T:System.Numerics.Matrix3x2&quot; /&gt; object.">Crea un oggetto <see cref="T:System.Numerics.Matrix4x4" /> dall'oggetto <see cref="T:System.Numerics.Matrix3x2" /> specificato.</summary>
      <param name="value" vsli:raw="A 3x2 matrix.">Matrice 3x2.</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 4x4 matrix from the specified components.">Crea una matrice 4x4 dai componenti specificati.</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">Valore da assegnare al primo elemento nella prima riga.</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">Valore da assegnare al secondo elemento nella prima riga.</param>
      <param name="m33" vsli:raw="The value to assign to the third element in the third row.">Valore da assegnare al terzo elemento nella terza riga.</param>
      <param name="m34" vsli:raw="The value to assign to the fourth element in the third row.">Valore da assegnare al quarto elemento nella terza riga.</param>
      <param name="m41" vsli:raw="The value to assign to the first element in the fourth row.">Valore da assegnare al primo elemento nella quarta riga.</param>
      <param name="m42" vsli:raw="The value to assign to the second element in the fourth row.">Valore da assegnare al secondo elemento nella quarta riga.</param>
      <param name="m43" vsli:raw="The value to assign to the third element in the fourth row.">Valore da assegnare al terzo elemento nella quarta riga.</param>
      <param name="m44" vsli:raw="The value to assign to the fourth element in the fourth row.">Valore da assegnare al quarto elemento nella quarta riga.</param>
      <param name="m13" vsli:raw="The value to assign to the third element in the first row.">Valore da assegnare al terzo elemento nella prima riga.</param>
      <param name="m14" vsli:raw="The value to assign to the fourth element in the first row.">Valore da assegnare al quarto elemento nella prima riga.</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">Valore da assegnare al primo elemento nella seconda riga.</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">Valore da assegnare al secondo elemento nella seconda riga.</param>
      <param name="m23" vsli:raw="The value to assign to the third element in the second row.">Valore da assegnare al quarto elemento nella seconda riga.</param>
      <param name="m24" vsli:raw="The value to assign to the fourth element in the second row.">Valore da assegnare al quarto elemento nella seconda riga.</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">Valore da assegnare al primo elemento nella terza riga.</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">Valore da assegnare al secondo elemento nella terza riga.</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Add(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">Aggiunge ogni elemento in una matrice con il relativo elemento corrispondente in una seconda matrice.</summary>
      <param name="value1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="value2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">Matrice contenente i valori sommati di <paramref name="value1" /> e <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a spherical billboard that rotates around a specified object position.">Crea un pannello sferico che ruota intorno a una posizione di oggetto specificata.</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">Posizione dell'oggetto intorno al quale ruota il pannello.</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">Posizione della camera.</param>
      <param name="cameraUpVector" vsli:raw="The up vector of the camera.">Vettore up della camera.</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">Vettore forward della camera.</param>
      <returns vsli:raw="The created billboard.">Pannello creato.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateConstrainedBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a cylindrical billboard that rotates around a specified axis.">Crea un pannello cilindrico che ruota intorno a un asse specificato.</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">Posizione dell'oggetto intorno al quale ruota il pannello.</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">Posizione della camera.</param>
      <param name="rotateAxis" vsli:raw="The axis to rotate the billboard around.">Asse intorno a cui ruotare il pannello.</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">Vettore forward della camera.</param>
      <param name="objectForwardVector" vsli:raw="The forward vector of the object.">Vettore forward dell'oggetto.</param>
      <returns vsli:raw="The billboard matrix.">Matrice del pannello.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a matrix that rotates around an arbitrary vector.">Crea una matrice che ruota intorno a un vettore arbitrario.</summary>
      <param name="axis" vsli:raw="The axis to rotate around.">Asse di rotazione.</param>
      <param name="angle" vsli:raw="The angle to rotate around &lt;paramref name=&quot;axis&quot; /&gt;, in radians.">L'angolo di rotazione dell'oggetto <paramref name="axis" />, in radianti.</param>
      <returns vsli:raw="The rotation matrix.">Matrice di rotazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromQuaternion(System.Numerics.Quaternion)">
      <summary vsli:raw="Creates a rotation matrix from the specified Quaternion rotation value.">Crea una matrice di rotazione dal valore di rotazione Quaternion specificato.</summary>
      <param name="quaternion" vsli:raw="The source Quaternion.">Quaternione di origine.</param>
      <returns vsli:raw="The rotation matrix.">Matrice di rotazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a rotation matrix from the specified yaw, pitch, and roll.">Crea una matrice di rotazione dagli assi di rotazione y, x e z specificati.</summary>
      <param name="yaw" vsli:raw="The angle of rotation, in radians, around the Y axis.">Angolo di rotazione intorno all'asse Y, in radianti.</param>
      <param name="pitch" vsli:raw="The angle of rotation, in radians, around the X axis.">Angolo di rotazione intorno all'asse X, in radianti.</param>
      <param name="roll" vsli:raw="The angle of rotation, in radians, around the Z axis.">Angolo di rotazione intorno all'asse Z, in radianti.</param>
      <returns vsli:raw="The rotation matrix.">Matrice di rotazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateLookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a view matrix.">Crea una matrice di visualizzazione.</summary>
      <param name="cameraPosition" vsli:raw="The position of the camera.">Posizione della camera.</param>
      <param name="cameraTarget" vsli:raw="The target towards which the camera is pointing.">Posizione di destinazione verso cui punta la camera.</param>
      <param name="cameraUpVector" vsli:raw="The direction that is &quot;up&quot; from the camera's point of view.">Direzione "up" dal punto di vista della camera.</param>
      <returns vsli:raw="The view matrix.">Matrice di visualizzazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates an orthographic perspective matrix from the given view volume dimensions.">Crea una matrice prospettica ortogonale dalle dimensioni del volume di visualizzazione specificate.</summary>
      <param name="width" vsli:raw="The width of the view volume.">Larghezza del volume di visualizzazione.</param>
      <param name="height" vsli:raw="The height of the view volume.">Altezza del volume di visualizzazione.</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">Valore Z minimo del volume di visualizzazione.</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">Valore Z massimo del volume di visualizzazione.</param>
      <returns vsli:raw="The orthographic projection matrix.">Matrice di proiezione ortogonale.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized orthographic projection matrix.">Crea una matrice di proiezione ortogonale personalizzata.</summary>
      <param name="left" vsli:raw="The minimum X-value of the view volume.">Valore X minimo del volume di visualizzazione.</param>
      <param name="right" vsli:raw="The maximum X-value of the view volume.">Valore X massimo del volume di visualizzazione.</param>
      <param name="bottom" vsli:raw="The minimum Y-value of the view volume.">Valore Y minimo del volume di visualizzazione.</param>
      <param name="top" vsli:raw="The maximum Y-value of the view volume.">Valore Y massimo del volume di visualizzazione.</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">Valore Z minimo del volume di visualizzazione.</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">Valore Z massimo del volume di visualizzazione.</param>
      <returns vsli:raw="The orthographic projection matrix.">Matrice di proiezione ortogonale.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix from the given view volume dimensions.">Crea una matrice di proiezione prospettica dalle dimensioni del volume di visualizzazione specificate.</summary>
      <param name="width" vsli:raw="The width of the view volume at the near view plane.">Larghezza del volume di visualizzazione nel piano di visualizzazione vicino.</param>
      <param name="height" vsli:raw="The height of the view volume at the near view plane.">Altezza del volume di visualizzazione nel piano di visualizzazione vicino.</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">Distanza dal piano di visualizzazione vicino.</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">Distanza dal piano di visualizzazione lontano.</param>
      <returns vsli:raw="The perspective projection matrix.">Matrice di proiezione prospettica.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" /> è minore o uguale a zero.
oppure
<paramref name="farPlaneDistance" /> è minore o uguale a zero.
oppure
<paramref name="nearPlaneDistance" /> è maggiore o uguale a <paramref name="farPlaneDistance" />.</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix based on a field of view, aspect ratio, and near and far view plane distances.">Crea una matrice di proiezione prospettica in base a un campo visivo, alle proporzioni e alle distanze del piano di visualizzazione vicino e lontano.</summary>
      <param name="fieldOfView" vsli:raw="The field of view in the y direction, in radians.">Campo visivo nella direzione y, in radianti.</param>
      <param name="aspectRatio" vsli:raw="The aspect ratio, defined as view space width divided by height.">Proporzioni, definite come larghezza dello spazio visivo divisa per l'altezza.</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">Distanza dal piano di visualizzazione vicino.</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">Distanza dal piano di visualizzazione lontano.</param>
      <returns vsli:raw="The perspective projection matrix.">Matrice di proiezione prospettica.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;fieldOfView&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fieldOfView&quot; /&gt; is greater than or equal to &lt;see cref=&quot;F:System.Math.PI&quot; /&gt;.  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="fieldOfView" /> è minore o uguale a zero.
oppure
<paramref name="fieldOfView" /> è maggiore o uguale a <see cref="F:System.Math.PI" />.
<paramref name="nearPlaneDistance" /> è minore o uguale a zero.
oppure
<paramref name="farPlaneDistance" /> è minore o uguale a zero.
oppure
<paramref name="nearPlaneDistance" /> è maggiore o uguale a <paramref name="farPlaneDistance" />.</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized perspective projection matrix.">Crea una matrice di proiezione prospettica personalizzata.</summary>
      <param name="left" vsli:raw="The minimum x-value of the view volume at the near view plane.">Valore X minimo del volume di visualizzazione nel piano di visualizzazione vicino.</param>
      <param name="right" vsli:raw="The maximum x-value of the view volume at the near view plane.">Valore X massimo del volume di visualizzazione nel piano di visualizzazione vicino.</param>
      <param name="bottom" vsli:raw="The minimum y-value of the view volume at the near view plane.">Valore Y minimo del volume di visualizzazione nel piano di visualizzazione vicino.</param>
      <param name="top" vsli:raw="The maximum y-value of the view volume at the near view plane.">Valore Y massimo del volume di visualizzazione nel piano di visualizzazione vicino.</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">Distanza dal piano di visualizzazione vicino.</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">Distanza dal piano di visualizzazione lontano.</param>
      <returns vsli:raw="The perspective projection matrix.">Matrice di proiezione prospettica.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" /> è minore o uguale a zero.
oppure
<paramref name="farPlaneDistance" /> è minore o uguale a zero.
oppure
<paramref name="nearPlaneDistance" /> è maggiore o uguale a <paramref name="farPlaneDistance" />.</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateReflection(System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that reflects the coordinate system about a specified plane.">Crea una matrice che crea un sistema di coordinate speculare rispetto a un piano specificato.</summary>
      <param name="value" vsli:raw="The plane about which to create a reflection.">Piano intorno al quale creare una reflection.</param>
      <returns vsli:raw="A new matrix expressing the reflection.">Nuova matrice che esprime la reflection.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis.">Crea una matrice per la rotazione di punti intorno all'asse X.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">Quantità, in radianti, in base a cui eseguire la rotazione intorno all'asse X.</param>
      <returns vsli:raw="The rotation matrix.">Matrice di rotazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis from a center point.">Crea una matrice per la rotazione di punti intorno all'asse X da un punto centrale.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">Quantità, in radianti, in base a cui eseguire la rotazione intorno all'asse X.</param>
      <param name="centerPoint" vsli:raw="The center point.">Punto centrale.</param>
      <returns vsli:raw="The rotation matrix.">Matrice di rotazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Y axis.">Crea una matrice per la rotazione di punti intorno all'asse Y.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">Quantità, in radianti, in base a cui eseguire la rotazione intorno all'asse Y.</param>
      <returns vsli:raw="The rotation matrix.">Matrice di rotazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="The amount, in radians, by which to rotate around the Y axis from a center point.">Quantità, in radianti, in base a cui eseguire la rotazione intorno all'asse Y da un punto centrale.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">Quantità, in radianti, in base a cui eseguire la rotazione intorno all'asse Y.</param>
      <param name="centerPoint" vsli:raw="The center point.">Punto centrale.</param>
      <returns vsli:raw="The rotation matrix.">Matrice di rotazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis.">Crea una matrice per la rotazione di punti intorno all'asse Z.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">Quantità, in radianti, in base a cui eseguire la rotazione intorno all'asse Z.</param>
      <returns vsli:raw="The rotation matrix.">Matrice di rotazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis from a center point.">Crea una matrice per la rotazione di punti intorno all'asse Z da un punto centrale.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">Quantità, in radianti, in base a cui eseguire la rotazione intorno all'asse Z.</param>
      <param name="centerPoint" vsli:raw="The center point.">Punto centrale.</param>
      <returns vsli:raw="The rotation matrix.">Matrice di rotazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">Crea una matrice di scala dalla scala del vettore specificata.</summary>
      <param name="scales" vsli:raw="The scale to use.">Scala da usare.</param>
      <returns vsli:raw="The scaling matrix.">Matrice di scala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix with a center point.">Crea una matrice di scala con un punto centrale.</summary>
      <param name="scales" vsli:raw="The vector that contains the amount to scale on each axis.">Vettore contenente la quantità in base a cui eseguire la scala per ogni asse.</param>
      <param name="centerPoint" vsli:raw="The center point.">Punto centrale.</param>
      <returns vsli:raw="The scaling matrix.">Matrice di scala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single)">
      <summary vsli:raw="Creates a uniform scaling matrix that scale equally on each axis.">Crea una matrice di scala uniforme che viene ridimensionata in modo equo lungo ogni asse.</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">Fattore di scala uniforme.</param>
      <returns vsli:raw="The scaling matrix.">Matrice di scala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a uniform scaling matrix that scales equally on each axis with a center point.">Crea una matrice di scala uniforme che viene ridimensionata in modo equo lungo ogni asse con un punto centrale.</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">Fattore di scala uniforme.</param>
      <param name="centerPoint" vsli:raw="The center point.">Punto centrale.</param>
      <returns vsli:raw="The scaling matrix.">Matrice di scala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X, Y, and Z components.">Crea una matrice di scala dai componenti X, Y e Z specificati.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">Valore di scala per l'asse X.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Valore di scala per l'asse Y.</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">Valore di scala per l'asse Z.</param>
      <returns vsli:raw="The scaling matrix.">Matrice di scala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">Crea una matrice di scala con un offset in base a un punto centrale specificato.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">Valore di scala per l'asse X.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Valore di scala per l'asse Y.</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">Valore di scala per l'asse Z.</param>
      <param name="centerPoint" vsli:raw="The center point.">Punto centrale.</param>
      <returns vsli:raw="The scaling matrix.">Matrice di scala.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateShadow(System.Numerics.Vector3,System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that flattens geometry into a specified plane as if casting a shadow from a specified light source.">Crea una matrice che appiattisce la geometria in un piano specificato come se si proiettasse un'ombra da una sorgente di luce specificata.</summary>
      <param name="lightDirection" vsli:raw="The direction from which the light that will cast the shadow is coming.">Direzione da cui proviene la luce che proietta l'ombra.</param>
      <param name="plane" vsli:raw="The plane onto which the new matrix should flatten geometry so as to cast a shadow.">Piano sul quale la nuova matrice deve appiattire la geometria per proiettare l'ombra.</param>
      <returns vsli:raw="A new matrix that can be used to flatten geometry onto the specified plane from the specified direction.">Nuova matrice che può essere usata per appiattire la geometria sul piano specificato dalla direzione specificata.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a translation matrix from the specified 3-dimensional vector.">Crea una matrice di traslazione dal vettore tridimensionale specificato.</summary>
      <param name="position" vsli:raw="The amount to translate in each axis.">Quantità in base a cui eseguire la traslazione per ogni asse.</param>
      <returns vsli:raw="The translation matrix.">Matrice di traslazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X, Y, and Z components.">Crea una matrice di traslazione dai componenti X, Y e Z specificati.</summary>
      <param name="xPosition" vsli:raw="The amount to translate on the X axis.">Quantità in base a cui eseguire la traslazione sull'asse X.</param>
      <param name="yPosition" vsli:raw="The amount to translate on the Y axis.">Quantità in base a cui eseguire la traslazione sull'asse Y.</param>
      <param name="zPosition" vsli:raw="The amount to translate on the Z axis.">Quantità in base a cui eseguire la traslazione sull'asse Z.</param>
      <returns vsli:raw="The translation matrix.">Matrice di traslazione.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateWorld(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a world matrix with the specified parameters.">Crea una nuova matrice globale con i parametri specificati.</summary>
      <param name="position" vsli:raw="The position of the object.">Posizione dell'oggetto.</param>
      <param name="forward" vsli:raw="The forward direction of the object.">Direzione in avanti dell'oggetto.</param>
      <param name="up" vsli:raw="The upward direction of the object. Its value is usually &lt;c&gt;[0, 1, 0]&lt;/c&gt;.">Direzione verso l'alto dell'oggetto. Il valore è in genere <c>[0, 1, 0]</c>.</param>
      <returns vsli:raw="The world matrix.">Matrice globale.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Decompose(System.Numerics.Matrix4x4,System.Numerics.Vector3@,System.Numerics.Quaternion@,System.Numerics.Vector3@)">
      <summary vsli:raw="Attempts to extract the scale, translation, and rotation components from the given scale, rotation, or translation matrix. The return value indicates whether the operation succeeded.">Tenta di estrarre i componenti di scala, traslazione e rotazione dalla matrice di scala, rotazione o traslazione specificata. Il valore restituito indica se l'operazione è riuscita.</summary>
      <param name="matrix" vsli:raw="The source matrix.">Matrice di origine.</param>
      <param name="scale" vsli:raw="When this method returns, contains the scaling component of the transformation matrix if the operation succeeded.">Il valore restituito dal metodo, se l'operazione è riuscita, contiene il componente di scala della matrice di trasformazione.</param>
      <param name="rotation" vsli:raw="When this method returns, contains the rotation component of the transformation matrix if the operation succeeded.">Il valore restituito dal metodo, se l'operazione è riuscita, contiene il componente di rotazione della matrice di trasformazione.</param>
      <param name="translation" vsli:raw="When the method returns, contains the translation component of the transformation matrix if the operation succeeded.">Il valore restituito dal metodo, se l'operazione è riuscita, contiene il componente di traslazione della matrice di trasformazione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was decomposed successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="matrix" /> è stato scomposto correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 4x4 matrix are equal.">Restituisce un valore che indica se questa istanza è uguale a un'altra matrice 4x4.</summary>
      <param name="other" vsli:raw="The other matrix.">L'altra matrice.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le due matrici sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Oggetto da confrontare con l'istanza corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'istanza corrente è uguale a <paramref name="obj" />; in caso contrario, <see langword="false" />. Se <paramref name="obj" /> è <see langword="null" />, il metodo restituisce <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetDeterminant">
      <summary vsli:raw="Calculates the determinant of the current 4x4 matrix.">Calcola il determinante della matrice 4x4 corrente.</summary>
      <returns vsli:raw="The determinant.">Determinante.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Restituisce il codice hash per l'istanza.</summary>
      <returns vsli:raw="The hash code.">Codice hash.</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">Ottiene la matrice identità moltiplicativa.</summary>
      <returns vsli:raw="Gets the multiplicative identity matrix.">Ottiene la matrice identità moltiplicativa.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Invert(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">Inverte la matrice specificata. Il valore restituito indica se l'operazione è riuscita.</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">Matrice da invertire.</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">Il valore restituito dal metodo, se l'operazione è riuscita, contiene la matrice invertita.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="matrix" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">Indica se la matrice corrente è la matrice identità.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la matrice corrente è la matrice identità; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Lerp(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">Esegue un'interpolazione lineare da una matrice a una seconda matrice in base a un valore che specifica il peso della seconda matrice.</summary>
      <param name="matrix1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="matrix2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">Peso relativo di <paramref name="matrix2" />.</param>
      <returns vsli:raw="The interpolated matrix.">Matrice interpolata.</returns>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M11">
      <summary vsli:raw="The first element of the first row.">Primo elemento della prima riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M12">
      <summary vsli:raw="The second element of the first row.">Secondo elemento della prima riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M13">
      <summary vsli:raw="The third element of the first row.">Terzo elemento della prima riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M14">
      <summary vsli:raw="The fourth element of the first row.">Quarto elemento della prima riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M21">
      <summary vsli:raw="The first element of the second row.">Primo elemento della seconda riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M22">
      <summary vsli:raw="The second element of the second row.">Secondo elemento della seconda riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M23">
      <summary vsli:raw="The third element of the second row.">Terzo elemento della seconda riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M24">
      <summary vsli:raw="The fourth element of the second row.">Quarto elemento della seconda riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M31">
      <summary vsli:raw="The first element of the third row.">Primo elemento della terza riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M32">
      <summary vsli:raw="The second element of the third row.">Secondo elemento della terza riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M33">
      <summary vsli:raw="The third element of the third row.">Terzo elemento della terza riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M34">
      <summary vsli:raw="The fourth element of the third row.">Quarto elemento della terza riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M41">
      <summary vsli:raw="The first element of the fourth row.">Primo elemento della quarta riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M42">
      <summary vsli:raw="The second element of the fourth row.">Secondo elemento della quarta riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M43">
      <summary vsli:raw="The third element of the fourth row.">Terzo elemento della quarta riga.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M44">
      <summary vsli:raw="The fourth element of the fourth row.">Quarto elemento della quarta riga.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">Restituisce la matrice risultante dalla moltiplicazione di due matrici.</summary>
      <param name="value1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="value2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <returns vsli:raw="The product matrix.">Matrice prodotto.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">Restituisce la matrice risultante dall'operazione di ridimensionamento su tutti gli elementi di una matrice specificata in base a un fattore scalare.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">Matrice da scalare.</param>
      <param name="value2" vsli:raw="The scaling value to use.">Valore di scala da usare.</param>
      <returns vsli:raw="The scaled matrix.">Matrice scalata.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Negate(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">Nega la matrice specificata moltiplicando tutti i relativi valori per -1.</summary>
      <param name="value" vsli:raw="The matrix to negate.">Matrice da negare.</param>
      <returns vsli:raw="The negated matrix.">Matrice negata.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Addition(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">Aggiunge ogni elemento in una matrice con il relativo elemento corrispondente in una seconda matrice.</summary>
      <param name="value1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="value2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <returns vsli:raw="The matrix that contains the summed values.">Matrice contenente i valori sommati.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Equality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">Restituisce un valore che indica se le matrici specificate sono uguali.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">Prima matrice da confrontare.</param>
      <param name="value2" vsli:raw="The second matrix to care.">Seconda matrice da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Inequality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">Restituisce un valore che indica se le matrici specificate non sono uguali.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">Prima matrice da confrontare.</param>
      <param name="value2" vsli:raw="The second matrix to compare.">Seconda matrice da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">Restituisce la matrice risultante dalla moltiplicazione di due matrici.</summary>
      <param name="value1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="value2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <returns vsli:raw="The product matrix.">Matrice prodotto.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">Restituisce la matrice risultante dall'operazione di ridimensionamento su tutti gli elementi di una matrice specificata in base a un fattore scalare.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">Matrice da scalare.</param>
      <param name="value2" vsli:raw="The scaling value to use.">Valore di scala da usare.</param>
      <returns vsli:raw="The scaled matrix.">Matrice scalata.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Subtraction(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">Sottrae ogni elemento in una seconda matrice dall'elemento corrispondente in una prima matrice.</summary>
      <param name="value1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="value2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">Matrice contenente i valori risultanti dalla sottrazione di ogni elemento in <paramref name="value2" /> dal relativo elemento corrispondente in <paramref name="value1" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_UnaryNegation(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">Nega la matrice specificata moltiplicando tutti i relativi valori per -1.</summary>
      <param name="value" vsli:raw="The matrix to negate.">Matrice da negare.</param>
      <returns vsli:raw="The negated matrix.">Matrice negata.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Subtract(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">Sottrae ogni elemento in una seconda matrice dall'elemento corrispondente in una prima matrice.</summary>
      <param name="value1" vsli:raw="The first matrix.">Prima matrice.</param>
      <param name="value2" vsli:raw="The second matrix.">Seconda matrice.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">Matrice contenente i valori risultanti dalla sottrazione di ogni elemento in <paramref name="value2" /> dal relativo elemento corrispondente in <paramref name="value1" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">Restituisce una stringa che rappresenta la matrice.</summary>
      <returns vsli:raw="The string representation of this matrix.">Rappresentazione di stringa di questa matrice.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transform(System.Numerics.Matrix4x4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms the specified matrix by applying the specified Quaternion rotation.">Trasforma la matrice specificata applicando la rotazione Quaternion specificata.</summary>
      <param name="value" vsli:raw="The matrix to transform.">Matrice da trasformare.</param>
      <param name="rotation" vsli:raw="The rotation t apply.">Rotazione da applicare.</param>
      <returns vsli:raw="The transformed matrix.">Matrice trasformata.</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">Ottiene o imposta il componente traslazione di questa matrice.</summary>
      <returns vsli:raw="The translation component of the current instance.">Componente traslazione dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transpose(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transposes the rows and columns of a matrix.">Traspone le righe e le colonne di una matrice.</summary>
      <param name="matrix" vsli:raw="The matrix to transpose.">Matrice da trasporre.</param>
      <returns vsli:raw="The transposed matrix.">Matrice trasposta.</returns>
    </member>
    <member name="T:System.Numerics.Plane">
      <summary vsli:raw="Represents a plane in three-dimensional space.">Rappresenta un piano nello spazio tridimensionale.</summary>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified normal and the distance along the normal from the origin.">Crea un oggetto <see cref="T:System.Numerics.Plane" /> da una normale specificata e dalla distanza lungo la normale dall'origine.</summary>
      <param name="normal" vsli:raw="The plane's normal vector.">Vettore normale del piano.</param>
      <param name="d" vsli:raw="The plane's distance from the origin along its normal vector.">Distanza del piano dall'origine lungo il relativo vettore normale.</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector4)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified four-dimensional vector.">Crea un oggetto <see cref="T:System.Numerics.Plane" /> da un vettore quadridimensionale specificato.</summary>
      <param name="value" vsli:raw="A vector whose first three elements describe the normal vector, and whose &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; defines the distance along that normal from the origin.">Vettore i cui primi tre elementi descrivono il vettore normale e il cui oggetto <see cref="F:System.Numerics.Vector4.W" /> definisce la distanza lungo tale normale dall'origine.</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from the X, Y, and Z components of its normal, and its distance from the origin on that normal.">Crea un oggetto <see cref="T:System.Numerics.Plane" /> dai componenti X, Y e Z della normale e della distanza dall'origine su tale normale.</summary>
      <param name="x" vsli:raw="The X component of the normal.">Componente X della normale.</param>
      <param name="y" vsli:raw="The Y component of the normal.">Componente Y della normale.</param>
      <param name="z" vsli:raw="The Z component of the normal.">Componente Z della normale.</param>
      <param name="d" vsli:raw="The distance of the plane along its normal from the origin.">Distanza del piano lungo la relativa normale dall'origine.</param>
    </member>
    <member name="M:System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object that contains three specified points.">Crea un oggetto <see cref="T:System.Numerics.Plane" /> contenente tre punti specificati.</summary>
      <param name="point1" vsli:raw="The first point defining the plane.">Primo punto che definisce il piano.</param>
      <param name="point2" vsli:raw="The second point defining the plane.">Secondo punto che definisce il piano.</param>
      <param name="point3" vsli:raw="The third point defining the plane.">Terzo punto che definisce il piano.</param>
      <returns vsli:raw="The plane containing the three points.">Piano contenente i tre punti.</returns>
    </member>
    <member name="F:System.Numerics.Plane.D">
      <summary vsli:raw="The distance of the plane along its normal from the origin.">Distanza del piano lungo la relativa normale dall'origine.</summary>
    </member>
    <member name="M:System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)">
      <summary vsli:raw="Calculates the dot product of a plane and a 4-dimensional vector.">Calcola il prodotto scalare di un piano e di un vettore quadridimensionale.</summary>
      <param name="plane" vsli:raw="The plane.">Piano.</param>
      <param name="value" vsli:raw="The four-dimensional vector.">Vettore quadridimensionale.</param>
      <returns vsli:raw="The dot product.">Prodotto scalare.</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the normal vector of this plane plus the distance (&lt;see cref=&quot;F:System.Numerics.Plane.D&quot; /&gt;) value of the plane.">Restituisce il prodotto scalare di un vettore tridimensionale specificato e il vettore normale di questo piano, più il valore (<see cref="F:System.Numerics.Plane.D" />) della distanza del piano.</summary>
      <param name="plane" vsli:raw="The plane.">Piano.</param>
      <param name="value" vsli:raw="The 3-dimensional vector.">Vettore tridimensionale.</param>
      <returns vsli:raw="The dot product.">Prodotto scalare.</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the &lt;see cref=&quot;F:System.Numerics.Plane.Normal&quot; /&gt; vector of this plane.">Restituisce il prodotto scalare di un vettore tridimensionale specificato e del vettore <see cref="F:System.Numerics.Plane.Normal" /> di tale piano.</summary>
      <param name="plane" vsli:raw="The plane.">Piano.</param>
      <param name="value" vsli:raw="The three-dimensional vector.">Vettore tridimensionale.</param>
      <returns vsli:raw="The dot product.">Prodotto scalare.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another plane object are equal.">Restituisce un valore che indica se questa istanza è uguale a un altro oggetto piano.</summary>
      <param name="other" vsli:raw="The other plane.">L'altro piano.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two planes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i due piani sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Oggetto da confrontare con l'istanza corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'istanza corrente è uguale a <paramref name="obj" />; in caso contrario, <see langword="false" />. Se <paramref name="obj" /> è <see langword="null" />, il metodo restituisce <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Plane.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Restituisce il codice hash per l'istanza.</summary>
      <returns vsli:raw="The hash code.">Codice hash.</returns>
    </member>
    <member name="F:System.Numerics.Plane.Normal">
      <summary vsli:raw="The normal vector of the plane.">Vettore normale del piano.</summary>
    </member>
    <member name="M:System.Numerics.Plane.Normalize(System.Numerics.Plane)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object whose normal vector is the source plane's normal vector normalized.">Crea un nuovo oggetto <see cref="T:System.Numerics.Plane" /> il cui vettore normale è il vettore normale del piano di origine normalizzato.</summary>
      <param name="value" vsli:raw="The source plane.">Piano di origine.</param>
      <returns vsli:raw="The normalized plane.">Piano normalizzato.</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are equal.">Restituisce un valore che indica se due piani sono uguali.</summary>
      <param name="value1" vsli:raw="The first plane to compare.">Primo piano da confrontare.</param>
      <param name="value2" vsli:raw="The second plane to compare.">Secondo piano da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are not equal.">Restituisce un valore che indica se due piani non sono uguali.</summary>
      <param name="value1" vsli:raw="The first plane to compare.">Primo piano da confrontare.</param>
      <param name="value2" vsli:raw="The second plane to compare.">Secondo piano da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Plane.ToString">
      <summary vsli:raw="Returns the string representation of this plane object.">Restituisce la rappresentazione di stringa di questo oggetto piano.</summary>
      <returns vsli:raw="A string that represents this &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object.">Stringa che rappresenta questo oggetto <see cref="T:System.Numerics.Plane" />.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a normalized plane by a 4x4 matrix.">Trasforma un piano normalizzato in base a una matrice 4x4.</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">Piano normalizzato da trasformare.</param>
      <param name="matrix" vsli:raw="The transformation matrix to apply to &lt;paramref name=&quot;plane&quot; /&gt;.">Matrice di trasformazione da applicare a <paramref name="plane" />.</param>
      <returns vsli:raw="The transformed plane.">Piano trasformato.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a normalized plane by a Quaternion rotation.">Trasforma un piano normalizzato in base a una rotazione Quaternion.</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">Piano normalizzato da trasformare.</param>
      <param name="rotation" vsli:raw="The Quaternion rotation to apply to the plane.">Rotazione Quaternion da applicare al piano.</param>
      <returns vsli:raw="A new plane that results from applying the Quaternion rotation.">Nuovo piano risultante dall'applicazione della rotazione Quaternion.</returns>
    </member>
    <member name="T:System.Numerics.Quaternion">
      <summary vsli:raw="Represents a vector that is used to encode three-dimensional physical rotations.">Rappresenta un vettore usato per codificare le rotazioni fisiche tridimensionali.</summary>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from the specified vector and rotation parts.">Crea un quaternione dal vettore e dalle parti vettore e rotazione specificate.</summary>
      <param name="vectorPart" vsli:raw="The vector part of the quaternion.">Parte vettore del quaternione.</param>
      <param name="scalarPart" vsli:raw="The rotation part of the quaternion.">Parte rotazione del quaternione.</param>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Constructs a quaternion from the specified components.">Costruisce un quaternione dai componenti specificati.</summary>
      <param name="x" vsli:raw="The value to assign to the X component of the quaternion.">Valore da assegnare al componente X del quaternione.</param>
      <param name="y" vsli:raw="The value to assign to the Y component of the quaternion.">Valore da assegnare al componente Y del quaternione.</param>
      <param name="z" vsli:raw="The value to assign to the Z component of the quaternion.">Valore da assegnare al componente Z del quaternione.</param>
      <param name="w" vsli:raw="The value to assign to the W component of the quaternion.">Valore da assegnare al componente W del quaternione.</param>
    </member>
    <member name="M:System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">Aggiunge ogni elemento in un quaternione con il relativo elemento corrispondente in un secondo quaternione.</summary>
      <param name="value1" vsli:raw="The first quaternion.">Primo quaternione.</param>
      <param name="value2" vsli:raw="The second quaternion.">Secondo quaternione.</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">Quaternione contenente i valori sommati di <paramref name="value1" /> e <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Concatenates two quaternions.">Concatena due quaternioni.</summary>
      <param name="value1" vsli:raw="The first quaternion rotation in the series.">Prima rotazione del quaternione nella serie.</param>
      <param name="value2" vsli:raw="The second quaternion rotation in the series.">Seconda rotazione del quaternione nella serie.</param>
      <returns vsli:raw="A new quaternion representing the concatenation of the &lt;paramref name=&quot;value1&quot; /&gt; rotation followed by the &lt;paramref name=&quot;value2&quot; /&gt; rotation.">Nuovo quaternione che rappresenta la concatenazione della rotazione di <paramref name="value1" /> seguita dalla rotazione di <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the conjugate of a specified quaternion.">Restituisce il coniugato del quaternione specificato.</summary>
      <param name="value" vsli:raw="The quaternion.">Quaternione.</param>
      <returns vsli:raw="A new quaternion that is the conjugate of &lt;see langword=&quot;value&quot; /&gt;.">Nuovo quaternione coniugato di <see langword="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from a unit vector and an angle to rotate around the vector.">Crea un quaternione da un vettore unitario e un angolo per la rotazione del vettore.</summary>
      <param name="axis" vsli:raw="The unit vector to rotate around.">Vettore unitario da sottoporre a rotazione.</param>
      <param name="angle" vsli:raw="The angle, in radians, to rotate around the vector.">Angolo, in radianti, di rotazione intorno al vettore.</param>
      <returns vsli:raw="The newly created quaternion.">Quaternione appena creato.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Creates a quaternion from the specified rotation matrix.">Crea un quaternione dalla matrice di rotazione specificata.</summary>
      <param name="matrix" vsli:raw="The rotation matrix.">Matrice di rotazione.</param>
      <returns vsli:raw="The newly created quaternion.">Quaternione appena creato.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a new quaternion from the given yaw, pitch, and roll.">Crea un nuovo quaternione dalla rotazione intorno agli assi y, x e z specificati.</summary>
      <param name="yaw" vsli:raw="The yaw angle, in radians, around the Y axis.">Angolo di rotazione intorno all'asse Y, in radianti.</param>
      <param name="pitch" vsli:raw="The pitch angle, in radians, around the X axis.">Angolo di rotazione intorno all'asse X, in radianti.</param>
      <param name="roll" vsli:raw="The roll angle, in radians, around the Z axis.">Angolo di rotazione intorno all'asse Z, in radianti.</param>
      <returns vsli:raw="The resulting quaternion.">Quaternione risultante.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">Divide un quaternione per un secondo quaternione.</summary>
      <param name="value1" vsli:raw="The dividend.">Dividendo.</param>
      <param name="value2" vsli:raw="The divisor.">Divisore.</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">Quaternione risultante dalla divisione di <paramref name="value1" /> per <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Calculates the dot product of two quaternions.">Calcola il prodotto scalare di due quaternioni.</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">Primo quaternione.</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">Secondo quaternione.</param>
      <returns vsli:raw="The dot product.">Prodotto scalare.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another quaternion are equal.">Restituisce un valore che indica se questa istanza è uguale a un altro quaternione.</summary>
      <param name="other" vsli:raw="The other quaternion.">L'altro quaternione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i due quaternioni sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Oggetto da confrontare con l'istanza corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'istanza corrente è uguale a <paramref name="obj" />; in caso contrario, <see langword="false" />. Se <paramref name="obj" /> è <see langword="null" />, il metodo restituisce <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Restituisce il codice hash per l'istanza.</summary>
      <returns vsli:raw="The hash code.">Codice hash.</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.Identity">
      <summary vsli:raw="Gets a quaternion that represents no rotation.">Ottiene un quaternione che non rappresenta alcuna rotazione.</summary>
      <returns vsli:raw="A quaternion whose values are &lt;c&gt;(0, 0, 0, 1)&lt;/c&gt;.">Quaternione i cui valori sono <c>(0, 0, 0, 1)</c>.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the inverse of a quaternion.">Restituisce l'inversa di un quaternione.</summary>
      <param name="value" vsli:raw="The quaternion.">Quaternione.</param>
      <returns vsli:raw="The inverted quaternion.">Quaternione invertito.</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether the current instance is the identity quaternion.">Ottiene un valore che indica se l'istanza corrente è il quaternione identità.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance is the identity quaternion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'istanza corrente è il quaternione identità; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Length">
      <summary vsli:raw="Calculates the length of the quaternion.">Calcola la lunghezza del quaternione.</summary>
      <returns vsli:raw="The computed length of the quaternion.">Lunghezza calcolata del quaternione.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.LengthSquared">
      <summary vsli:raw="Calculates the squared length of the quaternion.">Calcola la lunghezza quadratica del quaternione.</summary>
      <returns vsli:raw="The length squared of the quaternion.">Lunghezza quadratica del quaternione.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two quaternions based on a value that specifies the weighting of the second quaternion.">Esegue un'interpolazione lineare tra due quaternioni in base a un valore che specifica il peso del secondo quaternione.</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">Primo quaternione.</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">Secondo quaternione.</param>
      <param name="amount" vsli:raw="The relative weight of &lt;paramref name=&quot;quaternion2&quot; /&gt; in the interpolation.">Peso relativo dell'oggetto <paramref name="quaternion2" /> nell'interpolazione.</param>
      <returns vsli:raw="The interpolated quaternion.">Quaternione interpolato.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">Restituisce il quaternione risultante dalla moltiplicazione di due quaternioni.</summary>
      <param name="value1" vsli:raw="The first quaternion.">Primo quaternione.</param>
      <param name="value2" vsli:raw="The second quaternion.">Secondo quaternione.</param>
      <returns vsli:raw="The product quaternion.">Quaternione prodotto.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">Restituisce il quaternione risultante dal ridimensionamento di tutti i componenti di un quaternione specificato per un fattore scalare.</summary>
      <param name="value1" vsli:raw="The source quaternion.">Quaternione di origine.</param>
      <param name="value2" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The scaled quaternion.">Quaternione scalato.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">Inverte il segno di ogni componente del quaternione.</summary>
      <param name="value" vsli:raw="The quaternion to negate.">Quaternione da negare.</param>
      <returns vsli:raw="The negated quaternion.">Quaternione negato.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)">
      <summary vsli:raw="Divides each component of a specified &lt;see cref=&quot;T:System.Numerics.Quaternion&quot; /&gt; by its length.">Divide ogni componente di un oggetto <see cref="T:System.Numerics.Quaternion" /> specificato per la relativa lunghezza.</summary>
      <param name="value" vsli:raw="The quaternion to normalize.">Quaternione da normalizzare.</param>
      <returns vsli:raw="The normalized quaternion.">Quaternione normalizzato.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">Aggiunge ogni elemento in un quaternione con il relativo elemento corrispondente in un secondo quaternione.</summary>
      <param name="value1" vsli:raw="The first quaternion.">Primo quaternione.</param>
      <param name="value2" vsli:raw="The second quaternion.">Secondo quaternione.</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">Quaternione contenente i valori sommati di <paramref name="value1" /> e <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">Divide un quaternione per un secondo quaternione.</summary>
      <param name="value1" vsli:raw="The dividend.">Dividendo.</param>
      <param name="value2" vsli:raw="The divisor.">Divisore.</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">Quaternione risultante dalla divisione di <paramref name="value1" /> per <paramref name="value2" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are equal.">Restituisce un valore che indica se due quaternioni sono uguali.</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">Primo quaternione da confrontare.</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">Secondo quaternione da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i due quaternioni sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are not equal.">Restituisce un valore che indica se due quaternioni non sono uguali.</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">Primo quaternione da confrontare.</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">Secondo quaternione da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">Restituisce il quaternione risultante dalla moltiplicazione di due quaternioni.</summary>
      <param name="value1" vsli:raw="The first quaternion.">Primo quaternione.</param>
      <param name="value2" vsli:raw="The second quaternion.">Secondo quaternione.</param>
      <returns vsli:raw="The product quaternion.">Quaternione prodotto.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">Restituisce il quaternione risultante dal ridimensionamento di tutti i componenti di un quaternione specificato per un fattore scalare.</summary>
      <param name="value1" vsli:raw="The source quaternion.">Quaternione di origine.</param>
      <param name="value2" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The scaled quaternion.">Quaternione scalato.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">Sottrae ogni elemento in un secondo quaternione dall'elemento corrispondente in un primo quaternione.</summary>
      <param name="value1" vsli:raw="The first quaternion.">Primo quaternione.</param>
      <param name="value2" vsli:raw="The second quaternion.">Secondo quaternione.</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">Quaternione contenente i valori risultanti dalla sottrazione di ogni elemento in <paramref name="value2" /> dal relativo elemento corrispondente in <paramref name="value1" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">Inverte il segno di ogni componente del quaternione.</summary>
      <param name="value" vsli:raw="The quaternion to negate.">Quaternione da negare.</param>
      <returns vsli:raw="The negated quaternion.">Quaternione negato.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Interpolates between two quaternions, using spherical linear interpolation.">Esegue l'interpolazione tra due quaternioni usando l'interpolazione lineare sferica.</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">Primo quaternione.</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">Secondo quaternione.</param>
      <param name="amount" vsli:raw="The relative weight of the second quaternion in the interpolation.">Peso relativo del secondo quaternione nell'interpolazione.</param>
      <returns vsli:raw="The interpolated quaternion.">Quaternione interpolato.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">Sottrae ogni elemento in un secondo quaternione dall'elemento corrispondente in un primo quaternione.</summary>
      <param name="value1" vsli:raw="The first quaternion.">Primo quaternione.</param>
      <param name="value2" vsli:raw="The second quaternion.">Secondo quaternione.</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">Quaternione contenente i valori risultanti dalla sottrazione di ogni elemento in <paramref name="value2" /> dal relativo elemento corrispondente in <paramref name="value1" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.ToString">
      <summary vsli:raw="Returns a string that represents this quaternion.">Restituisce una stringa che rappresenta il quaternione corrente.</summary>
      <returns vsli:raw="The string representation of this quaternion.">Rappresentazione di stringa di questo quaternione.</returns>
    </member>
    <member name="F:System.Numerics.Quaternion.W">
      <summary vsli:raw="The rotation component of the quaternion.">Componente rotazione del quaternione.</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.X">
      <summary vsli:raw="The X value of the vector component of the quaternion.">Valore X del componente del vettore del quaternione.</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Y">
      <summary vsli:raw="The Y value of the vector component of the quaternion.">Valore Y del componente del vettore del quaternione.</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Z">
      <summary vsli:raw="The Z value of the vector component of the quaternion.">Valore Z del componente del vettore del quaternione.</summary>
    </member>
    <member name="T:System.Numerics.Vector">
      <summary vsli:raw="Provides a collection of static methods for creating, manipulating, and otherwise operating on generic vectors.">Fornisce una raccolta di metodi pratici statici per la creazione, la modifica, la combinazione e la conversione di vettori generici.</summary>
    </member>
    <member name="M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the absolute values of the given vector's elements.">Restituisce un nuovo vettore i cui elementi sono i valori assoluti di ognuno degli elementi del vettore specificato.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The absolute value vector.">Valore assoluto del vettore.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the sum of each pair of elements from two given vectors.">Restituisce un nuovo vettore i cui valori sono la somma di ogni coppia di elementi da due vettori specificati.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The summed vector.">Vettore sommato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise And Not operation on each pair of corresponding elements in two vectors.">Restituisce un nuovo vettore tramite un'operazione And Not bit per bit in ogni coppia di elementi corrispondenti in due vettori.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">Vettore risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned bytes.">Reinterpreta i bit di un vettore specificato in quelli di un vettore di byte senza segno.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a double-precision floating-point vector.">Reinterpreta i bit di un vettore specificato in quelli di un vettore a virgola mobile a precisione doppia.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of 16-bit integers.">Reinterpreta i bit di un vettore specificato in quelli di un vettore di interi a 16 bit.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of integers.">Reinterpreta i bit di un vettore specificato in quelli di un vettore di interi.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of long integers.">Reinterpreta i bit di un vettore specificato in quelli di un vettore di valori Long Integer.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of signed bytes.">Reinterpreta i bit di un vettore specificato in quelli di un vettore di byte con segno.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a single-precision floating-point vector.">Reinterpreta i bit di un vettore specificato in quelli di un vettore a virgola mobile a precisione singola.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned 16-bit integers.">Reinterpreta i bit di un vettore specificato in quelli di un vettore di interi senza segno a 16 bit.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned integers.">Reinterpreta i bit di un vettore specificato in quelli di un vettore di interi senza segno.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned long integers.">Reinterpreta i bit di un vettore specificato in quelli di un vettore di valori Unsigned Long Integer.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each pair of elements in two vectors.">Restituisce un nuovo vettore tramite un'operazione <see langword="And" /> bit per bit in ogni coppia di elementi in due vettori.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">Vettore risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each pair of elements in two vectors.">Restituisce un nuovo vettore tramite un'operazione <see langword="Or" /> bit per bit in ogni coppia di elementi in due vettori.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">Vettore risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Creates a new single-precision vector with elements selected between two specified single-precision source vectors based on an integral mask vector.">Crea un nuovo vettore a precisione singola con gli elementi selezionati tra due vettori di origine a precisione singola specificati in base a un mascheramento vettore integrale.</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">Vettore mascheramento integrale usato per la selezione.</param>
      <param name="left" vsli:raw="The first source vector.">Primo vettore di origine.</param>
      <param name="right" vsli:raw="The second source vector.">Secondo vettore di origine.</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">Nuovo vettore con gli elementi selezionati in base alla maschera.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Creates a new double-precision vector with elements selected between two specified double-precision source vectors based on an integral mask vector.">Crea un nuovo vettore a precisione doppia con gli elementi selezionati tra due vettori di origine a precisione doppia specificati in base a un mascheramento vettore integrale.</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">Vettore mascheramento integrale usato per la selezione.</param>
      <param name="left" vsli:raw="The first source vector.">Primo vettore di origine.</param>
      <param name="right" vsli:raw="The second source vector.">Secondo vettore di origine.</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">Nuovo vettore con gli elementi selezionati in base alla maschera.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Creates a new vector of a specified type with elements selected between two specified source vectors of the same type based on an integral mask vector.">Crea un nuovo vettore di un tipo specificato con gli elementi selezionati tra due vettori di origine specificati in base a un mascheramento vettore integrale.</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">Vettore mascheramento integrale usato per la selezione.</param>
      <param name="left" vsli:raw="The first source vector.">Primo vettore di origine.</param>
      <param name="right" vsli:raw="The second source vector.">Secondo vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The new vector with elements selected based on the mask.">Nuovo vettore con gli elementi selezionati in base alla maschera.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">Converte un valore <c>Vector&lt;Int64&gt;</c> in <c>Vector&lt;Double&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <returns vsli:raw="The converted vector.">Vettore convertito.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">Converte un valore <c>Vector&lt;UInt64&gt;</c> in <c>Vector&lt;Double&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <returns vsli:raw="The converted vector.">Vettore convertito.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">Converte un valore <c>Vector&lt;Single&gt;</c> in <c>Vector&lt;Int32&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <returns vsli:raw="The converted vector.">Vettore convertito.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt;.">Converte un valore <c>Vector&lt;Double&gt;</c> in <c>Vector&lt;Int64&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <returns vsli:raw="The converted vector.">Vettore convertito.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">Converte un valore <c>Vector&lt;Int32&gt;</c> in <c>Vector&lt;Single&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <returns vsli:raw="The converted vector.">Vettore convertito.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">Converte un valore <c>Vector&lt;UInt32&gt;</c> in <c>Vector&lt;Single&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <returns vsli:raw="The converted vector.">Vettore convertito.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">Converte un valore <c>Vector&lt;Single&gt;</c> in <c>Vector&lt;UInt32&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <returns vsli:raw="The converted vector.">Vettore convertito.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt;.">Converte un valore <c>Vector&lt;Double&gt;</c> in <c>Vector&lt;UInt64&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <returns vsli:raw="The converted vector.">Vettore convertito.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the result of dividing the first vector's elements by the corresponding elements in the second vector.">Restituisce un nuovo vettore i cui valori sono il risultato della divisione degli elementi del primo vettore per gli elementi corrispondenti nel secondo vettore.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The divided vector.">Valore diviso.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns the dot product of two vectors.">Restituisce il prodotto scalare di due vettori.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The dot product.">Prodotto scalare.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified double-precision vectors are equal.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in due vettori a precisione doppia specificati sono uguali.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified integral vectors are equal.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in due vettori integrali specificati sono uguali.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in two specified long integer vectors are equal.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in due vettori di tipo Long Integer specificati sono uguali.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting long integer vector.">Vettore di tipo Long Integer risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified single-precision vectors are equal.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in due vettori a precisione singola specificati sono uguali.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in two specified vectors of the same type are equal.">Restituisce un nuovo vettore di un tipo specificato i cui elementi indicano se gli elementi in due vettori specificati dello stesso tipo sono uguali.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">Vettore risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in the given vectors is equal.">Restituisce un valore che indica se le coppie di elementi nei vettori specificati sono uguali.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se tutti gli elementi in <paramref name="left" /> e <paramref name="right" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the given vectors is equal.">Restituisce un valore che indica se qualsiasi coppia singola di elementi in due vettori specificati è uguale.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pair in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; is equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se qualsiasi coppia singola in <paramref name="left" /> e <paramref name="right" /> è uguale; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are greater than their corresponding elements in a second double-precision floating-point vector.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in un vettore a virgola mobile a precisione doppia sono maggiori dei relativi elementi corrispondenti in un secondo vettore a virgola mobile a precisione doppia.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than their corresponding elements in a second integral vector.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in un vettore integrale sono maggiori dei relativi elementi corrispondenti nel secondo vettore integrale.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than their corresponding elements in a second long integer vector.">Restituisce un nuovo vettore di tipo Long Integer i cui elementi indicano se gli elementi in un vettore di tipo Long Integer sono maggiori dei relativi elementi corrispondenti in un secondo vettore di tipo Long Integer.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting long integer vector.">Vettore di tipo Long Integer risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are greater than their corresponding elements in a second single-precision floating-point vector.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in un vettore a virgola mobile a precisione singola sono maggiori dei relativi elementi corrispondenti in un secondo vettore a virgola mobile a precisione singola.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than their corresponding elements in the second vector of the same time.">Restituisce un nuovo vettore i cui elementi indicano se gli elementi in un vettore di un tipo specificato sono maggiori dei relativi elementi corrispondenti nel secondo vettore dello stesso tipo.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">Vettore risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than the corresponding elements in the second vector.">Restituisce un valore che indica se tutti gli elementi nel primo vettore sono maggiori degli elementi corrispondenti nel secondo vettore.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se tutti gli elementi in <paramref name="left" /> sono maggiori degli elementi corrispondenti in <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than the corresponding element in the second vector.">Restituisce un valore che indica se qualsiasi elemento nel primo vettore è maggiore dell'elemento corrispondente nel secondo vettore.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se qualsiasi elemento in <paramref name="left" /> è maggiore dell'elemento corrispondente in <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the second double-precision floating-point vector.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in un vettore sono maggiori o uguali ai relativi elementi corrispondenti nel secondo vettore a virgola mobile a precisione doppia.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than or equal to their corresponding elements in the second integral vector.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in un vettore integrale sono maggiori o uguali ai relativi elementi corrispondenti nel secondo vettore integrale.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than or equal to their corresponding elements in the second long integer vector.">Restituisce un nuovo vettore Long Integer i cui elementi indicano se gli elementi in un vettore Long Integer sono maggiori o uguali ai relativi elementi corrispondenti nel secondo vettore Long Integer.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting long integer vector.">Vettore di tipo Long Integer risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the single-precision floating-point second vector.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in un vettore sono maggiori o uguali ai relativi elementi corrispondenti nel secondo vettore a virgola mobile a precisione singola.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than or equal to their corresponding elements in the second vector of the same type.">Restituisce un nuovo vettore i cui elementi indicano se gli elementi in un vettore di un tipo specificato sono maggiori o uguali ai relativi elementi corrispondenti nel secondo vettore dello stesso tipo.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">Vettore risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than or equal to all the corresponding elements in the second vector.">Restituisce un valore che indica se tutti gli elementi nel primo vettore sono maggiori  uguali a tutti gli elementi corrispondenti nel secondo vettore.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se tutti gli elementi in <paramref name="left" /> sono maggiori o uguali agli elementi corrispondenti in <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than or equal to the corresponding element in the second vector.">Restituisce un valore che indica se qualsiasi elemento nel primo vettore è maggiore o uguale all'elemento corrispondente nel secondo vettore.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se qualsiasi elemento in <paramref name="left" /> è maggiore o uguale all'elemento corrispondente in <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.Vector.IsHardwareAccelerated">
      <summary vsli:raw="Gets a value that indicates whether vector operations are subject to hardware acceleration through JIT intrinsic support.">Ottiene un valore che indica se le operazioni vettore sono soggette ad accelerazione hardware tramite supporto intrinseco JIT.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if vector operations are subject to hardware acceleration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le operazioni vettore sono soggette ad accelerazione hardware; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than their corresponding elements in a second double-precision floating-point vector.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in un vettore a virgola mobile a precisione doppia sono minori dei relativi elementi corrispondenti in un secondo vettore a virgola mobile a precisione doppia.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than their corresponding elements in a second integral vector.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in un vettore integrale sono minori dei relativi elementi corrispondenti nel secondo vettore integrale.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less than their corresponding elements in a second long integer vector.">Restituisce un nuovo vettore Long Integer i cui elementi indicano se gli elementi in un vettore Long Integer sono minori dei relativi elementi corrispondenti in un secondo vettore Long Integer.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting long integer vector.">Vettore di tipo Long Integer risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision vector are less than their corresponding elements in a second single-precision vector.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in un vettore a precisione singola sono minori dei relativi elementi corrispondenti in un secondo vettore a precisione singola.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in one vector are less than their corresponding elements in the second vector.">Restituisce un nuovo vettore di un tipo specificato i cui elementi indicano se gli elementi in un vettore sono minori dei relativi elementi corrispondenti nel secondo vettore.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">Vettore risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all of the elements in the first vector are less than their corresponding elements in the second vector.">Restituisce un valore che indica se tutti gli elementi nel primo vettore sono minori degli elementi corrispondenti nel secondo vettore.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se tutti gli elementi in <paramref name="left" /> sono minori degli elementi corrispondenti in <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than the corresponding element in the second vector.">Restituisce un valore che indica se qualsiasi elemento nel primo vettore è minore dell'elemento corrispondente nel secondo vettore.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se qualsiasi elemento in <paramref name="left" /> è minore dell'elemento corrispondente in <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than or equal to their corresponding elements in a second double-precision floating-point vector.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in un vettore a virgola mobile a precisione doppia sono minori o uguali ai relativi elementi corrispondenti in un secondo vettore a virgola mobile a precisione doppia.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than or equal to their corresponding elements in a second integral vector.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in un vettore integrale sono minori o uguali ai relativi elementi corrispondenti nel secondo vettore integrale.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less or equal to their corresponding elements in a second long integer vector.">Restituisce un nuovo vettore Long Integer i cui elementi indicano se gli elementi in un vettore Long Integer sono minori o uguali ai relativi elementi corrispondenti in un secondo vettore Long Integer.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting long integer vector.">Vettore di tipo Long Integer risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are less than or equal to their corresponding elements in a second single-precision floating-point vector.">Restituisce un nuovo vettore integrale i cui elementi indicano se gli elementi in un vettore a virgola mobile a precisione singola sono minori o uguali ai relativi elementi corrispondenti in un secondo vettore a virgola mobile a precisione singola.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="The resulting integral vector.">Vettore integrale risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector are less than or equal to their corresponding elements in the second vector.">Restituisce un nuovo vettore i cui elementi indicano se gli elementi in un vettore sono minori o uguali ai relativi elementi corrispondenti nel secondo vettore.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">Vettore risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are less than or equal to their corresponding elements in the second vector.">Restituisce un valore che indica se tutti gli elementi nel primo vettore sono minori o uguali agli elementi corrispondenti nel secondo vettore.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se tutti gli elementi in <paramref name="left" /> sono minori o uguali agli elementi corrispondenti in <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than or equal to the corresponding element in the second vector.">Restituisce un valore che indica se qualsiasi elemento nel primo vettore è minore o uguale all'elemento corrispondente nel secondo vettore.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se qualsiasi elemento in <paramref name="left" /> è minore o uguale all'elemento corrispondente in <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the maximum of each pair of elements in the two given vectors.">Restituisce un nuovo vettore i cui elementi sono costituiti dal valore più alto di ogni coppia di elementi nei due vettori specificati.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The maximum vector.">Vettore massimo.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the minimum of each pair of elements in the two given vectors.">Restituisce un nuovo vettore i cui elementi sono costituiti dal valore più basso di ogni coppia di elementi nei due vettori specificati.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The minimum vector.">Vettore minimo.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are a scalar value multiplied by each of the values of a specified vector.">Restituisce un nuovo vettore i cui valori sono un valore scalare moltiplicato per ognuno dei valori di un vettore specificato.</summary>
      <param name="left" vsli:raw="The scalar value.">Valore scalare.</param>
      <param name="right" vsli:raw="The vector.">Vettore.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
      <summary vsli:raw="Returns a new vector whose values are the values of a specified vector each multiplied by a scalar value.">Restituisce un nuovo vettore i cui valori sono un valore scalare moltiplicato per ognuno dei valori di un vettore specificato.</summary>
      <param name="left" vsli:raw="The vector.">Vettore.</param>
      <param name="right" vsli:raw="The scalar value.">Valore scalare.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Restituisce un nuovo vettore i cui valori sono il prodotto di ogni coppia di elementi in due vettori specificati.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The element-wise product vector.">Vettore prodotto per gli elementi.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">Restringe due istanze di <c>Vector&lt;Double&gt;</c> in un unico <c>Vector&lt;Single&gt;</c>.</summary>
      <param name="source1">Primo vettore di origine, i cui elementi diventano gli elementi di indice inferiore del valore restituito.</param>
      <param name="source2">Secondo vettore di origine, i cui elementi diventano gli elementi di indice superiore del valore restituito.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <c>Vector&lt;Single&gt;</c> contenente gli elementi ristretti dai vettori di origine.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt;.">Restringe due istanze di <c>Vector&lt;Int16&gt;</c> in un unico <c>Vector&lt;SByte&gt;</c>.</summary>
      <param name="source1">Primo vettore di origine, i cui elementi diventano gli elementi di indice inferiore del valore restituito.</param>
      <param name="source2">Secondo vettore di origine, i cui elementi diventano gli elementi di indice superiore del valore restituito.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <c>Vector&lt;SByte&gt;</c> contenente gli elementi ristretti dai vettori di origine.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt;.">Restringe due istanze di <c>Vector&lt;Int32&gt;</c> in un unico <c>Vector&lt;Int16&gt;</c>.</summary>
      <param name="source1">Primo vettore di origine, i cui elementi diventano gli elementi di indice inferiore del valore restituito.</param>
      <param name="source2">Secondo vettore di origine, i cui elementi diventano gli elementi di indice superiore del valore restituito.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <c>Vector&lt;Int16&gt;</c> contenente gli elementi ristretti dai vettori di origine.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">Restringe due istanze di <c>Vector&lt;Int64&gt;</c> in un unico <c>Vector&lt;Int32&gt;</c>.</summary>
      <param name="source1">Primo vettore di origine, i cui elementi diventano gli elementi di indice inferiore del valore restituito.</param>
      <param name="source2">Secondo vettore di origine, i cui elementi diventano gli elementi di indice superiore del valore restituito.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <c>Vector&lt;Int32&gt;</c> contenente gli elementi ristretti dai vettori di origine.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt;.">Restringe due istanze di <c>Vector&lt;UInt16&gt;</c> in un unico <c>Vector&lt;Byte&gt;</c>.</summary>
      <param name="source1">Primo vettore di origine, i cui elementi diventano gli elementi di indice inferiore del valore restituito.</param>
      <param name="source2">Secondo vettore di origine, i cui elementi diventano gli elementi di indice superiore del valore restituito.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <c>Vector&lt;Byte&gt;</c> contenente gli elementi ristretti dai vettori di origine.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt;.">Restringe due istanze di <c>Vector&lt;UInt32&gt;</c> in un unico <c>Vector&lt;UInt16&gt;</c>.</summary>
      <param name="source1">Primo vettore di origine, i cui elementi diventano gli elementi di indice inferiore del valore restituito.</param>
      <param name="source2">Secondo vettore di origine, i cui elementi diventano gli elementi di indice superiore del valore restituito.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <c>Vector&lt;UInt16&gt;</c> contenente gli elementi ristretti dai vettori di origine.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">Restringe due istanze di <c>Vector&lt;UInt64&gt;</c> in un unico <c>Vector&lt;UInt32&gt;</c>.</summary>
      <param name="source1">Primo vettore di origine, i cui elementi diventano gli elementi di indice inferiore del valore restituito.</param>
      <param name="source2">Secondo vettore di origine, i cui elementi diventano gli elementi di indice superiore del valore restituito.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <c>Vector&lt;UInt32&gt;</c> contenente gli elementi ristretti dai vettori di origine.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the negation of the corresponding element in the specified vector.">Restituisce un nuovo vettore i cui elementi sono la negazione dell'elemento corrispondente nel vettore specificato.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The negated vector.">Vettore negato.</returns>
    </member>
    <member name="M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">Restituisce un nuovo vettore i cui elementi sono ottenuti prendendo il complemento a uno degli elementi di un vettore specificato.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">Vettore risultante.</returns>
    </member>
    <member name="M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the square roots of a specified vector's elements.">Restituisce un nuovo vettore i cui elementi sono le radici quadrate degli elementi del vettore specificato.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The square root vector.">Vettore radice quadrata.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the difference between the elements in the second vector and their corresponding elements in the first vector.">Restituisce un nuovo vettore i cui valori sono la differenza tra gli elementi nel secondo vettore e gli elementi corrispondenti nel primo vettore.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The difference vector.">Vettore differenza.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt16}@,System.Numerics.Vector{System.UInt16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances.">Estende un <c>Vector&lt;Byte&gt;</c> in due istanze di <c>Vector&lt;UInt16&gt;</c>.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Vettore di origine i cui elementi vengono estesi negli output.</param>
      <param name="dest1">Primo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici inferiori nel vettore di origine.</param>
      <param name="dest2">Secondo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici superiori nel vettore di origine.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int32}@,System.Numerics.Vector{System.Int32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances.">Estende un <c>Vector&lt;Int16&gt;</c> in due istanze di <c>Vector&lt;Int32&gt;</c>.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Vettore di origine i cui elementi vengono estesi negli output.</param>
      <param name="dest1">Primo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici inferiori nel vettore di origine.</param>
      <param name="dest2">Secondo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici superiori nel vettore di origine.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64}@,System.Numerics.Vector{System.Int64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances.">Estende un <c>Vector&lt;Int32&gt;</c> in due istanze di <c>Vector&lt;Int64&gt;</c>.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Vettore di origine i cui elementi vengono estesi negli output.</param>
      <param name="dest1">Primo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici inferiori nel vettore di origine.</param>
      <param name="dest2">Secondo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici superiori nel vettore di origine.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int16}@,System.Numerics.Vector{System.Int16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances.">Estende un <c>Vector&lt;SByte&gt;</c> in due istanze di <c>Vector&lt;Int16&gt;</c>.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Vettore di origine i cui elementi vengono estesi negli output.</param>
      <param name="dest1">Primo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici inferiori nel vettore di origine.</param>
      <param name="dest2">Secondo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici superiori nel vettore di origine.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Double}@,System.Numerics.Vector{System.Double}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances.">Estende un <c>Vector&lt;Single&gt;</c> in due istanze di <c>Vector&lt;Double&gt;</c>.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Vettore di origine i cui elementi vengono estesi negli output.</param>
      <param name="dest1">Primo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici inferiori nel vettore di origine.</param>
      <param name="dest2">Secondo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici superiori nel vettore di origine.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt32}@,System.Numerics.Vector{System.UInt32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances.">Estende un <c>Vector&lt;UInt16&gt;</c> in due istanze di <c>Vector&lt;UInt32&gt;</c>.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Vettore di origine i cui elementi vengono estesi negli output.</param>
      <param name="dest1">Primo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici inferiori nel vettore di origine.</param>
      <param name="dest2">Secondo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici superiori nel vettore di origine.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64}@,System.Numerics.Vector{System.UInt64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances.">Estende un <c>Vector&lt;UInt32&gt;</c> in due istanze di <c>Vector&lt;UInt64&gt;</c>.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Vettore di origine i cui elementi vengono estesi negli output.</param>
      <param name="dest1">Primo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici inferiori nel vettore di origine.</param>
      <param name="dest2">Secondo vettore di output, i cui elementi conterranno gli elementi estesi dagli indici superiori nel vettore di origine.</param>
    </member>
    <member name="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise exclusive Or (&lt;see langword=&quot;XOr&quot; /&gt;) operation on each pair of elements in two vectors.">Restituisce un nuovo vettore tramite un'operazione Or (<see langword="XOr" />) esclusiva bit per bit in ogni coppia di elementi in due vettori.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
      <returns vsli:raw="The resulting vector.">Vettore risultante.</returns>
    </member>
    <member name="T:System.Numerics.Vector`1">
      <summary vsli:raw="Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.">Rappresenta un singolo vettore di un tipo numerico specificato adatto per l'ottimizzazione a basso livello degli algoritmi paralleli.</summary>
      <typeparam name="T" vsli:raw="The type of the elements in the vector. &lt;typeparamref name=&quot;T&quot; /&gt; can be any primitive numeric type.">Tipo di vettore. <c>T</c> può essere qualsiasi tipo numerico primitivo.</typeparam>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0)">
      <summary vsli:raw="Creates a vector whose components are of a specified type.">Crea un vettore i cui componenti sono del tipo specificato.</summary>
      <param name="value" vsli:raw="The numeric type that defines the type of the components in the vector.">Tipo numerico che definisce il tipo dei componenti nel vettore.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[])">
      <summary vsli:raw="Creates a vector from a specified array.">Crea un vettore da una matrice specificata.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Matrice numerica.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
      <summary vsli:raw="Creates a vector from a specified array starting at a specified index position.">Crea un vettore da una matrice specificata, iniziando da una posizione di indice specificata.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements from the specified index and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Matrice numerica.</param>
      <param name="index" vsli:raw="The starting index position from which to create the vector.">Posizione di indice iniziale da cui creare il vettore.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The length of &lt;paramref name=&quot;values&quot; /&gt; minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" /> è minore di zero.
oppure
La lunghezza di <paramref name="values" /> meno <paramref name="index" /> è minore di <see cref="P:System.Numerics.Vector`1.Count" />.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.ReadOnlySpan`1&quot; /&gt;.">Costruisce un vettore dall'elemento <see cref="T:System.ReadOnlySpan`1" /> specificato.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a read-only span of objects of type &lt;see langword=&quot;T&quot; /&gt;. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Valori da aggiungere al vettore come intervallo di sola lettura di oggetti di tipo T. L'intervallo deve contenere almeno gli elementi <see cref="P:System.Numerics.Vector`1.Count" />.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Constructs a vector from the given read-only span of bytes.">Costruisce un vettore dall'intervallo di sola lettura di byte specificato.</summary>
      <param name="values" vsli:raw="A read-only span of bytes that contains the values to add to the vector. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Intervallo di sola lettura di byte contenente i valori da aggiungere al vettore. L'intervallo deve contenere almeno gli elementi <see cref="P:System.Numerics.Vector`1.Count" />.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.Span{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">Costruisce un vettore dall'elemento <see cref="T:System.Span`1" /> specificato.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a span of objects of type T. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Valori da aggiungere al vettore come intervallo di oggetti di tipo T. L'intervallo deve contenere almeno gli elementi <see cref="P:System.Numerics.Vector`1.Count" />.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[])">
      <summary vsli:raw="Copies the vector instance to a specified destination array.">Copia l'istanza del vettore in una matrice di destinazione specificata.</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">Matrice che riceve una copia dei valori del vettore.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current vector is greater than the number of elements available in the &lt;paramref name=&quot;destination&quot; /&gt; array.">Il numero di elementi nel vettore corrente è maggiore del numero di elementi disponibili nella matrice <paramref name="destination" />.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the vector instance to a specified destination array starting at a specified index position.">Copia l'istanza del vettore in una matrice di destinazione specificata, partendo dalla posizione dell'indice specificata.</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">Matrice che riceve una copia dei valori del vettore.</param>
      <param name="startIndex" vsli:raw="The starting index in &lt;paramref name=&quot;destination&quot; /&gt; at which to begin the copy operation.">Indice iniziale in <paramref name="destination" /> in corrispondenza del quale iniziare l'operazione di copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than the number of elements available from &lt;paramref name=&quot;startIndex&quot; /&gt; to the end of the &lt;paramref name=&quot;destination&quot; /&gt; array.">Il numero di elementi nell'istanza corrente è maggiore del numero di elementi disponibili da <paramref name="startIndex" /> alla fine della matrice <paramref name="destination" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero or greater than the last index in &lt;paramref name=&quot;destination&quot; /&gt;.">
        <paramref name="index" /> è minore di zero o maggiore dell'ultimo indice in <paramref name="destination" />.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{`0})">
      <summary vsli:raw="Copies the vector to the given span. .">Copia il vettore nell'intervallo specificato. .</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">Intervallo di destinazione in cui vengono copiati i valori. L'intervallo di destinazione deve essere almeno di dimensione <see cref="P:System.Numerics.Vector`1.Count" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">Il numero degli elementi nel vettore di origine è maggiore degli elementi disponibili nell'intervallo di destinazione.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">Copia il vettore nell'oggetto <see cref="T:System.Span`1" /> specificato.</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">Intervallo di destinazione in cui vengono copiati i valori. L'intervallo di destinazione deve essere almeno di dimensione <see cref="P:System.Numerics.Vector`1.Count" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">Il numero degli elementi nel vettore di origine è maggiore degli elementi disponibili nell'intervallo di destinazione.</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.Count">
      <summary vsli:raw="Returns the number of elements stored in the vector.">Restituisce il numero di elementi archiviati nel vettore.</summary>
      <returns vsli:raw="The number of elements stored in the vector.">Numero di elementi archiviati nel vettore.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Access to the property getter via reflection is not supported.&#xA;        &#xA;-or-&#xA;        &#xA;.NET 5 and later: Type &lt;see langword=&quot;T&quot; /&gt; is not supported.">L'accesso al getter proprietà tramite reflection non è supportato.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified vector.">Restituisce un valore che indica se questa istanza è uguale a un vettore specificato.</summary>
      <param name="other" vsli:raw="The vector to compare with this instance.">Vettore da confrontare con questa istanza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;other&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'istanza corrente è uguale a <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">Oggetto da confrontare con questa istanza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The method returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is null, or if &lt;paramref name=&quot;obj&quot; /&gt; is a vector of a different type than the current instance.">
        <see langword="true" /> se l'istanza corrente è uguale a <paramref name="obj" />; in caso contrario, <see langword="false" />. Il metodo restituisce <see langword="false" /> se <paramref name="obj" /> è Null o se <paramref name="obj" /> è un vettore di un tipo diverso da quello dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Restituisce il codice hash per l'istanza.</summary>
      <returns vsli:raw="The hash code.">Codice hash.</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Item(System.Int32)">
      <summary vsli:raw="Gets the element at a specified index.">Ottiene l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The index of the element to return.">Indice dell'elemento da restituire.</param>
      <returns vsli:raw="The element at index &lt;paramref name=&quot;index&quot; /&gt;.">Elemento in corrispondenza dell'indice <paramref name="index" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" /> è minore di zero.
oppure
<paramref name="index" /> è maggiore o uguale a <see cref="P:System.Numerics.Vector`1.Count" />.</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.One">
      <summary vsli:raw="Returns a vector containing all ones.">Restituisce un vettore contenente tutti uno.</summary>
      <returns vsli:raw="A vector containing all ones.">Vettore contenente tutti uno.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Adds two vectors together.">Somma due vettori.</summary>
      <param name="left" vsli:raw="The first vector to add.">Primo vettore da sommare.</param>
      <param name="right" vsli:raw="The second vector to add.">Secondo vettore da sommare.</param>
      <returns vsli:raw="The summed vector.">Vettore sommato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each of the elements in two vectors.">Restituisce un nuovo vettore tramite un'operazione <see langword="And" /> bit per bit in ognuno degli elementi in due vettori.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;And&quot; /&gt; of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Vettore risultante dall'operazione <see langword="And" /> bit per bit di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each of the elements in two vectors.">Restituisce un nuovo vettore tramite un'operazione <see langword="Or" /> bit per bit in ognuno degli elementi in due vettori.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;Or&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Vettore risultante dall'operazione <see langword="Or" /> bit per bit degli elementi in <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Divides the first vector by the second.">Divide il primo vettore per il secondo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">Vettore risultante dalla divisione di <paramref name="left" /> per <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors are equal.">Restituisce un valore che indica se le coppie di elementi in due vettori specificati sono uguali.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;XOr&quot; /&gt; operation on each of the elements in two vectors.">Restituisce un nuovo vettore tramite un'operazione <see langword="XOr" /> bit per bit in ognuno degli elementi in due vettori.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;XOr&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Vettore risultante dall'operazione <see langword="XOr" /> bit per bit degli elementi in <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;.">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.Byte" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Vettore da reinterpretare.</param>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.Double" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Vettore da reinterpretare.</param>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.Int16" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Vettore da reinterpretare.</param>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.Int32" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Vettore da reinterpretare.</param>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.Int64" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Vettore da reinterpretare.</param>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.SByte&quot; /&gt;.">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.SByte" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Vettore da reinterpretare.</param>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.Single" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Vettore da reinterpretare.</param>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt16&quot; /&gt;.">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.UInt16" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Vettore da reinterpretare.</param>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.UInt32" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Vettore da reinterpretare.</param>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.UInt64" />.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Vettore da reinterpretare.</param>
      <returns vsli:raw="The reinterpreted vector.">Vettore reinterpretato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the specified vectors is equal.">Restituisce un valore che indica se qualsiasi singola coppia di elementi nei vettori specificati è uguale.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pairs in left and right are equal. &lt;see langword=&quot;false&quot; /&gt; if no element pairs are equal.">
        <see langword="true" /> se una qualsiasi coppia di elementi a sinistra e destra è uguale. <see langword="false" /> se nessuna coppia di elementi è uguale.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">Moltiplica un vettore per un valore scalare specificato.</summary>
      <param name="factor" vsli:raw="The scalar value.">Valore scalare.</param>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">Moltiplica un vettore per un valore scalare specificato.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <param name="factor" vsli:raw="A scalar value.">Valore scalare.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Restituisce un nuovo vettore i cui valori sono il prodotto di ogni coppia di elementi in due vettori specificati.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The element-wise product vector.">Vettore prodotto per gli elementi.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">Restituisce un nuovo vettore i cui elementi sono ottenuti prendendo il complemento a uno degli elementi di un vettore specificato.</summary>
      <param name="value" vsli:raw="The source vector.">Vettore di origine.</param>
      <returns vsli:raw="The one's complement vector.">Vettore di complemento a uno.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Subtracts the second vector from the first.">Sottrae il secondo vettore dal primo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Vettore risultante dalla sottrazione di <paramref name="right" /> da <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
      <summary vsli:raw="Negates a given vector.">Nega un vettore specificato.</summary>
      <param name="value" vsli:raw="The vector to negate.">Vettore da negare.</param>
      <returns vsli:raw="The negated vector.">Vettore negato.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString">
      <summary vsli:raw="Returns the string representation of this vector using default formatting.">Restituisce la rappresentazione di stringa del vettore corrente usando la formattazione predefinita.</summary>
      <returns vsli:raw="The string representation of this vector.">Rappresentazione di stringa di questo vettore.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements.">Restituisce la rappresentazione di stringa del vettore corrente usando la stringa di formato specificata per formattare i singoli elementi.</summary>
      <param name="format" vsli:raw="The format of individual elements.">Oggetto che definisce il formato di singoli elementi.</param>
      <returns vsli:raw="The string representation of the current instance.">Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">Restituisce la rappresentazione di stringa del vettore corrente usando la stringa di formato specificata per formattare i singoli elementi e il provider di formato specificato per definire la formattazione specifica delle impostazioni cultura.</summary>
      <param name="format" vsli:raw="The format of individual elements.">Oggetto che definisce il formato di singoli elementi.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">Provider di formato che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="The string representation of the current instance.">Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{`0})">
      <summary vsli:raw="Attempts to copy the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">Tenta di copiare il vettore nell'elemento <see cref="T:System.Span`1" /> specificato.</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">Intervallo di destinazione in cui vengono copiati i valori. L'intervallo di destinazione deve essere almeno di dimensione <see cref="P:System.Numerics.Vector`1.Count" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">
        <see langword="true" /> se il vettore di origine è stato copiato correttamente in <paramref name="destination" />. <see langword="false" /> se <paramref name="destination" /> non è abbastanza ampio da contenere il vettore di origine.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Attempts to copy the vector to the given byte span.">Tenta di copiare il vettore nell'intervallo di byte specificato.</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">Intervallo di destinazione in cui vengono copiati i valori. L'intervallo di destinazione deve essere almeno di dimensione <see cref="P:System.Numerics.Vector`1.Count" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">
        <see langword="true" /> se il vettore di origine è stato copiato correttamente in <paramref name="destination" />. <see langword="false" /> se <paramref name="destination" /> non è abbastanza ampio da contenere il vettore di origine.</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Zero">
      <summary vsli:raw="Returns a vector containing all zeroes.">Restituisce un vettore contenente tutti zero.</summary>
      <returns vsli:raw="A vector containing all zeroes.">Vettore contenente tutti zero.</returns>
    </member>
    <member name="T:System.Numerics.Vector2">
      <summary vsli:raw="Represents a vector with two single-precision floating-point values.">Rappresenta un vettore con due valori a virgola mobile e precisione singola.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object whose two elements have the same value.">Crea un nuovo oggetto <see cref="T:System.Numerics.Vector2" /> i cui due elementi hanno lo stesso valore.</summary>
      <param name="value" vsli:raw="The value to assign to both elements.">Valore da assegnare a entrambi gli elementi.</param>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">Crea un vettore i cui elementi hanno i valori specificati.</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.X&quot; /&gt; field.">Valore da assegnare al campo <see cref="F:System.Numerics.Vector2.X" />.</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.Y&quot; /&gt; field.">Valore da assegnare al campo <see cref="F:System.Numerics.Vector2.Y" />.</param>
    </member>
    <member name="M:System.Numerics.Vector2.Abs(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">Restituisce un vettore i cui elementi sono i valori assoluti di ognuno degli elementi del vettore specificato.</summary>
      <param name="value" vsli:raw="A vector.">Vettore.</param>
      <returns vsli:raw="The absolute value vector.">Valore assoluto del vettore.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">Somma due vettori.</summary>
      <param name="left" vsli:raw="The first vector to add.">Primo vettore da sommare.</param>
      <param name="right" vsli:raw="The second vector to add.">Secondo vettore da sommare.</param>
      <returns vsli:raw="The summed vector.">Vettore sommato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">Limita un vettore tra un valore minimo e un valore massimo.</summary>
      <param name="value1" vsli:raw="The vector to restrict.">Vettore da limitare.</param>
      <param name="min" vsli:raw="The minimum value.">Valore minimo.</param>
      <param name="max" vsli:raw="The maximum value.">Valore massimo.</param>
      <returns vsli:raw="The restricted vector.">Vettore limitato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">Copia gli elementi del vettore nella matrice specificata.</summary>
      <param name="array" vsli:raw="The destination array.">Matrice di destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">Il numero di elementi nell'istanza corrente è maggiore di quello nella matrice.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> è multidimensionale.</exception>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">Copia gli elementi del vettore nella matrice specificata, partendo dalla posizione dell'indice specificata.</summary>
      <param name="array" vsli:raw="The destination array.">Matrice di destinazione.</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">Indice in cui copiare il primo elemento del vettore.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">Il numero di elementi nell'istanza corrente è maggiore di quello nella matrice.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> è minore di zero.
oppure
<paramref name="index" /> è maggiore o uguale alla lunghezza della matrice.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> è multidimensionale.</exception>
    </member>
    <member name="M:System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">Calcola la distanza euclidea tra due punti specificati.</summary>
      <param name="value1" vsli:raw="The first point.">Primo punto.</param>
      <param name="value2" vsli:raw="The second point.">Secondo punto.</param>
      <returns vsli:raw="The distance.">Distanza.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">Restituisce la distanza euclidea quadratica tra due punti specificati.</summary>
      <param name="value1" vsli:raw="The first point.">Primo punto.</param>
      <param name="value2" vsli:raw="The second point.">Secondo punto.</param>
      <returns vsli:raw="The distance squared.">Distanza quadratica.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">Divide il primo vettore per il secondo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector resulting from the division.">Vettore risultante dalla divisione.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Divide il vettore specificato per un valore scalare specificato.</summary>
      <param name="left" vsli:raw="The vector.">Vettore.</param>
      <param name="divisor" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The vector that results from the division.">Vettore risultante dalla divisione.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the dot product of two vectors.">Restituisce il prodotto scalare di due vettori.</summary>
      <param name="value1" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="value2" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The dot product.">Prodotto scalare.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">Restituisce un valore che indica se questa istanza è uguale a un altro vettore.</summary>
      <param name="other" vsli:raw="The other vector.">L'altro vettore.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i due vettori sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Oggetto da confrontare con l'istanza corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'istanza corrente è uguale a <paramref name="obj" />; in caso contrario, <see langword="false" />. Se <paramref name="obj" /> è <see langword="null" />, il metodo restituisce <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Restituisce il codice hash per l'istanza.</summary>
      <returns vsli:raw="The hash code.">Codice hash.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Length">
      <summary vsli:raw="Returns the length of the vector.">Restituisce la lunghezza del vettore.</summary>
      <returns vsli:raw="The vector's length.">Lunghezza del vettore.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">Restituisce la lunghezza del vettore al quadrato.</summary>
      <returns vsli:raw="The vector's length squared.">Lunghezza al quadrato del vettore.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">Esegue un'interpolazione lineare tra due vettori in base al peso specificato.</summary>
      <param name="value1" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="value2" vsli:raw="The second vector.">Secondo vettore.</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">Valore compreso tra 0 e 1 che indica il peso di <paramref name="value2" />.</param>
      <returns vsli:raw="The interpolated vector.">Vettore interpolato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">Restituisce un vettore che contiene il valore più alto da ognuna delle coppie di elementi nei due vettori specificati.</summary>
      <param name="value1" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="value2" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The maximized vector.">Vettore massimizzato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">Restituisce un vettore che contiene il valore più basso da ognuna delle coppie di elementi nei due vettori specificati.</summary>
      <param name="value1" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="value2" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The minimized vector.">Vettore minimizzato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Restituisce un nuovo vettore i cui valori sono il prodotto di ogni coppia di elementi in due vettori specificati.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The element-wise product vector.">Vettore prodotto per gli elementi.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">Moltiplica un vettore per un valore scalare specificato.</summary>
      <param name="left" vsli:raw="The vector to multiply.">Vettore da moltiplicare.</param>
      <param name="right" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">Moltiplica un valore scalare per un vettore specificato.</summary>
      <param name="left" vsli:raw="The scaled value.">Valore scalato.</param>
      <param name="right" vsli:raw="The vector.">Vettore.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Negate(System.Numerics.Vector2)">
      <summary vsli:raw="Negates a specified vector.">Nega un vettore specificato.</summary>
      <param name="value" vsli:raw="The vector to negate.">Vettore da negare.</param>
      <returns vsli:raw="The negated vector.">Vettore negato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Normalize(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">Restituisce un vettore con la stessa direzione del vettore specificato, ma con una lunghezza di uno.</summary>
      <param name="value" vsli:raw="The vector to normalize.">Vettore da normalizzare.</param>
      <returns vsli:raw="The normalized vector.">Vettore normalizzato.</returns>
    </member>
    <member name="P:System.Numerics.Vector2.One">
      <summary vsli:raw="Gets a vector whose 2 elements are equal to one.">Ottiene un vettore i cui 2 elementi sono uguali a uno.</summary>
      <returns vsli:raw="A vector whose two elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1)&lt;/c&gt;).">Vettore i cui due elementi sono uguali a uno (ovvero, restituisce il vettore <c>(1,1)</c>.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">Somma due vettori.</summary>
      <param name="left" vsli:raw="The first vector to add.">Primo vettore da sommare.</param>
      <param name="right" vsli:raw="The second vector to add.">Secondo vettore da sommare.</param>
      <returns vsli:raw="The summed vector.">Vettore sommato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">Divide il primo vettore per il secondo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">Vettore risultante dalla divisione di <paramref name="left" /> per <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Divide il vettore specificato per un valore scalare specificato.</summary>
      <param name="value1" vsli:raw="The vector.">Vettore.</param>
      <param name="value2" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The result of the division.">Risultato della divisione.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">Restituisce un valore che indica se le coppie di elementi in due vettori specificati sono uguali.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">Restituisce un valore che indica se due vettori specificati non sono uguali.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Restituisce un nuovo vettore i cui valori sono il prodotto di ogni coppia di elementi in due vettori specificati.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The element-wise product vector.">Vettore prodotto per gli elementi.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">Moltiplica il vettore specificato per il valore scalare specificato.</summary>
      <param name="left" vsli:raw="The vector.">Vettore.</param>
      <param name="right" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">Moltiplica il valore scalare per il vettore specificato.</summary>
      <param name="left" vsli:raw="The vector.">Vettore.</param>
      <param name="right" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">Sottrae il secondo vettore dal primo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Vettore risultante dalla sottrazione di <paramref name="right" /> da <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)">
      <summary vsli:raw="Negates the specified vector.">Nega il vettore specificato.</summary>
      <param name="value" vsli:raw="The vector to negate.">Vettore da negare.</param>
      <returns vsli:raw="The negated vector.">Vettore negato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">Restituisce la reflection di un vettore da una superficie con la normale specificata.</summary>
      <param name="vector" vsli:raw="The source vector.">Vettore di origine.</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">Normale della superficie riflessa.</param>
      <returns vsli:raw="The reflected vector.">Vettore riflesso.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">Restituisce un vettore i cui elementi sono la radice quadrata di ognuno degli elementi del vettore specificato.</summary>
      <param name="value" vsli:raw="A vector.">Vettore.</param>
      <returns vsli:raw="The square root vector.">Vettore radice quadrata.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">Sottrae il secondo vettore dal primo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The difference vector.">Vettore differenza.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">Restituisce la rappresentazione di stringa dell'istanza corrente usando la formattazione predefinita.</summary>
      <returns vsli:raw="The string representation of the current instance.">Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">Restituisce la rappresentazione di stringa dell'istanza corrente usando la stringa di formato specificata per formattare i singoli elementi.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Stringa di formato standard o numerico personalizzato che definisce il formato dei singoli elementi.</param>
      <returns vsli:raw="The string representation of the current instance.">Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">Restituisce la rappresentazione di stringa dell'istanza corrente usando la stringa di formato specificata per formattare i singoli elementi e il provider di formato specificato per definire la formattazione specifica delle impostazioni cultura.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Stringa di formato standard o numerico personalizzato che definisce il formato dei singoli elementi.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">Provider di formato che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="The string representation of the current instance.">Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector by a specified 3x2 matrix.">Trasforma un vettore in base a una matrice 3x2 specificata.</summary>
      <param name="position" vsli:raw="The vector to transform.">Vettore da trasformare.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Matrice di trasformazione.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">Trasforma un vettore in base a una matrice 4x4 specificata.</summary>
      <param name="position" vsli:raw="The vector to transform.">Vettore da trasformare.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Matrice di trasformazione.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">Trasforma un vettore in base al valore di rotazione Quaternion specificato.</summary>
      <param name="value" vsli:raw="The vector to rotate.">Vettore da ruotare.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">Rotazione da applicare.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector normal by the given 3x2 matrix.">Trasforma la normale di un vettore in base alla matrice 3x2 specificata.</summary>
      <param name="normal" vsli:raw="The source vector.">Vettore di origine.</param>
      <param name="matrix" vsli:raw="The matrix.">Matrice.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">Trasforma la normale di un vettore in base alla matrice 4x4 specificata.</summary>
      <param name="normal" vsli:raw="The source vector.">Vettore di origine.</param>
      <param name="matrix" vsli:raw="The matrix.">Matrice.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitX">
      <summary vsli:raw="Gets the vector (1,0).">Ottiene il vettore (1,0).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0)&lt;/c&gt;.">Vettore <c>(1,0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitY">
      <summary vsli:raw="Gets the vector (0,1).">Ottiene il vettore (0,1).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1)&lt;/c&gt;.">Vettore <c>(0, 1)</c>.</returns>
    </member>
    <member name="F:System.Numerics.Vector2.X">
      <summary vsli:raw="The X component of the vector.">Componente X del vettore.</summary>
    </member>
    <member name="F:System.Numerics.Vector2.Y">
      <summary vsli:raw="The Y component of the vector.">Componente Y del vettore.</summary>
    </member>
    <member name="P:System.Numerics.Vector2.Zero">
      <summary vsli:raw="Returns a vector whose 2 elements are equal to zero.">Restituisce un vettore i cui 2 elementi sono uguali a zero.</summary>
      <returns vsli:raw="A vector whose two elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0)&lt;/c&gt;).">Vettore i cui due elementi sono uguali a zero (ovvero, restituisce il vettore <c>(0, 0)</c>.</returns>
    </member>
    <member name="T:System.Numerics.Vector3">
      <summary vsli:raw="Represents a vector with three  single-precision floating-point values.">Rappresenta un vettore con tre valori a virgola mobile e precisione singola.</summary>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and the specified value.">Crea un nuovo oggetto <see cref="T:System.Numerics.Vector3" /> dall'oggetto <see cref="T:System.Numerics.Vector2" /> specificato e dal valore specificato.</summary>
      <param name="value" vsli:raw="The vector with two elements.">Vettore con due elementi.</param>
      <param name="z" vsli:raw="The additional value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">Valore aggiuntivo da assegnare al campo <see cref="F:System.Numerics.Vector3.Z" />.</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object whose three elements have the same value.">Crea un nuovo oggetto <see cref="T:System.Numerics.Vector3" /> i cui tre elementi hanno lo stesso valore.</summary>
      <param name="value" vsli:raw="The value to assign to all three elements.">Valore da assegnare a tutti e tre gli elementi.</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">Crea un vettore i cui elementi hanno i valori specificati.</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.X&quot; /&gt; field.">Valore da assegnare al campo <see cref="F:System.Numerics.Vector3.X" />.</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Y&quot; /&gt; field.">Valore da assegnare al campo <see cref="F:System.Numerics.Vector3.Y" />.</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">Valore da assegnare al campo <see cref="F:System.Numerics.Vector3.Z" />.</param>
    </member>
    <member name="M:System.Numerics.Vector3.Abs(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">Restituisce un vettore i cui elementi sono i valori assoluti di ognuno degli elementi del vettore specificato.</summary>
      <param name="value" vsli:raw="A vector.">Vettore.</param>
      <returns vsli:raw="The absolute value vector.">Valore assoluto del vettore.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">Somma due vettori.</summary>
      <param name="left" vsli:raw="The first vector to add.">Primo vettore da sommare.</param>
      <param name="right" vsli:raw="The second vector to add.">Secondo vettore da sommare.</param>
      <returns vsli:raw="The summed vector.">Vettore sommato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">Limita un vettore tra un valore minimo e un valore massimo.</summary>
      <param name="value1" vsli:raw="The vector to restrict.">Vettore da limitare.</param>
      <param name="min" vsli:raw="The minimum value.">Valore minimo.</param>
      <param name="max" vsli:raw="The maximum value.">Valore massimo.</param>
      <returns vsli:raw="The restricted vector.">Vettore limitato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">Copia gli elementi del vettore nella matrice specificata.</summary>
      <param name="array" vsli:raw="The destination array.">Matrice di destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">Il numero di elementi nell'istanza corrente è maggiore di quello nella matrice.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> è multidimensionale.</exception>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">Copia gli elementi del vettore nella matrice specificata, partendo dalla posizione dell'indice specificata.</summary>
      <param name="array" vsli:raw="The destination array.">Matrice di destinazione.</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">Indice in cui copiare il primo elemento del vettore.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">Il numero di elementi nell'istanza corrente è maggiore di quello nella matrice.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> è minore di zero.
oppure
<paramref name="index" /> è maggiore o uguale alla lunghezza della matrice.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> è multidimensionale.</exception>
    </member>
    <member name="M:System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the cross product of two vectors.">Calcola il prodotto incrociato di due vettori.</summary>
      <param name="vector1" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="vector2" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The cross product.">Prodotto incrociato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">Calcola la distanza euclidea tra due punti specificati.</summary>
      <param name="value1" vsli:raw="The first point.">Primo punto.</param>
      <param name="value2" vsli:raw="The second point.">Secondo punto.</param>
      <returns vsli:raw="The distance.">Distanza.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">Restituisce la distanza euclidea quadratica tra due punti specificati.</summary>
      <param name="value1" vsli:raw="The first point.">Primo punto.</param>
      <param name="value2" vsli:raw="The second point.">Secondo punto.</param>
      <returns vsli:raw="The distance squared.">Distanza quadratica.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">Divide il primo vettore per il secondo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector resulting from the division.">Vettore risultante dalla divisione.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Divide il vettore specificato per un valore scalare specificato.</summary>
      <param name="left" vsli:raw="The vector.">Vettore.</param>
      <param name="divisor" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The vector that results from the division.">Vettore risultante dalla divisione.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of two vectors.">Restituisce il prodotto scalare di due vettori.</summary>
      <param name="vector1" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="vector2" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The dot product.">Prodotto scalare.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">Restituisce un valore che indica se questa istanza è uguale a un altro vettore.</summary>
      <param name="other" vsli:raw="The other vector.">L'altro vettore.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i due vettori sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Oggetto da confrontare con l'istanza corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'istanza corrente è uguale a <paramref name="obj" />; in caso contrario, <see langword="false" />. Se <paramref name="obj" /> è <see langword="null" />, il metodo restituisce <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Restituisce il codice hash per l'istanza.</summary>
      <returns vsli:raw="The hash code.">Codice hash.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Length">
      <summary vsli:raw="Returns the length of this vector object.">Ottiene la lunghezza di questo oggetto vettore.</summary>
      <returns vsli:raw="The vector's length.">Lunghezza del vettore.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">Restituisce la lunghezza del vettore al quadrato.</summary>
      <returns vsli:raw="The vector's length squared.">Lunghezza al quadrato del vettore.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">Esegue un'interpolazione lineare tra due vettori in base al peso specificato.</summary>
      <param name="value1" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="value2" vsli:raw="The second vector.">Secondo vettore.</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">Valore compreso tra 0 e 1 che indica il peso di <paramref name="value2" />.</param>
      <returns vsli:raw="The interpolated vector.">Vettore interpolato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">Restituisce un vettore che contiene il valore più alto da ognuna delle coppie di elementi nei due vettori specificati.</summary>
      <param name="value1" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="value2" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The maximized vector.">Vettore massimizzato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">Restituisce un vettore che contiene il valore più basso da ognuna delle coppie di elementi nei due vettori specificati.</summary>
      <param name="value1" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="value2" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The minimized vector.">Vettore minimizzato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Restituisce un nuovo vettore i cui valori sono il prodotto di ogni coppia di elementi in due vettori specificati.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The element-wise product vector.">Vettore prodotto per gli elementi.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">Moltiplica un vettore per un valore scalare specificato.</summary>
      <param name="left" vsli:raw="The vector to multiply.">Vettore da moltiplicare.</param>
      <param name="right" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">Moltiplica un valore scalare per un vettore specificato.</summary>
      <param name="left" vsli:raw="The scaled value.">Valore scalato.</param>
      <param name="right" vsli:raw="The vector.">Vettore.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Negate(System.Numerics.Vector3)">
      <summary vsli:raw="Negates a specified vector.">Nega un vettore specificato.</summary>
      <param name="value" vsli:raw="The vector to negate.">Vettore da negare.</param>
      <returns vsli:raw="The negated vector.">Vettore negato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Normalize(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">Restituisce un vettore con la stessa direzione del vettore specificato, ma con una lunghezza di uno.</summary>
      <param name="value" vsli:raw="The vector to normalize.">Vettore da normalizzare.</param>
      <returns vsli:raw="The normalized vector.">Vettore normalizzato.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.One">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to one.">Ottiene un vettore i cui 3 elementi sono uguali a uno.</summary>
      <returns vsli:raw="A vector whose three elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1,1)&lt;/c&gt;).">Vettore i cui tre elementi sono uguali a uno (ovvero, restituisce il vettore <c>(1, 1, 1)</c>.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">Somma due vettori.</summary>
      <param name="left" vsli:raw="The first vector to add.">Primo vettore da sommare.</param>
      <param name="right" vsli:raw="The second vector to add.">Secondo vettore da sommare.</param>
      <returns vsli:raw="The summed vector.">Vettore sommato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">Divide il primo vettore per il secondo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">Vettore risultante dalla divisione di <paramref name="left" /> per <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Divide il vettore specificato per un valore scalare specificato.</summary>
      <param name="value1" vsli:raw="The vector.">Vettore.</param>
      <param name="value2" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The result of the division.">Risultato della divisione.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">Restituisce un valore che indica se le coppie di elementi in due vettori specificati sono uguali.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">Restituisce un valore che indica se due vettori specificati non sono uguali.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Restituisce un nuovo vettore i cui valori sono il prodotto di ogni coppia di elementi in due vettori specificati.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The element-wise product vector.">Vettore prodotto per gli elementi.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">Moltiplica il vettore specificato per il valore scalare specificato.</summary>
      <param name="left" vsli:raw="The vector.">Vettore.</param>
      <param name="right" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">Moltiplica il valore scalare per il vettore specificato.</summary>
      <param name="left" vsli:raw="The vector.">Vettore.</param>
      <param name="right" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">Sottrae il secondo vettore dal primo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Vettore risultante dalla sottrazione di <paramref name="right" /> da <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)">
      <summary vsli:raw="Negates the specified vector.">Nega il vettore specificato.</summary>
      <param name="value" vsli:raw="The vector to negate.">Vettore da negare.</param>
      <returns vsli:raw="The negated vector.">Vettore negato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">Restituisce la reflection di un vettore da una superficie con la normale specificata.</summary>
      <param name="vector" vsli:raw="The source vector.">Vettore di origine.</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">Normale della superficie riflessa.</param>
      <returns vsli:raw="The reflected vector.">Vettore riflesso.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">Restituisce un vettore i cui elementi sono la radice quadrata di ognuno degli elementi del vettore specificato.</summary>
      <param name="value" vsli:raw="A vector.">Vettore.</param>
      <returns vsli:raw="The square root vector.">Vettore radice quadrata.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">Sottrae il secondo vettore dal primo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The difference vector.">Vettore differenza.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">Restituisce la rappresentazione di stringa dell'istanza corrente usando la formattazione predefinita.</summary>
      <returns vsli:raw="The string representation of the current instance.">Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">Restituisce la rappresentazione di stringa dell'istanza corrente usando la stringa di formato specificata per formattare i singoli elementi.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Stringa di formato standard o numerico personalizzato che definisce il formato dei singoli elementi.</param>
      <returns vsli:raw="The string representation of the current instance.">Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">Restituisce la rappresentazione di stringa dell'istanza corrente usando la stringa di formato specificata per formattare i singoli elementi e il provider di formato specificato per definire la formattazione specifica delle impostazioni cultura.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Stringa di formato standard o numerico personalizzato che definisce il formato dei singoli elementi.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">Provider di formato che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="The string representation of the current instance.">Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">Trasforma un vettore in base a una matrice 4x4 specificata.</summary>
      <param name="position" vsli:raw="The vector to transform.">Vettore da trasformare.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Matrice di trasformazione.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">Trasforma un vettore in base al valore di rotazione Quaternion specificato.</summary>
      <param name="value" vsli:raw="The vector to rotate.">Vettore da ruotare.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">Rotazione da applicare.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">Trasforma la normale di un vettore in base alla matrice 4x4 specificata.</summary>
      <param name="normal" vsli:raw="The source vector.">Vettore di origine.</param>
      <param name="matrix" vsli:raw="The matrix.">Matrice.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0).">Ottiene il vettore (1,0,0).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0)&lt;/c&gt;.">Vettore <c>(1, 0, 0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0).">Ottiene il vettore (0,1,0).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0)&lt;/c&gt;.">Il vettore <c>(0, 1, 0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1).">Ottiene il vettore (0,0,1).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1)&lt;/c&gt;.">Vettore <c>(0, 0, 1)</c>.</returns>
    </member>
    <member name="F:System.Numerics.Vector3.X">
      <summary vsli:raw="The X component of the vector.">Componente X del vettore.</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Y">
      <summary vsli:raw="The Y component of the vector.">Componente Y del vettore.</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Z">
      <summary vsli:raw="The Z component of the vector.">Componente Z del vettore.</summary>
    </member>
    <member name="P:System.Numerics.Vector3.Zero">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to zero.">Ottiene un vettore i cui 3 elementi sono uguali a zero.</summary>
      <returns vsli:raw="A vector whose three elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0)&lt;/c&gt;).">Vettore i cui tre elementi sono uguali a zero (ovvero, restituisce il vettore <c>(0, 0, 0)</c>.</returns>
    </member>
    <member name="T:System.Numerics.Vector4">
      <summary vsli:raw="Represents a vector with four single-precision floating-point values.">Rappresenta un vettore con quattro valori a virgola mobile e precisione singola.</summary>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and a Z and a W component.">Crea un nuovo oggetto <see cref="T:System.Numerics.Vector4" /> dall'oggetto <see cref="T:System.Numerics.Vector2" /> specificato e dai componenti Z e W.</summary>
      <param name="value" vsli:raw="The vector to use for the X and Y components.">Vettore da usare per i componenti X e Y.</param>
      <param name="z" vsli:raw="The Z component.">Componente Z.</param>
      <param name="w" vsli:raw="The W component.">Componente W.</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object and a W component.">Costruisce un nuovo oggetto <see cref="T:System.Numerics.Vector4" /> dall'oggetto <see cref="T:System.Numerics.Vector3" /> specificato e da un componente W.</summary>
      <param name="value" vsli:raw="The vector to use for the X, Y, and Z components.">Vettore da usare per i componenti X, Y e Z.</param>
      <param name="w" vsli:raw="The W component.">Componente W.</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object whose four elements have the same value.">Crea un nuovo oggetto <see cref="T:System.Numerics.Vector4" /> i cui quattro elementi hanno lo stesso valore.</summary>
      <param name="value" vsli:raw="The value to assign to all four elements.">Valore da assegnare a tutti e quattro gli elementi.</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">Crea un vettore i cui elementi hanno i valori specificati.</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.X&quot; /&gt; field.">Valore da assegnare al campo <see cref="F:System.Numerics.Vector4.X" />.</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Y&quot; /&gt; field.">Valore da assegnare al campo <see cref="F:System.Numerics.Vector4.Y" />.</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Z&quot; /&gt; field.">Valore da assegnare al campo <see cref="F:System.Numerics.Vector4.Z" />.</param>
      <param name="w" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; field.">Valore da assegnare al campo <see cref="F:System.Numerics.Vector4.W" />.</param>
    </member>
    <member name="M:System.Numerics.Vector4.Abs(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">Restituisce un vettore i cui elementi sono i valori assoluti di ognuno degli elementi del vettore specificato.</summary>
      <param name="value" vsli:raw="A vector.">Vettore.</param>
      <returns vsli:raw="The absolute value vector.">Valore assoluto del vettore.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">Somma due vettori.</summary>
      <param name="left" vsli:raw="The first vector to add.">Primo vettore da sommare.</param>
      <param name="right" vsli:raw="The second vector to add.">Secondo vettore da sommare.</param>
      <returns vsli:raw="The summed vector.">Vettore sommato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">Limita un vettore tra un valore minimo e un valore massimo.</summary>
      <param name="value1" vsli:raw="The vector to restrict.">Vettore da limitare.</param>
      <param name="min" vsli:raw="The minimum value.">Valore minimo.</param>
      <param name="max" vsli:raw="The maximum value.">Valore massimo.</param>
      <returns vsli:raw="The restricted vector.">Vettore limitato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">Copia gli elementi del vettore nella matrice specificata.</summary>
      <param name="array" vsli:raw="The destination array.">Matrice di destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">Il numero di elementi nell'istanza corrente è maggiore di quello nella matrice.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> è multidimensionale.</exception>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">Copia gli elementi del vettore nella matrice specificata, partendo dalla posizione dell'indice specificata.</summary>
      <param name="array" vsli:raw="The destination array.">Matrice di destinazione.</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">Indice in cui copiare il primo elemento del vettore.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">Il numero di elementi nell'istanza corrente è maggiore di quello nella matrice.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> è minore di zero.
oppure
<paramref name="index" /> è maggiore o uguale alla lunghezza della matrice.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> è multidimensionale.</exception>
    </member>
    <member name="M:System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">Calcola la distanza euclidea tra due punti specificati.</summary>
      <param name="value1" vsli:raw="The first point.">Primo punto.</param>
      <param name="value2" vsli:raw="The second point.">Secondo punto.</param>
      <returns vsli:raw="The distance.">Distanza.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">Restituisce la distanza euclidea quadratica tra due punti specificati.</summary>
      <param name="value1" vsli:raw="The first point.">Primo punto.</param>
      <param name="value2" vsli:raw="The second point.">Secondo punto.</param>
      <returns vsli:raw="The distance squared.">Distanza quadratica.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">Divide il primo vettore per il secondo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector resulting from the division.">Vettore risultante dalla divisione.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Divide il vettore specificato per un valore scalare specificato.</summary>
      <param name="left" vsli:raw="The vector.">Vettore.</param>
      <param name="divisor" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The vector that results from the division.">Vettore risultante dalla divisione.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the dot product of two vectors.">Restituisce il prodotto scalare di due vettori.</summary>
      <param name="vector1" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="vector2" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The dot product.">Prodotto scalare.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">Restituisce un valore che indica se questa istanza è uguale a un altro vettore.</summary>
      <param name="other" vsli:raw="The other vector.">L'altro vettore.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i due vettori sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Oggetto da confrontare con l'istanza corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'istanza corrente è uguale a <paramref name="obj" />; in caso contrario, <see langword="false" />. Se <paramref name="obj" /> è <see langword="null" />, il metodo restituisce <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Restituisce il codice hash per l'istanza.</summary>
      <returns vsli:raw="The hash code.">Codice hash.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Length">
      <summary vsli:raw="Returns the length of this vector object.">Ottiene la lunghezza di questo oggetto vettore.</summary>
      <returns vsli:raw="The vector's length.">Lunghezza del vettore.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">Restituisce la lunghezza del vettore al quadrato.</summary>
      <returns vsli:raw="The vector's length squared.">Lunghezza al quadrato del vettore.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">Esegue un'interpolazione lineare tra due vettori in base al peso specificato.</summary>
      <param name="value1" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="value2" vsli:raw="The second vector.">Secondo vettore.</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">Valore compreso tra 0 e 1 che indica il peso di <paramref name="value2" />.</param>
      <returns vsli:raw="The interpolated vector.">Vettore interpolato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">Restituisce un vettore che contiene il valore più alto da ognuna delle coppie di elementi nei due vettori specificati.</summary>
      <param name="value1" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="value2" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The maximized vector.">Vettore massimizzato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">Restituisce un vettore che contiene il valore più basso da ognuna delle coppie di elementi nei due vettori specificati.</summary>
      <param name="value1" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="value2" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The minimized vector.">Vettore minimizzato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Restituisce un nuovo vettore i cui valori sono il prodotto di ogni coppia di elementi in due vettori specificati.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The element-wise product vector.">Vettore prodotto per gli elementi.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">Moltiplica un vettore per un valore scalare specificato.</summary>
      <param name="left" vsli:raw="The vector to multiply.">Vettore da moltiplicare.</param>
      <param name="right" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">Moltiplica un valore scalare per un vettore specificato.</summary>
      <param name="left" vsli:raw="The scaled value.">Valore scalato.</param>
      <param name="right" vsli:raw="The vector.">Vettore.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Negate(System.Numerics.Vector4)">
      <summary vsli:raw="Negates a specified vector.">Nega un vettore specificato.</summary>
      <param name="value" vsli:raw="The vector to negate.">Vettore da negare.</param>
      <returns vsli:raw="The negated vector.">Vettore negato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Normalize(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">Restituisce un vettore con la stessa direzione del vettore specificato, ma con una lunghezza di uno.</summary>
      <param name="vector" vsli:raw="The vector to normalize.">Vettore da normalizzare.</param>
      <returns vsli:raw="The normalized vector.">Vettore normalizzato.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.One">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to one.">Ottiene un vettore i cui 4 elementi sono uguali a uno.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt;.">Restituisce <see cref="T:System.Numerics.Vector4" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">Somma due vettori.</summary>
      <param name="left" vsli:raw="The first vector to add.">Primo vettore da sommare.</param>
      <param name="right" vsli:raw="The second vector to add.">Secondo vettore da sommare.</param>
      <returns vsli:raw="The summed vector.">Vettore sommato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">Divide il primo vettore per il secondo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">Vettore risultante dalla divisione di <paramref name="left" /> per <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Divide il vettore specificato per un valore scalare specificato.</summary>
      <param name="value1" vsli:raw="The vector.">Vettore.</param>
      <param name="value2" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The result of the division.">Risultato della divisione.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">Restituisce un valore che indica se le coppie di elementi in due vettori specificati sono uguali.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">Restituisce un valore che indica se due vettori specificati non sono uguali.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="right" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Restituisce un nuovo vettore i cui valori sono il prodotto di ogni coppia di elementi in due vettori specificati.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The element-wise product vector.">Vettore prodotto per gli elementi.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">Moltiplica il vettore specificato per il valore scalare specificato.</summary>
      <param name="left" vsli:raw="The vector.">Vettore.</param>
      <param name="right" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">Moltiplica il valore scalare per il vettore specificato.</summary>
      <param name="left" vsli:raw="The vector.">Vettore.</param>
      <param name="right" vsli:raw="The scalar value.">Valore scalare.</param>
      <returns vsli:raw="The scaled vector.">Vettore scalato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">Sottrae il secondo vettore dal primo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Vettore risultante dalla sottrazione di <paramref name="right" /> da <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)">
      <summary vsli:raw="Negates the specified vector.">Nega il vettore specificato.</summary>
      <param name="value" vsli:raw="The vector to negate.">Vettore da negare.</param>
      <returns vsli:raw="The negated vector.">Vettore negato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">Restituisce un vettore i cui elementi sono la radice quadrata di ognuno degli elementi del vettore specificato.</summary>
      <param name="value" vsli:raw="A vector.">Vettore.</param>
      <returns vsli:raw="The square root vector.">Vettore radice quadrata.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">Sottrae il secondo vettore dal primo.</summary>
      <param name="left" vsli:raw="The first vector.">Primo vettore.</param>
      <param name="right" vsli:raw="The second vector.">Secondo vettore.</param>
      <returns vsli:raw="The difference vector.">Vettore differenza.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">Restituisce la rappresentazione di stringa dell'istanza corrente usando la formattazione predefinita.</summary>
      <returns vsli:raw="The string representation of the current instance.">Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">Restituisce la rappresentazione di stringa dell'istanza corrente usando la stringa di formato specificata per formattare i singoli elementi.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Stringa di formato standard o numerico personalizzato che definisce il formato dei singoli elementi.</param>
      <returns vsli:raw="The string representation of the current instance.">Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">Restituisce la rappresentazione di stringa dell'istanza corrente usando la stringa di formato specificata per formattare i singoli elementi e il provider di formato specificato per definire la formattazione specifica delle impostazioni cultura.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Stringa di formato standard o numerico personalizzato che definisce il formato dei singoli elementi.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">Provider di formato che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="The string representation of the current instance.">Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a two-dimensional vector by a specified 4x4 matrix.">Trasforma un vettore bidimensionale per una matrice 4x4 specificata.</summary>
      <param name="position" vsli:raw="The vector to transform.">Vettore da trasformare.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Matrice di trasformazione.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a two-dimensional vector by the specified Quaternion rotation value.">Trasforma un vettore bidimensionale in base al valore di rotazione Quaternion specificato.</summary>
      <param name="value" vsli:raw="The vector to rotate.">Vettore da ruotare.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">Rotazione da applicare.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a three-dimensional vector by a specified 4x4 matrix.">Trasforma un vettore tridimensionale per una matrice 4x4 specificata.</summary>
      <param name="position" vsli:raw="The vector to transform.">Vettore da trasformare.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Matrice di trasformazione.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a three-dimensional vector by the specified Quaternion rotation value.">Trasforma un vettore tridimensionale in base al valore di rotazione Quaternion specificato.</summary>
      <param name="value" vsli:raw="The vector to rotate.">Vettore da ruotare.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">Rotazione da applicare.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a four-dimensional vector by a specified 4x4 matrix.">Trasforma un vettore quadridimensionale per una matrice 4x4 specificata.</summary>
      <param name="vector" vsli:raw="The vector to transform.">Vettore da trasformare.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Matrice di trasformazione.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a four-dimensional vector by the specified Quaternion rotation value.">Trasforma un vettore quadridimensionale in base al valore di rotazione Quaternion specificato.</summary>
      <param name="value" vsli:raw="The vector to rotate.">Vettore da ruotare.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">Rotazione da applicare.</param>
      <returns vsli:raw="The transformed vector.">Vettore trasformato.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitW">
      <summary vsli:raw="Gets the vector (0,0,0,1).">Ottiene il vettore (0,0,0,1).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,0,1)&lt;/c&gt;.">Vettore <c>(0, 0, 0, 1)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0,0).">Ottiene il vettore (1,0,0,0).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0,0)&lt;/c&gt;.">Vettore <c>(1, 0, 0, 0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0,0).">Ottiene il vettore (0,1,0,0).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0,0)&lt;/c&gt;.">Il vettore <c>(0, 1, 0, 0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1,0).">Ottiene il vettore (0,0,1,0).</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1,0)&lt;/c&gt;.">Il vettore <c>(0, 0, 1, 0)</c>.</returns>
    </member>
    <member name="F:System.Numerics.Vector4.W">
      <summary vsli:raw="The W component of the vector.">Componente W del vettore.</summary>
    </member>
    <member name="F:System.Numerics.Vector4.X">
      <summary vsli:raw="The X component of the vector.">Componente X del vettore.</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Y">
      <summary vsli:raw="The Y component of the vector.">Componente Y del vettore.</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Z">
      <summary vsli:raw="The Z component of the vector.">Componente Z del vettore.</summary>
    </member>
    <member name="P:System.Numerics.Vector4.Zero">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to zero.">Ottiene un vettore i cui 4 elementi sono uguali a zero.</summary>
      <returns vsli:raw="A vector whose four elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0,0)&lt;/c&gt;).">Vettore i cui quattro elementi sono uguali a zero (ovvero, restituisce il vettore <c>(0, 0, 0, 0)</c>.</returns>
    </member>
  </members>
</doc>