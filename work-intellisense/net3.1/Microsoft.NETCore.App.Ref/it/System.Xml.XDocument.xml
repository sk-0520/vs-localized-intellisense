<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XDocument</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Linq.Extensions">
      <summary vsli:raw="Contains the LINQ to XML extension methods.">Contiene i metodi di estensione LINQ to XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of elements that contains the ancestors of every node in the source collection.">Restituisce una raccolta di elementi che contiene i predecessori di ciascun nodo nella raccolta di origine.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> che contiene la raccolta di origine.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Tipo di oggetti in <paramref name="source" /> vincolati a <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the ancestors of every node in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene i predecessori di ciascun nodo nella raccolta di origine.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains the ancestors of every node in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta di elementi filtrati che contiene i predecessori di ciascun nodo nella raccolta di origine. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> che contiene la raccolta di origine.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Tipo di oggetti in <paramref name="source" /> vincolati a <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the ancestors of every node in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene i predecessori di ciascun nodo nella raccolta di origine. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.">Restituisce una raccolta di elementi che contiene ciascun elemento nella raccolta di origine e i predecessori di ciascun elemento nella raccolta di origine.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene la raccolta di origine.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the ancestors of every element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene ciascun elemento nella raccolta di origine e i predecessori di ciascun elemento nella raccolta di origine.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta di elementi filtrati che contiene ciascun elemento nella raccolta di origine e i predecessori di ciascun elemento nella raccolta di origine. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene la raccolta di origine.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene ciascun elemento nella raccolta di origine e i predecessori di ciascun elemento nella raccolta di origine. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of the attributes of every element in the source collection.">Restituisce una raccolta di tutti gli attributi di ciascun elemento nella raccolta di origine.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene la raccolta di origine.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the attributes of every element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XAttribute" /> che contiene gli attributi di ciascun elemento nella raccolta di origine.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the attributes of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta filtrata di tutti gli attributi di ciascun elemento nella raccolta di origine. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene la raccolta di origine.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains a filtered collection of the attributes of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XAttribute" /> che contiene una raccolta filtrata degli attributi di ciascun elemento nella raccolta di origine. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the descendant nodes of every document and element in the source collection.">Restituisce una raccolta di nodi discendenti di ciascun documento ed elemento nella raccolta di origine.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XContainer" /> che contiene la raccolta di origine.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Tipo di oggetti in <paramref name="source" /> vincolati a <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the descendant nodes of every document and element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> di nodi discendenti di ciascun documento ed elemento nella raccolta di origine.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of nodes that contains every element in the source collection, and the descendant nodes of every element in the source collection.">Restituisce una raccolta di nodi che contiene ciascun elemento nella raccolta di origine e i nodi discendenti di ciascun elemento nella raccolta di origine.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene la raccolta di origine.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains every element in the source collection, and the descendant nodes of every element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> che contiene ciascun elemento nella raccolta di origine e i nodi discendenti di ciascun elemento nella raccolta di origine.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of elements that contains the descendant elements of every element and document in the source collection.">Restituisce una raccolta di elementi che contiene gli elementi discendenti di ciascun elemento e documento nella raccolta di origine.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XContainer" /> che contiene la raccolta di origine.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Tipo di oggetti in <paramref name="source" /> vincolati a <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the descendant elements of every element and document in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene gli elementi discendenti di ciascun elemento e documento nella raccolta di origine.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains the descendant elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta filtrata di elementi che contiene gli elementi discendenti di ciascun elemento e documento nella raccolta di origine. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XContainer" /> che contiene la raccolta di origine.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Tipo di oggetti in <paramref name="source" /> vincolati a <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the descendant elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene gli elementi discendenti di ciascun elemento e documento nella raccolta di origine. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of elements that contains every element in the source collection, and the descendent elements of every element in the source collection.">Restituisce una raccolta di elementi filtrati che contiene ciascun elemento nella raccolta di origine e gli elementi discendenti di ciascun elemento nella raccolta di origine.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene la raccolta di origine.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the descendent elements of every element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene ciascun elemento nella raccolta di origine e gli elementi discendenti di ciascun elemento nella raccolta di origine.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta di elementi filtrati che contiene ciascun elemento nella raccolta di origine e i discendenti di ciascun elemento nella raccolta di origine. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene la raccolta di origine.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene ciascun elemento nella raccolta di origine e i discendenti di ciascun elemento nella raccolta di origine. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the child elements of every element and document in the source collection.">Restituisce una raccolta di elementi figlio di ciascun elemento e documento nella raccolta di origine.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene la raccolta di origine.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Tipo di oggetti in <paramref name="source" /> vincolati a <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the child elements of every element or document in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> degli elementi figlio di ciascun elemento o documento nella raccolta di origine.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the child elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta filtrata degli elementi figlio di ciascun elemento e documento nella raccolta di origine. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene la raccolta di origine.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Tipo di oggetti in <paramref name="source" /> vincolati a <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the child elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> degli elementi figlio di ciascun elemento e documento nella raccolta di origine. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of nodes that contains all nodes in the source collection, sorted in document order.">Restituisce una raccolta di nodi che contiene tutti i nodi nella raccolta di origine ordinati in base all'ordine con cui sono riportati nel documento.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> che contiene la raccolta di origine.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Tipo di oggetti in <paramref name="source" /> vincolati a <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains all nodes in the source collection, sorted in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> che contiene tutti i nodi nella raccolta di origine ordinati in base all'ordine con cui sono riportati nel documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the child nodes of every document and element in the source collection.">Restituisce una raccolta di nodi figlio di ciascun documento ed elemento nella raccolta di origine.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> che contiene la raccolta di origine.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Tipo di oggetti in <paramref name="source" /> vincolati a <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the child nodes of every document and element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> dei nodi figlio di ciascun documento ed elemento nella raccolta di origine.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
      <summary vsli:raw="Removes every attribute in the source collection from its parent element.">Rimuove ciascun attributo nella raccolta di origine dall'elemento padre.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XAttribute" /> che contiene la raccolta di origine.</param>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Removes every node in the source collection from its parent node.">Rimuove ciascun nodo nella raccolta di origine dal nodo padre.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> che contiene la raccolta di origine.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Tipo di oggetti in <paramref name="source" /> vincolati a <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
    </member>
    <member name="T:System.Xml.Linq.LoadOptions">
      <summary vsli:raw="Specifies load options when parsing XML.">Specifica le opzioni di caricamento durante l'analisi del codice XML.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.None">
      <summary vsli:raw="Does not preserve insignificant white space or load base URI and line information.">Non conserva spazio vuoto non significativo né carica URI di base e informazioni sulla riga.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.PreserveWhitespace">
      <summary vsli:raw="Preserves insignificant white space while parsing.">Conserva spazio vuoto non significativo durante l'analisi.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetBaseUri">
      <summary vsli:raw="Requests the base URI information from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, and makes it available via the &lt;see cref=&quot;P:System.Xml.Linq.XObject.BaseUri&quot; /&gt; property.">Richiede le informazioni sull'URI di base da <see cref="T:System.Xml.XmlReader" /> e le rende disponibili tramite la proprietà <see cref="P:System.Xml.Linq.XObject.BaseUri" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetLineInfo">
      <summary vsli:raw="Requests the line information from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and makes it available via properties on &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Richiede le informazioni sulla riga da <see cref="T:System.Xml.XmlReader" /> e le rende disponibili tramite la proprietà <see cref="T:System.Xml.Linq.XObject" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.ReaderOptions">
      <summary vsli:raw="Specifies whether to omit duplicate namespaces when loading an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Specifica se omettere spazi dei nomi duplicati durante il caricamento di un oggetto <see cref="T:System.Xml.Linq.XDocument" /> con un oggetto <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.None">
      <summary vsli:raw="No reader options specified.">Nessuna opzione del lettore specificata.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.OmitDuplicateNamespaces">
      <summary vsli:raw="Omit duplicate namespaces when loading the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Omettere spazi dei nomi duplicati durante il caricamento di <see cref="T:System.Xml.Linq.XDocument" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.SaveOptions">
      <summary vsli:raw="Specifies serialization options.">Specifica le opzioni di serializzazione.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.DisableFormatting">
      <summary vsli:raw="Preserve all insignificant white space while serializing.">Mantenere ogni spazio vuoto non significativo durante la serializzazione.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.None">
      <summary vsli:raw="Format (indent) the XML while serializing.">Formattare (rientro) la struttura ad albero XML durante la serializzazione.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces">
      <summary vsli:raw="Remove the duplicate namespace declarations while serializing.">Rimuovere le dichiarazioni degli spazi dei nomi duplicati durante la serializzazione.</summary>
    </member>
    <member name="T:System.Xml.Linq.XAttribute">
      <summary vsli:raw="Represents an XML attribute.">Rappresenta un attributo XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XAttribute" /> da un altro oggetto <see cref="T:System.Xml.Linq.XAttribute" />.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object to copy from.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> da cui copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; class from the specified name and value.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XAttribute" /> dal nome e dal valore specificato.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; of the attribute.">
        <see cref="T:System.Xml.Linq.XName" /> dell'attributo.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the value of the attribute.">
        <see cref="T:System.Object" /> contenente il valore dell'attributo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il parametro <paramref name="name" /> o il parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.EmptySequence">
      <summary vsli:raw="Gets an empty collection of attributes.">Ottiene una raccolta vuota di attributi.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing an empty collection.">Un <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XAttribute" /> che contiene una raccolta vuota.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
      <summary vsli:raw="Determines if this attribute is a namespace declaration.">Determina se questo attributo è una dichiarazione dello spazio dei nomi.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this attribute is a namespace declaration; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questo attributo è una dichiarazione dello spazio dei nomi; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Name">
      <summary vsli:raw="Gets the expanded name of this attribute.">Ottiene il nome espanso dell'attributo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; containing the name of this attribute.">
        <see cref="T:System.Xml.Linq.XName" /> contenente il nome dell'attributo.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NextAttribute">
      <summary vsli:raw="Gets the next attribute of the parent element.">Ottiene l'attributo successivo dell'elemento padre.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing the next attribute of the parent element.">Un <see cref="T:System.Xml.Linq.XAttribute" /> che contiene l'attributo successivo dell'elemento padre.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Ottiene il tipo di nodo per questo nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;.">Tipo di nodo. Per gli oggetti <see cref="T:System.Xml.Linq.XAttribute" />, questo valore è <see cref="F:System.Xml.XmlNodeType.Attribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Boolean" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast a un oggetto <see cref="T:System.Boolean" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Boolean" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.Boolean" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="attribute" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.DateTime" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast a un oggetto <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.DateTime" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.DateTime" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="attribute" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast a un oggetto <see cref="T:System.DateTimeOffset" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.DateTimeOffset" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.DateTimeOffset" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="attribute" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Decimal" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast a un oggetto <see cref="T:System.Decimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Decimal" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.Decimal" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="attribute" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Double" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast a un oggetto <see cref="T:System.Double" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Double" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.Double" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="attribute" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Guid" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast a un oggetto <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Guid" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.Guid" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="attribute" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Int32" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast a un oggetto <see cref="T:System.Int32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Int32" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.Int32" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="attribute" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Int64" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast a un oggetto <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Int64" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.Int64" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="attribute" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Boolean" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Boolean" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Boolean" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.Boolean" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.DateTime" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast su <see cref="T:System.Nullable`1" /> di <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.DateTime" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.DateTime" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast su <see cref="T:System.Nullable`1" /> di <see cref="T:System.DateTimeOffset" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.DateTimeOffset" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.DateTimeOffset" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Decimal" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Decimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Decimal" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.Decimal" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Double" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Double" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Double" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.Double" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Guid" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast su <see cref="T:System.Nullable`1" /> di <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Guid" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.Guid" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Int32" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast su <see cref="T:System.Nullable`1" /> di <see cref="T:System.Int32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Int32" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Int64" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast su <see cref="T:System.Nullable`1" /> di <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Int64" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.Int64" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Single" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Single" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Single" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.Single" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.TimeSpan" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast su <see cref="T:System.Nullable`1" /> di <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.TimeSpan" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.TimeSpan" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.UInt32" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast su <see cref="T:System.Nullable`1" /> di <see cref="T:System.UInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.UInt32" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.UInt32" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.UInt64" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast su <see cref="T:System.Nullable`1" /> di <see cref="T:System.UInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.UInt64" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.UInt64" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.Single" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast a un oggetto <see cref="T:System.Single" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.Single" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.Single" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="attribute" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.String" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast a un oggetto <see cref="T:System.String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.String" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.TimeSpan" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast a un oggetto <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.TimeSpan" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.TimeSpan" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="attribute" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.UInt32" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast a un oggetto <see cref="T:System.UInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.UInt32" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.UInt32" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="attribute" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.UInt64" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di cui eseguire il cast a un oggetto <see cref="T:System.UInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">Oggetto <see cref="T:System.UInt64" /> che include il contenuto di <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">L'attributo non contiene un valore <see cref="T:System.UInt64" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="attribute" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.PreviousAttribute">
      <summary vsli:raw="Gets the previous attribute of the parent element.">Ottiene l'attributo precedente dell'elemento padre.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing the previous attribute of the parent element.">
        <see cref="T:System.Xml.Linq.XAttribute" /> che contiene l'attributo precedente dell'elemento padre.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.Remove">
      <summary vsli:raw="Removes this attribute from its parent element.">Rimuove questo attributo dall'elemento padre.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent element is &lt;see langword=&quot;null&quot; /&gt;.">L'elemento padre è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
      <summary vsli:raw="Sets the value of this attribute.">Imposta il valore dell'attributo.</summary>
      <param name="value" vsli:raw="The value to assign to this attribute.">Valore da assegnare all'attributo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Il <paramref name="value" /> è un <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object to a string representation.">Converte l'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> corrente in una rappresentazione in forma di stringa.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML text representation of an attribute and its value.">
        <see cref="T:System.String" /> che contiene la rappresentazione in forma di testo XML di un attributo e del relativo valore.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Value">
      <summary vsli:raw="Gets or sets the value of this attribute.">Ottiene o imposta il valore dell'attributo.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the value of this attribute.">Oggetto <see cref="T:System.String" /> contenente il valore dell'attributo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="When setting, the &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Durante l'impostazione, <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.Linq.XCData">
      <summary vsli:raw="Represents a text node that contains CDATA.">Rappresenta un nodo testo che contiene CDATA.</summary>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XCData" />.</summary>
      <param name="value" vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; node.">Stringa contenente il valore del nodo <see cref="T:System.Xml.Linq.XCData" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XCData" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; node to copy from.">Nodo <see cref="T:System.Xml.Linq.XCData" /> dal quale copiare.</param>
    </member>
    <member name="P:System.Xml.Linq.XCData.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Ottiene il tipo di nodo per questo nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;.">Tipo di nodo. Per gli oggetti <see cref="T:System.Xml.Linq.XCData" />, questo valore è <see cref="F:System.Xml.XmlNodeType.CDATA" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this CDATA object to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive questo oggetto CDATA in un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">
        <see cref="T:System.Xml.XmlWriter" /> nel quale scriverà questo metodo.</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; to the given &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive questo <see cref="T:System.Xml.Linq.XCData" /> nel <see cref="T:System.Xml.XmlWriter" /> specificato.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; to.">Writer in cui scrivere questo <see cref="T:System.Xml.Linq.XCData" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="T:System.Xml.Linq.XComment">
      <summary vsli:raw="Represents an XML comment.">Rappresenta un commento XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; class with the specified string content.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XComment" /> con il contenuto della stringa specificata.</summary>
      <param name="value" vsli:raw="A string that contains the contents of the new &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; object.">Stringa che include il contenuto del nuovo oggetto <see cref="T:System.Xml.Linq.XComment" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; class from an existing comment node.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XComment" /> da un nodo commento esistente.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; node to copy from.">Nodo <see cref="T:System.Xml.Linq.XComment" /> dal quale copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Linq.XComment.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Ottiene il tipo di nodo per questo nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Comment&quot; /&gt;.">Tipo di nodo. Per gli oggetti <see cref="T:System.Xml.Linq.XComment" />, questo valore è <see cref="F:System.Xml.XmlNodeType.Comment" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XComment.Value">
      <summary vsli:raw="Gets or sets the string value of this comment.">Ottiene o imposta il valore stringa di questo commento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string value of this comment.">
        <see cref="T:System.String" /> che contiene il valore stringa di questo commento.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">L'elemento <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this comment to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrivere questo commento in un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui scriverà questo metodo.</param>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive questo <see cref="T:System.Xml.Linq.XComment" /> nel <see cref="T:System.Xml.XmlWriter" /> specificato.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; to.">Writer in cui scrivere questo <see cref="T:System.Xml.Linq.XComment" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="T:System.Xml.Linq.XContainer">
      <summary vsli:raw="Represents a node that can contain other nodes.">Rappresenta un nodo che può contenere altri nodi.</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object)">
      <summary vsli:raw="Adds the specified content as children of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Aggiunge il contenuto specificato come figlio del <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects to be added.">Oggetto contenuto che include contenuto semplice o una raccolta di oggetti contenuto da aggiungere.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object[])">
      <summary vsli:raw="Adds the specified content as children of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Aggiunge il contenuto specificato come figlio del <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Elenco di parametri di oggetti contenuto.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
      <summary vsli:raw="Adds the specified content as the first children of this document or element.">Aggiunge il contenuto specificato come primi figli di questo documento o elemento.</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects to be added.">Oggetto contenuto che include contenuto semplice o una raccolta di oggetti contenuto da aggiungere.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
      <summary vsli:raw="Adds the specified content as the first children of this document or element.">Aggiunge il contenuto specificato come primi figli di questo documento o elemento.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Elenco di parametri di oggetti contenuto.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">L'oggetto padre è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XContainer.CreateWriter">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that can be used to add nodes to the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Viene creato un oggetto <see cref="T:System.Xml.XmlWriter" /> che può essere utilizzato per aggiungere nodi al <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is ready to have content written to it.">
        <see cref="T:System.Xml.XmlWriter" /> che è pronto per ricevere la scrittura del contenuto.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.DescendantNodes">
      <summary vsli:raw="Returns a collection of the descendant nodes for this document or element, in document order.">Restituisce una raccolta di nodi discendenti del documento o elemento nell'ordine dei documenti.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the descendant nodes of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> che contiene i nodi discendenti del <see cref="T:System.Xml.Linq.XContainer" /> nell'ordine dei documenti.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants">
      <summary vsli:raw="Returns a collection of the descendant elements for this document or element, in document order.">Restituisce una raccolta di elementi discendenti del documento o elemento nell'ordine dei documenti.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the descendant elements of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene gli elementi discendenti del <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the descendant elements for this document or element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta filtrata degli elementi discendenti di questo documento o elemento nell'ordine dei documenti. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the descendant elements of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that match the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> contenente gli elementi discendenti del <see cref="T:System.Xml.Linq.XContainer" /> che corrispondono al <see cref="T:System.Xml.Linq.XName" /> specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
      <summary vsli:raw="Gets the first (in document order) child element with the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Ottiene il primo elemento figlio (nell'ordine dei documenti) con il valore <see cref="T:System.Xml.Linq.XName" /> specificato.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that matches the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> che corrisponde al <see cref="T:System.Xml.Linq.XName" /> specificato o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements">
      <summary vsli:raw="Returns a collection of the child elements of this element or document, in document order.">Restituisce una raccolta degli elementi figlio dell'elemento o documento nell'ordine dei documenti.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the child elements of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene gli elementi figlio del <see cref="T:System.Xml.Linq.XContainer" /> nell'ordine dei documenti.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the child elements of this element or document, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta filtrata degli elementi figlio di questo elemento o documento nell'ordine dei documenti. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the children of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene i figli del <see cref="T:System.Xml.Linq.XContainer" /> che ha un <see cref="T:System.Xml.Linq.XName" /> corrispondente nell'ordine dei documenti.</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.FirstNode">
      <summary vsli:raw="Gets the first child node of this node.">Ottiene il primo nodo figlio del nodo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the first child node of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" /> che contiene il primo nodo figlio dell'oggetto <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.LastNode">
      <summary vsli:raw="Gets the last child node of this node.">Ottiene l'ultimo nodo figlio del nodo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the last child node of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" /> che contiene l'ultimo nodo figlio dell'oggetto <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Nodes">
      <summary vsli:raw="Returns a collection of the child nodes of this element or document, in document order.">Restituisce una raccolta dei nodi figlio dell'elemento o documento nell'ordine dei documenti.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the contents of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> che comprende i contenuti del <see cref="T:System.Xml.Linq.XContainer" /> nell'ordine dei documenti.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.RemoveNodes">
      <summary vsli:raw="Removes the child nodes from this document or element.">Rimuove i nodi figlio da questo documento o elemento.</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
      <summary vsli:raw="Replaces the children nodes of this document or element with the specified content.">Sostituisce i nodi figlio di questo documento o elemento con il contenuto specificato.</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects that replace the children nodes.">Oggetto contenuto che contiene il semplice contenuto o una raccolta di oggetti contenuto che sostituiscono i nodi figlio.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
      <summary vsli:raw="Replaces the children nodes of this document or element with the specified content.">Sostituisce i nodi figlio di questo documento o elemento con il contenuto specificato.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Elenco di parametri di oggetti contenuto.</param>
    </member>
    <member name="T:System.Xml.Linq.XDeclaration">
      <summary vsli:raw="Represents an XML declaration.">Rappresenta una dichiarazione XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; class with the specified version, encoding, and standalone status.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XDeclaration" /> con la versione specificata, la codifica e lo stato autonomo.</summary>
      <param name="version" vsli:raw="The version of the XML, usually &quot;1.0&quot;.">Versione del codice XML, in genere "1.0".</param>
      <param name="encoding" vsli:raw="The encoding for the XML document.">Codifica per il documento XML.</param>
      <param name="standalone" vsli:raw="A string containing &quot;yes&quot; or &quot;no&quot; that specifies whether the XML is standalone or requires external entities to be resolved.">Stringa che contiene "sì" o "no" che specifica se il codice XML è autonomo o richiede che entità esterne vengano risolte.</param>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; object.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XDeclaration" /> da un altro oggetto <see cref="T:System.Xml.Linq.XDeclaration" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; used to initialize this &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; object.">Oggetto <see cref="T:System.Xml.Linq.XDeclaration" /> utilizzato per inizializzare l'oggetto <see cref="T:System.Xml.Linq.XDeclaration" />.</param>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Encoding">
      <summary vsli:raw="Gets or sets the encoding for this document.">Ottiene o imposta la codifica per il documento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the code page name for this document.">
        <see cref="T:System.String" /> contenente il nome della pagina di codice per il documento.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Standalone">
      <summary vsli:raw="Gets or sets the standalone property for this document.">Ottiene o imposta la proprietà autonoma per questo documento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the standalone property for this document.">
        <see cref="T:System.String" /> contenente la proprietà autonoma per questo documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.ToString">
      <summary vsli:raw="Provides the declaration as a formatted string.">Fornisce la dichiarazione come stringa formattata.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the formatted XML string.">
        <see cref="T:System.String" /> contenente la stringa XML formattata.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Version">
      <summary vsli:raw="Gets or sets the version property for this document.">Ottiene o imposta la proprietà della versione per il documento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the version property for this document.">
        <see cref="T:System.String" /> contenente la proprietà della versione per questo documento.</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocument">
      <summary vsli:raw="Represents an XML document. For the components and usage of an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object, see XDocument Class Overview.">Rappresenta un documento XML. Per informazioni sui componenti e l'uso di un oggetto <see cref="T:System.Xml.Linq.XDocument" />, vedere Panoramica della classe XDocument.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XDocument" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class with the specified content.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XDocument" /> con il contenuto specificato.</summary>
      <param name="content" vsli:raw="A parameter list of content objects to add to this document.">Un elenco di parametri di oggetti contenuto da aggiungere a questo documento.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; and content.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XDocument" /> con l'oggetto <see cref="T:System.Xml.Linq.XDeclaration" /> e il contenuto specificati.</summary>
      <param name="declaration" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; for the document.">
        <see cref="T:System.Xml.Linq.XDeclaration" /> per il documento.</param>
      <param name="content" vsli:raw="The content of the document.">Contenuto del documento.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class from an existing &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XDocument" /> da un oggetto <see cref="T:System.Xml.Linq.XDocument" /> esistente.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that will be copied.">
        <see cref="T:System.Xml.Linq.XDocument" /> che verrà copiato.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Declaration">
      <summary vsli:raw="Gets or sets the XML declaration for this document.">Ottiene o imposta la dichiarazione XML del documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; that contains the XML declaration for this document.">
        <see cref="T:System.Xml.Linq.XDeclaration" /> contenente la dichiarazione XML del documento.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.DocumentType">
      <summary vsli:raw="Gets the Document Type Definition (DTD) for this document.">Ottiene la definizione DTD (Document Type Definition) per il documento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; that contains the DTD for this document.">
        <see cref="T:System.Xml.Linq.XDocumentType" /> che contiene la definizione DTD del documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; instance by using the specified stream.">Crea una nuova istanza di <see cref="T:System.Xml.Linq.XDocument" /> utilizzando il flusso specificato.</summary>
      <param name="stream" vsli:raw="The stream that contains the XML data.">Flusso che contiene i dati XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that reads the data that is contained in the stream.">Oggetto <see cref="T:System.Xml.Linq.XDocument" /> che legge i dati contenuti nel flusso.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.">Crea una nuova istanza di <see cref="T:System.Xml.Linq.XDocument" /> utilizzando il flusso specificato, conservando facoltativamente lo spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</summary>
      <param name="stream" vsli:raw="The stream containing the XML data.">Flusso contenente i dati XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> che specifica il caricamento dell'URI di base e delle informazioni sulla riga.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that reads the data that is contained in the stream.">Oggetto <see cref="T:System.Xml.Linq.XDocument" /> che legge i dati contenuti nel flusso.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Crea un nuovo oggetto <see cref="T:System.Xml.Linq.XDocument" /> da un oggetto <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.IO.TextReader" /> che comprende il contenuto dell'oggetto <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> che comprende i contenuti dell'oggetto <see cref="T:System.IO.TextReader" /> specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, optionally preserving white space, setting the base URI, and retaining line information.">Crea un <see cref="T:System.Xml.Linq.XDocument" /> nuovo da un oggetto <see cref="T:System.IO.TextReader" />, conservando facoltativamente spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.IO.TextReader" /> che comprende il contenuto dell'oggetto <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">Oggetto <see cref="T:System.Xml.Linq.LoadOptions" /> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XDocument" /> contenente il codice XML letto dall'oggetto <see cref="T:System.IO.TextReader" /> specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a file.">Crea un oggetto <see cref="T:System.Xml.Linq.XDocument" /> nuovo da un file.</summary>
      <param name="uri" vsli:raw="A URI string that references the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Una stringa URI che fa riferimento al file da caricare in un nuovo <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified file.">Oggetto <see cref="T:System.Xml.Linq.XDocument" /> che include il contenuto del file specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a file, optionally preserving white space, setting the base URI, and retaining line information.">Crea un <see cref="T:System.Xml.Linq.XDocument" /> nuovo da un file, conservando facoltativamente spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</summary>
      <param name="uri" vsli:raw="A URI string that references the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Una stringa URI che fa riferimento al file da caricare in un nuovo <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">Oggetto <see cref="T:System.Xml.Linq.LoadOptions" /> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified file.">Oggetto <see cref="T:System.Xml.Linq.XDocument" /> che include il contenuto del file specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Crea un nuovo oggetto <see cref="T:System.Xml.Linq.XDocument" /> da un oggetto <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> che comprende il contenuto dell'oggetto <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> che comprende i contenuti dell'oggetto <see cref="T:System.Xml.XmlReader" /> specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, optionally setting the base URI, and retaining line information.">Carica un <see cref="T:System.Xml.Linq.XDocument" /> da un <see cref="T:System.Xml.XmlReader" />, impostando facoltativamente l'URI di base e mantenendo le informazioni sulla riga.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Oggetto <see cref="T:System.Xml.XmlReader" /> che verrà letto per il contenuto dell'oggetto <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> che specifica il caricamento dell'URI di base e delle informazioni sulla riga.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XDocument" /> contenente il codice XML letto dall'oggetto <see cref="T:System.Xml.XmlReader" /> specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; and initializes its underlying XML tree from the specified stream, optionally preserving white space.">Crea un nuovo <see cref="T:System.Xml.Linq.XDocument" /> in modo asincrono e ne inizializza la struttura ad albero XML sottostante dal flusso specificato, mantenendo facoltativamente lo spazio vuoto.</summary>
      <param name="stream" vsli:raw="A stream containing the raw XML to read into the newly created &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Flusso contenente il codice XML non elaborato da leggere nell'oggetto <see cref="T:System.Xml.Linq.XDocument" /> appena creato.</param>
      <param name="options" vsli:raw="A set of load options.">Set di opzioni di caricamento.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Token di annullamento.</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Nuovo XDocument che include il contenuto dell'oggetto <see cref="T:System.IO.Stream" /> specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; and initializes its underlying XML tree using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; parameter, optionally preserving white space.">Crea un nuovo oggetto <see cref="T:System.Xml.Linq.XDocument" /> e ne inizializza la struttura ad albero XML sottostante usando il parametro <see cref="T:System.IO.TextReader" /> specificato, mantenendo facoltativamente lo spazio vuoto.</summary>
      <param name="textReader" vsli:raw="A reader that contains the raw XML to read into the newly created &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Lettore contenente il codice XML non elaborato da leggere nell'oggetto <see cref="T:System.Xml.Linq.XDocument" /> appena creato.</param>
      <param name="options" vsli:raw="A set of load options.">Set di opzioni di caricamento.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Token di annullamento.</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Nuovo XDocument che include il contenuto dell'oggetto <see cref="T:System.IO.TextReader" /> specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; containing the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Crea un nuovo oggetto <see cref="T:System.Xml.Linq.XDocument" /> che include il contenuto dell'oggetto <see cref="T:System.Xml.XmlReader" /> specificato.</summary>
      <param name="reader" vsli:raw="A reader containing the XML to be read into the new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Lettore contenente il codice XML da leggere nel nuovo oggetto <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A set of load options.">Set di opzioni di caricamento.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Token di annullamento.</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Nuovo XDocument che include il contenuto dell'oggetto <see cref="T:System.Xml.XmlReader" /> specificato.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Ottiene il tipo di nodo per questo nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Document&quot; /&gt;.">Tipo di nodo. Per gli oggetti <see cref="T:System.Xml.Linq.XDocument" />, questo valore è <see cref="F:System.Xml.XmlNodeType.Document" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a string.">Crea un nuovo oggetto <see cref="T:System.Xml.Linq.XDocument" /> da una stringa.</summary>
      <param name="text" vsli:raw="A string that contains XML.">Stringa che contiene XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; populated from the string that contains XML.">Oggetto <see cref="T:System.Xml.Linq.XDocument" /> popolato dalla stringa che contiene il codice XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a string, optionally preserving white space, setting the base URI, and retaining line information.">Crea un <see cref="T:System.Xml.Linq.XDocument" /> nuovo da un stringa, conservando facoltativamente spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</summary>
      <param name="text" vsli:raw="A string that contains XML.">Stringa che contiene XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">Oggetto <see cref="T:System.Xml.Linq.LoadOptions" /> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; populated from the string that contains XML.">Oggetto <see cref="T:System.Xml.Linq.XDocument" /> popolato dalla stringa che contiene il codice XML.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Root">
      <summary vsli:raw="Gets the root element of the XML Tree for this document.">Ottiene l'elemento radice della struttura ad albero XML del documento.</summary>
      <returns vsli:raw="The root &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the XML tree.">Radice <see cref="T:System.Xml.Linq.XElement" /> della struttura ad albero XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Restituisce l'oggetto <see cref="T:System.Xml.Linq.XDocument" /> nell'oggetto <see cref="T:System.IO.Stream" /> specificato.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">Flusso in cui restituire l'oggetto <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">Restituisce l'oggetto <see cref="T:System.Xml.Linq.XDocument" /> nell'oggetto <see cref="T:System.IO.Stream" /> specificato, indicando facoltativamente il comportamento di formattazione.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">Flusso in cui restituire l'oggetto <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">Oggetto <see cref="T:System.Xml.Linq.SaveOptions" /> che specifica il comportamento di formattazione.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Serializzare <see cref="T:System.Xml.Linq.XDocument" /> in un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; will be written to.">Oggetto <see cref="T:System.IO.TextWriter" /> in cui verrà scritto l'oggetto <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">Serializzare <see cref="T:System.Xml.Linq.XDocument" /> in un <see cref="T:System.IO.TextWriter" />, disabilitando facoltativamente la formattazione.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">Oggetto <see cref="T:System.IO.TextWriter" /> nel quale deve essere restituito il codice XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">Oggetto <see cref="T:System.Xml.Linq.SaveOptions" /> che specifica il comportamento di formattazione.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a file, overwriting an existing file, if it exists.">Serializza questo oggetto <see cref="T:System.Xml.Linq.XDocument" /> in un file sovrascrivendo un file esistente, se esiste.</summary>
      <param name="fileName" vsli:raw="A string that contains the name of the file.">Stringa che contiene il nome del file.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a file, optionally disabling formatting.">Serializzare <see cref="T:System.Xml.Linq.XDocument" /> in un file, disabilitando facoltativamente la formattazione.</summary>
      <param name="fileName" vsli:raw="A string that contains the name of the file.">Stringa che contiene il nome del file.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">Oggetto <see cref="T:System.Xml.Linq.SaveOptions" /> che specifica il comportamento di formattazione.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serializzare <see cref="T:System.Xml.Linq.XDocument" /> in un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; will be written to.">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui verrà scritto l'oggetto <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Restituisce questo <see cref="T:System.Xml.Linq.XDocument" /> in un oggetto <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="The stream to write the XML to.">Flusso in cui scrivere il codice XML.</param>
      <param name="options" vsli:raw="A set of load options.">Set di opzioni di caricamento.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Token di annullamento.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">Attività che rappresenta l'operazione di salvataggio asincrona.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Scrive questo <see cref="T:System.Xml.Linq.XDocument" /> in un oggetto <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="The text writer to output the XML to.">Writer di testo in cui restituire il codice XML.</param>
      <param name="options" vsli:raw="A set of load options.">Set di opzioni di caricamento.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Token di annullamento.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">Attività che rappresenta l'operazione di salvataggio asincrona.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive questo <see cref="T:System.Xml.Linq.XDocument" /> in un oggetto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The writer to output the XML to.">Writer in cui restituire il codice XML.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Token di annullamento.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">Attività che rappresenta l'operazione di salvataggio asincrona.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this document to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrivere il documento in un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui scriverà questo metodo.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this XDocument's underlying XML tree to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive l'albero XML sottostante di questo XDocument nell'oggetto <see cref="T:System.Xml.XmlWriter" /> specificato.</summary>
      <param name="writer" vsli:raw="The writer to output the content of this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Writer in cui viene restituito il contenuto di questo oggetto <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Token di annullamento.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocumentType">
      <summary vsli:raw="Represents an XML Document Type Definition (DTD).">Rappresenta una definizione DTD (Document Type Definition) XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; class.">Inizializza un'istanza della classe <see cref="T:System.Xml.Linq.XDocumentType" />.</summary>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.">
        <see cref="T:System.String" /> che contiene il nome completo delle definizioni DTD che corrisponde al nome completo dell'elemento radice del documento XML.</param>
      <param name="publicId" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the public identifier of an external public DTD.">
        <see cref="T:System.String" /> che contiene l'identificatore pubblico di una definizione DTD esterna pubblica.</param>
      <param name="systemId" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the system identifier of an external private DTD.">
        <see cref="T:System.String" /> che contiene l'identificatore di sistema di una definizione DTD privata.</param>
      <param name="internalSubset" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the internal subset for an internal DTD.">
        <see cref="T:System.String" /> che contiene il sottoinsieme interno per una definizione DTD interna.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; object.">Consente di inizializzare un'istanza della classe <see cref="T:System.Xml.Linq.XDocumentType" /> da un altro oggetto <see cref="T:System.Xml.Linq.XDocumentType" />.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; object to copy from.">Oggetto <see cref="T:System.Xml.Linq.XDocumentType" /> da cui copiare.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.InternalSubset">
      <summary vsli:raw="Gets or sets the internal subset for this Document Type Definition (DTD).">Ottiene o imposta il sottoinsieme interno per questa definizione DTD (Document Type Definition).</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the internal subset for this Document Type Definition (DTD).">
        <see cref="T:System.String" /> che contiene il sottoinsieme interno per questa definizione DTD (Document Type Definition).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.Name">
      <summary vsli:raw="Gets or sets the name for this Document Type Definition (DTD).">Ottiene o imposta il nome per questa definizione DTD (Document Type Definition).</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name for this Document Type Definition (DTD).">
        <see cref="T:System.String" /> che contiene il nome per questa definizione DTD (Document Type Definition).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Ottiene il tipo di nodo per questo nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.DocumentType&quot; /&gt;.">Tipo di nodo. Per gli oggetti <see cref="T:System.Xml.Linq.XDocumentType" />, questo valore è <see cref="F:System.Xml.XmlNodeType.DocumentType" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.PublicId">
      <summary vsli:raw="Gets or sets the public identifier for this Document Type Definition (DTD).">Ottiene o imposta l'identificatore pubblico per questa definizione DTD (Document Type Definition).</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the public identifier for this Document Type Definition (DTD).">
        <see cref="T:System.String" /> che contiene l'identificatore pubblico per questa definizione DTD (Document Type Definition).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.SystemId">
      <summary vsli:raw="Gets or sets the system identifier for this Document Type Definition (DTD).">Ottiene o imposta l'identificatore di sistema per questa definizione DTD (Document Type Definition).</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the system identifier for this Document Type Definition (DTD).">
        <see cref="T:System.String" /> che contiene l'identificatore di sistema per questa definizione DTD (Document Type Definition).</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrivere questo <see cref="T:System.Xml.Linq.XDocumentType" />in un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui scriverà questo metodo.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive questo <see cref="T:System.Xml.Linq.XDocumentType" /> nel <see cref="T:System.Xml.XmlWriter" /> specificato.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to.">Writer in cui scrivere questo <see cref="T:System.Xml.Linq.XDocumentType" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="T:System.Xml.Linq.XElement">
      <summary vsli:raw="Represents an XML element.  See XElement Class Overview and the Remarks section on this page for usage information and examples.">Rappresenta un elemento XML.  Per informazioni sull'uso e per esempi, vedere Panoramica della classe XElement e la sezione Osservazioni in questa pagina.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XElement" /> da un altro oggetto <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object to copy from.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> da cui copiare.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XElement" /> con il nome specificato.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the element.">Oggetto <see cref="T:System.Xml.Linq.XName" /> contenente il nome dell'elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name and content.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XElement" /> con il nome e il contenuto specificati.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">Oggetto <see cref="T:System.Xml.Linq.XName" /> contenente il nome dell'elemento.</param>
      <param name="content" vsli:raw="The contents of the element.">Contenuto dell'elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name and content.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XElement" /> con il nome e il contenuto specificati.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">Oggetto <see cref="T:System.Xml.Linq.XName" /> contenente il nome dell'elemento.</param>
      <param name="content" vsli:raw="The initial content of the element.">Contenuto iniziale dell'elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from an &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; object.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XElement" /> da un oggetto <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; that contains unevaluated queries that will be iterated for the contents of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XStreamingElement" /> contenente query non valutate che verranno utilizzate per il contenuto di questo oggetto <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf">
      <summary vsli:raw="Returns a collection of elements that contain this element, and the ancestors of this element.">Restituisce una raccolta di elementi che contengono questo elemento e i relativi predecessori.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of elements that contain this element, and the ancestors of this element.">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> di elementi che contengono questo elemento e i relativi predecessori.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contain this element, and the ancestors of this element. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta filtrata di elementi che contengono questo elemento e i relativi predecessori. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contain this element, and the ancestors of this element. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene questo elemento e i relativi predecessori. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that has the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Restituisce l'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> di questo <see cref="T:System.Xml.Linq.XElement" /> che ha l'oggetto <see cref="T:System.Xml.Linq.XName" /> specificato.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to get.">
        <see cref="T:System.Xml.Linq.XName" /> dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> da ottenere.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that has the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no attribute with the specified name.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> con l'oggetto <see cref="T:System.Xml.Linq.XName" /> specificato; <see langword="null" /> se non ci sono attributi con il nome specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes">
      <summary vsli:raw="Returns a collection of attributes of this element.">Restituisce una raccolta di attributi di questo elemento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; of attributes of this element.">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XAttribute" /> di attributi di questo elemento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of attributes of this element. Only attributes that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta filtrata di attributi di questo elemento. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the attributes of this element. Only attributes that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XAttribute" /> che contiene gli attributi di questo elemento. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
      <summary vsli:raw="Returns a collection of nodes that contain this element, and all descendant nodes of this element, in document order.">Restituisce una raccolta di nodi che contengono questo elemento e tutti i nodi discendenti di questo elemento nell'ordine con cui sono riportati nel documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contain this element, and all descendant nodes of this element, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> che contengono questo elemento e tutti i nodi discendenti di questo elemento nell'ordine con cui sono riportati nel documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf">
      <summary vsli:raw="Returns a collection of elements that contain this element, and all descendant elements of this element, in document order.">Restituisce una raccolta di elementi che contengono questo elemento e tutti gli elementi discendenti di questo elemento nell'ordine con cui sono riportati nel documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of elements that contain this element, and all descendant elements of this element, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> di elementi che contengono questo elemento e tutti gli elementi discendenti di questo elemento nell'ordine con cui sono riportati nel documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta filtrata di elementi che contengono questo elemento e tutti gli elementi discendenti di questo elemento nell'ordine con cui sono riportati nel documento. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contengono questo elemento e tutti gli elementi discendenti di questo elemento nell'ordine con cui sono riportati nel documento. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.EmptySequence">
      <summary vsli:raw="Gets an empty collection of elements.">Ottiene una raccolta vuota di elementi.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains an empty collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> che contiene una raccolta vuota.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.FirstAttribute">
      <summary vsli:raw="Gets the first attribute of this element.">Ottiene il primo attributo di questo elemento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the first attribute of this element.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> che contiene il primo attributo di questo elemento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetDefaultNamespace">
      <summary vsli:raw="Gets the default &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Xml.Linq.XNamespace" /> predefinito di questo <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the default namespace of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XNamespace" /> che contiene lo spazio dei nomi predefinito di <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
      <summary vsli:raw="Gets the namespace associated with a particular prefix for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Ottiene lo spazio dei nomi associato a un determinato prefisso per questo <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <param name="prefix" vsli:raw="A string that contains the namespace prefix to look up.">Stringa che contiene il prefisso degli spazi dei nomi da ricercare.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for the namespace associated with the prefix for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XNamespace" /> per lo spazio dei nomi associato al prefisso per questo <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Gets the prefix associated with a namespace for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Ottiene il prefisso associato a uno spazio dei nomi per questo <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <param name="ns" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to look up.">Un oggetto <see cref="T:System.Xml.Linq.XNamespace" /> da ricercare.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix.">Oggetto <see cref="T:System.String" /> che contiene il prefisso dello spazio dei nomi.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasAttributes">
      <summary vsli:raw="Gets a value indicating whether this element has at least one attribute.">Ottiene un valore che indica se questo elemento ha almeno un attributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element has at least one attribute; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento ha almeno un attributo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasElements">
      <summary vsli:raw="Gets a value indicating whether this element has at least one child element.">Ottiene un valore che indica se l'elemento ha almeno un elemento figlio.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element has at least one child element; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento ha almeno un elemento figlio; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether this element contains no content.">Ottiene un valore che indica se questo elemento non include alcun contenuto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element contains no content; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento non include contenuto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.LastAttribute">
      <summary vsli:raw="Gets the last attribute of this element.">Ottiene l'ultimo attributo di questo elemento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the last attribute of this element.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> che contiene l'ultimo attributo dell'elemento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; instance by using the specified stream.">Crea una nuova istanza di <see cref="T:System.Xml.Linq.XElement" /> usando il flusso specificato.</summary>
      <param name="stream" vsli:raw="The stream that contains the XML data.">Flusso che contiene i dati XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object used to read the data that is contained in the stream.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> usato per leggere i dati contenuti nel flusso.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.">Crea una nuova istanza di <see cref="T:System.Xml.Linq.XElement" /> usando il flusso specificato, conservando facoltativamente lo spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</summary>
      <param name="stream" vsli:raw="The stream containing the XML data.">Flusso contenente i dati XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; object that specifies whether to load base URI and line information.">Oggetto <see cref="T:System.Xml.Linq.LoadOptions" /> che specifica se caricare l'URI di base e le informazioni sulla riga.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object used to read the data that the stream contains.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> usato per leggere i dati contenuti nel flusso.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Carica un <see cref="T:System.Xml.Linq.XElement" /> da un <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be read for the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; content.">Oggetto <see cref="T:System.IO.TextReader" /> che verrà letto per il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> contenente il codice XML letto dall'oggetto <see cref="T:System.IO.TextReader" /> specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, optionally preserving white space and retaining line information.">Carica un oggetto <see cref="T:System.Xml.Linq.XElement" /> da un oggetto <see cref="T:System.IO.TextReader" />, conservando facoltativamente spazio vuoto e mantenendo le informazioni sulla riga.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be read for the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; content.">Oggetto <see cref="T:System.IO.TextReader" /> che verrà letto per il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> contenente il codice XML letto dall'oggetto <see cref="T:System.IO.TextReader" /> specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a file.">Carica un <see cref="T:System.Xml.Linq.XElement" /> da un file.</summary>
      <param name="uri" vsli:raw="A URI string referencing the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Una stringa URI che fa riferimento al file da caricare in un nuovo <see cref="T:System.Xml.Linq.XElement" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the contents of the specified file.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> che include il contenuto del file specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a file, optionally preserving white space, setting the base URI, and retaining line information.">Carica un <see cref="T:System.Xml.Linq.XElement" /> da un file, conservando facoltativamente spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</summary>
      <param name="uri" vsli:raw="A URI string referencing the file to load into an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Una stringa URI che fa riferimento al file da caricare in un <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">Oggetto <see cref="T:System.Xml.Linq.LoadOptions" /> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the contents of the specified file.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> che include il contenuto del file specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Carica un oggetto <see cref="T:System.Xml.Linq.XElement" /> da un oggetto <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Xml.XmlReader" /> che verrà letto per il contenuto dell'oggetto <see cref="T:System.Xml.Linq.XElement" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> contenente il codice XML letto dall'oggetto <see cref="T:System.Xml.XmlReader" /> specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, optionally preserving white space, setting the base URI, and retaining line information.">Carica un oggetto <see cref="T:System.Xml.Linq.XElement" /> da un oggetto <see cref="T:System.Xml.XmlReader" />, conservando facoltativamente spazio vuoto, impostando l'URI di base e mantenendo le informazioni sulla riga.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Xml.XmlReader" /> che verrà letto per il contenuto dell'oggetto <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">Oggetto <see cref="T:System.Xml.Linq.LoadOptions" /> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> contenente il codice XML letto dall'oggetto <see cref="T:System.Xml.XmlReader" /> specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified stream, optionally preserving white space.">Crea un nuovo <see cref="T:System.Xml.Linq.XElement" /> in modo asincrono e ne inizializza la struttura ad albero XML sottostante usando il flusso specificato, mantenendo facoltativamente lo spazio vuoto.</summary>
      <param name="stream" vsli:raw="The stream containing the raw XML to read.">Flusso contenente codice XML non elaborato da leggere.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">Combinazione bit per bit dei valori di enumerazione che specificano le opzioni di caricamento per analizzare il codice XML.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified stream.">Nuovo oggetto <see cref="T:System.Xml.Linq.XElement" /> che include il contenuto del flusso specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified text reader, optionally preserving white space.">Crea un nuovo <see cref="T:System.Xml.Linq.XElement" /> in modo asincrono e ne inizializza la struttura ad albero XML sottostante usando il lettore di testo specificato, mantenendo facoltativamente lo spazio vuoto.</summary>
      <param name="textReader" vsli:raw="A reader containing the raw XML to read.">Lettore contenente codice XML non elaborato da leggere.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">Combinazione bit per bit dei valori di enumerazione che specificano le opzioni di caricamento per analizzare il codice XML.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified reader.">Nuovo oggetto <see cref="T:System.Xml.Linq.XElement" /> che include il contenuto del lettore specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified XML reader, optionally preserving white space.">Crea un nuovo <see cref="T:System.Xml.Linq.XElement" /> in modo asincrono e ne inizializza la struttura ad albero XML sottostante usando il lettore XML specificato, mantenendo facoltativamente lo spazio vuoto.</summary>
      <param name="reader" vsli:raw="A reader containing the XML to be read.">Lettore contenente il codice XML da leggere.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">Combinazione bit per bit dei valori di enumerazione che specificano le opzioni di caricamento per analizzare il codice XML.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified reader.">Nuovo oggetto <see cref="T:System.Xml.Linq.XElement" /> che include il contenuto del lettore specificato.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.Name">
      <summary vsli:raw="Gets or sets the name of this element.">Ottiene o imposta il nome di questo elemento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of this element.">Oggetto <see cref="T:System.Xml.Linq.XName" /> che contiene il nome dell'elemento.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Ottiene il tipo di nodo per questo nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Element&quot; /&gt;.">Tipo di nodo. Per gli oggetti <see cref="T:System.Xml.Linq.XElement" />, questo valore è <see cref="F:System.Xml.XmlNodeType.Element" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Boolean" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui eseguire il cast a un oggetto <see cref="T:System.Boolean" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Boolean" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">L'elemento non contiene un valore <see cref="T:System.Boolean" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="element" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.DateTime" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui eseguire il cast a un oggetto <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.DateTime" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">L'elemento non contiene un valore <see cref="T:System.DateTime" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="element" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XAttribute" /> a un oggetto <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui eseguire il cast a un oggetto <see cref="T:System.DateTimeOffset" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.DateTimeOffset" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">L'elemento non contiene un valore <see cref="T:System.DateTimeOffset" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="element" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Decimal" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui eseguire il cast a un oggetto <see cref="T:System.Decimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Decimal" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">L'elemento non contiene un valore <see cref="T:System.Decimal" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="element" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Double" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui eseguire il cast a un oggetto <see cref="T:System.Double" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Double" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">L'elemento non contiene un valore <see cref="T:System.Double" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="element" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Guid" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui eseguire il cast a un oggetto <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Guid" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">L'elemento non contiene un valore <see cref="T:System.Guid" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="element" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Int32" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui eseguire il cast a un oggetto <see cref="T:System.Int32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Int32" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">L'elemento non contiene un valore <see cref="T:System.Int32" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="element" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Int64" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui eseguire il cast a un oggetto <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Int64" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">L'elemento non contiene un valore <see cref="T:System.Int64" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="element" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Boolean" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Boolean" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Boolean" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">L'elemento non è <see langword="null" /> e non contiene un valore <see cref="T:System.Boolean" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.DateTime" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.DateTime" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">L'elemento non è <see langword="null" /> e non contiene un valore <see cref="T:System.DateTime" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to an &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.DateTimeOffset" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.DateTimeOffset" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">L'elemento non è <see langword="null" /> e non contiene un valore <see cref="T:System.DateTimeOffset" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Decimal" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Decimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Decimal" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">L'elemento non è <see langword="null" /> e non contiene un valore <see cref="T:System.Decimal" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Double" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Double" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Double" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">L'elemento non è <see langword="null" /> e non contiene un valore <see cref="T:System.Double" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Guid" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Guid" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">L'elemento non è <see langword="null" /> e non contiene un valore <see cref="T:System.Guid" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Int32" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Int32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Int32" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">L'elemento non è <see langword="null" /> e non contiene un valore <see cref="T:System.Int32" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Int64" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Int64" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">L'elemento non è <see langword="null" /> e non contiene un valore <see cref="T:System.Int64" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Single" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Single" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.Single" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">L'elemento non è <see langword="null" /> e non contiene un valore <see cref="T:System.Single" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.TimeSpan" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.TimeSpan" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">L'elemento non è <see langword="null" /> e non contiene un valore <see cref="T:System.TimeSpan" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.UInt32" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.UInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.UInt32" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">L'elemento non è <see langword="null" /> e non contiene un valore <see cref="T:System.UInt32" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.UInt64" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui per eseguire il cast a un oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.UInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Nullable`1" /> di <see cref="T:System.UInt64" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">L'elemento non è <see langword="null" /> e non contiene un valore <see cref="T:System.UInt64" /> valido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.Single" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui eseguire il cast a un oggetto <see cref="T:System.Single" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.Single" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">L'elemento non contiene un valore <see cref="T:System.Single" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="element" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.String" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui eseguire il cast a un oggetto <see cref="T:System.String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.String" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.TimeSpan" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui eseguire il cast a un oggetto <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.TimeSpan" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">L'elemento non contiene un valore <see cref="T:System.TimeSpan" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="element" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.UInt32" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui eseguire il cast a un oggetto <see cref="T:System.UInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.UInt32" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">L'elemento non contiene un valore <see cref="T:System.UInt32" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="element" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Esegue il cast del valore dell'oggetto <see cref="T:System.Xml.Linq.XElement" /> a un oggetto <see cref="T:System.UInt64" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> di cui eseguire il cast a un oggetto <see cref="T:System.UInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Oggetto <see cref="T:System.UInt64" /> che include il contenuto di <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">L'elemento non contiene un valore <see cref="T:System.UInt64" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="element" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String)">
      <summary vsli:raw="Load an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a string that contains XML.">Caricare un <see cref="T:System.Xml.Linq.XElement" /> da una stringa che contiene codice XML.</summary>
      <param name="text" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains XML.">Oggetto <see cref="T:System.String" /> che contiene codice XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; populated from the string that contains XML.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> popolato dalla stringa che contiene il codice XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Load an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a string that contains XML, optionally preserving white space and retaining line information.">Carica un oggetto <see cref="T:System.Xml.Linq.XElement" /> da una stringa contenente XML, facoltativamente preservando lo spazio vuoto e mantenendo le informazioni sulla riga.</summary>
      <param name="text" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains XML.">Oggetto <see cref="T:System.String" /> che contiene il codice XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">Oggetto <see cref="T:System.Xml.Linq.LoadOptions" /> che specifica il comportamento dello spazio vuoto e se caricare l'URI di base e le informazioni sulla riga.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; populated from the string that contains XML.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> popolato dalla stringa che contiene il codice XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAll">
      <summary vsli:raw="Removes nodes and attributes from this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Rimuove i nodi e gli attributi da <see cref="T:System.Xml.Linq.XElement" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAttributes">
      <summary vsli:raw="Removes the attributes of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Rimuove gli attributi di <see cref="T:System.Xml.Linq.XElement" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
      <summary vsli:raw="Replaces the child nodes and the attributes of this element with the specified content.">Sostituisce i nodi figlio e gli attributi di questo elemento con il contenuto specificato.</summary>
      <param name="content" vsli:raw="The content that will replace the child nodes and attributes of this element.">Contenuto che sostituisce i nodi figlio e gli attributi di questo elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
      <summary vsli:raw="Replaces the child nodes and the attributes of this element with the specified content.">Sostituisce i nodi figlio e gli attributi di questo elemento con il contenuto specificato.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Un elenco di parametri di oggetti contenuto.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
      <summary vsli:raw="Replaces the attributes of this element with the specified content.">Sostituisce gli attributi di questo elemento con il contenuto specificato.</summary>
      <param name="content" vsli:raw="The content that will replace the attributes of this element.">Il contenuto sostituisce gli attributi di questo elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
      <summary vsli:raw="Replaces the attributes of this element with the specified content.">Sostituisce gli attributi di questo elemento con il contenuto specificato.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Elenco di parametri di oggetti contenuto.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Restituisce l'oggetto <see cref="T:System.Xml.Linq.XElement" /> nell'oggetto <see cref="T:System.IO.Stream" /> specificato.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">Flusso in cui restituire l'oggetto <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">Restituisce l'oggetto <see cref="T:System.Xml.Linq.XElement" /> nell'oggetto <see cref="T:System.IO.Stream" /> specificato, indicando facoltativamente il comportamento di formattazione.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">Flusso in cui restituire l'oggetto <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">Oggetto <see cref="T:System.Xml.Linq.SaveOptions" /> che specifica il comportamento di formattazione.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Serializza questo elemento in <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">Oggetto <see cref="T:System.IO.TextWriter" /> in cui verrà scritto l'oggetto <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">Serializza questo elemento in <see cref="T:System.IO.TextWriter" />, facoltativamente disabilitando la formattazione.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">Oggetto <see cref="T:System.IO.TextWriter" /> nel quale deve essere restituito il codice XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">Oggetto <see cref="T:System.Xml.Linq.SaveOptions" /> che specifica il comportamento di formattazione.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String)">
      <summary vsli:raw="Serialize this element to a file.">Serializza questo elemento in un file.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">
        <see cref="T:System.String" /> che contiene il nome del file.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this element to a file, optionally disabling formatting.">Serializza questo elemento in un file, facoltativamente disabilitando la formattazione.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">Oggetto <see cref="T:System.String" /> che contiene il nome del file.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">Oggetto <see cref="T:System.Xml.Linq.SaveOptions" /> che specifica il comportamento di formattazione.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serializzare questo elemento in un oggetto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui verrà scritto l'oggetto <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Restituisce questo oggetto <see cref="T:System.Xml.Linq.XElement" /> in un oggetto <see cref="T:System.IO.Stream" /> in modo asincrono.</summary>
      <param name="stream" vsli:raw="The stream to output the XML to.">Flusso in cui viene restituito il codice XML.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the serialization options.">Combinazione bit per bit dei valori di enumerazione che specificano le opzioni di serializzazione.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">Attività che rappresenta l'operazione di salvataggio asincrona.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Restituisce questo oggetto <see cref="T:System.Xml.Linq.XElement" /> in un oggetto <see cref="T:System.IO.TextWriter" /> in modo asincrono.</summary>
      <param name="textWriter" vsli:raw="The writer to output the XML to.">Writer in cui restituire il codice XML.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the serialization options.">Combinazione bit per bit dei valori di enumerazione che specificano le opzioni di serializzazione.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">Attività che rappresenta l'operazione di salvataggio asincrona.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Restituisce questo oggetto <see cref="T:System.Xml.Linq.XElement" /> in un oggetto <see cref="T:System.Xml.XmlWriter" /> in modo asincrono.</summary>
      <param name="writer" vsli:raw="The writer to output the XML to.">Writer in cui restituire il codice XML.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">Attività che rappresenta l'operazione di salvataggio asincrona.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Sets the value of an attribute, adds an attribute, or removes an attribute.">Imposta il valore di un attributo oppure lo aggiunge o lo rimuove.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the attribute to change.">Oggetto <see cref="T:System.Xml.Linq.XName" /> che contiene il nome dell'attributo da cambiare.</param>
      <param name="value" vsli:raw="The value to assign to the attribute. The attribute is removed if the value is &lt;see langword=&quot;null&quot; /&gt;. Otherwise, the value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XAttribute.Value&quot; /&gt; property of the attribute.">Valore da assegnare all'attributo. L'attributo viene rimosso se il valore è <see langword="null" />. In caso contrario, il valore viene convertito nella rappresentazione di stringa e assegnato alla proprietà <see cref="P:System.Xml.Linq.XAttribute.Value" /> dell'attributo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" /> è un'istanza di <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Sets the value of a child element, adds a child element, or removes a child element.">Imposta il valore di un elemento figlio oppure lo aggiunge o lo rimuove.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the child element to change.">Oggetto <see cref="T:System.Xml.Linq.XName" /> che contiene il nome dell'elemento figlio da cambiare.</param>
      <param name="value" vsli:raw="The value to assign to the child element. The child element is removed if the value is &lt;see langword=&quot;null&quot; /&gt;. Otherwise, the value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XElement.Value&quot; /&gt; property of the child element.">Valore da assegnare all'elemento figlio. L'elemento figlio viene rimosso se il valore è <see langword="null" />. In caso contrario, il valore viene convertito nella rappresentazione di stringa e assegnato alla proprietà <see cref="P:System.Xml.Linq.XElement.Value" /> dell'elemento figlio.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" /> è un'istanza di <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetValue(System.Object)">
      <summary vsli:raw="Sets the value of this element.">Imposta il valore dell'elemento.</summary>
      <param name="value" vsli:raw="The value to assign to this element. The value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XElement.Value&quot; /&gt; property.">Valore da assegnare all'elemento. Il valore viene convertito in una rappresentazione di stringa e assegnato alla proprietà <see cref="P:System.Xml.Linq.XElement.Value" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">L'elemento <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Il <paramref name="value" /> è un <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="Gets an XML schema definition that describes the XML representation of this object.">Ottiene una definizione XML Schema che descrive la rappresentazione XML di questo oggetto.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">Oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> che descrive la rappresentazione XML dell'oggetto prodotto dal metodo <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> e usato dal metodo <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Generates an object from its XML representation.">Genera un oggetto dalla relativa rappresentazione XML.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which the object is deserialized.">Oggetto <see cref="T:System.Xml.XmlReader" /> da cui viene deserializzato l'oggetto.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Converts an object into its XML representation.">Converte un oggetto nella relativa rappresentazione XML.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which this object is serialized.">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui viene serializzato l'oggetto.</param>
    </member>
    <member name="P:System.Xml.Linq.XElement.Value">
      <summary vsli:raw="Gets or sets the concatenated text contents of this element.">Ottiene o imposta i contenuti di testo concatenati di questo elemento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains all of the text content of this element. If there are multiple text nodes, they will be concatenated.">
        <see cref="T:System.String" /> contiene tutto il contenuto di testo di questo elemento. Se sono presenti più nodi testo, saranno concatenati.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive l'elemento in <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui scriverà questo metodo.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified writer.">Scrive questo oggetto <see cref="T:System.Xml.Linq.XElement" /> nel writer specificato in modo asincrono.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">Writer in cui scrivere questo <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="T:System.Xml.Linq.XName">
      <summary vsli:raw="Represents a name of an XML element or attribute.">Rappresenta un nome di un elemento o attributo XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XName.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Xml.Linq.XName" /> specificato è uguale a <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">L'oggetto <see cref="T:System.Xml.Linq.XName" /> da confrontare con l'oggetto <see cref="T:System.Xml.Linq.XName" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xml.Linq.XName" /> specificato è uguale all'oggetto <see cref="T:System.Xml.Linq.XName" /> corrente; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object from an expanded name.">Ottiene un oggetto <see cref="T:System.Xml.Linq.XName" /> da un nome esteso.</summary>
      <param name="expandedName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains an expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <see cref="T:System.String" /> che contiene un nome XML esteso nel formato <c>{namespace}localname</c>.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object constructed from the expanded name.">Oggetto <see cref="T:System.Xml.Linq.XName" /> costruito da un nome esteso.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String,System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object from a local name and a namespace.">Ottiene un oggetto <see cref="T:System.Xml.Linq.XName" /> da un nome locale e uno spazio dei nomi.</summary>
      <param name="localName" vsli:raw="A local (unqualified) name.">Nome locale (non qualificato).</param>
      <param name="namespaceName" vsli:raw="An XML namespace.">Uno spazio dei nomi XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object created from the specified local name and namespace.">Oggetto <see cref="T:System.Xml.Linq.XName" /> creato dal nome locale e spazio dei nomi specificati.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Ottiene un codice hash per <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the hash code for the &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Oggetto <see cref="T:System.Int32" /> che contiene il codice hash per <see cref="T:System.Xml.Linq.XName" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.LocalName">
      <summary vsli:raw="Gets the local (unqualified) part of the name.">Ottiene la parte locale (non qualificata) del nome.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local (unqualified) part of the name.">
        <see cref="T:System.String" /> che contiene la parte locale (non qualificata) del nome.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.Namespace">
      <summary vsli:raw="Gets the namespace part of the fully qualified name.">Ottiene la parte dello spazio dei nomi del nome completo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the namespace part of the name.">
        <see cref="T:System.Xml.Linq.XNamespace" /> che contiene la parte dello spazio dei nomi del nome.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.NamespaceName">
      <summary vsli:raw="Returns the URI of the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Restituisce l'URI del <see cref="T:System.Xml.Linq.XNamespace" /> per questo <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">URI del <see cref="T:System.Xml.Linq.XNamespace" /> per questo <see cref="T:System.Xml.Linq.XName" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are equal.">Restituisce un valore che indica se due istanze di <see cref="T:System.Xml.Linq.XName" /> sono uguali.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">Primo oggetto <see cref="T:System.Xml.Linq.XName" /> da confrontare.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">Secondo oggetto <see cref="T:System.Xml.Linq.XName" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName">
      <summary vsli:raw="Converts a string formatted as an expanded XML name (that is,&lt;c&gt;{namespace}localname&lt;/c&gt;) to an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object.">Converte una stringa formattata come nome XML esteso (ovvero <c>{namespace}localname</c>) in un oggetto <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="expandedName" vsli:raw="A string that contains an expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">Stringa che contiene un nome XML esteso nel formato <c>{namespace}localname</c>.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object constructed from the expanded name.">Oggetto <see cref="T:System.Xml.Linq.XName" /> costruito da un nome esteso.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are not equal.">Restituisce un valore che indica se due istanze di <see cref="T:System.Xml.Linq.XName" /> non sono uguali.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">Primo oggetto <see cref="T:System.Xml.Linq.XName" /> da confrontare.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">Secondo oggetto <see cref="T:System.Xml.Linq.XName" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#IEquatable{System#Xml#Linq#XName}#Equals(System.Xml.Linq.XName)">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Indica se l'oggetto <see cref="T:System.Xml.Linq.XName" /> corrente è uguale all'oggetto <see cref="T:System.Xml.Linq.XName" /> specificato.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare with this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XName" /> da confrontare con questo oggetto <see cref="T:System.Xml.Linq.XName" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xml.Linq.XName" /> è uguale all'oggetto <see cref="T:System.Xml.Linq.XName" /> specificato; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data required to serialize the target object.">Inserisce una classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati richiesti per serializzare l'oggetto di destinazione.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da popolare con i dati.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">Destinazione della serializzazione (vedere <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
    </member>
    <member name="M:System.Xml.Linq.XName.ToString">
      <summary vsli:raw="Returns the expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">Restituisce il nome XML esteso nel formato <c>{namespace}localname</c>.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <see cref="T:System.String" /> che contiene il nome XML esteso nel formato <c>{namespace}localname</c>.</returns>
    </member>
    <member name="T:System.Xml.Linq.XNamespace">
      <summary vsli:raw="Represents an XML namespace. This class cannot be inherited.">Rappresenta uno spazio dei nomi XML. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Xml.Linq.XNamespace" /> specificato è uguale all'oggetto <see cref="T:System.Xml.Linq.XNamespace" /> corrente.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">L'oggetto <see cref="T:System.Xml.Linq.XNamespace" /> da confrontare con l'oggetto <see cref="T:System.Xml.Linq.XNamespace" /> corrente.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">
        <see cref="T:System.Boolean" /> che indica se l'oggetto <see cref="T:System.Xml.Linq.XNamespace" /> specificato è uguale all'oggetto <see cref="T:System.Xml.Linq.XNamespace" /> corrente.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Get(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for the specified Uniform Resource Identifier (URI).">Ottiene uno <see cref="T:System.Xml.Linq.XNamespace" /> per l'URI (Uniform Resource Identifier) specificato.</summary>
      <param name="namespaceName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a namespace URI.">
        <see cref="T:System.String" /> che contiene un URI dello spazio dei nomi.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; created from the specified URI.">
        <see cref="T:System.Xml.Linq.XNamespace" /> creato dall'URI specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Ottiene un codice hash per <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the hash code for the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Oggetto <see cref="T:System.Int32" /> che contiene il codice hash per <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object created from this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; and the specified local name.">Restituisce un oggetto <see cref="T:System.Xml.Linq.XName" /> creato da questo <see cref="T:System.Xml.Linq.XNamespace" /> e il nome locale specificato.</summary>
      <param name="localName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a local name.">
        <see cref="T:System.String" /> che contiene un nome locale.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; created from this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; and the specified local name.">
        <see cref="T:System.Xml.Linq.XName" /> creato da questo <see cref="T:System.Xml.Linq.XNamespace" /> e il nome locale specificato.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.NamespaceName">
      <summary vsli:raw="Gets the Uniform Resource Identifier (URI) of this namespace.">Ottiene l'URI (Uniform Resource Identifier) dello spazio dei nomi.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the URI of the namespace.">
        <see cref="T:System.String" /> che contiene l'URI dello spazio dei nomi.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.None">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to no namespace.">Ottiene l'oggetto <see cref="T:System.Xml.Linq.XNamespace" /> che non corrisponde ad alcuno spazio dei nomi.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to no namespace.">
        <see cref="T:System.Xml.Linq.XNamespace" /> che non corrisponde ad alcuno spazio dei nomi.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
      <summary vsli:raw="Combines an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object with a local name to create an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Combina un oggetto <see cref="T:System.Xml.Linq.XNamespace" /> con un nome locale per creare un <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="ns" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the namespace.">
        <see cref="T:System.Xml.Linq.XNamespace" /> che contiene lo spazio dei nomi.</param>
      <param name="localName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local name.">
        <see cref="T:System.String" /> che contiene il nome locale.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; constructed from the namespace and local name.">Nuovo <see cref="T:System.Xml.Linq.XName" /> costruito dallo spazio dei nomi e dal nome locale.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; are equal.">Restituisce un valore che indica se due istanze di <see cref="T:System.Xml.Linq.XNamespace" /> sono uguali.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">Primo oggetto <see cref="T:System.Xml.Linq.XNamespace" /> da confrontare.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">Secondo oggetto <see cref="T:System.Xml.Linq.XNamespace" /> da confrontare.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal.">Valore <see cref="T:System.Boolean" /> che indica se <paramref name="left" /> e <paramref name="right" /> sono uguali.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
      <summary vsli:raw="Converts a string containing a Uniform Resource Identifier (URI) to an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Converte una stringa che contiene un URI (Uniform Resource Identifier) in un <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <param name="namespaceName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace URI.">
        <see cref="T:System.String" /> che contiene l'URI dello spazio dei nomi.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; constructed from the URI string.">
        <see cref="T:System.Xml.Linq.XNamespace" /> costruito dalla stringa URI.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; are not equal.">Restituisce un valore che indica se due istanze di <see cref="T:System.Xml.Linq.XNamespace" /> non sono uguali.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">Primo oggetto <see cref="T:System.Xml.Linq.XNamespace" /> da confrontare.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">Secondo oggetto <see cref="T:System.Xml.Linq.XNamespace" /> da confrontare.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal.">Valore <see cref="T:System.Boolean" /> che indica se <paramref name="left" /> e <paramref name="right" /> non sono uguali.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.ToString">
      <summary vsli:raw="Returns the URI of this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Restituisce l'URI del <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns vsli:raw="The URI of this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">URI del <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xml">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to the XML URI (&lt;c&gt;http://www.w3.org/XML/1998/namespace&lt;/c&gt;).">Ottiene l'oggetto <see cref="T:System.Xml.Linq.XNamespace" /> che corrisponde all'URI XML (<c>http://www.w3.org/XML/1998/namespace</c>).</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to the XML URI (&lt;c&gt;http://www.w3.org/XML/1998/namespace&lt;/c&gt;).">Oggetto <see cref="T:System.Xml.Linq.XNamespace" /> che corrisponde all'URI XML (<c>http://www.w3.org/XML/1998/namespace</c>).</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xmlns">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to the xmlns URI (&lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;).">Ottiene l'oggetto <see cref="T:System.Xml.Linq.XNamespace" /> che corrisponde all'URI xmlns (<c>http://www.w3.org/2000/xmlns/</c>).</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to the xmlns URI (&lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;).">Oggetto <see cref="T:System.Xml.Linq.XNamespace" /> che corrisponde all'URI xmlns (<c>http://www.w3.org/2000/xmlns/</c>).</returns>
    </member>
    <member name="T:System.Xml.Linq.XNode">
      <summary vsli:raw="Represents the abstract concept of a node (element, comment, document type, processing instruction, or text node) in the XML tree.">Rappresenta il concetto astratto di un nodo (elemento, commento, tipo di documento, istruzione di elaborazione o nodo di testo) nell'albero XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)">
      <summary vsli:raw="Adds the specified content immediately after this node.">Aggiunge il contenuto specificato immediatamente dopo il nodo.</summary>
      <param name="content" vsli:raw="A content object that contains simple content or a collection of content objects to be added after this node.">Un oggetto contenuto che contiene il semplice contenuto o una raccolta di oggetti contenuto da aggiungere dopo questo nodo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">L'oggetto padre è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])">
      <summary vsli:raw="Adds the specified content immediately after this node.">Aggiunge il contenuto specificato immediatamente dopo il nodo.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Elenco di parametri di oggetti contenuto.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">L'oggetto padre è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)">
      <summary vsli:raw="Adds the specified content immediately before this node.">Aggiunge il contenuto specificato immediatamente prima del nodo.</summary>
      <param name="content" vsli:raw="A content object that contains simple content or a collection of content objects to be added before this node.">Un oggetto contenuto che contiene il semplice contenuto o una raccolta di oggetti contenuto da aggiungere prima di questo nodo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">L'oggetto padre è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])">
      <summary vsli:raw="Adds the specified content immediately before this node.">Aggiunge il contenuto specificato immediatamente prima del nodo.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Elenco di parametri di oggetti contenuto.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">L'oggetto padre è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors">
      <summary vsli:raw="Returns a collection of the ancestor elements of this node.">Restituisce una raccolta di elementi del predecessore di questo nodo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the ancestor elements of this node.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> degli elementi del predecessore di questo nodo.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the ancestor elements of this node. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta filtrata di elementi del predecessore di questo nodo. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the ancestor elements of this node. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.  &#xA;  &#xA; The nodes in the returned collection are in reverse document order.  &#xA;  &#xA; This method uses deferred execution.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> degli elementi del predecessore di questo nodo. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.
I nodi della raccolta restituita nell'ordine inverso del documento.
Questo metodo usa l'esecuzione posticipata.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares two nodes to determine their relative XML document order.">Confronta due nodi per determinare l'ordine del documento XML relativo.</summary>
      <param name="n1" vsli:raw="First &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Primo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</param>
      <param name="n2" vsli:raw="Second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Secondo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</param>
      <returns vsli:raw="An &lt;see langword=&quot;int&quot; /&gt; containing 0 if the nodes are equal; -1 if &lt;paramref name=&quot;n1&quot; /&gt; is before &lt;paramref name=&quot;n2&quot; /&gt;; 1 if &lt;paramref name=&quot;n1&quot; /&gt; is after &lt;paramref name=&quot;n2&quot; /&gt;.">Un <see langword="int" /> che contiene 0 se i nodi sono uguali; -1 se <paramref name="n1" /> viene prima di <paramref name="n2" />; 1 se <paramref name="n1" /> viene dopo <paramref name="n2" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">I due nodi non condividono un predecessore comune.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this node.">Crea un oggetto <see cref="T:System.Xml.XmlReader" /> per questo nodo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that can be used to read this node and its descendants.">
        <see cref="T:System.Xml.XmlReader" /> che può essere utilizzato per leggere questo nodo e i relativi discendenti.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; with the options specified by the &lt;paramref name=&quot;readerOptions&quot; /&gt; parameter.">Crea un oggetto <see cref="T:System.Xml.XmlReader" /> con le opzioni specificate dal parametro <paramref name="readerOptions" />.</summary>
      <param name="readerOptions" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.ReaderOptions&quot; /&gt; object that specifies whether to omit duplicate namespaces.">Oggetto <see cref="T:System.Xml.Linq.ReaderOptions" /> che specifica se omettere gli spazi dei nomi duplicati.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Un oggetto <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares the values of two nodes, including the values of all descendant nodes.">Confronta i valori di due nodi, inclusi i valori di tutti i nodi discendenti.</summary>
      <param name="n1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Primo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</param>
      <param name="n2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Secondo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the nodes are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i nodi sono uguali; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.DocumentOrderComparer">
      <summary vsli:raw="Gets a comparer that can compare the relative position of two nodes.">Ottiene un operatore di confronto che può confrontare la posizione relativa di due nodi.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNodeDocumentOrderComparer&quot; /&gt; that can compare the relative position of two nodes.">Oggetto <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /> che può confrontare la posizione relativa di due nodi.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf">
      <summary vsli:raw="Returns a collection of the sibling elements after this node, in document order.">Restituisce una raccolta di elementi di pari livello dopo questo nodo nell'ordine del documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements after this node, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> di elementi di pari livello dopo questo nodo nell'ordine in cui sono riportati nei documenti.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the sibling elements after this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta filtrata di elementi di pari livello dopo questo nodo nell'ordine in cui sono riportati nei documenti. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements after this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> di elementi di pari livello dopo questo nodo nell'ordine in cui sono riportati nei documenti. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf">
      <summary vsli:raw="Returns a collection of the sibling elements before this node, in document order.">Restituisce una raccolta di elementi di pari livello prima di questo nodo nell'ordine in cui sono riportati nei documenti.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements before this node, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> di elementi di pari livello prima di questo nodo nell'ordine in cui sono riportati nei documenti.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the sibling elements before this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Restituisce una raccolta filtrata di elementi di pari livello prima di questo nodo nell'ordine in cui sono riportati nei documenti. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">Oggetto <see cref="T:System.Xml.Linq.XName" /> di cui trovare la corrispondenza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements before this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XElement" /> di elementi di pari livello prima di questo nodo nell'ordine in cui sono riportati nei documenti. Solo gli elementi che hanno un oggetto <see cref="T:System.Xml.Linq.XName" /> corrispondente vengono inclusi nella raccolta.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.EqualityComparer">
      <summary vsli:raw="Gets a comparer that can compare two nodes for value equality.">Ottiene un operatore di confronto che può confrontare due nodi per l'uguaglianza di valore.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XNodeEqualityComparer&quot; /&gt; that can compare two nodes for value equality.">
        <see cref="T:System.Xml.Linq.XNodeEqualityComparer" /> che può confrontare due nodi per l'uguaglianza di valore.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)">
      <summary vsli:raw="Determines if the current node appears after a specified node in terms of document order.">Determina se il nodo corrente viene visualizzato dopo un nodo specificato in termini di ordine dei documenti.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare for document order.">
        <see cref="T:System.Xml.Linq.XNode" /> da confrontare per l'ordine dei documenti.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this node appears after the specified node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il nodo viene visualizzato dopo il nodo specificato; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)">
      <summary vsli:raw="Determines if the current node appears before a specified node in terms of document order.">Determina se il nodo corrente viene visualizzato prima di un nodo specificato in termini di ordine dei documenti.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare for document order.">
        <see cref="T:System.Xml.Linq.XNode" /> da confrontare per l'ordine dei documenti.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this node appears before the specified node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il nodo viene visualizzato prima del nodo specificato; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.NextNode">
      <summary vsli:raw="Gets the next sibling node of this node.">Ottiene il nodo di pari livello successivo di questo nodo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the next sibling node.">Oggetto <see cref="T:System.Xml.Linq.XNode" /> che contiene il nodo di pari livello successivo.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesAfterSelf">
      <summary vsli:raw="Returns a collection of the sibling nodes after this node, in document order.">Restituisce una raccolta di nodi di pari livello dopo questo nodo nell'ordine in cui sono riportati nei documenti.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the sibling nodes after this node, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> di nodi di pari livello dopo questo nodo nell'ordine in cui sono riportati nei documenti.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesBeforeSelf">
      <summary vsli:raw="Returns a collection of the sibling nodes before this node, in document order.">Restituisce una raccolta di nodi di pari livello prima di questo nodo nell'ordine in cui sono riportati nei documenti.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the sibling nodes before this node, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Xml.Linq.XNode" /> di nodi di pari livello prima di questo nodo nell'ordine in cui sono riportati nei documenti.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.PreviousNode">
      <summary vsli:raw="Gets the previous sibling node of this node.">Ottiene il nodo di pari livello precedente di questo nodo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the previous sibling node.">Oggetto <see cref="T:System.Xml.Linq.XNode" /> che contiene il nodo di pari livello precedente.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Crea un oggetto <see cref="T:System.Xml.Linq.XNode" /> da un oggetto <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; positioned at the node to read into this &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Un <see cref="T:System.Xml.XmlReader" /> posizionato al livello del nodo per leggere nel <see cref="T:System.Xml.Linq.XNode" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the node and its descendant nodes that were read from the reader. The runtime type of the node is determined by the node type (&lt;see cref=&quot;P:System.Xml.Linq.XObject.NodeType&quot; /&gt;) of the first node encountered in the reader.">
        <see cref="T:System.Xml.Linq.XNode" /> che contiene il nodo e i nodi discendenti relativi letti dal lettore. Il tipo di runtime del nodo è determinato dal tipo di nodo (<see cref="P:System.Xml.Linq.XObject.NodeType" />) del primo nodo incontrato nel lettore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on a recognized node type.">
        <see cref="T:System.Xml.XmlReader" /> non è posizionato su un tipo di nodo riconosciuto.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; throws an exception.">Il <see cref="T:System.Xml.XmlReader" /> sottostante genera un'eccezione.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFromAsync(System.Xml.XmlReader,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. The runtime type of the node is determined by the &lt;see cref=&quot;P:System.Xml.Linq.XObject.NodeType&quot; /&gt; of the first node encountered in the reader.">Crea un oggetto <see cref="T:System.Xml.Linq.XNode" /> da un oggetto <see cref="T:System.Xml.XmlReader" />. Il tipo di runtime del nodo è determinato dal <see cref="P:System.Xml.Linq.XObject.NodeType" /> del primo nodo incontrato nel lettore.</summary>
      <param name="reader" vsli:raw="A reader positioned at the node to read into this &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Un lettore posizionato al livello del nodo per leggere in questo <see cref="T:System.Xml.Linq.XNode" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="An XNode that contains the nodes read from the reader.">XNode che contiene i nodi letti dal lettore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on a recognized node type.">
        <see cref="T:System.Xml.XmlReader" /> non è posizionato su un tipo di nodo riconosciuto.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Remove">
      <summary vsli:raw="Removes this node from its parent.">Rimuove questo nodo dal padre.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">L'oggetto padre è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)">
      <summary vsli:raw="Replaces this node with the specified content.">Sostituisce questo nodo con il contenuto specificato.</summary>
      <param name="content" vsli:raw="Content that replaces this node.">Contenuto che sostituisce questo nodo.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])">
      <summary vsli:raw="Replaces this node with the specified content.">Sostituisce questo nodo con il contenuto specificato.</summary>
      <param name="content" vsli:raw="A parameter list of the new content.">Un elenco di parametri del contenuto nuovo.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString">
      <summary vsli:raw="Returns the indented XML for this node.">Restituisce il codice XML con rientro per questo nodo.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the indented XML.">
        <see cref="T:System.String" /> contenente il codice XML con rientro.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Returns the XML for this node, optionally disabling formatting.">Restituisce il codice XML per questo nodo, disabilitando facoltativamente la formattazione.</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">Oggetto <see cref="T:System.Xml.Linq.SaveOptions" /> che specifica il comportamento di formattazione.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML.">
        <see cref="T:System.String" /> contenente il codice XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive questo nodo in un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui scriverà questo metodo.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes the current node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive il nodo corrente in un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The writer to write the current node into.">Writer in cui scrivere il nodo corrente.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="T:System.Xml.Linq.XNodeDocumentOrderComparer">
      <summary vsli:raw="Contains functionality to compare nodes for their document order. This class cannot be inherited.">Contiene la funzionalità per confrontare nodi per l'ordine dei documenti. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XNodeDocumentOrderComparer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares two nodes to determine their relative document order.">Confronta due nodi per determinare l'ordine del documento relativo.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Primo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Secondo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains 0 if the nodes are equal; -1 if &lt;paramref name=&quot;x&quot; /&gt; is before &lt;paramref name=&quot;y&quot; /&gt;; 1 if &lt;paramref name=&quot;x&quot; /&gt; is after &lt;paramref name=&quot;y&quot; /&gt;.">Un <see cref="T:System.Int32" /> che contiene 0 se i nodi sono uguali; -1 se <paramref name="x" /> viene prima di <paramref name="y" />; 1 se <paramref name="x" /> viene dopo <paramref name="y" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">I due nodi non condividono un predecessore comune.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary vsli:raw="Compares two nodes to determine their relative document order.">Confronta due nodi per determinare l'ordine del documento relativo.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Primo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Secondo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains 0 if the nodes are equal; -1 if &lt;paramref name=&quot;x&quot; /&gt; is before &lt;paramref name=&quot;y&quot; /&gt;; 1 if &lt;paramref name=&quot;x&quot; /&gt; is after &lt;paramref name=&quot;y&quot; /&gt;.">Un <see cref="T:System.Int32" /> che contiene 0 se i nodi sono uguali; -1 se <paramref name="x" /> viene prima di <paramref name="y" />; 1 se <paramref name="x" /> viene dopo <paramref name="y" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">I due nodi non condividono un predecessore comune.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The two nodes are not derived from &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">I due nodi non sono derivati da <see cref="T:System.Xml.Linq.XNode" />.</exception>
    </member>
    <member name="T:System.Xml.Linq.XNodeEqualityComparer">
      <summary vsli:raw="Compares nodes to determine whether they are equal. This class cannot be inherited.">Confronta due nodi per determinarne l'uguaglianza. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XNodeEqualityComparer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XNodeEqualityComparer" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares the values of two nodes.">Consente di confrontare i valori di due nodi.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Primo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Secondo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating if the nodes are equal.">
        <see cref="T:System.Boolean" /> che indica se i nodi sono uguali.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)">
      <summary vsli:raw="Returns a hash code based on an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Restituisce un codice hash basato su un <see cref="T:System.Xml.Linq.XNode" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to hash.">Classe <see cref="T:System.Xml.Linq.XNode" /> per la codifica hash.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains a value-based hash code for the node.">
        <see cref="T:System.Int32" /> che contiene un codice hash basato sul valore per il nodo.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
      <summary vsli:raw="Compares the values of two nodes.">Consente di confrontare i valori di due nodi.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Primo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Secondo oggetto <see cref="T:System.Xml.Linq.XNode" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the nodes are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i nodi sono uguali; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
      <summary vsli:raw="Returns a hash code based on the value of a node.">Restituisce un codice hash basato sul valore di un nodo.</summary>
      <param name="obj" vsli:raw="The node to hash.">Nodo per la codifica hash.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains a value-based hash code for the node.">
        <see cref="T:System.Int32" /> che contiene un codice hash basato sul valore per il nodo.</returns>
    </member>
    <member name="T:System.Xml.Linq.XObject">
      <summary vsli:raw="Represents a node or an attribute in an XML tree.">Rappresenta un nodo o un attributo in un albero XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
      <summary vsli:raw="Adds an object to the annotation list of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Aggiunge un oggetto all'elenco di annotazioni di <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="annotation" vsli:raw="An object that contains the annotation to add.">Oggetto contenente l'annotazione da aggiungere.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation(System.Type)">
      <summary vsli:raw="Gets the first annotation object of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Ottiene il primo oggetto annotazione del tipo specificato da <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type" vsli:raw="The type of the annotation to retrieve.">Tipo dell'annotazione da recuperare.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the first annotation object that matches the specified type, or &lt;see langword=&quot;null&quot; /&gt; if no annotation is of the specified type.">
        <see cref="T:System.Object" /> che contiene il primo oggetto annotazione che corrisponde al tipo specificato o <see langword="null" /> se nessuna annotazione è del tipo specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation``1">
      <summary vsli:raw="Gets the first annotation object of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Ottiene il primo oggetto annotazione del tipo specificato da <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T" vsli:raw="The type of the annotation to retrieve.">Tipo dell'annotazione da recuperare.</typeparam>
      <returns vsli:raw="The first annotation object that matches the specified type, or &lt;see langword=&quot;null&quot; /&gt; if no annotation is of the specified type.">Primo oggetto annotazione che corrisponde al tipo specificato o <see langword="null" /> se nessuna annotazione è del tipo specificato.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations(System.Type)">
      <summary vsli:raw="Gets a collection of annotations of the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Ottiene una raccolta di annotazioni del tipo specificato per <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type" vsli:raw="The type of the annotations to retrieve.">Tipo di annotazioni da recuperare.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the annotations that match the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Object" /> che contiene le annotazioni che corrispondono al tipo specificato per <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations``1">
      <summary vsli:raw="Gets a collection of annotations of the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Ottiene una raccolta di annotazioni del tipo specificato per <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T" vsli:raw="The type of the annotations to retrieve.">Tipo di annotazioni da recuperare.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the annotations for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> che contiene le annotazioni per <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.BaseUri">
      <summary vsli:raw="Gets the base URI for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Ottiene l'URI di base per <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the base URI for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.String" /> che contiene l'URI di base per <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changed">
      <summary vsli:raw="Raised when this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; or any of its descendants have changed.">Viene generato quando <see cref="T:System.Xml.Linq.XObject" /> o uno dei discendenti viene modificato.</summary>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changing">
      <summary vsli:raw="Raised when this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; or any of its descendants are about to change.">Viene generato quando <see cref="T:System.Xml.Linq.XObject" /> o uno dei discendenti sta per essere modificato.</summary>
    </member>
    <member name="P:System.Xml.Linq.XObject.Document">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Xml.Linq.XDocument" /> per l'oggetto <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Linq.XDocument" /> per <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.NodeType">
      <summary vsli:raw="Gets the node type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Ottiene il tipo di nodo per <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="The node type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Tipo di nodo per <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.Parent">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Ottiene l'elemento padre <see cref="T:System.Xml.Linq.XElement" /> di <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Elemento padre <see cref="T:System.Xml.Linq.XElement" /> di <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
      <summary vsli:raw="Removes the annotations of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Rimuove le annotazioni del tipo specificato da <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type" vsli:raw="The type of annotations to remove.">Tipo di annotazioni da rimuovere.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
      <summary vsli:raw="Removes the annotations of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Rimuove le annotazioni del tipo specificato da <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T" vsli:raw="The type of annotations to remove.">Tipo di annotazioni da rimuovere.</typeparam>
    </member>
    <member name="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether or not this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has line information.">Ottiene un valore che indica se <see cref="T:System.Xml.Linq.XObject" /> contiene o meno informazioni sulla riga.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has line information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Xml.Linq.XObject" /> contiene informazioni sulla riga. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
      <summary vsli:raw="Gets the line number that the underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; reported for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Ottiene il numero di riga che il <see cref="T:System.Xml.XmlReader" /> sottostante ha riportato per <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the line number reported by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Int32" /> che contiene il numero di riga riportato dal <see cref="T:System.Xml.XmlReader" /> per <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
      <summary vsli:raw="Gets the line position that the underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; reported for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Ottiene il numero di posizione che il <see cref="T:System.Xml.XmlReader" /> sottostante ha riportato per <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the line position reported by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Int32" /> che contiene il numero di posizione riportato dal <see cref="T:System.Xml.XmlReader" /> per <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="T:System.Xml.Linq.XObjectChange">
      <summary vsli:raw="Specifies the event type when an event is raised for an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Specifica il tipo di evento quando viene generato un evento per un oggetto <see cref="T:System.Xml.Linq.XObject" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Add">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be added to an &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Un <see cref="T:System.Xml.Linq.XObject" /> è stato o verrà aggiunto a un <see cref="T:System.Xml.Linq.XContainer" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Name">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be renamed.">Un <see cref="T:System.Xml.Linq.XObject" /> è stato o verrà rinominato.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Remove">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be removed from an &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Un <see cref="T:System.Xml.Linq.XObject" /> è stato o verrà rimosso da un <see cref="T:System.Xml.Linq.XContainer" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Value">
      <summary vsli:raw="The value of an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be changed. In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.">Il valore di un <see cref="T:System.Xml.Linq.XObject" /> è stato o verrà modificato. Inoltre, una modifica nella serializzazione di un elemento vuoto (da un tag vuoto in una coppia di tag inizio/chiusura di fine o viceversa) genera questo evento.</summary>
    </member>
    <member name="T:System.Xml.Linq.XObjectChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Linq.XObject.Changing&quot; /&gt; and &lt;see cref=&quot;E:System.Xml.Linq.XObject.Changed&quot; /&gt; events.">Fornisce i dati per gli eventi <see cref="E:System.Xml.Linq.XObject.Changing" /> e <see cref="E:System.Xml.Linq.XObject.Changed" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XObjectChangeEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XObjectChangeEventArgs" />.</summary>
      <param name="objectChange" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObjectChange&quot; /&gt; that contains the event arguments for LINQ to XML events.">Oggetto <see cref="T:System.Xml.Linq.XObjectChange" /> che contiene gli argomenti dell'evento per gli eventi LINQ to XML.</param>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Add">
      <summary vsli:raw="Event argument for an &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Add&quot; /&gt; change event.">Argomento di evento per un evento di modifica <see cref="F:System.Xml.Linq.XObjectChange.Add" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Name">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Name&quot; /&gt; change event.">Argomento di evento per un evento di modifica <see cref="F:System.Xml.Linq.XObjectChange.Name" />.</summary>
    </member>
    <member name="P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange">
      <summary vsli:raw="Gets the type of change.">Ottiene il tipo di modifica.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObjectChange&quot; /&gt; that contains the type of change.">Oggetto <see cref="T:System.Xml.Linq.XObjectChange" /> che contiene il tipo di modifica.</returns>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Remove">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Remove&quot; /&gt; change event.">Argomento di evento per un evento di modifica <see cref="F:System.Xml.Linq.XObjectChange.Remove" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Value">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Value&quot; /&gt; change event.">Argomento di evento per un evento di modifica <see cref="F:System.Xml.Linq.XObjectChange.Value" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.XProcessingInstruction">
      <summary vsli:raw="Represents an XML processing instruction.">Rappresenta un'istruzione di elaborazione XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</summary>
      <param name="target" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the target application for this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt;.">Oggetto <see cref="T:System.String" /> contenente l'applicazione di destinazione per <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <param name="data" vsli:raw="The string data for this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt;.">Dati stringa per <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; or &lt;paramref name=&quot;data&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il parametro <paramref name="target" /> o il parametro <paramref name="data" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; does not follow the constraints of an XML name.">
        <paramref name="target" /> non segue i vincoli di un nome XML.</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; node to copy from.">Nodo <see cref="T:System.Xml.Linq.XProcessingInstruction" /> dal quale copiare.</param>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Data">
      <summary vsli:raw="Gets or sets the string value of this processing instruction.">Ottiene o imposta il valore stringa per l'istruzione di elaborazione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string value of this processing instruction.">Oggetto <see cref="T:System.String" /> che contiene il valore stringa dell'istruzione di elaborazione.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La stringa <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Ottiene il tipo di nodo per questo nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.ProcessingInstruction&quot; /&gt;.">Tipo di nodo. Per gli oggetti <see cref="T:System.Xml.Linq.XProcessingInstruction" />, questo valore è <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Target">
      <summary vsli:raw="Gets or sets a string containing the target application for this processing instruction.">Ottiene o imposta una stringa che contiene l'applicazione di destinazione per l'istruzione di elaborazione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the target application for this processing instruction.">Oggetto <see cref="T:System.String" /> che contiene l'applicazione di destinazione per l'istruzione di elaborazione.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La stringa <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; does not follow the constraints of an XML name.">
        <paramref name="target" /> non segue i vincoli di un nome XML.</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this processing instruction to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive l'istruzione di elaborazione in un oggetto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write this processing instruction to.">Oggetto <see cref="T:System.Xml.XmlWriter" /> in cui scrivere l'istruzione di elaborazione.</param>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive questo <see cref="T:System.Xml.Linq.XProcessingInstruction" /> nel <see cref="T:System.Xml.XmlWriter" /> specificato.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; to.">Writer in cui scrivere questo <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="T:System.Xml.Linq.XStreamingElement">
      <summary vsli:raw="Represents elements in an XML tree that supports deferred streaming output.">Rappresenta elementi in una struttura ad albero XML che supporta l'output del flusso differito.</summary>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XElement" /> dall'oggetto <see cref="T:System.Xml.Linq.XName" /> specificato.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the element.">Oggetto <see cref="T:System.Xml.Linq.XName" /> contenente il nome dell'elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; class with the specified name and content.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XStreamingElement" /> con un nome e un contenuto specificato.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">Oggetto <see cref="T:System.Xml.Linq.XName" /> contenente il nome dell'elemento.</param>
      <param name="content" vsli:raw="The contents of the element.">Contenuto dell'elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; class with the specified name and content.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XStreamingElement" /> con un nome e un contenuto specificato.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">Oggetto <see cref="T:System.Xml.Linq.XName" /> contenente il nome dell'elemento.</param>
      <param name="content" vsli:raw="The contents of the element.">Contenuto dell'elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object)">
      <summary vsli:raw="Adds the specified content as children to this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt;.">Aggiunge il contenuto specificato come figlio a <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="content" vsli:raw="Content to be added to the streaming element.">Contenuto da aggiungere all'elemento di flusso.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object[])">
      <summary vsli:raw="Adds the specified content as children to this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt;.">Aggiunge il contenuto specificato come figlio a <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="content" vsli:raw="Content to be added to the streaming element.">Contenuto da aggiungere all'elemento di flusso.</param>
    </member>
    <member name="P:System.Xml.Linq.XStreamingElement.Name">
      <summary vsli:raw="Gets or sets the name of this streaming element.">Ottiene o imposta il nome dell'elemento di flusso.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of this streaming element.">Oggetto <see cref="T:System.Xml.Linq.XName" /> contenente il nome di questo elemento di flusso.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Genera questo oggetto <see cref="T:System.Xml.Linq.XStreamingElement" /> nell'oggetto <see cref="T:System.IO.Stream" /> specificato.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">Flusso in cui generare l'oggetto <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">Restituisce questo oggetto <see cref="T:System.Xml.Linq.XStreamingElement" /> all'oggetto <see cref="T:System.IO.Stream" /> specificato, indicando facoltativamente il comportamento della formattazione.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">Flusso in cui generare l'oggetto <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">Oggetto <see cref="T:System.Xml.Linq.SaveOptions" /> che specifica il comportamento di formattazione.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this streaming element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Serializzare questo elemento di flusso in un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; will be written to.">
        <see cref="T:System.IO.TextWriter" /> in cui verrà scritto l'oggetto <see cref="T:System.Xml.Linq.XStreamingElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this streaming element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">Serializzare questo elemento di flusso in un <see cref="T:System.IO.TextWriter" />, disabilitando facoltativamente la formattazione.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">Oggetto <see cref="T:System.IO.TextWriter" /> nel quale deve essere restituito il codice XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">Oggetto <see cref="T:System.Xml.Linq.SaveOptions" /> che specifica il comportamento di formattazione.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String)">
      <summary vsli:raw="Serialize this streaming element to a file.">Serializzare questo elemento di flusso in un file.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">
        <see cref="T:System.String" /> che contiene il nome del file.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this streaming element to a file, optionally disabling formatting.">Serializzare questo elemento di flusso in un file, disabilitando facoltativamente la formattazione.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">
        <see cref="T:System.String" /> che contiene il nome del file.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">Oggetto <see cref="T:System.Xml.Linq.SaveOptions" /> che specifica il comportamento di formattazione.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this streaming element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serializzare questo elemento di flusso in un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.XmlWriter" /> in cui verrà scritto l'oggetto <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString">
      <summary vsli:raw="Returns the formatted (indented) XML for this streaming element.">Restituisce il codice XML formattato (con rientro) per questo elemento di flusso.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the indented XML.">
        <see cref="T:System.String" /> contenente il codice XML con rientro.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Returns the XML for this streaming element, optionally disabling formatting.">Restituisce il codice XML per questo elemento di flusso, disabilitando facoltativamente la formattazione.</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">Oggetto <see cref="T:System.Xml.Linq.SaveOptions" /> che specifica il comportamento di formattazione.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML.">
        <see cref="T:System.String" /> contenente il codice XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this streaming element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive questo elemento di flusso in un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">
        <see cref="T:System.Xml.XmlWriter" /> nel quale scriverà questo metodo.</param>
    </member>
    <member name="T:System.Xml.Linq.XText">
      <summary vsli:raw="Represents a text node.">Rappresenta un nodo testo.</summary>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XText" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; node.">
        <see cref="T:System.String" /> che contiene il valore del nodo <see cref="T:System.Xml.Linq.XText" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; object.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Linq.XText" /> da un altro oggetto <see cref="T:System.Xml.Linq.XText" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; node to copy from.">Nodo <see cref="T:System.Xml.Linq.XText" /> dal quale copiare.</param>
    </member>
    <member name="P:System.Xml.Linq.XText.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Ottiene il tipo di nodo per questo nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;.">Tipo di nodo. Per gli oggetti <see cref="T:System.Xml.Linq.XText" />, questo valore è <see cref="F:System.Xml.XmlNodeType.Text" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XText.Value">
      <summary vsli:raw="Gets or sets the value of this node.">Ottiene o imposta il valore di questo nodo.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of this node.">
        <see cref="T:System.String" /> che contiene il valore di questo nodo.</returns>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive questo nodo in un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">
        <see cref="T:System.Xml.XmlWriter" /> nel quale scriverà questo metodo.</param>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes this &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive questo <see cref="T:System.Xml.Linq.XText" /> nel <see cref="T:System.Xml.XmlWriter" /> specificato in modo asincrono.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; to.">Writer in cui scrivere questo <see cref="T:System.Xml.Linq.XText" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Token che può essere utilizzato per richiedere l'annullamento dell'operazione asincrona.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="T:System.Xml.Schema.Extensions">
      <summary vsli:raw="This class contains the LINQ to XML extension methods for XSD validation.">Questa classe contiene i metodi di estensione LINQ to XML per la convalida XSD.</summary>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
      <summary vsli:raw="Gets the post-schema-validation infoset (PSVI) of a validated attribute.">Ottiene l'infoset dopo la convalida dello schema (PSVI) di un attributo convalidato.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that has been previously validated.">
        <see cref="T:System.Xml.Linq.XAttribute" /> che è stato convalidato in precedenza.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; that contains the post-schema-validation infoset for an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> contenente l'infoset dopo la convalida dello schema per un <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
      <summary vsli:raw="Gets the post-schema-validation infoset (PSVI) of a validated element.">Ottiene l'infoset dopo la convalida dello schema (PSVI) di un elemento convalidato.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that has been previously validated.">
        <see cref="T:System.Xml.Linq.XElement" /> che è stato convalidato in precedenza.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; that contains the post-schema-validation infoset (PSVI) for an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> contenente l'infoset dopo la convalida dello schema (PSVI) per un <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Questo metodo convalida che un <see cref="T:System.Xml.Linq.XAttribute" /> è conforme a un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> e a un <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to validate.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> da convalidare.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> che specifica la sottostruttura da convalidare.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> rispetto al quale convalidare.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> per un evento che si verifica quando il visualizzatore incontra errori di convalida. Se <see langword="null" />, genera un'eccezione in base agli errori di convalida.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Eccezione generata per gli errori di convalida XSD (XML Schema Definition Language).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">Convalida che un <see cref="T:System.Xml.Linq.XAttribute" /> è conforme a un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> specificato e a un <see cref="T:System.Xml.Schema.XmlSchemaSet" /> popolando facoltativamente la struttura ad albero XML con l'infoset dopo la convalida dello schema (PSVI).</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to validate.">Oggetto <see cref="T:System.Xml.Linq.XAttribute" /> da convalidare.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> che specifica la sottostruttura da convalidare.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> rispetto al quale convalidare.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> per un evento che si verifica quando il visualizzatore incontra errori di convalida. Se <see langword="null" />, genera un'eccezione in base agli errori di convalida.</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Boolean" /> che indica se popolare l'infoset dopo la convalida dello schema (PSVI).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Eccezione generata per gli errori di convalida XSD (XML Schema Definition Language).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; conforms to an XSD in an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Questo metodo convalida che un <see cref="T:System.Xml.Linq.XDocument" /> è conforme a uno schema XSD in un <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to validate.">Oggetto <see cref="T:System.Xml.Linq.XDocument" /> da convalidare.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> rispetto al quale convalidare.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> per un evento che si verifica quando il visualizzatore incontra errori di convalida. Se <see langword="null" />, genera un'eccezione in base agli errori di convalida.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Eccezione generata per gli errori di convalida XSD (XML Schema Definition Language).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; conforms to an XSD in an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">Convalida che un <see cref="T:System.Xml.Linq.XDocument" /> è conforme a uno schema XSD in un <see cref="T:System.Xml.Schema.XmlSchemaSet" />, popolando facoltativamente la struttura ad albero XML con l'infoset dopo la convalida dello schema (PSVI).</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to validate.">Oggetto <see cref="T:System.Xml.Linq.XDocument" /> da convalidare.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> rispetto al quale convalidare.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> per un evento che si verifica quando il visualizzatore incontra errori di convalida. Se <see langword="null" />, genera un'eccezione in base agli errori di convalida.</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Boolean" /> che indica se popolare l'infoset dopo la convalida dello schema (PSVI).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Eccezione generata per gli errori di convalida XSD (XML Schema Definition Language).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; sub-tree conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Questo metodo convalida che una sottostruttura <see cref="T:System.Xml.Linq.XElement" /> è conforme a un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> e a un <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to validate.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> da convalidare.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> che specifica la sottostruttura da convalidare.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> rispetto al quale convalidare.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> per un evento che si verifica quando il visualizzatore incontra errori di convalida. Se <see langword="null" />, genera un'eccezione in base agli errori di convalida.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Eccezione generata per gli errori di convalida XSD (XML Schema Definition Language).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; sub-tree conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">Convalida che una sottostruttura <see cref="T:System.Xml.Linq.XElement" /> è conforme a un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> specificato e a un <see cref="T:System.Xml.Schema.XmlSchemaSet" /> popolando facoltativamente la struttura ad albero XML con l'infoset dopo la convalida dello schema (PSVI).</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to validate.">Oggetto <see cref="T:System.Xml.Linq.XElement" /> da convalidare.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> che specifica la sottostruttura da convalidare.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> rispetto al quale convalidare.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> per un evento che si verifica quando il visualizzatore incontra errori di convalida. Se <see langword="null" />, genera un'eccezione in base agli errori di convalida.</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Boolean" /> che indica se popolare l'infoset dopo la convalida dello schema (PSVI).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Eccezione generata per gli errori di convalida XSD (XML Schema Definition Language).</exception>
    </member>
  </members>
</doc>