<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary>指定在產生 .NET 類型以便搭配 XML Web Service 使用時要使用的各種選項。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary>啟用資料繫結。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary>為 Web 方法的非同步引動過程建立事件。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary>為 Web 方法的非同步引動過程建立 Begin 和 End 方法。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary>產生明確排序的序列化程式碼，如同透過 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />、<see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 和 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 屬性 (Attribute) 的 <see langword="Order" /> 屬性 (Property) 所指定。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary>按照屬性表示基本類型。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary>以欄位和 <see cref="N:System" /> 命名空間類型來表示基本類型。</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary>提供可將輸入文字轉換成程式碼實體 (Entity) 之名稱的靜態方法。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.CodeIdentifier" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary>從輸入字串產生 Camel 命名法之大小寫慣例的字串。</summary>
      <param name="identifier">程式碼實體 (例如方法參數) 的名稱，通常是從 XML 項目或屬性名稱取得。</param>
      <returns>Camel 命名法之大小寫慣例版本的參數字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary>從輸入字串產生 Pascal 命名法之大小寫慣例的字串。</summary>
      <param name="identifier">程式碼實體 (例如方法參數) 的名稱，通常是從 XML 項目或屬性名稱取得。</param>
      <returns>Pascal 命名法之大小寫慣例版本的參數字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary>從輸入字串產生有效的程式碼實體名稱。</summary>
      <param name="identifier">程式碼實體 (例如方法參數) 的名稱，通常是從 XML 項目或屬性名稱取得。</param>
      <returns>可當做程式碼識別項使用的字串，例如方法參數的名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary>針對由 .NET Framework 之 XML 序列化 (Serialization) 基礎結構所產生的相關程式碼實體 (Entity) 或型別對應，維護名稱群組。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 類別的新執行個體，並判斷程式碼識別項是否要區分大小寫。</summary>
      <param name="caseSensitive">如果識別項要區分大小寫，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary>將具名的程式碼實體或型別對應加入至 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍中。</summary>
      <param name="identifier">用於索引程式碼實體的名稱。</param>
      <param name="value">程式碼實體或型別對應資訊。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary>防止在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍內使用指定的名稱。</summary>
      <param name="identifier">無法用於 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內的名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary>將具名的程式碼實體或型別對應加入至 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍內，並確保該名稱在範圍內是唯一的。</summary>
      <param name="identifier">用於索引程式碼實體的候選名稱。</param>
      <param name="value">程式碼實體或型別對應資訊。</param>
      <returns>識別項參數值，但如果發生名稱衝突，則為修改的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary>從 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍中移除所有程式碼實體或型別對應，包括其名稱。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary>判斷指定的名稱是否已經在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍內使用。</summary>
      <param name="identifier">要檢查是否在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內使用的名稱。</param>
      <returns>如果名稱已經在使用中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary>根據 <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" /> 屬性的值來修改名稱，藉以確保輸入的大小寫是正確的。</summary>
      <param name="identifier">可能要修改的名稱。</param>
      <returns>與輸入識別項相同的字串，或已修改第一個字母大小寫的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary>判斷輸入名稱是否與 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內的其他名稱發生衝突，如果有的話，則產生修改的字串。</summary>
      <param name="identifier">要修改的名稱 (如果原本不是唯一的話)。</param>
      <returns>識別項參數值，但如果發生名稱衝突，則為修改的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary>從 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍中移除由輸入名稱所識別的程式碼實體或型別對應。</summary>
      <param name="identifier">要移除之程式碼實體或型別對應資訊的名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary>從 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的保留名稱中移除輸入名稱。</summary>
      <param name="identifier">將在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內成為可用的名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary>傳回 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內的程式碼實體或型別對應陣列。</summary>
      <param name="type">執行個體之所有程式碼實體或型別對應的型別。</param>
      <returns>由 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 物件所儲存之程式碼實體或型別對應的陣列。</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary>取得或設定值，指出執行個體是否會使用 Camel 命名法的大小寫慣例。</summary>
      <returns>
        <see langword="true" /> 表示執行個體會使用 Camel 命名法的大小寫慣例，而 <see langword="false" /> 則表示執行個體會使用 Pascal 命名法的大小寫慣例。</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary>描述結構描述集合要繫結至 .NET Framework 程式碼實體 (Entity) 的內容。</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary>使用指定的型別共用選項，針對指定的程式碼識別項初始化 <see cref="T:System.Xml.Serialization.ImportContext" /> 類別的新執行個體。</summary>
      <param name="identifiers">要套用內容的程式碼實體。</param>
      <param name="shareTypes">
        <see cref="T:System.Boolean" /> 值，可判斷是否會在結構描述之間共用自訂型別。</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary>取得值，可判斷是否會共用自訂型別。</summary>
      <returns>如果會在結構描述之間共用自訂型別，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary>取得套用內容之程式碼實體的集合。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" />，指定要套用內容的程式碼實體。</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary>取得匯入程式碼實體描述時產生之警告的集合。</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringCollection" />，其中含有匯入程式碼實體描述時產生的警告。</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary>建立要讓 .NET Framework 基礎結構使用的 <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> 屬性。</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary>取得或設定泛空白字元 (White Space) 和屬性 (Attribute) 值是否會正規化。</summary>
      <returns>如果泛空白字元屬性值會正規化，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary>取得或設定剖析 XML 時要如何處理泛空白字元。</summary>
      <returns>
        <see cref="T:System.Xml.WhitespaceHandling" /> 列舉型別的成員，其中描述剖析 XML 時要如何處理泛空白字元。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary>描述結構描述匯入工具。</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary>指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必須將類別成員序列化為編碼的 SOAP 屬性。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary>使用指定的值做為 XML 屬性的名稱，初始化 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 類別的新執行個體。</summary>
      <param name="attributeName">XML 屬性的名稱。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary>取得或設定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生之 XML 屬性的名稱。</summary>
      <returns>XML 屬性的名稱。 預設值為成員識別項。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary>取得或設定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 所產生之 SOAP 屬性的 XML 結構描述定義語言 (XSD) 資料型別。</summary>
      <returns>XML 架構資料類型。</returns>
      <exception cref="T:System.Exception">您指定的 XML 結構描述資料型別無法對應至 .NET 資料型別。</exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary>取得或設定 XML 屬性的 XML 命名空間。</summary>
      <returns>XML 屬性的 XML 命名空間。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary>使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 將物件序列化或還原序列化為編碼的 SOAP 時，可讓您覆寫套用至屬性 (Property)、欄位和類別的屬性 (Attribute)。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary>將 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 加入 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 包含的 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 物件之集合。 <paramref name="type" /> 參數會指定要由 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 覆寫的物件。 <paramref name="member" /> 參數指定覆寫的成員名稱。</summary>
      <param name="type">要覆寫之物件的 <see cref="T:System.Type" />。</param>
      <param name="member">要覆寫的成員名稱。</param>
      <param name="attributes">
        <see cref="T:System.Xml.Serialization.SoapAttributes" />，表示覆寫屬性。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary>將 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 加入 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 物件的集合。 <paramref name="type" /> 參數會指定要由 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 覆寫的物件。</summary>
      <param name="type">覆寫之物件的 <see cref="T:System.Type" />。</param>
      <param name="attributes">
        <see cref="T:System.Xml.Serialization.SoapAttributes" />，表示覆寫屬性。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary>取得與指定的 (基底類別) 型別相關的物件。</summary>
      <param name="type">基底類別 <see cref="T:System.Type" />，與要擷取的屬性集合相關聯。</param>
      <returns>表示覆寫屬性集合的 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary>取得與指定的 (基底類別) 型別相關的物件。 <paramref name="member" /> 參數指定所覆寫的基底類別成員。</summary>
      <param name="type">基底類別 <see cref="T:System.Type" />，與要覆寫的屬性集合相關聯。</param>
      <param name="member">指定傳回 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 的覆寫成員名稱。</param>
      <returns>表示覆寫屬性集合的 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary>表示用來控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化與還原序列化 SOAP 方法的屬性 (Attribute) 物件集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>使用指定的自訂型別，初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 類別的新執行個體。</summary>
      <param name="provider">實作 <see cref="T:System.Reflection.ICustomAttributeProvider" /> 介面的物件，例如 <see cref="T:System.Type" /> 類別。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary>取得或設定要覆寫的 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />，會在成員序列化時覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的行為。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary>取得或設定 XML 項目或屬性的預設值。</summary>
      <returns>表示 XML 項目或屬性之預設值的物件。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary>取得或設定要覆寫的 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />。</summary>
      <returns>要覆寫的 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary>取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化 SOAP 列舉型別的方式。</summary>
      <returns>物件，這個物件會指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化列舉成員。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary>取得或設定數值，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否會將公用欄位或屬性序列化為編碼 SOAP XML。</summary>
      <returns>如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必須不序列化欄位或屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary>取得或設定物件，表示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將物件型別序列化為 SOAP XML。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />，覆寫套用至類別宣告的 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />，或者套用至類別宣告。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary>指定公用成員值由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化為編碼 SOAP XML 項目。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 類別的新執行個體，並且指定 XML 項目的名稱。</summary>
      <param name="elementName">序列成員的 XML 項目名稱。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary>取得或設定產生之 XML 項目的 XML 結構描述定義語言 (XSD) 資料型別。</summary>
      <returns>其中一個 XML 結構描述資料型別。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary>取得或設定產生的 XML 項目的名稱。</summary>
      <returns>產生的 XML 項目的名稱。 預設值為成員識別項。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary>取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必須要序列化 <see langword="xsi:null" /> 屬性設為 "1" 的成員。</summary>
      <returns>如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生 <see langword="true" /> 屬性，則為 <see langword="xsi:null" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary>控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化列舉型別 (Enumeration) 成員的方式。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary>使用指定的項目名稱，初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 類別的新執行個體。</summary>
      <param name="name">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生的 XML 項目名稱。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary>取得或設定當 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化列舉型別時，在 XML 文件中所產生的值，或是當它還原序列化列舉型別成員時所識別的值。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化列舉型別時，在 XML 文件中產生的值，或是它還原序列化列舉型別成員時識別的值。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary>表示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 不要將公用欄位或公用讀取/寫入屬性值序列化。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary>允許 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在將物件序列化或還原序列化為編碼 SOAP XML 時，辨認型別。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary>使用指定的型別，初始化 <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> 類別的新執行個體。</summary>
      <param name="type">要包含的物件之型別。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary>取得或設定物件的型別，用於序列化或還原序列化物件時。</summary>
      <returns>要包含的物件之型別。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary>從 .NET Framework 型別或 Web 服務方法資訊產生 SOAP 編碼訊息的對應。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 類別的新執行個體，並為匯入的型別對應指定預設 XML 命名空間。</summary>
      <param name="defaultNamespace">預設 XML 命名空間，用來對應匯入的類型。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 類別的新執行個體，並指定 XML 序列化的覆寫。</summary>
      <param name="attributeOverrides">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 物件，此物件會覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別使用 SOAP 編碼序列化對應之型別的方式。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 類別的新執行個體，並指定 XML 序列化覆寫和預設的 XML 命名空間。</summary>
      <param name="attributeOverrides">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 物件，此物件會覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別使用 SOAP 編碼序列化對應之型別的方式。</param>
      <param name="defaultNamespace">預設 XML 命名空間，用來對應匯入的類型。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary>針對從 Web 服務方法所收集的資訊，產生內部型別對應。</summary>
      <param name="elementName">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members">屬於 Web 服務方法之 .NET Framework 程式碼實體 (Entity) 的陣列。</param>
      <returns>WSDL 訊息定義之項目部分的內部 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>針對從 Web 服務方法所收集的資訊，產生內部型別對應。</summary>
      <param name="elementName">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members">屬於 Web 服務方法之 .NET Framework 程式碼實體 (Entity) 的陣列。</param>
      <param name="hasWrapperElement">
        <see langword="true" /> 表示對應於 WSDL 訊息部分的項目應該封入 SOAP 訊息的額外包裝函式項目中，否則為 <see langword="false" />。</param>
      <param name="writeAccessors">
        <see langword="true" /> 表示 RPC 樣式的 Web 服務繫結，而 <see langword="false" /> 則表示文件樣式的 Web 服務繫結或 SOAP 標頭。</param>
      <returns>WSDL 訊息定義之項目部分的內部 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>針對從 Web 服務方法所收集的資訊，產生內部型別對應。</summary>
      <param name="elementName">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members">屬於 Web 服務方法之 .NET Framework 程式碼實體 (Entity) 的陣列。</param>
      <param name="hasWrapperElement">
        <see langword="true" /> 表示對應於 WSDL 訊息部分的項目應該封入 SOAP 訊息的額外包裝函式項目中，否則為 <see langword="false" />。</param>
      <param name="writeAccessors">
        <see langword="true" /> 表示 RPC 樣式的 Web 服務繫結，而 <see langword="false" /> 則表示文件樣式的 Web 服務繫結或 SOAP 標頭。</param>
      <param name="validate">
        <see langword="true" /> 表示產生的還原序列化程式應該檢查包裝函式項目的預期限定名稱 (Qualified Name)，否則為 <see langword="false" />。 只有當 <paramref name="hasWrapperElement" /> 參數的值為 <see langword="true" /> 時，這項參數的值才相關。</param>
      <returns>WSDL 訊息定義之項目部分的內部 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>針對從 Web 服務方法所收集的資訊，產生內部型別對應。</summary>
      <param name="elementName">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members">屬於 Web 服務方法之 .NET Framework 程式碼實體 (Entity) 的陣列。</param>
      <param name="hasWrapperElement">
        <see langword="true" /> 表示對應於 WSDL 訊息部分的項目應該封入 SOAP 訊息的額外包裝函式項目中，否則為 <see langword="false" />。</param>
      <param name="writeAccessors">
        <see langword="true" /> 表示 RPC 樣式的 Web 服務繫結，而 <see langword="false" /> 則表示文件樣式的 Web 服務繫結或 SOAP 標頭。</param>
      <param name="validate">
        <see langword="true" /> 表示產生的還原序列化程式應該檢查包裝函式項目的預期限定名稱 (Qualified Name)，否則為 <see langword="false" />。 只有當 <paramref name="hasWrapperElement" /> 參數的值為 <see langword="true" /> 時，這項參數的值才相關。</param>
      <param name="access">其中一個 <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 值。</param>
      <returns>WSDL 訊息定義之項目部分的內部 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>產生 .NET Framework 型別之 XML 結構描述項目的對應。</summary>
      <param name="type">要為其產生類型對應的 .NET Framework 類型。</param>
      <returns>某個類型與 XML 結構描述項目的內部 .NET Framework 對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>產生 .NET Framework 型別之 XML 結構描述項目的對應。</summary>
      <param name="type">要為其產生類型對應的 .NET Framework 類型。</param>
      <param name="defaultNamespace">要使用的預設 XML 命名空間。</param>
      <returns>某個類型與 XML 結構描述項目的內部 .NET Framework 對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary>將型別的對應置於 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 執行個體的內容，以便稍後叫用匯入方法時使用。</summary>
      <param name="type">要為其儲存類型對應資訊的 .NET Framework 類型。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>將衍生型別 (Derived Type) 的對應置於 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 執行個體的內容，以便稍後叫用匯入方法時使用。</summary>
      <param name="provider">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 反映 (Reflection) 物件，其中含有衍生自 <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> 屬性 (Attribute) 的自訂屬性。</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary>在 WSDL 文件中代表 XSD &lt;<see langword="part" />&gt; 項目的特定屬性，可從文件產生類別。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary>取得或設定對應至 WSDL 部分項目之名稱屬性的值。</summary>
      <returns>項目名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary>取得或設定對應至 WSDL 部分項目之型別屬性的值。</summary>
      <returns>對應至 XML 型別的 <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary>控制類別執行個體被序列化為 SOAP 編碼 XML 時，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 所產生的結構描述。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 類別的新執行個體，並指定 XML 型別的名稱。</summary>
      <param name="typeName">XML 型別的名稱，是 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化類別執行個體時所產生的 (並且對類別執行個體進行還原序列化時所辨識的)。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 類別的新執行個體，並指定該型別的名稱和 XML 命名空間。</summary>
      <param name="typeName">XML 型別的名稱，是 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化類別執行個體時所產生的 (並且對類別執行個體進行還原序列化時所辨識的)。</param>
      <param name="ns">型別的 XML 命名空間。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary>取得或設定值，指出是否將型別包含在 SOAP 編碼的 XML 結構描述文件中。</summary>
      <returns>若要在 SOAP 編碼 XML 結構描述文件中包含型別，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary>取得或設定 XML 型別的命名空間。</summary>
      <returns>XML 型別的命名空間。 預設為空字串 ("")。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary>取得或設定 XML 型別的名稱。</summary>
      <returns>XML 型別的名稱。 預設為類別名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary>提供在還原序列化 (Deserialization) 時，於編碼 SOAP XML 資料流中發現之已知，但是未被參考到的物件。</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> 類別的新執行個體。</summary>
      <param name="o">未參考的物件。</param>
      <param name="id">唯一的字串，用來識別未參考的物件。</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary>取得物件的 ID。</summary>
      <returns>物件的 ID。</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary>取得已還原序列化，但是未參考的物件。</summary>
      <returns>已還原序列化，但是未參考的物件。</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary>表示處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 事件的方法。</summary>
      <param name="sender">事件的來源。</param>
      <param name="e">包含事件資料的 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 物件的集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 加入集合中。</summary>
      <param name="attribute">要加入的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns>新加入之 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>取得值，指出指定 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 是否存在於集合中。</summary>
      <param name="attribute">您所要的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns>如果集合中有 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary>從目標陣列的指定索引開始，複製整個集合至 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 物件的相容一維陣列。</summary>
      <param name="array">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 物件的一維陣列，從集合複製之項目的目的地。 陣列必須有以零為起始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>取得指定 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</summary>
      <param name="attribute">您想要其索引的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns>指定之 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 插入集合中指定之索引處。</summary>
      <param name="index">插入 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</param>
      <param name="attribute">要插入的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>取得或設定在指定索引處的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</summary>
      <param name="index">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</param>
      <returns>位於指定索引位置上的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>從集合移除指定的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</summary>
      <param name="attribute">要移除的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必須將特定類別成員序列化為 XML 項目的陣列。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 類別的新執行個體，指定 XML 文件執行個體中產生的 XML 項目名稱。</summary>
      <param name="elementName">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生的 XML 項目名稱。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>取得或設定指定給序列化陣列的 XML 項目名稱。</summary>
      <returns>序列化陣列的 XML 項目名稱。 預設值為被指派了 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 的成員名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生的 XML 項目名稱是限定的還是非限定的。</summary>
      <returns>其中一個 <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值。 預設為 <see langword="XmlSchemaForm.None" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必須將成員序列化為 <see langword="xsi:nil" /> 屬性設為 <see langword="true" /> 的空 XML 標記。</summary>
      <returns>如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生 <see langword="true" /> 屬性，則為 <see langword="xsi:nil" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>取得或設定 XML 項目的命名空間。</summary>
      <returns>XML 項目的命名空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary>取得或設定項目序列化或還原序列化的明確順序。</summary>
      <returns>程式碼產生的順序。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>表示屬性，這個屬性會指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可置於序列化陣列中的衍生型別。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 類別的新執行個體，指定 XML 文件中產生的 XML 項目名稱。</summary>
      <param name="elementName">XML 項目的名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 類別的新執行個體，指定 XML 文件中產生的 XML 項目名稱，以及可插入所產生之 XML 文件的 <see cref="T:System.Type" />。</summary>
      <param name="elementName">XML 項目的名稱。</param>
      <param name="type">要序列化的物件的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 類別的新執行個體，指定可插入序列化陣列的 <see cref="T:System.Type" />。</summary>
      <param name="type">要序列化的物件的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>取得或設定產生的 XML 項目的 XML 資料型別。</summary>
      <returns>XML 架構定義（XSD）資料類型。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>取得或設定產生的 XML 項目的名稱。</summary>
      <returns>產生的 XML 項目的名稱。 預設值為成員識別項。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>取得或設定值，指出產生的 XML 項目名稱是否為限定的。</summary>
      <returns>其中一個 <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值。 預設為 <see langword="XmlSchemaForm.None" />。</returns>
      <exception cref="T:System.Exception">
        <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> 屬性設定為 <see langword="XmlSchemaForm.Unqualified" />，並且指定 <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> 值。</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必須將成員序列化為 <see langword="xsi:nil" /> 屬性設為 <see langword="true" /> 的空 XML 標記。</summary>
      <returns>如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生 <see langword="true" /> 屬性，則為 <see langword="xsi:nil" />，否則為 <see langword="false" />，而且不會產生執行個體。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>取得或設定產生的 XML 項目之的命名空間。</summary>
      <returns>產生的 XML 項目的命名空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>取得或設定 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 影響的 XML 項目的階層架構中的層級。</summary>
      <returns>在陣列組成之陣列的一組索引中，以零起始的索引。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>取得或設定陣列中允許的型別。</summary>
      <returns>陣列中所允許的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>表示 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 物件的集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 加入集合中。</summary>
      <param name="attribute">要加入至集合的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns>加入項目的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>判斷集合是否包含指定的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</summary>
      <param name="attribute">要檢查的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns>如果集合包含指定的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary>從指定的目標索引，複製 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 陣列至集合。</summary>
      <param name="array">要複製至集合的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 物件陣列。</param>
      <param name="index">複製屬性開始處的索引。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>傳回集合中找到的第一個指定 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 之以零起始的索引，如果在集合中找不到屬性，則為 -1。</summary>
      <param name="attribute">要在集合中尋找的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns>集合中 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 的第一個索引，如果在集合中找不到屬性，則為 -1。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 插入集合中指定之索引處。</summary>
      <param name="index">插入屬性的索引。</param>
      <param name="attribute">要插入的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>取得或設定在指定索引位置的項目。</summary>
      <param name="index">要取得或設定以零起始的集合成員索引。</param>
      <returns>指定索引處的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>如果存在 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />，則從集合移除它。</summary>
      <param name="attribute">要移除的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary>提供 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 事件的資料。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary>取得表示未知 XML 屬性的物件。</summary>
      <returns>表示未知 XML 屬性的 <see cref="T:System.Xml.XmlAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary>取得應該在 XML 文件執行個體中之 XML 屬性名稱的逗號分隔清單。</summary>
      <returns>XML 屬性名稱的逗號分隔清單。 每個名稱都使用下列格式：<paramref name="namespace" />:<paramref name="name" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary>取得未知 XML 屬性的行號。</summary>
      <returns>未知 XML 屬性的行號。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary>取得未知 XML 屬性的行中的位置。</summary>
      <returns>未知 XML 屬性的位置編號。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary>取得要還原序列化的物件。</summary>
      <returns>正在還原序列化的物件。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary>表示處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 的方法。</summary>
      <param name="sender">事件的來源。</param>
      <param name="e">包含事件資料的 <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>當使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 來序列化或還原序列化物件時，允許您覆寫屬性 (Property)、欄位和類別屬性 (Attribute)。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件加入 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件的集合。 <paramref name="type" /> 參數會指定要被覆寫的物件。 <paramref name="member" /> 參數指定覆寫的成員名稱。</summary>
      <param name="type">要覆寫之物件的 <see cref="T:System.Type" />。</param>
      <param name="member">要覆寫的成員名稱。</param>
      <param name="attributes">表示覆寫屬性的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件加入 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件的集合。 <paramref name="type" /> 參數會指定要由 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件覆寫的物件。</summary>
      <param name="type">覆寫之物件的 <see cref="T:System.Type" />。</param>
      <param name="attributes">表示覆寫屬性的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>取得與指定的、基底類別、型別相關的物件</summary>
      <param name="type">基底類別 <see cref="T:System.Type" />，與要擷取的屬性集合相關聯。</param>
      <returns>表示覆寫屬性集合的 <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>取得與指定的 (基底類別) 型別相關的物件。 成員參數會指定已覆寫的基底類別成員。</summary>
      <param name="type">基底類別 <see cref="T:System.Type" />，與您想要的屬性集合相關聯。</param>
      <param name="member">指定傳回 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 的覆寫成員名稱。</param>
      <returns>表示覆寫屬性集合的 <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>表示用來控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化與還原序列化物件方式的屬性 (Attribute) 物件集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 類別的新執行個體，並自訂 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化和還原序列化物件。</summary>
      <param name="provider">類別，可為控制 XML 序列化的屬性提供替代實作。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary>取得或設定要覆寫的 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</summary>
      <returns>要覆寫的 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>取得要覆寫的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 物件的集合。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 物件，表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 物件的集合。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化公用欄位或會傳回陣列的讀取/寫入屬性。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化公用欄位或會傳回陣列的讀取/寫入屬性。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>取得或設定物件集合，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化項目 (用來插入至公用欄位或讀取/寫入屬性所傳回的陣列)。</summary>
      <returns>包含 <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 物件集合的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 物件。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將公用欄位或公用讀取/寫入屬性序列化為 XML 屬性。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />，控制將公用欄位或讀取/寫入屬性 (Property) 序列化為 XML 屬性 (Attribute)。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>取得或設定物件，讓您在一組選項間進行區別。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />，可以套用至序列化為 <see langword="xsi:choice" /> 項目的類別成員。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>取得或設定 XML 項目或屬性的預設值。</summary>
      <returns>
        <see cref="T:System.Object" />，表示 XML 項目或屬性的預設值。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>取得物件的集合，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將公用欄位或讀取/寫入屬性序列化為 XML 項目。</summary>
      <returns>包含 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 物件集合的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化列舉型別 (Enumeration) 成員。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化列舉型別成員。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>取得或設定數值，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否要序列化公用欄位或公用讀取/寫入屬性。</summary>
      <returns>如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必須不序列化欄位或屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary>取得或設定數值，指定當物件包含傳回已覆寫 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 物件的成員時，是否要保留所有的命名空間宣告。</summary>
      <returns>如果應該保留命名空間宣告，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將類別序列化為 XML (Root Element)。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />，覆寫類別屬性為 XML 根項目。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 將公用欄位或公用讀取/寫入屬性序列化為 XML 文字。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTextAttribute" />，覆寫公用屬性或欄位的預設序列化。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化套用 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 的類別。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />，會覆寫套用 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 至類別宣告 (Class Declaration)。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>指定可以使用列舉進一步偵測成員。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> 類別的新執行個體。</summary>
      <param name="name">成員名稱，傳回用於偵測選擇的列舉型別。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>取得或設定欄位的名稱，該欄位傳回偵測型別時使用的列舉型別。</summary>
      <returns>傳回列舉型別之欄位的名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary>此類別所含欄位可將事件委派傳遞給 <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> 的安全執行緒 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 方法。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>取得或設定物件，代表處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 事件的方法。</summary>
      <returns>指向該事件處理常式的 <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>取得或設定物件，代表處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件的方法。</summary>
      <returns>指向該事件處理常式的 <see cref="T:System.Xml.Serialization.XmlElementEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>取得或設定物件，代表處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件的方法。</summary>
      <returns>指向該事件處理常式的 <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>取得或設定物件，代表處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 事件的方法。</summary>
      <returns>指向該事件處理常式的 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>代表 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 物件的集合，由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 用於覆寫其序列化類別的預設方式。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 加入集合中。</summary>
      <param name="attribute">要加入的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns>新加入項目之以零起始的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary>判斷集合是否包含指定的物件。</summary>
      <param name="attribute">要尋找的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns>如果集合中有該物件則為<see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary>複製 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 或其中一部分至一維陣列。</summary>
      <param name="array">要儲存所複製項目的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 陣列。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary>取得指定 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 的索引。</summary>
      <param name="attribute">正在擷取其索引的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 的以零起始的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 插入集合。</summary>
      <param name="index">插入成員所在位置之以零起始的索引。</param>
      <param name="attribute">要插入的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>在指定的索引位置上取得或設定項目。</summary>
      <param name="index">要取得或設定之以零為起始的項目索引。</param>
      <returns>在指定索引上的項目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 中的有效索引。</exception>
      <exception cref="T:System.NotSupportedException">屬性已設定，而且 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 是唯讀的。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary>從集合中移除指定的物件。</summary>
      <param name="attribute">要從集合中移除的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary>提供 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件的資料。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary>取得表示未知 XML 項目的物件。</summary>
      <returns>表示未知 XML 項目的物件。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary>取得應該在 XML 文件執行個體中之 XML 項目名稱的逗號分隔清單。</summary>
      <returns>XML 項目名稱的逗號分隔清單。 每個名稱都使用下列格式：<paramref name="namespace" />:<paramref name="name" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary>如果 XML 讀取器 (Reader) 是 <see cref="T:System.Xml.XmlTextReader" />，取得遇到未知項目的行號。</summary>
      <returns>如果 XML 讀取器是 <see cref="T:System.Xml.XmlTextReader" />，則為遇到未知項目的行號，否則為 -1。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary>如果 XML 讀取器是 <see cref="T:System.Xml.XmlTextReader" />，取得未知項目在行中發生的位置。</summary>
      <returns>如果 XML 讀取器是 <see cref="T:System.Xml.XmlTextReader" />，則為未知項目在行中發生的數目，否則為 -1。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary>取得 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 所還原序列化的物件。</summary>
      <returns>由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 還原序列化的物件。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary>表示處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 事件的方法。</summary>
      <param name="sender">事件的來源。</param>
      <param name="e">
        <see cref="T:System.Xml.Serialization.XmlElementEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>讓 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在對物件進行序列化或還原序列化時，能夠辨識型別。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 類別的新執行個體。</summary>
      <param name="type">要包含的物件的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>取得或設定要包含的物件的型別。</summary>
      <returns>要包含的物件的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary>支援 .NET Framework 型別與 XML 結構描述資料型別之間的對應。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary>取得對應之元素的名稱。</summary>
      <returns>對應之項目的名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary>取得對應之項目的命名空間。</summary>
      <returns>對應之項目的命名空間。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary>設定用來查閱對應的索引鍵。</summary>
      <param name="key">查閱機碼。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary>取得對應之 XSD 項目的名稱。</summary>
      <returns>XSD 項目名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary>指定某個對應為讀取、寫入或兩者皆有。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary>同時產生讀取和寫入方法。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary>產生讀取方法。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary>產生寫入方法。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary>將 .NET Framework Web 服務方法中的程式碼實體 (Entity) 對應至 Web 服務描述語言 (WSDL) 訊息中的項目。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary>取得或設定值，指出 .NET Framework 型別是否會對應至任何型別的 XML 項目或屬性 (Attribute)。</summary>
      <returns>如果此型別會對應至任何 XML 項目或屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary>取得值，指出 .NET Framework 型別中的隨附欄位是否含有指定的值。</summary>
      <returns>如果隨附欄位含有指定的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary>取得套用至此對應之 XML 項目宣告的非限定名稱。</summary>
      <returns>套用至此對應之 XML 項目宣告的非限定名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary>取得由此對應所表示之 Web 服務方法成員的名稱。</summary>
      <returns>由此對應所表示之 Web 服務方法成員的名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary>取得套用至此對應的 XML 命名空間。</summary>
      <returns>套用至此對應的 XML 命名空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary>取得此對應之 .NET Framework 型別的完整型別名稱。</summary>
      <returns>此對應之 .NET Framework 型別的完整型別名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary>取得此對應之 .NET Framework 型別的型別名稱。</summary>
      <returns>此對應之 .NET Framework 型別的型別名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary>取得此對應之 .NET Framework 型別的命名空間。</summary>
      <returns>此對應之 .NET Framework 型別的命名空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary>取得顯示於服務描述文件中的 XML 項目名稱。</summary>
      <returns>XML 項目名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary>提供 .NET Framework Web 服務方法與針對 SOAP Web 服務所定義之 Web 服務描述語言 (WSDL) 訊息之間的對應。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary>取得屬於 SOAP 訊息所對應之 Web 服務方法的 .NET Framework 程式碼實體數目。</summary>
      <returns>集合中的對應數目。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary>取得項目，其中含有屬於對應至 SOAP 訊息之 Web 服務方法的 .NET Framework 程式碼實體的內部型別對應資訊。</summary>
      <param name="index">要傳回之對應的索引。</param>
      <returns>所要求的 <see cref="T:System.Xml.Serialization.XmlMemberMapping" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary>取得 .NET Framework 型別的名稱，此型別會對應至表示 SOAP 訊息之 XML 結構描述項目的資料型別。</summary>
      <returns>.NET Framework 型別的名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary>取得 .NET Framework 型別的命名空間，此型別會對應至表示 SOAP 訊息之 XML 結構描述項目的資料型別。</summary>
      <returns>對應的 .NET Framework 命名空間。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary>提供 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件的資料。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary>取得未知 XML 節點的行號。</summary>
      <returns>未知 XML 節點的行號。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary>取得未知 XML 節點在行中的位置。</summary>
      <returns>未知 XML 節點的位置編號。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary>取得要還原序列化的 XML 節點的 XML 區域名稱。</summary>
      <returns>要進行還原序列化的節點的 XML 本機名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary>取得要還原序列化的 XML 節點名稱。</summary>
      <returns>要進行還原序列化的節點名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary>取得已與要還原序列化之 XML 節點建立關聯的命名空間 URI。</summary>
      <returns>與要進行還原序列化的 XML 節點相關的命名空間 URI。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary>取得要還原序列化的 XML 節點類型。</summary>
      <returns>
        <see cref="T:System.Xml.XmlNodeType" />，表示要進行還原序列化的 XML 節點。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary>取得要還原序列化的物件。</summary>
      <returns>要進行還原序列化的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary>取得要還原序列化的 XML 節點文字。</summary>
      <returns>要進行還原序列化的 XML 節點的文字。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary>表示處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 事件的方法。</summary>
      <param name="sender">事件的來源。</param>
      <param name="e">包含事件資料的 <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary>針對 .NET Framework 類型或 Web 服務方法資訊產生 XML 結構描述項目宣告的對應，包括 Web 服務描述語言 (WSDL) 文件中的常值 XML 結構描述定義 (XSD) 訊息部分。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>使用指定的預設 XML 命名空間，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</summary>
      <param name="defaultNamespace">預設 XML 命名空間，用來對應匯入的類型。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>使用指定的 XML 序列化覆寫，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</summary>
      <param name="attributeOverrides">物件，其會覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別序列化對應類型的方式。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>使用指定的 XML 序列化覆寫和預設 XML 命名空間，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</summary>
      <param name="attributeOverrides">物件，其會覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別序列化對應類型的方式。</param>
      <param name="defaultNamespace">預設 XML 命名空間，用來對應匯入的類型。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary>針對來自 Web 服務方法的資訊，產生內部類型對應。</summary>
      <param name="elementName">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 物件的陣列，其中包含屬於 Web 服務方法的 .NET Framework 程式碼實體。</param>
      <param name="hasWrapperElement">如果 Web 服務描述語言 (WSDL) 訊息部分的對應項目應該封入 SOAP 訊息的額外包裝函式項目中，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />，其中含有 WSDL 訊息定義之項目部分的對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>使用來自 Web 服務方法的資訊，傳回內部類型對應，並讓您指定 XML 項目名稱、XML 命名空間及其他選項。</summary>
      <param name="elementName">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 物件的陣列，其中包含屬於 Web 服務方法的 .NET Framework 程式碼實體。</param>
      <param name="hasWrapperElement">如果 Web 服務描述語言 (WSDL) 訊息部分的對應項目應該封入 SOAP 訊息的額外包裝函式項目中，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="rpc">如果方法為遠端程序呼叫，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <returns>包含對應的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>使用來自 Web 服務方法的資訊，傳回內部類型對應，並讓您指定 XML 項目名稱、XML 命名空間及其他選項。</summary>
      <param name="elementName">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 物件的陣列，其中包含屬於 Web 服務方法的 .NET Framework 程式碼實體。</param>
      <param name="hasWrapperElement">如果 Web 服務描述語言 (WSDL) 訊息部分的對應項目應該封入 SOAP 訊息的額外包裝函式項目中，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="rpc">如果方法為遠端程序呼叫，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="openModel">如果指定要將產生的結構描述類型以 <see langword="&lt;xs:anyAttribute&gt;" /> 項目標記，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <returns>包含對應的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>針對來自 Web 服務方法的資訊，產生內部類型對應。</summary>
      <param name="elementName">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 物件的陣列，其中包含屬於 Web 服務方法的 .NET Framework 程式碼實體。</param>
      <param name="hasWrapperElement">如果 Web 服務描述語言 (WSDL) 訊息部分的對應項目應該封入 SOAP 訊息的額外包裝函式項目中，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="rpc">如果方法為遠端程序呼叫，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="openModel">如果指定要將產生的結構描述類型以 <see langword="&lt;xs:anyAttribute&gt;" /> 項目標記，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="access">其中一個 <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 值。 預設為 <see langword="None" />。</param>
      <returns>包含對應的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>針對指定的 .NET Framework 類型，產生 XML 結構描述項目的對應。</summary>
      <param name="type">要為其產生類型對應的 .NET Framework 類型。</param>
      <returns>某個類型與 XML 結構描述項目的內部 .NET Framework 對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>使用指定的類型和命名空間，針對 .NET Framework 類型產生 XML 結構描述項目的對應。</summary>
      <param name="type">要為其產生類型對應的 .NET Framework 類型。</param>
      <param name="defaultNamespace">要使用的預設 XML 命名空間。</param>
      <returns>某個類型與 XML 結構描述項目的內部 .NET Framework 對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>使用指定的類型和屬性，針對 .NET Framework 類型產生 XML 結構描述項目的對應。</summary>
      <param name="type">要為其產生類型對應的 .NET Framework 類型。</param>
      <param name="root">套用至此類型的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 屬性。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />，代表 .NET Framework 類型與 XML 結構描述項目的對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>使用指定的類型、屬性和命名空間，針對 .NET Framework 類型產生 XML 結構描述項目的對應。</summary>
      <param name="type">要為其產生類型對應的 .NET Framework 類型。</param>
      <param name="root">套用至此類型的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 屬性。</param>
      <param name="defaultNamespace">要使用的預設 XML 命名空間。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />，其中含有某個類型與 XML 結構描述項目的內部 .NET Framework 對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>納入類型的對應，以便稍後叫用匯入方法時使用。</summary>
      <param name="type">要為其儲存類型對應資訊的 .NET Framework 類型。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>納入衍生類型的對應，以便稍後叫用匯入方法時使用。</summary>
      <param name="provider">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 類別的執行個體，其中包含衍生自 <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 屬性的自訂屬性。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary>提供 .NET Framework Web 服務方法中的程式碼實體 (Entity) 與針對 SOAP Web 服務所定義之 Web 服務描述語言 (WSDL) 訊息內容之間的對應。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary>取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 是否表示 Web 服務方法傳回值，相對於輸出參數。</summary>
      <returns>如果此成員是表示 Web 服務傳回值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary>取得或設定這項對應之 Web 服務方法成員的名稱。</summary>
      <returns>Web 服務方法的名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary>取得或設定由此對應所表示之 Web 服務方法成員程式碼實體的型別。</summary>
      <returns>由此對應所表示之 Web 服務方法成員程式碼實體的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary>取得或設定值，表示對應之 XML 項目定義的 <c>isNullable</c> 屬性值為 <see langword="false" />。</summary>
      <returns>
        <see langword="true" /> 表示覆寫 <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> 屬性，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary>取得或設定 <see cref="T:System.Xml.Serialization.SoapAttributes" />，其中含有已套用至成員程式碼實體之 SOAP 相關屬性的集合。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapAttributes" />，其中含有表示套用至成員之 SOAP 屬性的物件。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary>取得或設定 <see cref="T:System.Xml.Serialization.XmlAttributes" />，其中含有已套用至成員程式碼實體之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 相關屬性的集合。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributes" />，表示已套用至成員程式碼的 XML 屬性。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary>啟用對 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件集合的反覆運算。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> 類別的新執行個體。</summary>
      <param name="list">您想要反覆運算的 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 物件。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary>取得集合中目前的項目。</summary>
      <returns>集合中目前的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary>釋放 <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary>將列舉程式推進到集合的下一個項目。</summary>
      <returns>如果移動成功，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary>取得 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件集合中目前的項目。</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> 物件集合中的目前項目。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary>將列舉程式設定至它的初始位置，即 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件集合中的第一個項目之前。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary>使用在型別對應物件中找到的 XML 結構描述項目宣告，填入 (Populate) <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSchemaExporter" /> 類別的新執行個體。</summary>
      <param name="schemas">要將從型別對應取得的項目宣告加入其中的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件集合。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary>將 &lt;any&gt; 項目匯出至指定命名空間所識別的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</summary>
      <param name="ns">要新增 &lt;any&gt; 項目之 XML 結構描述文件的命名空間。</param>
      <returns>指派給 &lt;any&gt; 項目宣告的任意名稱。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary>將物件或型別的項目宣告加入 SOAP 訊息或 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
      <param name="members">包含要匯出之對應的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</param>
      <returns>含有附加整數的字串 "any"。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>針對常值 SOAP 訊息定義的每個項目部分，將項目宣告加入適用的 <see cref="T:System.Xml.Schema.XmlSchema" /> 中。</summary>
      <param name="xmlMembersMapping">Web 服務描述語言 (WSDL) 訊息定義之項目部分的內部 .NET Framework 型別對應。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary>針對常值 SOAP 訊息定義的每個項目部分，將項目宣告加入適用的 <see cref="T:System.Xml.Schema.XmlSchema" /> 中，並指定是否包括封入項目。</summary>
      <param name="xmlMembersMapping">.NET Framework 型別和 XML 結構描述項目之間的內部對應。</param>
      <param name="exportEnclosingType">如果要包括封入結構描述的結構描述項目，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>針對常值 SOAP 訊息定義的單一項目部分，將項目宣告加入適用的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
      <param name="xmlMembersMapping">Web 服務描述語言 (WSDL) 訊息定義之項目部分的內部 .NET Framework 型別對應。</param>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" />，表示已匯出之項目宣告的限定 XML 名稱。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>將 .NET Framework 型別的項目宣告加入適用的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
      <param name="xmlTypeMapping">.NET Framework 型別和 XML 結構描述項目之間的內部對應。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary>針對 XML 結構描述項目宣告產生 .NET Framework 型別的內部對應，包括 WSDL 文件中的常值 (Literal) XSD 訊息部分。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 類別的新執行個體，並採用 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件的集合，表示 WSDL 文件中定義之 SOAP 常值訊息所使用的 XML 結構描述。</summary>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 物件的集合。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 類別的新執行個體，並採用 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件的集合，表示由 SOAP 常值訊息所使用的 XML 結構描述，再加上針對 Web 服務描述語言 (WSDL) 文件中定義的繫結所產生的類別。</summary>
      <param name="schemas">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 物件。</param>
      <param name="typeIdentifiers">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 物件，其指定針對 WSDL 文件中定義的繫結所產生的類別集合。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary>針對 WSDL 文件中定義的單一 (SOAP) 常值項目部分，產生內部型別對應資訊。</summary>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" />，其指定要產生 .NET Framework 型別之項目型別的名稱。</param>
      <param name="elementName">WSDL 文件中部分項目的名稱。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />，表示 WSDL 訊息定義之單一項目部分的 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary>產生 XML 結構描述文件中所定義之項目的內部型別對應資訊。</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" />，其會指定 XML 結構描述文件中定義之項目的名稱。</param>
      <param name="baseType">要對應至 XSD 項目型別所產生之 .NET Framework 型別的基底型別。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />，表示 XML 結構描述項目的 .NET Framework 型別對應資訊。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>針對 XML 結構描述文件中定義的項目產生內部型別對應資訊，或當做 WSDL 文件中的部分。</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" />，其會指定 XML 結構描述文件中定義之項目的名稱。</param>
      <param name="baseType">要對應至 XSD 項目型別所產生之 .NET Framework 型別的基底型別。</param>
      <param name="baseTypeCanBeIndirect">
        <see langword="true" /> 表示對應至 XSD 項目的型別可能會間接繼承自基底型別，否則為 <see langword="false" />。</param>
      <returns>XML 結構描述項目的 .NET Framework 型別對應資訊。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary>針對在 WSDL 文件中定義之常值使用 SOAP 訊息的項目部分產生內部型別對應資訊。</summary>
      <param name="name">要產生對應之項目的名稱。</param>
      <param name="ns">要產生對應之項目的命名空間。</param>
      <param name="members">
        <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 執行個體的陣列，此陣列會指定要產生對應之項目的成員。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />，其中含有型別對應資訊。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary>針對在 WSDL 文件中定義之常值用法 SOAP 訊息的單一項目部分產生內部型別對應資訊。</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" />，其指定訊息部分的名稱。</param>
      <returns>包含單一項目部分之 WSDL 訊息定義的 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary>針對在 WSDL 文件中定義之常值使用 SOAP 訊息的項目部分產生內部型別對應資訊。</summary>
      <param name="names">
        <see cref="T:System.Xml.XmlQualifiedName" /> 型別的陣列，此陣列會指定訊息部分的名稱。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />，表示 WSDL 訊息定義中項目部分的 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary>針對在 WSDL 文件中定義之常值使用 SOAP 訊息的項目部分產生內部型別對應資訊。</summary>
      <param name="names">
        <see cref="T:System.Xml.XmlQualifiedName" /> 型別的陣列，此陣列會指定訊息部分的名稱。</param>
      <param name="baseType">要對應至訊息部分所產生之所有 .NET Framework 型別的基底型別。</param>
      <param name="baseTypeCanBeIndirect">
        <see langword="true" /> 表示對應至訊息部分的型別可以間接繼承自基底型別，否則為 <see langword="false" />。</param>
      <returns>WSDL 訊息定義中項目部分的 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary>產生 XML 結構描述文件中所定義之項目的內部型別對應資訊。</summary>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" />，其指定 XML 項目。</param>
      <returns>描述型別對應的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary>產生 XML 結構描述文件中所定義之項目的內部型別對應資訊。</summary>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" />，其指定 XML 項目。</param>
      <param name="baseType">指定基底型別的 <see cref="T:System.Type" /> 物件。</param>
      <returns>描述型別對應的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>產生 XML 結構描述文件中所定義之項目的內部型別對應資訊。</summary>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" />，其指定 XML 項目。</param>
      <param name="baseType">指定基底型別的 <see cref="T:System.Type" /> 物件。</param>
      <param name="baseTypeCanBeIndirect">
        <see cref="T:System.Boolean" /> 值，指定產生的型別是否可以間接繼承 <paramref name="baseType" />。</param>
      <returns>描述型別對應的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary>產生 XML 結構描述文件中所定義之項目的內部型別對應資訊。</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" />，其會指定 XML 結構描述文件中定義之項目的名稱。</param>
      <returns>XML 結構描述項目的 .NET Framework 型別對應資訊。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary>表示 XML 結構描述的集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary>將物件加入至集合的結尾。</summary>
      <param name="schema">要加入物件集合的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> 要加入的索引位置。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary>將表示組件參考的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件加入集合。</summary>
      <param name="schema">要加入的 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
      <param name="baseUri">結構描述物件的 <see cref="T:System.Uri" />。</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> 要加入的索引位置。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 類別的執行個體加入集合結尾。</summary>
      <param name="schemas">加入集合結尾的 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary>將表示組件參考的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件加入集合。</summary>
      <param name="schema">要加入的 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>處理 XML 結構描述中的項目和屬性名稱，並選擇性地驗證 XML 結構描述。</summary>
      <param name="handler">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" />，在嚴格參數設為 <see langword="true" /> 時，指定 XML 結構描述驗證期間，處理錯誤和警告的回呼方法。</param>
      <param name="fullCompile">
        <see langword="true" /> 表示使用 <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> 類別的 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 方法，驗證集合中的 XML 結構描述，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary>傳回數值，指出集合是否包含屬於指定命名空間的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</summary>
      <param name="targetNamespace">要檢查之項目的命名空間。</param>
      <returns>如果找到項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary>判斷 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 是否包含特定結構描述。</summary>
      <param name="schema">要尋找的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</param>
      <returns>如果集合包含指定項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>從目標陣列的指定索引開始，複製整個 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 至相容一維 <see cref="T:System.Array" />。</summary>
      <param name="array">一維 <see cref="T:System.Array" />，從 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 複製之結構描述的目的地。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="index">32 位元的整數，表示陣列中開始複製處的索引。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary>在其中一個 XML 結構描述中，尋找指定名稱和型別的 <see cref="T:System.Xml.Schema.XmlSchemaObject" />。</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" />，指定具有命名空間的完整名稱，用於尋找集合中的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</param>
      <param name="type">要尋找之物件的 <see cref="T:System.Type" />。 可能的型別包括：<see cref="T:System.Xml.Schema.XmlSchemaGroup" />、<see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />、<see cref="T:System.Xml.Schema.XmlSchemaElement" />、<see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 和 <see cref="T:System.Xml.Schema.XmlSchemaNotation" />。</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 執行個體，例如 <see cref="T:System.Xml.Schema.XmlSchemaElement" /> 或 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary>取得屬於同一命名空間的結構描述集合。</summary>
      <param name="ns">要擷取之結構描述的命名空間。</param>
      <returns>包含結構描述的 <see cref="T:System.Collections.IList" /> 實作。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary>搜尋指定的結構描述，並傳回整個 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 內，第一個找到機構描述之以零起始的索引。</summary>
      <param name="schema">要尋找的 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
      <returns>如果找到，則為整個 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 內，第一個找到結構描述之以零起始的索引值，否則為 -1。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary>將結構描述插入指定索引位置的 <see cref="T:System.Xml.Serialization.XmlSchemas" />。</summary>
      <param name="index">應在 <paramref name="schema" /> 插入以零為起始的索引。</param>
      <param name="schema">要插入的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary>取得值，指出是否已編譯結構描述。</summary>
      <returns>如果已編譯結構描述，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary>靜態方法，判斷指定的 XML 結構描述是否包含設為 <see langword="IsDataSet" /> 或其相等值的 <see langword="true" /> 屬性。</summary>
      <param name="schema">XML 結構描述，檢查是否存在具有 <see langword="IsDataSet" /> 值的 <see langword="true" /> 屬性。</param>
      <returns>如果指定的結構描述存在，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary>取得或設定在指定索引處的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</summary>
      <param name="index">要擷取的項目索引。</param>
      <returns>指定的 <see cref="T:System.Xml.Schema.XmlSchema" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary>取得指定的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件，表示與指定命名空間相關聯的 XML 結構描述。</summary>
      <param name="ns">指定物件的命名空間。</param>
      <returns>指定的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary>當清除 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 執行個體的內容時，執行額外的自訂處理序。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary>在將新的元素插入至 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 執行個體前，執行額外的自訂處理序。</summary>
      <param name="index">插入 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value">在 <paramref name="index" /> 處的新項目值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary>當從 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 執行個體移除元素時，執行額外的自訂處理序。</summary>
      <param name="index">可以找到 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value">從 <paramref name="index" /> 處移除的項目值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary>在 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 執行個體中設定數值前，執行額外的自訂處理序。</summary>
      <param name="index">可以找到 <paramref name="oldValue" /> 處之以零起始的索引。</param>
      <param name="oldValue">以 <paramref name="newValue" /> 取代的值。</param>
      <param name="newValue">在 <paramref name="index" /> 處的新項目值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary>移除 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 中第一個出現的特定結構描述。</summary>
      <param name="schema">要移除的 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary>傳回列舉值，這個列舉值會逐一查看 XML 結構描述的集合。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 物件，可用於逐一查看集合。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary>針對 SOAP 編碼之 XML 資料類型 (已對應至集合或列舉) 的還原序列化，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別所使用的委派。</summary>
      <param name="collection">將集合項目陣列複製到其中的集合。</param>
      <param name="collectionItems">要複製到「物件集合」<c></c>中的項目陣列。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary>針對 SOAP 編碼之 XML 資料類型的還原序列化，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別所使用的委派。</summary>
      <param name="fixup">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 類別的執行個體，其中包含要修復的物件以及要填入之項目的字串識別碼陣列。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary>抽象類別，<see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 和 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 的基底類別，包含這兩個型別的通用方法。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" /> 類別的執行個體。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別對 SOAP 編碼的非根 XML 資料進行類型還原序列化時所使用的委派。</summary>
      <returns>回呼傳回的物件。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary>依據 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別控制還原序列化。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary>儲存含有回呼方法的物件，然後在必要時呼叫此方法，以填入與 SOAP 編碼陣列或 SOAP 編碼之多重參考項目對應的 .NET Framework 集合或列舉中。</summary>
      <param name="fixup">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委派及回呼方法的輸入資料。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary>儲存含有回呼方法執行個體的物件，並在必要時呼叫此方法執行個體，以填入 SOAP 編碼陣列中的物件。</summary>
      <param name="fixup">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委派及回呼方法的輸入資料。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary>儲存 <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> 委派的實作及其輸入資料，以供稍後的引動過程使用。</summary>
      <param name="name">正在還原序列化的 .NET Framework 類型的名稱。</param>
      <param name="ns">正在還原序列化的. NET Framework 類型的命名空間。</param>
      <param name="type">要還原序列化的 <see cref="T:System.Type" />。</param>
      <param name="read">
        <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> 委派。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary>儲存正在從 SOAP 編碼 <see langword="multiRef" /> 項目還原序列化的物件，以供稍後透過 <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" /> 方法存取時使用。</summary>
      <param name="id">
        <see langword="id" /> 項目的 <see langword="multiRef" /> 屬性值，其可用來識別項目。</param>
      <param name="o">從 XML 項目還原序列化而得的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary>檢查還原序列化程式是否已進階。</summary>
      <param name="whileIterations">while 迴圈中目前的 <see langword="count" />。</param>
      <param name="readerCount">目前的 <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> 未進階。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary>從指定字串的開頭和結尾移除所有出現的空白字元。</summary>
      <param name="value">空白字元會被修剪的字串。</param>
      <returns>修剪後的字串。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary>包含 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委派 (Delegate) 執行個體，並加上方法的輸入，同時提供方法的參數。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary>使用回呼方法的參數，初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> 類別的新執行個體。</summary>
      <param name="collection">回呼方法會將集合項目陣列複製到其中的集合。</param>
      <param name="callback">將 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委派具現化的方法。</param>
      <param name="collectionItems">回呼方法會將集合複製到其中的陣列。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary>取得具現化 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委派的回呼方法。</summary>
      <returns>指向回呼方法的 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委派。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary>取得回呼方法的 <paramref name="object collection" />。</summary>
      <returns>用於修復的集合。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary>取得回呼方法會將集合複製到其中的陣列。</summary>
      <returns>回呼方法會將集合複製到其中的陣列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，表示正在還原序列化的物件應該是抽象的。</summary>
      <param name="name">抽象類型的名稱。</param>
      <param name="ns">抽象類型的 .NET Framework 命名空間。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>在 <see cref="T:System.Xml.XmlReader" /> 的目前位置，使用讀取內部項目選項，從物件的 XML 表示法填入物件。</summary>
      <param name="xsdDerived">衍生 XML 結構描述資料類型的區域名稱。</param>
      <param name="nsDerived">衍生 XML 結構描述資料類型的命名空間。</param>
      <param name="xsdBase">基底 XML 結構描述資料類型的區域名稱。</param>
      <param name="nsBase">基底 XML 結構描述資料類型的命名空間。</param>
      <param name="clrDerived">衍生 .NET Framework 類型的命名空間。</param>
      <param name="clrBase">基底 .NET Framework 類型的名稱。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，以表示由於建構函式擲回安全性例外狀況，因此無法具現化正在還原序列化的物件。</summary>
      <param name="typeName">型別的名稱。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，以表示由於沒有可用的建構函式，因此無法具現化正在還原序列化的物件。</summary>
      <param name="typeName">型別的名稱。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary>建立 <see cref="T:System.InvalidCastException" />，以表示明確的參考轉換已失敗。</summary>
      <param name="type">某物件無法轉型而成的 <see cref="T:System.Type" />。 此類型會納入例外狀況訊息中。</param>
      <param name="value">無法轉型的物件。 此物件會納入例外狀況訊息中。</param>
      <returns>
        <see cref="T:System.InvalidCastException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary>建立 <see cref="T:System.InvalidCastException" />，以表示明確的參考轉換已失敗。</summary>
      <param name="type">某物件無法轉型而成的 <see cref="T:System.Type" />。 此類型會納入例外狀況訊息中。</param>
      <param name="value">無法轉型的物件。 此物件會納入例外狀況訊息中。</param>
      <param name="id">字串識別碼。</param>
      <returns>
        <see cref="T:System.InvalidCastException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，以表示找不到對應至 XML 結構描述資料類型的衍生類型。</summary>
      <param name="name">對應至無法使用的衍生類型的 XML 結構描述資料類型區域名稱。</param>
      <param name="ns">對應至無法使用的衍生類型的 XML 結構描述資料類型命名空間。</param>
      <param name="clrType">找不到衍生類型的 .NET Framework 基底類型的完整名稱。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，以表示無法修改 SOAP 編碼的集合類型，而且無法填入其值。</summary>
      <param name="name">已建立對應之 .NET Framework 類型的完整名稱。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，以表示列舉值無效。</summary>
      <param name="value">無效的列舉值。</param>
      <param name="enumType">列舉類型。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，以指出 <see cref="T:System.Xml.XmlReader" /> 的目前位置代表未知的 XML 節點。</summary>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，以表示類型是未知的。</summary>
      <param name="type">代表未知類型名稱的 <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary>取得或設定值，以便判斷 XML 字串是否會轉譯成有效的 .NET Framework 類型名稱。</summary>
      <returns>
        <see langword="true" /> 是否將 XML 字串解碼成有效的 .NET Framework 型別名稱;否則，<see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary>取得 XML 文件物件，其為 XML 文件正要還原序列化的目標物件。</summary>
      <returns>
        <see cref="T:System.Xml.XmlDocument" />，表示已還原序列化的 <see cref="T:System.Xml.XmlDocument" /> 資料。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary>確定指定之陣列或複本的大小足以容納指定的索引。</summary>
      <param name="a">正在檢查的 <see cref="T:System.Array" />。</param>
      <param name="index">必要的索引。</param>
      <param name="elementType">陣列項目的 <see cref="T:System.Type" />。</param>
      <returns>如果現有的陣列大小已足夠，即為現有 <see cref="T:System.Array" />；否則為更大的新陣列，且其中含有原始陣列的項目。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary>存放一個 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委派執行個體，加上此方法的輸入資料；同時也當做此方法的參數。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 類別的新執行個體。</summary>
      <param name="o">此物件內還含有其他物件，回呼實作會負責將值填入這些物件內。</param>
      <param name="callback">將 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委派具現化的方法。</param>
      <param name="count">經由 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> 屬性所得到之字串陣列的大小。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 類別的新執行個體。</summary>
      <param name="o">此物件內還含有其他物件，回呼實作會負責將值填入這些物件內。</param>
      <param name="callback">將 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委派具現化的方法。</param>
      <param name="ids">經由 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> 屬性取得的字串陣列。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary>取得建立 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委派之執行個體的回呼方法。</summary>
      <returns>建立 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委派之執行個體的回呼方法。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary>取得或設定屬於 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> 屬性之物件的索引鍵陣列。回呼實作會負責將值填入這些屬性內。</summary>
      <returns>索引鍵的陣列。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary>取得或設定一個物件，其中含有其他物件，回呼實作會負責將值填入這些物件內。</summary>
      <returns>包含要填入值之物件的來源。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary>填入 SOAP 編碼陣列的值，該陣列的資料類型會對應至 .NET Framework 參考類型。</summary>
      <param name="fixup">物件，其中含有要填入值的陣列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary>取得 <see cref="T:System.Xml.XmlReader" /> 目前所在之 SOAP 編碼陣列的長度。</summary>
      <param name="name">陣列應該具有的區域名稱。</param>
      <param name="ns">陣列應該具有的命名空間。</param>
      <returns>SOAP 陣列的長度。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary>判斷 <see cref="T:System.Xml.XmlReader" /> 目前所在之 XML 項目是否已將 Null 屬性設定為 <see langword="true" /> 值。</summary>
      <returns>如果 <see langword="true" /> 目前所在位置的 Null 屬性為 <see cref="T:System.Xml.XmlReader" /> 值，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary>取得正從 SOAP 編碼 <see langword="multiRef" /> 項目還原序列化且之前由 <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" /> 所儲存的物件。</summary>
      <param name="id">
        <see langword="id" /> 項目的 <see langword="multiRef" /> 屬性值，其可用來識別項目。</param>
      <returns>要從 SOAP 編碼 <see langword="multiRef" /> 項目還原序列化的物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary>針對位於 <see langword="xsi:type" /> 目前位置之 XML 項目，取得 <see cref="T:System.Xml.XmlReader" /> 屬性的值。</summary>
      <returns>表示 XML 項目之資料類型的 XML 限定名稱。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary>初始化回呼方法，以填入對應至 SOAP 編碼 XML 資料的物件。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary>將項目和屬性名稱儲存在 <see cref="T:System.Xml.NameTable" /> 物件中。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary>取得或設定值，此值對於 SOAP 1.1 傳回值應該是 <see langword="true" />。</summary>
      <returns>如果值是傳回值，則 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary>判斷 XML 屬性名稱是否會指出 XML 命名空間。</summary>
      <param name="name">XML 屬性的名稱。</param>
      <returns>如果 XML 屬性名稱會指出 XML 命名空間，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary>設定 XML 屬性的值 (如果其類型為 Web 服務描述語言 (WSDL) 命名空間中的 <see langword="arrayType" /> 的話)。</summary>
      <param name="attr">可能具有 <see cref="T:System.Xml.XmlAttribute" /> 類型的 <see langword="wsdl:array" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary>讓 <see cref="T:System.Xml.XmlReader" /> 讀取其目前所在項目的完整名稱。</summary>
      <returns>目前 XML 項目的完整名稱。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary>讓 <see cref="T:System.Xml.XmlReader" /> 讀取 XML 結束標記。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary>取得正由 <see cref="T:System.Xml.XmlReader" /> 使用的 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 物件。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" />正在使用的 <see cref="T:System.Xml.XmlReader" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary>取得目前 <see cref="T:System.Xml.XmlReader" /> 的計數。</summary>
      <returns>
        <see cref="T:System.Xml.XmlReader" />的目前計數。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary>如果目前 XML 項目含有值為 true 的 Null 屬性，則會指示 <see cref="T:System.Xml.XmlReader" /> 讀取此項目。</summary>
      <returns>如果此項目含有 <see langword="true" />null="true"屬性值且已經讀取，即為；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary>指示 <see cref="T:System.Xml.XmlReader" /> 讀取其目前所在項目的完整名稱。</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> 代表目前 XML 項目的完整名稱，但如果 <see langword="null" />null="true"屬性值存在，則為。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary>指示 <see cref="T:System.Xml.XmlReader" /> 讀取可能為 <see langword="null" /> 的簡單純文字 XML 項目。</summary>
      <returns>字串值；否則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary>讀取 <see langword="href" /> 屬性 (SOAP 1.2 中的 <see langword="ref" /> 屬性) 的值，這項屬性會用來參考 SOAP 編碼中的 XML 項目。</summary>
      <param name="fixupReference">輸出字串；<see langword="href" /> 屬性值會讀入其中。</param>
      <returns>如果已讀取此值，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary>從 SOAP 編碼 <see langword="multiRef" /> XML 項目還原序列化物件。</summary>
      <returns>文件所參考的項目的值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary>從 SOAP 編碼 <see langword="multiRef" /> XML 項目還原序列化物件。</summary>
      <param name="name">項目的 XML 結構描述資料類型區域名稱。</param>
      <param name="ns">項目的 XML 結構描述資料類型命名空間。</param>
      <returns>文件所參考的項目的值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary>從 SOAP 訊息中的 SOAP 編碼 <see langword="multiRef" /> 項目還原序列化物件。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary>從 SOAP 訊息中的 XML 項目還原序列化物件；該訊息包含 <see langword="multiRef" /> 項目參考。</summary>
      <param name="name">項目的 XML 結構描述資料類型區域名稱。</param>
      <param name="ns">項目的 XML 結構描述資料類型命名空間。</param>
      <param name="elementCanBeType">如果項目名稱也是 XML 結構描述資料類型名稱，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="fixupReference">輸出字串；<see langword="href" /> 屬性值會讀入其中。</param>
      <returns>已還原序列化的物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary>從 SOAP 訊息中的 XML 項目還原序列化物件；該訊息包含 <see langword="multiRef" /> 項目參考。</summary>
      <param name="name">項目的 XML 結構描述資料類型區域名稱。</param>
      <param name="ns">項目的 XML 結構描述資料類型命名空間。</param>
      <param name="fixupReference">輸出字串；<see langword="href" /> 屬性值會讀入其中。</param>
      <returns>已還原序列化的物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary>從 SOAP 訊息中的 XML 項目還原序列化物件；該訊息包含 <see langword="multiRef" /> 項目參考。</summary>
      <param name="fixupReference">輸出字串；<see langword="href" /> 屬性值會讀入其中。</param>
      <returns>已還原序列化的物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary>在 <see cref="T:System.Xml.XmlReader" /> 的目前位置，從物件的 XML 表示法填入物件。</summary>
      <param name="serializable">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" />，其對應至 <see cref="T:System.Xml.XmlReader" /> 的目前位置。</param>
      <returns>物件，其會實作 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 介面，並從 <see cref="T:System.Xml.XmlReader" /> 的位置填入其成員。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary>此方法支援 .NET Framework 結構而且並非設計直接從程式碼使用。</summary>
      <param name="serializable">對應至 XMLReader 目前位置的 IXmlSerializable 物件。</param>
      <param name="wrappedAny">指定可序列化的物件是否經過包裝。</param>
      <returns>物件，其會實作 IXmlSerializable 介面，並從 XmlReader 的位置填入其成員。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary>產生呼叫 <see cref="M:System.Xml.XmlReader.ReadString" /> 方法的結果並附加至輸入值。</summary>
      <param name="value">字串，其為呼叫 <see cref="M:System.Xml.XmlReader.ReadString" /> 方法之結果的前置詞。</param>
      <returns>呼叫 <see cref="M:System.Xml.XmlReader.ReadString" /> 方法的結果 (其會附加至輸入值)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary>傳回呼叫 <see cref="M:System.Xml.XmlReader.ReadString" /> 類別的 <see cref="T:System.Xml.XmlReader" /> 方法的結果，必要時修剪空白字元，並附加至輸入值。</summary>
      <param name="value">要附加項目的目標字串。</param>
      <param name="trim">如果應該修剪讀取作業的結果，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <returns>讀取作業的結果 (其會附加至輸入值)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary>讀取允許 Null 值 (<see langword="xsi:nil = 'true'" />) 的 XML 項目，並傳回泛型 <see cref="T:System.Nullable`1" /> 值。</summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" />，其表示 <see cref="T:System.Xml.XmlReader" /> 目前位置的簡單資料類型。</param>
      <returns>泛型 <see cref="T:System.Nullable`1" />，其代表 Null XML 值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary>取得 <see cref="T:System.Xml.XmlReader" /> 目前所在之 XML 節點的值。</summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" />，其表示 <see cref="T:System.Xml.XmlReader" /> 目前位置的簡單資料類型。</param>
      <returns>如果此值為簡單 XML 結構描述資料類型，即為 .NET Framework 實值型別的節點值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary>指示 <see cref="T:System.Xml.XmlReader" /> 讀取其目前所在位置的 XML 文件根項目。</summary>
      <param name="wrapped">如果此方法只有在讀取項目的開始項目後才應讀取內容，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <returns>
        <see cref="T:System.Xml.XmlDocument" />，其中含有已經讀取的根項目。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary>指示 <see cref="T:System.Xml.XmlReader" /> 讀取目前所在位置的 XML 節點。</summary>
      <param name="wrapped">
        <see langword="true" /> 表示只有在讀取項目的開始項目後才應讀取內容；否則為 <see langword="false" />。</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" />，代表已經讀取的 XML 節點。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary>儲存要從 SOAP 編碼 <see langword="multiRef" /> 項目還原序列化的物件。</summary>
      <param name="o">要還原序列化的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary>根據名稱取得動態產生的組件。</summary>
      <param name="assemblyFullName">組件的完整名稱。</param>
      <returns>動態產生的 <see cref="T:System.Reflection.Assembly" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary>確認給定陣列或複本的大小並未超過指定的長度。</summary>
      <param name="a">正在檢查的陣列。</param>
      <param name="length">陣列的長度上限。</param>
      <param name="elementType">陣列項目的 <see cref="T:System.Type" />。</param>
      <param name="isNullable">如果陣列為 <see langword="true" />，而且輸入陣列已存在，即為 <see langword="null" />；否則為更小的新陣列。</param>
      <returns>如果現有的陣列大小已足夠，即為現有 <see cref="T:System.Array" />；否則為更小的新陣列，且其中含有原始陣列的項目 (上限為 <paramref name="length" /> 的大小)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary>指示 <see cref="T:System.Xml.XmlReader" /> 讀取其目前位置的字串值，並以 Base-64 位元組陣列形式傳回此值。</summary>
      <param name="isNull">
        <see langword="true" /> 表示傳回 <see langword="null" />；<see langword="false" /> 則表示傳回 Base-64 位元組陣列。</param>
      <returns>Base-64 位元組陣列，但如果 <see langword="null" /> 參數的值為 <paramref name="isNull" />，則為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary>從輸入字串產生 Base-64 位元組陣列。</summary>
      <param name="value">要轉譯成 Base-64 位元組陣列的字串。</param>
      <returns>Base-64 位元組陣列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary>指示 <see cref="T:System.Xml.XmlReader" /> 讀取其目前位置的字串值，並以十六進位位元組陣列形式傳回此值。</summary>
      <param name="isNull">
        <see langword="true" /> 表示傳回 <see langword="null" />，而 <see langword="false" /> 則表示傳回十六進位位元組陣列。</param>
      <returns>十六進位位元組陣列；如果 <see langword="null" /> 參數的值為 <paramref name="isNull" />，則為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary>從輸入字串產生十六進位位元組陣列。</summary>
      <param name="value">要轉譯成十六進位位元組陣列的字串。</param>
      <returns>十六進位位元組陣列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary>從輸入字串產生 <see cref="T:System.Char" /> 物件。</summary>
      <param name="value">要轉譯成 <see cref="T:System.Char" /> 物件的字串。</param>
      <returns>
        <see cref="T:System.Char" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary>從輸入字串產生 <see cref="T:System.DateTime" /> 物件。</summary>
      <param name="value">要轉譯成 <see cref="T:System.DateTime" /> 類別物件的字串。</param>
      <returns>
        <see cref="T:System.DateTime" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary>從輸入字串產生 <see cref="T:System.DateTime" /> 物件。</summary>
      <param name="value">要轉譯成 <see cref="T:System.DateTime" /> 物件的字串。</param>
      <returns>
        <see cref="T:System.DateTime" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary>從含有分隔識別碼的字串產生數值列舉值，而這些分隔識別碼代表列舉程式清單中的常數。</summary>
      <param name="value">含有分隔識別碼的字串，其中每個識別碼都代表已設定之列舉程式清單中的常數。</param>
      <param name="h">
        <see cref="T:System.Collections.Hashtable" />，其中含有索引鍵形式的識別碼以及整數形式的常數。</param>
      <param name="typeName">列舉類型的名稱。</param>
      <returns>長數值，其中含有以一系列位元 <see langword="OR" /> 運算為形式的列舉值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary>從代表時間的字串產生 <see cref="T:System.DateTime" />。</summary>
      <param name="value">要轉譯成 <see cref="T:System.DateTime" /> 物件的字串。</param>
      <returns>
        <see cref="T:System.DateTime" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary>解碼 XML 名稱。</summary>
      <param name="value">要解碼的 XML 名稱。</param>
      <returns>已解碼的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary>解碼 XML 名稱。</summary>
      <param name="value">要解碼的 XML 名稱。</param>
      <returns>已解碼的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary>解碼 XML 名稱。</summary>
      <param name="value">要解碼的 XML 名稱。</param>
      <returns>已解碼的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary>解碼 XML 名稱。</summary>
      <param name="value">要解碼的 XML 名稱。</param>
      <returns>已解碼的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary>從可能含有前置詞的名稱中取得 <see cref="T:System.Xml.XmlQualifiedName" />。</summary>
      <param name="value">可能含有前置詞的名稱。</param>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" />，代表命名空間限定的 XML 名稱。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary>對 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 的目前位置引發 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="o">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 正在嘗試還原序列化的物件；您之後可透過 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 屬性存取此物件。</param>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" />，代表有問題的屬性。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary>對 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 的目前位置引發 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="o">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 正在嘗試還原序列化的物件；您之後可透過 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 屬性存取此物件。</param>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" />，代表有問題的屬性。</param>
      <param name="qnames">XML 限定名稱的逗號分隔清單。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary>對 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 的目前位置引發 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="o">正在還原序列化的 <see cref="T:System.Object" />。</param>
      <param name="elem">已引發事件的 <see cref="T:System.Xml.XmlElement" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary>對 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 的目前位置引發 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="o">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 正在嘗試還原序列化的物件；您之後可透過 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 屬性存取此物件。</param>
      <param name="elem">已引發事件的 <see cref="T:System.Xml.XmlElement" />。</param>
      <param name="qnames">XML 限定名稱的逗號分隔清單。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary>對 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 的目前位置引發 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="o">正在還原序列化的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary>對 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 的目前位置引發 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="o">正在還原序列化的物件。</param>
      <param name="qnames">XML 限定名稱的逗號分隔清單。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary>對 <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 的目前位置引發 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="id">用於識別未參考物件的唯一字串；您之後可透過 <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" /> 屬性存取此字串。</param>
      <param name="o">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 正在嘗試還原序列化的物件；您之後可透過 <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" /> 屬性存取此物件。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別對 SOAP 編碼之非根 XML 資料中的型別進行序列化時所使用的委派。</summary>
      <param name="o">正在序列化的物件。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary>表示由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別 (Class) 用來控制序列化 (Serialization) 的抽象類別。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary>儲存 <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 委派 (Delegate) 的實作及它所套用的型別，以供稍後的引動過程使用。</summary>
      <param name="type">進行序列化之物件的 <see cref="T:System.Type" />。</param>
      <param name="typeName">進行序列化之物件的型別名稱。</param>
      <param name="typeNs">進行序列化之物件的型別命名空間。</param>
      <param name="callback">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 委派的執行個體。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，表示符合 XML 結構描述 <see langword="choice" /> 項目宣告的項目含有非預期的名稱。</summary>
      <param name="value">無效的名稱。</param>
      <param name="identifier">名稱所屬的 <see langword="choice" /> 項目宣告。</param>
      <param name="name">項目的預期區域名稱。</param>
      <param name="ns">項目的預期命名空間。</param>
      <returns>新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 已經套用至某個無效的成員。只有型別為 <see cref="T:System.Xml.XmlNode" /> 的成員或衍生自 <see cref="T:System.Xml.XmlNode" /> 的成員才是有效成員。</summary>
      <param name="o">表示無效成員的物件。</param>
      <returns>新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 已經套用至某個無效的成員。只有型別為 <see cref="T:System.Xml.XmlNode" /> 的成員或衍生自 <see cref="T:System.Xml.XmlNode" /> 的成員才是有效成員。</summary>
      <param name="type">無效的 <see cref="T:System.Type" />。</param>
      <returns>新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，表示在寫入套用 XML 結構描述 <see langword="choice" /> 項目宣告的位置時，發生失敗。</summary>
      <param name="type">將序列化的型別。</param>
      <param name="identifier">
        <see langword="choice" /> 項目宣告的名稱。</param>
      <returns>新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary>建立無效列舉值的 <see cref="T:System.InvalidOperationException" />。</summary>
      <param name="value">表示無效列舉型別的物件。</param>
      <param name="typeName">XML 型別名稱。</param>
      <returns>新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，表示 XML 項目的值與列舉型別不符。</summary>
      <param name="value">無效的值。</param>
      <param name="elementName">含有無效值之 XML 項目的名稱。</param>
      <param name="enumValue">有效值。</param>
      <returns>新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，表示無法處理應符合 XML 結構描述 <see langword="any" /> 項目宣告的 XML 項目。</summary>
      <param name="name">無法處理的 XML 項目。</param>
      <param name="ns">XML 項目的命名空間。</param>
      <returns>新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，其表示正在序列化的型別並未以有效的方式使用，或是在非預期情況下遇到此型別。</summary>
      <param name="o">無法序列化之型別的物件。</param>
      <returns>新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary>建立 <see cref="T:System.InvalidOperationException" />，其表示正在序列化的型別並未以有效的方式使用，或是在非預期情況下遇到此型別。</summary>
      <param name="type">無法序列化的型別。</param>
      <returns>新建立的例外狀況。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary>取得或設定值，指出是否會使用 <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> 方法來寫入有效的 XML。</summary>
      <returns>如果 <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> 方法會傳回已編碼的名稱，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary>處理 Base-64 位元組陣列。</summary>
      <param name="value">Base-64 <see cref="T:System.Byte" /> 陣列。</param>
      <returns>當做引數傳入的相同位元組陣列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary>從輸入十六進位位元組陣列產生字串。</summary>
      <param name="value">要轉譯成字串的十六進位位元組陣列。</param>
      <returns>轉換成字串的位元組陣列值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary>從輸入 <see cref="T:System.Char" /> 產生字串。</summary>
      <param name="value">要轉譯成字串的 <see cref="T:System.Char" />。</param>
      <returns>轉換成字串的 <see cref="T:System.Char" /> 值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary>從 <see cref="T:System.DateTime" /> 物件產生字串。</summary>
      <param name="value">要轉譯成字串的 <see cref="T:System.DateTime" />。</param>
      <returns>
        <see cref="T:System.DateTime" /> 的字串表示，其中顯示日期但不顯示時間。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary>從輸入 <see cref="T:System.DateTime" /> 產生字串。</summary>
      <param name="value">要轉譯成字串的 <see cref="T:System.DateTime" />。</param>
      <returns>
        <see cref="T:System.DateTime" /> 的字串表示，其中顯示日期和時間。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary>產生含有分隔識別項的字串，表示已經設定的列舉型別成員。</summary>
      <param name="value">列舉值，當做一系列的位元 <see langword="OR" /> 運算。</param>
      <param name="values">列舉型別的名稱值。</param>
      <param name="ids">列舉型別的常數值。</param>
      <returns>含有分隔識別項的字串，其中每個識別項都表示已設定之列舉值清單中的成員。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary>採用數值列舉值以及列舉型別之列舉值清單中的名稱與常數，並傳回含有分隔識別項的字串，表示已經設定的列舉型別成員。</summary>
      <param name="value">列舉值，當做一系列的位元 <see langword="OR" /> 運算。</param>
      <param name="values">列舉型別的值。</param>
      <param name="ids">列舉型別的常數。</param>
      <param name="typeName">型別的名稱。</param>
      <returns>含有分隔識別項的字串，其中每個項目都是位元運算所設定的其中一個值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary>從 <see cref="T:System.DateTime" /> 物件產生字串。</summary>
      <param name="value">轉譯成字串的 <see cref="T:System.DateTime" />。</param>
      <returns>
        <see cref="T:System.DateTime" /> 物件的字串表示，其中顯示時間但不顯示日期。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary>藉由使用逸出序列 (Escape Sequence) 取代無效的字元，對有效的 XML 名稱進行編碼。</summary>
      <param name="name">要當做 XML 名稱使用的字串。</param>
      <returns>編碼字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary>藉由使用逸出序列取代無效的字元，對有效的 XML 區域名稱進行編碼。</summary>
      <param name="ncName">要當做區域 (非限定) XML 名稱使用的字串。</param>
      <returns>編碼字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary>對 XML 名稱進行編碼。</summary>
      <param name="nmToken">要編碼的 XML 名稱。</param>
      <returns>編碼字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary>將以空格分隔的 XML 名稱序列編碼成單一 XML 名稱。</summary>
      <param name="nmTokens">要編碼之以空格分隔的 XML 名稱序列。</param>
      <returns>編碼字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary>傳回 XML 限定名稱 (Qualified Name)，並以逸出序列取代無效的字元。</summary>
      <param name="xmlQualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示要寫入的 XML。</param>
      <returns>XML 限定名稱，並以逸出序列取代無效的字元。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary>產生可寫入成為 XML 限定名稱的字串，並以逸出序列取代無效的字元。</summary>
      <param name="xmlQualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示要寫入的 XML。</param>
      <param name="ignoreEmpty">
        <see langword="true" /> 表示忽略字串中的空白空間，否則為 <see langword="false" />。</param>
      <returns>XML 限定名稱，並以逸出序列取代無效的字元。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 委派的執行個體，以序列化 SOAP 編碼的 XML 資料。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary>取得或設定 XML 限定名稱物件的清單，這些物件含有用來在 XML 文件中產生限定名稱的命名空間和前置詞。</summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" />，其中含有命名空間和前置詞組。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary>根據名稱取得動態產生的組件。</summary>
      <param name="assemblyFullName">組件的完整名稱。</param>
      <returns>動態產生的組件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary>只有在序列化 SOAP 編碼的 SOAP 訊息時才初始化物件參考。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary>指示 <see cref="T:System.Xml.XmlWriter" /> 物件寫入沒有針對名稱指定命名空間的 XML 屬性。</summary>
      <param name="localName">XML 屬性的區域名稱。</param>
      <param name="value">當做位元組陣列的 XML 屬性值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary>指示 <see cref="T:System.Xml.XmlWriter" /> 寫入沒有針對名稱指定命名空間的 XML 屬性。</summary>
      <param name="localName">XML 屬性的區域名稱。</param>
      <param name="value">當做字串的 XML 屬性值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary>指示 <see cref="T:System.Xml.XmlWriter" /> 物件寫入 XML 屬性。</summary>
      <param name="localName">XML 屬性的區域名稱。</param>
      <param name="ns">XML 屬性的命名空間。</param>
      <param name="value">當做位元組陣列的 XML 屬性值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary>寫入 XML 屬性。</summary>
      <param name="localName">XML 屬性的區域名稱。</param>
      <param name="ns">XML 屬性的命名空間。</param>
      <param name="value">當做字串的 XML 屬性值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary>寫入 XML 屬性，其中命名空間前置詞是以手動方式提供。</summary>
      <param name="prefix">要寫入的命名空間前置詞。</param>
      <param name="localName">XML 屬性的區域名稱。</param>
      <param name="ns">前置詞所表示的命名空間。</param>
      <param name="value">當做字串的 XML 屬性值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>在具名 XML 項目的主體內寫入 XML 節點物件。</summary>
      <param name="node">要寫入的 XML 節點，可能是子 XML 項目。</param>
      <param name="name">要寫入之父 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之父 XML 項目的命名空間。</param>
      <param name="isNullable">如果要序列化的物件是 <see langword="true" />，則 <see langword="xsi:nil='true'" /> 表示要寫入 <see langword="null" /> 屬性，否則為 <see langword="false" />。</param>
      <param name="any">
        <see langword="true" /> 表示節點 (如果是 XML 項目的話) 符合 XML 結構描述 <see langword="any" /> 項目宣告，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>指示 <see cref="T:System.Xml.XmlWriter" /> 物件在具名 XML 項目的主體內寫入 <see cref="T:System.Xml.XmlNode" /> 物件。</summary>
      <param name="node">要寫入的 XML 節點，可能是子 XML 項目。</param>
      <param name="name">要寫入之父 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之父 XML 項目的命名空間。</param>
      <param name="isNullable">如果要序列化的物件是 <see langword="true" />，則 <see langword="xsi:nil='true'" /> 表示要寫入 <see langword="null" /> 屬性，否則為 <see langword="false" />。</param>
      <param name="any">
        <see langword="true" /> 表示節點 (如果是 XML 項目的話) 符合 XML 結構描述 <see langword="any" /> 項目宣告，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>以其主體中指定的限定名稱寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="ns">XML 項目的命名空間。</param>
      <param name="value">在項目文字中要寫入的名稱 (如果有限定命名空間，則使用它的前置詞)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>以其主體中指定的限定名稱寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="ns">XML 項目的命名空間。</param>
      <param name="value">在項目文字中要寫入的名稱 (如果有限定命名空間，則使用它的前置詞)。</param>
      <param name="xsiType">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary>以其主體中指定的限定名稱寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="value">在項目文字中要寫入的名稱 (如果有限定命名空間，則使用它的前置詞)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>以其主體中指定的限定名稱寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="value">在項目文字中要寫入的名稱 (如果有限定命名空間，則使用它的前置詞)。</param>
      <param name="xsiType">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary>以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName">要寫入之 XML 項目的區域名稱，但不含命名空間限定條件。</param>
      <param name="value">XML 項目的文字值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="ns">XML 項目的命名空間。</param>
      <param name="value">XML 項目的文字值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="ns">XML 項目的命名空間。</param>
      <param name="value">XML 項目的文字值。</param>
      <param name="xsiType">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="value">XML 項目的文字值。</param>
      <param name="xsiType">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary>以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="value">XML 項目的文字值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="value">XML 項目的文字值。</param>
      <param name="xsiType">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary>以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="value">XML 項目的文字值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary>以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="ns">XML 項目的命名空間。</param>
      <param name="value">XML 項目的文字值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="ns">XML 項目的命名空間。</param>
      <param name="value">XML 項目的文字值。</param>
      <param name="xsiType">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary>以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="ns">XML 項目的命名空間。</param>
      <param name="value">XML 項目的文字值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="ns">XML 項目的命名空間。</param>
      <param name="value">XML 項目的文字值。</param>
      <param name="xsiType">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName">XML 項目的區域名稱。</param>
      <param name="value">XML 項目的文字值。</param>
      <param name="xsiType">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary>寫入主體為空白的 XML 項目。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary>寫入主體為空白的 XML 項目。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary>寫入 <see langword="&lt;closing&gt;" /> 項目標記。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary>寫入 <see langword="&lt;closing&gt;" /> 項目標記。</summary>
      <param name="o">正在序列化的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary>寫入在 SOAP 編碼 <see langword="id" /> 項目內顯示的 <see langword="multiRef" /> 屬性。</summary>
      <param name="o">正在序列化的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>寫入命名空間宣告屬性。</summary>
      <param name="xmlns">要宣告的 XML 命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>寫入主體包含有效 XML 限定名稱的 XML 項目。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="value">要寫入 XML 項目主體的 XML 限定名稱。</param>
      <param name="xsiType">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>寫入主體包含有效 XML 限定名稱的 XML 項目。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="value">要寫入 XML 項目主體的 XML 限定名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>寫入含有字串做為主體的 XML 項目。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="value">要寫入 XML 項目主體的字串。</param>
      <param name="xsiType">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>寫入位元組陣列做為 XML 項目主體。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="value">要寫入 XML 項目主體的位元組陣列。</param>
      <param name="xsiType">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>寫入含有字串做為主體的 XML 項目。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="value">要寫入 XML 項目主體的字串。</param>
      <param name="xsiType">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary>寫入含有字串做為主體的 XML 項目。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="value">要寫入 XML 項目主體的字串。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary>寫入位元組陣列做為 XML 項目主體。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="value">要寫入 XML 項目主體的位元組陣列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary>寫入含有字串做為主體的 XML 項目。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="value">要寫入 XML 項目主體的字串。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary>以 <see langword="xsi:nil='true'" /> 屬性寫入 XML 項目。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary>以 <see langword="xsi:nil='true'" /> 屬性寫入 XML 項目。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary>以 <see langword="xsi:nil='true'" /> 屬性寫入 XML 項目。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary>以 <see langword="xsi:nil='true'" /> 屬性寫入 XML 項目。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary>寫入可以包含指定物件之 <see langword="&lt;multiRef&gt;" /> XML 項目參照的 SOAP 訊息 XML 項目。</summary>
      <param name="n">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="o">正在序列化的物件 (位於目前的 XML 項目中或目前項目所參考的 <see langword="multiRef" /> 項目中)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary>寫入可以包含指定物件之 <see langword="&lt;multiRef&gt;" /> XML 項目參照的 SOAP 訊息 XML 項目。</summary>
      <param name="n">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="o">正在序列化的物件 (位於目前的 XML 項目中或目前項目所參考的 <see langword="multiRef" /> 項目中)。</param>
      <param name="ambientType">儲存在物件之型別對應中的型別 (相對於直接透過 <see langword="typeof" /> 作業找到的物件型別)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary>寫入可以包含指定物件之 <see langword="&lt;multiRef&gt;" /> XML 項目參照的 SOAP 訊息 XML 項目。</summary>
      <param name="n">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="o">正在序列化的物件 (位於目前的 XML 項目中或目前項目所參考的 <see langword="multiRef" /> 項目中)。</param>
      <param name="ambientType">儲存在物件之型別對應中的型別 (相對於直接透過 <see langword="typeof" /> 作業找到的物件型別)。</param>
      <param name="suppressReference">
        <see langword="true" /> 表示要將物件直接序列化成 XML 項目，而非讓項目參考另一個包含資料的項目，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary>寫入可以包含指定物件之 <see langword="multiRef" /> XML 項目參照的 SOAP 訊息 XML 項目。</summary>
      <param name="n">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="o">正在序列化的物件 (位於目前的 XML 項目中或目前項目所參考的 <see langword="multiRef" /> 項目中)。</param>
      <param name="ambientType">儲存在物件之型別對應中的型別 (相對於直接透過 <see langword="typeof" /> 作業找到的物件型別)。</param>
      <param name="suppressReference">
        <see langword="true" /> 表示要將物件直接序列化成 XML 項目，而非讓項目參考另一個包含資料的項目，否則為 <see langword="false" />。</param>
      <param name="isNullable">如果要序列化的物件是 <see langword="true" />，則 <see langword="xsi:nil='true'" /> 表示要寫入 <see langword="null" /> 屬性，否則為 <see langword="false" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary>取得或設定 <see cref="T:System.Xml.XmlWriter" /> 所使用的 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</summary>
      <returns>類別執行個體所使用的 <see cref="T:System.Xml.XmlWriter" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary>將物件序列化成 SOAP 訊息中的 SOAP 編碼 <see langword="multiRef" /> XML 項目。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary>寫入包含指定物件之 <see langword="multiRef" /> 項目參考的 SOAP 訊息 XML 項目。</summary>
      <param name="n">正在寫入之參考項目的區域名稱。</param>
      <param name="ns">正在寫入之參考項目的命名空間。</param>
      <param name="o">正在序列化的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>寫入包含指定物件之 <see langword="multiRef" /> 項目參考的 SOAP 訊息 XML 項目。</summary>
      <param name="n">正在寫入之參考項目的區域名稱。</param>
      <param name="ns">正在寫入之參考項目的命名空間。</param>
      <param name="o">正在序列化的物件。</param>
      <param name="isNullable">如果要序列化的物件是 <see langword="true" />，則 <see langword="xsi:nil='true'" /> 表示要寫入 <see langword="null" /> 屬性，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary>將含有指定之限定名稱的 SOAP 1.2 RPC 結果項目寫入其主體中。</summary>
      <param name="name">結果主體的區域名稱。</param>
      <param name="ns">結果主體的命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary>寫入使用自訂 XML 格式做為 XML 項目的物件。</summary>
      <param name="serializable">實作使用自訂 XML 格式之 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 介面的物件。</param>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="isNullable">如果 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 類別物件是 <see langword="true" />，則 <see langword="xsi:nil='true'" /> 表示要寫入 <see langword="null" /> 屬性，否則為<see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>指示 <see cref="T:System.Xml.XmlNode" /> 寫入使用自訂 XML 格式做為 XML 項目的物件。</summary>
      <param name="serializable">實作使用自訂 XML 格式之 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 介面的物件。</param>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="isNullable">如果 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 物件是 <see langword="true" />，則 <see langword="xsi:nil='true'" /> 表示要寫入 <see langword="null" /> 屬性，否則為<see langword="false" />。</param>
      <param name="wrapped">
        <see langword="true" /> 表示忽略寫入開頭項目標記，而 <see langword="false" /> 則表示寫入開頭項目標記。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary>如果寫入器位於 XML 文件的開頭，則寫入 XML 宣告。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary>寫入開頭項目標記，包括任何屬性在內。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary>寫入開頭項目標記，包括任何屬性在內。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary>寫入開頭項目標記，包括任何屬性在內。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="writePrefixed">
        <see langword="true" /> 表示如果指定的命名空間沒有可用的前置詞，則寫入含有前置詞的項目名稱，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary>寫入開頭項目標記，包括任何屬性在內。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="o">正在序列化的物件，當做 XML 項目。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>寫入開頭項目標記，包括任何屬性在內。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="o">正在序列化的物件，當做 XML 項目。</param>
      <param name="writePrefixed">
        <see langword="true" /> 表示如果指定的命名空間沒有可用的前置詞，則寫入含有前置詞的項目名稱，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>寫入開頭項目標記，包括任何屬性在內。</summary>
      <param name="name">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns">要寫入之 XML 項目的命名空間。</param>
      <param name="o">正在序列化的物件，當做 XML 項目。</param>
      <param name="writePrefixed">
        <see langword="true" /> 表示如果指定的命名空間沒有可用的前置詞，則寫入含有前置詞的項目名稱，否則為 <see langword="false" />。</param>
      <param name="xmlns">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 類別的執行個體，包含要在產生之 XML 中使用的前置詞和命名空間配對。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary>寫入文字主體為簡單 XML 結構描述資料型別之值的 XML 項目。</summary>
      <param name="name">要寫入之項目的區域名稱。</param>
      <param name="ns">要寫入之項目的命名空間。</param>
      <param name="o">項目主體中要序列化的物件。</param>
      <param name="xsiType">如果 XML 項目會使用 <see langword="true" /> 屬性明確指定文字值的型別，則為 <see langword="xsi:type" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary>寫入 Base-64 位元組陣列。</summary>
      <param name="value">要寫入的位元組陣列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary>寫入指定的字串值。</summary>
      <param name="value">要寫入的字串的值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary>寫入指定的 <see cref="T:System.Xml.XmlNode" /> 做為 XML 屬性。</summary>
      <param name="node">要寫入的 XML 節點。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary>寫入指定的 <see cref="T:System.Xml.XmlNode" /> 物件做為 XML 屬性。</summary>
      <param name="node">要寫入的 XML 節點。</param>
      <param name="container">用來產生 Web 服務描述語言 (WSDL) 命名空間 ("http://schemas.xmlsoap.org/wsdl/") (英文) 的 <see langword="arrayType" /> 屬性之限定名稱值的 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 物件 (或 <see langword="null" />)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary>寫入正要序列化成文件之 XML 項目的 <see langword="xsi:type" /> 屬性。</summary>
      <param name="name">XML 結構描述資料型別的區域名稱。</param>
      <param name="ns">XML 結構描述資料型別的命名空間。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>將物件序列化成為 XML 文件，以及從 XML 文件將物件還原序列化。 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可讓您控制如何將物件編碼為 XML。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將指定型別的物件序列化為 XML 文件，並可將 XML 文件還原序列化為指定型別的物件。</summary>
      <param name="type">這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的物件型別。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將指定型別的物件序列化為 XML 文件，並可將 XML 文件還原序列化為指定型別的物件。 指定所有 XML 項目的預設命名空間。</summary>
      <param name="type">這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的物件型別。</param>
      <param name="defaultNamespace">用於所有 XML 項目的預設命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將指定型別的物件序列化為 XML 文件，並可將 XML 文件還原序列化為指定型別的物件。 如果屬性或欄位傳回陣列，<paramref name="extraTypes" /> 參數就會指定可插入陣列的物件。</summary>
      <param name="type">這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的物件型別。</param>
      <param name="extraTypes">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將指定型別的物件序列化為 XML 文件，並可將 XML 文件還原序列化為指定型別的物件。 每個要序列化的物件本身會包含類別執行個體，這個多載可以其他類別覆寫。</summary>
      <param name="type">要序列化的物件型別。</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將 <see cref="T:System.Object" /> 型別的物件序列化為 XML 文件執行個體，並可將 XML 文件執行個體還原序列化為 <see cref="T:System.Object" /> 型別的物件。 每個要序列化的物件本身都可包含類別的執行個體，這個多載會使用其他類別對其進行覆寫。 這個多載也會指定所有 XML 項目的預設命名空間，以及要做為 XML 根項目的類別。</summary>
      <param name="type">這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的物件型別。</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，延伸或覆寫指定在 <paramref name="type" /> 參數中類別的行為。</param>
      <param name="extraTypes">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
      <param name="root">定義 XML 根項目屬性的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace">XML 文件中所有 XML 項目的預設命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將 <see cref="T:System.Object" /> 型別的物件序列化為 XML 文件執行個體，並可將 XML 文件執行個體還原序列化為 <see cref="T:System.Object" /> 型別的物件。 每個要序列化的物件本身都可包含類別的執行個體，這個多載會使用其他類別對其進行覆寫。 這個多載也會指定所有 XML 項目的預設命名空間，以及要做為 XML 根項目的類別。</summary>
      <param name="type">這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的物件型別。</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，延伸或覆寫指定在 <paramref name="type" /> 參數中類別的行為。</param>
      <param name="extraTypes">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
      <param name="root">定義 XML 根項目屬性的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace">XML 文件中所有 XML 項目的預設命名空間。</param>
      <param name="location">型別的位置。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將指定型別的物件序列化為 XML 文件，並可將 XML 文件還原序列化為指定型別的物件。 它還指定做為 XML 根項目的類別。</summary>
      <param name="type">這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的物件型別。</param>
      <param name="root">表示 XML 根項目的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>使用將一個型別對應到另一個型別的物件，初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的執行個體。</summary>
      <param name="xmlTypeMapping">將某個型別對應至另一個型別的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>取得值，指出這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否可以還原序列化指定的 XML 文件。</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" />，指向要還原序列化的文件。</param>
      <returns>如果這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可以還原序列化 <see cref="T:System.Xml.XmlReader" /> 所指向的物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary>傳回物件，該物件用於讀取要序列化的 XML 文件。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" />，用於讀取 XML 文件。</returns>
      <exception cref="T:System.NotImplementedException">當方法在子代類別中未覆寫時，會嘗試存取該方法。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary>在衍生類別中覆寫時，傳回用於序列化物件的寫入器。</summary>
      <returns>實作 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 類別的執行個體。</returns>
      <exception cref="T:System.NotImplementedException">當方法在子代類別中未覆寫時，會嘗試存取該方法。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>還原序列化指定 <see cref="T:System.IO.Stream" /> 所包含的 XML 文件。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含要還原序列化的 XML 文件。</param>
      <returns>要進行還原序列化的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>還原序列化指定 <see cref="T:System.IO.TextReader" /> 所包含的 XML 文件。</summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" />，包含要還原序列化的 XML 文件。</param>
      <returns>要進行還原序列化的 <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.InvalidOperationException">在還原序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary>還原序列化指定 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 所包含的 XML 文件。</summary>
      <param name="reader">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" />，包含要還原序列化的 XML 文件。</param>
      <returns>已還原序列化的物件。</returns>
      <exception cref="T:System.NotImplementedException">當方法在子代類別中未覆寫時，會嘗試存取該方法。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>還原序列化指定 <see cref="T:System.Xml.XmlReader" /> 所包含的 XML 文件。</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" />，包含要還原序列化的 XML 文件。</param>
      <returns>要進行還原序列化的 <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.InvalidOperationException">在還原序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary>還原序列化指定 <see cref="T:System.Xml.XmlReader" /> 和編碼樣式所包含的 XML 文件。</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" />，包含要還原序列化的 XML 文件。</param>
      <param name="encodingStyle">序列化 XML 的編碼樣式。</param>
      <returns>已還原序列化的物件。</returns>
      <exception cref="T:System.InvalidOperationException">在還原序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>使用指定 <see cref="T:System.Xml.XmlReader" /> 包含的資料，還原序列化物件。</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> 類別的執行個體，用於讀取文件。</param>
      <param name="encodingStyle">使用的編碼方式。</param>
      <param name="events">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 類別的執行個體。</param>
      <returns>正在還原序列化的物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>還原序列化指定 <see cref="T:System.Xml.XmlReader" /> 包含的 XML 文件，並允許覆寫還原序列化期間發生的事件。</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" />，包含要還原序列化的文件。</param>
      <param name="events">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 類別的執行個體。</param>
      <returns>要進行還原序列化的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary>傳回建立自 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件陣列的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 物件陣列。</summary>
      <param name="mappings">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 陣列，將一個型別對應至另一個型別。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件的陣列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary>傳回指定對應的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別執行個體。</summary>
      <param name="mappings">
        <see cref="T:System.Xml.Serialization.XmlMapping" /> 物件的陣列。</param>
      <param name="type">還原序列化物件的 <see cref="T:System.Type" />。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的執行個體。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>傳回由型別陣列建立的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件的陣列。</summary>
      <param name="types">
        <see cref="T:System.Type" /> 物件的陣列。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件的陣列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary>傳回組件名稱，該組件包含一個或多個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 版本，是為序列化或還原序列化特定型別建立的。</summary>
      <param name="type">正在還原序列化的 <see cref="T:System.Type" />。</param>
      <returns>組件名稱，該組件包含型別的 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary>傳回組件名稱，該組件包含指定命名空間中指定型別的序列化程式。</summary>
      <param name="type">您所要的 <see cref="T:System.Type" />。</param>
      <param name="defaultNamespace">型別的命名空間。</param>
      <returns>組件名稱，該組件包含特別建置的序列化程式。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>序列化指定的 <see cref="T:System.Object" />，並使用指定的 <see cref="T:System.IO.Stream" /> 將 XML 文件寫入檔案。</summary>
      <param name="stream">用來寫入 XML 文件的 <see cref="T:System.IO.Stream" />。</param>
      <param name="o">要序列化的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidOperationException">在序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>序列化指定的 <see cref="T:System.Object" />，並使用指定的 <see cref="T:System.IO.Stream" /> 將 XML 文件寫入檔案，以參考指定的命名空間。</summary>
      <param name="stream">用來寫入 XML 文件的 <see cref="T:System.IO.Stream" />。</param>
      <param name="o">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="namespaces">物件所參考的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException">在序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>序列化指定的 <see cref="T:System.Object" />，並使用指定的 <see cref="T:System.IO.TextWriter" /> 將 XML 文件寫入檔案。</summary>
      <param name="textWriter">用來寫入 XML 文件的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="o">要序列化的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>將指定的 <see cref="T:System.Object" /> 序列化，使用指定的 <see cref="T:System.IO.TextWriter" /> 將 XML 文件寫入檔案，並參考指定的命名空間。</summary>
      <param name="textWriter">用來寫入 XML 文件的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="o">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />，包含產生之 XML 文件的命名空間。</param>
      <exception cref="T:System.InvalidOperationException">在序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary>序列化指定的 <see cref="T:System.Object" />，並使用指定的 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 將 XML 文件寫入檔案。</summary>
      <param name="o">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="writer">用來寫入 XML 文件的 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</param>
      <exception cref="T:System.NotImplementedException">當方法在子代類別中未覆寫時，會嘗試存取該方法。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>序列化指定的 <see cref="T:System.Object" />，並使用指定的 <see cref="T:System.Xml.XmlWriter" /> 將 XML 文件寫入檔案。</summary>
      <param name="xmlWriter">用來寫入 XML 文件的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o">要序列化的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidOperationException">在序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>將指定的 <see cref="T:System.Object" /> 序列化，使用指定的 <see cref="T:System.Xml.XmlWriter" /> 將 XML 文件寫入檔案，並參考指定的命名空間。</summary>
      <param name="xmlWriter">用來寫入 XML 文件的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="namespaces">物件所參考的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException">在序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary>序列化指定的物件，使用指定的 <see cref="T:System.Xml.XmlWriter" /> 將 XML 文件寫入檔案，並參考指定的命名空間和編碼樣式。</summary>
      <param name="xmlWriter">用來寫入 XML 文件的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o">要序列化的物件。</param>
      <param name="namespaces">物件所參考的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <param name="encodingStyle">序列化 XML 的編碼樣式。</param>
      <exception cref="T:System.InvalidOperationException">在序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary>序列化指定的 <see cref="T:System.Object" />，並使用指定的 <see cref="T:System.Xml.XmlWriter" />、XML 命名空間和編碼方式，將 XML 文件寫入檔案。</summary>
      <param name="xmlWriter">用來寫入 XML 文件的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o">要序列化的物件。</param>
      <param name="namespaces">
        <see langword="XmlSerializerNamespaces" /> 執行個體，包含要使用的命名空間和前置詞。</param>
      <param name="encodingStyle">文件中使用的編碼方式。</param>
      <param name="id">若為 SOAP 編碼的訊息，則為用於產生 ID 屬性的基底。</param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary>當還原序列化期間，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 遭遇未知型別的 XML 屬性時發生。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary>當還原序列化期間，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 遭遇未知型別的 XML 項目時發生。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary>當還原序列化期間，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 遭遇未知型別的 XML 節點時發生。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary>在 SOAP 編碼的 XML 資料流還原序列化期間，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 遇到未使用 (未參考) 的可辨認型別時發生。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary>套用至 Web 服務用戶端 Proxy 後，就可讓您指定含有自訂序列化程式的組件。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary>使用指定的組件名稱，初始化 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 類別的新執行個體。</summary>
      <param name="assemblyName">簡單且未加密的組件名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary>使用指定的組件名稱和組件位置，初始化 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 類別的新執行個體。</summary>
      <param name="assemblyName">簡單且未加密的組件名稱。</param>
      <param name="codeBase">字串，是組件的 URL 位置。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary>取得或設定組件的名稱，此組件中含有特定型別集合的序列化程式。</summary>
      <returns>簡單且未加密的組件名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary>取得或設定包含序列化程式之組件的名稱。</summary>
      <returns>指向組件的位置，例如路徑或 URI。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary>建立具型別版本的 <see cref="T:System.Xml.Serialization.XmlSerializer" />，以進行更有效率的序列化 (Serialization)。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary>傳回用來序列化指定型別之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。</summary>
      <param name="type">要序列化的 <see cref="T:System.Type" />。</param>
      <returns>特別為序列化指定型別所建立之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary>傳回用來序列化指定型別和命名空間 (Namespace) 之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。</summary>
      <param name="type">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="defaultNamespace">用於所有 XML 項目的預設命名空間。</param>
      <returns>特別為序列化指定型別所建立之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary>傳回用來序列化指定型別之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。 如果屬性或欄位傳回陣列，<paramref name="extraTypes" /> 參數就會指定可插入陣列的物件。</summary>
      <param name="type">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="extraTypes">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>傳回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生，此類別可將指定之型別的物件序列化為 XML 文件 (反之亦然)。 每個要序列化的物件本身會包含類別執行個體，這個多載可以其他類別覆寫。</summary>
      <param name="type">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，其中含有覆寫預設序列化行為的欄位。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>傳回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生，此類別可將指定之型別的物件序列化為 XML 文件執行個體 (反之亦然)。 每個要序列化的物件本身會包含類別執行個體，這個多載可以其他類別覆寫。 這個多載也會指定所有 XML 項目的預設命名空間，以及要做為 XML 根項目的類別。</summary>
      <param name="type">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，其中含有覆寫預設序列化行為的欄位。</param>
      <param name="extraTypes">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
      <param name="root">表示 XML 根項目的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace">XML 文件中所有 XML 項目的預設命名空間。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>傳回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生，此類別可將指定之型別的物件序列化為 XML 文件執行個體 (反之亦然)。 每個要序列化的物件本身會包含類別執行個體，這個多載可以其他類別覆寫。 這個多載也會指定所有 XML 項目的預設命名空間，以及要做為 XML 根項目的類別。</summary>
      <param name="type">這個 <see cref="T:System.Type" /> 可序列化的物件 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，可延伸或覆寫在型別參數中指定的類別行為。</param>
      <param name="extraTypes">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
      <param name="root">定義 XML 根項目屬性的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace">XML 文件中所有 XML 項目的預設命名空間。</param>
      <param name="location">指定型別之位置的路徑。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>傳回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生，此類別可將指定之型別的物件序列化為 XML 文件 (反之亦然)。 指定表示 XML 根項目 (Root Element) 的物件。</summary>
      <param name="type">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="root">表示 XML 根項目的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary>使用將某個型別對應到另一個型別的物件，傳回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。</summary>
      <param name="xmlTypeMapping">將某個型別對應至另一個型別的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</param>
      <returns>特別為序列化對應型別所建立之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary>為預先產生且具類型的序列化程式定義讀取器、寫入器和方法。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary>取得可判斷某個類型是否能序列化的值。</summary>
      <param name="type">要序列化的型別。</param>
      <returns>如果類型可以序列化，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary>傳回指定類型的序列化程式。</summary>
      <param name="type">要序列化的型別。</param>
      <returns>衍生自 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的類型執行個體。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary>取得序列化程式所使用的 XML 讀取器物件。</summary>
      <returns>用來讀取 XML 文件或資料流的 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary>取得用來讀取資料流的方法集合。</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" />，其中包含方法。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary>取得具類型序列化程式的集合，此集合可在組件中找到。</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" />，其中包含具型別序列化程式。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary>取得用來寫入資料流的方法集合。</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" />，其中包含方法。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary>取得序列化程式的 XML 寫入器物件。</summary>
      <returns>用來寫入 XML 資料流或文件的 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary>表示序列化 (Serialization) 基礎結構已產生程式碼，而且在這項屬性 (Attribute) 套用至組件 (Assembly) 時，可重複使用此程式碼來提升效能。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary>為指定的型別初始化 <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> 類別的新執行個體。</summary>
      <param name="type">正在序列化的型別。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary>取得或設定組件的 Common Language Runtime (CLR) 命名空間。</summary>
      <returns>
        <see cref="T:System.String" />，包含組件的 Common Language Runtime (CLR) 命名空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary>取得或設定父組件的識別 (Identity)。</summary>
      <returns>父組件的版本。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary>取得或設定序列化程式要在其上運作的型別。</summary>
      <returns>要序列化的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary>取得或設定組件的版本號碼。</summary>
      <returns>組件的版本。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>控制由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化屬性 (Attribute) 目標後所產生的 XML 結構描述。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 類別的新執行個體，並指定 XML 型別的名稱。</summary>
      <param name="typeName">XML 型別的名稱，是 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化類別執行個體時所產生的 (並且對類別執行個體進行還原序列化時所辨識的)。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary>取得或設定值，判斷產生的結構描述型別是否為 XSD 匿名型別。</summary>
      <returns>如果產生的結構描述型別是 XSD 匿名型別則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>取得或設定值，指出是否將型別包含在 XML 結構描述文件中。</summary>
      <returns>若要將型別包含於 XML 結構描述文件中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>取得或設定 XML 型別的命名空間。</summary>
      <returns>XML 型別的命名空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>取得或設定 XML 型別的名稱。</summary>
      <returns>XML 型別的名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>包含某個類型與其他類型的對應。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>完整類型名稱，其中包含命名空間和類型。</summary>
      <returns>完整型別名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>取得對應物件的類型名稱。</summary>
      <returns>對應之物件的型別名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary>取得對應物件的 XML 項目名稱。</summary>
      <returns>對應之物件的 XML 項目名稱。 預設值為物件的類別名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary>取得對應物件的 XML 命名空間。</summary>
      <returns>對應之物件的 XML 命名空間。 預設為空字串 ("")。</returns>
    </member>
  </members>
</doc>