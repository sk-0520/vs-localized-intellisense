<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary vsli:raw="Provides a mechanism for dynamically mapping types to and from &lt;see langword=&quot;xsi:type&quot; /&gt; representations during serialization and deserialization.">提供在序列化及還原序列化期間，以動態方式來回對應型別與 <see langword="xsi:type" /> 表示的機制。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Override this method to map the specified &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace to a data contract type during deserialization.">覆寫這個方法，以便在還原序列化期間，將指定的 <see langword="xsi:type" /> 名稱和命名空間對應至資料合約型別。</summary>
      <param name="typeName" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; name to map.">要對應的 <see langword="xsi:type" /> 名稱。</param>
      <param name="typeNamespace" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; namespace to map.">要對應的 <see langword="xsi:type" /> 命名空間。</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">在資料合約中宣告的型別。</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">已知的型別解析程式。</param>
      <returns vsli:raw="The type the &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace is mapped to.">
        <see langword="xsi:type" /> 名稱和命名空間所對應的型別。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Override this method to map a data contract type to an &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace during serialization.">覆寫這個方法，以便在序列化期間，將資料合約型別對應至 <see langword="xsi:type" /> 名稱和命名空間。</summary>
      <param name="type" vsli:raw="The type to map.">要對應的型別。</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">在資料合約中宣告的型別。</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">已知的型別解析程式。</param>
      <param name="typeName" vsli:raw="The xsi:type name.">xsi:type 名稱。</param>
      <param name="typeNamespace" vsli:raw="The xsi:type namespace.">xsi:type 命名空間。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if mapping succeeded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果對應成功，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary vsli:raw="Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited.">將某個型別的執行個體序列化及還原序列化成使用所提供資料合約的 XML 資料流或文件。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">已序列化或還原序列化之執行個體的型別。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件，以及可能存在物件圖形中的已知型別集合。</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">已序列化或還原序列化之執行個體的型別。</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的型別。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and settings.">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別及設定的物件。</summary>
      <param name="type" vsli:raw="The type of the instance to serialize or deserialize.">要序列化或還原序列化之執行個體的型別。</param>
      <param name="settings" vsli:raw="The serializer settings.">序列化程式設定。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以便序列化或還原序列化已指定型別的物件 (該型別會使用提供的 XML 根項目和命名空間)。</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">已序列化或還原序列化之執行個體的型別。</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">內含要序列化或還原序列化之內容的 XML 項目名稱。</param>
      <param name="rootNamespace" vsli:raw="The namespace of the XML element that encloses the content to serialize or deserialize.">內含要序列化或還原序列化之內容的 XML 項目命名空間。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。 這個方法也會透過兩個字串參數來指定根 XML 項目和命名空間，以及可能存在於物件圖形內之已知型別的清單。</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">已序列化或還原序列化之執行個體的型別。</param>
      <param name="rootName" vsli:raw="The root element name of the content.">內容的根項目名稱。</param>
      <param name="rootNamespace" vsli:raw="The namespace of the root element.">根項目的命名空間。</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的型別。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以便序列化或還原序列化所指定型別的物件 (該型別會使用透過型別 <see cref="T:System.Xml.XmlDictionaryString" /> 之參數所指定的 XML 根項目和命名空間)。</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">已序列化或還原序列化之執行個體的型別。</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">
        <see cref="T:System.Xml.XmlDictionaryString" />，其中包含內容的根項目名稱。</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">
        <see cref="T:System.Xml.XmlDictionaryString" />，其中包含根項目的命名空間。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; parameters as well as a list of known types that may be present in the object graph.">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。 這個方法也會透過兩個 <see cref="T:System.Xml.XmlDictionaryString" /> 參數來指定根 XML 項目和命名空間，以及可能存在於物件圖形內之已知型別的清單。</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">已序列化或還原序列化之執行個體的型別。</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">
        <see cref="T:System.Xml.XmlDictionaryString" />，其中包含內容的根項目名稱。</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">
        <see cref="T:System.Xml.XmlDictionaryString" />，其中包含根項目的命名空間。</param>
      <param name="knownTypes" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the known types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
      <summary vsli:raw="Gets the component used to dynamically map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known contract types.">取得用來將 <see langword="xsi:type" /> 宣告動態對應至已知合約型別的元件。</summary>
      <returns vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 類別的實作。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">取得值，這個值會指定當類別序列化或還原序列化時，是否略過類別延伸所提供的資料。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to omit the extension data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果要省略延伸資料則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned on an object that can be deserialized.">判斷 <see cref="T:System.Xml.XmlDictionaryReader" /> 是否置於可還原序列化的物件上。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">用於讀取 XML 資料流的 <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果讀取器位於要讀取之資料流的開始項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">判斷 <see cref="T:System.Xml.XmlReader" /> 是否置於可還原序列化的物件上。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">用來讀取 XML 資料流的 <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果讀取器位於要讀取之資料流的開始項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">取得型別的集合，這些型別可能會存在於使用這個 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 執行個體所序列化的物件圖形中。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; constructor.">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />，其中包含已當做已知型別傳入至 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 建構函式的預期型別。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph to serialize or deserialize.">取得物件圖形中要序列化或還原序列化的最大項目數。</summary>
      <returns vsli:raw="The maximum number of items to serialize or deserialize. The default is &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">要序列化或還原序列化的最大項目數。 預設為 <see cref="F:System.Int32.MaxValue" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">超過最大值的項目數。</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary vsli:raw="Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">取得值，這個值會指定是否使用非標準的 XML 建構來保留物件參考資料。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果要保留參考，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 讀取 XML 資料流並傳回已還原序列化的物件，同時指定是否要先確認物件名稱，再讀取其值。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">用來讀取 XML 資料流的 <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果要檢查物件的名稱是否對應到建構函式中所提供的根名稱值，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <returns vsli:raw="The deserialized object.">已還原序列化的物件。</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">當 <paramref name="verifyObjectName" /> 參數設定為 <see langword="true" />，而項目名稱和命名空間並未對應到建構函式中之設定值的情況下。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Reads an XML document or document stream and returns the deserialized object.  The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">讀取 XML 文件或文件資料流，然後傳回已還原序列化的物件。  這個方法包含一個參數 (指定要驗證的物件名稱是否已驗證)，以及在執行階段對應 <see langword="xsi:type" /> 宣告的解析程式。</summary>
      <param name="reader" vsli:raw="The XML reader used to read the content.">用於讀取內容的 XML 讀取器。</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to verify the object name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示驗證物件名稱；否則為 <see langword="false" />。</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to data contract types.">
        <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的實作，用來將 <see langword="xsi:type" /> 宣告對應至資料合約型別。</param>
      <returns vsli:raw="The deserialized object.">已還原序列化的物件。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">使用 <see cref="T:System.Xml.XmlReader" /> 讀取 XML 資料流，然後傳回已還原序列化的物件。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">用來讀取 XML 資料流的 <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="The deserialized object.">已還原序列化的物件。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">使用 <see cref="T:System.Xml.XmlReader" /> 讀取 XML 資料流並傳回已還原序列化的物件，同時指定是否要先確認物件名稱，再讀取其值。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">用來讀取 XML 資料流的 <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果要檢查物件的名稱是否對應到建構函式中所提供的根名稱值，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <returns vsli:raw="The deserialized object.">已還原序列化的物件。</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">當 <paramref name="verifyObjectName" /> 參數設定為 <see langword="true" />，而項目名稱和命名空間並未對應到建構函式中之設定值的情況下。</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets a value that specifies whether read-only types are serialized.">取得值，指定是否序列化唯讀型別。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if read-only types are serialized; &lt;see langword=&quot;false&quot; /&gt; if all types are serialized.">如果唯讀型別已序列化，則為 <see langword="true" />，如果所有型別已序列化，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入結尾 XML 項目。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">用於寫入資料流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">正在寫入的執行個體發生問題。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">使用 <see cref="T:System.Xml.XmlWriter" /> 寫入結尾 XML 項目。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">用於寫入資料流的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">正在寫入的執行個體發生問題。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter. The method includes a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">使用指定的 XmlDictionaryWriter，將所有的物件資料 (起始 XML 項目、內容及封入項目) 寫入至 XML 文件或資料流。 此方法包括在執行階段對應 <see langword="xsi:type" /> 宣告的解析程式。</summary>
      <param name="writer" vsli:raw="An XmlDictionaryWriter used to write the content to the XML document or stream.">XmlDictionaryWriter，用來將內容寫入至 XML 文件或資料流。</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">包含要寫入之內容的物件。</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; used to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known data contracts.">
        <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的實作，用來將 <see langword="xsi:type" /> 宣告對應至已知的資料合約。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">使用 <see cref="T:System.Xml.XmlWriter" />，將所有的物件資料 (起始 XML 項目、內容以及結尾項目) 寫入至 XML 文件或資料流。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">用於寫入 XML 文件或資料流的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">包含要寫入至資料流之資料的物件。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">正在寫入的執行個體發生問題。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入 XML 內容。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">用於寫入資料流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph" vsli:raw="The object to write to the stream.">要寫入至資料流的物件。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">正在寫入的執行個體發生問題。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">使用 <see cref="T:System.Xml.XmlWriter" /> 寫入 XML 內容。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">用於寫入資料流的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object to write to the stream.">要寫入至資料流的物件。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">正在寫入的執行個體發生問題。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入開頭 XML 項目。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">用於寫入 XML 開始項目的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph" vsli:raw="The object to write.">要寫入的物件。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">使用 <see cref="T:System.Xml.XmlWriter" /> 寫入開頭 XML 項目。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">用於寫入 XML 開始項目的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object to write.">要寫入的物件。</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerExtensions">
      <summary vsli:raw="Extends the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class by providing methods for setting and getting an &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogateProvider&quot; /&gt;.">提供設定和取得 <see cref="T:System.Runtime.Serialization.ISerializationSurrogateProvider" /> 的方法，以擴充 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
      <summary vsli:raw="Returns the surrogate serialization provider for this serializer.">傳回此序列化程式的代理序列化提供者。</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">要被代理的序列化程式。</param>
      <returns vsli:raw="The surrogate serializer.">代理序列化程式。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
      <summary vsli:raw="Specifies a surrogate serialization provider for this &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">指定此 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 的代理序列化提供者。</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">要被代理的序列化程式。</param>
      <param name="provider" vsli:raw="The surrogate serialization provider.">代理序列化提供者。</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerSettings">
      <summary vsli:raw="Specifies data contract serializer settings.">指定資料合約序列化程式設定。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializerSettings&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver">
      <summary vsli:raw="Gets or sets the component used to dynamically map xsi:type declarations to known contract types.">取得或設定用於將 xsi:type 宣告動態對應至已知合約型別的元件。</summary>
      <returns vsli:raw="The component used to dynamically map xsi:type declarations to known contract types.">用於將 xsi:type 宣告動態對應至已知合約型別的元件。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">取得或設定值，這個值會指定當類別序列化或還原序列化時，是否略過類別延伸所提供的資料。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示當類別序列化或還原序列化時，是否略過類別延伸所提供的資料，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">取得或設定型別的集合，這些型別可能會存在於使用這個 DataContractSerializerSettings 執行個體所序列化的物件圖形中。</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">型別的集合，這些型別可能會存在於使用這個 DataContractSerializerSettings 執行個體所序列化的物件圖形中。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">取得或設定物件圖形中要序列化或還原序列化的最大項目數。</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">物件圖形中要序列化或還原序列化的最大項目數。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences">
      <summary vsli:raw="Gets or sets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">取得或設定值，這個值會指定是否使用非標準的 XML 建構來保留物件參考資料。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use non-standard XML constructs to preserve object reference data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果要使用非標準的 XML 建構來保留物件參考資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">取得或設定所選取物件的根名稱。</summary>
      <returns vsli:raw="The root name of the selected object.">所選物件的根名稱。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace">
      <summary vsli:raw="Gets or sets the root namespace for the specified object.">取得或設定指定物件的根命名空間。</summary>
      <returns vsli:raw="The root namespace for the specified object.">指定之物件的根命名空間。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">取得或設定值，指定是否要序列化唯讀型別。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示序列化唯讀型別，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExportOptions">
      <summary vsli:raw="Represents the options that can be set for an &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">表示 <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 可以設定的選項。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ExportOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Serialization.ExportOptions" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.KnownTypes">
      <summary vsli:raw="Gets the collection of types that may be encountered during serialization or deserialization.">取得型別集合，這個集合可能會在序列化或還原序列化期間遇到。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;KnownTypes&quot; /&gt; collection that contains types that may be encountered during serialization or deserialization. XML schema representations are exported for all the types specified in this collection by the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">
        <see langword="KnownTypes" /> 集合，其中包含可能會在序列化或還原序列化期間遇到的型別。 在這個集合中由 <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 指定之所有型別的 XML 結構描述表示都會匯出。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExtensionDataObject">
      <summary vsli:raw="Stores data from a versioned data contract that has been extended by adding new members.">儲存已建立版本之資料合約的資料，此資料合約已因加入新成員而得到擴充。</summary>
    </member>
    <member name="T:System.Runtime.Serialization.IExtensibleDataObject">
      <summary vsli:raw="Provides a data structure to store extra data encountered by the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; during deserialization of a type marked with the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute.">提供資料結構，以便儲存 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 在還原序列化標記有 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性的型別時所遇到的額外資料。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData">
      <summary vsli:raw="Gets or sets the structure that contains extra data.">取得或設定包含額外資料的結構。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExtensionDataObject&quot; /&gt; that contains data that is not recognized as belonging to the data contract.">
        <see cref="T:System.Runtime.Serialization.ExtensionDataObject" />，其中包含不會辨識成屬於資料合約的資料。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary vsli:raw="Provides the base class used to serialize objects as XML streams or documents. This class is abstract.">提供用來將物件序列化為 XML 資料流或文件的基底類別。 這個類別是抽象的。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that can be read.">取得值，這個值會指定 <see cref="T:System.Xml.XmlDictionaryReader" /> 是否位於能夠讀取的 XML 項目上。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream or document.">
        <see cref="T:System.Xml.XmlDictionaryReader" />，用於讀取 XML 資料流或文件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can read the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果讀取器可以讀取資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned over an XML element that can be read.">取得值，這個值會指定 <see cref="T:System.Xml.XmlReader" /> 是否位於能夠讀取的 XML 項目上。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">
        <see cref="T:System.Xml.XmlReader" />，用於讀取 XML 資料流或文件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned over the starting element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果讀取器位於起始項目上，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads the XML stream or document with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and returns the deserialized object.">使用 <see cref="T:System.IO.Stream" /> 讀取 XML 資料流或文件，然後傳回已還原序列化的物件。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to read the XML stream or document.">
        <see cref="T:System.IO.Stream" />，用於讀取 XML 資料流或文件。</param>
      <returns vsli:raw="The deserialized object.">已還原序列化的物件。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 讀取 XML 文件或資料流，然後傳回已還原序列化的物件。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">
        <see cref="T:System.Xml.XmlDictionaryReader" />，用於讀取 XML 文件。</param>
      <returns vsli:raw="The deserialized object.">已還原序列化的物件。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream or document with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 讀取 XML 資料流或文件，然後傳回已還原序列化的物件；它也可以讓您指定序列化程式在嘗試讀取資料前是否能夠讀取資料。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">
        <see cref="T:System.Xml.XmlDictionaryReader" />，用於讀取 XML 文件。</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">若要檢查內含的 XML 項目名稱和命名空間是否對應至根名稱以及根命名空間，則為 <see langword="true" />，否則為 <see langword="false" />，將會略過驗證。</param>
      <returns vsli:raw="The deserialized object.">已還原序列化的物件。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">使用 <see cref="T:System.Xml.XmlReader" /> 讀取 XML 文件或資料流，然後傳回已還原序列化的物件。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">
        <see cref="T:System.Xml.XmlReader" />，用於讀取 XML 資料流或文件。</param>
      <returns vsli:raw="The deserialized object.">已還原序列化的物件。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">使用 <see cref="T:System.Xml.XmlReader" /> 讀取 XML 文件或資料流，然後傳回已還原序列化的物件；它也可以讓您指定序列化程式在嘗試讀取資料前是否能夠讀取資料。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document or stream.">
        <see cref="T:System.Xml.XmlReader" />，用於讀取 XML 文件或資料流。</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">若要檢查內含的 XML 項目名稱和命名空間是否對應至根名稱以及根命名空間，則為 <see langword="true" />，否則為 <see langword="false" />，將會略過驗證。</param>
      <returns vsli:raw="The deserialized object.">已還原序列化的物件。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">使用 <see cref="T:System.Xml.XmlDictionaryWriter" />，將物件資料的結尾當做結尾 XML 項目寫入至 XML 文件或資料流。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">用來撰寫 XML 文件或資料流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">正在序列化的執行個體發生問題。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">已超過要序列化的物件數目上限。 檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">使用 <see cref="T:System.Xml.XmlWriter" />，將物件資料的結尾當做結尾 XML 項目寫入至 XML 文件或資料流。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">用來撰寫 XML 文件或資料流的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">正在序列化的執行個體發生問題。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">已超過要序列化的物件數目上限。 檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">使用指定的 <see cref="T:System.IO.Stream" />，將物件的完整內容 (開始、內容和結束) 寫入至 XML 文件或資料流。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.IO.Stream" />，用於寫入 XML 文件或資料流。</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">包含要寫入至資料流之資料的物件。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">正在序列化的執行個體發生問題。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">已超過要序列化的物件數目上限。 檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" />，將物件的完整內容 (開始、內容和結束) 寫入至 XML 文件或資料流。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the content to the XML document or stream.">
        <see cref="T:System.Xml.XmlDictionaryWriter" />，用來將內容寫入至 XML 文件或資料流。</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">包含要寫入之內容的物件。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">正在序列化的執行個體發生問題。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">已超過要序列化的物件數目上限。 檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlWriter" />，將物件的完整內容 (開始、內容和結束) 寫入至 XML 文件或資料流。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">用來撰寫 XML 文件或資料流的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">包含要寫入之內容的物件。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">正在序列化的執行個體發生問題。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">已超過要序列化的物件數目上限。 檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" />，只將物件內容寫入至 XML 文件或資料流。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">用來撰寫 XML 文件或資料流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">包含要寫入之內容的物件。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">正在序列化的執行個體發生問題。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">已超過要序列化的物件數目上限。 檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlWriter" />，只將物件內容寫入至 XML 文件或資料流。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">用來撰寫 XML 文件或資料流的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">包含要寫入之內容的物件。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">正在序列化的執行個體發生問題。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">已超過要序列化的物件數目上限。 檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" />，將物件資料的開始內容當做開頭 XML 項目寫入。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlDictionaryWriter" />，用於寫入 XML 文件。</param>
      <param name="graph" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">正在序列化的執行個體發生問題。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">已超過要序列化的物件數目上限。 檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlWriter" />，將物件資料的開始內容當做開頭 XML 項目寫入。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" />，用於寫入 XML 文件。</param>
      <param name="graph" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">正在序列化的型別不符合資料合約規則。 例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">正在序列化的執行個體發生問題。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">已超過要序列化的物件數目上限。 檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XmlSerializableServices">
      <summary vsli:raw="Contains methods for reading and writing XML.">包含讀取和寫入 XML 的方法。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates a default schema type given the specified type name and adds it to the specified schema set.">產生採用已指定類別名稱的預設結構描述型別，並將它新增至指定的結構描述集合。</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to add the generated schema type to.">要新增所產生結構描述型別的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="typeQName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the type name to assign the schema to.">
        <see cref="T:System.Xml.XmlQualifiedName" />，它會指定要將結構描述指派到其中的型別名稱。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;schemas&quot; /&gt; or &lt;paramref name=&quot;typeQName&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemas" /> 或 <paramref name="typeQName" /> 引數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)">
      <summary vsli:raw="Reads a set of XML nodes from the specified reader and returns the result.">從指定的讀取器讀取 XML 節點集合，並傳回結果。</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used for reading.">用於讀取的 <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">類型為 <see cref="T:System.Xml.XmlNode" /> 的陣列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlReader&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> 引數為 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="While reading, a &lt;see langword=&quot;null&quot; /&gt; node was encountered.">進行讀取時遇到 <see langword="null" /> 節點。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])">
      <summary vsli:raw="Writes the supplied nodes using the specified writer.">使用指定的寫入器，寫入提供的節點。</summary>
      <param name="xmlWriter" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used for writing.">用於寫入的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="nodes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write.">要寫入的 <see cref="T:System.Xml.XmlNode" /> 型別陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlWriter&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> 引數為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XPathQueryGenerator">
      <summary vsli:raw="When given a class representing a data contract, and metadata representing a member of the contract, produces an XPath query for the member.">當提供代表資料合約的類別，以及代表合約成員的中繼資料時，會產生該成員的 XPath 查詢。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Text.StringBuilder,System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified contract data type, array of metadata elements, the top level element, and namespaces.">使用指定的資料合約型別、中繼資料項目陣列、最上層項目及命名空間，從資料合約建立 XPath。</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">代表資料合約的型別。</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">使用 <see cref="Overload:System.Type.GetMember" /> 類別之 <see cref="T:System.Type" /> 方法產生的中繼資料，會指向用來產生查詢的特定資料成員。</param>
      <param name="rootElementXpath" vsli:raw="The top level element in the xpath.">XPath 中的最上層項目</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">在資料合約中找到的 XML 命名空間及其前置詞。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />
從型別和成員資料產生的 XPath。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified data contract type, array of metadata elements, and namespaces.">使用指定的資料合約類型、中繼資料項目陣列及命名空間，從資料合約建立 XPath。</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">代表資料合約的型別。</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">使用 <see cref="Overload:System.Type.GetMember" /> 類別之 <see cref="T:System.Type" /> 方法產生的中繼資料，會指向用來產生查詢的特定資料成員。</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">在資料合約中找到的 XML 命名空間及其前置詞。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />
從型別和成員資料產生的 XPath。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractExporter">
      <summary vsli:raw="Allows the transformation of a set of .NET types that are used in data contracts into an XML schema file (.xsd).">允許將資料合約中使用的 .NET Framework 類型集合轉換成 XML 結構描述檔案 (.xsd)。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class with the specified set of schemas.">使用指定的結構描述集合，初始化 <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 類別的新執行個體。</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas to be exported.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />，其中包含要匯出的結構描述。</param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.">取得值，這個值表示是否能夠匯出包含在組件集合中的 Common Language Runtime (CLR) 類型集合。</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; that contains the assemblies with the types to export.">
        <see cref="T:System.Reflection.Assembly" /> 的 <see cref="T:System.Collections.Generic.ICollection`1" />，其中包含具有要匯出之類型的組件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果能夠匯出類型，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; can be exported.">取得值，這個值表示是否能夠匯出包含在 <see cref="T:System.Collections.Generic.ICollection`1" /> 中的 Common Language Runtime (CLR) 類型集合。</summary>
      <param name="types" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; that contains the specified types to export.">
        <see cref="T:System.Collections.Generic.ICollection`1" />，其中包含要匯出的指定類型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果能夠匯出類型，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
      <summary vsli:raw="Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.">取得值，這個值表示是否能夠匯出指定的 Common Language Runtime (CLR) 類型。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to export.">要匯出的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果能夠匯出類型，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Transforms the types contained in the specified collection of assemblies.">轉換包含在指定組件集合中的類型。</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;) that contains the types to export.">
        <see cref="T:System.Collections.Generic.ICollection`1" /> (屬於 <see cref="T:System.Reflection.Assembly" />)，其中包含要匯出的類型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assemblies&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblies" /> 引數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; in the collection is &lt;see langword=&quot;null&quot; /&gt;.">在集合中的 <see cref="T:System.Reflection.Assembly" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Transforms the types contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; passed to this method.">轉換已傳遞到這個方法之 <see cref="T:System.Collections.Generic.ICollection`1" /> 中所包含的類型。</summary>
      <param name="types" vsli:raw="A  &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Type&quot; /&gt;) that contains the types to export.">
        <see cref="T:System.Collections.Generic.ICollection`1" /> (屬於 <see cref="T:System.Type" />)，其中包含要匯出的類型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;types&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="types" /> 引數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A type in the collection is &lt;see langword=&quot;null&quot; /&gt;.">在集合中的類型為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
      <summary vsli:raw="Transforms the specified .NET Framework type into an XML schema definition language (XSD) schema.">將指定的 .NET Framework 類型轉換成 XML 結構描述定義語言 (XSD) 結構描述。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to transform into an XML schema.">要轉換成 XML 結構描述的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 引數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
      <summary vsli:raw="Returns the top-level name and namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">傳回 <see cref="T:System.Type" /> 的最上層名稱和命名空間。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to query.">要查詢的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the top-level name and namespace for this &lt;see cref=&quot;T:System.Type&quot; /&gt;, which is written to the stream when writing this object.">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示這個 <see cref="T:System.Type" /> 的最上層名稱和命名空間，而這個類型會在進行寫入這個物件時被寫入至資料流。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 引數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
      <summary vsli:raw="Returns the XML schema type for the specified type.">傳回指定類型的 XML 結構描述類型。</summary>
      <param name="type" vsli:raw="The type to return a schema for.">要傳回結構描述的類型。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; that contains the XML schema.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" />，其中包含 XML 結構描述。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 引數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
      <summary vsli:raw="Returns the contract name and contract namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">傳回 <see cref="T:System.Type" /> 的合約名稱以及合約命名空間。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that was exported.">已匯出的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the contract name of the type and its namespace.">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示類型的合約名稱及其命名空間。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 引數為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options that can be set for the export operation.">取得或設定 <see cref="T:System.Runtime.Serialization.ExportOptions" />，其中包含能夠針對匯出作業進行設定的選項。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options used to customize how types are exported to schemas.">
        <see cref="T:System.Runtime.Serialization.ExportOptions" />，其中包含用來自訂如何將型別匯出至結構描述的選項。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
      <summary vsli:raw="Gets the collection of exported XML schemas.">取得已匯出之 XML 結構描述的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas transformed from the set of common language runtime (CLR) types after calling the &lt;see cref=&quot;Overload:System.Runtime.Serialization.XsdDataContractExporter.Export&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />，其中包含在呼叫 <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> 方法後，從 Common Language Runtime (CLR) 型別集合轉換來的結構描述。</returns>
    </member>
    <member name="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
      <summary vsli:raw="Contains properties and methods that when implemented by a &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, allows processing of XML fragments.">包含在經由 <see cref="T:System.Xml.XmlDictionaryWriter" /> 實作之後即可用來處理 XML 片段的屬性和方法。</summary>
    </member>
    <member name="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments.">取得值，這個值會指出這個 <see cref="T:System.Xml.XmlDictionaryWriter" /> 是否可以處理 XML 片段。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個 <see cref="T:System.Xml.XmlDictionaryWriter" /> 可以處理 XML 片段，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
      <summary vsli:raw="Ends the processing of an XML fragment.">結束 XML 片段的處理。</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Starts the processing of an XML fragment.">開始處理 XML 片段。</summary>
      <param name="stream" vsli:raw="The stream to write to.">要寫入的資料流。</param>
      <param name="generateSelfContainedTextFragment" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, any namespaces declared outside the fragment is declared again if used inside of it; if &lt;see langword=&quot;false&quot; /&gt; the namespaces are not declared again.">如果為 <see langword="true" />，則會重新宣告任何已在片段內使用、但卻是在該片段外部宣告的命名空間；如果為 <see langword="false" />，則不會重新宣告命名空間。</param>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes an XML fragment to the underlying stream of the writer.">將 XML 片段寫入至寫入器的基礎資料流。</summary>
      <param name="buffer" vsli:raw="The buffer to write to.">要寫入的緩衝區。</param>
      <param name="offset" vsli:raw="The starting position from which to write in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行寫入的起始位置。</param>
      <param name="count" vsli:raw="The number of bytes to be written to the &lt;paramref name=&quot;buffer&quot; /&gt;.">要寫入至 <paramref name="buffer" /> 的位元組數目。</param>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary vsli:raw="Represents an interface that can be implemented by classes providing streams.">表示可由類別提供資料流實作的介面。</summary>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary vsli:raw="Gets a stream.">取得資料流。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">
        <see cref="T:System.IO.Stream" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary vsli:raw="Releases a stream to output.">釋放要輸出的資料流。</summary>
      <param name="stream" vsli:raw="The stream being released.">釋放的字串。</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryReaderInitializer">
      <summary vsli:raw="Provides methods for reinitializing a binary reader to read a new document.">提供用來重新初始化二進位讀取器的方法，以便讀取新文件。</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input buffer.">使用指定的輸入緩衝區，重新初始化二進位讀取器。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行讀取的起始位置。</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">可以從 <paramref name="buffer" /> 中讀取的位元組數目。</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">要套用的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlBinaryReaderSession" />。</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">關閉讀取器時要呼叫的委派。</param>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input stream.">使用指定的輸入資料流，重新初始化二進位讀取器。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">要從其中讀取的資料流。</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">要套用的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlBinaryReaderSession" />。</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">關閉讀取器時要呼叫的委派。</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML binary writers that derive from this interface.">指定衍生自此介面之 XML 二進位寫入器的實作需求。</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryWriterInitializer.SetOutput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML binary writers that implement this method.">指定實作這個方法之 XML 二進位寫入器的初始化需求。</summary>
      <param name="stream" vsli:raw="The stream to write to.">要寫入的資料流。</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlBinaryWriterSession" />。</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 以指出寫入器會在完成時關閉資料流；否則為 <see langword="false" />。</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary vsli:raw="An &lt;see langword=&quot;interface&quot; /&gt; that defines the contract that an Xml dictionary must implement to be used by &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; implementations.">
        <see langword="interface" />，定義 Xml 字典必須實作供 <see cref="T:System.Xml.XmlDictionaryReader" /> 和 <see cref="T:System.Xml.XmlDictionaryWriter" /> 實作 (Implementation) 使用的合約。</summary>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">嘗試在字典中查詢項目。</summary>
      <param name="key" vsli:raw="Key to look up.">要查詢的索引鍵。</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">如果 <paramref name="key" /> 已定義，則為對應到此索引鍵的 <see cref="T:System.Xml.XmlDictionaryString" />，否則為 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果機碼存在於字典中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">檢查字典是否有指定的字串值。</summary>
      <param name="value" vsli:raw="String value being checked for.">正在檢查的字串值。</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果有找到，則為對應的 <see cref="T:System.Xml.XmlDictionaryString" />；否則為 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個值存在於字典中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">檢查字典是否有指定的 <see cref="T:System.Xml.XmlDictionaryString" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">正在檢查的 <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果有找到，則為相符的 <see cref="T:System.Xml.XmlDictionaryString" />；否則為 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 存在於字典中，則為 <see cref="T:System.Xml.XmlDictionaryString" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.IXmlTextReaderInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text readers that derive from this interface.">指定衍生自此介面之 XML 文字讀取器的實作需求。</summary>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a buffer.">指定讀取緩衝區之 XML 文字讀取器的初始化需求。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行讀取的起始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">可以從 <paramref name="buffer" /> 中讀取的位元組數目。</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">資料流的字元編碼。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">要套用的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">關閉讀取器時要呼叫的委派。</param>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a stream.">指定讀取資料流之 XML 文字讀取器的初始化需求。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">要從其中讀取的資料流。</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">資料流的字元編碼。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">要套用的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">關閉讀取器時要呼叫的委派。</param>
    </member>
    <member name="T:System.Xml.IXmlTextWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text writers that derive from this interface.">指定衍生自此介面之 XML 文字寫入器的實作需求。</summary>
    </member>
    <member name="M:System.Xml.IXmlTextWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML text writers that implement this method.">指定實作這個方法之 XML 文字寫入器的初始化需求。</summary>
      <param name="stream" vsli:raw="The stream to write to.">要寫入的資料流。</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">資料流的字元編碼。</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 以指出寫入器會在完成時關閉資料流；否則為 <see langword="false" />。</param>
    </member>
    <member name="T:System.Xml.OnXmlDictionaryReaderClose">
      <summary vsli:raw="&lt;see langword=&quot;delegate&quot; /&gt; for a callback method when closing the reader.">在關閉讀取器時用於回呼方法的 <see langword="delegate" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that fires the &lt;c&gt;OnClose&lt;/c&gt; event.">引發 <c>OnClose</c> 事件的 <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary vsli:raw="A unique identifier optimized for Guids.">GUID 的最佳化唯一識別項。</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary vsli:raw="Creates a new instance of this class with a new, unique Guid.">使用新的唯一 GUID，建立這個類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary vsli:raw="Creates a new instance of this class using a byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">使用表示 <see cref="T:System.Guid" /> 的位元組陣列，建立這個類別的新執行個體。</summary>
      <param name="guid" vsli:raw="A byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">表示 <see cref="T:System.Guid" /> 的位元組陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; provides less than 16 valid bytes.">
        <paramref name="guid" /> 會提供 16 個以下的有效位元組。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">從表示 <see langword="byte" /> 之 <see cref="T:System.Guid" /> 陣列中的位移 (Offset) 開始，建立這個類別的新執行個體。</summary>
      <param name="guid" vsli:raw="A &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">表示 <see langword="byte" /> 的 <see cref="T:System.Guid" /> 陣列。</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">表示 <see langword="byte" /> 之 <see cref="T:System.Guid" /> 陣列內的位移位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> 小於零或大於陣列長度。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> 和 <paramref name="offset" /> 提供 16 個以下的有效位元組。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;char&quot; /&gt; using a specified number of entries.">從 <see langword="char" /> 中的位移開始，使用指定之數目的項目，建立這個類別的新執行個體。</summary>
      <param name="chars" vsli:raw="A &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">表示 <see langword="char" /> 的 <see cref="T:System.Guid" /> 陣列。</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">表示 <see langword="char" /> 之 <see cref="T:System.Guid" /> 陣列內的位移位置。</param>
      <param name="count" vsli:raw="Number of array entries to use, starting from &lt;paramref name=&quot;offset&quot; /&gt;.">要使用的陣列項目數目，從 <paramref name="offset" /> 開始算起。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; less than zero or greater than the length of the array minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 小於零或大於陣列長度。
-或-
<paramref name="count" /> 小於零或大於陣列長度減去 <paramref name="offset" />。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; equals zero.">
        <paramref name="count" /> 等於零。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary vsli:raw="Creates a new instance of this class using a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">使用 <see cref="T:System.Guid" />，建立這個類別的新執行個體。</summary>
      <param name="guid" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of this class using a string.">使用字串，建立這個類別的新執行個體。</summary>
      <param name="value" vsli:raw="A string used to generate the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">用來產生 <see cref="T:System.Xml.UniqueId" /> 的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.FormatException" vsli:raw="Length of &lt;paramref name=&quot;value&quot; /&gt; is zero.">
        <paramref name="value" /> 的長度為零。</exception>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary vsli:raw="Gets the length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">取得 <see cref="T:System.Xml.UniqueId" /> 之字串表示的長度。</summary>
      <returns vsli:raw="The length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">
        <see cref="T:System.Xml.UniqueId" /> 之字串表示的長度。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary vsli:raw="Tests whether an object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">測試物件是否等於這個 <see cref="T:System.Xml.UniqueId" />。</summary>
      <param name="obj" vsli:raw="The object to compare.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果物件等於這個 <see cref="T:System.Xml.UniqueId" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary vsli:raw="Creates a hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">建立這個 <see cref="T:System.Xml.UniqueId" /> 的雜湊程式碼表示。</summary>
      <returns vsli:raw="An integer hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">這個 <see cref="T:System.Xml.UniqueId" /> 的整數雜湊程式碼表示。</returns>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">指出 <see cref="T:System.Xml.UniqueId" /> 是否為 <see cref="T:System.Guid" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.UniqueId" /> 是 <see cref="T:System.Guid" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for equality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">覆寫等號比較運算子，以測試兩個 <see cref="T:System.Xml.UniqueId" /> 是否相等。</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">第一個 <see cref="T:System.Xml.UniqueId" />。</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">第二個 <see cref="T:System.Xml.UniqueId" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s are equal, or are both &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if they are not equal, or if only one of them is &lt;see langword=&quot;null&quot; /&gt;.">如果兩個 <see langword="true" /> 相等或都是 <see cref="T:System.Xml.UniqueId" />，則為 <see langword="null" />；如果不相等或其中一個是 <see langword="false" />，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for inequality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">覆寫等號比較運算子，測試兩個 <see cref="T:System.Xml.UniqueId" /> 是否不相等。</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">第一個 <see cref="T:System.Xml.UniqueId" />。</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">第二個 <see cref="T:System.Xml.UniqueId" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the overridden equality operator returns &lt;see langword=&quot;false&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果覆寫的等號比較運算子傳回 <see langword="true" />，則為 <see langword="false" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary vsli:raw="Puts the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value into a &lt;see langword=&quot;char&quot; /&gt; array.">將 <see cref="T:System.Xml.UniqueId" /> 值置入 <see langword="char" /> 陣列。</summary>
      <param name="chars" vsli:raw="The &lt;see langword=&quot;char&quot; /&gt; array.">
        <see langword="char" /> 陣列。</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;char&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">
        <see langword="char" /> 陣列中要開始插入 <see cref="T:System.Xml.UniqueId" /> 值的位置。</param>
      <returns vsli:raw="Number of entries in the &lt;see langword=&quot;char&quot; /&gt; array filled by the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">
        <see langword="char" /> 陣列中由 <see cref="T:System.Xml.UniqueId" /> 值填滿的項目數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> 小於零或大於陣列長度。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> 和 <paramref name="offset" /> 提供 16 個以下的有效位元組。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary vsli:raw="Displays the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value in string format.">顯示字串格式的 <see cref="T:System.Xml.UniqueId" /> 值。</summary>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">
        <see cref="T:System.Xml.UniqueId" /> 值的字串表示。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt; and store it in the given byte array at the specified offset.">嘗試取得 <see cref="T:System.Xml.UniqueId" /> 的值作為 <see cref="T:System.Guid" />，並將它儲存在指定位元組陣列中的指定位移位置。</summary>
      <param name="buffer" vsli:raw="&lt;see langword=&quot;byte&quot; /&gt; array that will contain the &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">包含 <see langword="byte" /> 的 <see cref="T:System.Guid" /> 陣列。</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;byte&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">
        <see langword="byte" /> 陣列中要開始插入 <see cref="T:System.Guid" /> 值的位置。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value stored in this instance of &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果儲存在這個 <see langword="true" /> 執行個體中的值是 <see cref="T:System.Xml.UniqueId" />，則為 <see cref="T:System.Guid" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> 小於零或大於陣列長度。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> 和 <paramref name="offset" /> 提供 16 個以下的有效位元組。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">嘗試取得 <see cref="T:System.Xml.UniqueId" /> 的值做為 <see cref="T:System.Guid" />。</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; if successful; otherwise &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">如果成功取得，則為 <see cref="T:System.Guid" />，否則為 <see cref="F:System.Guid.Empty" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UniqueId represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 UniqueId 表示 <see cref="T:System.Guid" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> 和 <paramref name="offset" /> 提供 16 個以下的有效位元組。</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary vsli:raw="Enables optimized strings to be managed in a dynamic way.">啟用以動態方式來管理最佳化的字串。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; class.">初始化 <see cref="T:System.Xml.XmlBinaryReaderSession" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; from the input parameters and adds it to an internal collection.">從輸入參數建立 <see cref="T:System.Xml.XmlDictionaryString" />，並將它加入至內部集合。</summary>
      <param name="id" vsli:raw="The key value.">索引鍵值。</param>
      <param name="value" vsli:raw="The value.">數值。</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is added to an internal collection.">加入內部集合的新建 <see cref="T:System.Xml.XmlDictionaryString" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is less than zero.">
        <paramref name="id" /> 小於零。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;id&quot; /&gt; already exists.">具有索引鍵 = <paramref name="id" /> 的項目已存在。</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary vsli:raw="Clears the internal collection of all contents.">清除所有內容的內部集合。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a key.">檢查內部集合是否包含符合索引鍵的項目。</summary>
      <param name="key" vsli:raw="The key to search on.">要搜尋的索引鍵。</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">這個方法傳回時，如果找到項目，則包含字串，否則為 <see langword="null" />。 這個參數會以未初始化的狀態傳遞。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;key&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果有找到符合 <paramref name="key" /> 的項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">檢查內部集合是否包含符合某個值的項目。</summary>
      <param name="value" vsli:raw="The value to search for.">要搜尋的值。</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">這個方法傳回時，如果找到項目，則包含字串，否則為 <see langword="null" />。 這個參數會以未初始化的狀態傳遞。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果有找到符合 <paramref name="value" /> 的項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">檢查內部集合是否包含符合某個值的項目。</summary>
      <param name="value" vsli:raw="The value to search for.">要搜尋的值。</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">這個方法傳回時，如果找到項目，則包含字串，否則為 <see langword="null" />。 這個參數會以未初始化的狀態傳遞。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果有找到符合 <paramref name="value" /> 的項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary vsli:raw="Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.">允許使用動態字典來壓縮出現在訊息中的常見字串和維護狀態。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary vsli:raw="Creates an instance of this class.">建立這個類別的執行個體。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary vsli:raw="Clears out the internal collections.">清除內部集合。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary vsli:raw="Tries to add an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to the internal collection.">嘗試將 <see cref="T:System.Xml.XmlDictionaryString" /> 加入至內部集合。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to add.">要加入的 <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was successfully added.">已成功加入的 <see cref="T:System.Xml.XmlDictionaryString" /> 索引鍵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the string could be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以加入字串則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;key&quot; /&gt; already exists.">具有索引鍵 = <paramref name="key" /> 的項目已存在。</exception>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary vsli:raw="Implements a dictionary used to optimize Windows Communication Foundation (WCF)'s XML reader/writer implementations.">實作可用來最佳化 Windows Communication Foundation (WCF) 之 XML 讀取器/寫入器實作的字典。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">建立空的 <see cref="T:System.Xml.XmlDictionary" />。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; with an initial capacity.">使用初始容量，建立 <see cref="T:System.Xml.XmlDictionary" />。</summary>
      <param name="capacity" vsli:raw="The initial size of the dictionary.">字典的初始大小。</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary vsli:raw="Adds a string to the &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">將字串加入至 <see cref="T:System.Xml.XmlDictionary" />。</summary>
      <param name="value" vsli:raw="String to add to the dictionary.">要加入至字典的字串。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was added.">已加入的 <see cref="T:System.Xml.XmlDictionaryString" />。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary vsli:raw="Gets a &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">取得空的 <see langword="static" /><see cref="T:System.Xml.IXmlDictionary" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">空的 <see langword="static" /><see cref="T:System.Xml.IXmlDictionary" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">嘗試在字典中查詢項目。</summary>
      <param name="key" vsli:raw="Key to look up.">要查詢的索引鍵。</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">如果 <paramref name="key" /> 已定義，則為對應到此索引鍵的 <see cref="T:System.Xml.XmlDictionaryString" />，否則為 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果機碼存在於字典中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">檢查字典是否有指定的字串值。</summary>
      <param name="value" vsli:raw="String value being checked for.">正在檢查的字串值。</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise &lt;see langword=&quot;null&quot; /&gt;.">如果有找到，則為對應的 <see cref="T:System.Xml.XmlDictionaryString" />，否則為 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個值存在於字典中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">檢查字典是否有指定的 <see cref="T:System.Xml.XmlDictionaryString" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">正在檢查的 <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果有找到，則為相符的 <see cref="T:System.Xml.XmlDictionaryString" />；否則為 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 存在於字典中，則為 <see cref="T:System.Xml.XmlDictionaryString" />；否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary vsli:raw="An &lt;see langword=&quot;abstract&quot; /&gt; class that the Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to do serialization and deserialization.">表示 <see langword="abstract" /> 類別，這是 Windows Communication Foundation (WCF) 為了要執行序列化和還原序列化而衍生自 <see cref="T:System.Xml.XmlReader" /> 的類別。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary vsli:raw="Creates an instance of this class.  Invoked only by its derived classes.">建立這個類別的執行個體。  只能由其衍生類別叫用。</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">這個屬性永遠會傳回 <see langword="false" />。 如果其衍生類別支援標準化，則可以覆寫它們來傳回 <see langword="true" />。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;false&quot; /&gt;.">傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">建立可以讀取 .NET 二進位 XML 格式的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行讀取的起始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">可以從 <paramref name="buffer" /> 中讀取的位元組數目。</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">套用至此作業的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="buffer" /> 為 <see langword="null" />。
-或-
<paramref name="offset" /> 小於零或大於緩衝區長度。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.">
        <paramref name="count" /> 小於零或大於緩衝區長度減位移值。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">建立可以讀取 .NET 二進位 XML 格式的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行讀取的起始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">可以從 <paramref name="buffer" /> 中讀取的位元組數目。</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">要套用的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlBinaryReaderSession" />。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> 小於零或大於緩衝區長度減位移值。
-或-
<paramref name="offset" /> 小於零或大於緩衝區長度。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">建立可以讀取 .NET 二進位 XML 格式的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行讀取的起始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">可以從 <paramref name="buffer" /> 中讀取的位元組數目。</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">要套用的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlBinaryReaderSession" />。</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">讀取器關閉時要呼叫的委派。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> 小於零或大於緩衝區長度減位移值。
-或-
<paramref name="offset" /> 小於零或大於緩衝區長度。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">建立可以讀取 .NET 二進位 XML 格式的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行讀取的起始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">可以從 <paramref name="buffer" /> 中讀取的位元組數目。</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">套用至此作業的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> 小於零或大於緩衝區長度減位移值。
-或-
<paramref name="offset" /> 小於零或大於緩衝區長度。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">建立可以讀取 .NET 二進位 XML 格式的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">套用至此作業的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">建立可以讀取 .NET 二進位 XML 格式的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">要從其中讀取的資料流。</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">套用至此作業的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> 或 <paramref name="quotas" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">建立可以讀取 .NET 二進位 XML 格式的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">要從其中讀取的資料流。</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">套用至此作業的配額。</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlBinaryReaderSession" />。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">建立可以讀取 .NET 二進位 XML 格式的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">要從其中讀取的資料流。</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">要套用的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlBinaryReaderSession" />。</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">讀取器關閉時要呼叫的委派。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">建立可以讀取 .NET 二進位 XML 格式的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">要從其中讀取的資料流。</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">套用至此作業的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">從現有的 <see cref="T:System.Xml.XmlDictionaryReader" /> 建立 <see cref="T:System.Xml.XmlReader" /> 的執行個體。</summary>
      <param name="reader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> 的執行個體。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">建立採用 MTOM 格式讀取 XML 的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行讀取的起始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">可以從 <paramref name="buffer" /> 中讀取的位元組數目。</param>
      <param name="encoding" vsli:raw="The possible character encoding of the input.">輸入的可能字元編碼。</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">要套用至此讀取器的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">建立採用 MTOM 格式讀取 XML 的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行讀取的起始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">可以從 <paramref name="buffer" /> 中讀取的位元組數目。</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">輸入的可能字元編碼。</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">訊息的 Content-Type MIME 類型。</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">要套用至此讀取器的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">建立採用 MTOM 格式讀取 XML 的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行讀取的起始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">可以從 <paramref name="buffer" /> 中讀取的位元組數目。</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">輸入的可能字元編碼。</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">訊息的 Content-Type MIME 類型。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">要套用至讀取器的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="maxBufferSize" vsli:raw="The maximum allowed size of the buffer.">允許的緩衝區大小上限。</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">關閉讀取器時要呼叫的委派。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">建立採用 MTOM 格式讀取 XML 的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行讀取的起始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">可以從 <paramref name="buffer" /> 中讀取的位元組數目。</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">輸入的可能字元編碼。</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">要套用至此讀取器的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">建立採用 MTOM 格式讀取 XML 的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">要從其中讀取的資料流。</param>
      <param name="encoding" vsli:raw="The possible character encoding of the stream.">資料流的可能字元編碼。</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">要套用至此讀取器的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">建立採用 MTOM 格式讀取 XML 的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">要從其中讀取的資料流。</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">資料流的可能字元編碼。</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">訊息的 Content-Type MIME 類型。</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">要套用至此讀取器的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">建立採用 MTOM 格式讀取 XML 的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">要從其中讀取的資料流。</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">資料流的可能字元編碼。</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">訊息的 Content-Type MIME 類型。</param>
      <param name="quotas" vsli:raw="The MIME type of the message.">訊息的 MIME 類型。</param>
      <param name="maxBufferSize" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">要套用至讀取器的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">關閉讀取器時要呼叫的委派。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">建立採用 MTOM 格式讀取 XML 的 <see cref="T:System.Xml.XmlDictionaryReader" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">要從其中讀取的資料流。</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">資料流的可能字元編碼。</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">要套用至此讀取器的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">建立 <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行讀取的起始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">可以從 <paramref name="buffer" /> 中讀取的位元組數目。</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">
        <see cref="T:System.Text.Encoding" /> 物件，指定要套用的編碼屬性。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">要套用的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">關閉讀取器時要呼叫的委派。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">建立 <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行讀取的起始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">可以從 <paramref name="buffer" /> 中讀取的位元組數目。</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">套用至讀取器的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">建立 <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">套用至讀取器的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">建立 <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">要從其中讀取的資料流。</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">
        <see cref="T:System.Text.Encoding" /> 物件，指定要套用的編碼屬性。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">要套用的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">關閉讀取器時要呼叫的委派。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">建立 <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">要從其中讀取的資料流。</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">套用至讀取器的配額。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary vsli:raw="This method is not yet implemented.">尚未實作這個方法。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">永遠。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="When overridden in a derived class, gets the value of an attribute.">在衍生類別中覆寫時，取得屬性值。</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">
        <see cref="T:System.Xml.XmlDictionaryString" />，表示屬性的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">
        <see cref="T:System.Xml.XmlDictionaryString" />，表示屬性的命名空間。</param>
      <returns vsli:raw="The value of the attribute.">屬性的值。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)">
      <summary vsli:raw="Gets non-atomized names.">取得非不可部分完成的名稱。</summary>
      <param name="localName" vsli:raw="The local name.">區域名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace for the local &lt;paramref name=&quot;localName&quot; /&gt;.">本機 <paramref name="localName" /> 的命名空間。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">取得名稱陣列中目前節點之本機名稱的索引。</summary>
      <param name="localNames" vsli:raw="The string array of local names to be searched.">要搜尋的本機名稱字串陣列。</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">目前節點的命名空間。</param>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">名稱陣列中目前節點之本機名稱的索引。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> 或陣列中的任何名稱為 <see langword="null" />。
-或-
<paramref name="namespaceUri" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">取得名稱陣列中目前節點之本機名稱的索引。</summary>
      <param name="localNames" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; array of local names to be searched.">要搜尋的本機名稱其 <see cref="T:System.Xml.XmlDictionaryString" /> 陣列。</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">目前節點的命名空間。</param>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">名稱陣列中目前節點之本機名稱的索引。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> 或陣列中的任何名稱為 <see langword="null" />。
-或-
<paramref name="namespaceUri" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">檢查 <paramref name="localName" /> 參數是否為目前節點的本機名稱。</summary>
      <param name="localName" vsli:raw="The local name of the current node.">目前節點的本機名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="localName" /> 符合目前節點的本機名稱，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">檢查 <paramref name="localName" /> 參數是否為目前節點的本機名稱。</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the current node.">
        <see cref="T:System.Xml.XmlDictionaryString" />，表示目前節點的本機名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="localName" /> 符合目前節點的本機名稱，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">檢查 <paramref name="namespaceUri" /> 參數是否為目前節點的命名空間。</summary>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">目前節點的命名空間。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="namespaceUri" /> 符合目前節點的命名空間，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">檢查 <paramref name="namespaceUri" /> 參數是否為目前節點的命名空間。</summary>
      <param name="namespaceUri" vsli:raw="Namespace of current node.">目前節點的命名空間。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="namespaceUri" /> 符合目前節點的命名空間，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary vsli:raw="Checks whether the reader is positioned at the start of an array. This class returns &lt;see langword=&quot;false&quot; /&gt;, but derived classes that have the concept of arrays might return &lt;see langword=&quot;true&quot; /&gt;.">檢查讀取器是否位於陣列的起始處。 這個類別會傳回 <see langword="false" />，但具有陣列概念的衍生類別會傳回 <see langword="true" />。</summary>
      <param name="type" vsli:raw="Type of the node, if a valid node; otherwise &lt;see langword=&quot;null&quot; /&gt;.">如果是有效節點，則為節點的型別，否則為 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the start of an array node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果讀取器位於陣列節點的起始處，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the first tag is a start tag or empty element tag and if the local name and namespace URI match those of the current node.">測試第一個標記是否為開始標記或空白項目標記，以及本機名稱和命名空間 URI 是否與目前節點的相符。</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">
        <see cref="T:System.Xml.XmlDictionaryString" />，表示屬性的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">
        <see cref="T:System.Xml.XmlDictionaryString" />，表示屬性的命名空間。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the first tag in the array is a start tag or empty element tag and matches &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果陣列中的第一個標記為開始標記或空白項目標記，且符合 <paramref name="localName" /> 和 <paramref name="namespaceUri" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary vsli:raw="Tests whether the current node is a text node.">測試目前節點是否為文字節點。</summary>
      <param name="nodeType" vsli:raw="Type of the node being tested.">要測試的節點型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node type is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.Whitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.SignificantWhitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;, or &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果節點型別為 <see cref="F:System.Xml.XmlNodeType.Text" />、<see cref="F:System.Xml.XmlNodeType.Whitespace" />、<see cref="F:System.Xml.XmlNodeType.SignificantWhitespace" />、<see cref="F:System.Xml.XmlNodeType.CDATA" /> 或 <see cref="F:System.Xml.XmlNodeType.Attribute" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element.">測試目前的內容節點為開始項目或空白項目。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element matches the given argument.">測試目前的內容節點為開始項目或空白項目，以及項目的 <see cref="P:System.Xml.XmlReader.Name" /> 屬性是否符合指定的引數。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element.">項目的 <see cref="P:System.Xml.XmlReader.Name" /> 屬性。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given arguments.">測試目前的內容節點為開始項目或空白項目，以及項目的 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 屬性是否符合指定的引數。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given argument.">測試目前的內容節點為開始項目或空白項目，以及項目的 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 屬性是否符合指定的引數。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary vsli:raw="Gets the quota values that apply to the current instance of this class.">取得套用至此類別之目前執行個體的配額值。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; that applies to the current instance of this class.">套用至此類別的目前執行個體 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">將重複出現的 <see cref="T:System.Boolean" /> 節點讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">要放置節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">要放入陣列中的節點數目。</param>
      <returns vsli:raw="The number of nodes put in the array.">放入陣列中的節點數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">將重複出現的 <see cref="T:System.DateTime" /> 節點讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">要放置節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">要放入陣列中的節點數目。</param>
      <returns vsli:raw="The number of nodes put in the array.">放入陣列中的節點數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">將重複出現的 <see cref="T:System.Decimal" /> 節點讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">要放置節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">要放入陣列中的節點數目。</param>
      <returns vsli:raw="The number of nodes put in the array.">放入陣列中的節點數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes into a typed array.">將重複出現的 <see cref="T:System.Double" /> 節點讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">要放置節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">要放入陣列中的節點數目。</param>
      <returns vsli:raw="The number of nodes put in the array.">放入陣列中的節點數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">將重複出現的 <see cref="T:System.Guid" /> 節點讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">要放置節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">要放入陣列中的節點數目。</param>
      <returns vsli:raw="The number of nodes put in the array.">放入陣列中的節點數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">將重複出現的 <see langword="short" /> 整數讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the integers are put.">要放置整數的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">要放入陣列中的整數數目。</param>
      <returns vsli:raw="The number of integers put in the array.">放入陣列中的整數數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">將重複出現的整數讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the integers are put.">要放置整數的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">要放入陣列中的整數數目。</param>
      <returns vsli:raw="The number of integers put in the array.">放入陣列中的整數數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">將重複出現的 <see langword="long" /> 整數讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the integers are put.">要放置整數的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">要放入陣列中的整數數目。</param>
      <returns vsli:raw="The number of integers put in the array.">放入陣列中的整數數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">將重複出現的 <see langword="float" /> 數字讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">要放入浮點數的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">要放入陣列中的浮點數數目。</param>
      <returns vsli:raw="The umber of float numbers put in the array.">放入陣列中的浮點數數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">將重複出現的 <see cref="T:System.TimeSpan" /> 節點讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">要放置節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">要放入陣列中的節點數目。</param>
      <returns vsli:raw="The number of nodes put in the array.">放入陣列中的節點數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">將重複出現的 <see cref="T:System.Boolean" /> 節點讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">要放置節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">要放入陣列中的節點數目。</param>
      <returns vsli:raw="The number of nodes put in the array.">放入陣列中的節點數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">將重複出現的 <see cref="T:System.DateTime" /> 節點讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">要放置節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">要放入陣列中的節點數目。</param>
      <returns vsli:raw="The number of nodes put in the array.">放入陣列中的節點數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">將重複出現的 <see cref="T:System.Decimal" /> 節點讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">要放置節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">要放入陣列中的節點數目。</param>
      <returns vsli:raw="The number of nodes put in the array.">放入陣列中的節點數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes type into a typed array.">將重複出現的 <see cref="T:System.Double" /> 節點型別讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">要放置節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">要放入陣列中的節點數目。</param>
      <returns vsli:raw="The number of nodes put in the array.">放入陣列中的節點數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">將重複出現的 <see cref="T:System.Guid" /> 節點讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">要放置節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">要放入陣列中的節點數目。</param>
      <returns vsli:raw="The number of nodes put in the array.">放入陣列中的節點數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">將重複出現的 <see langword="short" /> 整數讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the integers are put.">要放置整數的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">要放入陣列中的整數數目。</param>
      <returns vsli:raw="The number of integers put in the array.">放入陣列中的整數數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">將重複出現的整數讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the integers are put.">要放置整數的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">要放入陣列中的整數數目。</param>
      <returns vsli:raw="The number of integers put in the array.">放入陣列中的整數數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">將重複出現的 <see langword="long" /> 整數讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the integers are put.">要放置整數的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">要放入陣列中的整數數目。</param>
      <returns vsli:raw="The number of integers put in the array.">放入陣列中的整數數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">將重複出現的 <see langword="float" /> 數字讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">要放入浮點數的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">要放入陣列中的浮點數數目。</param>
      <returns vsli:raw="The number of float numbers put in the array.">放入陣列中的浮點數數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">將重複出現的 <see cref="T:System.TimeSpan" /> 節點讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">要放置節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">要放入陣列中的節點數目。</param>
      <returns vsli:raw="The number of nodes put in the array.">放入陣列中的節點數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">將重複出現的 <see cref="T:System.Boolean" /> 節點讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">
        <see cref="T:System.Boolean" /> 節點的 <see cref="T:System.Boolean" /> 陣列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">將重複出現的 <see cref="T:System.Boolean" /> 節點讀入具型別陣列中。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">
        <see cref="T:System.Boolean" /> 節點的 <see cref="T:System.Boolean" /> 陣列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Converts a node's content to a specified type.">將節點的內容轉換成指定的型別。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the value to be returned.">要傳回之值的 <see cref="T:System.Type" />。</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object to an &lt;c&gt;xs:string&lt;/c&gt;. This value can be a null reference.">
        <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件，用來解析任何與型別轉換相關的命名空間前置詞。 例如，將 <see cref="T:System.Xml.XmlQualifiedName" /> 物件轉換為 <c>xs:string</c> 時，可以使用它。 這個值可以是 null 參考。</param>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">轉換為要求類型的串連文字內容或屬性值。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">讀取內容，並傳回 Base64 已解碼的二進位位元組。</summary>
      <returns vsli:raw="A byte array that contains the Base64 decoded binary bytes.">位元組陣列，其中包含 Base64 已解碼二進位位元組。</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than the MaxArrayLength quota for this reader.">陣列大小大於這個讀取器的 MaxArrayLength 配額。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">讀取內容，並傳回 <see langword="BinHex" /> 已解碼的二進位位元組。</summary>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">位元組陣列，其中包含 <see langword="BinHex" /> 已解碼二進位位元組。</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">陣列大小大於 <see cref="F:System.Int32.MaxValue" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">讀取內容，並傳回 <see langword="BinHex" /> 已解碼的二進位位元組。</summary>
      <param name="maxByteArrayContentLength" vsli:raw="The maximum array length.">陣列長度上限。</param>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">位元組陣列，其中包含 <see langword="BinHex" /> 已解碼二進位位元組。</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;paramref name=&quot;maxByteArrayContentLength&quot; /&gt;.">陣列大小大於 <paramref name="maxByteArrayContentLength" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content into a &lt;see langword=&quot;char&quot; /&gt; array.">將內容讀入 <see langword="char" /> 陣列中。</summary>
      <param name="chars" vsli:raw="The array into which the characters are put.">要放置字元的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of characters to put in the array.">要放入陣列中的字元數目。</param>
      <returns vsli:raw="Number of characters read.">讀取的字元數。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;decimal&quot; /&gt;.">將節點的內容轉換成 <see langword="decimal" />。</summary>
      <returns vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; representation of node's content.">節點內容的 <see langword="decimal" /> 表示。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;float&quot; /&gt;.">將節點的內容轉換成 <see langword="float" />。</summary>
      <returns vsli:raw="The &lt;see langword=&quot;float&quot; /&gt; representation of node's content.">節點內容的 <see langword="float" /> 表示。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;guid&quot; /&gt;.">將節點的內容轉換成 <see langword="guid" />。</summary>
      <returns vsli:raw="The &lt;see langword=&quot;guid&quot; /&gt; representation of node's content.">節點內容的 <see langword="guid" /> 表示。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary vsli:raw="Converts a node's content to a qualified name representation.">將節點的內容轉換成限定名稱表示。</summary>
      <param name="localName" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">限定名稱的 <see cref="P:System.Xml.XmlReader.LocalName" /> 部分 (<see langword="out" /> 參數)。</param>
      <param name="namespaceUri" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">限定名稱的 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 部分 (<see langword="out" /> 參數)。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary vsli:raw="Converts a node's content to a string.">將節點的內容轉換成字串。</summary>
      <returns vsli:raw="The node content in a string representation.">字串表示中的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary vsli:raw="Converts a node's content to a string.">將節點的內容轉換成字串。</summary>
      <param name="maxStringContentLength" vsli:raw="The maximum string length.">字串長度上限。</param>
      <returns vsli:raw="Node content in string representation.">字串表示中的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">將節點的內容轉換成字串。</summary>
      <param name="strings" vsli:raw="The array of strings to match content against.">要與內容比對的字串陣列。</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">與內容比對的 <paramref name="strings" /> 中的項目索引。</param>
      <returns vsli:raw="The node content in a string representation.">字串表示中的節點內容。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> 為 <see langword="null" />。
-或-
<paramref name="strings" /> 中的項目為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">將節點的內容轉換成字串。</summary>
      <param name="strings" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; objects to match content against.">要與內容比對的 <see cref="T:System.Xml.XmlDictionaryString" /> 物件陣列。</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">與內容比對的 <paramref name="strings" /> 中的項目索引。</param>
      <returns vsli:raw="The node content in a string representation.">字串表示中的節點內容。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> 為 <see langword="null" />。
-或-
<paramref name="strings" /> 中的項目為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary vsli:raw="Converts a node's content to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">將節點的內容轉換成 <see cref="T:System.TimeSpan" />。</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representation of node's content.">節點內容的 <see cref="T:System.TimeSpan" /> 表示。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary vsli:raw="Converts a node's content to a unique identifier.">將節點內容轉換成唯一識別項。</summary>
      <returns vsli:raw="The node's content represented as a unique identifier.">表示為唯一識別項的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">將節點的內容轉換成 <see cref="T:System.DateTime" /> 陣列。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">表示為 <see cref="T:System.DateTime" /> 陣列的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">將節點的內容轉換成 <see cref="T:System.DateTime" /> 陣列。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">表示為 <see cref="T:System.DateTime" /> 陣列的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">將節點的內容轉換成 <see cref="T:System.Decimal" /> 陣列。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">表示為 <see cref="T:System.Decimal" /> 陣列的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">將節點的內容轉換成 <see cref="T:System.Decimal" /> 陣列。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">表示為 <see cref="T:System.Decimal" /> 陣列的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">將節點的內容轉換成 <see cref="T:System.Double" /> 陣列。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">表示為 <see cref="T:System.Double" /> 陣列的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">將節點的內容轉換成 <see cref="T:System.Double" /> 陣列。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">表示為 <see cref="T:System.Double" /> 陣列的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary vsli:raw="Converts a node's content to a array of Base64 bytes.">將節點的內容轉換成 Base64 位元組的陣列。</summary>
      <returns vsli:raw="The node's content represented as an array of Base64 bytes.">表示為 Base64 位元組陣列的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary vsli:raw="Converts a node's content to an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">將節點的內容轉換成 <see langword="BinHex" /> 位元組的陣列。</summary>
      <returns vsli:raw="The node's content represented as an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">表示為 <see langword="BinHex" /> 位元組陣列的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">將項目的內容轉換成 <see cref="T:System.Boolean" />。</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">表示為 <see cref="T:System.Boolean" /> 的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">將項目的內容轉換成 <see cref="T:System.DateTime" />。</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">表示為 <see cref="T:System.DateTime" /> 的節點內容。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">此項目的格式無效。</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">此項目的格式無效。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">將項目的內容轉換成 <see cref="T:System.Decimal" />。</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">表示為 <see cref="T:System.Decimal" /> 的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">將項目的內容轉換成 <see cref="T:System.Double" />。</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">表示為 <see cref="T:System.Double" /> 的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary vsli:raw="Converts an element's content to a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">將項目的內容轉換成浮點數 (<see cref="T:System.Single" />)。</summary>
      <returns vsli:raw="The node's content represented as a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">表示為浮點數的節點內容 (<see cref="T:System.Single" />)。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">將項目的內容轉換成 <see cref="T:System.Guid" />。</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">表示為 <see cref="T:System.Guid" /> 的節點內容。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">此項目的格式無效。</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">此項目的格式無效。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary vsli:raw="Converts an element's content to an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">將項目的內容轉換成整數 (<see cref="T:System.Int32" />)。</summary>
      <returns vsli:raw="The node's content represented as an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">表示為整數的節點內容 (<see cref="T:System.Int32" />)。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary vsli:raw="Converts an element's content to a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">將項目的內容轉換成長整數 (<see cref="T:System.Int64" />)。</summary>
      <returns vsli:raw="The node's content represented as a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">表示為長整數的節點內容 (<see cref="T:System.Int64" />)。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將項目的內容轉換成 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">表示為 <see cref="T:System.String" /> 的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">將項目的內容轉換成 <see cref="T:System.TimeSpan" />。</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">表示為 <see cref="T:System.TimeSpan" /> 的節點內容。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary vsli:raw="Converts an element's content to a unique identifier.">將項目的內容轉換成唯一識別項。</summary>
      <returns vsli:raw="The node's content represented as a unique identifier.">表示為唯一識別項的節點內容。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">此項目的格式無效。</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">此項目的格式無效。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary vsli:raw="Checks whether the current node is an element and advances the reader to the next node.">檢查目前節點是否為項目，並使讀取器前進至下一個節點。</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> 會傳回 <see langword="false" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;name&quot; /&gt; and advances the reader to the next node.">檢查目前節點是否為具有指定之 <paramref name="name" /> 的項目，並使讀取器前進至下一個節點。</summary>
      <param name="name" vsli:raw="The qualified name of the element.">項目的限定名稱。</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> 會傳回 <see langword="false" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">檢查目前節點是否為具有指定 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的項目，並使讀取器前進至下一個節點。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> 會傳回 <see langword="false" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">檢查目前節點是否為具有指定 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的項目，並使讀取器前進至下一個節點。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> 會傳回 <see langword="false" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">將含指定之 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的一系列節點其內容讀入 <see cref="T:System.Guid" /> 陣列。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" /> 的陣列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">將含指定之 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的一系列節點其內容讀入 <see cref="T:System.Guid" /> 陣列。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" /> 的陣列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">將含指定 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的一系列節點其內容讀入 <see langword="short" /> 整數陣列中 (<see cref="T:System.Int16" />)。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">
        <see langword="short" /> 整數的陣列 (<see cref="T:System.Int16" />)。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">將含指定 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的一系列節點其內容讀入 <see langword="short" /> 整數陣列中 (<see cref="T:System.Int16" />)。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">
        <see langword="short" /> 整數的陣列 (<see cref="T:System.Int16" />)。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">將含指定之 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的一系列節點其內容讀入整數陣列中 (<see cref="T:System.Int32" />)。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">整數的陣列 (<see cref="T:System.Int32" />)。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">將含指定之 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的一系列節點其內容讀入整數陣列中 (<see cref="T:System.Int32" />)。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">整數的陣列 (<see cref="T:System.Int32" />)。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">將含指定 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的一系列節點其內容讀入 <see langword="long" /> 整數陣列中 (<see cref="T:System.Int64" />)。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">
        <see langword="long" /> 整數的陣列 (<see cref="T:System.Int64" />)。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">將含指定 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的一系列節點其內容讀入 <see langword="long" /> 整數陣列中 (<see cref="T:System.Int64" />)。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">
        <see langword="long" /> 整數的陣列 (<see cref="T:System.Int64" />)。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">將含指定 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的一系列節點其內容讀入 <see langword="float" /> 數字陣列中 (<see cref="T:System.Single" />)。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">
        <see langword="float" /> 數字的陣列 (<see cref="T:System.Single" />)。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">將含指定 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的一系列節點其內容讀入 <see langword="float" /> 數字陣列中 (<see cref="T:System.Single" />)。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">
        <see langword="float" /> 數字的陣列 (<see cref="T:System.Single" />)。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">檢查目前節點是否為具有指定之 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的項目，並使讀取器前進至下一個節點。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString">
      <summary vsli:raw="Reads the contents of the current node into a string.">將目前節點的內容讀入字串中。</summary>
      <returns vsli:raw="A string that contains the contents of the current node.">字串，其中包含目前節點的內容。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">無法讀取目前節點的內容。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">超過允許的字串長度上限。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)">
      <summary vsli:raw="Reads the contents of the current node into a string with a given maximum length.">將目前節點的內容讀入指定長度上限的字串中。</summary>
      <param name="maxStringContentLength" vsli:raw="Maximum allowed string length.">允許的字串長度上限。</param>
      <returns vsli:raw="A string that contains the contents of the current node.">字串，其中包含目前節點的內容。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">無法讀取目前節點的內容。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">超過允許的字串長度上限。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">將含指定之 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的一系列節點其內容讀入 <see cref="T:System.TimeSpan" /> 陣列。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">
        <see cref="T:System.TimeSpan" /> 陣列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">將含指定之 <paramref name="localName" /> 和 <paramref name="namespaceUri" /> 的一系列節點其內容讀入 <see cref="T:System.TimeSpan" /> 陣列。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">
        <see cref="T:System.TimeSpan" /> 陣列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Not implemented.">未實作。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">要從其中讀取的緩衝區。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">要在 <paramref name="buffer" /> 中進行讀取的起始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">可以從 <paramref name="buffer" /> 中讀取的位元組數目。</param>
      <returns vsli:raw="Not implemented.">未實作。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">永遠。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="This method is not yet implemented.">尚未實作這個方法。</summary>
      <param name="stream" vsli:raw="The stream to read from.">要從其中讀取的資料流。</param>
      <param name="includeComments" vsli:raw="Determines whether comments are included.">判斷是否包含註解。</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">要包含的前置詞。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">永遠。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">並未在這個類別中實作 (它一律傳回 <see langword="false" />)。 可能會在衍生類別中覆寫。</summary>
      <param name="count" vsli:raw="Returns 0, unless overridden in a derived class.">除非在衍生類別中覆寫，否則傳回 0。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">除非在衍生類別中覆寫，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">並未在這個類別中實作 (它一律傳回 <see langword="false" />)。 可能會在衍生類別中覆寫。</summary>
      <param name="length" vsli:raw="Returns 0, unless overridden in a derived class.">除非在衍生類別中覆寫，否則傳回 0。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">除非在衍生類別中覆寫，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">並未在這個類別中實作 (它一律傳回 <see langword="false" />)。 可能會在衍生類別中覆寫。</summary>
      <param name="localName" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class. .">除非在衍生類別中覆寫，否則傳回 <see langword="null" />。 執行個體時提供 SQL Server 登入。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">除非在衍生類別中覆寫，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">並未在這個類別中實作 (它一律傳回 <see langword="false" />)。 可能會在衍生類別中覆寫。</summary>
      <param name="namespaceUri" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">除非在衍生類別中覆寫，否則傳回 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">除非在衍生類別中覆寫，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">並未在這個類別中實作 (它一律傳回 <see langword="false" />)。 可能會在衍生類別中覆寫。</summary>
      <param name="value" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">除非在衍生類別中覆寫，否則傳回 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">除非在衍生類別中覆寫，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary vsli:raw="Contains configurable quota values for XmlDictionaryReaders.">包含 XmlDictionaryReaders 的可設定配額值。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary vsli:raw="Creates a new instance of this class.">建立這個類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Sets the properties on a passed-in quotas instance, based on the values in this instance.">根據傳入之配額執行個體中的值，設定這個執行個體上的屬性。</summary>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; instance to which to copy values.">要將值複製到其中的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> 執行個體。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for the passed in instance.">嘗試 <see langword="set" /> 此值，但是配額值對於傳入的執行個體而言是唯讀的。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Passed in target &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">傳入的目標 <paramref name="quotas" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary vsli:raw="Gets an instance of this class with all properties set to maximum values.">取得這個類別的執行個體，且其所有屬性都設定為最大值。</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; with properties set to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> 執行個體，其屬性設定為 <see cref="F:System.Int32.MaxValue" />。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary vsli:raw="Gets or sets the maximum allowed array length.">取得或設定允許的陣列長度上限。</summary>
      <returns vsli:raw="The maximum allowed array length. The default is 16384.">允許的陣列長度上限。 預設值為 16384。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">嘗試 <see langword="set" /> 此值，但是配額值對於此執行個體而言是唯讀的。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">嘗試將此值 <see langword="set" /> 為小於零。</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary vsli:raw="Gets or sets the maximum allowed bytes returned for each read.">取得或設定允許每個讀取動作傳回的位元組上限。</summary>
      <returns vsli:raw="The maximum allowed bytes returned for each read. The default is 4096.">允許每個讀取動作傳回的位元組上限。 預設值為 4096。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">嘗試 <see langword="set" /> 此值，但是配額值對於此執行個體而言是唯讀的。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">嘗試將此值 <see langword="set" /> 為小於零。</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary vsli:raw="Gets or sets the maximum nested node depth.">取得或設定巢狀節點深度上限。</summary>
      <returns vsli:raw="The maximum nested node depth. The default is 32.">巢狀節點深度上限。 預設為 32。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value and quota values are read-only for this instance.">嘗試 <see langword="set" /> 此值，但是配額值對於此執行個體而言是唯讀的。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value is less than zero.">嘗試將此值 <see langword="set" /> 為小於零。</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary vsli:raw="Gets or sets the maximum characters allowed in a table name.">取得或設定資料表名稱允許的字元數目上限。</summary>
      <returns vsli:raw="The maximum characters allowed in a table name. The default is 16384.">資料表名稱允許的字元數目上限。 預設值為 16384。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">嘗試 <see langword="set" /> 此值，但是配額值對於此執行個體而言是唯讀的。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">嘗試將此值 <see langword="set" /> 為小於零。</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary vsli:raw="Gets or sets the maximum string length returned by the reader.">取得或設定讀取器傳回的字串長度上限。</summary>
      <returns vsli:raw="The maximum string length returned by the reader. The default is 8192.">讀取器傳回的字串長度上限。 預設值為 8192。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">嘗試 <see langword="set" /> 此值，但是配額值對於此執行個體而言是唯讀的。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">嘗試將此值 <see langword="set" /> 為小於零。</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas">
      <summary vsli:raw="Gets the modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">取得 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> 的已修改配額。</summary>
      <returns vsli:raw="The modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />的已修改的配額。</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotaTypes">
      <summary vsli:raw="Enumerates the configurable quota values for XmlDictionaryReaders.">列舉 XmlDictionaryReaders 的可設定配額值。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxArrayLength">
      <summary vsli:raw="Specifies the maximum allowed array length.">指定允許的陣列長度上限。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxBytesPerRead">
      <summary vsli:raw="Specifies the maximum allowed bytes returned for each read.">指定允許每個讀取動作傳回的位元組上限。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxDepth">
      <summary vsli:raw="Specifies the maximum nested node depth.">指定巢狀節點深度上限。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxNameTableCharCount">
      <summary vsli:raw="Specifies the maximum characters allowed in a table name.">指定資料表名稱允許的字元數目上限。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxStringContentLength">
      <summary vsli:raw="Specifies the maximum string length returned by the reader.">指定讀取器傳回的字串長度上限。</summary>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary vsli:raw="Represents an entry stored in a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">表示儲存在 <see cref="T:System.Xml.XmlDictionary" /> 中的項目。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary vsli:raw="Creates an instance of this class.">建立此類別的例項。</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; containing this instance.">包含這個執行個體的 <see cref="T:System.Xml.IXmlDictionary" />。</param>
      <param name="value" vsli:raw="The string that is the value of the dictionary entry.">字串，表示字典項目的值。</param>
      <param name="key" vsli:raw="The integer that is the key of the dictionary entry.">整數，表示字典項目的索引鍵。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; / 4.">
        <paramref name="key" /> 小於 0 或大於 <see cref="F:System.Int32.MaxValue" /> / 4。</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; passed to the constructor of this instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">表示傳遞給這個 <see cref="T:System.Xml.IXmlDictionary" /> 執行個體之建構函式的 <see cref="T:System.Xml.XmlDictionaryString" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; for this dictionary entry.">這個字典項目的 <see cref="T:System.Xml.IXmlDictionary" />。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">取得表示空字串的 <see cref="T:System.Xml.XmlDictionaryString" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">表示空字串的 <see cref="T:System.Xml.XmlDictionaryString" />。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary vsli:raw="Gets the integer key for this instance of the class.">取得這個類別執行個體的整數索引鍵。</summary>
      <returns vsli:raw="The integer key for this instance of the class.">這個類別執行個體的整數索引鍵。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary vsli:raw="Displays a text representation of this object.">顯示這個物件的文字表示。</summary>
      <returns vsli:raw="The string value for this instance of the class.">這個類別執行個體的字串值。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary vsli:raw="Gets the string value for this instance of the class.">取得這個類別執行個體的字串值。</summary>
      <returns vsli:raw="The string value for this instance of the class.">這個類別執行個體的字串值。</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary vsli:raw="Represents an abstract class that Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to do serialization and deserialization.">表示抽象類別，這是 Windows Communication Foundation (WCF) 為了要執行序列化和還原序列化而衍生自 <see cref="T:System.Xml.XmlWriter" /> 的類別。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; class.">初始化 <see cref="T:System.Xml.XmlDictionaryWriter" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">這個屬性永遠會傳回 <see langword="false" />。 如果其衍生類別支援標準化，則可以覆寫它們來傳回 <see langword="true" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">所有情況下都是 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">建立寫入 WCF 二進位 XML 格式的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream to write to.">要寫入的資料流。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">建立寫入 WCF 二進位 XML 格式的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream to write to.">要寫入的資料流。</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">要用來做為共用字典的 <see cref="T:System.Xml.XmlDictionary" />。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">建立寫入 WCF 二進位 XML 格式的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream to write to.">要寫入的資料流。</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">要用來做為共用字典的 <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlBinaryWriterSession" />。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">建立寫入 WCF 二進位 XML 格式的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">要從其中讀取的資料流。</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">要用來做為共用字典的 <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlBinaryWriterSession" />。</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示寫入器會在完成時關閉資料流；否則為 <see langword="false" />。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">從現有的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 建立 <see cref="T:System.Xml.XmlWriter" /> 的執行個體。</summary>
      <param name="writer" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" /> 的執行個體。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> 的執行個體。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">建立採用 MTOM 格式寫入 XML 的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream to write to.">要寫入的資料流。</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">資料流的字元編碼。</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">在寫入器內緩衝處理的位元組數目上限。</param>
      <param name="startInfo" vsli:raw="An attribute in the ContentType SOAP header.">ContentType SOAP 標頭中的屬性。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">建立採用 MTOM 格式寫入 XML 的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream to write to.">要寫入的資料流。</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">資料流的字元編碼。</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">在寫入器內緩衝處理的位元組數目上限。</param>
      <param name="startInfo" vsli:raw="The content-type of the MIME part that contains the Infoset.">包含 Infoset 之 MIME 部分的 Content-Type。</param>
      <param name="boundary" vsli:raw="The MIME boundary in the message.">訊息中的 MIME 界限。</param>
      <param name="startUri" vsli:raw="The content-id URI of the MIME part that contains the Infoset.">包含 Infoset 之 MIME 部分的 Content-ID URI。</param>
      <param name="writeMessageHeaders" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write message headers.">
        <see langword="true" /> 表示寫入訊息標頭。</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示寫入器會在完成時關閉資料流；否則為 <see langword="false" />。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">建立寫入文字 XML 的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream to write to.">要寫入的資料流。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">建立寫入文字 XML 的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream to write to.">要寫入的資料流。</param>
      <param name="encoding" vsli:raw="The character encoding of the output.">輸出的字元編碼。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">建立寫入文字 XML 的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream to write to.">要寫入的資料流。</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">資料流的字元編碼。</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示寫入器會在完成時關閉資料流；否則為 <see langword="false" />。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary vsli:raw="When implemented by a derived class, it stops the canonicalization started by the matching &lt;see cref=&quot;M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])&quot; /&gt; call.">經衍生類別實作之後，它會停止對應之 <see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /> 呼叫所啟動的標準化。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">尚未實作方法。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="When implemented by a derived class, it starts the canonicalization.">由衍生類別實作時，它會啟動規範化。</summary>
      <param name="stream" vsli:raw="The stream to write to.">要寫入的資料流。</param>
      <param name="includeComments" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include comments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要包含註解，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">要包含的前置詞。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">尚未實作方法。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">從 <see cref="T:System.Boolean" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the data.">包含資料的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的起始索引。</param>
      <param name="count" vsli:raw="The number of values to write from the array.">要從陣列寫入的值數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">從 <see cref="T:System.DateTime" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">從 <see cref="T:System.Decimal" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">從 <see cref="T:System.Double" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">從 <see cref="T:System.Guid" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">從 <see cref="T:System.Int16" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">從 <see cref="T:System.Int32" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">從 <see cref="T:System.Int64" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">從 <see cref="T:System.Single" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">從 <see cref="T:System.TimeSpan" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">從 <see cref="T:System.Boolean" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">從 <see cref="T:System.DateTime" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">從 <see cref="T:System.Decimal" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">從 <see cref="T:System.Double" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">從 <see cref="T:System.Guid" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">從 <see cref="T:System.Int16" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">從 <see cref="T:System.Int32" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">從 <see cref="T:System.Int64" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">從 <see cref="T:System.Single" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">從 <see cref="T:System.TimeSpan" /> 陣列寫入節點。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">包含節點的陣列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">要從陣列取得的節點數目。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 為 &lt; 0 或 &gt; <paramref name="array" /> 長度。
-或-
<paramref name="count" /> &lt; 0 或 &gt; <paramref name="array" /> 長度減去 <paramref name="offset" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">寫入屬性限定名稱和值。</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute.">屬性的前置詞。</param>
      <param name="localName" vsli:raw="The local name of the attribute.">屬性的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">屬性的命名空間 URI。</param>
      <param name="value" vsli:raw="The attribute.">屬性。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">寫入屬性限定名稱和值。</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">屬性的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">屬性的命名空間 URI。</param>
      <param name="value" vsli:raw="The attribute.">屬性。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.">以非同步的方式將指定的二進位位元組編碼為 base64 並寫出產生的文字。</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">要編碼的位元組陣列。</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">緩衝區中的位置指示要寫入的位元組開頭。</param>
      <param name="count" vsli:raw="The number of bytes to write.">要寫入的位元組數。</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBase64&quot; /&gt; operation.">表示非同步 <see langword="WriteBase64" /> 作業的工作。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlDictionaryWriter" /> 方法。 在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。
-或-
在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlDictionaryWriter" /> 非同步方法。 在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">寫入具有文字內容的項目。</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">項目的前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="value" vsli:raw="The element content.">項目內容。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">寫入具有文字內容的項目。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <param name="value" vsli:raw="The element content.">項目內容。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">從 <see cref="T:System.Xml.XmlDictionaryReader" /> 寫入目前的 XML 節點。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要從 <see langword="true" /> 複製預設屬性，則為 <see langword="XmlReader" />，否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">從 <see cref="T:System.Xml.XmlReader" /> 寫入目前的 XML 節點。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要從 <see langword="true" /> 複製預設屬性，則為 <see cref="T:System.Xml.XmlReader" />，否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">寫出命名空間限定名稱。 這個方法會查詢在指定之命名空間範圍中的前置詞。</summary>
      <param name="localName" vsli:raw="The local name of the qualified name.">限定名稱的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the qualified name.">限定名稱的命名空間 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified prefix, local name, and namespace URI.">寫入具有指定之前置詞、本機名稱和命名空間 URI 之屬性的開頭。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the attribute.">屬性的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">屬性的命名空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name, and namespace URI.">寫入具有指定之本機名稱和命名空間 URI 之屬性的開頭。</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">屬性的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">屬性的命名空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace and prefix.">寫入指定的開頭標記，並使它與指定的命名空間及前置詞產生關聯。</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">項目的前置詞。</param>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">寫入器已關閉。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace.">寫入指定的開頭標記，並使它與指定的命名空間產生關聯。</summary>
      <param name="localName" vsli:raw="The local name of the element.">項目的本機名稱。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">項目的命名空間 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">寫入器已關閉。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the given text content.">寫入指定的文字內容。</summary>
      <param name="value" vsli:raw="The text to write.">要寫入的文字。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the text node that an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is currently positioned on.">寫入 <see cref="T:System.Xml.XmlDictionaryReader" /> 目前所在的文字節點。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; to get the text value from.">要從其中取得文字值的 <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <param name="isAttribute" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the reader is positioned on an attribute value or element content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示讀取器位於屬性值或項目內容上，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">寫入 <see cref="T:System.Guid" /> 值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; value to write.">要寫入的 <see cref="T:System.Guid" /> 值。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">寫入 <see cref="T:System.TimeSpan" /> 值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value to write.">要寫入的 <see cref="T:System.TimeSpan" /> 值。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary vsli:raw="Writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">從 <see cref="T:System.Xml.IStreamProvider" /> 寫入值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">要寫入的 <see cref="T:System.Xml.IStreamProvider" /> 值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; returns a &lt;see langword=&quot;null&quot; /&gt; stream object.">
        <paramref name="value" /> 會傳回 <see langword="null" /> 資料流物件。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlDictionaryWriter" /> 方法。 在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary vsli:raw="Writes a Unique Id value.">寫入唯一識別碼值。</summary>
      <param name="value" vsli:raw="The Unique Id value to write.">要寫入的唯一識別碼值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">寫入 <see cref="T:System.Xml.XmlDictionaryString" /> 值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlDictionaryString" /> 值。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)">
      <summary vsli:raw="Asynchronously writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">非同步寫入 <see cref="T:System.Xml.IStreamProvider" /> 中的值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">要寫入的 <see cref="T:System.Xml.IStreamProvider" /> 值。</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteValue&quot; /&gt; operation.">表示非同步 <see langword="WriteValue" /> 作業的工作。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlDictionaryWriter" /> 方法。 在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。
-或-
在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlDictionaryWriter" /> 非同步方法。 在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a standard XML attribute in the current node.">在目前節點中寫入標準 XML 屬性。</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">屬性的本機名稱。</param>
      <param name="value" vsli:raw="The value of the attribute.">屬性的值。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes an XML attribute in the current node.">在目前節點中寫入 XML 屬性。</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">屬性的本機名稱。</param>
      <param name="value" vsli:raw="The value of the attribute.">屬性的值。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a namespace declaration attribute.">寫入命名空間宣告屬性。</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">繫結至指定之命名空間的前置詞。</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">前置詞所繫結至的命名空間。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a namespace declaration attribute.">寫入命名空間宣告屬性。</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">繫結至指定之命名空間的前置詞。</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">前置詞所繫結至的命名空間。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> 為 <see langword="null" />。</exception>
    </member>
  </members>
</doc>