<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Debug</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Debug">
      <summary>提供一組方法和屬性，可協助偵錯程式碼。</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean)">
      <summary>檢查條件；如果條件為 <see langword="false" />，則會顯示列出呼叫堆疊的訊息方塊。</summary>
      <param name="condition">要評估的條件運算式。 如果條件為 <see langword="true" />，則不會傳送失敗訊息且不會顯示訊息方塊。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
      <summary>檢查條件；如果條件為 <see langword="false" />，則會輸出指定的訊息並且顯示列出呼叫堆疊的訊息方塊。</summary>
      <param name="condition">要評估的條件運算式。 如果條件為 <see langword="true" />，則不會傳送指定的訊息且不會顯示訊息方塊。</param>
      <param name="message">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的訊息。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
      <summary>檢查條件；如果條件為 <see langword="false" />，則輸出兩個指定的訊息，並顯示訊息方塊，該方塊會顯示呼叫堆疊。</summary>
      <param name="condition">要評估的條件運算式。 如果條件為 <see langword="true" />，就不會傳送指定的訊息，也不會顯示訊息方塊。</param>
      <param name="message">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的訊息。</param>
      <param name="detailMessage">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的詳細訊息。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
      <summary>檢查條件；如果條件為 <see langword="false" />，則會輸出兩個訊息 (簡單和格式化) 並且顯示列出呼叫堆疊的訊息方塊。</summary>
      <param name="condition">要評估的條件運算式。 如果條件為 <see langword="true" />，就不會傳送指定的訊息，也不會顯示訊息方塊。</param>
      <param name="message">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的訊息。</param>
      <param name="detailMessageFormat">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的複合格式字串。 這個訊息包含混合零個或多個格式項目的文字，而這些格式項目與 <paramref name="args" /> 陣列中的物件相對應。</param>
      <param name="args">物件陣列，包含零或多個要格式化的物件。</param>
    </member>
    <member name="P:System.Diagnostics.Debug.AutoFlush">
      <summary>取得或設定數值，表示每次寫入後是否要在 <see cref="M:System.Diagnostics.Debug.Flush" /> 上呼叫 <see cref="P:System.Diagnostics.Debug.Listeners" />。</summary>
      <returns>如果每次寫入後在 <see cref="M:System.Diagnostics.Debug.Flush" /> 上呼叫 <see cref="P:System.Diagnostics.Debug.Listeners" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Close">
      <summary>清除輸出緩衝區，然後對每個 <see cref="P:System.Diagnostics.Debug.Listeners" /> 呼叫 <see langword="Close" /> 方法。</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String)">
      <summary>發出指定的錯誤訊息。</summary>
      <param name="message">要發出的訊息。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
      <summary>發出錯誤訊息和詳細錯誤訊息。</summary>
      <param name="message">要發出的訊息。</param>
      <param name="detailMessage">要發出的詳細訊息。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Flush">
      <summary>清除輸出緩衝區並造成緩衝資料寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合。</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Indent">
      <summary>將目前的 <see cref="P:System.Diagnostics.Debug.IndentLevel" /> 增加一級。</summary>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentLevel">
      <summary>取得或設定縮排層級。</summary>
      <returns>縮排層級。 預設值為 0。</returns>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentSize">
      <summary>取得或設定縮排的空格數目。</summary>
      <returns>縮排中的空格數目。 預設值為 4。</returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String)">
      <summary>將後面接著行結束字元的訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="message">要寫入的訊息。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
      <summary>將後面接著行結束字元的格式化字串寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="format">複合格式字串，其中包含混合零或多個格式項目的文字，並與 <paramref name="args" /> 陣列中的物件相對應。</param>
      <param name="args">物件陣列，包含零個或多個要格式化的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> 無效。
-或-
用來指示要格式化的引數的數目小於零，或者大於或等於要格式化的指定物件數目。</exception>
    </member>
    <member name="M:System.Diagnostics.Debug.Unindent">
      <summary>將目前的 <see cref="P:System.Diagnostics.Debug.IndentLevel" /> 減少一級。</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object)">
      <summary>將物件的 <see cref="M:System.Object.ToString" /> 方法的值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="value">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
      <summary>將分類名稱和物件之 <see cref="M:System.Object.ToString" /> 方法的值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="value">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</param>
      <param name="category">用來組織輸出的分類名稱。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String)">
      <summary>將訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="message">要寫入的訊息。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String,System.String)">
      <summary>將分類名稱和訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="message">要寫入的訊息。</param>
      <param name="category">用來組織輸出的分類名稱。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
      <summary>如果條件為 <see langword="true" />，則將物件之 <see cref="M:System.Object.ToString" /> 方法的值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="condition">要評估的條件運算式。 如果條件為 <see langword="true" />，則將值寫入集合中的追蹤接聽項。</param>
      <param name="value">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
      <summary>如果條件為 <see langword="true" />，則將分類名稱和物件之 <see cref="M:System.Object.ToString" /> 方法的值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="condition">要評估的條件運算式。 如果條件為 <see langword="true" />，則將分類名稱和值寫入集合中的追蹤接聽項。</param>
      <param name="value">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</param>
      <param name="category">用來組織輸出的分類名稱。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
      <summary>如果條件為 <see langword="true" />，則將訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="condition">要評估的條件運算式。 如果條件為 <see langword="true" />，則將訊息寫入集合中的追蹤接聽項。</param>
      <param name="message">要寫入的訊息。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
      <summary>如果條件為 <see langword="true" />，則將分類名稱和訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="condition">要評估的條件運算式。 如果條件為 <see langword="true" />，則將分類名稱和訊息寫入集合中的追蹤接聽項。</param>
      <param name="message">要寫入的訊息。</param>
      <param name="category">用來組織輸出的分類名稱。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object)">
      <summary>將物件的 <see cref="M:System.Object.ToString" /> 方法的值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="value">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
      <summary>將分類名稱和物件之 <see cref="M:System.Object.ToString" /> 方法的值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="value">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</param>
      <param name="category">用來組織輸出的分類名稱。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String)">
      <summary>將後面接著行結束字元的訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="message">要寫入的訊息。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
      <summary>將後面接著行結束字元的格式化訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="format">複合格式字串，其中包含混合零或多個格式項目的文字，並與 <paramref name="args" /> 陣列中的物件相對應。</param>
      <param name="args">物件陣列，包含零或多個要格式化的物件。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
      <summary>將分類名稱和訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="message">要寫入的訊息。</param>
      <param name="category">用來組織輸出的分類名稱。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
      <summary>如果條件為 <see langword="true" />，則將物件之 <see cref="M:System.Object.ToString" /> 方法的值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="condition">要評估的條件運算式。 如果條件為 <see langword="true" />，則將值寫入集合中的追蹤接聽項。</param>
      <param name="value">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
      <summary>如果條件為 <see langword="true" />，則將分類名稱和物件之 <see cref="M:System.Object.ToString" /> 方法的值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="condition">要評估的條件運算式。 如果條件為 <see langword="true" />，則將分類名稱和值寫入集合中的追蹤接聽項。</param>
      <param name="value">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</param>
      <param name="category">用來組織輸出的分類名稱。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
      <summary>如果條件為 <see langword="true" />，則將訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="condition">要評估的條件運算式。 如果條件為 <see langword="true" />，則將訊息寫入集合中的追蹤接聽項。</param>
      <param name="message">要寫入的訊息。</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
      <summary>如果條件為 <see langword="true" />，則將分類名稱和訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</summary>
      <param name="condition">導致訊息寫入，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <param name="message">要寫入的訊息。</param>
      <param name="category">用來組織輸出的分類名稱。</param>
    </member>
    <member name="T:System.Diagnostics.Debugger">
      <summary>使用偵錯工具啟用通訊。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Diagnostics.Debugger.Break">
      <summary>表示已附加偵錯工具的中斷點。</summary>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.UIPermission" /> 未設定要中斷偵錯工具。</exception>
    </member>
    <member name="F:System.Diagnostics.Debugger.DefaultCategory">
      <summary>使用常數表示訊息的預設分類。</summary>
    </member>
    <member name="P:System.Diagnostics.Debugger.IsAttached">
      <summary>取得值，表示偵錯工具是否附加至處理序。</summary>
      <returns>如果偵錯工具已附加，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.IsLogging">
      <summary>檢查記錄是否由已附加偵錯工具啟用。</summary>
      <returns>如果已附加偵錯工具並啟用記錄，則為 <see langword="true" />，否則為 <see langword="false" />。 已附加偵錯工具是 <see langword="DbgManagedDebugger" /> 登錄機碼中註冊的 Managed 偵錯工具。 如需這個機碼的詳細資訊，請參閱啟用 JIT 附加偵錯。</returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.Launch">
      <summary>啟動偵錯工具，並將其附加至處理序。</summary>
      <returns>如果啟動成功或偵錯工具已附加，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.UIPermission" /> 並不是設定來啟動偵錯工具。</exception>
    </member>
    <member name="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)">
      <summary>傳送已附加偵錯工具的訊息。</summary>
      <param name="level">訊息重要性的說明。</param>
      <param name="category">訊息的分類。</param>
      <param name="message">要顯示的訊息。</param>
    </member>
    <member name="M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency">
      <summary>通知偵錯工具即將執行的路徑涉及跨執行緒相依性。</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableAttribute">
      <summary>決定成員如何顯示在偵測工具變數視窗中。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerBrowsableAttribute.#ctor(System.Diagnostics.DebuggerBrowsableState)">
      <summary>初始化 <see cref="T:System.Diagnostics.DebuggerBrowsableAttribute" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Diagnostics.DebuggerBrowsableState" /> 值，指定顯示成員的方法。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="state" /> 不是其中一個 <see cref="T:System.Diagnostics.DebuggerBrowsableState" /> 值。</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerBrowsableAttribute.State">
      <summary>取得屬性的顯示狀態。</summary>
      <returns>其中一個 <see cref="T:System.Diagnostics.DebuggerBrowsableState" /> 值。</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableState">
      <summary>提供偵錯工具的顯示指示。</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Collapsed">
      <summary>以摺疊方式顯示元素。</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Never">
      <summary>永遠不顯示元素。</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.RootHidden">
      <summary>切勿顯示根元素，如果元素是元素陣列的集合，則顯示子元素。</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerDisplayAttribute">
      <summary>決定類別或欄位如何在偵錯工具變數視窗中顯示。</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerDisplayAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.DebuggerDisplayAttribute" /> 類別的新執行個體。</summary>
      <param name="value">要顯示在型別執行個體之值資料行中的字串；空字串 ("") 會讓值資料行變成隱藏的資料行。</param>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Name">
      <summary>取得或設定顯示於偵錯工具變數視窗中的名稱。</summary>
      <returns>要顯示在偵錯工具變數視窗中的名稱。</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Target">
      <summary>取得或設定屬性 (Attribute) 的目標型別。</summary>
      <returns>屬性的目標類型。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.DebuggerDisplayAttribute.Target" /> 設定為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.TargetTypeName">
      <summary>取得或設定屬性 (Attribute) 的目標型別名稱。</summary>
      <returns>屬性 (Attribute) 的目標型別名稱。</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Type">
      <summary>取得或設定要在偵錯工具變數視窗之型別資料行中顯示的字串。</summary>
      <returns>要在偵錯工具變數視窗之型別資料行中顯示的字串。</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Value">
      <summary>取得要在偵錯工具變數視窗之值資料行中顯示的字串。</summary>
      <returns>要在偵錯工具變數視窗之值資料行中顯示的字串。</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerHiddenAttribute">
      <summary>指定 <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" />。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerHiddenAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerNonUserCodeAttribute">
      <summary>識別不屬於應用程式之使用者程式碼的類型或成員。</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerNonUserCodeAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.DebuggerNonUserCodeAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepperBoundaryAttribute">
      <summary>指出屬性之後的程式碼是要在執行模式，而不是在步驟模式中執行。</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepThroughAttribute">
      <summary>指示偵錯工具逐步執行程式碼，而不要進入程式碼。 此類別無法被繼承。</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepThroughAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.DebuggerStepThroughAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerTypeProxyAttribute">
      <summary>指定類型的顯示 Proxy。</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.String)">
      <summary>使用 Proxy 的型別名稱，初始化 <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" /> 類別的新執行個體。</summary>
      <param name="typeName">Proxy 型別的型別名稱。</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.Type)">
      <summary>使用 Proxy 的型別，初始化 <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" /> 類別的新執行個體。</summary>
      <param name="type">Proxy 型別。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.ProxyTypeName">
      <summary>取得 Proxy 型別的型別名稱。</summary>
      <returns>Proxy 型別的型別名稱。</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target">
      <summary>取得或設定屬性的目標型別。</summary>
      <returns>屬性的目標型別。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target" /> 設定為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.TargetTypeName">
      <summary>取得或設定目標型別的名稱。</summary>
      <returns>目標型別的名稱。</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerVisualizerAttribute">
      <summary>指定型別要具有視覺化檢視。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String)">
      <summary>指定視覺化檢視的型別名稱來初始化 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 類別的新執行個體。</summary>
      <param name="visualizerTypeName">視覺化檢視的完整型別名稱。</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.String)">
      <summary>指定視覺化檢視的型別名稱和視覺化檢視物件來源的型別名稱，來初始化 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 類別的新執行個體。</summary>
      <param name="visualizerTypeName">視覺化檢視的完整型別名稱。</param>
      <param name="visualizerObjectSourceTypeName">視覺化檢視物件來源的完整類型名稱。</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.Type)">
      <summary>指定視覺化檢視的型別名稱和視覺化檢視物件來源的型別，來初始化 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 類別的新執行個體。</summary>
      <param name="visualizerTypeName">視覺化檢視的完整型別名稱。</param>
      <param name="visualizerObjectSource">視覺化檢視物件來源的類型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type)">
      <summary>將 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 類別的新執行個體初始化，以便指定視覺化檢視的類別。</summary>
      <param name="visualizer">視覺化檢視的類型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizer" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.String)">
      <summary>將 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 類別的一個新執行個體初始化，指定視覺化檢視的類型以及視覺化檢視物件來源的類型名稱。</summary>
      <param name="visualizer">視覺化檢視的類型。</param>
      <param name="visualizerObjectSourceTypeName">視覺化檢視物件來源的完整類型名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizer" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.Type)">
      <summary>將 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 類別一個新的執行個體初始化，指定視覺化檢視的類型以及視覺化檢視物件來源的類型名稱。</summary>
      <param name="visualizer">視覺化檢視的類型。</param>
      <param name="visualizerObjectSource">視覺化檢視物件來源的類型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Description">
      <summary>取得或設定視覺化檢視的描述。</summary>
      <returns>視覺化檢視的描述。</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Target">
      <summary>在組件層級套用屬性時，取得或設定目標型別。</summary>
      <returns>視覺化檢視之目標的型別。</returns>
      <exception cref="T:System.ArgumentNullException">無法設定此值，因為它是 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.TargetTypeName">
      <summary>在組件層級套用屬性時，取得或設定完整型別名稱。</summary>
      <returns>目標型別的完整型別名稱。</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerObjectSourceTypeName">
      <summary>取得視覺化檢視物件來源的完整型別名稱。</summary>
      <returns>視覺化檢視物件來源的完整類型名稱。</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerTypeName">
      <summary>取得視覺化檢視的完整型別名稱。</summary>
      <returns>完整視覺化檢視型別名稱。</returns>
    </member>
  </members>
</doc>