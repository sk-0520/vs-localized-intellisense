<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.StackTrace</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.StackFrame">
      <summary>提供 <see cref="T:System.Diagnostics.StackFrame" /> 的相關資訊，代表目前執行緒的呼叫堆疊上的函式呼叫。</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.StackFrame" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
      <summary>選擇性地擷取來源資訊，以初始化 <see cref="T:System.Diagnostics.StackFrame" /> 類別的新執行個體。</summary>
      <param name="fNeedFileInfo">若要擷取堆疊框架的檔名、行號和欄號，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Diagnostics.StackFrame" /> 類別的新執行個體，而該類別對應於目前堆疊框架上方的框架。</summary>
      <param name="skipFrames">要略過的堆疊上的框架數。</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
      <summary>選擇性地擷取來源資訊，以初始化 <see cref="T:System.Diagnostics.StackFrame" /> 類別的新執行個體，而該類別對應於目前堆疊框架上方的框架。</summary>
      <param name="skipFrames">要略過的堆疊上的框架數。</param>
      <param name="fNeedFileInfo">若要擷取堆疊框架的檔名、行號和欄號，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
      <summary>初始化 <see cref="T:System.Diagnostics.StackFrame" /> 類別的新執行個體，而該類別只包含指定的檔名和行號。</summary>
      <param name="fileName">檔案名稱。</param>
      <param name="lineNumber">指定檔案中的行號。</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
      <summary>初始化 <see cref="T:System.Diagnostics.StackFrame" /> 類別的新執行個體，而該類別只包含指定的檔名、行號和欄號。</summary>
      <param name="fileName">檔案名稱。</param>
      <param name="lineNumber">指定檔案中的行號。</param>
      <param name="colNumber">指定檔案中的欄位數目。</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
      <summary>取得檔案中的欄位數目，含有正在執行的程式碼。 這項資訊通常擷取自可執行檔的偵錯符號。</summary>
      <returns>檔案欄號，如果無法確定檔案欄號則為 0 (零)。</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileLineNumber">
      <summary>取得檔案中的行號，含有正在執行的程式碼。 這項資訊通常擷取自可執行檔的偵錯符號。</summary>
      <returns>檔案行號，如果無法確定檔案行號則為 0 (零)。</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileName">
      <summary>取得檔案名稱，含有正在執行的程式碼。 這項資訊通常擷取自可執行檔的偵錯符號。</summary>
      <returns>檔名，如果無法確定檔名則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetILOffset">
      <summary>為正在執行的方法取得從 Microsoft intermediate language (MSIL) 程式碼起始的位移。 這項位移可能是大約值，這是根據 Just-In-Time (JIT) 編譯器是否產生偵錯程式碼而定。 由 <see cref="T:System.Diagnostics.DebuggableAttribute" /> 控制產生這個偵錯資訊。</summary>
      <returns>從 MSIL 程式碼起始的位移，用於正在執行的方法。</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetMethod">
      <summary>取得框架正在執行的所在方法。</summary>
      <returns>框架正在執行的所在方法。</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetNativeOffset">
      <summary>為正在執行的方法取得從原生 (Native) Just-In-Time (JIT) 編譯程式碼起始的位移。 由 <see cref="T:System.Diagnostics.DebuggableAttribute" /> 類別控制產生這個偵錯資訊。</summary>
      <returns>從 JIT 編譯程式碼起始的位移，用於正在執行的方法。</returns>
    </member>
    <member name="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
      <summary>當原生的 (Native) 或 Microsoft Intermediate Language (MSIL) 的位移不明時，定義傳回自 <see cref="M:System.Diagnostics.StackFrame.GetNativeOffset" /> 或 <see cref="M:System.Diagnostics.StackFrame.GetILOffset" /> 方法的值。 這個欄位是常數。</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.ToString">
      <summary>建立堆疊追蹤的可讀取表示。</summary>
      <returns>堆疊追蹤的可讀取表示。</returns>
    </member>
    <member name="T:System.Diagnostics.StackFrameExtensions">
      <summary>提供 <see cref="T:System.Diagnostics.StackFrame" /> 類別的擴充方法，代表目前執行緒呼叫堆疊上的函式呼叫。</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)">
      <summary>傳回此堆疊框架正在執行的指標，其指向原生映像的基底位址。</summary>
      <param name="stackFrame">堆疊框架。</param>
      <returns>指向原生映像之基底位址的指標，或者 <see cref="F:System.IntPtr.Zero" /> (如果您以 .NET Framework 為目標)。</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)">
      <summary>取得正在執行之方法的原生程式碼開頭的介面指標。</summary>
      <param name="stackFrame">堆疊框架。</param>
      <returns>正在執行之方法的原生程式碼開頭的介面指標，或者 <see cref="F:System.IntPtr.Zero" /> (如果您以 .NET Framework 為目標)。</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)">
      <summary>指出正在執行的方法是否有從 IL 程式碼起始的可用位移。</summary>
      <param name="stackFrame">堆疊框架。</param>
      <returns>如有可用的位移，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)">
      <summary>指出指定的框架執行所在的方法相關資訊是否可用。</summary>
      <param name="stackFrame">堆疊框架。</param>
      <returns>如果目前的框架執行所在的方法相關資訊可用，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)">
      <summary>指出指定的堆疊框架是否有可用的原生映像。</summary>
      <param name="stackFrame">堆疊框架。</param>
      <returns>如果原生影像可供此堆疊框架使用，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)">
      <summary>指出包含程式碼的檔案是否可用，指定的堆疊框架正在執行此程式碼。</summary>
      <param name="stackFrame">堆疊框架。</param>
      <returns>如果指定的堆疊框架正在執行的程式碼可用，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Diagnostics.StackTrace">
      <summary>表示堆疊追蹤，這是一個或多個堆疊框架的已排序集合。</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor">
      <summary>從呼叫端的框架來初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
      <summary>從呼叫端的框架來初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體，可以選擇性地擷取來源資訊。</summary>
      <param name="fNeedFileInfo">若要擷取檔案名稱、行號和資料行編號，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
      <summary>初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體，這個執行個體含有單一框架。</summary>
      <param name="frame">
        <see cref="T:System.Diagnostics.StackTrace" /> 物件應該含有的框架。</param>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
      <summary>使用提供的例外狀況物件初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體。</summary>
      <param name="e">例外狀況物件，從其中建構堆疊追蹤。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
      <summary>使用提供的例外狀況物件，及選擇性地擷取來源資訊，來初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體。</summary>
      <param name="exception">例外狀況物件，從其中建構堆疊追蹤。</param>
      <param name="needFileInfo">若要擷取檔案名稱、行號和資料行編號，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
      <summary>使用所提供的例外狀況物件初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體，並跳過指定數量的框架。</summary>
      <param name="e">例外狀況物件，從其中建構堆疊追蹤。</param>
      <param name="skipFrames">要開始追蹤的堆疊上的框架數。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="skipFrames" /> 參數為負。</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
      <summary>使用所提供的例外狀況物件將 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體初始化，並跳過指定數量的框架，亦可選擇性擷取來源資訊。</summary>
      <param name="e">例外狀況物件，從其中建構堆疊追蹤。</param>
      <param name="skipFrames">要開始追蹤的堆疊上的框架數。</param>
      <param name="fNeedFileInfo">若要擷取檔案名稱、行號和資料行編號，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="skipFrames" /> 參數為負。</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
      <summary>從呼叫端的框架初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體，略過指定的框架數。</summary>
      <param name="skipFrames">要開始追蹤的堆疊上的框架數。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="skipFrames" /> 參數為負。</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
      <summary>使用呼叫端的框架初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體，並跳過指定數量的框架，亦可選擇性擷取來源資訊。</summary>
      <param name="skipFrames">要開始追蹤的堆疊上的框架數。</param>
      <param name="fNeedFileInfo">若要擷取檔案名稱、行號和資料行編號，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="skipFrames" /> 參數為負。</exception>
    </member>
    <member name="P:System.Diagnostics.StackTrace.FrameCount">
      <summary>取得堆疊追蹤中的框架數。</summary>
      <returns>堆疊追蹤裡的框架數。</returns>
    </member>
    <member name="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
      <summary>取得指定的堆疊框架。</summary>
      <param name="index">要求的堆疊框架索引。</param>
      <returns>指定的堆疊框架。</returns>
    </member>
    <member name="M:System.Diagnostics.StackTrace.GetFrames">
      <summary>傳回目前堆疊追蹤內的所有堆疊框架的複本。</summary>
      <returns>
        <see cref="T:System.Diagnostics.StackFrame" /> 型別的陣列，表示堆疊追蹤中的函式呼叫。</returns>
    </member>
    <member name="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
      <summary>定義要從堆疊追蹤省略的方法數預設值。 這個欄位是常數。</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.ToString">
      <summary>建立堆疊追蹤的可讀取表示。</summary>
      <returns>堆疊追蹤的可讀取表示。</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolBinder">
      <summary>代表 Managed 程式碼的符號繫結器。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolBinder.GetReader(System.Int32,System.String,System.String)">
      <summary>為目前檔案取得符號讀取器的介面。</summary>
      <param name="importer">中繼資料匯入介面。</param>
      <param name="filename">需要讀取器介面的檔案名稱。</param>
      <param name="searchPath">用來尋找符號檔的搜尋路徑。</param>
      <returns>讀取偵錯符號的 <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> 介面。</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolBinder1">
      <summary>表示 Managed 程式碼的符號繫結器 (Binder)。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolBinder1.GetReader(System.IntPtr,System.String,System.String)">
      <summary>為目前的檔案取得符號讀取器的介面。</summary>
      <param name="importer">
        <see cref="T:System.IntPtr" />，參考中繼資料匯入介面。</param>
      <param name="filename">讀取器介面所需要的檔案名稱。</param>
      <param name="searchPath">用來搜尋符號檔的搜尋路徑。</param>
      <returns>讀取偵錯符號的 <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> 介面。</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolDocument">
      <summary>代表符號存放區所參考的文件。</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.CheckSumAlgorithmId">
      <summary>取得總和檢查碼 (Checksum) 演算法識別項。</summary>
      <returns>識別總和檢查碼演算法的 GUID。 如果沒有任何總和檢查碼的話，該值會全部為零。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.DocumentType">
      <summary>取得目前文件的類型。</summary>
      <returns>目前文件的類型。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.FindClosestLine(System.Int32)">
      <summary>傳回最接近的一行 (也就是序列點)，提供目前文件的某一行 (可能是或可能不是序列點)。</summary>
      <param name="line">文件中的指定行。</param>
      <returns>最接近的一行 (也就是序列點)。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.GetCheckSum">
      <summary>取得總和檢查碼。</summary>
      <returns>總和檢查碼。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.GetSourceRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>取得指定的範圍的內嵌文件來源。</summary>
      <param name="startLine">目前文件中的開始行。</param>
      <param name="startColumn">目前文件中的開始欄。</param>
      <param name="endLine">目前文件中的結束行。</param>
      <param name="endColumn">目前文件中的結束欄。</param>
      <returns>指定的範圍的文件來源。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.HasEmbeddedSource">
      <summary>檢查目前文件是否存放在符號存放區中。</summary>
      <returns>如果目前文件是存放在符號存放區中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.Language">
      <summary>取得目前文件的語言。</summary>
      <returns>目前文件的語言。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.LanguageVendor">
      <summary>取得目前文件的語言廠商。</summary>
      <returns>目前文件的語言廠商。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.SourceLength">
      <summary>取得內嵌來源的長度 (以位元組為單位)。</summary>
      <returns>目前文件的來源長度。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.URL">
      <summary>取得目前文件的 URL。</summary>
      <returns>目前文件的 URL。</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter">
      <summary>代表符號存放區所參考的文件。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum(System.Guid,System.Byte[])">
      <summary>設定總和檢查碼資訊。</summary>
      <param name="algorithmId">表示演算法 ID 的 GUID。</param>
      <param name="checkSum">總和檢查碼。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource(System.Byte[])">
      <summary>在符號存放區中存放文件的未經處理來源。</summary>
      <param name="source">文件來源，表示為不帶正負號的位元組。</param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolMethod">
      <summary>表示符號存放區 (Store) 內的方法。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace">
      <summary>取得其中定義目前方法的命名空間。</summary>
      <returns>其中定義目前方法的命名空間。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>取得 Microsoft Intermediate Language (MSIL) 位移，位於對應到指定位置的方法內。</summary>
      <param name="document">要求位移的文件。</param>
      <param name="line">對應到位移的文件行。</param>
      <param name="column">對應到位移的文件欄。</param>
      <returns>位移，位於指定的文件內。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters">
      <summary>取得目前方法的參數。</summary>
      <returns>目前方法的參數陣列。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>取得開始和結束位移配對的陣列，其對應到 Microsoft intermediate language (MSIL) 的範圍，指定這個方法內所涵蓋的位置。</summary>
      <param name="document">要求位移的文件。</param>
      <param name="line">對應到範圍的文件行。</param>
      <param name="column">對應到範圍的文件欄。</param>
      <returns>開始和結束位移配對的陣列。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)">
      <summary>當指定方法內的位移時，傳回最封入的語彙範圍。</summary>
      <param name="offset">位元組位移，位於語彙範圍的方法內。</param>
      <returns>最封入的語彙範圍，用於方法內指定的位元組位移。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>取得目前方法的序列點。</summary>
      <param name="offsets">位元組位移的陣列，在序列點的方法開頭。</param>
      <param name="documents">序列點所在的文件陣列。</param>
      <param name="lines">序列點所在文件中的行陣列。</param>
      <param name="columns">序列點所在文件中的欄陣列。</param>
      <param name="endLines">序列點結束的文件中的行陣列。</param>
      <param name="endColumns">序列點結束的文件中的欄陣列。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])">
      <summary>取得目前方法來源的開始和結束位置。</summary>
      <param name="docs">開始和結束的來源文件。</param>
      <param name="lines">在對應來源文件中開始和結束的行。</param>
      <param name="columns">在對應來源文件中開始和結束的欄。</param>
      <returns>如果位置有被定義，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.RootScope">
      <summary>取得目前方法的根語彙範圍。 這個範圍會封入整個方法。</summary>
      <returns>封入整個方法的根語彙範圍。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount">
      <summary>取得方法中序列點的計數。</summary>
      <returns>方法中序列點的計數。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.Token">
      <summary>取得 <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />，其包含目前方法的中繼資料 (Metadata)。</summary>
      <returns>目前方法的中繼資料語彙基元 (Token)。</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolNamespace">
      <summary>表示符號存放區 (Store) 內的命名空間。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolNamespace.GetNamespaces">
      <summary>取得目前命名空間的子成員。</summary>
      <returns>目前命名空間的子成員。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolNamespace.GetVariables">
      <summary>取得目前命名空間內定義在全域範圍的所有變數。</summary>
      <returns>目前命名空間內定義在全域範圍的變數。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolNamespace.Name">
      <summary>取得目前的命名空間。</summary>
      <returns>目前的命名空間。</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolReader">
      <summary>表示 Managed 程式碼的符號讀取器 (Reader)。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary>取得由語言、廠商和類型指定的文件。</summary>
      <param name="url">識別文件的 URL。</param>
      <param name="language">文件語言。 您可以指定這個參數為 <see cref="F:System.Guid.Empty" />。</param>
      <param name="languageVendor">文件語言的廠商識別。 您可以指定這個參數為 <see cref="F:System.Guid.Empty" />。</param>
      <param name="documentType">文件的類型。 您可以指定這個參數為 <see cref="F:System.Guid.Empty" />。</param>
      <returns>指定的文件。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments">
      <summary>取得定義在符號存放區中所有文件的陣列。</summary>
      <returns>定義在符號存放區中所有文件的陣列。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables">
      <summary>取得模組中所有全域變數。</summary>
      <returns>模組中所有變數的陣列。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>取得當指定方法識別項時的符號讀取器方法物件。</summary>
      <param name="method">方法的中繼資料語彙基元。</param>
      <returns>指定的方法識別項之符號讀取器方法物件。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)">
      <summary>取得當指定方法的識別項和其編輯後繼續版本時的符號讀取器方法物件。</summary>
      <param name="method">方法的中繼資料語彙基元。</param>
      <param name="version">方法的編輯後繼續版本。</param>
      <returns>指定的方法識別項之符號讀取器方法物件。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>取得符號讀取器方法物件，包含文件中指定的位置。</summary>
      <param name="document">方法所在的文件。</param>
      <param name="line">文件內的行位置。 行是有編號的，以 1 為開頭。</param>
      <param name="column">文件內的欄位置。 欄是有編號的，以 1 為開頭。</param>
      <returns>文件中指定的位置之讀取器方法物件。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces">
      <summary>取得目前符號存放區內定義在全域範圍中的命名空間。</summary>
      <returns>目前符號存放區內定義在全域範圍中的命名空間。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)">
      <summary>取得當指定屬性名稱時的屬性值。</summary>
      <param name="parent">屬性要求的物件之中繼資料語彙基元。</param>
      <param name="name">屬性名稱。</param>
      <returns>屬性的值。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>當指定父代時，取得不是區域的變數。</summary>
      <param name="parent">變數要求的型別之中繼資料語彙基元。</param>
      <returns>父代的變數陣列。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint">
      <summary>取得方法的中繼資料語彙基元 (Metadata Token)，如果有的話，這個語彙基元會被指定為模組的使用者進入點 (Entry Point)。</summary>
      <returns>方法的中繼資料語彙基元，是模組的使用者進入點。</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolScope">
      <summary>表示 <see cref="T:System.Diagnostics.SymbolStore.ISymbolMethod" /> 內的語彙範圍 (Lexical Scope)，提供範圍的開始和結束位移的存取，以及其子系和父代範圍的存取。</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.EndOffset">
      <summary>取得目前語彙範圍的結束位移。</summary>
      <returns>目前語彙範圍的結束位移。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetChildren">
      <summary>取得目前語彙範圍的子系語彙範圍。</summary>
      <returns>目前語彙範圍的子系語彙範圍。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetLocals">
      <summary>取得目前語彙範圍內的區域變數。</summary>
      <returns>目前語彙範圍內的區域變數。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetNamespaces">
      <summary>取得在目前範圍內使用的命名空間。</summary>
      <returns>在目前範圍內使用的命名空間。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.Method">
      <summary>取得包含目前語彙範圍的方法。</summary>
      <returns>包含目前語彙範圍的方法。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.Parent">
      <summary>取得目前範圍的父代語彙範圍。</summary>
      <returns>目前範圍的父代語彙範圍。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.StartOffset">
      <summary>取得目前語彙範圍的開始位移。</summary>
      <returns>目前語彙範圍的開始位移。</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolVariable">
      <summary>表示符號存放區內的變數。</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField1">
      <summary>取得變數的第一個位址。</summary>
      <returns>變數的第一個位址。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField2">
      <summary>取得變數的第二個位址。</summary>
      <returns>變數的第二個位址。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField3">
      <summary>取得變數的第三個位址。</summary>
      <returns>變數的第三個位址。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressKind">
      <summary>取得描述位址類型的 <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" /> 值。</summary>
      <returns>位址的類型。 其中一個 <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" /> 值。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.Attributes">
      <summary>取得變數的屬性。</summary>
      <returns>變數屬性。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.EndOffset">
      <summary>取得變數範圍內變數的結束位移。</summary>
      <returns>變數的結束位移。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolVariable.GetSignature">
      <summary>取得變數簽章。</summary>
      <returns>當做不透明 Blob 的變數簽章。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.Name">
      <summary>取得變數的名稱。</summary>
      <returns>變數的名稱。</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.StartOffset">
      <summary>取得變數範圍內變數的開始位移。</summary>
      <returns>變數的開始位移。</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolWriter">
      <summary>表示 Managed 程式碼的符號寫入器。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.Close">
      <summary>關閉 <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> 和認可符號存放區的符號。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod">
      <summary>關閉目前的方法。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace">
      <summary>關閉最近一次使用的命名空間。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
      <summary>關閉目前的語彙範圍。</summary>
      <param name="endOffset">範圍中超過最後一個指令的點。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary>定義來源文件。</summary>
      <param name="url">識別文件的 URL。</param>
      <param name="language">文件語言。 這個參數可以是 <see cref="F:System.Guid.Empty" />。</param>
      <param name="languageVendor">文件語言的廠商識別。 這個參數可以是 <see cref="F:System.Guid.Empty" />。</param>
      <param name="documentType">文件的類型。 這個參數可以是 <see cref="F:System.Guid.Empty" />。</param>
      <returns>表示文件的物件。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>定義型別中的欄位或全域欄位。</summary>
      <param name="parent">中繼資料 (Metadata) 類型或方法語彙基元 (Token)。</param>
      <param name="name">欄位名稱。</param>
      <param name="attributes">欄位屬性 (Attribute) 的位元組合。</param>
      <param name="signature">欄位簽章。</param>
      <param name="addrKind">
        <paramref name="addr1" /> 和 <paramref name="addr2" /> 的位址類型。</param>
      <param name="addr1">欄位規格的第一個位址。</param>
      <param name="addr2">欄位規格的第二個位址。</param>
      <param name="addr3">欄位規格的第三個位址。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>定義單一全域變數。</summary>
      <param name="name">全域變數名稱。</param>
      <param name="attributes">全域變數屬性的位元組合。</param>
      <param name="signature">全域變數簽章。</param>
      <param name="addrKind">
        <paramref name="addr1" />、<paramref name="addr2" /> 和 <paramref name="addr3" /> 的位址類型。</param>
      <param name="addr1">全域變數規格的第一個位址。</param>
      <param name="addr2">全域變數規格的第二個位址。</param>
      <param name="addr3">全域變數規格的第三個位址。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>在目前的語彙範圍中定義單一變數。</summary>
      <param name="name">區域變數名稱。</param>
      <param name="attributes">區域變數屬性的位元組合。</param>
      <param name="signature">區域變數簽章。</param>
      <param name="addrKind">
        <paramref name="addr1" />、<paramref name="addr2" /> 和 <paramref name="addr3" /> 的位址類型。</param>
      <param name="addr1">區域變數規格的第一個位址。</param>
      <param name="addr2">區域變數規格的第二個位址。</param>
      <param name="addr3">區域變數規格的第三個位址。</param>
      <param name="startOffset">變數的開始位移。 如果這個參數是零，則會忽略它，並定義整個範圍的變數。 如果這個參數不是零，該變數便會落在目前範圍的位移內。</param>
      <param name="endOffset">變數的結束位移。 如果這個參數是零，則會忽略它，並定義整個範圍的變數。 如果這個參數不是零，該變數便會落在目前範圍的位移內。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>定義目前方法中的單一參數。 每一個參數的型別是從它位於方法簽章內的位置中取出。</summary>
      <param name="name">參數名稱。</param>
      <param name="attributes">參數屬性的位元組合。</param>
      <param name="sequence">參數簽章。</param>
      <param name="addrKind">
        <paramref name="addr1" />、<paramref name="addr2" /> 和 <paramref name="addr3" /> 的位址類型。</param>
      <param name="addr1">參數規格的第一個位址。</param>
      <param name="addr2">參數規格的第二個位址。</param>
      <param name="addr3">參數規格的第三個位址。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>在目前的方法內定義一組序列點。</summary>
      <param name="document">文件物件，要為其定義序列點。</param>
      <param name="offsets">從方法的開頭來測量的序列點位移。</param>
      <param name="lines">序列點的文件行。</param>
      <param name="columns">序列點的文件位置。</param>
      <param name="endLines">序列點的文件結束行。</param>
      <param name="endColumns">序列點的文件結束位置。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
      <summary>設定要與寫入器產生關聯的中繼資料發出者介面。</summary>
      <param name="emitter">中繼資料發出器介面。</param>
      <param name="filename">偵錯符號寫入的檔案名稱。 有些寫入器需要檔名，有些則不需要。 如果檔案名稱是指定給不使用檔案名稱的寫入器，則這個參數會被忽略。</param>
      <param name="fFullBuild">
        <see langword="true" /> 表示這是完整重建，而 <see langword="false" /> 則表示這是累加編譯。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>開啟要置入符號資訊的方法。</summary>
      <param name="method">要開啟之方法的中繼資料語彙基元。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
      <summary>開啟新的命名空間。</summary>
      <param name="name">新命名空間名稱。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
      <summary>開啟目前方法中的新語彙範圍。</summary>
      <param name="startOffset">從方法開頭到語彙範圍中第一個指令的位移 (以位元組為單位)。</param>
      <returns>不透明範圍識別項，稍後可以與 <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> 一起使用來定義範圍的開始和結束位移。 在這種情況下，傳遞到 <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /> 和 <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" /> 的位移會被忽略。 範圍識別項只有在目前方法中才會有效。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
      <summary>指定原始程式檔內方法的實際開頭和結尾。 使用 <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /> 來指定方法的範圍，以及存在於方法內的獨立序列點。</summary>
      <param name="startDoc">包含開始位置的文件。</param>
      <param name="startLine">開始的行號。</param>
      <param name="startColumn">開始的欄。</param>
      <param name="endDoc">包含結束位置的文件。</param>
      <param name="endLine">結束的行號。</param>
      <param name="endColumn">結束的欄號。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
      <summary>定義指定語彙範圍的位移範圍。</summary>
      <param name="scopeID">語彙範圍的識別項。</param>
      <param name="startOffset">語彙範圍開頭的位元組位移。</param>
      <param name="endOffset">語彙範圍結尾的位元組位移。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
      <summary>在指定屬性名稱和屬性值時定義屬性。</summary>
      <param name="parent">屬性被定義的中繼資料語彙基元。</param>
      <param name="name">屬性名稱。</param>
      <param name="data">屬性值。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
      <summary>設定 Managed <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> 用來發出符號的基礎 <see langword="ISymUnmanagedWriter" /> (對應的 Unmanaged 介面)。</summary>
      <param name="underlyingWriter">程式碼的指標，該程式碼代表基礎寫入器。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>識別使用者定義的方法做為目前模組的進入點 (Entry Point)。</summary>
      <param name="entryMethod">方法的中繼資料語彙基元，為使用者的進入點。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
      <summary>指定是在開放式語彙範圍內使用特定且完整的命名空間名稱。</summary>
      <param name="fullName">命名空間的完整名稱。</param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymAddressKind">
      <summary>指定 <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" /> 介面的方法 <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />、<see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" /> 和 <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> 中，區域變數、參數和欄位的位址類型。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.BitField">
      <summary>位元欄位 (Bit Field)。 <paramref name="addr1" /> 參數是欄位的開始位置，而 <paramref name="addr2" /> 參數是欄位長度。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.ILOffset">
      <summary>Microsoft Intermediate Language (MSIL) 位移 (Offset)。 <paramref name="addr1" /> 參數是 MSIL 區域變數或參數索引。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset">
      <summary>原生位移 (Offset)。 <paramref name="addr1" /> 參數是從父代 (Parent) 開頭的位移 (Offset)。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister">
      <summary>原生暫存器位址。 <paramref name="addr1" /> 參數是存放變數的暫存器。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister">
      <summary>暫存器的相對位址。 <paramref name="addr1" /> 參數是低序位暫存器，而 <paramref name="addr2" /> 參數是高序位暫存器。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative">
      <summary>暫存器的相對位址。 <paramref name="addr1" /> 參數是暫存器，而 <paramref name="addr2" /> 參數是位移。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack">
      <summary>暫存器的相對位址。 <paramref name="addr1" /> 參數是低序位暫存器、<paramref name="addr2" /> 參數是堆疊暫存器，而 <paramref name="addr3" /> 參數是從堆疊指標到數值的高序位部分的位移 (Offset)。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA">
      <summary>原生相關虛擬位址 (RVA)。 <paramref name="addr1" /> 參數是模組中的 RVA。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset">
      <summary>原生區段位移 (Offset)。 <paramref name="addr1" /> 參數是區段，而 <paramref name="addr2" /> 參數是位移 (Offset)。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister">
      <summary>暫存器的相對位址。 <paramref name="addr1" /> 參數是堆疊暫存器、<paramref name="addr2" /> 參數是從堆疊指標到數值的低序位部分的位移 (Offset)，而 <paramref name="addr3" /> 參數是高序位暫存器。</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymbolToken">
      <summary>
        <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> 結構是表示符號資訊之語彙基元 (Token) 的物件表示。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.#ctor(System.Int32)">
      <summary>當有指定的值時，初始化 <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> 結構的新執行個體。</summary>
      <param name="val">要用於語彙基元的值。</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>判斷 <paramref name="obj" /> 是否等於這個執行個體。</summary>
      <param name="obj">要進行檢查的 <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />。</param>
      <returns>如果 <see langword="true" /> 等於這個執行個體則為 <paramref name="obj" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Object)">
      <summary>決定 <paramref name="obj" /> 是否為 <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> 的執行個體，並且等於這個執行個體。</summary>
      <param name="obj">要檢查的物件。</param>
      <returns>如果 <paramref name="obj" /> 是 <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> 的執行個體，並且等於這個執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.GetHashCode">
      <summary>產生目前語彙基元的雜湊程式碼 (Hash Code)。</summary>
      <returns>目前語彙基元的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.GetToken">
      <summary>取得目前語彙基元的值。</summary>
      <returns>目前語彙基元的值。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>傳回值，這個值表示兩個 <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> 物件是否相等。</summary>
      <param name="a">
        <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> 結構。</param>
      <param name="b">
        <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> 結構。</param>
      <returns>如果 <paramref name="a" /> 和 <paramref name="b" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>傳回值，指出兩個 <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> 物件是否不相等。</summary>
      <param name="a">
        <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> 結構。</param>
      <param name="b">
        <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> 結構。</param>
      <returns>如果 <paramref name="a" /> 和 <paramref name="b" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymDocumentType">
      <summary>保留要用於符號存放區的文件類型之公用 GUID。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentType.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.SymbolStore.SymDocumentType" /> 類別的新執行個體。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymDocumentType.Text">
      <summary>指定要用於符號存放區的文件類型之 GUID。</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymLanguageType">
      <summary>保留要用於符號存放區的語言類型之公用 GUID。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymLanguageType.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.SymbolStore.SymLanguageType" /> 類別的新執行個體。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Basic">
      <summary>指定要用於符號存放區的 Basic 語言類型之 GUID。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.C">
      <summary>指定要用於符號存放區的 C 語言類型之 GUID。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Cobol">
      <summary>指定要用於符號存放區的 Cobol 語言類型之 GUID。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.CPlusPlus">
      <summary>指定要用於符號存放區的 C++ 語言類型之 GUID。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.CSharp">
      <summary>指定要用於符號存放區的 C# 語言類型之 GUID。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.ILAssembly">
      <summary>指定要用於符號存放區的 ILAssembly 語言類型之 GUID。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Java">
      <summary>指定要用於符號存放區的 Java 語言類型之 GUID。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.JScript">
      <summary>指定要用於符號存放區的 JScript 語言類型之 GUID。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.MCPlusPlus">
      <summary>指定要用於符號存放區的 C++ 語言類型之 GUID。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Pascal">
      <summary>指定要用於符號存放區的 Pascal 語言類型之 GUID。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.SMC">
      <summary>指定要用於符號存放區的 SMC 語言類型之 GUID。</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymLanguageVendor">
      <summary>保留要用於符號存放區的語言廠商之公用 GUID。</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymLanguageVendor.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.SymbolStore.SymLanguageVendor" /> 類別的新執行個體。</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageVendor.Microsoft">
      <summary>指定 Microsoft 語言廠商的 GUID。</summary>
    </member>
  </members>
</doc>