<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Transactions.Local</name>
  </assembly>
  <members>
    <member name="T:System.Transactions.CommittableTransaction">
      <summary vsli:raw="Describes a committable transaction.">描述可認可的交易。</summary>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.CommittableTransaction&quot; /&gt; class.">初始化 <see cref="T:System.Transactions.CommittableTransaction" /> 類別的新執行個體。</summary>
      <exception cref="T:System.PlatformNotSupportedException">嘗試在 Windows 98、Windows 98 Second Edition 或 Windows Millennium Edition 下建立交易。</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.CommittableTransaction&quot; /&gt; class with the specified &lt;paramref name=&quot;timeout&quot; /&gt; value.">使用指定的 <paramref name="timeout" /> 值，初始化 <see cref="T:System.Transactions.CommittableTransaction" /> 類別的新執行個體。</summary>
      <param name="timeout" vsli:raw="The maximum amount of time the transaction can exist, before it is aborted.">交易在中止之前可存在的最大時間量。</param>
      <exception cref="T:System.PlatformNotSupportedException">嘗試在 Windows 98、Windows 98 Second Edition 或 Windows Millennium Edition 下建立交易。</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.Transactions.TransactionOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.CommittableTransaction&quot; /&gt; class with the specified transaction options.">使用指定的交易選項，初始化 <see cref="T:System.Transactions.CommittableTransaction" /> 類別的新執行個體。</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; structure that describes the transaction options to use for the new transaction.">
        <see cref="T:System.Transactions.TransactionOptions" /> 結構，描述要用於新交易的交易選項。</param>
      <exception cref="T:System.PlatformNotSupportedException">嘗試在 Windows 98、Windows 98 Second Edition 或 Windows Millennium Edition 下建立交易。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is invalid.">
        <paramref name="options" /> 無效。</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an attempt to commit the transaction asynchronously.">開始嘗試非同步認可交易。</summary>
      <param name="asyncCallback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that is invoked when the transaction completes. This parameter can be &lt;see langword=&quot;null&quot; /&gt;, in which case the application is not notified of the transaction's completion. Instead, the application must use the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface to check for completion and wait accordingly, or call &lt;see cref=&quot;M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)&quot; /&gt; to wait for completion.">在交易完成時所叫用 (Invoke) 的 <see cref="T:System.AsyncCallback" /> 委派。 這個參數可以是 <see langword="null" />，在此情況下，不會告知應用程式交易的完成狀態， 而是應用程式必須使用 <see cref="T:System.IAsyncResult" /> 介面來檢查是否完成並適當地等候，或呼叫 <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> 以等候完成。</param>
      <param name="asyncState" vsli:raw="An object, which might contain arbitrary state information, associated with the asynchronous commitment. This object is passed to the callback, and is not interpreted by &lt;see cref=&quot;N:System.Transactions&quot; /&gt;. A null reference is permitted.">與非同步認可關聯的物件，該物件可能包含任意狀態資訊。 這個物件會傳遞至回呼 (Callback)，且不會由 <see cref="N:System.Transactions" /> 所解譯。 允許使用 null 參考。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface that can be used by the caller to check the status of the asynchronous operation, or to wait for the operation to complete.">
        <see cref="T:System.IAsyncResult" /> 介面，可由呼叫端用來檢查非同步作業的狀態，或等候作業完成。</returns>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.Commit">
      <summary vsli:raw="Attempts to commit the transaction.">嘗試認可交易。</summary>
      <exception cref="T:System.Transactions.TransactionInDoubtException" vsli:raw="&lt;see cref=&quot;M:System.Transactions.CommittableTransaction.Commit&quot; /&gt; is called on a transaction and the transaction becomes &lt;see cref=&quot;F:System.Transactions.TransactionStatus.InDoubt&quot; /&gt;.">在交易上呼叫 <see cref="M:System.Transactions.CommittableTransaction.Commit" />，且交易成為 <see cref="F:System.Transactions.TransactionStatus.InDoubt" />。</exception>
      <exception cref="T:System.Transactions.TransactionAbortedException" vsli:raw="&lt;see cref=&quot;M:System.Transactions.CommittableTransaction.Commit&quot; /&gt; is called and the transaction rolls back for the first time.">呼叫 <see cref="M:System.Transactions.CommittableTransaction.Commit" /> 且交易第一次復原。</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)">
      <summary vsli:raw="Ends an attempt to commit the transaction asynchronously.">結束非同步認可交易的嘗試。</summary>
      <param name="asyncResult" vsli:raw="The &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object associated with the asynchronous commitment.">與非同步認可關聯的 <see cref="T:System.IAsyncResult" /> 物件。</param>
      <exception cref="T:System.Transactions.TransactionAbortedException" vsli:raw="&lt;see cref=&quot;M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)&quot; /&gt; is called and the transaction rolls back for the first time.">呼叫 <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> 且交易第一次復原。</exception>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncState">
      <summary vsli:raw="Gets the object provided as the last parameter of the &lt;see cref=&quot;M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)&quot; /&gt; method call.">取得當做 <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> 方法呼叫之最後一個參數來提供的物件。</summary>
      <returns vsli:raw="The object provided as the last parameter of the &lt;see cref=&quot;M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)&quot; /&gt; method call.">當做 <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> 方法呼叫之最後一個參數來提供的物件。</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncWaitHandle">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.WaitHandle&quot; /&gt; that is used to wait for an asynchronous operation to complete.">取得 <see cref="T:System.Threading.WaitHandle" />，用來等候非同步作業完成。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.WaitHandle&quot; /&gt; that is used to wait for an asynchronous operation to complete.">
        <see cref="T:System.Threading.WaitHandle" />，用來等候非同步作業完成。</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#CompletedSynchronously">
      <summary vsli:raw="Gets an indication of whether the asynchronous commit operation completed synchronously.">取得非同步認可作業是否已同步完成的指示。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the asynchronous commit operation completed synchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This property always returns &lt;see langword=&quot;false&quot; /&gt; even if the operation completed synchronously.">如果非同步認可作業已同步完成則為 <see langword="true" />，否則為 <see langword="false" />。 這個屬性一定會傳回 <see langword="false" />，即使作業已同步完成。</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#IsCompleted">
      <summary vsli:raw="Gets an indication whether the asynchronous commit operation has completed.">取得非同步認可作業是否已完成的指示。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operation is complete; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果作業完成，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Transactions.DependentCloneOption">
      <summary vsli:raw="Controls what kind of dependent transaction to create.">控制要建立何種相依交易。</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.BlockCommitUntilComplete">
      <summary vsli:raw="The dependent transaction blocks the commit process of the transaction until the parent transaction times out, or &lt;see cref=&quot;M:System.Transactions.DependentTransaction.Complete&quot; /&gt; is called. In this case, additional work can be done on the transaction and new enlistments can be created.">相依交易會封鎖交易的認可處理序，直到父交易逾時或呼叫 <see cref="M:System.Transactions.DependentTransaction.Complete" /> 為止。 在此情況下，可以在交易上執行額外的工作，並建立新的登記。</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.RollbackIfNotComplete">
      <summary vsli:raw="The dependent transaction automatically aborts the transaction if Commit is called on the parent transaction before &lt;see cref=&quot;M:System.Transactions.DependentTransaction.Complete&quot; /&gt; is called.">如果呼叫 <see cref="M:System.Transactions.DependentTransaction.Complete" /> 之前在父交易上呼叫 Commit，則相依交易會自動中止交易。</summary>
    </member>
    <member name="T:System.Transactions.DependentTransaction">
      <summary vsli:raw="Describes a clone of a transaction providing guarantee that the transaction cannot be committed until the application comes to rest regarding work on the transaction. This class cannot be inherited.">描述交易的複製品 (Clone)，其可保證在交易上執行工作時，必須等到應用程式停止後才能認可交易。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Transactions.DependentTransaction.Complete">
      <summary vsli:raw="Attempts to complete the dependent transaction.">嘗試完成相依交易。</summary>
      <exception cref="T:System.Transactions.TransactionException" vsli:raw="Any attempt for additional work on the transaction after this method is called. These include invoking methods such as &lt;see cref=&quot;Overload:System.Transactions.Transaction.EnlistVolatile&quot; /&gt;, &lt;see cref=&quot;Overload:System.Transactions.Transaction.EnlistDurable&quot; /&gt;, &lt;see cref=&quot;M:System.Transactions.Transaction.Clone&quot; /&gt;, &lt;see cref=&quot;M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)&quot; /&gt; , or any serialization operations on the transaction.">任何嘗試在此方法呼叫後於交易上進行其他的工作。 這些嘗試包括叫用方法 (例如 <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />、<see cref="Overload:System.Transactions.Transaction.EnlistDurable" />、<see cref="M:System.Transactions.Transaction.Clone" />、<see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" />) 或對交易的任何序列化作業。</exception>
    </member>
    <member name="T:System.Transactions.Enlistment">
      <summary vsli:raw="Facilitates communication between an enlisted transaction participant and the transaction manager during the final phase of the transaction.">在交易的最後階段，協助登記的交易參與者與交易管理員之間的通訊。</summary>
    </member>
    <member name="M:System.Transactions.Enlistment.Done">
      <summary vsli:raw="Indicates that the transaction participant has completed its work.">指出交易參與者已完成其工作。</summary>
    </member>
    <member name="T:System.Transactions.EnlistmentOptions">
      <summary vsli:raw="Determines whether the object should be enlisted during the prepare phase.">判斷是否應該在準備階段登記物件。</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired">
      <summary vsli:raw="The object must enlist during the initial phase of the commitment process.">物件必須在認可程序的初始階段登記。</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.None">
      <summary vsli:raw="The object does not require enlistment during the initial phase of the commitment process.">在認可程序的初始階段，物件不需要登記。</summary>
    </member>
    <member name="T:System.Transactions.EnterpriseServicesInteropOption">
      <summary vsli:raw="Specifies how distributed transactions interact with COM+ transactions.">指定分散式交易如何與 COM+ 交易互動。</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Automatic">
      <summary vsli:raw="Search for an existing COM+ context and synchronize with it if one exists.">搜尋現有的 COM+ 內容，並在該內容存在時與其同步處理。</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Full">
      <summary vsli:raw="The &lt;see cref=&quot;N:System.EnterpriseServices&quot; /&gt; context (which can be retrieved by calling the static method &lt;see cref=&quot;P:System.EnterpriseServices.ContextUtil.Transaction&quot; /&gt; of the &lt;see cref=&quot;T:System.EnterpriseServices.ContextUtil&quot; /&gt; class) and the &lt;see cref=&quot;N:System.Transactions&quot; /&gt; ambient transaction (which can be retrieved by calling the static method &lt;see cref=&quot;P:System.Transactions.Transaction.Current&quot; /&gt; of the &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; class) are always synchronized. This introduces a performance penalty because new &lt;see cref=&quot;N:System.EnterpriseServices&quot; /&gt; contexts may need to be created.">
        <see cref="N:System.EnterpriseServices" /> 內容 (可藉由呼叫 <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" /> 類別的靜態方法 <see cref="T:System.EnterpriseServices.ContextUtil" /> 來擷取) 和 <see cref="N:System.Transactions" /> 環境交易 (可藉由呼叫 <see cref="P:System.Transactions.Transaction.Current" /> 類別的靜態方法 <see cref="T:System.Transactions.Transaction" /> 來擷取) 永遠會同步處理。 這會對效能帶來負面影響，因為可能需要建立新的 <see cref="N:System.EnterpriseServices" /> 內容。</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.None">
      <summary vsli:raw="There is no synchronization between &lt;see cref=&quot;P:System.EnterpriseServices.ContextUtil.Transaction&quot; /&gt; and &lt;see cref=&quot;P:System.Transactions.Transaction.Current&quot; /&gt;.">
        <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" /> 和 <see cref="P:System.Transactions.Transaction.Current" /> 之間不會進行同步處理。</summary>
    </member>
    <member name="T:System.Transactions.HostCurrentTransactionCallback">
      <summary vsli:raw="Provides a mechanism for the hosting environment to supply its own default notion of &lt;see cref=&quot;P:System.Transactions.Transaction.Current&quot; /&gt;.">提供一個機制，讓裝載環境提供自己的 <see cref="P:System.Transactions.Transaction.Current" /> 預設概念。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; object.">
        <see cref="T:System.Transactions.Transaction" /> 物件。</returns>
    </member>
    <member name="T:System.Transactions.IDtcTransaction">
      <summary vsli:raw="Describes a DTC transaction.">描述 DTC 交易。</summary>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Abort(System.IntPtr,System.Int32,System.Int32)">
      <summary vsli:raw="Aborts a transaction.">中止交易。</summary>
      <param name="reason" vsli:raw="An optional &lt;see cref=&quot;T:System.EnterpriseServices.BOID&quot; /&gt; that indicates why the transaction is being aborted. This parameter can be &lt;see langword=&quot;null&quot; /&gt;, indicating that no reason for the abort is provided.">選擇性 <see cref="T:System.EnterpriseServices.BOID" />，指出交易為何將要被中止。 這個參數可以為 <see langword="null" />，指出沒有提供中止的理由。</param>
      <param name="retaining" vsli:raw="This value must be &lt;see langword=&quot;false&quot; /&gt;.">這個值必須為 <see langword="false" />。</param>
      <param name="async" vsli:raw="When &lt;paramref name=&quot;async&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, an asynchronous abort is performed and the caller must use &lt;see langword=&quot;ITransactionOutcomeEvents&quot; /&gt; to learn about the outcome of the transaction.">
        <paramref name="async" /> 為 <see langword="true" /> 時，會執行非同步 (Asynchronous) 中止，並且呼叫端必須使用 <see langword="ITransactionOutcomeEvents" /> 來得知交易的結果。</param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Commit(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Commits a transaction.">認可交易。</summary>
      <param name="retaining" vsli:raw="This value must be &lt;see langword=&quot;false&quot; /&gt;.">這個值必須為 <see langword="false" />。</param>
      <param name="commitType" vsli:raw="A value taken from the OLE DB enumeration &lt;see langword=&quot;XACTTC&quot; /&gt;.">取自 OLE DB 列舉型別 <see langword="XACTTC" /> 的值</param>
      <param name="reserved" vsli:raw="This value must be zero.">這個值必須為零。</param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.GetTransactionInfo(System.IntPtr)">
      <summary vsli:raw="Retrieves information about a transaction.">擷取交易的資訊。</summary>
      <param name="transactionInformation" vsli:raw="Pointer to the caller-allocated &lt;see cref=&quot;T:System.EnterpriseServices.XACTTRANSINFO&quot; /&gt; structure that will receive information about the transaction. This value must not be &lt;see langword=&quot;null&quot; /&gt;.">呼叫端配置的 <see cref="T:System.EnterpriseServices.XACTTRANSINFO" /> 結構 (將接收交易資訊) 的指標。 這個值不可以是 <see langword="null" />。</param>
    </member>
    <member name="T:System.Transactions.IEnlistmentNotification">
      <summary vsli:raw="Describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.">描述資源管理員應該實作的介面，可提供兩階段認可告知回呼，讓交易管理員用來登記參與。</summary>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
      <summary vsli:raw="Notifies an enlisted object that a transaction is being committed.">告知登記的物件正在認可交易。</summary>
      <param name="enlistment" vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object used to send a response to the transaction manager.">
        <see cref="T:System.Transactions.Enlistment" /> 物件，用來傳送回應給交易管理員。</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
      <summary vsli:raw="Notifies an enlisted object that the status of a transaction is in doubt.">告知登記的物件交易的狀態不確定。</summary>
      <param name="enlistment" vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object used to send a response to the transaction manager.">
        <see cref="T:System.Transactions.Enlistment" /> 物件，用來傳送回應給交易管理員。</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
      <summary vsli:raw="Notifies an enlisted object that a transaction is being prepared for commitment.">告知登記的物件正在準備認可交易。</summary>
      <param name="preparingEnlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.PreparingEnlistment&quot; /&gt; object used to send a response to the transaction manager.">
        <see cref="T:System.Transactions.PreparingEnlistment" /> 物件，用來傳送回應給交易管理員。</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
      <summary vsli:raw="Notifies an enlisted object that a transaction is being rolled back (aborted).">告知登記的物件正在復原 (中止) 交易。</summary>
      <param name="enlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object used to send a response to the transaction manager.">
        <see cref="T:System.Transactions.Enlistment" /> 物件，用來傳送回應給交易管理員。</param>
    </member>
    <member name="T:System.Transactions.IPromotableSinglePhaseNotification">
      <summary vsli:raw="Describes an object that acts as a commit delegate for a non-distributed transaction internal to a resource manager.">描述物件，該物件用來當做資源管理員內部之非分散式交易的認可委派。</summary>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Initialize">
      <summary vsli:raw="Notifies a transaction participant that enlistment has completed successfully.">告知交易參與者已成功完成登記。</summary>
      <exception cref="T:System.Transactions.TransactionException" vsli:raw="An attempt to enlist or serialize a transaction.">嘗試登記或序列化交易。</exception>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Rollback(System.Transactions.SinglePhaseEnlistment)">
      <summary vsli:raw="Notifies an enlisted object that the transaction is being rolled back.">告知登記的物件正在復原交易。</summary>
      <param name="singlePhaseEnlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; object used to send a response to the transaction manager.">
        <see cref="T:System.Transactions.SinglePhaseEnlistment" /> 物件，用來傳送回應給交易管理員。</param>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary vsli:raw="Notifies an enlisted object that the transaction is being committed.">告知登記的物件正在認可交易。</summary>
      <param name="singlePhaseEnlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; interface used to send a response to the transaction manager.">
        <see cref="T:System.Transactions.SinglePhaseEnlistment" /> 介面，用來傳送對交易管理員的回應。</param>
    </member>
    <member name="T:System.Transactions.ISimpleTransactionSuperior">
      <summary vsli:raw="Represents a transaction that is not a root transaction, but can be escalated to be managed by the MSDTC.">表示不是根交易，但可擴大以便由 MSDTC 管理的交易。</summary>
    </member>
    <member name="M:System.Transactions.ISimpleTransactionSuperior.Rollback">
      <summary vsli:raw="Notifies an enlisted object that the transaction is being rolled back.">告知登記的物件正在復原交易。</summary>
    </member>
    <member name="T:System.Transactions.ISinglePhaseNotification">
      <summary vsli:raw="Describes a resource object that supports single phase commit optimization to participate in a transaction.">描述一個資源物件，其支援參與交易的單一階段交易認可最佳化。</summary>
    </member>
    <member name="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary vsli:raw="Represents the resource manager's implementation of the callback for the single phase commit optimization.">表示資源管理員之單一階段交易認可最佳化的回呼實作。</summary>
      <param name="singlePhaseEnlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; used to send a response to the transaction manager.">用於傳送回應至交易管理員的 <see cref="T:System.Transactions.SinglePhaseEnlistment" />。</param>
    </member>
    <member name="T:System.Transactions.IsolationLevel">
      <summary vsli:raw="Specifies the isolation level of a transaction.">指定交易的隔離等級 (Isolation Level)。</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Chaos">
      <summary vsli:raw="The pending changes from more highly isolated transactions cannot be overwritten.">無法覆寫來自隔離程度更深之交易的暫止變更。</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadCommitted">
      <summary vsli:raw="Volatile data cannot be read during the transaction, but can be modified.">在交易期間無法讀取 Volatile 資料，但可以修改該資料。</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadUncommitted">
      <summary vsli:raw="Volatile data can be read and modified during the transaction.">在交易期間可以讀取和修改 Volatile 資料。</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.RepeatableRead">
      <summary vsli:raw="Volatile data can be read but not modified during the transaction. New data can be added during the transaction.">在交易期間可以讀取 Volatile 資料，但無法修改該資料。 在交易期間可以加入新資料。</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Serializable">
      <summary vsli:raw="Volatile data can be read but not modified, and no new data can be added during the transaction.">在交易期間可以讀取 Volatile 資料，但無法修改該資料，且不能加入新資料。</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Snapshot">
      <summary vsli:raw="&lt;para&gt;Volatile data can be read. Before a transaction modifies data, it verifies if another transaction has changed the data after it was initially read. If the data has been updated, an error is raised. This allows a transaction to get to the previously committed value of the data.&lt;/para&gt;&lt;para&gt;When you try to promote a transaction that was created with the &lt;see langword=&quot;Snapshot&quot; /&gt; isolation level, an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the error message &quot;Transactions with IsolationLevel Snapshot cannot be promoted&quot;.&lt;/para&gt;">可以讀取 Volatile 資料。 交易會在修改資料之前，先驗證在最初讀取資料後是否有另一個交易已變更該資料。 如果資料已更新，則會引發錯誤， 如此可允許交易回到先前所認可的資料值。
當您升級使用 <see langword="Snapshot" /> 隔離層級建立的交易時，會擲回具有錯誤訊息「無法升級 IsolationLevel 為快照的交易」的 <see cref="T:System.InvalidOperationException" />。</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Unspecified">
      <summary vsli:raw="A different isolation level than the one specified is being used, but the level cannot be determined. An exception is thrown if this value is set.">使用與指定不同的隔離等級，但無法判斷該等級。 如果設定這個值，會擲回例外狀況。</summary>
    </member>
    <member name="T:System.Transactions.ITransactionPromoter">
      <summary vsli:raw="Describes a delegated transaction for an existing transaction that can be escalated to be managed by the MSDTC when needed.">描述現有交易之已委派交易，其可在需要時擴大以由 MSDTC 管理。</summary>
    </member>
    <member name="M:System.Transactions.ITransactionPromoter.Promote">
      <summary vsli:raw="Notifies an enlisted object that an escalation of the delegated transaction has been requested.">向未登記的物件告知已經要求擴大已委派之交易的規模。</summary>
      <returns vsli:raw="A transmitter/receiver propagation token that marshals a distributed transaction. For more information, see &lt;see cref=&quot;M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])&quot; /&gt;.">封送處理分散式交易的傳送/接收傳用語彙基元。 如需詳細資訊，請參閱<see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" />。</returns>
    </member>
    <member name="T:System.Transactions.PreparingEnlistment">
      <summary vsli:raw="Facilitates communication between an enlisted transaction participant and the transaction manager during the Prepare phase of the transaction.">在交易的準備階段，協助登記的交易參與者與交易管理員之間的通訊。</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback">
      <summary vsli:raw="Indicates that the transaction should be rolled back.">表示應該復原交易。</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback(System.Exception)">
      <summary vsli:raw="Indicates that the transaction should be rolled back.">表示應該復原交易。</summary>
      <param name="e" vsli:raw="An explanation of why a rollback is triggered.">說明觸發復原的原因。</param>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.Prepared">
      <summary vsli:raw="Indicates that the transaction can be committed.">指出可以認可交易。</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.RecoveryInformation">
      <summary vsli:raw="Gets the recovery information of an enlistment.">取得登記的復原資訊。</summary>
      <returns vsli:raw="The recovery information of an enlistment.">登記的復原資訊。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt to get recovery information inside a volatile enlistment, which does not generate any recovery information.">嘗試取得暫時性 (Volatile) 登記內部的復原資訊，而該登記並未產生任何復原資訊。</exception>
    </member>
    <member name="T:System.Transactions.SinglePhaseEnlistment">
      <summary vsli:raw="Provides a set of callbacks that facilitate communication between a participant enlisted for Single Phase Commit and the transaction manager when the &lt;see cref=&quot;M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)&quot; /&gt; notification is received.">提供一組回呼，在收到 <see cref="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)" /> 告知時，用來協助登記於單一階段交易認可之參與者和交易管理員之間的通訊。</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back.">表示回呼，用來向交易管理員指出應該復原交易。</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back, and provides an explanation.">表示回呼，用來向交易管理員指出應該復原交易，並提供說明。</summary>
      <param name="e" vsli:raw="An explanation of why a rollback is initiated.">說明初始化復原的原因。</param>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Committed">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the SinglePhaseCommit was successful.">表示回呼，用來向交易管理員指出 SinglePhaseCommit 已成功。</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt.">表示回呼，用來向交易管理員指出交易的狀態不確定。</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt, and provides an explanation.">表示回呼，用來向交易管理員指出交易的狀態不確定，並提供說明。</summary>
      <param name="e" vsli:raw="An explanation of why the transaction is in doubt.">說明交易處於不確定狀態的原因。</param>
    </member>
    <member name="T:System.Transactions.SubordinateTransaction">
      <summary vsli:raw="Represents a non-rooted transaction that can be delegated. This class cannot be inherited.">表示可以委派的非根交易。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.SubordinateTransaction&quot; /&gt; class.">初始化 <see cref="T:System.Transactions.SubordinateTransaction" /> 類別的新執行個體。</summary>
      <param name="isoLevel" vsli:raw="The isolation level of the transaction.">交易的隔離等級 (Isolation Level)</param>
      <param name="superior" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.ISimpleTransactionSuperior&quot; /&gt;.">
        <see cref="T:System.Transactions.ISimpleTransactionSuperior" />
      </param>
    </member>
    <member name="T:System.Transactions.Transaction">
      <summary vsli:raw="Represents a transaction.">表示交易。</summary>
    </member>
    <member name="M:System.Transactions.Transaction.Clone">
      <summary vsli:raw="Creates a clone of the transaction.">建立交易的複製品 (Clone)。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; that is a copy of the current transaction object.">
        <see cref="T:System.Transactions.Transaction" />，其為目前交易物件的複本。</returns>
    </member>
    <member name="P:System.Transactions.Transaction.Current">
      <summary vsli:raw="Gets or sets the ambient transaction.">取得或設定環境交易。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; that describes the current transaction.">
        <see cref="T:System.Transactions.Transaction" />，說明目前交易。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
      <summary vsli:raw="Creates a dependent clone of the transaction.">建立交易的相依複製品。</summary>
      <param name="cloneOption" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.DependentCloneOption&quot; /&gt; that controls what kind of dependent transaction to create.">
        <see cref="T:System.Transactions.DependentCloneOption" />，用來控制要建立何種相依交易。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.DependentTransaction&quot; /&gt; that represents the dependent clone.">
        <see cref="T:System.Transactions.DependentTransaction" />，表示相依的複製品。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Dispose">
      <summary vsli:raw="Releases the resources that are held by the object.">釋放該物件所持有的資源。</summary>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Enlists a durable resource manager that supports two phase commit to participate in a transaction.">登記支援兩階段交易認可 (Two-Phase Commit) 的長期資源管理員以參與交易。</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A unique identifier for a resource manager, which should persist across resource manager failure or reboot.">資源管理員的唯一識別項，其應該在整個資源管理員失敗或重新開機期間持續。</param>
      <param name="enlistmentNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.IEnlistmentNotification&quot; /&gt; interface to receive two phase commit notifications.">實作 <see cref="T:System.Transactions.IEnlistmentNotification" /> 介面以接收兩階段交易認可告知的物件。</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">如果資源管理員想要在準備階段執行額外的工作，即為 <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object that describes the enlistment.">描述登錄的 <see cref="T:System.Transactions.Enlistment" /> 物件。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Enlists a durable resource manager that supports single phase commit optimization to participate in a transaction.">登記支援單一階段交易認可最佳化的長期資源管理員以參與交易。</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A unique identifier for a resource manager, which should persist across resource manager failure or reboot.">資源管理員的唯一識別項，其應該在整個資源管理員失敗或重新開機期間持續。</param>
      <param name="singlePhaseNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.ISinglePhaseNotification&quot; /&gt; interface that must be able to receive single phase commit and two phase commit notifications.">實作 <see cref="T:System.Transactions.ISinglePhaseNotification" /> 介面的物件，該介面必須可以接收單一階段交易認可和兩階段交易認可告知。</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">如果資源管理員想要在準備階段執行額外的工作，即為 <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object that describes the enlistment.">描述登錄的 <see cref="T:System.Transactions.Enlistment" /> 物件。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
      <summary vsli:raw="Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).">使用可提升單一階段登記 (PSPE) 來登記具有內部交易的資源管理員。</summary>
      <param name="promotableSinglePhaseNotification" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.IPromotableSinglePhaseNotification&quot; /&gt; interface implemented by the participant.">參與者所實作的 <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> 介面。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; interface implementation that describes the enlistment.">
        <see cref="T:System.Transactions.SinglePhaseEnlistment" /> 介面實作，可描述此登記。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
      <summary vsli:raw="Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).">使用可提升單一階段登記 (PSPE) 來登記具有內部交易的資源管理員。</summary>
      <param name="promotableSinglePhaseNotification" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.IPromotableSinglePhaseNotification&quot; /&gt; interface implemented by the participant.">參與者所實作的 <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> 介面。</param>
      <param name="promoterType" vsli:raw="The type of the distributed transaction processor.">分散式交易處理器的類型。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; interface implementation that describes the enlistment.">
        <see cref="T:System.Transactions.SinglePhaseEnlistment" /> 介面實作，可描述此登記。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Enlists a volatile resource manager that supports two phase commit to participate in a transaction.">登錄暫時性資源管理員，支援兩階段交易認可參與交易。</summary>
      <param name="enlistmentNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.IEnlistmentNotification&quot; /&gt; interface to receive two-phase commit notifications.">該物件會實作 <see cref="T:System.Transactions.IEnlistmentNotification" /> 介面，以接收兩階段交易認可通知。</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">如果資源管理員想要在準備階段執行額外的工作，即為 <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object that describes the enlistment.">描述登錄的 <see cref="T:System.Transactions.Enlistment" /> 物件。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Enlists a volatile resource manager that supports single phase commit optimization to participate in a transaction.">登記支援單一階段交易認可最佳化的暫時性 (Volatile) 資源管理員以參與交易。</summary>
      <param name="singlePhaseNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.ISinglePhaseNotification&quot; /&gt; interface that must be able to receive single phase commit and two phase commit notifications.">實作 <see cref="T:System.Transactions.ISinglePhaseNotification" /> 介面的物件，該介面必須可以接收單一階段交易認可和兩階段交易認可告知。</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">如果資源管理員想要在準備階段執行額外的工作，即為 <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object that describes the enlistment.">描述登錄的 <see cref="T:System.Transactions.Enlistment" /> 物件。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Equals(System.Object)">
      <summary vsli:raw="Determines whether this transaction and the specified object are equal.">判斷這個交易和指定的物件是否相等。</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">與這個執行個體相互比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this transaction are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="obj" /> 和這個交易相同則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.GetPromotedToken">
      <summary vsli:raw="Gets the  &lt;c&gt;byte[]&lt;/c&gt; returned by the &lt;c&gt;Promote&lt;/c&gt; method when the transaction is promoted.">當此交易升級時，取得 <c>Promote</c> 方法傳回的 <c>byte[]</c>。</summary>
      <returns vsli:raw="The  &lt;c&gt;byte[]&lt;/c&gt; returned by the &lt;c&gt;Promote&lt;/c&gt; method when the transaction is promoted.">當此交易升級時，<c>Promote</c> 方法傳回的 <c>byte[]</c>。</returns>
    </member>
    <member name="P:System.Transactions.Transaction.IsolationLevel">
      <summary vsli:raw="Gets the isolation level of the transaction.">取得交易的隔離等級 (Isolation Level)。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Transactions.IsolationLevel&quot; /&gt; values that indicates the isolation level of the transaction.">其中一個 <see cref="T:System.Transactions.IsolationLevel" /> 值，指出交易的隔離等級。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instances are equivalent.">測試兩個指定的 <see cref="T:System.Transactions.Transaction" /> 執行個體是否相等。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that is to the left of the equality operator.">在相等運算子左邊的 <see cref="T:System.Transactions.Transaction" /> 執行個體。</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that is to the right of the equality operator.">在相等運算子右方的 <see cref="T:System.Transactions.Transaction" /> 執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="x" /> 和 <paramref name="y" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary vsli:raw="Returns a value that indicates whether two &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instances are not equal.">傳回值，這個值表示兩個 <see cref="T:System.Transactions.Transaction" /> 執行個體是否不相等。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that is to the left of the inequality operator.">在不等比較運算子左方的 <see cref="T:System.Transactions.Transaction" /> 執行個體。</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that is to the right of the inequality operator.">在不相等運算子右方的 <see cref="T:System.Transactions.Transaction" /> 執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="x" /> 和 <paramref name="y" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Promotes and enlists a durable resource manager that supports two phase commit to participate in a transaction.">提升和登記支援兩階段交易認可 (Two-Phase Commit) 的長期資源管理員以參與異動。</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A unique identifier for a resource manager, which should persist across resource manager failure or reboot.">資源管理員的唯一識別項，其應該在整個資源管理員失敗或重新開機期間持續。</param>
      <param name="promotableNotification" vsli:raw="An object that acts as a commit delegate for a non-distributed transaction internal to a resource manager.">物件，該物件用來當做資源管理員內部之非分散式異動的認可委派。</param>
      <param name="enlistmentNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.IEnlistmentNotification&quot; /&gt; interface to receive two phase commit notifications.">實作 <see cref="T:System.Transactions.IEnlistmentNotification" /> 介面以接收兩階段交易認可告知的物件。</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">如果資源管理員想要在準備階段執行額外的工作，即為 <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />。</param>
    </member>
    <member name="P:System.Transactions.Transaction.PromoterType">
      <summary vsli:raw="Uniquely identifies the format of the &lt;c&gt;byte[]&lt;/c&gt; returned by the Promote method when the transaction is promoted.">可唯一識別 <c>byte[]</c> 的格式，其由 Promote 方法在交易升級時傳回。</summary>
      <returns vsli:raw="A guid that uniquely identifies the format of the &lt;c&gt;byte[]&lt;/c&gt; returned by the Promote method when the transaction is promoted.">當交易升級時，可唯一識別升級方法所傳回之<c>byte []</c>格式的 guid。</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback">
      <summary vsli:raw="Rolls back (aborts) the transaction.">復原 (中止) 交易。</summary>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback(System.Exception)">
      <summary vsli:raw="Rolls back (aborts) the transaction.">復原 (中止) 交易。</summary>
      <param name="e" vsli:raw="An explanation of why a rollback occurred.">說明發生復原的原因。</param>
    </member>
    <member name="M:System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
      <summary vsli:raw="Sets the distributed transaction identifier generated by the non-MSDTC promoter.">設定非 MSDTC Promoter 所產生的分散式異動識別碼。</summary>
      <param name="promotableNotification" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.IPromotableSinglePhaseNotification&quot; /&gt; interface implemented by the participant.">參與者所實作的 <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> 介面。</param>
      <param name="distributedTransactionIdentifier" vsli:raw="The identifier for the transaction used by the distributed transaction manager.">分散式異動管理員所使用之異動的識別項。</param>
    </member>
    <member name="M:System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data required to serialize this transaction.">取得 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，其中含有序列化這個交易所需的資料。</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">要以資料填入的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; ) for this serialization.">這個序列化的目的端 (請參閱 <see cref="T:System.Runtime.Serialization.StreamingContext" />)。</param>
    </member>
    <member name="E:System.Transactions.Transaction.TransactionCompleted">
      <summary vsli:raw="Indicates that the transaction is completed.">指出交易已完成。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="An attempt to subscribe this event on a transaction that has been disposed.">嘗試在已經處置的交易上訂閱這個事件。</exception>
    </member>
    <member name="P:System.Transactions.Transaction.TransactionInformation">
      <summary vsli:raw="Retrieves additional information about a transaction.">擷取交易的其他資訊。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionInformation&quot; /&gt; that contains additional information about the transaction.">包含交易之其他資訊的 <see cref="T:System.Transactions.TransactionInformation" />。</returns>
    </member>
    <member name="T:System.Transactions.TransactionAbortedException">
      <summary vsli:raw="The exception that is thrown when an operation is attempted on a transaction that has already been rolled back, or an attempt is made to commit the transaction and the transaction aborts.">嘗試在已經復原的交易上執行作業時，或是嘗試認可交易而交易中止時，所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionAbortedException&quot; /&gt; class.">初始化 <see cref="T:System.Transactions.TransactionAbortedException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionAbortedException&quot; /&gt; class with the specified serialization and streaming context information.">使用指定的序列化和資料流內容資訊，初始化 <see cref="T:System.Transactions.TransactionAbortedException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，描述已失敗的序列化作業。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，描述已失敗的序列化內容。</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionAbortedException&quot; /&gt; class with the specified message.">使用指定的訊息初始化 <see cref="T:System.Transactions.TransactionAbortedException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" />，其中包含說明例外狀況發生原因的訊息。</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionAbortedException&quot; /&gt; class with the specified message and inner exception.">使用指定的訊息和內部例外狀況初始化 <see cref="T:System.Transactions.TransactionAbortedException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" />，其中包含說明例外狀況發生原因的訊息。</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">取得造成目前例外狀況的例外狀況執行個體。 如需詳細資訊，請參閱 <see cref="P:System.Exception.InnerException" /> 屬性 (Property)。</param>
    </member>
    <member name="T:System.Transactions.TransactionCompletedEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Transactions.Transaction.TransactionCompleted&quot; /&gt; event of a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; class.">表示處理 <see cref="E:System.Transactions.Transaction.TransactionCompleted" /> 類別之 <see cref="T:System.Transactions.Transaction" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionEventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.Transactions.TransactionEventArgs" />。</param>
    </member>
    <member name="T:System.Transactions.TransactionEventArgs">
      <summary vsli:raw="Provides data for the following transaction events: &lt;see cref=&quot;E:System.Transactions.TransactionManager.DistributedTransactionStarted&quot; /&gt;, &lt;see cref=&quot;E:System.Transactions.Transaction.TransactionCompleted&quot; /&gt;.">提供下列交易事件的資料：<see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" />、<see cref="E:System.Transactions.Transaction.TransactionCompleted" />。</summary>
    </member>
    <member name="M:System.Transactions.TransactionEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Transactions.TransactionEventArgs" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Transactions.TransactionEventArgs.Transaction">
      <summary vsli:raw="Gets the transaction for which event status is provided.">取得為其提供事件狀態的交易。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; for which event status is provided.">要提供其事件狀態的 <see cref="T:System.Transactions.Transaction" />。</returns>
    </member>
    <member name="T:System.Transactions.TransactionException">
      <summary vsli:raw="The exception that is thrown when you attempt to do work on a transaction that cannot accept new work.">當您嘗試在無法接受新工作的交易上執行工作時，所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionException&quot; /&gt; class.">初始化 <see cref="T:System.Transactions.TransactionException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionException&quot; /&gt; class with the specified serialization and streaming context information.">使用指定的序列化和資料流內容資訊，初始化 <see cref="T:System.Transactions.TransactionException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，描述已失敗的序列化作業。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，描述已失敗的序列化內容。</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionException&quot; /&gt; class with the specified message.">使用指定的訊息初始化 <see cref="T:System.Transactions.TransactionException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" />，其中包含說明例外狀況發生原因的訊息。</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionException&quot; /&gt; class with the specified message and inner exception.">使用指定的訊息和內部例外狀況初始化 <see cref="T:System.Transactions.TransactionException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" />，其中包含說明例外狀況發生原因的訊息。</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">取得造成目前例外狀況的例外狀況執行個體。 如需詳細資訊，請參閱 <see cref="P:System.Exception.InnerException" /> 屬性 (Property)。</param>
    </member>
    <member name="T:System.Transactions.TransactionInDoubtException">
      <summary vsli:raw="The exception that is thrown when an operation is attempted on a transaction that is in doubt, or an attempt is made to commit the transaction and the transaction becomes InDoubt.">嘗試在不確定的交易上執行作業時，或是嘗試認可交易而交易成為 InDoubt 時，所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionInDoubtException&quot; /&gt; class.">初始化 <see cref="T:System.Transactions.TransactionInDoubtException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionInDoubtException&quot; /&gt; class with the specified serialization and streaming context information.">使用指定的序列化和資料流內容資訊，初始化 <see cref="T:System.Transactions.TransactionInDoubtException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，描述已失敗的序列化作業。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，描述已失敗的序列化內容。</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionInDoubtException&quot; /&gt; class with the specified message.">使用指定的訊息初始化 <see cref="T:System.Transactions.TransactionInDoubtException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" />，其中包含說明例外狀況發生原因的訊息。</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionInDoubtException&quot; /&gt; class with the specified message and inner exception.">使用指定的訊息和內部例外狀況初始化 <see cref="T:System.Transactions.TransactionInDoubtException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" />，其中包含說明例外狀況發生原因的訊息。</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">取得造成目前例外狀況的例外狀況執行個體。 如需詳細資訊，請參閱 <see cref="P:System.Exception.InnerException" /> 屬性 (Property)。</param>
    </member>
    <member name="T:System.Transactions.TransactionInformation">
      <summary vsli:raw="Provides additional information regarding a transaction.">提供有關交易的其他資訊。</summary>
    </member>
    <member name="P:System.Transactions.TransactionInformation.CreationTime">
      <summary vsli:raw="Gets the creation time of the transaction.">取得交易的建立時間。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the creation time of the transaction.">
        <see cref="T:System.DateTime" />，包含交易的建立時間。</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.DistributedIdentifier">
      <summary vsli:raw="Gets a unique identifier of the escalated transaction.">取得擴大之交易的唯一識別項。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the unique identifier of the escalated transaction.">
        <see cref="T:System.Guid" />，包含擴大之交易的唯一識別項。</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.LocalIdentifier">
      <summary vsli:raw="Gets a unique identifier of the transaction.">取得交易的唯一識別項。</summary>
      <returns vsli:raw="A unique identifier of the transaction.">交易的唯一識別項。</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.Status">
      <summary vsli:raw="Gets the status of the transaction.">取得交易的狀態。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionStatus&quot; /&gt; that contains the status of the transaction.">
        <see cref="T:System.Transactions.TransactionStatus" />，包含交易的狀態。</returns>
    </member>
    <member name="T:System.Transactions.TransactionInterop">
      <summary vsli:raw="Facilitates interaction between &lt;see cref=&quot;N:System.Transactions&quot; /&gt; and components that were previously written to interact with MSDTC, COM+, or &lt;see cref=&quot;N:System.EnterpriseServices&quot; /&gt;. This class cannot be inherited.">加強 <see cref="N:System.Transactions" /> 與元件之間的互動，這些元件是在先前所寫入，以便與 MSDTC、COM+ 或 <see cref="N:System.EnterpriseServices" /> 互動。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt; instance that represents a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt;.">取得表示 <see cref="T:System.Transactions.Transaction" /> 的 <see cref="T:System.Transactions.IDtcTransaction" /> 執行個體。</summary>
      <param name="transaction" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance to be marshaled.">要封送處理的 <see cref="T:System.Transactions.Transaction" /> 執行個體。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt; instance that represents a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt;.  The &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt; instance is compatible with the unmanaged form of ITransaction used by MSDTC and with the Managed form of &lt;see cref=&quot;T:System.EnterpriseServices.ITransaction&quot; /&gt; used by &lt;see cref=&quot;N:System.EnterpriseServices&quot; /&gt;.">表示 <see cref="T:System.Transactions.IDtcTransaction" /> 的 <see cref="T:System.Transactions.Transaction" /> 執行個體。  <see cref="T:System.Transactions.IDtcTransaction" /> 執行個體相容於 MSDTC 所使用之 Unmanaged 形式的 ITransaction，以及 <see cref="N:System.EnterpriseServices" /> 使用之 Managed 形式的 <see cref="T:System.EnterpriseServices.ITransaction" />。</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
      <summary vsli:raw="Transforms a transaction object into an export transaction cookie.">將異動物件轉換成匯出異動 Cookie。</summary>
      <param name="transaction" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; object to be marshaled.">要封送處理的 <see cref="T:System.Transactions.Transaction" /> 物件。</param>
      <param name="whereabouts" vsli:raw="An address that describes the location of the destination transaction manager. This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.">描述目的地交易管理員位置的位址， 其可允許兩個交易管理員彼此通訊，藉此將交易從一個系統傳播至另一個系統。</param>
      <returns vsli:raw="An export transaction cookie representing the specified &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; object.">表示指定之 <see cref="T:System.Transactions.Transaction" /> 物件的匯出異動 Cookie。</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
      <summary vsli:raw="Generates a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; from a specified &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt;.">從指定的 <see cref="T:System.Transactions.IDtcTransaction" /> 產生 <see cref="T:System.Transactions.Transaction" />。</summary>
      <param name="transactionNative" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt; object to be marshaled.">要封送處理的 <see cref="T:System.Transactions.IDtcTransaction" /> 物件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that represents the given &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt;.">
        <see cref="T:System.Transactions.Transaction" /> 執行個體，表示指定的 <see cref="T:System.Transactions.IDtcTransaction" />。</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
      <summary vsli:raw="Generates a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; from the specified an export cookie.">從指定的匯出 Cookie 產生 <see cref="T:System.Transactions.Transaction" />。</summary>
      <param name="cookie" vsli:raw="A marshaled form of the transaction object.">異動物件的封送處理形式。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; from the specified export cookie.">來自指定匯出 Cookie 的 <see cref="T:System.Transactions.Transaction" />。</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
      <summary vsli:raw="Generates a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance from the specified transmitter propagation token.">從指定的傳送者傳播權杖產生 <see cref="T:System.Transactions.Transaction" /> 執行個體。</summary>
      <param name="propagationToken" vsli:raw="A propagation token representing a transaction.">表示異動的傳播權杖。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; from the specified transmitter propagation token.">來自指定傳送者傳播權杖的 <see cref="T:System.Transactions.Transaction" />。</returns>
      <exception cref="T:System.Transactions.TransactionManagerCommunicationException" vsli:raw="The deserialization of a transaction fails because the transaction manager cannot be contacted. This may be caused by network firewall or security settings.">由於無法聯絡交易管理員，交易的還原序列化 (Deserialization) 失敗。 這可能由網路防火牆 (Firewall) 或安全性設定導致。</exception>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
      <summary vsli:raw="Generates a propagation token for the specified &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt;.">針對指定的 <see cref="T:System.Transactions.Transaction" /> 產生傳送者傳播權杖。</summary>
      <param name="transaction" vsli:raw="A transaction to be marshaled into a propagation token.">要封送處理至傳播權杖中的異動。</param>
      <returns vsli:raw="This method, together with the &lt;see cref=&quot;M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])&quot; /&gt; method, provide functionality for Transmitter/Receiver propagation, in which the transaction is &quot;pulled&quot; from the remote machine when the latter is called to unmarshal the transaction.  &#xA;  &#xA; For more information on different propagation models, see &lt;see cref=&quot;T:System.Transactions.TransactionInterop&quot; /&gt; class.">這個方法會與 <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" /> 方法一起提供「傳送者/接收者」傳播的功能，當呼叫後者來解除封送處理交易時，會從遠端機器「提取」交易。
如需不同傳播模型的詳細資訊，請參閱 <see cref="T:System.Transactions.TransactionInterop" /> 類別。</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetWhereabouts">
      <summary vsli:raw="Gets the Whereabouts of the distributed transaction manager that &lt;see cref=&quot;N:System.Transactions&quot; /&gt; uses.">取得 <see cref="N:System.Transactions" /> 使用之分散式交易管理員的所在資訊。</summary>
      <returns vsli:raw="The Whereabouts of the distributed transaction manager that &lt;see cref=&quot;N:System.Transactions&quot; /&gt; uses.">
        <see cref="N:System.Transactions" /> 使用之分散式交易管理員的所在資訊。</returns>
    </member>
    <member name="F:System.Transactions.TransactionInterop.PromoterTypeDtc">
      <summary vsli:raw="The type of the distributed transaction processor.">分散式交易處理器的類型。</summary>
    </member>
    <member name="T:System.Transactions.TransactionManager">
      <summary vsli:raw="Contains methods used for transaction management. This class cannot be inherited.">包含用於交易管理的方法。 這個類別無法被繼承。</summary>
    </member>
    <member name="P:System.Transactions.TransactionManager.DefaultTimeout">
      <summary vsli:raw="Gets the default timeout interval for new transactions.">取得新交易的預設逾時間隔。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies the timeout interval for new transactions.">
        <see cref="T:System.TimeSpan" /> 值，其會指定新交易的逾時間隔。</returns>
    </member>
    <member name="E:System.Transactions.TransactionManager.DistributedTransactionStarted">
      <summary vsli:raw="Indicates that a distributed transaction has started.">指出分散式交易已開始。</summary>
    </member>
    <member name="P:System.Transactions.TransactionManager.HostCurrentCallback">
      <summary vsli:raw="Gets or sets a custom transaction factory.">取得或設定自訂交易 Factory。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.HostCurrentTransactionCallback&quot; /&gt; that contains a custom transaction factory.">
        <see cref="T:System.Transactions.HostCurrentTransactionCallback" />，包含自訂交易 Factory。</returns>
    </member>
    <member name="P:System.Transactions.TransactionManager.MaximumTimeout">
      <summary vsli:raw="Gets the default maximum timeout interval for new transactions.">取得新交易的預設最大逾時間隔。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies the maximum timeout interval that is allowed when creating new transactions.">
        <see cref="T:System.TimeSpan" /> 值，其會指定建立新交易時所允許的最大逾時間隔。</returns>
    </member>
    <member name="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)">
      <summary vsli:raw="Notifies the transaction manager that a resource manager recovering from failure has finished reenlisting in all unresolved transactions.">告知交易管理員從失敗中復原之資源管理員已在所有無法解析的交易中完成重新登記。</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that uniquely identifies the resource to be recovered from.">
        <see cref="T:System.Guid" />，可唯一識別要復原的資源。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;resourceManagerIdentifier&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="resourceManagerIdentifier" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)">
      <summary vsli:raw="Reenlists a durable participant in a transaction.">重新登記交易中的長期參與者。</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that uniquely identifies the resource manager.">
        <see cref="T:System.Guid" />，可唯一識別資源管理員。</param>
      <param name="recoveryInformation" vsli:raw="Contains additional information of recovery information.">包含復原資訊的其他資訊。</param>
      <param name="enlistmentNotification" vsli:raw="A resource object that implements &lt;see cref=&quot;T:System.Transactions.IEnlistmentNotification&quot; /&gt; to receive notifications.">實作 <see cref="T:System.Transactions.IEnlistmentNotification" /> 以接收告知的資源物件。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; that describes the enlistment.">描述登記 (Enlistment) 的 <see cref="T:System.Transactions.Enlistment" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;recoveryInformation&quot; /&gt; is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; Transaction Manager information in &lt;paramref name=&quot;recoveryInformation&quot; /&gt; does not match the configured transaction manager.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;RecoveryInformation&quot; /&gt; is not recognized by &lt;see cref=&quot;N:System.Transactions&quot; /&gt;.">
        <paramref name="recoveryInformation" /> 無效。
-或-
<paramref name="recoveryInformation" /> 中的交易管理員資訊不符合所設定的交易管理員。
-或-
<see cref="N:System.Transactions" /> 無法辨識 <paramref name="RecoveryInformation" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)&quot; /&gt; has already been called for the specified &lt;paramref name=&quot;resourceManagerIdentifier&quot; /&gt;. The reenlistment is rejected.">已經為每個指定的 <paramref name="resourceManagerIdentifier" /> 呼叫 <see cref="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)" />。 重新登記遭拒。</exception>
      <exception cref="T:System.Transactions.TransactionException" vsli:raw="The &lt;paramref name=&quot;resourceManagerIdentifier&quot; /&gt; does not match the content of the specified recovery information in &lt;paramref name=&quot;recoveryInformation&quot; /&gt;.">
        <paramref name="resourceManagerIdentifier" /> 不符合 <paramref name="recoveryInformation" /> 中指定之復原資訊的內容。</exception>
    </member>
    <member name="T:System.Transactions.TransactionManagerCommunicationException">
      <summary vsli:raw="The exception that is thrown when a resource manager cannot communicate with the transaction manager.">當資源管理員無法與交易管理員通訊時，所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionManagerCommunicationException&quot; /&gt; class.">初始化 <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionManagerCommunicationException&quot; /&gt; class with the specified serialization and streaming context information.">使用指定的序列化和資料流內容資訊，初始化 <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，描述已失敗的序列化作業。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，描述已失敗的序列化內容。</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionManagerCommunicationException&quot; /&gt; class with the specified message.">使用指定的訊息初始化 <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" />，其中包含說明例外狀況發生原因的訊息。</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionManagerCommunicationException&quot; /&gt; class with the specified message and inner exception.">使用指定的訊息和內部例外狀況初始化 <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" />，其中包含說明例外狀況發生原因的訊息。</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">取得造成目前例外狀況的例外狀況執行個體。 如需詳細資訊，請參閱 <see cref="P:System.Exception.InnerException" /> 屬性 (Property)。</param>
    </member>
    <member name="T:System.Transactions.TransactionOptions">
      <summary vsli:raw="Contains additional information that specifies transaction behaviors.">包含指定交易行為的其他資訊。</summary>
    </member>
    <member name="M:System.Transactions.TransactionOptions.Equals(System.Object)">
      <summary vsli:raw="Determines whether this &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance and the specified object are equal.">判斷這個 <see cref="T:System.Transactions.TransactionOptions" /> 執行個體和指定的物件是否相等。</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">與這個執行個體相互比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="obj" /> 和這個 <see cref="T:System.Transactions.TransactionOptions" /> 執行個體相同則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="P:System.Transactions.TransactionOptions.IsolationLevel">
      <summary vsli:raw="Gets or sets the isolation level of the transaction.">取得或設定交易的隔離等級 (Isolation Level)。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.IsolationLevel&quot; /&gt; enumeration that specifies the isolation level of the transaction.">
        <see cref="T:System.Transactions.IsolationLevel" /> 列舉，會指定交易的隔離等級。</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Equality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instances are equivalent.">測試兩個指定的 <see cref="T:System.Transactions.TransactionOptions" /> 執行個體是否相等。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance that is to the left of the equality operator.">在相等運算子左邊的 <see cref="T:System.Transactions.TransactionOptions" /> 執行個體。</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance that is to the right of the equality operator.">在相等運算子右方的 <see cref="T:System.Transactions.TransactionOptions" /> 執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="x" /> 和 <paramref name="y" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Inequality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary vsli:raw="Returns a value that indicates whether two &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instances are not equal.">傳回值，這個值表示兩個 <see cref="T:System.Transactions.TransactionOptions" /> 執行個體是否不相等。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance that is to the left of the equality operator.">在相等運算子左邊的 <see cref="T:System.Transactions.TransactionOptions" /> 執行個體。</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance that is to the right of the equality operator.">在相等運算子右方的 <see cref="T:System.Transactions.TransactionOptions" /> 執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="x" /> 和 <paramref name="y" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Transactions.TransactionOptions.Timeout">
      <summary vsli:raw="Gets or sets the timeout period for the transaction.">取得或設定交易的逾時期限。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies the timeout period for the transaction.">
        <see cref="T:System.TimeSpan" /> 值，會指定交易的逾時期限。</returns>
    </member>
    <member name="T:System.Transactions.TransactionPromotionException">
      <summary vsli:raw="The exception that is thrown when a promotion fails.">提升失敗時擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionPromotionException&quot; /&gt; class.">初始化 <see cref="T:System.Transactions.TransactionPromotionException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionPromotionException&quot; /&gt; class with the specified serialization and streaming context information.">使用指定的序列化和資料流內容資訊，初始化 <see cref="T:System.Transactions.TransactionPromotionException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，描述已失敗的序列化作業。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，描述已失敗的序列化內容。</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionPromotionException&quot; /&gt; class with the specified message.">使用指定的訊息初始化 <see cref="T:System.Transactions.TransactionPromotionException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" />，其中包含說明例外狀況發生原因的訊息。</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionPromotionException&quot; /&gt; class with the specified message and inner exception.">使用指定的訊息和內部例外狀況初始化 <see cref="T:System.Transactions.TransactionPromotionException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" />，其中包含說明例外狀況發生原因的訊息。</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">取得造成目前例外狀況的例外狀況執行個體。 如需詳細資訊，請參閱 <see cref="P:System.Exception.InnerException" /> 屬性 (Property)。</param>
    </member>
    <member name="T:System.Transactions.TransactionScope">
      <summary vsli:raw="Makes a code block transactional. This class cannot be inherited.">使程式碼區塊成為異動式。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class.">初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體，並將指定的異動設定為環境異動，以便在範圍內執行的異動式工作使用這個異動。</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">要設定為環境異動的異動，以便在範圍內執行的異動式工作使用這個異動。</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">使用指定的逾時值，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體，並將指定的異動設定為環境異動，以便在範圍內執行的異動式工作使用這個異動。</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">要設定為環境異動的異動，以便在範圍內執行的異動式工作使用這個異動。</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">在 <see cref="T:System.TimeSpan" /> 之後，異動範圍將逾時而中止異動。</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value and COM+ interoperability requirements, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">使用指定的逾時值和 COM+ 互通性需求，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體，並將指定的異動設定為環境異動，以便在範圍內執行的異動式工作使用這個異動。</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">要設定為環境異動的異動，以便在範圍內執行的異動式工作使用這個異動。</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">在 <see cref="T:System.TimeSpan" /> 之後，異動範圍將逾時而中止異動。</param>
      <param name="interopOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.EnterpriseServicesInteropOption&quot; /&gt; enumeration that describes how the associated transaction interacts with COM+ transactions.">
        <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> 列舉的執行個體，會描述關聯的異動如何與 COM+ 異動互動。</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]  &#xA;  &#xA; Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">[在 .NET Framework 4.5.1 及更新版本中支援]
使用指定的逾時值，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體，並將指定的異動設定為環境異動，以便在範圍內執行的異動式工作使用這個異動。</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">要設定為環境異動的異動，以便在範圍內執行的異動式工作使用這個異動。</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">在 <see cref="T:System.TimeSpan" /> 之後，異動範圍將逾時而中止異動。</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">
        <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 列舉執行個體，這個執行個體描述異動範圍相關聯的環境異動是否會在使用 Task 或 async/await .NET 非同步程式設計模式時，跨執行緒接續流動。</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]  &#xA;  &#xA; Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">[在 .NET Framework 4.5.1 及更新版本中支援]
初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體，並將指定的異動設定為環境異動，以便在範圍內執行的異動式工作使用這個異動。</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">要設定為環境異動的異動，以便在範圍內執行的異動式工作使用這個異動。</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">
        <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 列舉執行個體，這個執行個體描述異動範圍相關聯的環境異動是否會在使用 Task 或 async/await .NET 非同步程式設計模式時，跨執行緒接續流動。</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified asynchronous flow option.">使用指定的非同步流程選項，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</summary>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">
        <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 列舉執行個體，這個執行個體描述異動範圍相關聯的環境異動是否會在使用 Task 或 async/await .NET 非同步程式設計模式時，跨執行緒接續流動。</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified requirements.">使用指定的需求，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">
        <see cref="T:System.Transactions.TransactionScopeOption" /> 列舉的執行個體，會描述與此異動範圍有關聯的異動需求。</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value and requirements.">使用指定的逾時值和需求，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">
        <see cref="T:System.Transactions.TransactionScopeOption" /> 列舉的執行個體，會描述與此異動範圍有關聯的異動需求。</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">在 <see cref="T:System.TimeSpan" /> 之後，異動範圍將逾時而中止異動。</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value, requirements, and asynchronous flow option.">使用指定的逾時值、需求和非同步流程選項，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">
        <see cref="T:System.Transactions.TransactionScopeOption" /> 列舉的執行個體，會描述與此異動範圍有關聯的異動需求。</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">在 <see cref="T:System.TimeSpan" /> 之後，異動範圍將逾時而中止異動。</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">
        <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 列舉執行個體，這個執行個體描述異動範圍相關聯的環境異動是否會在使用 Task 或 async/await .NET 非同步程式設計模式時，跨執行緒接續流動。</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified requirements.">使用指定的需求，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">
        <see cref="T:System.Transactions.TransactionScopeOption" /> 列舉的執行個體，會描述與此異動範圍有關聯的異動需求。</param>
      <param name="transactionOptions" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.">
        <see cref="T:System.Transactions.TransactionOptions" /> 結構，描述建立新異動時要使用的異動選項。 如果使用現有的異動，則這個參數中的逾時值會套用至異動範圍。 如果該時間在處置範圍之前過期，則會中止異動。</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified scope and COM+ interoperability requirements, and transaction options.">使用指定的範圍和 COM+ 互通性需求，以及異動選項，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">
        <see cref="T:System.Transactions.TransactionScopeOption" /> 列舉的執行個體，會描述與此異動範圍有關聯的異動需求。</param>
      <param name="transactionOptions" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.">
        <see cref="T:System.Transactions.TransactionOptions" /> 結構，描述建立新異動時要使用的異動選項。 如果使用現有的異動，則這個參數中的逾時值會套用至異動範圍。 如果該時間在處置範圍之前過期，則會中止異動。</param>
      <param name="interopOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.EnterpriseServicesInteropOption&quot; /&gt; enumeration that describes how the associated transaction interacts with COM+ transactions.">
        <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> 列舉的執行個體，會描述關聯的異動如何與 COM+ 異動互動。</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]  &#xA;  &#xA; Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified requirements and asynchronous flow option.">[在 .NET Framework 4.5.1 及更新版本中支援]
使用指定的需求和非同步流程選項，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">
        <see cref="T:System.Transactions.TransactionScopeOption" /> 列舉的執行個體，會描述與此異動範圍有關聯的異動需求。</param>
      <param name="transactionOptions" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.">
        <see cref="T:System.Transactions.TransactionOptions" /> 結構，描述建立新異動時要使用的異動選項。 如果使用現有的異動，則這個參數中的逾時值會套用至異動範圍。 如果該時間在處置範圍之前過期，則會中止異動。</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">
        <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 列舉執行個體，這個執行個體描述異動範圍相關聯的環境異動是否會在使用 Task 或 async/await .NET 非同步程式設計模式時，跨執行緒接續流動。</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified requirements and asynchronous flow option.">使用指定的需求和非同步流程選項，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">
        <see cref="T:System.Transactions.TransactionScopeOption" /> 列舉的執行個體，會描述與此異動範圍有關聯的異動需求。</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">
        <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 列舉執行個體，這個執行個體描述異動範圍相關聯的環境異動是否會在使用 Task 或 async/await .NET 非同步程式設計模式時，跨執行緒接續流動。</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.Complete">
      <summary vsli:raw="Indicates that all operations within the scope are completed successfully.">表示範圍內的所有作業都已成功完成。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method has already been called once.">已經呼叫這個方法一次。</exception>
    </member>
    <member name="M:System.Transactions.TransactionScope.Dispose">
      <summary vsli:raw="Ends the transaction scope.">結束交易範圍。</summary>
    </member>
    <member name="T:System.Transactions.TransactionScopeAsyncFlowOption">
      <summary vsli:raw="Specifies whether transaction flow across thread continuations is enabled for &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt;.">指定 <see cref="T:System.Transactions.TransactionScope" /> 是否啟用跨執行緒接續的異動流程。</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeAsyncFlowOption.Enabled">
      <summary vsli:raw="Specifies that transaction flow across thread continuations is enabled.">指定是否啟用跨執行緒接續的異動流程。</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeAsyncFlowOption.Suppress">
      <summary vsli:raw="Specifies that transaction flow across thread continuations is suppressed. This is the default setting if no &lt;see langword=&quot;TransactionScopeAsyncFlowOption&quot; /&gt; is specified in the &lt;see cref=&quot;Overload:System.Transactions.TransactionScope.#ctor&quot; /&gt; constructor.">指定是否隱藏跨執行緒接續的異動流程。 若 <see cref="Overload:System.Transactions.TransactionScope.#ctor" /> 建構函式中未指定任何 <see langword="TransactionScopeAsyncFlowOption" />，則這是預設設定。</summary>
    </member>
    <member name="T:System.Transactions.TransactionScopeOption">
      <summary vsli:raw="Provides additional options for creating a transaction scope.">提供建立交易範圍的其他選項。</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Required">
      <summary vsli:raw="A transaction is required by the scope. It uses an ambient transaction if one already exists. Otherwise, it creates a new transaction before entering the scope. This is the default value.">交易為範圍所需。 如果已經存在環境交易，則會使用環境交易， 否則會在進入範圍前建立新的交易。 這是預設值。</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.RequiresNew">
      <summary vsli:raw="A new transaction is always created for the scope.">一定會建立該範圍的新交易。</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Suppress">
      <summary vsli:raw="The ambient transaction context is suppressed when creating the scope. All operations within the scope are done without an ambient transaction context.">當建立範圍時，會隱藏環境交易內容， 範圍內的所有作業都是在不使用環境交易內容的情況下完成。</summary>
    </member>
    <member name="T:System.Transactions.TransactionStartedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Transactions.TransactionManager.DistributedTransactionStarted&quot; /&gt; event of a &lt;see cref=&quot;T:System.Transactions.TransactionManager&quot; /&gt; class.">表示處理 <see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" /> 類別的 <see cref="T:System.Transactions.TransactionManager" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionEventArgs&quot; /&gt; that contains the transaction from which transaction information can be retrieved.">
        <see cref="T:System.Transactions.TransactionEventArgs" />，包含可從中擷取交易資訊的交易。</param>
    </member>
    <member name="T:System.Transactions.TransactionStatus">
      <summary vsli:raw="Describes the current status of a distributed transaction.">描述分散式交易的目前狀態。</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Aborted">
      <summary vsli:raw="The transaction has been rolled back.">已經復原交易。</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Active">
      <summary vsli:raw="The status of the transaction is unknown, because some participants must still be polled.">交易的狀態不明，因為仍必須輪詢某些參與者。</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Committed">
      <summary vsli:raw="The transaction has been committed.">已經認可交易。</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.InDoubt">
      <summary vsli:raw="The status of the transaction is unknown.">交易的狀態不明。</summary>
    </member>
  </members>
</doc>