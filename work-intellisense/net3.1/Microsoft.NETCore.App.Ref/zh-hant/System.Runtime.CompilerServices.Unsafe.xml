<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.CompilerServices.Unsafe</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.CompilerServices.Unsafe">
      <summary>包含指標操作的一般低層級功能。</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)">
      <summary>在指定的參考中新增項目位移。</summary>
      <param name="source">要新增位移的參考。</param>
      <param name="elementOffset">要加上的位移。</param>
      <typeparam name="T">參考的類型。</typeparam>
      <returns>反映指標新增位移的新參考。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)">
      <summary>在指定的參考中新增項目位移。</summary>
      <param name="source">要新增位移的參考。</param>
      <param name="elementOffset">要加上的位移。</param>
      <typeparam name="T">參考的類型。</typeparam>
      <returns>反映指標新增位移的新參考。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.Add``1(System.Void*,System.Int32)">
      <summary>在指定的 void 指標中新增元素位移。</summary>
      <param name="source">要新增位移的 void 指標。</param>
      <param name="elementOffset">要加上的位移。</param>
      <typeparam name="T">Void 指標的類型。</typeparam>
      <returns>反映在指定指標中新增位移的新 void 指標。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)">
      <summary>在指定的參考中新增位元組位移。</summary>
      <param name="source">要新增位移的參考。</param>
      <param name="byteOffset">要加上的位移。</param>
      <typeparam name="T">參考的類型。</typeparam>
      <returns>反映指標新增位元組位移的新參考。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)">
      <summary>判斷指定的參考是否指向相同的位置。</summary>
      <param name="left">要比較的第一個參考。</param>
      <param name="right">要比較的第二個參考。</param>
      <typeparam name="T">參考的類型。</typeparam>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 指向相同的位置，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)">
      <summary>將指定的物件轉換為指定類型。</summary>
      <param name="o">要轉換的物件。</param>
      <typeparam name="T">物件將轉換成的類型。</typeparam>
      <returns>原始物件，轉換為指定的類型。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)">
      <summary>將指定的參考轉換為類型 <typeparamref name="TTo" /> 值的參考。</summary>
      <param name="source">要轉換的參考。</param>
      <typeparam name="TFrom">要轉換之參考的型別。</typeparam>
      <typeparam name="TTo">所需的參考型別。</typeparam>
      <returns>類型 <typeparamref name="TTo" /> 值的參考。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)">
      <summary>將指標傳回指定的 by-ref 參數。</summary>
      <param name="value">已取得指標的物件。</param>
      <typeparam name="T">物件的型別。</typeparam>
      <returns>指定值的指標。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(``0@)">
      <summary>將給定的唯讀參考重新解譯為參考。</summary>
      <param name="source">要重新解譯的唯讀參考。</param>
      <typeparam name="T">參考的類型。</typeparam>
      <returns>類型 <typeparamref name="T" /> 值的參考。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)">
      <summary>將指定的位置轉換為類型 <typeparamref name="T" /> 值的參考。</summary>
      <param name="source">要參考之值的位置。</param>
      <typeparam name="T">已轉譯位置的類型。</typeparam>
      <returns>類型 <typeparamref name="T" /> 值的參考。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)">
      <summary>從指定參考決定原點到目標的位元組位移。</summary>
      <param name="origin">原點的參考。</param>
      <param name="target">目標的參考。</param>
      <typeparam name="T">參考的類型。</typeparam>
      <returns>從原點到目標的位元組位移，即 <paramref name="target" /> - <paramref name="origin" />。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)">
      <summary>將類型 <typeparamref name="T" /> 的值複製到指定位置。</summary>
      <param name="destination">要複製的目標位置。</param>
      <param name="source">要複製的值指標。</param>
      <typeparam name="T">要複製的數值型別。</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)">
      <summary>將類型 <typeparamref name="T" /> 的值複製到指定位置。</summary>
      <param name="destination">要複製的目標位置。</param>
      <param name="source">要複製的值參考。</param>
      <typeparam name="T">要複製的數值型別。</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Byte@,System.Byte@,System.UInt32)">
      <summary>將位元組從來源位址複製到目的地位址。</summary>
      <param name="destination">要複製的目的地位址。</param>
      <param name="source">複製來源的來源位址。</param>
      <param name="byteCount">要複製的位元組數目。</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)">
      <summary>將位元組從來源位址複製到目的地位址。</summary>
      <param name="destination">要複製的目的地位址。</param>
      <param name="source">複製來源的來源位址。</param>
      <param name="byteCount">要複製的位元組數目。</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Byte@,System.Byte@,System.UInt32)">
      <summary>將位元組從來源位址複製到目的地位址，但不假設位址的架構相依對齊方式。</summary>
      <param name="destination">要複製的目的地位址。</param>
      <param name="source">複製來源的來源位址。</param>
      <param name="byteCount">要複製的位元組數目。</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Void*,System.Void*,System.UInt32)">
      <summary>將位元組從來源位址複製到目的地位址，但不假設位址的架構相依對齊方式。</summary>
      <param name="destination">要複製的目的地位址。</param>
      <param name="source">複製來源的來源位址。</param>
      <param name="byteCount">要複製的位元組數目。</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Byte@,System.Byte,System.UInt32)">
      <summary>以指定的初始值，初始化指定位置的記憶體區塊。</summary>
      <param name="startAddress">要初始化之記憶體區塊的開頭位址。</param>
      <param name="value">區塊要初始化為這個值。</param>
      <param name="byteCount">要初始化的位元組數。</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)">
      <summary>以指定的初始值，初始化指定位置的記憶體區塊。</summary>
      <param name="startAddress">要初始化之記憶體區塊的開頭位址。</param>
      <param name="value">區塊要初始化為這個值。</param>
      <param name="byteCount">要初始化的位元組數。</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Byte@,System.Byte,System.UInt32)">
      <summary>以指定的起始值初始化指定位置的記憶體區塊，但不假設位址的架構相依對齊方式。</summary>
      <param name="startAddress">要初始化之記憶體區塊的開頭位址。</param>
      <param name="value">區塊要初始化為這個值。</param>
      <param name="byteCount">要初始化的位元組數。</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)">
      <summary>以指定的起始值初始化指定位置的記憶體區塊，但不假設位址的架構相依對齊方式。</summary>
      <param name="startAddress">要初始化之記憶體區塊的開頭位址。</param>
      <param name="value">區塊要初始化為這個值。</param>
      <param name="byteCount">要初始化的位元組數。</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.IsAddressGreaterThan``1(``0@,``0@)">
      <summary>傳回值，指出所指定參考是否大於另一個指定的參考。</summary>
      <param name="left">要比較的第一個值。</param>
      <param name="right">要比較的第二個值。</param>
      <typeparam name="T">參考的型別。</typeparam>
      <returns>如果 <see langword="true" /> 大於 <paramref name="left" /> 則為 <paramref name="right" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.IsAddressLessThan``1(``0@,``0@)">
      <summary>傳回值，指出所指定參考是否小於另一個指定的參考。</summary>
      <param name="left">要比較的第一個值。</param>
      <param name="right">要比較的第二個值。</param>
      <typeparam name="T">參考的型別。</typeparam>
      <returns>如果 <paramref name="left" /> 小於 <paramref name="right" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)">
      <summary>從指定位置讀取類型 <typeparamref name="T" /> 的值。</summary>
      <param name="source">讀取來源的位置。</param>
      <typeparam name="T">要讀取的類型。</typeparam>
      <returns>從指定位置讀取的類型 <typeparamref name="T" /> 物件。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Byte@)">
      <summary>從指定位置讀取之類型 <typeparamref name="T" /> 的值，但不假設位址的架構相依對齊方式。</summary>
      <param name="source">讀取來源的位置。</param>
      <typeparam name="T">要讀取的類型。</typeparam>
      <returns>從指定位置讀取的類型 <typeparamref name="T" /> 物件。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Void*)">
      <summary>從指定位置讀取之類型 <typeparamref name="T" /> 的值，但不假設位址的架構相依對齊方式。</summary>
      <param name="source">讀取來源的位置。</param>
      <typeparam name="T">要讀取的類型。</typeparam>
      <returns>從指定位置讀取的類型 <typeparamref name="T" /> 物件。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.SizeOf``1">
      <summary>傳回指定型別參數的物件大小。</summary>
      <typeparam name="T">取得其大小的物件類型。</typeparam>
      <returns>類型 <typeparamref name="T" /> 物件的大小。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)">
      <summary>從指定的參考中減去項目位移。</summary>
      <param name="source">要減去位移的參考。</param>
      <param name="elementOffset">要減去的位移。</param>
      <typeparam name="T">參考的類型。</typeparam>
      <returns>反映指標減去位移的新參考。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)">
      <summary>從指定的參考中減去項目位移。</summary>
      <param name="source">要減去位移的參考。</param>
      <param name="elementOffset">要減去的位移。</param>
      <typeparam name="T">參考的類型。</typeparam>
      <returns>反映指標減去位移的新參考。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(System.Void*,System.Int32)">
      <summary>從指定的 void 指標中減去元素位移。</summary>
      <param name="source">要減去位移的 void 指標。</param>
      <param name="elementOffset">要減去的位移。</param>
      <typeparam name="T">Void 指標的類型。</typeparam>
      <returns>反映從所指定指標中減去位移的新 void 指標。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)">
      <summary>從指定的參考中減去位元組位移。</summary>
      <param name="source">要減去位移的參考。</param>
      <param name="byteOffset">要減去的位移。</param>
      <typeparam name="T">參考的類型。</typeparam>
      <returns>反映指標減去位元組位移的新參考。</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.Unbox``1(System.Object)">
      <summary>傳回 <see langword="mutable ref" /> 至 boxed 值。</summary>
      <param name="box">要 unbox 的值。</param>
      <typeparam name="T">要取消裝箱的類型。</typeparam>
      <returns>參考 boxed 值 <paramref name="box" /> 的 <see langword="mutable ref" />。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="box" /> 是 <see langword="null" />，且 <typeparamref name="T" /> 不可為 Null 的實值型別。</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="box" /> 不是 boxed 實值型別。
-或-
<paramref name="box" /> 不是 boxed <typeparamref name="T" />。</exception>
      <exception cref="T:System.TypeLoadException">找不到 <typeparamref name="T" />。</exception>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)">
      <summary>將類型 <typeparamref name="T" /> 的值寫入指定位置。</summary>
      <param name="destination">要寫入的位置。</param>
      <param name="value">要寫入的值。</param>
      <typeparam name="T">要寫入的數值型別。</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Byte@,``0)">
      <summary>將類型 <typeparamref name="T" /> 的值寫入指定位置，但不假設位址的架構相依對齊方式。</summary>
      <param name="destination">要寫入的位置。</param>
      <param name="value">要寫入的值。</param>
      <typeparam name="T">要寫入的數值型別。</typeparam>
    </member>
    <member name="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Void*,``0)">
      <summary>將類型 <typeparamref name="T" /> 的值寫入指定位置，但不假設位址的架構相依對齊方式。</summary>
      <param name="destination">要寫入的位置。</param>
      <param name="value">要寫入的值。</param>
      <typeparam name="T">要寫入的數值型別。</typeparam>
    </member>
  </members>
</doc>