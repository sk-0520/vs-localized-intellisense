<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XDocument</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Linq.Extensions">
      <summary vsli:raw="Contains the LINQ to XML extension methods.">包含 LINQ to XML 擴充方法。</summary>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of elements that contains the ancestors of every node in the source collection.">傳回包含來源集合中每個節點祖系的項目集合。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XNode" />，其中包含來源集合。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <paramref name="source" /> 中物件的型別，限制為 <see cref="T:System.Xml.Linq.XNode" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the ancestors of every node in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其中包含來源集合中每個節點的祖系。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains the ancestors of every node in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">傳回包含來源集合中每個節點祖系的已篩選項目集合。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XNode" />，其中包含來源集合。</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <paramref name="source" /> 中物件的型別，限制為 <see cref="T:System.Xml.Linq.XNode" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the ancestors of every node in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其中包含來源集合中每個節點的祖系。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.">傳回包含來源集合中每個項目的項目集合，以及來源集合中每個項目的祖系。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其中包含來源集合。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the ancestors of every element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，包含來源集合中的每個項目，以及來源集合中每個項目的祖系。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">傳回包含來源集合中每個項目的已篩選項目集合，以及來源集合中每個項目的祖系。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其中包含來源集合。</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，包含來源集合中的每個項目，以及來源集合中每個項目的祖系。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of the attributes of every element in the source collection.">傳回來源集合中每個項目的屬性集合。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其中包含來源集合。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the attributes of every element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XAttribute" />，其中包含來源集合中每個項目的屬性。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the attributes of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">傳回來源集合中每個項目之屬性的已篩選集合。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其中包含來源集合。</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains a filtered collection of the attributes of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XAttribute" />，其中包含來源集合中每個項目之屬性的已篩選集合。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the descendant nodes of every document and element in the source collection.">傳回來源集合中每個文件和項目之子代節點的集合。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XContainer" />，其中包含來源集合。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <paramref name="source" /> 中物件的型別，限制為 <see cref="T:System.Xml.Linq.XContainer" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the descendant nodes of every document and element in the source collection.">來源集合中每個文件和項目的子代節點之 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XNode" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of nodes that contains every element in the source collection, and the descendant nodes of every element in the source collection.">傳回包含來源集合中每個項目的節點集合，以及來源集合中每個項目的子代節點。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其中包含來源集合。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains every element in the source collection, and the descendant nodes of every element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XNode" />，包含來源集合中的每個項目，以及來源集合中每個項目的子代節點。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of elements that contains the descendant elements of every element and document in the source collection.">傳回包含來源集合中每個項目和文件之子代項目的項目集合。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XContainer" />，其中包含來源集合。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <paramref name="source" /> 中物件的型別，限制為 <see cref="T:System.Xml.Linq.XContainer" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the descendant elements of every element and document in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其中包含來源集合中每個項目和文件的子代項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains the descendant elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">傳回已篩選的項目集合，其中包含來源集合中每個項目和文件的子代項目。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XContainer" />，其中包含來源集合。</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <paramref name="source" /> 中物件的型別，限制為 <see cref="T:System.Xml.Linq.XContainer" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the descendant elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其中包含來源集合中每個項目和文件的子代項目。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of elements that contains every element in the source collection, and the descendent elements of every element in the source collection.">傳回包含來源集合中每個項目的項目集合，以及來源集合中每個項目的子代項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其中包含來源集合。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the descendent elements of every element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，包含來源集合中的每個項目，以及來源集合中每個項目的子代項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">傳回包含來源集合中每個項目的已篩選項目集合，以及來源集合中每個項目的子代。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其中包含來源集合。</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，包含來源集合中每個項目的項目集合，以及來源集合中每個項目的子代。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the child elements of every element and document in the source collection.">傳回來源集合中每個項目和文件的子項目集合。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其中包含來源集合。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <paramref name="source" /> 中物件的型別，限制為 <see cref="T:System.Xml.Linq.XContainer" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the child elements of every element or document in the source collection.">來源集合中每個項目或文件的子項目之 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the child elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">傳回來源集合中每個項目和文件的已篩選子項目集合。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其中包含來源集合。</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <paramref name="source" /> 中物件的型別，限制為 <see cref="T:System.Xml.Linq.XContainer" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the child elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">來源集合中每個項目和文件之 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of nodes that contains all nodes in the source collection, sorted in document order.">傳回包含來源集合中所有節點的節點集合，依據文件順序來排序。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XNode" />，其中包含來源集合。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <paramref name="source" /> 中物件的型別，限制為 <see cref="T:System.Xml.Linq.XNode" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains all nodes in the source collection, sorted in document order.">包含來源集合中所有節點 (依據文件順序排序) 之 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XNode" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the child nodes of every document and element in the source collection.">傳回來源集合中每個文件和項目的子節點集合。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XNode" />，其中包含來源集合。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <paramref name="source" /> 中物件的型別，限制為 <see cref="T:System.Xml.Linq.XContainer" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the child nodes of every document and element in the source collection.">來源集合中每個文件和項目的子節點之 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XNode" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
      <summary vsli:raw="Removes every attribute in the source collection from its parent element.">在來源集合中，從每一個屬性的父項目移除這些屬性。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XAttribute" />，其中包含來源集合。</param>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Removes every node in the source collection from its parent node.">在來源集合中，從每一個節點的父節點移除這些節點。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XNode" />，其中包含來源集合。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <paramref name="source" /> 中物件的型別，限制為 <see cref="T:System.Xml.Linq.XNode" />。</typeparam>
    </member>
    <member name="T:System.Xml.Linq.LoadOptions">
      <summary vsli:raw="Specifies load options when parsing XML.">指定剖析 XML 時的載入選項。</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.None">
      <summary vsli:raw="Does not preserve insignificant white space or load base URI and line information.">請勿保留不重要的泛空白字元，或載入基底 URI 和行資訊。</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.PreserveWhitespace">
      <summary vsli:raw="Preserves insignificant white space while parsing.">在剖析時保留不重要的泛空白字元。</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetBaseUri">
      <summary vsli:raw="Requests the base URI information from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, and makes it available via the &lt;see cref=&quot;P:System.Xml.Linq.XObject.BaseUri&quot; /&gt; property.">從 <see cref="T:System.Xml.XmlReader" /> 要求基底 URI 資訊，並使其可以透過 <see cref="P:System.Xml.Linq.XObject.BaseUri" /> 屬性使用。</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetLineInfo">
      <summary vsli:raw="Requests the line information from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and makes it available via properties on &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">從 <see cref="T:System.Xml.XmlReader" /> 要求行資訊，並使其可以透過 <see cref="T:System.Xml.Linq.XObject" /> 的屬性使用。</summary>
    </member>
    <member name="T:System.Xml.Linq.ReaderOptions">
      <summary vsli:raw="Specifies whether to omit duplicate namespaces when loading an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定是否要在以 <see cref="T:System.Xml.Linq.XDocument" /> 載入 <see cref="T:System.Xml.XmlReader" /> 時省略重複的命名空間。</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.None">
      <summary vsli:raw="No reader options specified.">不指定讀取器選項。</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.OmitDuplicateNamespaces">
      <summary vsli:raw="Omit duplicate namespaces when loading the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">在載入 <see cref="T:System.Xml.Linq.XDocument" /> 時省略重複的命名空間。</summary>
    </member>
    <member name="T:System.Xml.Linq.SaveOptions">
      <summary vsli:raw="Specifies serialization options.">指定序列化選項。</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.DisableFormatting">
      <summary vsli:raw="Preserve all insignificant white space while serializing.">當序列化時保留所有不重要的泛空白字元。</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.None">
      <summary vsli:raw="Format (indent) the XML while serializing.">當序列化時格式化 (縮排) XML。</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces">
      <summary vsli:raw="Remove the duplicate namespace declarations while serializing.">當序列化時移除重複的命名空間宣告。</summary>
    </member>
    <member name="T:System.Xml.Linq.XAttribute">
      <summary vsli:raw="Represents an XML attribute.">代表 XML 屬性。</summary>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object.">從另一個 <see cref="T:System.Xml.Linq.XAttribute" /> 物件，初始化 <see cref="T:System.Xml.Linq.XAttribute" /> 類別的新執行個體。</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object to copy from.">要從中複製的 <see cref="T:System.Xml.Linq.XAttribute" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; class from the specified name and value.">使用指定的名稱和值，初始化 <see cref="T:System.Xml.Linq.XAttribute" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; of the attribute.">屬性的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the value of the attribute.">包含屬性值的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 或 <paramref name="value" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.EmptySequence">
      <summary vsli:raw="Gets an empty collection of attributes.">取得空的屬性集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing an empty collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XAttribute" />，包含空集合。</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
      <summary vsli:raw="Determines if this attribute is a namespace declaration.">判斷這個屬性是否為命名空間宣告。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this attribute is a namespace declaration; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果這個屬性是命名空間宣告，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Name">
      <summary vsli:raw="Gets the expanded name of this attribute.">取得這個屬性的擴展名稱 (Expanded Name)。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; containing the name of this attribute.">
        <see cref="T:System.Xml.Linq.XName" />，包含這個屬性的名稱。</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NextAttribute">
      <summary vsli:raw="Gets the next attribute of the parent element.">取得下一個父項目屬性。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing the next attribute of the parent element.">
        <see cref="T:System.Xml.Linq.XAttribute" />，包含下一個父項目屬性。</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NodeType">
      <summary vsli:raw="Gets the node type for this node.">取得此節點的節點類型。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;.">節點類型。 對於 <see cref="T:System.Xml.Linq.XAttribute" /> 物件，此值為 <see cref="F:System.Xml.XmlNodeType.Attribute" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Boolean" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.Boolean" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Boolean" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.Boolean" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.DateTime" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.DateTime" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.DateTime" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.DateTimeOffset" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.DateTimeOffset" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.DateTimeOffset" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.DateTimeOffset" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Decimal" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.Decimal" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Decimal" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.Decimal" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Double" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Double&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.Double" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Double" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.Double" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Guid" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.Guid" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Guid" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.Guid" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Int32" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.Int32" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Int32" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.Int32" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Int64" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.Int64" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Int64" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.Int64" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Boolean" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Boolean" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Boolean" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.Boolean" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.DateTime" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.DateTime" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.DateTime" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.DateTimeOffset" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.DateTimeOffset" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.DateTimeOffset" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.DateTimeOffset" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Decimal" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Decimal" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Decimal" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.Decimal" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Double" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Double" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Double" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.Double" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Guid" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Guid" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Guid" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.Guid" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Int32" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Int32" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Int32" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Int64" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Int64" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Int64" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.Int64" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Single" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Single" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Single" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.Single" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.TimeSpan" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.TimeSpan" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.TimeSpan" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.TimeSpan" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.UInt32" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.UInt32" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.UInt32" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.UInt32" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.UInt64" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.UInt64" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.UInt64" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.UInt64" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.Single" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Single&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.Single" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Single" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.Single" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.String" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.String&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.String" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.TimeSpan" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.TimeSpan" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.TimeSpan" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.TimeSpan" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.UInt32" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.UInt32" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.UInt32" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.UInt32" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.UInt64" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.UInt64" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.UInt64" />，包含這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">此屬性不包含有效的 <see cref="T:System.UInt64" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.PreviousAttribute">
      <summary vsli:raw="Gets the previous attribute of the parent element.">取得父項目的前一個屬性。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing the previous attribute of the parent element.">
        <see cref="T:System.Xml.Linq.XAttribute" />，包含父項目的前一個屬性。</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.Remove">
      <summary vsli:raw="Removes this attribute from its parent element.">將這個屬性從其父項目移除。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent element is &lt;see langword=&quot;null&quot; /&gt;.">父項目為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
      <summary vsli:raw="Sets the value of this attribute.">設定這個屬性的值。</summary>
      <param name="value" vsli:raw="The value to assign to this attribute.">要指派給屬性的值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" /> 是 <see cref="T:System.Xml.Linq.XObject" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object to a string representation.">將目前的 <see cref="T:System.Xml.Linq.XAttribute" /> 物件轉換為字串表示。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML text representation of an attribute and its value.">
        <see cref="T:System.String" />，包含屬性的 XML 文字表示和其值。</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Value">
      <summary vsli:raw="Gets or sets the value of this attribute.">取得或設定此屬性 (Attribute) 的值。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the value of this attribute.">包含此屬性之值的 <see cref="T:System.String" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="When setting, the &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">設定時，<paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Xml.Linq.XCData">
      <summary vsli:raw="Represents a text node that contains CDATA.">表示包含 CDATA 的文字節點。</summary>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Linq.XCData" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; node.">包含 <see cref="T:System.Xml.Linq.XCData" /> 節點值的字串。</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Linq.XCData" /> 類別的新執行個體。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; node to copy from.">要從中複製的 <see cref="T:System.Xml.Linq.XCData" /> 節點。</param>
    </member>
    <member name="P:System.Xml.Linq.XCData.NodeType">
      <summary vsli:raw="Gets the node type for this node.">取得此節點的節點類型。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;.">節點類型。 對於 <see cref="T:System.Xml.Linq.XCData" /> 物件，此值為 <see cref="F:System.Xml.XmlNodeType.CDATA" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this CDATA object to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個 CDATA 物件寫入 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">此方法將寫入其中的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; to the given &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個 <see cref="T:System.Xml.Linq.XCData" /> 寫入指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; to.">要寫入這個 <see cref="T:System.Xml.Linq.XCData" /> 的寫入器。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">代表非同步寫入作業的工作。</returns>
    </member>
    <member name="T:System.Xml.Linq.XComment">
      <summary vsli:raw="Represents an XML comment.">代表 XML 註解。</summary>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; class with the specified string content.">使用指定的字串內容，初始化 <see cref="T:System.Xml.Linq.XComment" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="A string that contains the contents of the new &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; object.">字串，包含新 <see cref="T:System.Xml.Linq.XComment" /> 物件的內容。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; class from an existing comment node.">從現有的註解節點，初始化 <see cref="T:System.Xml.Linq.XComment" /> 類別的新執行個體。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; node to copy from.">要從中複製的 <see cref="T:System.Xml.Linq.XComment" /> 節點。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Xml.Linq.XComment.NodeType">
      <summary vsli:raw="Gets the node type for this node.">取得此節點的節點類型。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Comment&quot; /&gt;.">節點類型。 對於 <see cref="T:System.Xml.Linq.XComment" /> 物件，此值為 <see cref="F:System.Xml.XmlNodeType.Comment" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XComment.Value">
      <summary vsli:raw="Gets or sets the string value of this comment.">取得或設定這個註解的字串值。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string value of this comment.">包含此註解之字串值的 <see cref="T:System.String" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this comment to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將此註解寫入 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">此方法將寫入其中的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個 <see cref="T:System.Xml.Linq.XComment" /> 寫入指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; to.">要寫入這個 <see cref="T:System.Xml.Linq.XComment" /> 的寫入器。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">表示非同步寫入作業的工作。</returns>
    </member>
    <member name="T:System.Xml.Linq.XContainer">
      <summary vsli:raw="Represents a node that can contain other nodes.">代表可包含其他節點的節點。</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object)">
      <summary vsli:raw="Adds the specified content as children of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">加入指定的內容做為此 <see cref="T:System.Xml.Linq.XContainer" /> 的子系。</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects to be added.">要加入的包含簡單內容或內容物件集合的內容物件。</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object[])">
      <summary vsli:raw="Adds the specified content as children of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">加入指定的內容做為此 <see cref="T:System.Xml.Linq.XContainer" /> 的子系。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">內容物件的參數清單。</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
      <summary vsli:raw="Adds the specified content as the first children of this document or element.">加入指定的內容，以當做此文件或項目的第一個子系。</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects to be added.">要加入的包含簡單內容或內容物件集合的內容物件。</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
      <summary vsli:raw="Adds the specified content as the first children of this document or element.">加入指定的內容，以當做此文件或項目的第一個子系。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">內容物件的參數清單。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">該父代為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XContainer.CreateWriter">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that can be used to add nodes to the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">建立可以用來將節點加入到 <see cref="T:System.Xml.XmlWriter" /> 的 <see cref="T:System.Xml.Linq.XContainer" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is ready to have content written to it.">準備寫入內容的 <see cref="T:System.Xml.XmlWriter" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.DescendantNodes">
      <summary vsli:raw="Returns a collection of the descendant nodes for this document or element, in document order.">依照文件順序，傳回這個文件或項目之子代節點的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the descendant nodes of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XNode" />，包含 <see cref="T:System.Xml.Linq.XContainer" /> 的子代節點 (依照文件順序)。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants">
      <summary vsli:raw="Returns a collection of the descendant elements for this document or element, in document order.">依照文件順序，傳回這個項目或文件之子代項目的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the descendant elements of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，包含 <see cref="T:System.Xml.Linq.XContainer" /> 的子代項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the descendant elements for this document or element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">依照文件順序，傳回這個文件或項目之已篩選子代項目的集合。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the descendant elements of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that match the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，包含符合指定 <see cref="T:System.Xml.Linq.XContainer" /> 之 <see cref="T:System.Xml.Linq.XName" /> 的子代項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
      <summary vsli:raw="Gets the first (in document order) child element with the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">取得具有指定之 <see cref="T:System.Xml.Linq.XName" /> 的第一個 (依據文件順序) 子項目。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that matches the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">符合指定之 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.Xml.Linq.XName" />，或者 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements">
      <summary vsli:raw="Returns a collection of the child elements of this element or document, in document order.">依照文件順序，傳回這個項目或文件之子代項目的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the child elements of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，包含此 <see cref="T:System.Xml.Linq.XContainer" /> 的子項目 (依據文件順序)。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the child elements of this element or document, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">依照文件順序，傳回這個項目或文件之已篩選子代項目的集合。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the children of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，包含具有符合 <see cref="T:System.Xml.Linq.XContainer" /> 之 <see cref="T:System.Xml.Linq.XName" /> 的子項目 (依據文件順序)。</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.FirstNode">
      <summary vsli:raw="Gets the first child node of this node.">取得此節點的第一個子節點。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the first child node of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" /> 包含 <see cref="T:System.Xml.Linq.XContainer" /> 的第一個節點。</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.LastNode">
      <summary vsli:raw="Gets the last child node of this node.">取得此節點的最後一個子節點。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the last child node of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" /> 包含 <see cref="T:System.Xml.Linq.XContainer" /> 的最後一個節點。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Nodes">
      <summary vsli:raw="Returns a collection of the child nodes of this element or document, in document order.">依照文件順序，傳回這個項目或文件之子代節點的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the contents of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XNode" />，包含此 <see cref="T:System.Xml.Linq.XContainer" /> 的內容 (根據文件順序)。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.RemoveNodes">
      <summary vsli:raw="Removes the child nodes from this document or element.">從此文件或項目中移除子節點。</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
      <summary vsli:raw="Replaces the children nodes of this document or element with the specified content.">以指定的內容取代這個文件或項目的子節點。</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects that replace the children nodes.">包含簡單內容或內容物件 (取代自節點) 集合的內容物件。</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
      <summary vsli:raw="Replaces the children nodes of this document or element with the specified content.">以指定的內容取代這個文件或項目的子節點。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">內容物件的參數清單。</param>
    </member>
    <member name="T:System.Xml.Linq.XDeclaration">
      <summary vsli:raw="Represents an XML declaration.">表示 XML 宣告。</summary>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; class with the specified version, encoding, and standalone status.">使用指定的版本、編碼和獨立狀態，初始化 <see cref="T:System.Xml.Linq.XDeclaration" /> 類別的新執行個體。</summary>
      <param name="version" vsli:raw="The version of the XML, usually &quot;1.0&quot;.">XML 的版本，通常為 "1.0"。</param>
      <param name="encoding" vsli:raw="The encoding for the XML document.">XML 文件的編碼方式。</param>
      <param name="standalone" vsli:raw="A string containing &quot;yes&quot; or &quot;no&quot; that specifies whether the XML is standalone or requires external entities to be resolved.">包含 "yes" 或 "no" 的字串，指定是否 XML 獨立或要求外部實體進行解析。</param>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; object.">從另一個 <see cref="T:System.Xml.Linq.XDeclaration" /> 物件，初始化 <see cref="T:System.Xml.Linq.XDeclaration" /> 類別的新執行個體。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; used to initialize this &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; object.">
        <see cref="T:System.Xml.Linq.XDeclaration" /> 用來初始化這個 <see cref="T:System.Xml.Linq.XDeclaration" /> 物件。</param>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Encoding">
      <summary vsli:raw="Gets or sets the encoding for this document.">取得或設定這個文件的編碼方式。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the code page name for this document.">
        <see cref="T:System.String" />，包含這個文件的字碼頁名稱。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Standalone">
      <summary vsli:raw="Gets or sets the standalone property for this document.">取得或設定這個文件的獨立屬性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the standalone property for this document.">
        <see cref="T:System.String" />，包含這個文件的獨立屬性。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.ToString">
      <summary vsli:raw="Provides the declaration as a formatted string.">提供宣告做為格式化的字串。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the formatted XML string.">
        <see cref="T:System.String" />，包含格式化的 XML 字串。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Version">
      <summary vsli:raw="Gets or sets the version property for this document.">取得或設定這個文件的版本屬性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the version property for this document.">
        <see cref="T:System.String" />，包含這個文件的版本屬性。</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocument">
      <summary vsli:raw="Represents an XML document. For the components and usage of an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object, see XDocument Class Overview.">表示 XML 文件。 如需 <see cref="T:System.Xml.Linq.XDocument" /> 物件的元件和用法，請參閱 XDocument 類別概觀。</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Linq.XDocument" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class with the specified content.">使用指定的內容初始化 <see cref="T:System.Xml.Linq.XDocument" /> 類別的新執行個體。</summary>
      <param name="content" vsli:raw="A parameter list of content objects to add to this document.">要加入此文件之內容物件的參數清單。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; and content.">使用指定的 <see cref="T:System.Xml.Linq.XDocument" /> 和內容，初始化 <see cref="T:System.Xml.Linq.XDeclaration" /> 類別的新執行個體。</summary>
      <param name="declaration" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; for the document.">文件的 <see cref="T:System.Xml.Linq.XDeclaration" />。</param>
      <param name="content" vsli:raw="The content of the document.">文件的內容。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class from an existing &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object.">從現有的 <see cref="T:System.Xml.Linq.XDocument" /> 物件，初始化 <see cref="T:System.Xml.Linq.XDocument" /> 類別的新執行個體。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that will be copied.">要複製的 <see cref="T:System.Xml.Linq.XDocument" /> 物件。</param>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Declaration">
      <summary vsli:raw="Gets or sets the XML declaration for this document.">取得或設定這個文件的 XML 宣告。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; that contains the XML declaration for this document.">
        <see cref="T:System.Xml.Linq.XDeclaration" />，包含這個文件的 XML 宣告。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.DocumentType">
      <summary vsli:raw="Gets the Document Type Definition (DTD) for this document.">取得這個文件的文件類型定義 (DTD)。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; that contains the DTD for this document.">
        <see cref="T:System.Xml.Linq.XDocumentType" />，包含這個文件的 DTD。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; instance by using the specified stream.">使用指定的資料流，建立新的 <see cref="T:System.Xml.Linq.XDocument" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream that contains the XML data.">包含 XML 資料的資料流。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that reads the data that is contained in the stream.">
        <see cref="T:System.Xml.Linq.XDocument" /> 物件，這個物件會讀取資料流中包含的資料。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.">使用指定的資料流建立新的 <see cref="T:System.Xml.Linq.XDocument" /> 執行個體，並選擇性地保留空白字元、設定基底 URI，以及保留行資訊。</summary>
      <param name="stream" vsli:raw="The stream containing the XML data.">包含 XML 資料的資料流。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" />，指定是否要載入基底 URI 和行資訊。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that reads the data that is contained in the stream.">
        <see cref="T:System.Xml.Linq.XDocument" /> 物件，這個物件會讀取資料流中包含的資料。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">從 <see cref="T:System.Xml.Linq.XDocument" /> 建立新的 <see cref="T:System.IO.TextReader" />。</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.IO.TextReader" />，包含 <see cref="T:System.Xml.Linq.XDocument" /> 的內容。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" />，包含指定的 <see cref="T:System.IO.TextReader" /> 內容。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, optionally preserving white space, setting the base URI, and retaining line information.">從 <see cref="T:System.Xml.Linq.XDocument" /> 建立新的 <see cref="T:System.IO.TextReader" />，並選擇性地保留泛空白字元、設定基底 URI，以及保留行資訊。</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.IO.TextReader" />，包含 <see cref="T:System.Xml.Linq.XDocument" /> 的內容。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" />，其指定泛空白字元 (White Space) 的行為，以及是否要載入基底 URI 和行資訊。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" />，包含從指定之 <see cref="T:System.IO.TextReader" /> 讀取的 XML。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a file.">從檔案建立新的 <see cref="T:System.Xml.Linq.XDocument" />。</summary>
      <param name="uri" vsli:raw="A URI string that references the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">參考檔案的 URI 字串會載入至新的 <see cref="T:System.Xml.Linq.XDocument" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified file.">
        <see cref="T:System.Xml.Linq.XDocument" />，包含指定之檔案的內容。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a file, optionally preserving white space, setting the base URI, and retaining line information.">從檔案建立新的 <see cref="T:System.Xml.Linq.XDocument" />，並選擇性地保留泛空白字元、設定基底 URI，以及保留行資訊。</summary>
      <param name="uri" vsli:raw="A URI string that references the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">參考檔案的 URI 字串會載入至新的 <see cref="T:System.Xml.Linq.XDocument" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" />，其指定泛空白字元 (White Space) 的行為，以及是否要載入基底 URI 和行資訊。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified file.">
        <see cref="T:System.Xml.Linq.XDocument" />，包含指定之檔案的內容。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">從 <see cref="T:System.Xml.Linq.XDocument" /> 建立新的 <see cref="T:System.Xml.XmlReader" />。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />，包含 <see cref="T:System.Xml.Linq.XDocument" /> 的內容。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" />，包含指定的 <see cref="T:System.Xml.XmlReader" /> 內容。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, optionally setting the base URI, and retaining line information.">從 <see cref="T:System.Xml.Linq.XDocument" /> 載入 <see cref="T:System.Xml.XmlReader" />，選擇性地設定基底 URI，並保留行資訊。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />，將從中讀取 <see cref="T:System.Xml.Linq.XDocument" /> 的內容。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" />，指定是否要載入基底 URI 和行資訊。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" />，包含從指定之 <see cref="T:System.Xml.XmlReader" /> 讀取的 XML。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; and initializes its underlying XML tree from the specified stream, optionally preserving white space.">以非同步方式建立新的 <see cref="T:System.Xml.Linq.XDocument" />，並從指定的串流將其基礎 XML 樹狀結構初始化 (選擇性地保留空白字元)。</summary>
      <param name="stream" vsli:raw="A stream containing the raw XML to read into the newly created &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">包含要讀取至新建立 <see cref="T:System.Xml.Linq.XDocument" /> 之原始 XML 的串流。</param>
      <param name="options" vsli:raw="A set of load options.">一組載入選項。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">取消語彙基元。</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">新的 XDocument，其中包含指定 <see cref="T:System.IO.Stream" /> 的內容。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; and initializes its underlying XML tree using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; parameter, optionally preserving white space.">建立新的 <see cref="T:System.Xml.Linq.XDocument" />，並使用指定的 <see cref="T:System.IO.TextReader" /> 參數來將其基礎 XML 樹狀結構初始化 (選擇性地保留空白字元)。</summary>
      <param name="textReader" vsli:raw="A reader that contains the raw XML to read into the newly created &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">包含要讀取至新建立 <see cref="T:System.Xml.Linq.XDocument" /> 之原始 XML 的讀取器。</param>
      <param name="options" vsli:raw="A set of load options.">一組載入選項。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">取消語彙基元。</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">新的 XDocument，其中包含指定 <see cref="T:System.IO.TextReader" /> 的內容。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; containing the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">建立新的 <see cref="T:System.Xml.Linq.XDocument" />，其中包含指定 <see cref="T:System.Xml.XmlReader" /> 的內容。</summary>
      <param name="reader" vsli:raw="A reader containing the XML to be read into the new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">包含要讀取至新 <see cref="T:System.Xml.Linq.XDocument" /> 之 XML 的讀取器。</param>
      <param name="options" vsli:raw="A set of load options.">一組載入選項。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">取消語彙基元。</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">新的 XDocument，其中包含指定 <see cref="T:System.Xml.XmlReader" /> 的內容。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.NodeType">
      <summary vsli:raw="Gets the node type for this node.">取得此節點的節點類型。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Document&quot; /&gt;.">節點類型。 對於 <see cref="T:System.Xml.Linq.XDocument" /> 物件，此值為 <see cref="F:System.Xml.XmlNodeType.Document" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a string.">從字串建立新的 <see cref="T:System.Xml.Linq.XDocument" />。</summary>
      <param name="text" vsli:raw="A string that contains XML.">包含 XML 的字串。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; populated from the string that contains XML.">從包含 XML 的字串填入的 <see cref="T:System.Xml.Linq.XDocument" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a string, optionally preserving white space, setting the base URI, and retaining line information.">從字串建立新的 <see cref="T:System.Xml.Linq.XDocument" />，並選擇性地保留泛空白字元、設定基底 URI，以及保留行資訊。</summary>
      <param name="text" vsli:raw="A string that contains XML.">包含 XML 的字串。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" />，其指定泛空白字元 (White Space) 的行為，以及是否要載入基底 URI 和行資訊。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; populated from the string that contains XML.">從包含 XML 的字串填入的 <see cref="T:System.Xml.Linq.XDocument" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Root">
      <summary vsli:raw="Gets the root element of the XML Tree for this document.">取得此文件之 XML 樹狀的根項目 (Root Element)。</summary>
      <returns vsli:raw="The root &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the XML tree.">XML 樹狀結構的根 (Root) <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">將這個 <see cref="T:System.Xml.Linq.XDocument" /> 輸出到指定的 <see cref="T:System.IO.Stream" />。</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">這個 <see cref="T:System.Xml.Linq.XDocument" /> 輸出的目的資料流。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">將這個 <see cref="T:System.Xml.Linq.XDocument" /> 輸出至指定的 <see cref="T:System.IO.Stream" />，選擇性地指定格式化行為。</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">這個 <see cref="T:System.Xml.Linq.XDocument" /> 輸出的目的資料流。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">指定格式化行為的 <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XDocument" /> 序列化為 <see cref="T:System.IO.TextWriter" />。</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; will be written to.">向其中寫入 <see cref="T:System.IO.TextWriter" /> 的 <see cref="T:System.Xml.Linq.XDocument" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">將此 <see cref="T:System.Xml.Linq.XDocument" /> 序列化為 <see cref="T:System.IO.TextWriter" />，選擇性地停用格式設定。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">做為 XML 之輸出目標的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">指定格式化行為的 <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a file, overwriting an existing file, if it exists.">將此 <see cref="T:System.Xml.Linq.XDocument" /> 序列化至檔案，並覆寫現有的檔案 (如果存在)。</summary>
      <param name="fileName" vsli:raw="A string that contains the name of the file.">字串，包含檔案名稱。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a file, optionally disabling formatting.">將此 <see cref="T:System.Xml.Linq.XDocument" /> 序列化為檔案，選擇性地停用格式設定。</summary>
      <param name="fileName" vsli:raw="A string that contains the name of the file.">字串，包含檔案名稱。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">指定格式化行為的 <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XDocument" /> 序列化為 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; will be written to.">向其中寫入 <see cref="T:System.Xml.XmlWriter" /> 的 <see cref="T:System.Xml.Linq.XDocument" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">將這個 <see cref="T:System.Xml.Linq.XDocument" /> 輸出至 <see cref="T:System.IO.Stream" />。</summary>
      <param name="stream" vsli:raw="The stream to write the XML to.">要寫入 XML 的目標串流。</param>
      <param name="options" vsli:raw="A set of load options.">一組載入選項。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">取消語彙基元。</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">表示非同步儲存作業的工作。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">將這個 <see cref="T:System.Xml.Linq.XDocument" /> 寫入至 <see cref="T:System.IO.TextWriter" />。</summary>
      <param name="textWriter" vsli:raw="The text writer to output the XML to.">要輸出 XML 的目標文字寫入器。</param>
      <param name="options" vsli:raw="A set of load options.">一組載入選項。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">取消語彙基元。</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">表示非同步儲存作業的工作。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個 <see cref="T:System.Xml.Linq.XDocument" /> 寫入至 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="The writer to output the XML to.">要輸出 XML 的目標寫入器。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">取消語彙基元。</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">表示非同步儲存作業的工作。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this document to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將此文件寫入 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">此方法將寫入其中的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this XDocument's underlying XML tree to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個 XDocument 的基礎 XML 樹狀結構寫入至指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="The writer to output the content of this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">要輸出這個 <see cref="T:System.Xml.Linq.XDocument" /> 內容的寫入器。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">取消語彙基元。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">代表非同步寫入作業的工作。</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocumentType">
      <summary vsli:raw="Represents an XML Document Type Definition (DTD).">代表 XML 文件類型定義 (DTD)。</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Linq.XDocumentType" /> 類別的執行個體。</summary>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.">
        <see cref="T:System.String" />，其中包含 DTD 的限定名稱 (Qualified Name)，此名稱與 XML 文件之根項目的限定名稱相同。</param>
      <param name="publicId" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the public identifier of an external public DTD.">
        <see cref="T:System.String" />，包含外部公用 DTD 的公用識別項。</param>
      <param name="systemId" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the system identifier of an external private DTD.">
        <see cref="T:System.String" />，包含外部私用 DTD 的系統識別項 (System Identifier)。</param>
      <param name="internalSubset" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the internal subset for an internal DTD.">
        <see cref="T:System.String" />，包含內部 DTD 的內部子集。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; object.">從其他 <see cref="T:System.Xml.Linq.XDocumentType" /> 物件初始化 <see cref="T:System.Xml.Linq.XDocumentType" /> 類別的執行個體。</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; object to copy from.">要從中複製的 <see cref="T:System.Xml.Linq.XDocumentType" /> 物件。</param>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.InternalSubset">
      <summary vsli:raw="Gets or sets the internal subset for this Document Type Definition (DTD).">取得或設定這個文件類型定義 (DTD) 的內部子集。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the internal subset for this Document Type Definition (DTD).">
        <see cref="T:System.String" />，包含這個文件類型定義 (DTD) 的內部子集。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.Name">
      <summary vsli:raw="Gets or sets the name for this Document Type Definition (DTD).">取得或設定這個文件類型定義 (DTD) 的名稱。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name for this Document Type Definition (DTD).">
        <see cref="T:System.String" />，包含這個文件類型定義 (DTD) 的名稱。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.NodeType">
      <summary vsli:raw="Gets the node type for this node.">取得此節點的節點類型。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.DocumentType&quot; /&gt;.">節點類型。 對於 <see cref="T:System.Xml.Linq.XDocumentType" /> 物件，此值為 <see cref="F:System.Xml.XmlNodeType.DocumentType" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.PublicId">
      <summary vsli:raw="Gets or sets the public identifier for this Document Type Definition (DTD).">取得或設定這個文件類型定義 (DTD) 的公用識別項。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the public identifier for this Document Type Definition (DTD).">
        <see cref="T:System.String" />，包含這個文件類型定義 (DTD) 的公用識別項。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.SystemId">
      <summary vsli:raw="Gets or sets the system identifier for this Document Type Definition (DTD).">取得或設定這個文件類型定義 (DTD) 的系統識別項。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the system identifier for this Document Type Definition (DTD).">
        <see cref="T:System.String" />，包含這個文件類型定義 (DTD) 的系統識別項。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個 <see cref="T:System.Xml.Linq.XDocumentType" /> 寫入 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">此方法將寫入其中的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個 <see cref="T:System.Xml.Linq.XDocumentType" /> 寫入指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to.">要寫入這個 <see cref="T:System.Xml.Linq.XDocumentType" /> 的寫入器。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">代表非同步寫入作業的工作。</returns>
    </member>
    <member name="T:System.Xml.Linq.XElement">
      <summary vsli:raw="Represents an XML element.  See XElement Class Overview and the Remarks section on this page for usage information and examples.">表示 XML 項目。  如需用法資訊和範例，請參閱 XElement 類別概觀及本頁面上的＜備註＞一節。</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object.">從另一個 <see cref="T:System.Xml.Linq.XElement" /> 物件，初始化 <see cref="T:System.Xml.Linq.XElement" /> 類別的新執行個體。</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object to copy from.">要從中複製的 <see cref="T:System.Xml.Linq.XElement" /> 物件。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name.">使用指定的名稱，初始化 <see cref="T:System.Xml.Linq.XElement" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the element.">包含項目名稱的 <see cref="T:System.Xml.Linq.XName" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name and content.">使用指定的名稱和內容初始化 <see cref="T:System.Xml.Linq.XElement" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">包含項目名稱的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="content" vsli:raw="The contents of the element.">項目的內容。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name and content.">使用指定的名稱和內容初始化 <see cref="T:System.Xml.Linq.XElement" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">包含項目名稱的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="content" vsli:raw="The initial content of the element.">項目的初始內容。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from an &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; object.">從 <see cref="T:System.Xml.Linq.XElement" /> 物件初始化 <see cref="T:System.Xml.Linq.XStreamingElement" /> 類別的新執行個體。</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; that contains unevaluated queries that will be iterated for the contents of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XStreamingElement" />，包含要對於這個 <see cref="T:System.Xml.Linq.XElement" /> 之內容逐一查看的未評估查詢。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf">
      <summary vsli:raw="Returns a collection of elements that contain this element, and the ancestors of this element.">傳回包含這個元素的元素集合，以及這個元素的上階。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of elements that contain this element, and the ancestors of this element.">項目之 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，包含這個項目及這個項目的祖系。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contain this element, and the ancestors of this element. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">傳回包含這個項目的已篩選項目集合，以及這個項目的祖系。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contain this element, and the ancestors of this element. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，包含這個項目及這個項目的祖系。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that has the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">傳回這個 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.Xml.Linq.XElement" />，其具有指定的 <see cref="T:System.Xml.Linq.XName" />。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to get.">要取得之 <see cref="T:System.Xml.Linq.XName" /> 的 <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that has the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no attribute with the specified name.">具有指定之 <see cref="T:System.Xml.Linq.XAttribute" /> 的 <see cref="T:System.Xml.Linq.XName" />，如果沒有具有指定名稱的屬性，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes">
      <summary vsli:raw="Returns a collection of attributes of this element.">傳回這個元素的屬性集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; of attributes of this element.">這個項目之屬性的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of attributes of this element. Only attributes that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">傳回這個項目的已篩選屬性集合。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the attributes of this element. Only attributes that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XAttribute" />，包含這個項目的屬性。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
      <summary vsli:raw="Returns a collection of nodes that contain this element, and all descendant nodes of this element, in document order.">依照文件順序，傳回包含這個項目的節點集合，以及這個項目的所有子代節點。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contain this element, and all descendant nodes of this element, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XNode" />，依照文件順序包含這個項目及這個項目的所有子代節點。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf">
      <summary vsli:raw="Returns a collection of elements that contain this element, and all descendant elements of this element, in document order.">依照文件順序，傳回包含這個項目的項目集合，以及這個項目的子代項目。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of elements that contain this element, and all descendant elements of this element, in document order.">項目之 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，依照文件順序包含這個項目及這個項目的所有子代項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">依照文件順序，傳回包含這個項目的已篩選項目集合，以及這個項目的所有子代項目。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，依照文件順序包含這個項目及這個項目的所有子代項目。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.EmptySequence">
      <summary vsli:raw="Gets an empty collection of elements.">取得空的項目集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains an empty collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Xml.Linq.XElement" />，包含空的集合。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.FirstAttribute">
      <summary vsli:raw="Gets the first attribute of this element.">取得這個項目的第一個屬性。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the first attribute of this element.">
        <see cref="T:System.Xml.Linq.XAttribute" />，包含這個項目的第一個屬性。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetDefaultNamespace">
      <summary vsli:raw="Gets the default &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">取得這個 <see cref="T:System.Xml.Linq.XNamespace" /> 的預設 <see cref="T:System.Xml.Linq.XElement" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the default namespace of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNamespace" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的預設命名空間。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
      <summary vsli:raw="Gets the namespace associated with a particular prefix for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">取得與這個 <see cref="T:System.Xml.Linq.XElement" /> 之特定前置詞相關聯的命名空間。</summary>
      <param name="prefix" vsli:raw="A string that contains the namespace prefix to look up.">包含要查閱之命名空間前置詞的字串。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for the namespace associated with the prefix for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">命名空間的 <see cref="T:System.Xml.Linq.XNamespace" />，該命名空間與這個 <see cref="T:System.Xml.Linq.XElement" /> 的前置詞相關聯。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Gets the prefix associated with a namespace for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">取得與這個 <see cref="T:System.Xml.Linq.XElement" /> 之命名空間相關聯的前置詞。</summary>
      <param name="ns" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to look up.">要查閱的 <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix.">包含命名空間前置詞的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasAttributes">
      <summary vsli:raw="Gets a value indicating whether this element has at least one attribute.">取得值，指出這個項目是否至少有一個屬性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element has at least one attribute; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果這個項目至少有一個屬性，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasElements">
      <summary vsli:raw="Gets a value indicating whether this element has at least one child element.">取得值，指出這個項目是否至少有一個子項目。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element has at least one child element; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果這個項目至少有一個子項目則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether this element contains no content.">取得值，指出這個項目是否不包含內容。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element contains no content; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果這個項目不包含內容則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.LastAttribute">
      <summary vsli:raw="Gets the last attribute of this element.">取得這個項目的最後一個屬性。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the last attribute of this element.">
        <see cref="T:System.Xml.Linq.XAttribute" />，包含這個項目的最後一個屬性。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; instance by using the specified stream.">使用指定的資料流，建立新的 <see cref="T:System.Xml.Linq.XElement" /> 執行個體。</summary>
      <param name="stream" vsli:raw="The stream that contains the XML data.">包含 XML 資料的資料流。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object used to read the data that is contained in the stream.">
        <see cref="T:System.Xml.Linq.XElement" /> 物件，用於讀取資料流中包含的資料。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.">使用指定的資料流建立新的 <see cref="T:System.Xml.Linq.XElement" /> 執行個體，並選擇性地保留空白字元、設定基底 URI，以及保留行資訊。</summary>
      <param name="stream" vsli:raw="The stream containing the XML data.">包含 XML 資料的資料流。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; object that specifies whether to load base URI and line information.">指定是否要載入基底 URI 和行資訊的 <see cref="T:System.Xml.Linq.LoadOptions" /> 物件。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object used to read the data that the stream contains.">
        <see cref="T:System.Xml.Linq.XElement" /> 物件，用於建立資料流包含的資料。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">從 <see cref="T:System.Xml.Linq.XElement" /> 載入 <see cref="T:System.IO.TextReader" />。</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be read for the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; content.">
        <see cref="T:System.IO.TextReader" />，將從中讀取 <see cref="T:System.Xml.Linq.XElement" /> 內容。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，包含從指定之 <see cref="T:System.IO.TextReader" /> 讀取的 XML。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, optionally preserving white space and retaining line information.">從 <see cref="T:System.Xml.Linq.XElement" /> 載入 <see cref="T:System.IO.TextReader" />，並選擇性地保留泛空白字元和行資訊。</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be read for the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; content.">
        <see cref="T:System.IO.TextReader" />，將從中讀取 <see cref="T:System.Xml.Linq.XElement" /> 內容。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" />，其指定泛空白字元 (White Space) 的行為，以及是否要載入基底 URI 和行資訊。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，包含從指定之 <see cref="T:System.IO.TextReader" /> 讀取的 XML。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a file.">從檔案載入 <see cref="T:System.Xml.Linq.XElement" />。</summary>
      <param name="uri" vsli:raw="A URI string referencing the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">URI 字串，參照要載入到新 <see cref="T:System.Xml.Linq.XElement" /> 的檔案。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the contents of the specified file.">
        <see cref="T:System.Xml.Linq.XElement" />，包含指定之檔案的內容。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a file, optionally preserving white space, setting the base URI, and retaining line information.">從檔案載入 <see cref="T:System.Xml.Linq.XElement" />，並選擇性地保留泛空白字元、設定基底 URI，以及保留行資訊。</summary>
      <param name="uri" vsli:raw="A URI string referencing the file to load into an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">URI 字串，參照要載入到 <see cref="T:System.Xml.Linq.XElement" /> 的檔案。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" />，其指定泛空白字元 (White Space) 的行為，以及是否要載入基底 URI 和行資訊。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the contents of the specified file.">
        <see cref="T:System.Xml.Linq.XElement" />，包含指定之檔案的內容。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">從 <see cref="T:System.Xml.Linq.XElement" /> 載入 <see cref="T:System.Xml.XmlReader" />。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />，將從中讀取 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，包含從指定之 <see cref="T:System.Xml.XmlReader" /> 讀取的 XML。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, optionally preserving white space, setting the base URI, and retaining line information.">從 <see cref="T:System.Xml.Linq.XElement" /> 載入 <see cref="T:System.Xml.XmlReader" />，並選擇性地保留泛空白字元、設定基底 URI，以及保留行資訊。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />，將從中讀取 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" />，其指定泛空白字元 (White Space) 的行為，以及是否要載入基底 URI 和行資訊。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，包含從指定之 <see cref="T:System.Xml.XmlReader" /> 讀取的 XML。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified stream, optionally preserving white space.">以非同步方式建立新的 <see cref="T:System.Xml.Linq.XElement" />，並使用指定的串流來將其基礎 XML 樹狀結構初始化 (選擇性地保留空白字元)。</summary>
      <param name="stream" vsli:raw="The stream containing the raw XML to read.">包含要讀取之原始 XML 的串流。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">列舉值的位元組合，這些值會指定用於剖析 XML 的載入選項。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified stream.">新的 <see cref="T:System.Xml.Linq.XElement" />，其中包含指定串流的內容。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified text reader, optionally preserving white space.">以非同步方式建立新的 <see cref="T:System.Xml.Linq.XElement" />，並使用指定的文字讀取器來將其基礎 XML 樹狀結構初始化 (選擇性地保留空白字元)。</summary>
      <param name="textReader" vsli:raw="A reader containing the raw XML to read.">包含要讀取之原始 XML 的讀取器。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">列舉值的位元組合，這些值會指定用於剖析 XML 的載入選項。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified reader.">新的 <see cref="T:System.Xml.Linq.XElement" />，其中包含指定讀取器的內容。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified XML reader, optionally preserving white space.">以非同步方式建立新的 <see cref="T:System.Xml.Linq.XElement" />，並使用指定的 XML 讀取器來將其基礎 XML 樹狀結構初始化 (選擇性地保留空白字元)。</summary>
      <param name="reader" vsli:raw="A reader containing the XML to be read.">包含要讀取之 XML 的讀取器。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">列舉值的位元組合，這些值會指定用於剖析 XML 的載入選項。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified reader.">新的 <see cref="T:System.Xml.Linq.XElement" />，其中包含指定讀取器的內容。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.Name">
      <summary vsli:raw="Gets or sets the name of this element.">取得或設定這個元素的名稱。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of this element.">包含這個項目之名稱的 <see cref="T:System.Xml.Linq.XName" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.NodeType">
      <summary vsli:raw="Gets the node type for this node.">取得此節點的節點類型。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Element&quot; /&gt;.">節點類型。 對於 <see cref="T:System.Xml.Linq.XElement" /> 物件，此值為 <see cref="F:System.Xml.XmlNodeType.Element" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Boolean" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.Boolean" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Boolean" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">項目不包含有效的 <see cref="T:System.Boolean" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.DateTime" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.DateTime" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">項目不包含有效的 <see cref="T:System.DateTime" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XAttribute" /> 的值轉型為 <see cref="T:System.DateTimeOffset" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.DateTimeOffset" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.DateTimeOffset" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">項目不包含有效的 <see cref="T:System.DateTimeOffset" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Decimal" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.Decimal" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Decimal" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">項目不包含有效的 <see cref="T:System.Decimal" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Double" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Double&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.Double" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Double" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">項目不包含有效的 <see cref="T:System.Double" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Guid" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.Guid" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Guid" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">項目不包含有效的 <see cref="T:System.Guid" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Int32" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.Int32" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Int32" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">項目不包含有效的 <see cref="T:System.Int32" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Int64" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.Int64" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Int64" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">項目不包含有效的 <see cref="T:System.Int64" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Boolean" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Boolean" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Boolean" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">元素不是 <see langword="null" /> 且不包含有效的 <see cref="T:System.Boolean" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.DateTime" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.DateTime" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">元素不是 <see langword="null" /> 且不包含有效的 <see cref="T:System.DateTime" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.DateTimeOffset" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to an &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.DateTimeOffset" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.DateTimeOffset" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">元素不是 <see langword="null" /> 且不包含有效的 <see cref="T:System.DateTimeOffset" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Decimal" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Decimal" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Decimal" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">元素不是 <see langword="null" /> 且不包含有效的 <see cref="T:System.Decimal" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Double" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Double" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Double" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">元素不是 <see langword="null" /> 且不包含有效的 <see cref="T:System.Double" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Guid" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Guid" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Guid" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">元素不是 <see langword="null" /> 且不包含有效的 <see cref="T:System.Guid" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Int32" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Int32" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Int32" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">元素不是 <see langword="null" /> 且不包含有效的 <see cref="T:System.Int32" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Int64" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Int64" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Int64" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">元素不是 <see langword="null" /> 且不包含有效的 <see cref="T:System.Int64" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Single" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Single" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Single" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">元素不是 <see langword="null" /> 且不包含有效的 <see cref="T:System.Single" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.TimeSpan" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.TimeSpan" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.TimeSpan" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">元素不是 <see langword="null" /> 且不包含有效的 <see cref="T:System.TimeSpan" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.UInt32" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.UInt32" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.UInt32" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">元素不是 <see langword="null" /> 且不包含有效的 <see cref="T:System.UInt32" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.UInt64" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />，要轉型為 <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.UInt64" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.UInt64" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">元素不是 <see langword="null" /> 且不包含有效的 <see cref="T:System.UInt64" /> 值。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.Single" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Single&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.Single" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Single" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">項目不包含有效的 <see cref="T:System.Single" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.String" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.String&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.String" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.TimeSpan" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.TimeSpan" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.TimeSpan" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">項目不包含有效的 <see cref="T:System.TimeSpan" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.UInt32" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.UInt32" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.UInt32" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">項目不包含有效的 <see cref="T:System.UInt32" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">將此 <see cref="T:System.Xml.Linq.XElement" /> 的值轉型為 <see cref="T:System.UInt64" />。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">要轉型為 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.UInt64" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.UInt64" />，包含這個 <see cref="T:System.Xml.Linq.XElement" /> 的內容。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">項目不包含有效的 <see cref="T:System.UInt64" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String)">
      <summary vsli:raw="Load an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a string that contains XML.">從包含 XML 的字串載入 <see cref="T:System.Xml.Linq.XElement" />。</summary>
      <param name="text" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains XML.">
        <see cref="T:System.String" />，包含 XML。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; populated from the string that contains XML.">從包含 XML 的字串填入的 <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Load an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a string that contains XML, optionally preserving white space and retaining line information.">從包含 XML 的字串載入 <see cref="T:System.Xml.Linq.XElement" />，並選擇性地保留泛空白字元和程式行資訊。</summary>
      <param name="text" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains XML.">
        <see cref="T:System.String" />，包含 XML。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" />，其指定泛空白字元 (White Space) 的行為，以及是否要載入基底 URI 和行資訊。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; populated from the string that contains XML.">從包含 XML 的字串填入的 <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAll">
      <summary vsli:raw="Removes nodes and attributes from this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">從這個 <see cref="T:System.Xml.Linq.XElement" /> 移除節點及屬性。</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAttributes">
      <summary vsli:raw="Removes the attributes of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">移除這個 <see cref="T:System.Xml.Linq.XElement" /> 的屬性。</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
      <summary vsli:raw="Replaces the child nodes and the attributes of this element with the specified content.">以指定的內容取代這個元素的子節點和屬性。</summary>
      <param name="content" vsli:raw="The content that will replace the child nodes and attributes of this element.">將取代這個項目之子節點及屬性的內容。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
      <summary vsli:raw="Replaces the child nodes and the attributes of this element with the specified content.">以指定的內容取代這個元素的子節點和屬性。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">內容物件的參數清單。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
      <summary vsli:raw="Replaces the attributes of this element with the specified content.">以指定的內容取代這個元素的屬性。</summary>
      <param name="content" vsli:raw="The content that will replace the attributes of this element.">將取代這個項目之屬性的內容。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
      <summary vsli:raw="Replaces the attributes of this element with the specified content.">以指定的內容取代這個元素的屬性。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">內容物件的參數清單。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">將這個 <see cref="T:System.Xml.Linq.XElement" /> 輸出到指定的 <see cref="T:System.IO.Stream" />。</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">這個 <see cref="T:System.Xml.Linq.XElement" /> 輸出的目的資料流。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">將這個 <see cref="T:System.Xml.Linq.XElement" /> 輸出至指定的 <see cref="T:System.IO.Stream" />，選擇性地指定格式化行為。</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">這個 <see cref="T:System.Xml.Linq.XElement" /> 輸出的目的資料流。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">指定格式化行為的 <see cref="T:System.Xml.Linq.SaveOptions" /> 物件。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">將這個項目序列化成 <see cref="T:System.IO.TextWriter" />。</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">向其中寫入 <see cref="T:System.IO.TextWriter" /> 的 <see cref="T:System.Xml.Linq.XElement" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">將這個項目序列化成 <see cref="T:System.IO.TextWriter" /> (可選擇是否停用格式設定)。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">做為 XML 之輸出目標的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">指定格式化行為的 <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String)">
      <summary vsli:raw="Serialize this element to a file.">將這個元素序列化成檔案。</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">包含檔案名稱的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this element to a file, optionally disabling formatting.">將這個元素序列化成檔案 (可選擇是否停用格式設定)。</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">包含檔案名稱的 <see cref="T:System.String" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">指定格式化行為的 <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個項目序列化成 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">向其中寫入 <see cref="T:System.Xml.XmlWriter" /> 的 <see cref="T:System.Xml.Linq.XElement" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">以非同步方式將這個 <see cref="T:System.Xml.Linq.XElement" /> 輸出至 <see cref="T:System.IO.Stream" />。</summary>
      <param name="stream" vsli:raw="The stream to output the XML to.">輸出 XML 的目標串流。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the serialization options.">列舉值的位元組合，這些值會指定序列化選項。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">表示非同步儲存作業的工作。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">以非同步方式將這個 <see cref="T:System.Xml.Linq.XElement" /> 輸出至 <see cref="T:System.IO.TextWriter" />。</summary>
      <param name="textWriter" vsli:raw="The writer to output the XML to.">要輸出 XML 的目標寫入器。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the serialization options.">列舉值的位元組合，這些值會指定序列化選項。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">表示非同步儲存作業的工作。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">以非同步方式將這個 <see cref="T:System.Xml.Linq.XElement" /> 輸出至 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="The writer to output the XML to.">要輸出 XML 的目標寫入器。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">表示非同步儲存作業的工作。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Sets the value of an attribute, adds an attribute, or removes an attribute.">設定屬性的值、加入屬性或移除屬性。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the attribute to change.">
        <see cref="T:System.Xml.Linq.XName" />，包含要變更之屬性的名稱。</param>
      <param name="value" vsli:raw="The value to assign to the attribute. The attribute is removed if the value is &lt;see langword=&quot;null&quot; /&gt;. Otherwise, the value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XAttribute.Value&quot; /&gt; property of the attribute.">要指派給屬性的值。 如果值為 <see langword="null" />，則會移除屬性。 否則，值會轉換為其字串表示並指派給屬性 (Attribute) 的 <see cref="P:System.Xml.Linq.XAttribute.Value" /> 屬性 (Property)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" /> 是 <see cref="T:System.Xml.Linq.XObject" /> 的執行個體。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Sets the value of a child element, adds a child element, or removes a child element.">設定子元素的值、加入子元素或移除子元素。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the child element to change.">
        <see cref="T:System.Xml.Linq.XName" />，包含要變更之子項目的名稱。</param>
      <param name="value" vsli:raw="The value to assign to the child element. The child element is removed if the value is &lt;see langword=&quot;null&quot; /&gt;. Otherwise, the value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XElement.Value&quot; /&gt; property of the child element.">要指派給子項目的值。 如果值為 <see langword="null" />，會移除子項目。 否則，值會轉換為其字串表示並指派給子項目的 <see cref="P:System.Xml.Linq.XElement.Value" /> 屬性。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" /> 是 <see cref="T:System.Xml.Linq.XObject" /> 的執行個體。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetValue(System.Object)">
      <summary vsli:raw="Sets the value of this element.">設定這個元素的值。</summary>
      <param name="value" vsli:raw="The value to assign to this element. The value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XElement.Value&quot; /&gt; property.">要指派給這個元素的值。 此值會轉換為其字串表示並指派給 <see cref="P:System.Xml.Linq.XElement.Value" /> 屬性。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" /> 是 <see cref="T:System.Xml.Linq.XObject" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="Gets an XML schema definition that describes the XML representation of this object.">取得 XML 結構描述定義，描述這個物件的 XML 表示。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" />，描述物件的 XML 表示，該物件由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法產生，由 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> 方法取用。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Generates an object from its XML representation.">從物件的 XML 表示產生該物件。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which the object is deserialized.">物件從其中還原序列化的 <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Converts an object into its XML representation.">將物件轉換成其 XML 表示。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which this object is serialized.">要序列化此物件至的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="P:System.Xml.Linq.XElement.Value">
      <summary vsli:raw="Gets or sets the concatenated text contents of this element.">取得或設定這個元素的串連文字內容。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains all of the text content of this element. If there are multiple text nodes, they will be concatenated.">
        <see cref="T:System.String" />，包含這個項目的所有文字內容。 如果有多個文字節點，將會串連它們。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個項目寫入至 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">此方法將寫入其中的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified writer.">以非同步方式將這個 <see cref="T:System.Xml.Linq.XElement" /> 寫入至指定的寫入器。</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">要寫入這個 <see cref="T:System.Xml.Linq.XElement" /> 的寫入器。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">代表非同步寫入作業的工作。</returns>
    </member>
    <member name="T:System.Xml.Linq.XName">
      <summary vsli:raw="Represents a name of an XML element or attribute.">表示 XML 項目或屬性的名稱。</summary>
    </member>
    <member name="M:System.Xml.Linq.XName.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">判斷指定的 <see cref="T:System.Xml.Linq.XName" /> 與這個 <see cref="T:System.Xml.Linq.XName" /> 是否相等。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">要與目前 <see cref="T:System.Xml.Linq.XName" /> 比較的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Xml.Linq.XName" /> 和目前的 <see cref="T:System.Xml.Linq.XName" /> 相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object from an expanded name.">從擴充名稱取得 <see cref="T:System.Xml.Linq.XName" /> 物件。</summary>
      <param name="expandedName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains an expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <see cref="T:System.String" />，其中包含擴充的 XML 名稱 (格式為 <c>{namespace}localname</c>)。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object constructed from the expanded name.">從擴充名稱建構的 <see cref="T:System.Xml.Linq.XName" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String,System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object from a local name and a namespace.">從區域名稱和命名空間取得 <see cref="T:System.Xml.Linq.XName" /> 物件。</summary>
      <param name="localName" vsli:raw="A local (unqualified) name.">區域 (未限定) 名稱。</param>
      <param name="namespaceName" vsli:raw="An XML namespace.">XML 命名空間。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object created from the specified local name and namespace.">從指定的區域名稱和命名空間建立的 <see cref="T:System.Xml.Linq.XName" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">取得這個 <see cref="T:System.Xml.Linq.XName" /> 的雜湊程式碼。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the hash code for the &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Int32" />，其中包含 <see cref="T:System.Xml.Linq.XName" /> 的雜湊程式碼。</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.LocalName">
      <summary vsli:raw="Gets the local (unqualified) part of the name.">取得名稱的區域 (未限定) 部分。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local (unqualified) part of the name.">
        <see cref="T:System.String" />，包含名稱的區域 (未限定) 部分。</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.Namespace">
      <summary vsli:raw="Gets the namespace part of the fully qualified name.">取得完整限定名稱的命名空間部分。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the namespace part of the name.">
        <see cref="T:System.Xml.Linq.XNamespace" />，包含名稱的命名空間部分。</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.NamespaceName">
      <summary vsli:raw="Returns the URI of the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">針對這個 <see cref="T:System.Xml.Linq.XNamespace" /> 傳回 <see cref="T:System.Xml.Linq.XName" /> 的 URI。</summary>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">這個 <see cref="T:System.Xml.Linq.XNamespace" /> 之 <see cref="T:System.Xml.Linq.XName" /> 的 URI。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are equal.">傳回數值，指出 <see cref="T:System.Xml.Linq.XName" /> 的兩個執行個體是否相等。</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">要比較的第一個 <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName">
      <summary vsli:raw="Converts a string formatted as an expanded XML name (that is,&lt;c&gt;{namespace}localname&lt;/c&gt;) to an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object.">將格式化為擴充的 XML 名稱 (即 <c>{namespace}localname</c>) 的字串轉換為 <see cref="T:System.Xml.Linq.XName" /> 物件。</summary>
      <param name="expandedName" vsli:raw="A string that contains an expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">包含擴充之 XML 名稱的字串，其格式為 <c>{namespace}localname</c>。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object constructed from the expanded name.">從擴充名稱建構的 <see cref="T:System.Xml.Linq.XName" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are not equal.">傳回值，這個值指出 <see cref="T:System.Xml.Linq.XName" /> 的兩個執行個體是否不相等。</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">要比較的第一個 <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#IEquatable{System#Xml#Linq#XName}#Equals(System.Xml.Linq.XName)">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">指示目前的 <see cref="T:System.Xml.Linq.XName" /> 和指定的 <see cref="T:System.Xml.Linq.XName" /> 是否相等。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare with this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">要和這個 <see cref="T:System.Xml.Linq.XName" /> 比較的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果這個 <see cref="T:System.Xml.Linq.XName" /> 與指定的 <see cref="T:System.Xml.Linq.XName" /> 相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data required to serialize the target object.">將序列化目標物件的所需資料填入 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">要以資料填入的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">這個序列化的目的端 (請參閱 <see cref="T:System.Runtime.Serialization.StreamingContext" />)。</param>
    </member>
    <member name="M:System.Xml.Linq.XName.ToString">
      <summary vsli:raw="Returns the expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">傳回擴充的 XML 名稱 (格式為 <c>{namespace}localname</c>)。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <see cref="T:System.String" />，其中包含擴充的 XML 名稱 (格式為 <c>{namespace}localname</c>)。</returns>
    </member>
    <member name="T:System.Xml.Linq.XNamespace">
      <summary vsli:raw="Represents an XML namespace. This class cannot be inherited.">表示 XML 命名空間 (Namespace)。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">判斷指定的 <see cref="T:System.Xml.Linq.XNamespace" /> 是否等於目前的 <see cref="T:System.Xml.Linq.XNamespace" />。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">要與目前 <see cref="T:System.Xml.Linq.XNamespace" /> 比較的 <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">
        <see cref="T:System.Boolean" />，指示指定的 <see cref="T:System.Xml.Linq.XNamespace" /> 是否與目前的 <see cref="T:System.Xml.Linq.XNamespace" /> 相等。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Get(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for the specified Uniform Resource Identifier (URI).">取得指定之統一資源識別元 (URI) 的 <see cref="T:System.Xml.Linq.XNamespace" />。</summary>
      <param name="namespaceName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a namespace URI.">包含命名空間 URI 的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; created from the specified URI.">從指定的 URI 建立的 <see cref="T:System.Xml.Linq.XNamespace" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">取得這個 <see cref="T:System.Xml.Linq.XNamespace" /> 的雜湊程式碼。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the hash code for the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">
        <see cref="T:System.Int32" />，其中包含 <see cref="T:System.Xml.Linq.XNamespace" /> 的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object created from this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; and the specified local name.">傳回從這個 <see cref="T:System.Xml.Linq.XName" /> 建立的 <see cref="T:System.Xml.Linq.XNamespace" /> 物件，以及指定的區域名稱。</summary>
      <param name="localName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a local name.">包含區域名稱的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; created from this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; and the specified local name.">
        <see cref="T:System.Xml.Linq.XName" />，它是透過這個 <see cref="T:System.Xml.Linq.XNamespace" /> 與指定的區域名稱建立的。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.NamespaceName">
      <summary vsli:raw="Gets the Uniform Resource Identifier (URI) of this namespace.">取得這個命名空間的統一資源識別元 (URI)。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the URI of the namespace.">
        <see cref="T:System.String" />，其中包含命名空間的 URI。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.None">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to no namespace.">取得與無命名空間相對應的 <see cref="T:System.Xml.Linq.XNamespace" /> 物件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to no namespace.">與無命名空間相對應的 <see cref="T:System.Xml.Linq.XNamespace" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
      <summary vsli:raw="Combines an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object with a local name to create an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">將 <see cref="T:System.Xml.Linq.XNamespace" /> 物件與區域名稱結合在一起以建立 <see cref="T:System.Xml.Linq.XName" />。</summary>
      <param name="ns" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the namespace.">包含命名空間的 <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <param name="localName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local name.">包含區域名稱的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; constructed from the namespace and local name.">透過命名空間與區域名稱建構的 <see cref="T:System.Xml.Linq.XName" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; are equal.">傳回數值，指出 <see cref="T:System.Xml.Linq.XNamespace" /> 的兩個執行個體是否相等。</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">要比較的第一個 <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal.">
        <see cref="T:System.Boolean" />，指示 <paramref name="left" /> 與 <paramref name="right" /> 是否相等。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
      <summary vsli:raw="Converts a string containing a Uniform Resource Identifier (URI) to an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">將包含統一資源識別元 (URI) 的字串轉換為 <see cref="T:System.Xml.Linq.XNamespace" />。</summary>
      <param name="namespaceName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace URI.">包含命名空間 URI 的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; constructed from the URI string.">從 URI 字串建構的 <see cref="T:System.Xml.Linq.XNamespace" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; are not equal.">傳回值，這個值指出 <see cref="T:System.Xml.Linq.XNamespace" /> 的兩個執行個體是否不相等。</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">要比較的第一個 <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal.">
        <see cref="T:System.Boolean" />，指示 <paramref name="left" /> 和 <paramref name="right" /> 是否相等。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.ToString">
      <summary vsli:raw="Returns the URI of this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">傳回這個 <see cref="T:System.Xml.Linq.XNamespace" /> 的 URI。</summary>
      <returns vsli:raw="The URI of this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">這個 <see cref="T:System.Xml.Linq.XNamespace" /> 的 URI。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xml">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to the XML URI (&lt;c&gt;http://www.w3.org/XML/1998/namespace&lt;/c&gt;).">取得與 XML URI (<c>http://www.w3.org/XML/1998/namespace</c>) 相對應的 <see cref="T:System.Xml.Linq.XNamespace" /> 物件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to the XML URI (&lt;c&gt;http://www.w3.org/XML/1998/namespace&lt;/c&gt;).">對應<see cref="T:System.Xml.Linq.XNamespace" />至 XML URI 的（<c>http://www.w3.org/XML/1998/namespace</c>）。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xmlns">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to the xmlns URI (&lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;).">取得與 xmlns URI (<c>http://www.w3.org/2000/xmlns/</c>) (英文) 相對應的 <see cref="T:System.Xml.Linq.XNamespace" /> 物件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to the xmlns URI (&lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;).">對應<see cref="T:System.Xml.Linq.XNamespace" />至xmlns URI 的（<c>http://www.w3.org/2000/xmlns/</c>）。</returns>
    </member>
    <member name="T:System.Xml.Linq.XNode">
      <summary vsli:raw="Represents the abstract concept of a node (element, comment, document type, processing instruction, or text node) in the XML tree.">表示 XML 樹狀中節點 (元素、註解、文件類型、處理指示或文字節點) 的抽象概念。</summary>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)">
      <summary vsli:raw="Adds the specified content immediately after this node.">將指定的內容加入緊接在此節點後面的位置。</summary>
      <param name="content" vsli:raw="A content object that contains simple content or a collection of content objects to be added after this node.">要在這個節點之後加入的包含簡單內容或內容物件集合的內容物件。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">該父代為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])">
      <summary vsli:raw="Adds the specified content immediately after this node.">將指定的內容加入緊接在此節點後面的位置。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">內容物件的參數清單。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">該父代為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)">
      <summary vsli:raw="Adds the specified content immediately before this node.">將指定的內容加入緊接在此節點前面的位置。</summary>
      <param name="content" vsli:raw="A content object that contains simple content or a collection of content objects to be added before this node.">要在這個節點之前加入之包含簡單內容或內容物件集合的內容物件。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">該父代為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])">
      <summary vsli:raw="Adds the specified content immediately before this node.">將指定的內容加入緊接在此節點前面的位置。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">內容物件的參數清單。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">該父代為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors">
      <summary vsli:raw="Returns a collection of the ancestor elements of this node.">傳回這個節點之祖系項目的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the ancestor elements of this node.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，屬於這個節點之祖系項目的 <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the ancestor elements of this node. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">傳回這個節點的祖系項目之篩選的集合。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the ancestor elements of this node. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.  &#xA;  &#xA; The nodes in the returned collection are in reverse document order.  &#xA;  &#xA; This method uses deferred execution.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，屬於這個節點之祖系項目的 <see cref="T:System.Xml.Linq.XElement" />。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。
所傳回集合中之節點的順序為反向文件順序。
這個方法會使用延後的執行。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares two nodes to determine their relative XML document order.">比較兩個節點，以確定其相對的 XML 文件順序。</summary>
      <param name="n1" vsli:raw="First &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">要比較的第一個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="n2" vsli:raw="Second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="An &lt;see langword=&quot;int&quot; /&gt; containing 0 if the nodes are equal; -1 if &lt;paramref name=&quot;n1&quot; /&gt; is before &lt;paramref name=&quot;n2&quot; /&gt;; 1 if &lt;paramref name=&quot;n1&quot; /&gt; is after &lt;paramref name=&quot;n2&quot; /&gt;.">
        <see langword="int" /> 包含 0 表示這兩個節點相等，包含 -1 表示 <paramref name="n1" /> 在 <paramref name="n2" /> 之前，包含 1 則表示 <paramref name="n1" /> 在 <paramref name="n2" /> 之後。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">這兩個節點不會共用共同的祖系。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this node.">建立這個節點的 <see cref="T:System.Xml.XmlReader" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that can be used to read this node and its descendants.">
        <see cref="T:System.Xml.XmlReader" />，可用於讀取這個節點及其子代 (Descendant)。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; with the options specified by the &lt;paramref name=&quot;readerOptions&quot; /&gt; parameter.">使用 <paramref name="readerOptions" /> 參數指定的選項建立 <see cref="T:System.Xml.XmlReader" />。</summary>
      <param name="readerOptions" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.ReaderOptions&quot; /&gt; object that specifies whether to omit duplicate namespaces.">
        <see cref="T:System.Xml.Linq.ReaderOptions" /> 物件，指定是否要省略重複的命名空間。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlReader" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares the values of two nodes, including the values of all descendant nodes.">比較兩個節點的值，包括所有子代節點的值。</summary>
      <param name="n1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">要比較的第一個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="n2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the nodes are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果兩個節點相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.DocumentOrderComparer">
      <summary vsli:raw="Gets a comparer that can compare the relative position of two nodes.">取得可比較兩個節點相對位置的比較子 (Comparer)。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNodeDocumentOrderComparer&quot; /&gt; that can compare the relative position of two nodes.">可比較兩個節點相對位置的 <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf">
      <summary vsli:raw="Returns a collection of the sibling elements after this node, in document order.">依照文件順序，傳回這個節點之後同層級項目的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements after this node, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，屬於這個節點之後同層級項目 (依照文件順序) 的 <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the sibling elements after this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">依照文件順序，傳回這個節點之後同層級項目之篩選的集合。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements after this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，屬於這個節點之後同層級項目 (依照文件順序) 的 <see cref="T:System.Xml.Linq.XElement" />。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf">
      <summary vsli:raw="Returns a collection of the sibling elements before this node, in document order.">依照文件順序，傳回這個節點之前同層級項目的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements before this node, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，屬於這個節點之前同層級項目 (依照文件順序) 的 <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the sibling elements before this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">依照文件順序，傳回這個節點之前同層級項目之篩選的集合。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">要比對的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements before this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，屬於這個節點之前同層級項目 (依照文件順序) 的 <see cref="T:System.Xml.Linq.XElement" />。 集合中只會包含具有相符之 <see cref="T:System.Xml.Linq.XName" /> 的項目。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.EqualityComparer">
      <summary vsli:raw="Gets a comparer that can compare two nodes for value equality.">取得可比較兩個節點值是否相等的比較子。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XNodeEqualityComparer&quot; /&gt; that can compare two nodes for value equality.">可比較兩個節點值是否相等的 <see cref="T:System.Xml.Linq.XNodeEqualityComparer" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)">
      <summary vsli:raw="Determines if the current node appears after a specified node in terms of document order.">根據文件順序，判斷目前的節點是否出現在指定的節點之後。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare for document order.">要針對文件順序比較的 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this node appears after the specified node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果這個節點出現在指定的節點之後則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)">
      <summary vsli:raw="Determines if the current node appears before a specified node in terms of document order.">根據文件順序，判斷目前的節點是否出現在指定的節點之前。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare for document order.">要針對文件順序比較的 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this node appears before the specified node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果這個節點出現在指定的節點之前則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.NextNode">
      <summary vsli:raw="Gets the next sibling node of this node.">取得這個節點的下一個同層級 (Sibling) 節點。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the next sibling node.">包含下一個同層級節點的 <see cref="T:System.Xml.Linq.XNode" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesAfterSelf">
      <summary vsli:raw="Returns a collection of the sibling nodes after this node, in document order.">依照文件順序，傳回這個節點之後同層級節點的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the sibling nodes after this node, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，屬於這個節點之後同層級節點 (依照文件順序) 的 <see cref="T:System.Xml.Linq.XNode" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesBeforeSelf">
      <summary vsli:raw="Returns a collection of the sibling nodes before this node, in document order.">依照文件順序，傳回這個節點之前同層級節點的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the sibling nodes before this node, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，屬於這個節點之前同層級節點 (依照文件順序) 的 <see cref="T:System.Xml.Linq.XNode" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.PreviousNode">
      <summary vsli:raw="Gets the previous sibling node of this node.">取得這個節點的上一個同層級節點。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the previous sibling node.">包含上一個同層級節點的 <see cref="T:System.Xml.Linq.XNode" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">從 <see cref="T:System.Xml.Linq.XNode" /> 建立 <see cref="T:System.Xml.XmlReader" />。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; positioned at the node to read into this &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> 位於節點，以讀入這個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the node and its descendant nodes that were read from the reader. The runtime type of the node is determined by the node type (&lt;see cref=&quot;P:System.Xml.Linq.XObject.NodeType&quot; /&gt;) of the first node encountered in the reader.">
        <see cref="T:System.Xml.Linq.XNode" />，包含從讀取器讀取的節點及其子代節點。 節點的執行階段型別是由讀取器中遇到的第一個節點的節點型別 (<see cref="P:System.Xml.Linq.XObject.NodeType" />) 決定的。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on a recognized node type.">
        <see cref="T:System.Xml.XmlReader" /> 未位於可識別的節點型別上。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; throws an exception.">基礎 <see cref="T:System.Xml.XmlReader" /> 會擲回例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFromAsync(System.Xml.XmlReader,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. The runtime type of the node is determined by the &lt;see cref=&quot;P:System.Xml.Linq.XObject.NodeType&quot; /&gt; of the first node encountered in the reader.">從 <see cref="T:System.Xml.Linq.XNode" /> 建立 <see cref="T:System.Xml.XmlReader" />。 節點的執行階段類型依讀取器中遇到的第一個節點 <see cref="P:System.Xml.Linq.XObject.NodeType" /> 來決定。</summary>
      <param name="reader" vsli:raw="A reader positioned at the node to read into this &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">位於節點的讀取器，以讀入這個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="An XNode that contains the nodes read from the reader.">XNode，包含讀取自讀取器的節點。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on a recognized node type.">
        <see cref="T:System.Xml.XmlReader" /> 未位於可識別的節點型別上。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Remove">
      <summary vsli:raw="Removes this node from its parent.">將這個節點從其父代 (Parent) 移除。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">該父代為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)">
      <summary vsli:raw="Replaces this node with the specified content.">以指定的內容取代這個節點。</summary>
      <param name="content" vsli:raw="Content that replaces this node.">取代這個節點的內容。</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])">
      <summary vsli:raw="Replaces this node with the specified content.">以指定的內容取代這個節點。</summary>
      <param name="content" vsli:raw="A parameter list of the new content.">新內容的參數清單。</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString">
      <summary vsli:raw="Returns the indented XML for this node.">針對這個節點傳回縮排的 XML。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the indented XML.">
        <see cref="T:System.String" />，包含縮排的 XML。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Returns the XML for this node, optionally disabling formatting.">傳回這個節點的 XML (可選擇是否停用格式設定)。</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">指定格式化行為的 <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML.">
        <see cref="T:System.String" />，包含 XML。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個節點寫入 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">此方法將寫入其中的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes the current node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將目前的節點寫入 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="The writer to write the current node into.">要寫入目前節點的寫入器。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">代表非同步寫入作業的工作。</returns>
    </member>
    <member name="T:System.Xml.Linq.XNodeDocumentOrderComparer">
      <summary vsli:raw="Contains functionality to compare nodes for their document order. This class cannot be inherited.">含有可以根據文件順序比較節點的功能。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XNodeDocumentOrderComparer&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares two nodes to determine their relative document order.">比較兩個節點來決定相關的文件順序。</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">要比較的第一個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains 0 if the nodes are equal; -1 if &lt;paramref name=&quot;x&quot; /&gt; is before &lt;paramref name=&quot;y&quot; /&gt;; 1 if &lt;paramref name=&quot;x&quot; /&gt; is after &lt;paramref name=&quot;y&quot; /&gt;.">如果兩個節點相等，則 <see cref="T:System.Int32" /> 包含 0；如果 <paramref name="x" /> 在 <paramref name="y" /> 之前，則包含 -1；如果 <paramref name="x" /> 在 <paramref name="y" /> 之後，則包含 1。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">這兩個節點不會共用共同的祖系。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary vsli:raw="Compares two nodes to determine their relative document order.">比較兩個節點來決定相關的文件順序。</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">要比較的第一個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains 0 if the nodes are equal; -1 if &lt;paramref name=&quot;x&quot; /&gt; is before &lt;paramref name=&quot;y&quot; /&gt;; 1 if &lt;paramref name=&quot;x&quot; /&gt; is after &lt;paramref name=&quot;y&quot; /&gt;.">如果兩個節點相等，則 <see cref="T:System.Int32" /> 包含 0；如果 <paramref name="x" /> 在 <paramref name="y" /> 之前，則包含 -1；如果 <paramref name="x" /> 在 <paramref name="y" /> 之後，則包含 1。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">這兩個節點不會共用共同的祖系。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The two nodes are not derived from &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">此兩個節點不是衍生自 <see cref="T:System.Xml.Linq.XNode" />。</exception>
    </member>
    <member name="T:System.Xml.Linq.XNodeEqualityComparer">
      <summary vsli:raw="Compares nodes to determine whether they are equal. This class cannot be inherited.">比較節點以判斷它們是否相等。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XNodeEqualityComparer&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Linq.XNodeEqualityComparer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares the values of two nodes.">比較兩個節點的值。</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">要比較的第一個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating if the nodes are equal.">
        <see cref="T:System.Boolean" />，指示節點是否相等。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)">
      <summary vsli:raw="Returns a hash code based on an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">根據 <see cref="T:System.Xml.Linq.XNode" /> 傳回雜湊程式碼。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to hash.">要雜湊的 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains a value-based hash code for the node.">
        <see cref="T:System.Int32" />，包含節點之以值為基礎的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
      <summary vsli:raw="Compares the values of two nodes.">比較兩個節點的值。</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">要比較的第一個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the nodes are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果兩個節點相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
      <summary vsli:raw="Returns a hash code based on the value of a node.">根據節點的值傳回雜湊程式碼。</summary>
      <param name="obj" vsli:raw="The node to hash.">要雜湊的節點。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains a value-based hash code for the node.">
        <see cref="T:System.Int32" />，包含節點之以值為基礎的雜湊程式碼。</returns>
    </member>
    <member name="T:System.Xml.Linq.XObject">
      <summary vsli:raw="Represents a node or an attribute in an XML tree.">代表 XML 樹狀結構中的節點或屬性。</summary>
    </member>
    <member name="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
      <summary vsli:raw="Adds an object to the annotation list of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">將物件加入此 <see cref="T:System.Xml.Linq.XObject" /> 的註釋清單。</summary>
      <param name="annotation" vsli:raw="An object that contains the annotation to add.">物件，包含要加入的註釋。</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation(System.Type)">
      <summary vsli:raw="Gets the first annotation object of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">從此 <see cref="T:System.Xml.Linq.XObject" /> 取得指定類型的第一個註釋物件。</summary>
      <param name="type" vsli:raw="The type of the annotation to retrieve.">要擷取的註釋類型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the first annotation object that matches the specified type, or &lt;see langword=&quot;null&quot; /&gt; if no annotation is of the specified type.">
        <see cref="T:System.Object" />，包含符合指定類型的第一個註釋物件，如果沒有指定類型的註釋，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation``1">
      <summary vsli:raw="Gets the first annotation object of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">從此 <see cref="T:System.Xml.Linq.XObject" /> 取得指定類型的第一個註釋物件。</summary>
      <typeparam name="T" vsli:raw="The type of the annotation to retrieve.">要擷取的註釋類型。</typeparam>
      <returns vsli:raw="The first annotation object that matches the specified type, or &lt;see langword=&quot;null&quot; /&gt; if no annotation is of the specified type.">符合指定類型的第一個註釋物件，或者如果沒有指定類型的註釋，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations(System.Type)">
      <summary vsli:raw="Gets a collection of annotations of the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">取得此 <see cref="T:System.Xml.Linq.XObject" /> 之指定類型註釋的集合。</summary>
      <param name="type" vsli:raw="The type of the annotations to retrieve.">要擷取的註釋類型。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the annotations that match the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Object" />，包含符合此 <see cref="T:System.Xml.Linq.XObject" /> 指定類型的註釋。</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations``1">
      <summary vsli:raw="Gets a collection of annotations of the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">取得此 <see cref="T:System.Xml.Linq.XObject" /> 之指定類型註釋的集合。</summary>
      <typeparam name="T" vsli:raw="The type of the annotations to retrieve.">要擷取的註釋類型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the annotations for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，包含此 <see cref="T:System.Xml.Linq.XObject" /> 的註釋。</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.BaseUri">
      <summary vsli:raw="Gets the base URI for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">取得此 <see cref="T:System.Xml.Linq.XObject" /> 的基底 URI。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the base URI for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.String" />，包含這個 <see cref="T:System.Xml.Linq.XObject" /> 的基底 URI。</returns>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changed">
      <summary vsli:raw="Raised when this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; or any of its descendants have changed.">當此 <see cref="T:System.Xml.Linq.XObject" /> 或其任何子代發生變更時會引發。</summary>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changing">
      <summary vsli:raw="Raised when this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; or any of its descendants are about to change.">當此 <see cref="T:System.Xml.Linq.XObject" /> 或其任何子代發生變更時會引發。</summary>
    </member>
    <member name="P:System.Xml.Linq.XObject.Document">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">取得這個 <see cref="T:System.Xml.Linq.XDocument" /> 的 <see cref="T:System.Xml.Linq.XObject" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">這個 <see cref="T:System.Xml.Linq.XDocument" /> 的 <see cref="T:System.Xml.Linq.XObject" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.NodeType">
      <summary vsli:raw="Gets the node type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">取得此 <see cref="T:System.Xml.Linq.XObject" /> 的節點類型。</summary>
      <returns vsli:raw="The node type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">此 <see cref="T:System.Xml.Linq.XObject" /> 的節點類型。</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.Parent">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">取得這個 <see cref="T:System.Xml.Linq.XElement" /> 的 <see cref="T:System.Xml.Linq.XObject" />。</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">這個 <see cref="T:System.Xml.Linq.XElement" /> 的父 <see cref="T:System.Xml.Linq.XObject" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
      <summary vsli:raw="Removes the annotations of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">從這個 <see cref="T:System.Xml.Linq.XObject" /> 中移除指定之類型的註釋。</summary>
      <param name="type" vsli:raw="The type of annotations to remove.">要移除的註釋類型。</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
      <summary vsli:raw="Removes the annotations of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">從這個 <see cref="T:System.Xml.Linq.XObject" /> 中移除指定之類型的註釋。</summary>
      <typeparam name="T" vsli:raw="The type of annotations to remove.">要移除的註釋類型。</typeparam>
    </member>
    <member name="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether or not this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has line information.">取得值，指出此 <see cref="T:System.Xml.Linq.XObject" /> 是否具有行資訊。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has line information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.Linq.XObject" /> 具有行資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
      <summary vsli:raw="Gets the line number that the underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; reported for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">取得基礎 <see cref="T:System.Xml.XmlReader" /> 所回報此 <see cref="T:System.Xml.Linq.XObject" /> 的行號。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the line number reported by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Int32" />，包含 <see cref="T:System.Xml.XmlReader" /> 所報告之此 <see cref="T:System.Xml.Linq.XObject" /> 的行號。</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
      <summary vsli:raw="Gets the line position that the underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; reported for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">取得基礎 <see cref="T:System.Xml.XmlReader" /> 所報告之此 <see cref="T:System.Xml.Linq.XObject" /> 的行位置。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the line position reported by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Int32" />，包含 <see cref="T:System.Xml.XmlReader" /> 所報告之此 <see cref="T:System.Xml.Linq.XObject" /> 的行位置。</returns>
    </member>
    <member name="T:System.Xml.Linq.XObjectChange">
      <summary vsli:raw="Specifies the event type when an event is raised for an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">引發 <see cref="T:System.Xml.Linq.XObject" /> 的事件時，指定事件型別。</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Add">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be added to an &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XObject" /> 已經加入或將要加入 <see cref="T:System.Xml.Linq.XContainer" />。</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Name">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be renamed.">
        <see cref="T:System.Xml.Linq.XObject" /> 已經重新命名或將要重新命名。</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Remove">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be removed from an &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XObject" /> 已經從 <see cref="T:System.Xml.Linq.XContainer" /> 中移除或將要移除。</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Value">
      <summary vsli:raw="The value of an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be changed. In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.">
        <see cref="T:System.Xml.Linq.XObject" /> 的值已經變更或將要變更。 此外，空項目的序列化變更 (由空標記變更為開頭/結尾標記對，反之亦然) 會觸發此事件。</summary>
    </member>
    <member name="T:System.Xml.Linq.XObjectChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Linq.XObject.Changing&quot; /&gt; and &lt;see cref=&quot;E:System.Xml.Linq.XObject.Changed&quot; /&gt; events.">提供 <see cref="E:System.Xml.Linq.XObject.Changing" /> 和 <see cref="E:System.Xml.Linq.XObject.Changed" /> 事件的資料。</summary>
    </member>
    <member name="M:System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XObjectChangeEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Linq.XObjectChangeEventArgs" /> 類別的新執行個體。</summary>
      <param name="objectChange" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObjectChange&quot; /&gt; that contains the event arguments for LINQ to XML events.">
        <see cref="T:System.Xml.Linq.XObjectChange" />，包含 LINQ to XML 事件的事件引數。</param>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Add">
      <summary vsli:raw="Event argument for an &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Add&quot; /&gt; change event.">
        <see cref="F:System.Xml.Linq.XObjectChange.Add" /> 變更事件的事件引數。</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Name">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Name&quot; /&gt; change event.">
        <see cref="F:System.Xml.Linq.XObjectChange.Name" /> 變更事件的事件引數。</summary>
    </member>
    <member name="P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange">
      <summary vsli:raw="Gets the type of change.">取得變更類型。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObjectChange&quot; /&gt; that contains the type of change.">
        <see cref="T:System.Xml.Linq.XObjectChange" />，其中包含變更類型。</returns>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Remove">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Remove&quot; /&gt; change event.">
        <see cref="F:System.Xml.Linq.XObjectChange.Remove" /> 變更事件的事件引數。</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Value">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Value&quot; /&gt; change event.">
        <see cref="F:System.Xml.Linq.XObjectChange.Value" /> 變更事件的事件引數。</summary>
    </member>
    <member name="T:System.Xml.Linq.XProcessingInstruction">
      <summary vsli:raw="Represents an XML processing instruction.">表示 XML 處理指示 (Processing Instructions，PI)。</summary>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 類別的新執行個體。</summary>
      <param name="target" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the target application for this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt;.">
        <see cref="T:System.String" />，其中包含這個 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 的目標應用程式。</param>
      <param name="data" vsli:raw="The string data for this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt;.">這個 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 的字串資料。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; or &lt;paramref name=&quot;data&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="target" /> 或 <paramref name="data" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; does not follow the constraints of an XML name.">
        <paramref name="target" /> 未遵循 XML 名稱的條件約束。</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 類別的新執行個體。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; node to copy from.">要從中複製的 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 節點。</param>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Data">
      <summary vsli:raw="Gets or sets the string value of this processing instruction.">取得或設定這個處理指示的字串值。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string value of this processing instruction.">
        <see cref="T:System.String" />，其中包含這個處理指示的字串值。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">字串 <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.NodeType">
      <summary vsli:raw="Gets the node type for this node.">取得此節點的節點類型。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.ProcessingInstruction&quot; /&gt;.">節點類型。 對於 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 物件，此值為 <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Target">
      <summary vsli:raw="Gets or sets a string containing the target application for this processing instruction.">取得或設定字串，這個字串包含這個處理指示的目標應用程式。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the target application for this processing instruction.">
        <see cref="T:System.String" />，其中包含這個處理指示的目標應用程式。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">字串 <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; does not follow the constraints of an XML name.">
        <paramref name="target" /> 未遵循 XML 名稱的條件約束。</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this processing instruction to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個處理指示寫入 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write this processing instruction to.">向其中寫入這個處理指示的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 寫入指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; to.">要寫入這個 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 的寫入器。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">代表非同步寫入作業的工作。</returns>
    </member>
    <member name="T:System.Xml.Linq.XStreamingElement">
      <summary vsli:raw="Represents elements in an XML tree that supports deferred streaming output.">表示 XML 樹狀目錄中的項目，此樹狀目錄支援延後的資料流 (Streaming) 輸出。</summary>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">從指定的 <see cref="T:System.Xml.Linq.XElement" /> 初始化 <see cref="T:System.Xml.Linq.XName" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the element.">包含項目名稱的 <see cref="T:System.Xml.Linq.XName" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; class with the specified name and content.">使用指定的名稱和內容初始化 <see cref="T:System.Xml.Linq.XStreamingElement" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">包含項目名稱的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="content" vsli:raw="The contents of the element.">項目的內容。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; class with the specified name and content.">使用指定的名稱和內容初始化 <see cref="T:System.Xml.Linq.XStreamingElement" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">包含項目名稱的 <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="content" vsli:raw="The contents of the element.">項目的內容。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object)">
      <summary vsli:raw="Adds the specified content as children to this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt;.">將指定的內容當做子系加入至這個 <see cref="T:System.Xml.Linq.XStreamingElement" />。</summary>
      <param name="content" vsli:raw="Content to be added to the streaming element.">要加入到資料流項目的內容。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object[])">
      <summary vsli:raw="Adds the specified content as children to this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt;.">將指定的內容當做子系加入至這個 <see cref="T:System.Xml.Linq.XStreamingElement" />。</summary>
      <param name="content" vsli:raw="Content to be added to the streaming element.">要加入到資料流項目的內容。</param>
    </member>
    <member name="P:System.Xml.Linq.XStreamingElement.Name">
      <summary vsli:raw="Gets or sets the name of this streaming element.">取得或設定這個資料流項目的名稱。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of this streaming element.">
        <see cref="T:System.Xml.Linq.XName" />，其中包含這個資料流項目的名稱。</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">將這個 <see cref="T:System.Xml.Linq.XStreamingElement" /> 輸出到指定的 <see cref="T:System.IO.Stream" />。</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">這個 <see cref="T:System.Xml.Linq.XDocument" /> 輸出的目的資料流。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">將這個 <see cref="T:System.Xml.Linq.XStreamingElement" /> 輸出至指定的 <see cref="T:System.IO.Stream" />，選擇性地指定格式化行為。</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">這個 <see cref="T:System.Xml.Linq.XDocument" /> 輸出的目的資料流。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">指定格式化行為的 <see cref="T:System.Xml.Linq.SaveOptions" /> 物件。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this streaming element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">將這個資料流項目序列化成 <see cref="T:System.IO.TextWriter" />。</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; will be written to.">向其中寫入 <see cref="T:System.IO.TextWriter" /> 的 <see cref="T:System.Xml.Linq.XStreamingElement" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this streaming element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">將這個資料流項目序列化成 <see cref="T:System.IO.TextWriter" /> (可選擇是否停用格式設定)。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">做為 XML 之輸出目標的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">指定格式化行為的 <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String)">
      <summary vsli:raw="Serialize this streaming element to a file.">將這個資料流項目序列化成檔案。</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">包含檔案名稱的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this streaming element to a file, optionally disabling formatting.">將這個資料流項目序列化成檔案 (可選擇是否停用格式設定)。</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">包含檔案名稱的 <see cref="T:System.String" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">指定格式化行為的 <see cref="T:System.Xml.Linq.SaveOptions" /> 物件。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this streaming element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個資料流項目序列化成 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">向其中寫入 <see cref="T:System.Xml.XmlWriter" /> 的 <see cref="T:System.Xml.Linq.XElement" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString">
      <summary vsli:raw="Returns the formatted (indented) XML for this streaming element.">傳回這個資料流項目之格式化 (縮排) 的 XML。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the indented XML.">
        <see cref="T:System.String" />，包含縮排的 XML。</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Returns the XML for this streaming element, optionally disabling formatting.">傳回這個資料流項目的 XML (可選擇是否停用格式設定)。</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">指定格式化行為的 <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML.">
        <see cref="T:System.String" />，包含 XML。</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this streaming element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個資料流項目寫入 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">此方法將寫入其中的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="T:System.Xml.Linq.XText">
      <summary vsli:raw="Represents a text node.">表示文字節點。</summary>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Linq.XText" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; node.">
        <see cref="T:System.String" />，其中包含 <see cref="T:System.Xml.Linq.XText" /> 節點的值。</param>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; object.">從另一個 <see cref="T:System.Xml.Linq.XText" /> 物件，初始化 <see cref="T:System.Xml.Linq.XText" /> 類別的新執行個體。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; node to copy from.">要從中複製的 <see cref="T:System.Xml.Linq.XText" /> 節點。</param>
    </member>
    <member name="P:System.Xml.Linq.XText.NodeType">
      <summary vsli:raw="Gets the node type for this node.">取得此節點的節點類型。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;.">節點類型。 對於 <see cref="T:System.Xml.Linq.XText" /> 物件，此值為 <see cref="F:System.Xml.XmlNodeType.Text" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XText.Value">
      <summary vsli:raw="Gets or sets the value of this node.">取得或設定這個節點的值。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of this node.">
        <see cref="T:System.String" />，其中包含這個節點的值。</returns>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將這個節點寫入 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">此方法將寫入其中的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes this &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">以非同步方式將這個 <see cref="T:System.Xml.Linq.XText" /> 寫入指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; to.">要寫入這個 <see cref="T:System.Xml.Linq.XText" /> 的寫入器。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">可用來要求取消非同步作業的權杖。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">代表非同步寫入作業的工作。</returns>
    </member>
    <member name="T:System.Xml.Schema.Extensions">
      <summary vsli:raw="This class contains the LINQ to XML extension methods for XSD validation.">這個類別包含 XSD 驗證的 LINQ to XML 延伸模組。</summary>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
      <summary vsli:raw="Gets the post-schema-validation infoset (PSVI) of a validated attribute.">取得已驗證屬性的後結構描述驗證資訊集 (PSVI)。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that has been previously validated.">之前已驗證的 <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; that contains the post-schema-validation infoset for an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />，其中包含 <see cref="T:System.Xml.Linq.XAttribute" /> 的後結構描述驗證資訊集。</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
      <summary vsli:raw="Gets the post-schema-validation infoset (PSVI) of a validated element.">取得已驗證項目的後結構描述驗證資訊集 (PSVI)。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that has been previously validated.">之前已驗證的 <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; that contains the post-schema-validation infoset (PSVI) for an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />，其中包含 <see cref="T:System.Xml.Linq.XElement" /> 的後結構描述驗證資訊集 (PSVI)。</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">這個方法會驗證 <see cref="T:System.Xml.Linq.XAttribute" /> 是否符合指定的 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 和 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to validate.">要驗證的 <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />，指定要驗證的樹狀子目錄。</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">要用來驗證的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">在讀取器遇到驗證錯誤時發生之事件的 <see cref="T:System.Xml.Schema.ValidationEventHandler" />。 若為 <see langword="null" />，則於發生驗證錯誤時擲回例外狀況。</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">針對 XML 結構描述定義語言 (XSD) 驗證錯誤而擲回。</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">驗證 <see cref="T:System.Xml.Linq.XAttribute" /> 是否符合指定的 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 和 <see cref="T:System.Xml.Schema.XmlSchemaSet" />，並選擇性地將後結構描述驗證資訊集 (PSVI) 填入 XML 樹狀目錄。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to validate.">要驗證的 <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />，指定要驗證的樹狀子目錄。</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">要用來驗證的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">在讀取器遇到驗證錯誤時發生之事件的 <see cref="T:System.Xml.Schema.ValidationEventHandler" />。 若為 <see langword="null" />，則於發生驗證錯誤時擲回例外狀況。</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">指出是否要填入 Post-Schema-Validation Infoset (PSVI) 的 <see cref="T:System.Boolean" />。</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">針對 XML 結構描述定義語言 (XSD) 驗證錯誤而擲回。</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; conforms to an XSD in an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">這個方法會驗證 <see cref="T:System.Xml.Linq.XDocument" /> 是否符合 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的 XSD。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to validate.">要驗證的 <see cref="T:System.Xml.Linq.XDocument" />。</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">要用來驗證的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">在讀取器遇到驗證錯誤時發生之事件的 <see cref="T:System.Xml.Schema.ValidationEventHandler" />。 若為 <see langword="null" />，則於發生驗證錯誤時擲回例外狀況。</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">針對 XML 結構描述定義語言 (XSD) 驗證錯誤而擲回。</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; conforms to an XSD in an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">驗證 <see cref="T:System.Xml.Linq.XDocument" /> 是否符合 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的 XSD，並選擇性地將後結構描述驗證資訊集 (PSVI) 填入 XML 樹狀目錄。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to validate.">要驗證的 <see cref="T:System.Xml.Linq.XDocument" />。</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">要用來驗證的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">在讀取器遇到驗證錯誤時發生之事件的 <see cref="T:System.Xml.Schema.ValidationEventHandler" />。 若為 <see langword="null" />，則於發生驗證錯誤時擲回例外狀況。</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">指出是否要填入 Post-Schema-Validation Infoset (PSVI) 的 <see cref="T:System.Boolean" />。</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">針對 XML 結構描述定義語言 (XSD) 驗證錯誤而擲回。</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; sub-tree conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">這個方法會驗證 <see cref="T:System.Xml.Linq.XElement" /> 樹狀子目錄是否符合指定的 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 和 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to validate.">要驗證的 <see cref="T:System.Xml.Linq.XElement" />。</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />，指定要驗證的樹狀子目錄。</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">要用來驗證的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">在讀取器遇到驗證錯誤時發生之事件的 <see cref="T:System.Xml.Schema.ValidationEventHandler" />。 若為 <see langword="null" />，則於發生驗證錯誤時擲回例外狀況。</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">針對 XML 結構描述定義語言 (XSD) 驗證錯誤而擲回。</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; sub-tree conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">驗證 <see cref="T:System.Xml.Linq.XElement" /> 樹狀子目錄是否符合指定的 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 和 <see cref="T:System.Xml.Schema.XmlSchemaSet" />，並選擇性地將後結構描述驗證資訊集 (PSVI) 填入 XML 樹狀目錄。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to validate.">要驗證的 <see cref="T:System.Xml.Linq.XElement" />。</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />，指定要驗證的樹狀子目錄。</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">要用來驗證的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">在讀取器遇到驗證錯誤時發生之事件的 <see cref="T:System.Xml.Schema.ValidationEventHandler" />。 若為 <see langword="null" />，則於發生驗證錯誤時擲回例外狀況。</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">指出是否要填入 Post-Schema-Validation Infoset (PSVI) 的 <see cref="T:System.Boolean" />。</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">針對 XML 結構描述定義語言 (XSD) 驗證錯誤而擲回。</exception>
    </member>
  </members>
</doc>