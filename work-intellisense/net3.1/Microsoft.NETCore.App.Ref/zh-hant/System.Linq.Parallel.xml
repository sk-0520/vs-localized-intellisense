<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Linq.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Linq.OrderedParallelQuery`1">
      <summary vsli:raw="Represents a sorted, parallel sequence.">表示已排序的平行序列。</summary>
      <typeparam name="TSource" vsli:raw="The type of elements in the source collection.">來源集合中的項目型別。</typeparam>
    </member>
    <member name="M:System.Linq.OrderedParallelQuery`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">傳回會逐一查看序列的列舉程式。</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">可逐一查看序列的列舉程式。</returns>
    </member>
    <member name="T:System.Linq.ParallelEnumerable">
      <summary vsli:raw="Provides a set of methods for querying objects that implement ParallelQuery{TSource}. This is the parallel equivalent of &lt;see cref=&quot;T:System.Linq.Enumerable&quot; /&gt;.">提供一組方法，這些方法會用於查詢實作 ParallelQuery{TSource} 的物件。 在平行查詢方面，這些方法相當於 <see cref="T:System.Linq.Enumerable" />。</summary>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence.">將累加函式同時套用到序列。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">所要彙總的序列。</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">要在每個項目上叫用 (Invoke) 的累加函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The final accumulator value.">最終累積值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="func" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value.">將累加函式同時套用到序列。 使用指定的初始值做為初始累加值。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">所要彙總的序列。</param>
      <param name="seed" vsli:raw="The initial accumulator value.">初始累積值。</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">要在每個項目上叫用 (Invoke) 的累加函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">累積值的類型。</typeparam>
      <returns vsli:raw="The final accumulator value.">最終累積值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="func" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.">將累加函式同時套用到序列。 這個多載不能用於循序實作。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">所要彙總的序列。</param>
      <param name="seed" vsli:raw="The initial accumulator value.">初始累積值。</param>
      <param name="updateAccumulatorFunc" vsli:raw="An accumulator function to be invoked on each element in a partition.">要在分割中每個項目上叫用的累加函式。</param>
      <param name="combineAccumulatorsFunc" vsli:raw="An accumulator function to be invoked on the yielded accumulator result from each partition.">累加函式，要從每個分割上所產生累加結果上叫用。</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">用來將最終累加值轉換成結果值的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">累積值的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">結果值的類型。</typeparam>
      <returns vsli:raw="The transformed final accumulator value.">轉換後的最終累加值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;updateAccumulatorFunc&quot; /&gt; or &lt;paramref name=&quot;combineAccumulatorsFunc&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="updateAccumulatorFunc" /> 或 <paramref name="combineAccumulatorsFunc" /> 或 <paramref name="resultSelector" /> 是 Null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.">將累加函式同時套用到序列。 使用指定的值做為初始累加值，並使用指定的函式來選取結果值。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">所要彙總的序列。</param>
      <param name="seed" vsli:raw="The initial accumulator value.">初始累積值。</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">要在每個項目上叫用 (Invoke) 的累加函式。</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">用來將最終累加值轉換成結果值的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">累積值的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">結果值的類型。</typeparam>
      <returns vsli:raw="The transformed final accumulator value.">轉換後的最終累加值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="func" /> 或 <paramref name="resultSelector" /> 是 Null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.">將累加函式同時套用到序列。 這個多載不能用於循序實作。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">所要彙總的序列。</param>
      <param name="seedFactory" vsli:raw="A function that returns the initial accumulator value.">傳回初始累加值的函式。</param>
      <param name="updateAccumulatorFunc" vsli:raw="An accumulator function to be invoked on each element in a partition.">要在分割中每個項目上叫用的累加函式。</param>
      <param name="combineAccumulatorsFunc" vsli:raw="An accumulator function to be invoked on the yielded accumulator result from each partition.">累加函式，要從每個分割上所產生累加結果上叫用。</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">用來將最終累加值轉換成結果值的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">累積值的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">結果值的類型。</typeparam>
      <returns vsli:raw="The transformed final accumulator value.">轉換後的最終累加值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;seedFactory&quot; /&gt; or &lt;paramref name=&quot;updateAccumulatorFunc&quot; /&gt; or &lt;paramref name=&quot;combineAccumulatorsFunc&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="seedFactory" /> 或 <paramref name="updateAccumulatorFunc" /> 或 <paramref name="combineAccumulatorsFunc" /> 或 <paramref name="resultSelector" /> 是 Null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines in parallel whether all elements of a sequence satisfy a condition.">以平行方式判斷序列的所有項目是否都滿足條件。</summary>
      <param name="source" vsli:raw="A sequence whose elements to apply the predicate to.">要對其中項目套用述詞的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果來源序列的每個項目都通過以指定之述詞 (Predicate) 進行的測試，或序列是空的，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Determines whether a parallel sequence contains any elements.">判斷平行序列是否包含任何項目。</summary>
      <param name="source" vsli:raw="The sequence to check for emptiness.">要檢查是否為空的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains any elements; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果來源序列包含任何項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines in parallel whether any element of a sequence satisfies a condition.">以平行方式判斷是否有任何序列項目滿足條件。</summary>
      <param name="source" vsli:raw="A sequence to whose elements the predicate will be applied.">將對其中項目套用述詞的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any elements in the source sequence pass the test in the specified predicate; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果來源序列中的任何項目通過以指定之述詞進行的測試，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; into an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to force sequential evaluation of the query.">將 <see cref="T:System.Linq.ParallelQuery`1" /> 轉換為 <see cref="T:System.Collections.Generic.IEnumerable`1" />，以便強制進行查詢的循序評估。</summary>
      <param name="source" vsli:raw="The sequence to cast as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">轉換為 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The input sequence typed as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">型別為 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的輸入序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
      <summary vsli:raw="Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on non-generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.">覆寫未排序的預設值，將資料來源當做已排序來處理。 只有在由 AsParallel、ParallelEnumerable.Range 和 ParallelEnumerable.Repeat 傳回的非泛型序列上，才可叫用 AsOrdered。</summary>
      <param name="source" vsli:raw="The input sequence.">輸入序列。</param>
      <returns vsli:raw="The source sequence which will maintain the original ordering in the subsequent query operators.">將維持後續查詢運算子內原始順序的來源序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="thrown if &lt;paramref name=&quot;source&quot; /&gt; contains no elements&#xA;&#xA; -or-&#xA;&#xA; if &lt;see langword=&quot;AsOrdered&quot; /&gt; is called midway through a query. It is allowed to be called immediately after &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)&quot; /&gt;, &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)&quot; /&gt;, or &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;source&quot; /&gt; is not one of &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)&quot; /&gt;, &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)&quot; /&gt;, or &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)&quot; /&gt;.">如果 <paramref name="source" /> 未包含任何項目時擲回。
-或-
如果在查詢途中呼叫 AsOrdered。 可在 <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> 或 <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" /> 之後立即呼叫。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.">覆寫未排序的預設值，將資料來源當做已排序來處理。 只有在由 AsParallel、ParallelEnumerable.Range 和 ParallelEnumerable.Repeat 傳回的泛型序列上，才可叫用 AsOrdered。</summary>
      <param name="source" vsli:raw="The input sequence.">輸入序列。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The source sequence which will maintain the original ordering in the subsequent query operators.">將維持後續查詢運算子內原始順序的來源序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;source&quot; /&gt; is not one of AsParallel, ParallelEnumerable.Range, or ParallelEnumerable.Repeat.">如果 <paramref name="source" /> 未包含任何項目時擲回。
-或-
如果 <paramref name="source" /> 不是 AsParallel、ParallelEnumerable.Range 或 ParallelEnumerable.Repeat。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
      <summary vsli:raw="Enables parallelization of a query.">啟用查詢的平行化作業。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.Linq.ParallelQuery&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，要轉換成 <see cref="T:System.Linq.ParallelQuery" />。</param>
      <returns vsli:raw="The source as a ParallelQuery to bind to ParallelEnumerable extension methods.">當 ParallelQuery 繫結到 ParallelEnumerable 擴充方法時的來源。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
      <summary vsli:raw="Enables parallelization of a query, as sourced by a custom partitioner that is responsible for splitting the input sequence into partitions.">啟用查詢的平行化作業，此時則指定負責將輸入序列分成多個分割的自訂 Partitioner 處理來源。</summary>
      <param name="source" vsli:raw="A partitioner over the input sequence.">輸入序列的 Partitioner。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; as a ParallelQuery to bind to ParallelEnumerable extension methods.">當 ParallelQuery 繫結到 ParallelEnumerable 擴充方法時的 <paramref name="source" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Enables parallelization of a query.">啟用查詢的平行化作業。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，要轉換成 <see cref="T:System.Linq.ParallelQuery`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The source as a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; to bind to ParallelEnumerable extension methods.">將來源 <see cref="T:System.Linq.ParallelQuery`1" /> 繫結到 ParallelEnumerable 擴充方法。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; into an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to force sequential evaluation of the query.">將 <see cref="T:System.Linq.ParallelQuery`1" /> 轉換為 <see cref="T:System.Collections.Generic.IEnumerable`1" />，以便強制進行查詢的循序評估。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; to convert to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">
        <see cref="T:System.Linq.ParallelQuery`1" />，要轉換成 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The source as an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to bind to sequential extension methods.">當 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 繫結到循序擴充方法時的來源。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Allows an intermediate query to be treated as if no ordering is implied among the elements.">允許將中繼查詢當做項目之中未套用順序的方式來進行處理。</summary>
      <param name="source" vsli:raw="The input sequence.">輸入序列。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The source sequence with arbitrary order.">具有任意順序的來源序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">同時計算值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">同時計算值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">同時計算值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中項目的總和或計數大於 <see cref="F:System.Int32.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">同時計算值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中項目的總和或計數大於 <see cref="F:System.Int32.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">同時計算值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">同時計算值序列的平均值。</summary>
      <param name="source" vsli:raw="The source sequence.">來源序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">用來計算平均值的序列。值序列的平均值。<paramref name="source" /> 是 Null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">同時計算值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中項目的總和或計數大於 <see cref="F:System.Int32.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">同時計算值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中項目的總和或計數大於 <see cref="F:System.Int32.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">同時計算值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">同時計算值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(做為 <see cref="T:System.AggregateException" /> 中的內部例外狀況擲回)。 <paramref name="selector" /> 函式傳回大於項目類型之 MaxValue 的値。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(做為 <see cref="T:System.AggregateException" /> 中的內部例外狀況擲回)。 <paramref name="selector" /> 函式傳回大於項目類型之 MaxValue 的値。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中項目的總和或計數大於 <see cref="F:System.Int32.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(做為 <see cref="T:System.AggregateException" /> 中的內部例外狀況擲回)。 <paramref name="selector" /> 函式傳回大於項目類型之 MaxValue 的値。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中項目的總和或計數大於 <see cref="F:System.Int32.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(做為 <see cref="T:System.AggregateException" /> 中的內部例外狀況擲回)。 <paramref name="selector" /> 函式傳回大於項目類型之 MaxValue 的値。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(做為 <see cref="T:System.AggregateException" /> 中的內部例外狀況擲回)。 <paramref name="selector" /> 函式傳回大於項目類型之 MaxValue 的値。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(做為 <see cref="T:System.AggregateException" /> 中的內部例外狀況擲回)。 <paramref name="selector" /> 函式傳回大於項目類型之 MaxValue 的値。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中項目的總和或計數大於 <see cref="F:System.Int32.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(做為 <see cref="T:System.AggregateException" /> 中的內部例外狀況擲回)。 <paramref name="selector" /> 函式傳回大於項目類型之 MaxValue 的値。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中項目的總和或計數大於 <see cref="F:System.Int64.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(做為 <see cref="T:System.AggregateException" /> 中的內部例外狀況擲回)。 <paramref name="selector" /> 函式傳回大於項目類型之 MaxValue 的値。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(做為 <see cref="T:System.AggregateException" /> 中的內部例外狀況擲回)。 <paramref name="selector" /> 函式傳回大於項目類型之 MaxValue 的値。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(做為 <see cref="T:System.AggregateException" /> 中的內部例外狀況擲回)。 <paramref name="selector" /> 函式傳回大於項目類型之 MaxValue 的値。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
      <summary vsli:raw="Converts the elements of a ParallelQuery to the specified type.">將 ParallelQuery 的項目轉換為指定的類型。</summary>
      <param name="source" vsli:raw="The sequence that contains the elements to be converted.">序列，包含要轉換的項目。</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of &lt;paramref name=&quot;source&quot; /&gt; to.">要將 <paramref name="source" /> 之項目轉換成的型別。</typeparam>
      <returns vsli:raw="A sequence that contains each element of the source sequence converted to the specified type.">序列，包含已轉換成指定之類型的每個來源序列項目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source sequence could not be converted to &lt;paramref name=&quot;TResult&quot; /&gt;.">無法將來源序列的型別轉換為 <paramref name="TResult" />。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Concat overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">永遠不可叫用這個 Concat 多載。 此方法已標記為過時，呼叫它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="second" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">當呼叫這個方法時所發生的例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Concatenates two parallel sequences.">串連兩個平行序列。</summary>
      <param name="first" vsli:raw="The first sequence to concatenate.">要串連的第一個序列。</param>
      <param name="second" vsli:raw="The sequence to concatenate to the first sequence.">要串連到第一個序列的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains the concatenated elements of the two input sequences.">序列，包含兩個輸入序列的串連項目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
      <summary vsli:raw="Determines in parallel whether a sequence contains a specified element by using the default equality comparer.">使用預設等號比較子來比較值，以平行方式來判斷序列是否包含指定的項目。</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">要在其中尋找值的序列。</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">要在序列中尋找的值。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果來源序列包含具有指定值的項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines in parallel whether a sequence contains a specified element by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />，以平行方式來判斷序列是否包含指定的項目。</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">要在其中尋找值的序列。</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">要在序列中尋找的值。</param>
      <param name="comparer" vsli:raw="An equality comparer to compare values.">用來比較值的相等比較子。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果來源序列包含具有指定值的項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the number of elements in a parallel sequence.">傳回平行序列中的項目數目。</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">包含要計算之項目的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The number of elements in the input sequence.">輸入序列中的項目數目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. (In this case the InnerException is &lt;see cref=&quot;T:System.OverflowException&quot; /&gt;) -or- One or more exceptions occurred during the evaluation of the query.">來源中的項目數目大於 <see cref="F:System.Int32.MaxValue" />。 (在這種情況下，InnerException 是 <see cref="T:System.OverflowException" />)-或-查詢的評估期間發生的一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns a number that represents how many elements in the specified parallel sequence satisfy a condition.">傳回數字，表示指定之平行序列中滿足條件的項目數目。</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">包含要計算之項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">數字，代表序列中符合述詞函式之條件的項目數目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. (In this case the InnerException is &lt;see cref=&quot;T:System.OverflowException&quot; /&gt;) -or- One or more exceptions occurred during the evaluation of the query.">來源中的項目數目大於 <see cref="F:System.Int32.MaxValue" />。 (在這種情況下，InnerException 是 <see cref="T:System.OverflowException" />)-或-查詢的評估期間發生的一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the elements of the specified parallel sequence or the type parameter's default value in a singleton collection if the sequence is empty.">傳回指定之平行序列的項目，如果序列是空的，則傳回單一集合中泛型類型的預設值。</summary>
      <param name="source" vsli:raw="The sequence to return a default value for if it is empty.">序列，若此序列空白，便傳回預設值。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">如果 <paramref name="source" /> 是空的，則傳回包含 default(TSource) 的序列，否則傳回 <paramref name="source" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
      <summary vsli:raw="Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.">傳回指定之平行序列的項目，如果序列是空的，則傳回單一集合中泛型類型的預設值。</summary>
      <param name="source" vsli:raw="The sequence to return the specified value for if it is empty.">序列，若此序列空白，便傳回指定的值。</param>
      <param name="defaultValue" vsli:raw="The value to return if the sequence is empty.">在序列空白時所要傳回的值。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains defaultValue if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">如果 <paramref name="source" /> 是空的，則傳回包含 defaultValue 的序列，否則傳回 <paramref name="source" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.">使用預設的等號比較子來比較值，以便從平行序列傳回不同的項目。</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">要移除重複項目的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains distinct elements from the source sequence.">序列，包含來源序列中的不同項目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Returns distinct elements from a parallel sequence by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 來比較值，以便從平行序列傳回獨特的項目。</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">要移除重複項目的序列。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">用來比較值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains distinct elements from the source sequence.">序列，包含來源序列中的不同項目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a parallel sequence.">傳回位於平行序列中指定之索引處的項目。</summary>
      <param name="source" vsli:raw="A sequence to return an element from.">要從其中傳回項目的序列。</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">要擷取的項目之以零為起始索引。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The element at the specified position in the source sequence.">位於來源序列中指定位置的項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than or equal to the number of elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="index" /> 小於 0 或大於或等於 <paramref name="source" /> 中的項目數目。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a parallel sequence or a default value if the index is out of range.">傳回位於平行序列中指定索引處的項目，如果索引超出範圍，則傳回預設值。</summary>
      <param name="source" vsli:raw="A sequence to return an element from.">要從其中傳回項目的序列。</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">要擷取的項目之以零為起始索引。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="default(TSource) if the index is outside the bounds of the source sequence; otherwise, the element at the specified position in the source sequence.">如果索引位於來源序列的界限之外，則為 default(TSource)，否則為位於來源序列中指定索引處的項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Empty``1">
      <summary vsli:raw="Returns an empty ParallelQuery{TResult} that has the specified type argument.">傳回具有指定之型別引數的空白 ParallelQuery{TResult}。</summary>
      <typeparam name="TResult" vsli:raw="The type to assign to the type parameter of the returned generic sequence.">類型，用來指派給傳回之泛型序列的泛型類型。</typeparam>
      <returns vsli:raw="An empty sequence whose type argument is &lt;paramref name=&quot;TResult&quot; /&gt;.">其型別引數為 <paramref name="TResult" /> 的空白序列。</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Except overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">永遠不可叫用這個 Except 多載。 此方法已標記為過時，呼叫它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="second" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">當呼叫這個方法時所發生的例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Except overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">永遠不可叫用這個 Except 多載。 此方法已標記為過時，呼叫它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="second" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="comparer" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">當呼叫這個方法時所發生的例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set difference of two parallel sequences by using the default equality comparer to compare values.">使用預設相等比較子來比較值，以便產生兩個平行序列的集合差異。</summary>
      <param name="first" vsli:raw="A sequence whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">序列，其中同時不在 <paramref name="second" /> 內的項目將會傳回。</param>
      <param name="second" vsli:raw="A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">項目，若其項目同時出現在第一個序列中，便會從傳回的序列中移除這些項目。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">序列，其中包含兩個序列之項目的差異。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set difference of two parallel sequences by using the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 來比較值，以便產生兩個平行序列的差異。</summary>
      <param name="first" vsli:raw="A sequence whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">序列，其中同時不在 <paramref name="second" /> 內的項目將會傳回。</param>
      <param name="second" vsli:raw="A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">項目，若其項目同時出現在第一個序列中，便會從傳回的序列中移除這些項目。</param>
      <param name="comparer" vsli:raw="&lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">用來比較值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">序列，其中包含兩個序列之項目的差異。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the first element of a parallel sequence.">傳回平行序列的第一個項目。</summary>
      <param name="source" vsli:raw="The sequence to return the first element of.">要傳回其第一個項目的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The first element in the specified sequence.">指定之序列中的第一個項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element in a parallel sequence that satisfies a specified condition.">傳回平行序列中符合指定之條件的第一個項目。</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">要從傳回其項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The first element in the sequence that passes the test in the specified predicate function.">序列中通過指定之述詞函式所做測試的第一個項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element in &lt;paramref name=&quot;source&quot; /&gt; satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="source" /> 中沒有任何項目符合 <paramref name="predicate" /> 中的條件。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.">傳回平行序列的第一個項目，如果序列中沒有包含任何項目，則傳回預設值。</summary>
      <param name="source" vsli:raw="The sequence to return the first element of.">要傳回其第一個項目的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt;.">如果 <paramref name="source" /> 是空的，則為 default(TSource)，否則為 <paramref name="source" /> 中的第一個項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element of the parallel sequence that satisfies a condition or a default value if no such element is found.">傳回平行序列中符合條件的第一個項目，如果找不到這類項目，則傳回預設值。</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">要從傳回其項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty or if no element passes the test specified by predicate; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt; that passes the test specified by predicate.">如果 <paramref name="source" /> 為空或所有項目皆未通過述詞指定的測試，則為 default(TSource)，否則為 <paramref name="source" /> 中通過述詞指定測試的第一個項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
      <summary vsli:raw="Invokes in parallel the specified action for each element in the &lt;paramref name=&quot;source&quot; /&gt;.">以平行方式，叫用 <paramref name="source" /> 中每個項目的指定動作。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; whose elements will be processed by &lt;paramref name=&quot;action&quot; /&gt;.">
        <see cref="T:System.Linq.ParallelQuery`1" />，其項目將由 <paramref name="action" /> 處理。</param>
      <param name="action" vsli:raw="An Action to invoke on each element.">要在每個項目上叫用的動作。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function.">依據指定的索引鍵選取器函式，以平行方式來分組序列的項目。</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource}that contains elements to sort.">包含要排序之項目的 OrderedParallelQuery{TSource}。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">已根據 <paramref name="TKey" /> 經過遞減排序的群組序列。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and compares the keys by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt;.">依據指定的索引鍵選取器函式，以平行方式來分組序列的項目，並使用指定的 <see cref="T:System.Collections.Generic.IComparer`1" /> 來比較索引鍵。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.OrderedParallelQuery`1&quot; /&gt; that contains elements to sort.">包含要排序之項目的 <see cref="T:System.Linq.OrderedParallelQuery`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />&gt;所傳回之索引鍵的類型。</typeparam>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">已根據 <paramref name="TKey" /> 經過遞減排序的群組序列。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.">依據指定的索引鍵選取器函式，以平行方式分組序列的項目，並使用指定的函式來規劃每個群組的項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.OrderedParallelQuery`1&quot; /&gt; that contains elements to sort.">包含要排序之項目的 <see cref="T:System.Linq.OrderedParallelQuery`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">用來將每個來源項目對應至 <see cref="T:System.Linq.IGrouping`2" /> 之項目的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">
        <see cref="T:System.Linq.IGrouping`2" /> 中的項目類型。</typeparam>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">已根據 <paramref name="TKey" /> 經過遞減排序的群組序列。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a key selector function. The keys are compared by using a comparer and each group's elements are projected by using a specified function.">依據索引鍵選取器函式，以平行方式來分組序列的項目。 索引鍵是使用比較子來進行比較，而每個群組的項目都是利用指定的函式進行投影。</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource}that contains elements to sort.">包含要排序之項目的 OrderedParallelQuery{TSource}。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping.">函式，用來將每個來源項目對應至 IGrouping 的項目。</param>
      <param name="comparer" vsli:raw="An IComparer{TSource} to compare keys.">要比較索引鍵的 IComparer{TSource}。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the IGrouping.">IGrouping 中項目的類型</typeparam>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">已根據 <paramref name="TKey" /> 經過遞減排序的群組序列。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.">依據指定的索引鍵選取器函式來同時群組序列的項目，並從每個群組及其索引鍵建立結果值。</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">其中的項目要進行分組的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用來擷取各項目之索引鍵的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">用來從各個群組建立結果值的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> 所傳回之結果值的型別。</typeparam>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> 型別項目的序列，其中每個項目都代表群組及其索引鍵的投影。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The keys are compared by using a specified comparer.">依據指定的索引鍵選取器函式來同時群組序列的項目，並從每個群組及其索引鍵建立結果值。 索引鍵是使用指定的比較子來進行比較。</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">其中的項目要進行分組的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用來擷取各項目之索引鍵的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">用來從各個群組建立結果值的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> 所傳回之結果值的型別。</typeparam>
      <returns vsli:raw="A sequence of groups.">群組序列。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The elements of each group are projected by using a specified function.">依據指定的索引鍵選取器函式來同時群組序列的項目，並從每個群組及其索引鍵建立結果值。 每個群組的項目都是利用指定的函式進行投影。</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">其中的項目要進行分組的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用來擷取各項目之索引鍵的函式。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping&amp;lt;TKey, TElement&amp;gt;.">函式，用來將每個來源項目對應至 IGrouping&lt;TKey, TElement&gt; 的項目。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">用來從各個群組建立結果值的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each IGrouping{TKey, TElement}.">每個 IGrouping{TKey, TElement} 中項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> 所傳回之結果值的型別。</typeparam>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> 型別項目的序列，其中每個項目都代表群組及其索引鍵的投影。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.">依據指定的索引鍵選取器函式來群組序列的項目，並從每個群組及其索引鍵建立結果值。 索引鍵值是使用指定的比較子來進行比較，而每個群組的項目則都是利用指定的函式進行投影。</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">其中的項目要進行分組的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用來擷取各項目之索引鍵的函式。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping{Key, TElement}.">函式，用來將每個來源項目對應至 IGrouping{Key, TElement} 的項目。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">用來從各個群組建立結果值的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each IGrouping{TKey, TElement}.">每個 IGrouping{TKey, TElement} 中項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> 所傳回之結果值的型別。</typeparam>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> 型別項目的序列，其中每個項目都代表群組及其索引鍵的投影。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary vsli:raw="This GroupJoin overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">永遠不可叫用這個 GroupJoin 多載。 此方法已標記為過時，呼叫它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="outer" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="inner" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">當呼叫這個方法時所發生的例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="This GroupJoin overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">永遠不可叫用這個 GroupJoin 多載。 此方法已標記為過時，呼叫它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="outer" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="inner" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="comparer" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">當呼叫這個方法時所發生的例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on equality of keys and groups the results. The default equality comparer is used to compare keys.">根據索引鍵相等與否，以平行方式將兩個序列的項目相互關聯，並分組產生的結果。 預設的相等比較子是用於比較索引鍵。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">要聯結的第一個序列。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">要加入第一個序列的序列。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">用來從第一個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">用來從第二個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">函式，用來從第一個序列的項目以及第二個序列的相符項目集合建立結果項目。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">第一個序列之項目的類型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">第二個序列之項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">索引鍵選取器函式所傳回之索引鍵的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果項目的類型。</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">序列，其中具有透過對兩個序列執行群組聯結所取得之型別 <paramref name="TResult" /> 的項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on key equality and groups the results. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">根據索引鍵相等與否，以平行方式將兩個序列的項目相互關聯，並分組產生的結果。 指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 是用於比較索引鍵。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">要聯結的第一個序列。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">要加入第一個序列的序列。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">用來從第一個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">用來從第二個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">函式，用來從第一個序列的項目以及第二個序列的相符項目集合建立結果項目。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">用來雜湊及比較索引鍵的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">第一個序列之項目的類型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">第二個序列之項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">索引鍵選取器函式所傳回之索引鍵的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果項目的類型。</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">序列，其中具有透過對兩個序列執行群組聯結所取得之型別 <paramref name="TResult" /> 的項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Intersect overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">永遠不可叫用這個 Intersect 多載。 此方法已標記為過時，呼叫它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="second" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">當呼叫這個方法時所發生的例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Intersect overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">永遠不可叫用這個 Intersect 多載。 此方法已標記為過時，呼叫它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="second" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="comparer" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">當呼叫這個方法時所發生的例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set intersection of two parallel sequences by using the default equality comparer to compare values.">使用預設相等比較子來比較值，以便產生兩個平行序列的集合交集。</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">序列，其同時出現在 <paramref name="second" /> 的不同項目將會傳回。</param>
      <param name="second" vsli:raw="A sequence whose distinct elements that also appear in the first sequence will be returned.">序列，其同時出現在第一個序列中的不同項目將會傳回。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">序列，其中包含形成兩個序列之交集的項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set intersection of two parallel sequences by using the specified IEqualityComparer{T} to compare values.">使用指定的 IEqualityComparer{T} 來比較值，以便產生兩個平行序列的集合交集。</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">序列，其同時出現在 <paramref name="second" /> 的不同項目將會傳回。</param>
      <param name="second" vsli:raw="A sequence whose distinct elements that also appear in the first sequence will be returned.">序列，其同時出現在第一個序列中的不同項目將會傳回。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">用來比較值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">序列，其中包含形成兩個序列之交集的項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary vsli:raw="This Join overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">永遠不可叫用這個 Join 多載。 此方法已標記為過時，叫用它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="outer" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="inner" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">當呼叫這個方法時所發生的例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="This Join overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">永遠不可叫用這個 Join 多載。 此方法已標記為過時，叫用它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="outer" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="inner" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="comparer" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">當呼叫這個方法時所發生的例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on matching keys. The default equality comparer is used to compare keys.">根據相符索引鍵，以平行方式將兩個序列的項目相互關聯。 預設的相等比較子是用於比較索引鍵。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">要聯結的第一個序列。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">要加入第一個序列的序列。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">用來從第一個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">用來從第二個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">用來從兩個相符項目建立結果項目的函式。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">第一個序列之項目的類型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">第二個序列之項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">索引鍵選取器函式所傳回之索引鍵的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果項目的類型。</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">序列，其中具有透過對兩個序列執行內部聯結所取得之型別 <paramref name="TResult" /> 的項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on matching keys. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">根據相符索引鍵，以平行方式將兩個序列的項目相互關聯。 指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 是用於比較索引鍵。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">要聯結的第一個序列。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">要加入第一個序列的序列。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">用來從第一個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">用來從第二個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">用來從兩個相符項目建立結果項目的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">用來雜湊及比較索引鍵的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">第一個序列之項目的類型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">第二個序列之項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">索引鍵選取器函式所傳回之索引鍵的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果項目的類型。</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">序列，其中具有透過對兩個序列執行內部聯結所取得之型別 <paramref name="TResult" /> 的項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the last element of a parallel sequence.">傳回平行序列的最後一個項目。</summary>
      <param name="source" vsli:raw="The sequence to return the last element from.">要傳回其最後一個項目的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The value at the last position in the source sequence.">位於來源序列中最後一個位置的值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a parallel sequence that satisfies a specified condition.">傳回平行序列中符合指定之條件的最後一個項目。</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">要從傳回其項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The last element in the sequence that passes the test in the specified predicate function.">序列中通過指定之述詞函式所做測試的最後一個項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element in &lt;paramref name=&quot;source&quot; /&gt; satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="source" /> 中沒有任何項目符合 <paramref name="predicate" /> 中的條件。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.">傳回平行序列的最後一個項目，如果序列中沒有包含任何項目，則傳回預設值。</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">要從傳回其項目的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="default() if the source sequence is empty; otherwise, the last element in the sequence.">如果來源序列是空的，則為 default()，否則為序列中的最後一個項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a parallel sequence that satisfies a condition, or a default value if no such element is found.">傳回平行序列中符合條件的最後一個項目，如果找不到這類項目，則傳回預設值。</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">要從傳回其項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="default() if the sequence is empty or if no elements pass the test in the predicate function; otherwise, the last element that passes the test in the predicate function.">如果序列是空的，或是沒有任何項目通過述詞函式中的測試，則為 default()，否則為通過述詞函式之測試的最後一個項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns an Int64 that represents the total number of elements in a parallel sequence.">傳回平行序列中表示項目總數的 Int64。</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">包含要計算之項目的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The number of elements in the input sequence.">輸入序列中的項目數目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">來源中的項目數目大於 <see cref="F:System.Int64.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The computed result is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">計算的結果大於 <see cref="F:System.Int64.MaxValue" />。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns an Int64 that represents how many elements in a parallel sequence satisfy a condition.">傳回 Int64，其表示平行序列中滿足條件的項目數量。</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">包含要計算之項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">數字，代表序列中符合述詞函式之條件的項目數目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">來源中的項目數目大於 <see cref="F:System.Int64.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The computed result is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">計算的結果大於 <see cref="F:System.Int64.MaxValue" />。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">傳回平行值序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">傳回平行值序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">傳回平行值序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">傳回平行值序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">傳回平行值序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">傳回平行值序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">傳回平行值序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">傳回平行值序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">傳回平行值序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">傳回平行值序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">傳回平行值序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <typeparam name="TSource" vsli:raw="The type of elements in the source sequence.">來源序列中項目的類型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">在序列的每個項目上同時叫用轉換函式，並傳回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">在序列的每個項目上同時叫用轉換函式，並傳回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">在序列的每個項目上同時叫用轉換函式，並傳回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">在序列的每個項目上同時叫用轉換函式，並傳回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">在序列的每個項目上同時叫用轉換函式，並傳回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">在序列的每個項目上同時叫用轉換函式，並傳回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">在序列的每個項目上同時叫用轉換函式，並傳回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">在序列的每個項目上同時叫用轉換函式，並傳回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">在序列的每個項目上同時叫用轉換函式，並傳回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">在序列的每個項目上同時叫用轉換函式，並傳回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">在序列的每個項目上同時叫用轉換函式，並傳回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要判斷最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> 所傳回值的型別。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">傳回平行值序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">傳回平行值序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">傳回平行值序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">傳回平行值序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">傳回平行值序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">傳回平行值序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">傳回平行值序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">傳回平行值序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">傳回平行值序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">傳回平行值序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">傳回平行值序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">在序列的每個項目上同時叫用轉換函式，並傳回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">在序列的每個項目上同時叫用轉換函式，並傳回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">在序列的每個項目上同時叫用轉換函式，並傳回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">在序列的每個項目上同時叫用轉換函式，並傳回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">在序列的每個項目上同時叫用轉換函式，並傳回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">在序列的每個項目上同時叫用轉換函式，並傳回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">在序列的每個項目上同時叫用轉換函式，並傳回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">在序列的每個項目上同時叫用轉換函式，並傳回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">在序列的每個項目上同時叫用轉換函式，並傳回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">在序列的每個項目上同時叫用轉換函式，並傳回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">在序列的每個項目上同時叫用轉換函式，並傳回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要判斷最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> 所傳回值的型別。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 沒有包含任何項目，而且 <paramref name="TSource" /> 是不可為 Null 的實值型別。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
      <summary vsli:raw="Filters the elements of a ParallelQuery based on a specified type.">根據指定類型，篩選 ParallelQuery 的項目。</summary>
      <param name="source" vsli:raw="The sequence with elements to filter.">序列，其中包含要篩選的項目。</param>
      <typeparam name="TResult" vsli:raw="The type to filter the elements of the sequence on.">用來做為序列項目之篩選依據的類型。</typeparam>
      <returns vsli:raw="A sequence that contains elements from the input sequence filtered by type.">序列，其中包含輸入序列中以類型篩選後的項目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in ascending order according to a key.">依據索引鍵，以平行方式來排序按遞增順序之序列中的項目。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">要排序的值序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">其項目已根據索引鍵經過排序的 OrderedParallelQuery{TSource}。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in ascending order by using a specified comparer.">使用指定的比較子來比較值，以平行方式來排序按遞增順序之序列中的項目。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">要排序的值序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">用來比較索引鍵的 IComparer{TKey}。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">其項目已根據索引鍵經過排序的 OrderedParallelQuery{TSource}。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in descending order according to a key.">依據索引鍵，以平行方式來排序按遞減順序之序列中的項目。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">要排序的值序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.">其項目已根據索引鍵經過遞減排序的 OrderedParallelQuery{TSource}。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the elements of a sequence in descending order by using a specified comparer.">使用指定的比較子，依遞減順序排序序列中的項目。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">要排序的值序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">用來比較索引鍵的 IComparer{TKey}。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.">其項目已根據索引鍵經過遞減排序的 OrderedParallelQuery{TSource}。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;KeySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="KeySelector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
      <summary vsli:raw="Generates a parallel sequence of integral numbers within a specified range.">產生在指定之範圍內的整數平行序列。</summary>
      <param name="start" vsli:raw="The value of the first integer in the sequence.">序列中第一個整數的值。</param>
      <param name="count" vsli:raw="The number of sequential integers to generate.">要產生的循序整數數目。</param>
      <returns vsli:raw="An IEnumerable&amp;lt;Int32&amp;gt; in C# or IEnumerable(Of Int32) in Visual Basic that contains a range of sequential integral numbers.">C# 的 IEnumerable&lt;Int32&gt; 或 Visual Basic 的 IEnumerable(Of Int32)，其中包含一個循序整數範圍。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0 -or- &lt;paramref name=&quot;start&quot; /&gt; + &lt;paramref name=&quot;count&quot; /&gt; - 1 is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="count" /> 小於 0 或 <paramref name="start" /> + <paramref name="count" /> - 1 大於 <see cref="F:System.Int32.MaxValue" />。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
      <summary vsli:raw="Generates a parallel sequence that contains one repeated value.">產生包含一個重複值的平行序列。</summary>
      <param name="element" vsli:raw="The value to be repeated.">要重複的值。</param>
      <param name="count" vsli:raw="The number of times to repeat the value in the generated sequence.">這個值要在產生的序列中重複出現的次數。</param>
      <typeparam name="TResult" vsli:raw="The type of the value to be repeated in the result sequence.">要在結果序列中重複出現的值之類型。</typeparam>
      <returns vsli:raw="A sequence that contains a repeated value.">包含重複值的序列。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="count" /> 小於 0。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Inverts the order of the elements in a parallel sequence.">反轉平行序列中項目的排序方向。</summary>
      <param name="source" vsli:raw="A sequence of values to reverse.">要反轉方向的值序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A sequence whose elements correspond to those of the input sequence in reverse order.">其項目對應於輸入序列中反向排序之項目的序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects in parallel each element of a sequence into a new form.">以平行方式，將序列的每個項目規劃成一個新的表單。</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">要對於叫用轉換函式的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements returned by selector.">由選取器傳回的元素類型。</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">序列，其中的項目是對每個 <paramref name="source" /> 項目叫用轉換函式所得到的結果。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
      <summary vsli:raw="Projects in parallel each element of a sequence into a new form by incorporating the element's index.">透過加入項目的索引，以平行方式將序列的每個項目規劃成新的表單。</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">要對於叫用轉換函式的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements returned by selector.">由選取器傳回的元素類型。</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;, based on the index supplied to &lt;paramref name=&quot;selector&quot; /&gt;.">序列，其項目是根據提供給 <paramref name="selector" /> 的索引，對 <paramref name="source" /> 的每個項目叫用轉換函式所得到的結果。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query. This condition might occur in streaming scenarios.">查詢列出的項目超過 <see cref="F:System.Int32.MaxValue" /> 個。 此狀況可能會發生在資料流案例。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects in parallel each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; and flattens the resulting sequences into one sequence.">將序列的每個項目平行投射至 <see cref="T:System.Collections.Generic.IEnumerable`1" />，並將產生的序列簡化成單一序列。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">要投影的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by selector.">由選取器傳回之序列項目的類型。</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.">序列，其項目是在對輸入序列上每個項目叫用一對多轉換函式所得到的結果。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects in parallel each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, and flattens the resulting sequences into one sequence. The index of each source element is used in the projected form of that element.">將序列的每個項目平行投射至 <see cref="T:System.Collections.Generic.IEnumerable`1" />，並將產生的序列簡化成單一序列。 各來源項目的索引是在該項目的投影表單中使用。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">要投影的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by selector.">由選取器傳回之序列項目的類型。</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.">序列，其項目是在對輸入序列上每個項目叫用一對多轉換函式所得到的結果。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">查詢列出的項目超過 <see cref="F:System.Int32.MaxValue" /> 個。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.">將序列的每個項目投影為 <see cref="T:System.Collections.Generic.IEnumerable`1" />、將產生的序列簡化成單一序列，並對其中的每個項目叫用結果選取器函式。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">要投影的值序列。</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">要套用到每個來源項目的轉換函式；此函式的第二個參數代表來源項目的索引。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">函式，用來從第一個序列的項目以及第二個序列的相符項目集合建立結果項目。</param>
      <typeparam name="TSource" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">
        <paramref name="collectionSelector" /> 所收集之中繼項目的型別。</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements in the result sequence.">結果序列中之項目的類型。</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; based on the index supplied to &lt;paramref name=&quot;collectionSelector&quot; /&gt;, and then mapping each of those sequence elements and their corresponding source element to a result element.">序列，其項目是對 <paramref name="collectionSelector" /> (以提供給 <paramref name="source" /> 的索引為基礎) 上每個項目叫用一對多轉換函式 <paramref name="collectionSelector" />，然後再將每個序列項目及其相關的來源項目對應到結果項目所得到的結果。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">查詢列出的項目超過 <see cref="F:System.Int32.MaxValue" /> 個。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein. The index of each source element is used in the intermediate projected form of that element.">將序列的每個項目投影為 <see cref="T:System.Collections.Generic.IEnumerable`1" />、將產生的序列簡化成單一序列，並對其中的每個項目叫用結果選取器函式。 各來源項目的索引是在該項目的中繼投影表單中使用。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">要投影的值序列。</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">要套用到每個來源項目的轉換函式；此函式的第二個參數代表來源項目的索引。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">函式，用來從第一個序列的項目以及第二個序列的相符項目集合建立結果項目。</param>
      <typeparam name="TSource" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">
        <paramref name="collectionSelector" /> 所收集之中繼項目的型別。</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements to return.">要傳回之項目的類型。</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; based on the index supplied to &lt;paramref name=&quot;collectionSelector&quot; /&gt;, and then mapping each of those sequence elements and their corresponding source element to a result element.">序列，其項目是對 <paramref name="collectionSelector" /> (以提供給 <paramref name="source" /> 的索引為基礎) 上每個項目叫用一對多轉換函式 <paramref name="collectionSelector" />，然後再將每個序列項目及其相關的來源項目對應到結果項目所得到的結果。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">查詢列出的項目超過 <see cref="F:System.Int32.MaxValue" /> 個。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This SequenceEqual overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">永遠不可叫用這個 SequenceEqual 多載。 此方法已標記為過時，呼叫它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="second" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Thrown every time this method is called.">每次呼叫這個方法會擲回。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This SequenceEqual overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">永遠不可叫用這個 SequenceEqual 多載。 此方法已標記為過時，呼叫它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="second" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="comparer" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Thrown every time this method is called.">每次呼叫這個方法會擲回。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Determines whether two parallel sequences are equal by comparing the elements by using the default equality comparer for their type.">使用項目之類型的預設相等比較子來比較項目，判斷兩個平行序列是否相等。</summary>
      <param name="first" vsli:raw="A sequence to compare to second.">要和第二個序列比較的序列。</param>
      <param name="second" vsli:raw="A sequence to compare to the first input sequence.">要和第一個輸入序列比較的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果根據其型別的預設相等比較子判斷，兩個來源序列的長度相等，而且其對應項目也相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines whether two parallel sequences are equal by comparing their elements by using a specified IEqualityComparer{T}.">使用指定的 IEqualityComparer{T} 來比較其項目，判斷兩個平行序列是否相等。</summary>
      <param name="first" vsli:raw="A sequence to compare to &lt;paramref name=&quot;second&quot; /&gt;.">要和 <paramref name="second" /> 比較的序列。</param>
      <param name="second" vsli:raw="A sequence to compare to the first input sequence.">要和第一個輸入序列比較的序列。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to use to compare elements.">用來比較項目的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果根據其型別的預設相等比較子判斷，兩個來源序列的長度相等，而且其對應項目也相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.">傳回平行序列的唯一一個項目，如果序列中不是正好一個項目，則擲回例外狀況。</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">要傳回其單一項目的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The single element of the input sequence.">輸入序列的單一項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The input sequence contains more than one element. -or- The input sequence is empty.">輸入序列包含一個以上的項目。 或輸入序列是空的。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a parallel sequence that satisfies a specified condition, and throws an exception if more than one such element exists.">傳回平行序列中符合指定之條件的唯一一個項目，如果有一個以上這類項目，則擲回例外狀況。</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">要傳回其單一項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">用來測試項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The single element of the input sequence that satisfies a condition.">輸入序列中符合條件的單一項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;. -or- More than one element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">沒有任何項目符合 <paramref name="predicate" /> 的條件。 -或- 多個項目符合 <paramref name="predicate" /> 的條件。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.">傳回平行序列的唯一一個項目，如果序列是空白，則為預設值，如果序列中有一個以上的項目，這個方法就會擲回例外狀況。</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">要傳回其單一項目的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The single element of the input sequence, or default() if the sequence contains no elements.">輸入序列的單一項目，如果序列沒有包含任何項目，則為 default()。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; has more than one element.">
        <paramref name="source" /> 具有多個項目。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a parallel sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.">傳回平行序列中符合指定之條件的唯一一個項目，如果沒有這類項目，則為預設值，如果有一個以上的項目符合條件，這個方法就會擲回例外狀況。</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">要傳回其單一項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">用來測試項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The single element of the input sequence that satisfies the condition, or default() if no such element is found.">輸入序列中符合條件的單一項目，如果找不到這類項目，則為 default()。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is empty or multiple elements are returned.">
        <paramref name="source" /> 是空的或傳回多個項目。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Bypasses a specified number of elements in a parallel sequence and then returns the remaining elements.">略過平行序列中指定的項目數目，然後傳回其餘項目。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">傳回項目的序列。</param>
      <param name="count" vsli:raw="The number of elements to skip before returning the remaining elements.">傳回其餘項目之前要略過的項目數目。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements that occur after the specified index in the input sequence.">序列，其中包含出現在輸入序列指定索引處後面的項目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Count is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;">計數大於 <see cref="F:System.Int32.MaxValue" /></exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.">只要指定的條件為 true，便略過平行序列中的項目，然後傳回其餘項目。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">傳回項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.">包含輸入序列項目的序列，從線性系列中未通過述詞指定測試的第一個項目開始。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 Null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements. The element's index is used in the logic of the predicate function.">只要指定的條件為 true，便略過平行序列中的項目，然後傳回其餘項目。 項目的索引是用於述詞功能的邏輯中。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">傳回項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">用來測試各來源項目是否符合條件的函式；此函式的第二個參數代表來源項目的索引。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.">包含輸入序列項目的序列，從線性系列中未通過述詞指定測試的第一個項目開始。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 Null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">查詢列出的項目超過 <see cref="F:System.Int32.MaxValue" /> 個。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">同時計算值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Decimal.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">同時計算值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Double.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">同時計算值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Int32.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">同時計算值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Int64.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">同時計算值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Decimal.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">同時計算值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Double.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">同時計算值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Int32.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">同時計算值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Int64.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">同時計算值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or-  One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Single.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">同時計算值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Single.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Decimal.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Double.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements in the source sequence.">來源序列中項目的類型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Int32.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Int64.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Decimal.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Double.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Int32.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Int64.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or-  One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Single.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">同時計算在輸入序列中各項目上叫用轉換函式後所取得之值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">要計算總和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中預計值的總合。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">總和大於 <see cref="F:System.Single.MaxValue" />。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns a specified number of contiguous elements from the start of a parallel sequence.">從平行序列開頭傳回指定的連續項目數目。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">傳回項目的序列。</param>
      <param name="count" vsli:raw="The number of elements to return.">要傳回的項目數目。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains the specified number of elements from the start of the input sequence.">序列，其中包含輸入序列開頭處指定的項目數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns elements from a parallel sequence as long as a specified condition is true.">只要指定的條件為 true，就會傳回平行序列中的項目。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">傳回項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.">序列，其中包含輸入序列中的項目，而這些項目出現在已無法通過測試的項目前面。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Returns elements from a parallel sequence as long as a specified condition is true. The element's index is used in the logic of the predicate function.">只要指定的條件為 true，就會傳回平行序列中的項目。 項目的索引是用於述詞功能的邏輯中。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">傳回項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">用來測試各來源項目是否符合條件的函式；此函式的第二個參數代表來源項目的索引。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains elements from the input sequence that occur before the element at which the test no longer passes.">序列，其中包含輸入序列中的項目，而這些項目出現在已無法通過測試的項目前面。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by this query.">此查詢已列舉超過 <see cref="F:System.Int32.MaxValue" /> 個項目。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in ascending order according to a key.">依據索引鍵，以平行方式執行按遞增順序之序列中的後續排序作業。</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">包含要排序之項目的 OrderedParallelQuery{TSource}。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">其項目已根據索引鍵經過排序的 OrderedParallelQuery{TSource}。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.">使用指定的比較子來比較值，以平行方式執行按遞增順序之序列中項目的後續排序作業。</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">包含要排序之項目的 OrderedParallelQuery{TSource}。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">用來比較索引鍵的 IComparer{TKey}。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">其項目已根據索引鍵經過排序的 OrderedParallelQuery{TSource}。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in descending order, according to a key.">依據索引鍵，以平行方式執行按遞減順序之序列中的後續排序作業。</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">包含要排序之項目的 OrderedParallelQuery{TSource}。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="A sequence whose elements are sorted descending according to a key.">其項目已根據索引鍵經過遞減排序的的序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.">使用指定的比較子來比較值，以平行方式執行按遞減順序之序列中項目的後續排序作業。</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">包含要排序之項目的 OrderedParallelQuery{TSource}。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">用來比較索引鍵的 IComparer{TKey}。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="A sequence whose elements are sorted descending according to a key.">其項目已根據索引鍵經過遞減排序的的序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Creates an array from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">從 <see cref="T:System.Linq.ParallelQuery`1" /> 建立陣列。</summary>
      <param name="source" vsli:raw="A sequence to create an array from.">要建立陣列的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="An array that contains the elements from the input sequence.">陣列，其中包含輸入序列中的項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function.">根據指定的索引鍵選取器函式，從 <see cref="T:System.Collections.Generic.Dictionary`2" /> 建立 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">要從其中建立 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用來從各個項目擷取索引鍵的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values.">包含索引鍵和值的 <see cref="T:System.Collections.Generic.Dictionary`2" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> 會產生是一個為 Null 參考的索引鍵 (在 Visual Basic 中為 Nothing)。 或 <paramref name="keySelector" /> 產生兩個項目的重複索引鍵。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function and key comparer.">根據指定的索引鍵選取器函式和索引鍵比較子，從 <see cref="T:System.Linq.ParallelQuery`1" /> 建立 <see cref="T:System.Collections.Generic.Dictionary`2" />。</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">要從其中建立 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用來從各個項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values.">包含索引鍵和值的 <see cref="T:System.Collections.Generic.Dictionary`2" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> 會產生是一個為 Null 參考的索引鍵 (在 Visual Basic 中為 Nothing)。 或 <paramref name="keySelector" /> 產生兩個項目的重複索引鍵。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to specified key selector and element selector functions.">根據指定的索引鍵選取器和項目選取器函式，從 <see cref="T:System.Collections.Generic.Dictionary`2" /> 建立 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">要從其中建立 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用來從各個項目擷取索引鍵的函式。</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">用來從每個項目產生結果項目值的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" /> 所傳回值的型別。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">
        <see cref="T:System.Collections.Generic.Dictionary`2" />，其中包含從輸入序列選取之型別 <paramref name="TElement" /> 的值</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 或 <paramref name="elementSelector" /> 是 Null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> 會產生是一個為 Null 參考的索引鍵 (在 Visual Basic 中為 Nothing)。 或 <paramref name="keySelector" /> 產生兩個項目的重複索引鍵。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function, a comparer, and an element selector function.">根據指定的索引鍵選取器函式、比較子和項目選取器函式，從 <see cref="T:System.Collections.Generic.Dictionary`2" /> 建立 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">要從其中建立 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用來從各個項目擷取索引鍵的函式。</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">用來從每個項目產生結果項目值的轉換函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" /> 所傳回值的型別。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">
        <see cref="T:System.Collections.Generic.Dictionary`2" />，其中包含從輸入序列選取之型別 <paramref name="TElement" /> 的值</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 或 <paramref name="elementSelector" /> 是 Null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> 會產生是一個為 Null 參考的索引鍵 (在 Visual Basic 中為 Nothing)。 或 <paramref name="keySelector" /> 產生兩個項目的重複索引鍵。 或者，評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from an &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">從 <see cref="T:System.Linq.ParallelQuery`1" /> 建立 <see cref="T:System.Collections.Generic.List`1" />。</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from.">要從其中建立 <see cref="T:System.Collections.Generic.List`1" /> 的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that contains elements from the input sequence.">
        <see cref="T:System.Collections.Generic.List`1" />，包含輸入序列中的項目。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function.">根據指定的索引鍵選取器函式，從 <see cref="T:System.Linq.ILookup`2" /> 建立 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">要從其中建立 <see cref="T:System.Linq.ILookup`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用來從各個項目擷取索引鍵的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains keys and values.">包含索引鍵和值的 <see cref="T:System.Linq.ILookup`2" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function and key comparer.">根據指定的索引鍵選取器函式和索引鍵比較子，從 <see cref="T:System.Linq.ILookup`2" /> 建立 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">要從其中建立 <see cref="T:System.Linq.ILookup`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用來從各個項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains keys and values.">包含索引鍵和值的 <see cref="T:System.Linq.ILookup`2" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 是 Null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to specified key selector and element selector functions.">根據指定的索引鍵選取器和項目選取器函式，從 <see cref="T:System.Linq.ILookup`2" /> 建立 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">要從其中建立 <see cref="T:System.Linq.ILookup`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用來從各個項目擷取索引鍵的函式。</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">用來從每個項目產生結果項目值的轉換函式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" /> 所傳回值的型別。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">
        <see cref="T:System.Linq.ILookup`2" />，包含從輸入序列選取之 <paramref name="TElement" /> 類型的值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 或 <paramref name="elementSelector" /> 是 Null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function, a comparer and an element selector function.">根據指定的索引鍵選取器函式、比較子和項目選取器函式，從 <see cref="T:System.Linq.ILookup`2" /> 建立 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">要從其中建立 <see cref="T:System.Linq.ILookup`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用來從各個項目擷取索引鍵的函式。</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">用來從每個項目產生結果項目值的轉換函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" /> 所傳回值的型別。</typeparam>
      <returns vsli:raw="A Lookup&amp;lt;(Of &amp;lt;(TKey, TElement&amp;gt;)&amp;gt;) that contains values of type TElement selected from the input sequence.">Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;)，包含從輸入序列中選取之類型 TElement 的值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 或 <paramref name="elementSelector" /> 是 Null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Union overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">永遠不可叫用這個 Union 多載。 此方法已標記為過時，呼叫它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="second" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">當呼叫這個方法時所發生的例外狀況。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Union overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">永遠不可叫用這個 Union 多載。 此方法已標記為過時，呼叫它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="second" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="comparer" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">當呼叫這個方法時所發生的例外狀況。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set union of two parallel sequences by using the default equality comparer.">使用預設相等比較子來比較值，以便產生兩個平行序列的集合等位。</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements form the first set for the union.">序列，其不同的項目構成等位作業的第一個集合。</param>
      <param name="second" vsli:raw="A sequence whose distinct elements form the second set for the union.">序列，其不同的項目構成等位作業的第二個集合。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements from both input sequences, excluding duplicates.">序列，其中包含來自兩個輸入序列的項目，但不包括重複的項目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set union of two parallel sequences by using a specified IEqualityComparer{T}.">使用指定的 IEqualityComparer{T} 來比較值，以便產生兩個平行序列的集合等位。</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements form the first set for the union.">序列，其不同的項目構成等位作業的第一個集合。</param>
      <param name="second" vsli:raw="A sequence whose distinct elements form the second set for the union.">序列，其不同的項目構成等位作業的第二個集合。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">用來比較值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements from both input sequences, excluding duplicates.">序列，其中包含來自兩個輸入序列的項目，但不包括重複的項目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters in parallel a sequence of values based on a predicate.">根據述詞，以平行方式來篩選值的序列。</summary>
      <param name="source" vsli:raw="A sequence to filter.">要篩選的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of source.">來源之項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains elements from the input sequence that satisfy the condition.">序列，包含輸入序列中滿足條件的項目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Filters in parallel a sequence of values based on a predicate. Each element's index is used in the logic of the predicate function.">根據述詞，以平行方式來篩選值的序列。 述詞函式的邏輯中使用各項目的索引。</summary>
      <param name="source" vsli:raw="A sequence to filter.">要篩選的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of source.">來源之項目的類型。</typeparam>
      <returns vsli:raw="A sequence that contains elements from the input sequence that satisfy the condition.">序列，包含輸入序列中滿足條件的項目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">查詢列出的項目超過 <see cref="F:System.Int32.MaxValue" /> 個。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; to associate with the query.">設定要與查詢產生關聯的 <see cref="T:System.Threading.CancellationToken" />。</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">要對其設定選項的 ParallelQuery。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">取消語彙基元。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="A ParallelQuery representing the same query as &lt;paramref name=&quot;source&quot; /&gt;, but with the registered cancellation token.">ParallelQuery 表示與來源相同的查詢，但是具有已註冊的取消語彙基元。</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;paramref name=&quot;cancellationToken&quot; /&gt; has been disposed.">已處置與 <paramref name="cancellationToken" /> 相關聯的 <see cref="T:System.Threading.CancellationTokenSource" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt; is used multiple times in the query.">查詢中多次使用 <paramref name="WithCancellation" />。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Sets the degree of parallelism to use in a query. Degree of parallelism is the maximum number of concurrently executing tasks that will be used to process the query.">設定於查詢中使用的平行處理原則程度。 平行處理原則的程度，就是可在處理查詢時同步執行的最大作業數目。</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the limit on the degrees of parallelism.">ParallelQuery，在其上面可設定平行處理原則程度的限制。</param>
      <param name="degreeOfParallelism" vsli:raw="The degree of parallelism for the query.">查詢的平行處理原則程度。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="ParallelQuery representing the same query as source, with the limit on the degrees of parallelism set.">ParallelQuery 表示與來源相同的查詢，已設定平行處理原則程度的限制。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;degreeOfParallelism&quot; /&gt; is less than 1 or greater than 512.">
        <paramref name="degreeOfParallelism" /> 小於 1 或大於 512。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="WithDegreeOfParallelism is used multiple times in the query.">在查詢中使用多次 WithDegreeOfParallelism。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
      <summary vsli:raw="Sets the execution mode of the query.">設定查詢的執行模式。</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">要對其設定選項的 ParallelQuery。</param>
      <param name="executionMode" vsli:raw="The mode in which to execute the query.">執行查詢時所使用的模式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="ParallelQuery representing the same query as source, but with the registered execution mode.">ParallelQuery 表示與來源相同的查詢，但是具有已註冊的執行模式。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;executionMode&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Linq.ParallelExecutionMode&quot; /&gt; value.">
        <paramref name="executionMode" /> 不是有效的 <see cref="T:System.Linq.ParallelExecutionMode" /> 值。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="WithExecutionMode is used multiple times in the query.">在查詢中使用多次 WithExecutionMode。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
      <summary vsli:raw="Sets the merge options for this query, which specify how the query will buffer output.">設定這個查詢的合併選項，此選項會指定查詢將如何緩衝輸出。</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">要對其設定選項的 ParallelQuery。</param>
      <param name="mergeOptions" vsli:raw="The merge options to set for this query.">要為這個查詢設定的合併選項。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <returns vsli:raw="ParallelQuery representing the same query as source, but with the registered merge options.">ParallelQuery 表示與來源相同的查詢，但是具有已註冊的合併選項。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mergeOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Linq.ParallelMergeOptions&quot; /&gt; value.">
        <paramref name="mergeOptions" /> 不是有效的 <see cref="T:System.Linq.ParallelMergeOptions" /> 值。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;WithMergeOptions&quot; /&gt; is used multiple times in the query.">查詢中多次使用 <paramref name="WithMergeOptions" />。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
      <summary vsli:raw="This Zip overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">永遠不可叫用這個 Zip 多載。 此方法已標記為過時，叫用它時永遠會擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="second" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">不使用這個參數。</param>
      <typeparam name="TFirst" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TSecond" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">不使用這個類型參數。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">這個多載一定會擲回 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">當呼叫這個方法時所發生的例外狀況。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
      <summary vsli:raw="Merges in parallel two sequences by using the specified predicate function.">使用指定的述詞函式，以平行方式來合併兩個序列。</summary>
      <param name="first" vsli:raw="The first sequence to zip.">要壓縮的第一個序列。</param>
      <param name="second" vsli:raw="The second sequence to zip.">要壓縮的第二個序列。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">用來從兩個相符項目建立結果項目的函式。</param>
      <typeparam name="TFirst" vsli:raw="The type of the elements of the first sequence.">第一個序列之項目的類型。</typeparam>
      <typeparam name="TSecond" vsli:raw="The type of the elements of the second sequence.">第二個序列之項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the return elements.">傳回項目的類型。</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing &lt;paramref name=&quot;resultSelector&quot; /&gt; pairwise on two sequences. If the sequence lengths are unequal, this truncates to the length of the shorter sequence.">序列，其中具有透過對兩個序列執行 <paramref name="TResult" /> 配對所取得之型別 <paramref name="resultSelector" /> 的項目。 如果序列長度不相等，這個序列會截斷成為較短序列的長度。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 或 <paramref name="resultSelector" /> 是 Null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已取消查詢且權杖透過 <paramref name="WithCancellation" /> 傳遞。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">評估查詢的期間發生一或多個例外狀況。</exception>
    </member>
    <member name="T:System.Linq.ParallelExecutionMode">
      <summary vsli:raw="The query execution mode is a hint that specifies how the system should handle performance trade-offs when parallelizing queries.">查詢執行模式是一種提示，可指定在平行查詢時系統應該如何處理效能取捨。</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.Default">
      <summary vsli:raw="This is the default setting. PLINQ will examine the query's structure and will only parallelize the query if will likely result in speedup. If the query structure indicates that speedup is not likely to be obtained, then PLINQ will execute the query as an ordinary LINQ to Objects query.">這是預設設定。 PLINQ 會檢查查詢的結構，並且只有在平行處理可加快查詢速度時，才會平行處理查詢。 如果查詢結構顯示平行處理無法加速查詢速度，則 PLINQ 會將查詢當成一般 LINQ to Objects 查詢來執行。</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.ForceParallelism">
      <summary vsli:raw="Parallelize the entire query, even if that means using high-overhead algorithms. Use this flag in cases where you know that parallel execution of the query will result in speedup, but PLINQ in the Default mode would execute it as sequential.">平行處理所有的查詢，即使必須使用高額外負荷的演算法亦然。 如果知道平行執行查詢可加快查詢速度，但預設模式的 PLINQ 會循序執行查詢，請使用這個旗標。</summary>
    </member>
    <member name="T:System.Linq.ParallelMergeOptions">
      <summary vsli:raw="Specifies the preferred type of output merge to use in a query. In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence. This is a hint only, and may not be respected by the system when parallelizing all queries.">指定查詢中慣用的「輸出合併」類型。 換句話說，它表示 PLINQ 應如何將不同資料分割的結果合併回單一結果序列。 這只是提示，而不代表系統會在平行處理所有查詢時採取這種型別。</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.AutoBuffered">
      <summary vsli:raw="Use a merge with output buffers of a size chosen by the system. Results will accumulate into an output buffer before they are available to the consumer of the query.">在配合系統選擇的輸出緩衝區大小情況下，使用合併。 結果將累積到輸出緩衝區內，直到查詢消費者可使用這些結果為止。</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.Default">
      <summary vsli:raw="Use the default merge type, which is AutoBuffered.">使用預設的合併型別，也就是 AutoBuffered。</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.FullyBuffered">
      <summary vsli:raw="Use a merge with full output buffers. The system will accumulate all of the results before making any of them available to the consumer of the query.">在配合完整輸出緩衝區情況下，使用合併。 系統會先累積所有的結果，直到出現可供查詢消費者使用的結果為止。</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.NotBuffered">
      <summary vsli:raw="Use a merge without output buffers. As soon as result elements have been computed, make that element available to the consumer of the query.">在不配合輸出緩衝區情況下，使用合併。 只要一算出結果項目，即可向查詢消費者提供該項目。</summary>
    </member>
    <member name="T:System.Linq.ParallelQuery">
      <summary vsli:raw="Represents a parallel sequence.">表示平行的序列。</summary>
    </member>
    <member name="M:System.Linq.ParallelQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">傳回會逐一查看序列的列舉程式。</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">可逐一查看序列的列舉程式。</returns>
    </member>
    <member name="T:System.Linq.ParallelQuery`1">
      <summary vsli:raw="Represents a parallel sequence.">表示平行的序列。</summary>
      <typeparam name="TSource" vsli:raw="The type of element in the source sequence.">來源序列中項目的型別。</typeparam>
    </member>
    <member name="M:System.Linq.ParallelQuery`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">傳回會逐一查看序列的列舉程式。</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">可逐一查看序列的列舉程式。</returns>
    </member>
  </members>
</doc>