<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>Microsoft.CSharp</name>
  </assembly>
  <members>
    <member name="T:Microsoft.CSharp.RuntimeBinder.Binder">
      <summary vsli:raw="Contains factory methods to create dynamic call site binders for CSharp.">包含建立 CSharp 動態呼叫位置繫結器的 Factory 方法。</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp binary operation binder.">初始化新的 CSharp 二進位運算繫結器。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">用來初始化繫結器的旗標。</param>
      <param name="operation" vsli:raw="The binary operation kind.">二元運算類型。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" />，指定在何處使用此作業。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 執行個體的序列，做為這個運算的引數。</param>
      <returns vsli:raw="A new CSharp binary operation binder.">新的 CSharp 二進位運算繫結器。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)">
      <summary vsli:raw="Initializes a new CSharp convert binder.">初始化新的 CSharp 轉換繫結器。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">用來初始化繫結器的旗標。</param>
      <param name="type" vsli:raw="The type to convert to.">要轉換的目標類型。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" />，指定在何處使用此作業。</param>
      <returns vsli:raw="A new CSharp convert binder.">新的 CSharp 轉換繫結器。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp get index binder.">初始化新的 CSharp get 索引繫結器。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">用來初始化繫結器的旗標。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" />，指定在何處使用此作業。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 執行個體的序列，做為這個運算的引數。</param>
      <returns vsli:raw="A new CSharp get index binder.">新的 CSharp get 索引繫結器。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp get member binder.">初始化新的 CSharp get 成員繫結器。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">用來初始化繫結器的旗標。</param>
      <param name="name" vsli:raw="The name of the member to get.">要取得的成員名稱。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" />，指定在何處使用此作業。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 執行個體的序列，做為這個運算的引數。</param>
      <returns vsli:raw="A new CSharp get member binder.">新的 CSharp get 成員繫結器。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp invoke binder.">初始化新的 CSharp 叫用繫結器。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">用來初始化繫結器的旗標。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" />，指定在何處使用此作業。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 執行個體的序列，做為這個運算的引數。</param>
      <returns vsli:raw="A new CSharp invoke binder.">新的 CSharp 叫用繫結器。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp invoke constructor binder.">初始化新的 CSharp 叫用建構函式繫結器。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">用來初始化繫結器的旗標。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" />，指定在何處使用此作業。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 執行個體的序列，做為這個運算的引數。</param>
      <returns vsli:raw="A new CSharp invoke constructor binder.">新的 CSharp 叫用建構函式繫結器。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp invoke member binder.">初始化新的 CSharp 叫用成員繫結器。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">用來初始化繫結器的旗標。</param>
      <param name="name" vsli:raw="The name of the member to invoke.">要叫用的成員名稱。</param>
      <param name="typeArguments" vsli:raw="The list of type arguments specified for this invoke.">為此叫用指定之型別引數的清單。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" />，指定在何處使用此作業。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 執行個體的序列，做為這個運算的引數。</param>
      <returns vsli:raw="A new CSharp invoke member binder.">新的 CSharp 叫用成員繫結器。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)">
      <summary vsli:raw="Initializes a new CSharp is event binder.">初始化新的 CSharp Is 事件繫結器。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">用來初始化繫結器的旗標。</param>
      <param name="name" vsli:raw="The name of the event to look for.">要尋找之事件的名稱。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" />，指定在何處使用此作業。</param>
      <returns vsli:raw="A new CSharp is event binder.">新的 CSharp is 事件繫結器。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp set index binder.">初始化新的 CSharp set 索引繫結器。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">用來初始化繫結器的旗標。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" />，指定在何處使用此作業。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 執行個體的序列，做為這個運算的引數。</param>
      <returns vsli:raw="A new CSharp set index binder.">新的 CSharp set 索引繫結器。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp set member binder.">初始化新的 CSharp set 成員繫結器。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">用來初始化繫結器的旗標。</param>
      <param name="name" vsli:raw="The name of the member to set.">要設定之成員的名稱。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" />，指定在何處使用此作業。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 執行個體的序列，做為這個運算的引數。</param>
      <returns vsli:raw="A new CSharp set member binder.">新的 CSharp set 成員繫結器。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp unary operation binder.">初始化新的 CSharp 一元運算繫結器。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">用來初始化繫結器的旗標。</param>
      <param name="operation" vsli:raw="The unary operation kind.">一元運算類型。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" />，指定在何處使用此作業。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 執行個體的序列，做為這個運算的引數。</param>
      <returns vsli:raw="A new CSharp unary operation binder.">新的 CSharp 一元運算繫結器。</returns>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo">
      <summary vsli:raw="Represents information about C# dynamic operations that are specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.">表示呼叫位置上特定引數特有的 C# 動態運算的相關資訊。 這個類別的執行個體會由 C# 編譯器產生。</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.Create(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; class.">初始化 <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 類別的新執行個體。</summary>
      <param name="flags" vsli:raw="The flags for the argument.">引數的旗標。</param>
      <param name="name" vsli:raw="The name of the argument, if named; otherwise null.">如果是具名引數，則為引數的名稱，否則為 null。</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; class.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 類別的新執行個體。</returns>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags">
      <summary vsli:raw="Represents information about C# dynamic operations that are specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.">表示呼叫位置上特定引數特有的 C# 動態運算的相關資訊。 這個類別的執行個體會由 C# 編譯器產生。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.Constant">
      <summary vsli:raw="The argument is a constant.">引數為常數。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsOut">
      <summary vsli:raw="The argument is passed to an out parameter.">引數傳遞給 out 參數。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsRef">
      <summary vsli:raw="The argument is passed to a ref parameter.">引數傳遞給 ref 參數。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsStaticType">
      <summary vsli:raw="The argument is a &lt;see cref=&quot;T:System.Type&quot; /&gt; indicating an actual type name used in source. Used only for target objects in static calls.">引數為 <see cref="T:System.Type" />，表示來源中使用的實際型別名稱。 只用於靜態呼叫中的目標物件。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.NamedArgument">
      <summary vsli:raw="The argument is a named argument.">引數為具名引數。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.None">
      <summary vsli:raw="No additional information to represent.">無其他要表示的資訊。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.UseCompileTimeType">
      <summary vsli:raw="The argument's compile-time type should be considered during binding.">繫結期間應該考慮引數的編譯時期型別。</summary>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags">
      <summary vsli:raw="Represents information about C# dynamic operations that are not specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.">表示呼叫位置上非特定引數特有的 C# 動態運算的相關資訊。 這個類別的執行個體會由 C# 編譯器產生。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.BinaryOperationLogical">
      <summary vsli:raw="The binder represents a logical AND or logical OR that is part of a conditional logical operator evaluation.">繫結器表示邏輯 AND 或邏輯 OR，這些是條件邏輯運算子評估的一部分。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.CheckedContext">
      <summary vsli:raw="The evaluation of this binder happens in a checked context.">此繫結器的評估會在檢查的內容中進行。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ConvertArrayIndex">
      <summary vsli:raw="The binder represents an implicit conversion for use in an array creation expression.">繫結器表示陣列建立運算式中使用的隱含轉換。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ConvertExplicit">
      <summary vsli:raw="The binder represents an explicit conversion.">繫結器表示明確轉換。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.InvokeSimpleName">
      <summary vsli:raw="The binder represents an invoke on a simple name.">繫結器表示在簡單名稱上叫用。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.InvokeSpecialName">
      <summary vsli:raw="The binder represents an invoke on a specialname.">繫結器表示在 Specialname 上叫用。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.None">
      <summary vsli:raw="There is no additional information required for this binder.">此繫結器不需要額外的資訊。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ResultDiscarded">
      <summary vsli:raw="The binder is used in a position that does not require a result, and can therefore bind to a void returning method.">繫結器用於不需要結果的位置，因此可以繫結至傳回 Void 的方法。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ResultIndexed">
      <summary vsli:raw="The result of any bind is going to be indexed get a set index or get index binder.">任何繫結的結果都會變成索引的 get 索引或 set 索引，或 get 索引繫結器。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ValueFromCompoundAssignment">
      <summary vsli:raw="The value in this set index or set member comes a compound assignment operator.">此 set 索引或 set 成員中的值為複合指派運算子。</summary>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException">
      <summary vsli:raw="Represents an error that occurs when a dynamic bind in the C# runtime binder is processed.">表示在處理 C# 執行階段繫結器中的動態繫結時所發生的錯誤。</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class.">初始化 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class that has serialized data.">初始化 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> 類別的新執行個體，這個執行個體有序列化資料。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data about the exception being thrown.">物件，存放關於所擲回例外狀況的已序列化物件資料。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">關於來源或目的端的內容資訊。</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class that has a specified error message.">初始化 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> 類別的新執行個體，這個執行個體有指定的錯誤訊息。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">說明例外狀況的訊息。 這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class that has a specified error message and a reference to the inner exception that is the cause of this exception.">初始化 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> 類別的新執行個體，這個執行個體有指定的錯誤訊息和造成這個例外狀況發生之內部例外狀況的參考。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference if no inner exception is specified.">導致目前例外狀況發生的例外狀況，如果沒有指定內部例外狀況則為 null 參考。</param>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException">
      <summary vsli:raw="Represents an error that occurs when a dynamic bind in the C# runtime binder is processed.">表示在處理 C# 執行階段繫結器中的動態繫結時所發生的錯誤。</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class with a system-supplied message that describes the error.">以系統提供的錯誤說明訊息，初始化 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class with serialized data.">使用序列化資料，初始化 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含所擲回之例外狀況的相關序列化物件資料。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">包含有關來源或目的端內容資訊的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class with a specified message that describes the error.">使用指定的錯誤說明訊息，初始化 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">說明例外狀況的訊息。 這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class that has a specified error message and a reference to the inner exception that is the cause of this exception.">初始化 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> 類別的新執行個體，這個執行個體有指定的錯誤訊息和造成這個例外狀況發生之內部例外狀況的參考。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference if no inner exception is specified.">導致目前例外狀況發生的例外狀況，如果沒有指定內部例外狀況則為 null 參考。</param>
    </member>
  </members>
</doc>