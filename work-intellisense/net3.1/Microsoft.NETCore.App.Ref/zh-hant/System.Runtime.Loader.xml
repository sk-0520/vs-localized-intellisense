<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Loader</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Metadata.AssemblyExtensions" />
    <member name="M:System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)">
      <param name="assembly" />
      <param name="blob" />
      <param name="length" />
    </member>
    <member name="T:System.Runtime.Loader.AssemblyDependencyResolver">
      <summary>允許程式根據指定元件的相依性，將元件和原生程式庫解析成路徑。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.#ctor(System.String)">
      <summary>使用元件的組件路徑來初始化 <see cref="T:System.Runtime.Loader.AssemblyDependencyResolver" /> 類別新執行個體。</summary>
      <param name="componentAssemblyPath">元件或外掛程式的受控進入點路徑。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveAssemblyToPath(System.Reflection.AssemblyName)">
      <summary>根據元件的相依性，解析含指定組件名稱的組件路徑。</summary>
      <param name="assemblyName">要解析的組件名稱。</param>
      <returns>具有元件 deps.json 檔案指定名稱的組件路徑；如果組件不在 deps.json 檔案中，或不在 deps.json 所指定的磁碟位置，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveUnmanagedDllToPath(System.String)">
      <summary>根據元件的相依性，解析具有指定名稱的原生程式庫路徑。</summary>
      <param name="unmanagedDllName">要解析的原生程式庫名稱。</param>
      <returns>具有元件 deps.json 檔案和目前執行階段識別碼指定名稱的原生程式庫路徑；如果組件不在 deps.json 檔案中，或不在 deps.json 所指定的磁碟位置，則為 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext">
      <summary>代表組件載入範圍的執行階段概念。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor">
      <summary>初始化 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.Boolean)">
      <summary>以指示是否啟用卸載的值來初始化 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 類別的新執行個體。</summary>
      <param name="isCollectible">
        <see langword="true" /> 會啟用 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" />；否則為 <see langword="false" />。 預設值是 <see langword="false" />，因為沒有與啟用卸載建立關聯的效能成本。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.String,System.Boolean)">
      <summary>以指示是否啟用卸載的名稱和值來初始化 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 類別的新執行個體。</summary>
      <param name="name">新執行個體中的 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.Name" /> 值。 其值可以是 <see langword="null" />。</param>
      <param name="isCollectible">
        <see langword="true" /> 會啟用 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" />；否則為 <see langword="false" />。 預設值是 <see langword="false" />，因為沒有與啟用卸載建立關聯的效能成本。</param>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.All">
      <summary>傳回所有 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 執行個體的集合。</summary>
      <returns>所有 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 實例的集合。</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Assemblies">
      <summary>傳回載入至 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 之 <see cref="T:System.Reflection.Assembly" /> 執行個體的集合。</summary>
      <returns>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />中載入之 <see cref="T:System.Reflection.Assembly" /> 實例的集合。</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope">
      <summary>提供專供 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> 使用的傳回型別。 原定在 <see langword="using" /> 區塊中作為 <see cref="T:System.IDisposable" /> 使用。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope.Dispose">
      <summary>將 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 設定為傳回此執行個體之 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> 呼叫前面的值。</summary>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext">
      <summary>取得 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> 最近呼叫所設定的 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。</summary>
      <returns>
        <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />的最新呼叫所設定的 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。 這個值可以是 <see langword="null" />。 此值會儲存在 <see cref="T:System.Threading.AsyncLocal`1" />中，因此值在每個非同步內容中都是唯一的。</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Default">
      <summary>取得預設 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。 預設內容包含主應用程式組件及其靜態相依性。</summary>
      <returns>預設組件載入內容。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection">
      <summary>將 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 設定為 <see langword="this" /><see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。</summary>
      <returns>還原 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 上一個值的物件。 原定在 <see langword="using" /> 區塊中作為 <see cref="T:System.IDisposable" /> 使用。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection(System.Reflection.Assembly)">
      <summary>將 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 設定為載入組件的 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。</summary>
      <param name="activating">用來判斷所要求 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 執行個體的組件。</param>
      <returns>還原 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 上一個值的物件。 原定在 <see langword="using" /> 區塊中作為 <see cref="T:System.IDisposable" /> 使用。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)">
      <summary>取得組件路徑的 <see cref="T:System.Reflection.AssemblyName" />。</summary>
      <param name="assemblyPath">組件的路徑。</param>
      <returns>物件，其包含組件 (位於 <paramref name="assemblyPath" />) 的完整剖析顯示名稱。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyPath" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">找不到組件。</exception>
      <exception cref="T:System.BadImageFormatException">此組件不是有效的組件。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)">
      <summary>取得 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />，其中包含指定的 <see cref="T:System.Reflection.Assembly" />。</summary>
      <param name="assembly">組件。</param>
      <returns>包含 <paramref name="assembly" /> 的組件載入內容。 如果執行階段未提供 <paramref name="assembly" />，則這個方法會傳回 Null。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.IsCollectible">
      <summary>取得指出此 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 是否為可回收的值。</summary>
      <returns>
        <see langword="true" /> 此 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 是否為可回收;否則，<see langword="false" />。 如果未在此函式中指定值，則會 <see langword="false" />值。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)">
      <summary>在衍生類別中覆寫時，允許組件根據其 <see cref="T:System.Reflection.AssemblyName" /> 解析並載入。</summary>
      <param name="assemblyName">描述要載入之組件的物件。</param>
      <returns>載入的組件或 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)">
      <summary>解析並載入指定為 <see cref="T:System.Reflection.AssemblyName" /> 的組件。</summary>
      <param name="assemblyName">物件，其描述要載入的組件。</param>
      <returns>載入的組件或 throws。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">找不到 <paramref name="assemblyName" />。</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> 不是有效的組件。</exception>
      <exception cref="T:System.IO.FileLoadException">載入的組件或模組不符合 <paramref name="assemblyName" />。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)">
      <summary>載入指定路徑上組件檔案的內容。</summary>
      <param name="assemblyPath">要載入的完整檔案路徑。</param>
      <returns>載入的組件。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyPath" /> 引數不是絕對路徑。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyPath" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileLoadException">無法載入找到的檔案。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyPath" /> 參數為空字串 ("") 或不存在。</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyPath" /> 不是有效的組件。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String,System.String)">
      <summary>載入指定路徑上受控組件檔案的原生映像內容。</summary>
      <param name="nativeImagePath">要載入的完整檔案路徑。</param>
      <param name="assemblyPath">所要載入檔案之 IL 版本的完整檔案路徑或 <see langword="null" />。</param>
      <returns>載入的組件。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="nativeImagePath" /> 引數不是絕對路徑。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyPath" /> 引數不是絕對路徑。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nativeImagePath" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileLoadException">無法載入找到的檔案。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="nativeImagePath" /> 參數為空字串 ("") 或不存在。</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyPath" /> 不是有效的組件。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)">
      <summary>載入包含受控組件的通用物件檔案格式 (COFF) 映像組件。</summary>
      <param name="assembly">位元組陣列，該陣列是包含受控組件的 COFF 影像。</param>
      <returns>載入的組件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assembly" /> 不是有效的組件。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream,System.IO.Stream)">
      <summary>載入包含受控組件的通用物件檔案格式 (COFF) 映像組件，並選擇性地包含組件的符號。</summary>
      <param name="assembly">位元組陣列，該陣列是包含受控組件的 COFF 影像。</param>
      <param name="assemblySymbols">位元組陣列，包含表示組件符號的未經處理位元組。</param>
      <returns>載入的組件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assembly" /> 不是有效的組件。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)">
      <summary>允許衍生類別依名稱載入非受控程式庫。</summary>
      <param name="unmanagedDllName">非受控程式庫的名稱。 這通常是沒有路徑或副檔名的檔案名稱。</param>
      <returns>所載入程式庫的控制代碼或 <see cref="F:System.IntPtr.Zero" />。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)">
      <summary>從指定的路徑載入非受控程式庫。</summary>
      <param name="unmanagedDllPath">非受控程式庫的路徑。</param>
      <returns>已載入的原生程式庫作業系統控點。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unmanagedDllPath" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="unmanagedDllPath" /> 引數為空，或不是絕對路徑。</exception>
      <exception cref="T:System.DllNotFoundException">找不到程式庫。</exception>
      <exception cref="T:System.BadImageFormatException">程式庫無效。</exception>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Name">
      <summary>取得 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 的名稱。</summary>
      <returns>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 的名稱。 其值可以是 <see langword="null" />。</returns>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Resolving">
      <summary>若嘗試載入至這項組件載入內容，解析組件失敗時就會發生這種情況。</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll">
      <summary>發生於原生程式庫解析失敗時。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)">
      <summary>設定儲存此載入內容中最佳化設定檔的根路徑。</summary>
      <param name="directoryPath">儲存最佳化設定檔的目錄完整路徑。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)">
      <summary>為指定的設定檔啟動設定檔最佳化。</summary>
      <param name="profile">最佳化設定檔的名稱。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ToString">
      <summary>傳回此載入內容的字串表示。</summary>
      <returns>此載入內容的字串表示。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Unload">
      <summary>起始這個 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 的卸載。</summary>
      <exception cref="T:System.InvalidOperationException">不允許卸載。</exception>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Unloading">
      <summary>發生於卸載 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 時。</summary>
    </member>
  </members>
</doc>