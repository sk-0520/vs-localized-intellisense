<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Channels</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Channels.BoundedChannelFullMode">
      <summary vsli:raw="Specifies the behavior to use when writing to a bounded channel that is already full.">Gibt das Verhalten an, das beim Schreiben in einen gebundenen Kanal verwendet werden soll, der bereits voll ist.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropNewest">
      <summary vsli:raw="Removes and ignores the newest item in the channel in order to make room for the item being written.">Entfernt und ignoriert das neueste Element im Kanal, um Platz für das zu schreibende Element zu schaffen.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropOldest">
      <summary vsli:raw="Removes and ignores the oldest item in the channel in order to make room for the item being written.">Entfernt und ignoriert das älteste Element im Kanal, um Platz für das zu schreibende Element zu schaffen.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropWrite">
      <summary vsli:raw="Drops the item being written.">Löscht das Element, das geschrieben wird.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.Wait">
      <summary vsli:raw="Waits for space to be available in order to complete the write operation.">Wartet darauf, dass Platz verfügbar ist, um den Schreibvorgang abzuschließen.</summary>
    </member>
    <member name="T:System.Threading.Channels.BoundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of bounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">Bietet Optionen, die das Verhalten von gebundenen <see cref="T:System.Threading.Channels.Channel`1" />-Instanzen steuern.</summary>
    </member>
    <member name="M:System.Threading.Channels.BoundedChannelOptions.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the options.">Initialisiert die Optionen.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the bounded channel may store.">Die maximale Anzahl von Elementen, die der gebunden Kanal speichern kann.</param>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.Capacity">
      <summary vsli:raw="Gets or sets the maximum number of items the bounded channel may store.">Ruft die maximale Anzahl von Elementen ab, die der gebunden Kanal speichern kann, bzw. legt diese fest.</summary>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.FullMode">
      <summary vsli:raw="Gets or sets the behavior incurred by write operations when the channel is full.">Ruft das durch Schreibvorgänge ausgelöste Verhalten ab, wenn der Kanal voll ist, bzw. legt dieses fest.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel">
      <summary vsli:raw="Provides static methods for creating channels.">Stellt statische Methoden zum Erstellen von Kanälen bereit.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Int32)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">Erstellt einen Kanal mit der angegebenen maximalen Kapazität.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the channel may store.">Die maximale Anzahl von Elementen, die der Kanal speichern kann.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Gibt den Typ der Daten im Kanal an.</typeparam>
      <returns vsli:raw="The created channel.">Der erstellte Kanal.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Threading.Channels.BoundedChannelOptions)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">Erstellt einen Kanal mit der angegebenen maximalen Kapazität.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">Optionen, die das Verhalten des Kanals steuern.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Gibt den Typ der Daten im Kanal an.</typeparam>
      <returns vsli:raw="The created channel.">Der erstellte Kanal.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1">
      <summary vsli:raw="Creates an unbounded channel usable by any number of readers and writers concurrently.">Erstellt einen ungebundenen Kanal, der von einer beliebigen Anzahl von Lesern und Schreibern gleichzeitig genutzt werden kann.</summary>
      <typeparam name="T" vsli:raw="The type of data in the channel.">Der Typ der Daten im Kanal.</typeparam>
      <returns vsli:raw="The created channel.">Der erstellte Kanal.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1(System.Threading.Channels.UnboundedChannelOptions)">
      <summary vsli:raw="Creates an unbounded channel subject to the provided options.">Erstellt einen ungebundenen Kanal gemäß den angegebenen Optionen.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">Optionen, die das Verhalten des Kanals steuern.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Gibt den Typ der Daten im Kanal an.</typeparam>
      <returns vsli:raw="The created channel.">Der erstellte Kanal.</returns>
    </member>
    <member name="T:System.Threading.Channels.Channel`1">
      <summary vsli:raw="Provides a base class for channels that support reading and writing elements of type &lt;typeparamref name=&quot;T&quot; /&gt;.">Stellt eine Basisklasse für Kanäle bereit, die das Lesen und Schreiben von Elementen des Typs <typeparamref name="T" /> unterstützen.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data readable and writable in the channel.">Gibt den Typ der Daten an, die im Kanal lesbar und schreibbar sind.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`1.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; class.">Initialisiert eine Instanz der <see cref="T:System.Threading.Channels.Channel`1" />-Klasse.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel`2">
      <summary vsli:raw="Provides a base class for channels that support reading elements of type &lt;typeparamref name=&quot;TRead&quot; /&gt; and writing elements of type &lt;typeparamref name=&quot;TWrite&quot; /&gt;.">Stellt eine Basisklasse für Kanäle bereit, die das Lesen von Elementen des Typs <typeparamref name="TRead" /> und das Schreiben von Elementen des Typs <typeparamref name="TWrite" /> unterstützen.</summary>
      <typeparam name="TWrite" vsli:raw="Specifies the type of data that may be written to the channel.">Gibt den Typ der Daten an, die möglicherweise in den Kanal geschrieben werden.</typeparam>
      <typeparam name="TRead" vsli:raw="Specifies the type of data that may be read from the channel.">Gibt den Datentyp an, der vom Kanal gelesen werden kann.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; class.">Initialisiert eine Instanz der <see cref="T:System.Threading.Channels.Channel`2" />-Klasse.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelReader{`1}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its readable half.">Implizite Umwandlung von einem <see cref="T:System.Threading.Channels.Channel`2" /> in seine lesbare Hälfte.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">Der <see cref="T:System.Threading.Channels.Channel`2" />, der umgewandelt wird.</param>
      <returns vsli:raw="The readable half.">Die lesbare Hälfte.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelWriter{`0}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its writable half.">Implizite Umwandlung von einem <see cref="T:System.Threading.Channels.Channel`2" /> in seine beschreibbare Hälfte.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">Der <see cref="T:System.Threading.Channels.Channel`2" />, der umgewandelt wird.</param>
      <returns vsli:raw="The writable half.">Die beschreibbare Hälfte.</returns>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Reader">
      <summary vsli:raw="Gets the readable half of this channel.">Ruft den lesbaren Teil dieses Kanals ab.</summary>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Writer">
      <summary vsli:raw="Gets the writable half of this channel.">Ruft den schreibbaren Teil dieses Kanals ab.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelClosedException">
      <summary vsli:raw="Exception thrown when a channel is used after it's been closed.">Die Ausnahme wird ausgelöst, wenn ein Kanal verwendet wird, nachdem er geschlossen wurde.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Channels.ChannelClosedException" />-Klasse.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Channels.ChannelClosedException" />-Klasse.</summary>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">Die Ausnahme, die diese Ausnahme verursacht hat.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Channels.ChannelClosedException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Channels.ChannelClosedException" />-Klasse.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Die Meldung, in der der Fehler beschrieben wird.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Channels.ChannelClosedException" />-Klasse.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Die Meldung, in der der Fehler beschrieben wird.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">Die Ausnahme, die diese Ausnahme verursacht hat.</param>
    </member>
    <member name="T:System.Threading.Channels.ChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of channel instances.">Bietet Optionen, die das Verhalten von Kanalinstanzen steuern.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelOptions.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelOptions&quot; /&gt; class.">Initialisiert eine Instanz der <see cref="T:System.Threading.Channels.ChannelOptions" />-Klasse.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if operations performed on a channel may synchronously invoke continuations subscribed to&#xA;            notifications of pending async operations; &lt;see langword=&quot;false&quot; /&gt; if all continuations should be invoked asynchronously.">
        <see langword="true" />, wenn Operationen, die auf einem Kanal ausgeführt werden, synchron Fortsetzungen aufrufen können, die abonniert sind, um Benachrichtigungen über anstehende asynchrone Operationen zu erhalten; <see langword="false" />, wenn alle Fortsetzungen asynchron aufgerufen werden sollen.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleReader">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; readers from the channel guarantee that there will only ever be at most one read operation at a time;&#xA;            &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">
        <see langword="true" />-Leser aus dem Kanal garantieren, dass es immer nur maximal einen Lesevorgang auf einmal geben wird; <see langword="false" />, wenn keine solche Einschränkung gewährleistet ist.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleWriter">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers to the channel guarantee that there will only ever be at most one write operation&#xA;            at a time; &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">
        <see langword="true" />-Schreiber aus dem Kanal garantieren, dass es immer nur maximal einen Schreibvorgang auf einmal geben wird; <see langword="false" />, wenn keine solche Einschränkung gewährleistet ist.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelReader`1">
      <summary vsli:raw="Provides a base class for reading from a channel.">Stellt eine Basisklasse zum Lesen aus einen Kanal bereit.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be read from the channel.">Gibt den Datentyp an, der vom Kanal gelesen werden kann.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelReader`1&quot; /&gt; class.">Initialisiert eine Instanz der <see cref="T:System.Threading.Channels.ChannelReader`1" />-Klasse.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelReader`1.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that completes when no more data will ever&#xA;            be available to be read from this channel.">Ruft eine <see cref="T:System.Threading.Tasks.Task" /> ab, die abgeschlossen wird, wenn keine weiteren Daten mehr aus dem Kanal gelesen werden können.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Collections.Generic.IAsyncEnumerable`1&quot; /&gt; that enables reading all of the data from the channel.">Es erstellt eine <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" />, die das Lesen aller Daten aus dem Kanal ermöglicht.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to use to cancel the enumeration. If data is immediately ready for reading, then that data may be yielded even after cancellation has been requested.">Das Abbruchtoken zum Abbrechen der Enumeration.</param>
      <returns vsli:raw="The created async enumerable.">Die erstellte asynchrone Enumerable.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads an item from the channel.">Liest asynchron ein Element aus dem Kanal.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the read operation.">Ein zum Beenden des Lesevorgangs verwendetes <see cref="T:System.Threading.CancellationToken" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that represents the asynchronous read operation.">Eine <see cref="T:System.Threading.Tasks.ValueTask`1" />, die den asynchronen Lesevorgang darstellt.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.TryRead(`0@)">
      <summary vsli:raw="Attempts to read an item from the channel.">Versucht, ein Element aus dem Kanal zu lesen.</summary>
      <param name="item" vsli:raw="The read item, or a default value if no item could be read.">Das read-Element oder ein Standardwert, wenn kein Element gelesen werden konnte.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Element gelesen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when data is available to read.">Gibt eine <see cref="T:System.Threading.Tasks.ValueTask`1" /> zurück, die abgeschlossen wird, wenn Daten zum Lesen verfügbar sind.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">Ein zum Beenden des Wartevorgangs verwendetes <see cref="T:System.Threading.CancellationToken" />.</param>
      <returns vsli:raw="&lt;para&gt;A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when data is available to read&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further data will ever be available to be read due to the channel completing successfully.&lt;/para&gt;&lt;para&gt;If the channel completes with an exception, the task will also complete with an exception.&lt;/para&gt;">Ein <see cref="T:System.Threading.Tasks.ValueTask`1" />, der mit einem Ergebnis <see langword="true" /> abgeschlossen wird, wenn Daten zum Lesen verfügbar sind, oder mit einem Ergebnis <see langword="false" />, wenn keine weiteren Daten mehr aufgrund des erfolgreichen Abschluss des Kanals gelesen werden können.
Wenn der Kanal mit einer Ausnahme abgeschlossen wird, wird der Task ebenfalls mit einer Ausnahme abgeschlossen.
.</returns>
    </member>
    <member name="T:System.Threading.Channels.ChannelWriter`1">
      <summary vsli:raw="Provides a base class for writing to a channel.">Stellt eine Basisklasse zum Schreiben in einen Kanal bereit.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be written to the channel.">Gibt den Typ der Daten an, die möglicherweise in den Kanal geschrieben werden.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelWriter`1&quot; /&gt; class.">Initialisiert eine Instanz der <see cref="T:System.Threading.Channels.ChannelWriter`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)">
      <summary vsli:raw="Mark the channel as being complete, meaning no more items will be written to it.">Markiert den Kanal als abgeschlossen, d.h. es werden keine weiteren Elemente geschrieben.</summary>
      <param name="error" vsli:raw="Optional Exception indicating a failure that's causing the channel to complete.">Optional weißt die Ausnahme auf einen Fehler hin, durch den der Kanal beendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The channel has already been marked as complete.">Der Channel wurde bereits als abgeschlossen markiert.</exception>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)">
      <summary vsli:raw="Attempts to mark the channel as being completed, meaning no more data will be written to it.">Versucht, den Kanal als abgeschlossen zu markieren, d.h. es werden keine weiteren Daten geschrieben.</summary>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; indicating the failure causing no more data to be written, or null for success.">
        <see cref="T:System.Exception" /> weißt auf einen Fehler hin, der dazu führt, dass keine weiteren Daten geschrieben werden, oder auf Null für den Erfolg.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this operation successfully completes the channel; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the channel could not be marked for completion,&#xA;            for example due to having already been marked as such, or due to not supporting completion.&#xA;          .">
        <see langword="true" />, wenn dieser Vorgang den Kanal erfolgreich beendet; andernfalls <see langword="false" />, wenn der Kanal nicht für den Abschluss markiert werden konnte, z.B. weil er bereits als solcher gekennzeichnet wurde oder weil er den Abschluss nicht unterstützt.
.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryWrite(`0)">
      <summary vsli:raw="Attempts to write the specified item to the channel.">Versucht, das angegebene Element an den Kanal zu schreiben.</summary>
      <param name="item" vsli:raw="The item to write.">Das zu schreibende Element.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item was written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Element geschrieben wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when space is available to write an item.">Gibt eine <see cref="T:System.Threading.Tasks.ValueTask`1" /> zurück, die abgeschlossen wird, wenn Speicherplatz zum Schreiben eines Elements verfügbar ist.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">Ein zum Beenden des Wartevorgangs verwendetes <see cref="T:System.Threading.CancellationToken" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when space is available to write an item&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further writing will be permitted.">Eine <see cref="T:System.Threading.Tasks.ValueTask`1" />, die mit einem <see langword="true" />-Ergebnis abgeschlossen wird, wenn Speicherplatz zum Schreiben eines Elements verfügbar ist, oder mit einem <see langword="false" />-Ergebnis, wenn keine weiteren Schreibvorgänge zulässig sind.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes an item to the channel.">Schreibt asynchron ein Element in den Kanal.</summary>
      <param name="item" vsli:raw="The value to write to the channel.">Der Wert zum Schreiben im Kanal.</param>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the write operation.">Ein zum Abbrechen des Schreibvorgangs verwendetes <see cref="T:System.Threading.CancellationToken" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; that represents the asynchronous write operation.">Eine <see cref="T:System.Threading.Tasks.ValueTask" />, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="T:System.Threading.Channels.UnboundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of unbounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">Bietet Optionen, die das Verhalten von ungebundenen <see cref="T:System.Threading.Channels.Channel`1" />-Instanzen steuern.</summary>
    </member>
    <member name="M:System.Threading.Channels.UnboundedChannelOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.UnboundedChannelOptions&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Channels.UnboundedChannelOptions" />-Klasse.</summary>
    </member>
  </members>
</doc>