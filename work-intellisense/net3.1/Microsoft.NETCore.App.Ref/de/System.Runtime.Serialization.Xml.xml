<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary vsli:raw="Provides a mechanism for dynamically mapping types to and from &lt;see langword=&quot;xsi:type&quot; /&gt; representations during serialization and deserialization.">Stellt einen Mechanismus bereit, mit dem bei der Serialisierung und der Deserialisierung Typen <see langword="xsi:type" />-Darstellungen zugeordnet werden können bzw. diese Zuordnung aufgehoben werden kann.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DataContractResolver" />-Klasse.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Override this method to map the specified &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace to a data contract type during deserialization.">Überschreiben diese Methode, um den angegebenen <see langword="xsi:type" />-Name und -Namespace bei der Deserialisierung einem Datenvertragstyp zuzuordnen.</summary>
      <param name="typeName" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; name to map.">Der zuzuordnende <see langword="xsi:type" />-Name.</param>
      <param name="typeNamespace" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; namespace to map.">Der zuzuordnende <see langword="xsi:type" />-Namespace.</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">Der im Datenvertrag deklarierte Typ.</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">Der Resolver des bekannten Typs.</param>
      <returns vsli:raw="The type the &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace is mapped to.">Der Typ, dem der <see langword="xsi:type" />-Name und -Namespace zugeordnet ist.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Override this method to map a data contract type to an &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace during serialization.">Überschreiben diese Methode, um einem <see langword="xsi:type" />-Name und -Namespace bei der Serialisierung einen Datenvertragstyp zuzuordnen.</summary>
      <param name="type" vsli:raw="The type to map.">Der zuzuordnende Typ.</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">Der im Datenvertrag deklarierte Typ.</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">Der Resolver des bekannten Typs.</param>
      <param name="typeName" vsli:raw="The xsi:type name.">Der xsi:type-Name.</param>
      <param name="typeNamespace" vsli:raw="The xsi:type namespace.">Der xsi:type-Namespace.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if mapping succeeded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Zuordnung erfolgreich war, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary vsli:raw="Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited.">Serialisiert oder deserialisiert mithilfe eines bereitgestellten Datenvertrags eine Instanz eines Typs in einen XML-Stream oder in ein XML-Dokument. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DataContractSerializer" />-Klasse, um ein Objekt des genannten Typs zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DataContractSerializer" />-Klasse, um ein Objekt des genannten Typs sowie eine Auflistung bekannter Typen, die im Objektdiagramm vorhanden sind, zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt des Typs <see cref="T:System.Type" />, das die in dem Objektdiagramm enthaltenen Typen angibt (falls vorhanden).</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and settings.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DataContractSerializer" />-Klasse, um ein Objekt des genannten Typs und Einstellungen zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type" vsli:raw="The type of the instance to serialize or deserialize.">Der Typ der Instanz, die serialisiert oder deserialisiert werden soll.</param>
      <param name="settings" vsli:raw="The serializer settings.">Die Einstellungen des Serialisierungsprogramms</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DataContractSerializer" />-Klasse, um ein Objekt des genannten Typs mithilfe des bereitgestellten XML-Stammelements und -Namespace zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">Der Name des XML-Elements, das den zu serialisierenden bzw. zu deserialisierenden Inhalt enthält.</param>
      <param name="rootNamespace" vsli:raw="The namespace of the XML element that encloses the content to serialize or deserialize.">Der Namespace des XML-Elements, das den zu serialisierenden bzw. zu deserialisierenden Inhalt enthält.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DataContractSerializer" />-Klasse, um ein Objekt des genannten Typs zu serialisieren bzw. zu deserialisieren. Darüber hinaus gibt diese Methode das XML-Stammelement und den Namespace in zwei Zeichenfolgenparametern sowie eine Liste bekannter Typen, die in dem Objektdiagramm ggf. enthalten sind, an.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="rootName" vsli:raw="The root element name of the content.">Der Stammelementname des Inhalts.</param>
      <param name="rootNamespace" vsli:raw="The namespace of the root element.">Der Namespace des Stammelements.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt des Typs <see cref="T:System.Type" />, das die in dem Objektdiagramm enthaltenen Typen angibt (falls vorhanden).</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DataContractSerializer" />-Klasse, um ein Objekt des genannten Typs mithilfe des XML-Stammelements und -Namespaces zu serialisieren bzw. zu deserialisieren, das/der durch die Parameter des Typs <see cref="T:System.Xml.XmlDictionaryString" /> angegeben wird.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Ein <see cref="T:System.Xml.XmlDictionaryString" />-Objekt, das den Namen des Stammelements für den Inhalt enthält.</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">Ein <see cref="T:System.Xml.XmlDictionaryString" />-Objekt, das den Namespace des Stammelements enthält.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; parameters as well as a list of known types that may be present in the object graph.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DataContractSerializer" />-Klasse, um ein Objekt des genannten Typs zu serialisieren bzw. zu deserialisieren. Darüber hinaus gibt diese Methode das XML-Stammelement und den Namespace in zwei <see cref="T:System.Xml.XmlDictionaryString" />-Parametern sowie eine Liste bekannter Typen, die in dem Objektdiagramm ggf. enthalten sind, an.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Ein <see cref="T:System.Xml.XmlDictionaryString" />-Objekt, das den Namen des Stammelements für den Inhalt enthält.</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">Ein <see cref="T:System.Xml.XmlDictionaryString" />-Objekt, das den Namespace des Stammelements enthält.</param>
      <param name="knownTypes" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the known types that may be present in the object graph.">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt des Typs <see cref="T:System.Type" />, das die im Objektdiagramm enthaltenen bekannten Typen angibt (falls vorhanden).</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
      <summary vsli:raw="Gets the component used to dynamically map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known contract types.">Ruft die Komponente für die dynamische Zuordnung von <see langword="xsi:type" />-Deklarationen zu bekannten Vertragstypen ab.</summary>
      <returns vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">Eine Implementierung der <see cref="T:System.Runtime.Serialization.DataContractResolver" />-Klasse.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Ruft einen Wert ab, der angibt, ob die von einer Erweiterung der Klasse bereitgestellten Daten ignoriert werden sollen, wenn die Klasse serialisiert oder deserialisiert wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to omit the extension data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Erweiterungsdaten ignoriert werden sollen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned on an object that can be deserialized.">Bestimmt, ob der <see cref="T:System.Xml.XmlDictionaryReader" /> auf einem Objekt positioniert ist, das deserialisiert werden kann.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">Ein <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt, das zum Lesen des XML-Streams verwendet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Reader sich am Startelement des zu lesenden Streams befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">Bestimmt, ob der <see cref="T:System.Xml.XmlReader" /> auf einem Objekt positioniert ist, das deserialisiert werden kann.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">Das <see cref="T:System.Xml.XmlReader" />-Objekt, das zum Lesen des XML-Streams verwendet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Reader sich am Startelement des zu lesenden Streams befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">Ruft eine Auflistung der Typen in einem Objektdiagramm ab, die mithilfe einer Instanz des <see cref="T:System.Runtime.Serialization.DataContractSerializer" />-Objekts serialisiert werden.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; constructor.">Ein <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Objekt, das die erwarteten Typen enthält, die als bekannte Typen an den <see cref="T:System.Runtime.Serialization.DataContractSerializer" />-Konstruktor übergeben werden.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph to serialize or deserialize.">Ruft die maximale Anzahl von Elementen in einem Objektdiagramm ab, die serialisiert oder deserialisiert werden.</summary>
      <returns vsli:raw="The maximum number of items to serialize or deserialize. The default is &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Die maximale Anzahl von Elementen, die serialisiert oder deserialisiert werden sollen. Die Standardeinstellung ist <see cref="F:System.Int32.MaxValue" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">Die Anzahl der Elemente ist größer als der Maximalwert.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary vsli:raw="Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">Ruft einen Wert ab, der angibt, ob zum Beibehalten von Objektverweisdaten nicht standardmäßige XML-Konstrukte verwendet werden sollen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um die Verweise beizubehalten, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">Liest den XML-Stream mit einem <see cref="T:System.Xml.XmlDictionaryReader" /> und gibt das deserialisierte Objekt zurück. Zudem wird angegeben, ob vor dem Lesen des Objektwerts der Objektname überprüft wird.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">Das <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt, das zum Lesen des XML-Streams verwendet wird.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um zu überprüfen, ob der Name des Objekts mit dem im Konstruktor angegebenen Wert des Stammnamens übereinstimmt, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">Für den <paramref name="verifyObjectName" />-Parameter wurde <see langword="true" /> festgelegt, und der Name und Namespace des Elements stimmen nicht mit den im Konstruktor angegebenen Werten überein.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Reads an XML document or document stream and returns the deserialized object.  The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">Liest ein XML-Dokument oder einen XML-Dokumentstream und gibt das deserialisierte Objekt zurück.  Die Methode enthält einen Parameter, der angibt, ob der Objektname überprüft/validiert wird, sowie einen Resolver zum Zuordnen von <see langword="xsi:type" />-Deklarationen zur Laufzeit.</summary>
      <param name="reader" vsli:raw="The XML reader used to read the content.">Der XML-Leser, der zum Lesen des Inhalts verwendet wird.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to verify the object name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um den Objektnamen zu überprüfen; anderenfalls <see langword="false" />.</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to data contract types.">Eine Implementierung des <see cref="T:System.Runtime.Serialization.DataContractResolver" />, um Datenvertragstypen <see langword="xsi:type" />-Deklarationen zuzuordnen.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Liest den XML-Stream mit einem <see cref="T:System.Xml.XmlReader" /> und gibt das deserialisierte Objekt zurück.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">Das <see cref="T:System.Xml.XmlReader" />-Objekt, das zum Lesen des XML-Streams verwendet wird.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">Liest den XML-Stream mit einem <see cref="T:System.Xml.XmlReader" /> und gibt das deserialisierte Objekt zurück. Zudem wird angegeben, ob vor dem Lesen des Objektwerts der Objektname überprüft wird.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">Das <see cref="T:System.Xml.XmlReader" />-Objekt, das zum Lesen des XML-Streams verwendet wird.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um zu überprüfen, ob der Name des Objekts mit dem im Konstruktor angegebenen Wert des Stammnamens übereinstimmt, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">Für den <paramref name="verifyObjectName" />-Parameter wurde <see langword="true" /> festgelegt, und der Name und Namespace des Elements stimmen nicht mit den im Konstruktor angegebenen Werten überein.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets a value that specifies whether read-only types are serialized.">Ruft einen Wert ab, der angibt, ob schreibgeschützte Typen serialisiert werden.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if read-only types are serialized; &lt;see langword=&quot;false&quot; /&gt; if all types are serialized.">
        <see langword="true" />, wenn schreibgeschützte Typen serialisiert werden; <see langword="false" />, wenn alle Typen serialisiert werden.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Schreibt das abschließende XML-Element mit einem <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">Das <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das zum Schreiben des Streams verwendet wird.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt das abschließende XML-Element mit einem <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">Das <see cref="T:System.Xml.XmlWriter" />-Objekt, das zum Schreiben des Streams verwendet wird.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter. The method includes a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">Schreibt alle Objektdaten (XML-Startelement, Inhalt und abschließendes Element) in ein XML-Dokument oder einen XML-Stream, unter Verwendung des angegebenen "XmlDictionaryWriter". Die Methode umfasst einen Resolver zum Zuordnen von <see langword="xsi:type" />-Deklarationen zur Laufzeit.</summary>
      <param name="writer" vsli:raw="An XmlDictionaryWriter used to write the content to the XML document or stream.">Ein "XmlDictionaryWriter" zum Schreiben des Inhalts in das XML-Dokument oder den XML-Stream.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Das Objekt, das den zu schreibenden Inhalt enthält.</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; used to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known data contracts.">Eine Implementierung des <see cref="T:System.Runtime.Serialization.DataContractResolver" />, mit der <see langword="xsi:type" />-Deklarationen bekannten Datenverträgen zugeordnet werden.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt alle Objektdaten (XML-Startelement, Inhalt und abschließendes Element) mit einem <see cref="T:System.Xml.XmlWriter" /> in ein XML-Dokument oder einen XML-Stream.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">Der <see cref="T:System.Xml.XmlWriter" />, der zum Schreiben des XML-Dokuments oder -Streams verwendet wurde.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">Das Objekt, das die in den Stream zu schreibenden Daten enthält.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Schreibt den XML-Inhalt mit einem <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">Das <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das zum Schreiben des Streams verwendet wird.</param>
      <param name="graph" vsli:raw="The object to write to the stream.">Das in den Stream zu schreibende Objekt.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt den XML-Inhalt mit einem <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">Das <see cref="T:System.Xml.XmlWriter" />-Objekt, das zum Schreiben des Streams verwendet wird.</param>
      <param name="graph" vsli:raw="The object to write to the stream.">Das in den Stream zu schreibende Objekt.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Schreibt das öffnende XML-Element mit einem <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">Das <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das zum Schreiben des XML-Startelements verwendet wird.</param>
      <param name="graph" vsli:raw="The object to write.">Das zu schreibende Objekt.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt das öffnende XML-Element mit einem <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">Das <see cref="T:System.Xml.XmlWriter" />-Objekt, das zum Schreiben des XML-Startelements verwendet wird.</param>
      <param name="graph" vsli:raw="The object to write.">Das zu schreibende Objekt.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerExtensions">
      <summary vsli:raw="Extends the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class by providing methods for setting and getting an &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogateProvider&quot; /&gt;.">Erweitert die <see cref="T:System.Runtime.Serialization.DataContractSerializer" />-Klasse durch Methoden zum Festlegen und Abrufen einer <see cref="T:System.Runtime.Serialization.ISerializationSurrogateProvider" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
      <summary vsli:raw="Returns the surrogate serialization provider for this serializer.">Gibt den niedrigen Serialisierungsanbieter für dieses Serialisierungsmodul zurück.</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">Das Serialisierungsmodul, das ersetzt wird.</param>
      <returns vsli:raw="The surrogate serializer.">Das Ersatz-Serialisierungsmodul.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
      <summary vsli:raw="Specifies a surrogate serialization provider for this &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">Gibt den Ersatzserialisierungsanbieter für dieses <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> an.</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">Das Serialisierungsmodul, das ersetzt wird.</param>
      <param name="provider" vsli:raw="The surrogate serialization provider.">Der Ersatzserialisierungsanbieter.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerSettings">
      <summary vsli:raw="Specifies data contract serializer settings.">Gibt Einstellungen für das Datenvertragsserialisierungsprogramm an.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializerSettings&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" />-Klasse.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver">
      <summary vsli:raw="Gets or sets the component used to dynamically map xsi:type declarations to known contract types.">Ruft die Komponente für die dynamische Zuordnung von xsi:type-Deklarationen zu bekannten Vertragstypen ab oder legt diese fest.</summary>
      <returns vsli:raw="The component used to dynamically map xsi:type declarations to known contract types.">Die Komponente für die dynamische Zuordnung von xsi:type-Deklarationen zu bekannten Vertragstypen.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Ruft einen Wert ab bzw. legt diesen fest, der angibt, ob die Daten ignoriert werden sollen, die von einer Erweiterung dieser Klasse bereitgestellt werden, wenn die Klasse serialisiert oder deserialisiert wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um Daten zu ignorieren, die von einer Erweiterung dieser Klasse bereitgestellt werden, wenn die Klasse serialisiert oder deserialisiert wird; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">Ruft eine Auflistung der Typen im Objektdiagramm ab, die mithilfe dieser Instanz von DataContractSerializerSettings serialisiert wurden, oder legt sie fest.</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">Eine Sammlung der Typen im Objektdiagramm ab, die mithilfe dieser Instanz von DataContractSerializerSettings serialisiert wurden.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">Ruft die maximale Anzahl von Elementen in einem Objektdiagramm ab oder legt sie fest, die serialisiert oder deserialisiert werden.</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">Die maximale Anzahl von Elementen in einem Objektdiagramm, die serialisiert oder deserialisiert werden.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences">
      <summary vsli:raw="Gets or sets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">Ruft einen Wert ab bzw. legt diesen fest, der angibt, ob zum Beibehalten von Objektverweisdaten nicht standardmäßige XML-Konstrukte verwendet werden sollen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use non-standard XML constructs to preserve object reference data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um zum Beibehalten der Objektverweisdaten nicht standardmäßige XML-Konstrukte zu verwenden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">Übernimmt oder bestimmt den Stammnamen des ausgewählten Objekts.</summary>
      <returns vsli:raw="The root name of the selected object.">Der Stammname des ausgewählten Objekts.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace">
      <summary vsli:raw="Gets or sets the root namespace for the specified object.">Übernimmt oder bestimmt den Stammnamespace für das angegebene Objekt.</summary>
      <returns vsli:raw="The root namespace for the specified object.">Der Stammnamespace für das angegebene Objekt.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob schreibgeschützte Typen serialisiert werden sollen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um schreibgeschützte Typen zu serialisieren; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExportOptions">
      <summary vsli:raw="Represents the options that can be set for an &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">Stellt die Optionen dar, die für ein <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> festgelegt werden können.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ExportOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.ExportOptions" />-Klasse.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.KnownTypes">
      <summary vsli:raw="Gets the collection of types that may be encountered during serialization or deserialization.">Ruft die Auflistung der Typen ab, die während der Serialisierung oder Deserialisierung gefunden werden können.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;KnownTypes&quot; /&gt; collection that contains types that may be encountered during serialization or deserialization. XML schema representations are exported for all the types specified in this collection by the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">Eine <see langword="KnownTypes" />-Auflistung, die während der Serialisierung oder Deserialisierung gefunden werden können. Es werden XML-Schemadarstellungen für alle in dieser Auflistung vom <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> angegebenen Typen exportiert.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExtensionDataObject">
      <summary vsli:raw="Stores data from a versioned data contract that has been extended by adding new members.">Speichert Daten eines Datenvertrags mit Versionsangabe, der durch das Hinzufügen neuer Member erweitert wurde.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.IExtensibleDataObject">
      <summary vsli:raw="Provides a data structure to store extra data encountered by the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; during deserialization of a type marked with the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute.">Stellt eine Datenstruktur zur Speicherung zusätzlicher Daten zur Verfügung, die vom <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> bei der Deserialisierung eines Typs angetroffen wurden, der mit dem <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut gekennzeichnet ist.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData">
      <summary vsli:raw="Gets or sets the structure that contains extra data.">Ruft die Struktur ab, die zusätzliche Daten enthält, oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExtensionDataObject&quot; /&gt; that contains data that is not recognized as belonging to the data contract.">Ein <see cref="T:System.Runtime.Serialization.ExtensionDataObject" />, der Daten enthält, die nicht als zum Datenvertrag gehörend erkannt werden.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary vsli:raw="Provides the base class used to serialize objects as XML streams or documents. This class is abstract.">Stellt die Basisklasse bereit, die verwendet wird, um Objekte als XML-Streams oder XML-Dokumente zu serialisieren. Diese Klasse ist abstrakt.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that can be read.">Ruft einen Wert auf, der angibt, ob der <see cref="T:System.Xml.XmlDictionaryReader" /> auf einem XML-Element positioniert ist, das gelesen werden kann.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream or document.">Ein zum Lesen des XML-Streams oder XML-Dokuments verwendeter <see cref="T:System.Xml.XmlDictionaryReader" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can read the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Reader die Daten lesen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned over an XML element that can be read.">Ruft einen Wert auf, der angibt, ob der <see cref="T:System.Xml.XmlReader" /> auf einem XML-Element positioniert ist, das gelesen werden kann.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">Ein zum Lesen des XML-Streams oder XML-Dokuments verwendeter <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned over the starting element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Reader auf dem Ende des Startelements positioniert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads the XML stream or document with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and returns the deserialized object.">Liest den XML-Stream oder das XML-Dokument mit einem <see cref="T:System.IO.Stream" /> und gibt das deserialisierte Objekt zurück.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to read the XML stream or document.">Ein <see cref="T:System.IO.Stream" /> zum Lesen des XML-Streams oder XML-Dokuments.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">Liest das XML-Dokument oder den XML-Stream mit einem <see cref="T:System.Xml.XmlDictionaryReader" /> und gibt das deserialisierte Objekt zurück.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">Ein zum Lesen des XML-Dokuments verwendeter <see cref="T:System.Xml.XmlDictionaryReader" />.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream or document with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">Liest den XML-Stream oder das XML-Dokument mit einem <see cref="T:System.Xml.XmlDictionaryReader" /> und gibt das deserialisierte Objekt zurück; Sie haben damit auch die Möglichkeit anzugeben, ob das Serialisierungsprogramm die Daten lesen kann, bevor der Leseversuch erfolgt.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">Ein zum Lesen des XML-Dokuments verwendeter <see cref="T:System.Xml.XmlDictionaryReader" />.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">
        <see langword="true" />, um zu überprüfen, ob der Name und der Namespace des einschließenden XML-Elements mit dem Stammnamen und -namespace übereinstimmen, andernfalls <see langword="false" />, um die Überprüfung zu überspringen.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Liest das XML-Dokument oder den XML-Stream mit einem <see cref="T:System.Xml.XmlReader" /> und gibt das deserialisierte Objekt zurück.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">Ein zum Lesen des XML-Streams oder XML-Dokuments verwendeter <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">Liest das XML-Dokument oder den XML-Stream mit einem <see cref="T:System.Xml.XmlReader" /> und gibt das deserialisierte Objekt zurück; Sie haben damit auch die Möglichkeit anzugeben, ob das Serialisierungsprogramm die Daten lesen kann, bevor der Leseversuch erfolgt.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document or stream.">Ein <see cref="T:System.Xml.XmlReader" /> zum Lesen des XML-Dokuments oder XML-Streams.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">
        <see langword="true" />, um zu überprüfen, ob der Name und der Namespace des einschließenden XML-Elements mit dem Stammnamen und -namespace übereinstimmen, andernfalls <see langword="false" />, um die Überprüfung zu überspringen.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Schreibt das Ende der Objektdaten als abschließendes XML-Element in das XML-Dokument oder den XML-Stream mit einem <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">Ein <see cref="T:System.Xml.XmlDictionaryWriter" /> zum Schreiben des XML-Dokuments oder XML-Streams.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">es liegt ein Problem mit der serialisierten Instanz vor.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt das Ende der Objektdaten als abschließendes XML-Element in das XML-Dokument oder den XML-Stream mit einem <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">Ein <see cref="T:System.Xml.XmlWriter" /> zum Schreiben des XML-Dokuments oder XML-Streams.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">es liegt ein Problem mit der serialisierten Instanz vor.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Schreibt den vollständigen Inhalt (Anfang, Inhalt und Ende) des Objekts in das XML-Dokument oder den XML-Stream mit dem angegebenen <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document or stream.">Ein <see cref="T:System.IO.Stream" /> zum Schreiben des XML-Dokuments oder XML-Streams.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">Das Objekt, das die in den Stream zu schreibenden Daten enthält.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">es liegt ein Problem mit der serialisierten Instanz vor.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Schreibt den vollständigen Inhalt (Anfang, Inhalt und Ende) des Objekts in das XML-Dokument oder den XML-Stream mit dem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the content to the XML document or stream.">Ein <see cref="T:System.Xml.XmlDictionaryWriter" /> zum Schreiben des Inhalts in das XML-Dokument oder den XML-Stream.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Das Objekt, das den zu schreibenden Inhalt enthält.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">es liegt ein Problem mit der serialisierten Instanz vor.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt den vollständigen Inhalt (Anfang, Inhalt und Ende) des Objekts in das XML-Dokument oder den XML-Stream mit dem angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">Ein <see cref="T:System.Xml.XmlWriter" /> zum Schreiben des XML-Dokuments oder XML-Streams.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Das Objekt, das den zu schreibenden Inhalt enthält.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">es liegt ein Problem mit der serialisierten Instanz vor.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Schreibt nur den Inhalt des Objekts unter Verwendung des angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" /> in das XML-Dokument oder den XML-Stream.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">Ein <see cref="T:System.Xml.XmlDictionaryWriter" /> zum Schreiben des XML-Dokuments oder XML-Streams.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Das Objekt, das den zu schreibenden Inhalt enthält.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">es liegt ein Problem mit der serialisierten Instanz vor.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt nur den Inhalt des Objekts unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" /> in das XML-Dokument oder den XML-Stream.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">Ein <see cref="T:System.Xml.XmlWriter" /> zum Schreiben des XML-Dokuments oder XML-Streams.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Das Objekt, das den zu schreibenden Inhalt enthält.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">es liegt ein Problem mit der serialisierten Instanz vor.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Schreibt den Anfang der Daten des Objekts als ein öffnendes XML-Element unter Verwendung des angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document.">Ein <see cref="T:System.Xml.XmlDictionaryWriter" /> zum Schreiben des XML-Dokuments.</param>
      <param name="graph" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">es liegt ein Problem mit der serialisierten Instanz vor.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt den Anfang der Daten des Objekts als ein öffnendes XML-Element unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">Ein <see cref="T:System.Xml.XmlWriter" /> zum Schreiben des XML-Dokuments.</param>
      <param name="graph" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">es liegt ein Problem mit der serialisierten Instanz vor.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XmlSerializableServices">
      <summary vsli:raw="Contains methods for reading and writing XML.">Enthält Methoden zum Lesen und Schreiben von XML.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates a default schema type given the specified type name and adds it to the specified schema set.">Generiert einen Standardschematyp mit dem festgelegten Typnamen und fügt ihn zu der festgelegten Schemagruppe hinzu.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to add the generated schema type to.">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />, zu dem der generierte Schematyp hinzugefügt werden soll.</param>
      <param name="typeQName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the type name to assign the schema to.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Typnamen festlegt, dem das Schema zugeordnet werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;schemas&quot; /&gt; or &lt;paramref name=&quot;typeQName&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="schemas" /> oder das <paramref name="typeQName" />-Argument ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)">
      <summary vsli:raw="Reads a set of XML nodes from the specified reader and returns the result.">Liest eine Gruppe von XML-Knoten aus dem angegebenen Reader und gibt das Ergebnis zurück.</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used for reading.">Ein <see cref="T:System.Xml.XmlReader" /> zum Lesen.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Ein Array vom Typ <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlReader&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Das <paramref name="xmlReader" />-Argument lautet <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="While reading, a &lt;see langword=&quot;null&quot; /&gt; node was encountered.">Beim Lesen wurde ein <see langword="null" />-Knoten gefunden.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])">
      <summary vsli:raw="Writes the supplied nodes using the specified writer.">Schreibt die angegebenen Knoten unter Verwendung des angegebenen Writers.</summary>
      <param name="xmlWriter" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used for writing.">Ein <see cref="T:System.Xml.XmlWriter" /> zum Schreiben.</param>
      <param name="nodes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write.">Ein Typarray <see cref="T:System.Xml.XmlNode" /> zum Schreiben.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlWriter&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Das <paramref name="xmlWriter" />-Argument lautet <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XPathQueryGenerator">
      <summary vsli:raw="When given a class representing a data contract, and metadata representing a member of the contract, produces an XPath query for the member.">Generiert – wenn eine einen Datenvertrag darstellende Klasse und ein Vertragsmember darstellende Metadaten gegeben sind – eine XPath-Abfrage für den Member.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Text.StringBuilder,System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified contract data type, array of metadata elements, the top level element, and namespaces.">Erstellt anhand eines Datenvertrags einen XPath. Hierzu werden der angegebene Datenvertragstyp, das angegebene Array von Metadatenelementen, das angegebene Element der obersten Ebene sowie die angegebenen Namespaces verwendet.</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">Der Typ, der einen Datenvertrag darstellt.</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">Die Metadaten, die mit der <see cref="Overload:System.Type.GetMember" />-Methode der <see cref="T:System.Type" />-Klasse generiert werden, die auf den bestimmten Datenmember verweist, der zum Generieren der Abfrage verwendet wird.</param>
      <param name="rootElementXpath" vsli:raw="The top level element in the xpath.">Das Element der obersten Ebene im XPath.</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">Die XML-Namespaces und deren Präfixe, die im Datenvertrag enthalten sind.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />
Der anhand der Typ- und Memberdaten generierte XPath.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified data contract type, array of metadata elements, and namespaces.">Erstellt anhand eines Datenvertrags einen XPath. Hierzu werden der angegebene Datenvertragstyp, das angegebene Array von Metadatenelementen sowie die angegebenen Namespaces verwendet.</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">Der Typ, der einen Datenvertrag darstellt.</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">Die Metadaten, die mit der <see cref="Overload:System.Type.GetMember" />-Methode der <see cref="T:System.Type" />-Klasse generiert werden, die auf den bestimmten Datenmember verweist, der zum Generieren der Abfrage verwendet wird.</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">Die XML-Namespaces und deren Präfixe, die im Datenvertrag enthalten sind.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />
Der anhand der Typ- und Memberdaten generierte XPath.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractExporter">
      <summary vsli:raw="Allows the transformation of a set of .NET types that are used in data contracts into an XML schema file (.xsd).">Ermöglicht die Transformation einer in Datenverträgen verwendeten Gruppe von .NET Framework-Typen in eine XML-Schemadatei (XSD).</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />-Klasse.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class with the specified set of schemas.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />-Klasse mit dem angegebenen Schemasatz.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas to be exported.">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />, der die Schemas enthält, die exportiert werden sollen.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.">Ruft einen Wert ab, der angibt, ob ein in einem Satz von Assemblys enthaltener Satz von Common Language Runtime (CLR)-Typen exportiert werden kann.</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; that contains the assemblies with the types to export.">Eine <see cref="T:System.Collections.Generic.ICollection`1" /> von <see cref="T:System.Reflection.Assembly" />, die die Assemblys mit den zu exportierenden Typen enthält.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Typen exportiert werden können, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; can be exported.">Ruft einen Wert ab, der angibt, ob ein in einem <see cref="T:System.Collections.Generic.ICollection`1" /> enthaltener Satz von Common Language Runtime (CLR)-Typen exportiert werden kann.</summary>
      <param name="types" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; that contains the specified types to export.">Eine <see cref="T:System.Collections.Generic.ICollection`1" />, die die angegebenen zu exportierenden Typen enthält.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Typen exportiert werden können, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
      <summary vsli:raw="Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.">Ruft einen Wert ab, der angibt, ob der angegebene Common Language Runtime (CLR)-Typ exportiert werden kann.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to export.">Der zu exportierende <see cref="T:System.Type" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Typ exportiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Transforms the types contained in the specified collection of assemblies.">Transformiert die in der angegebenen Auflistung von Assemblys enthaltenen Typen.</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;) that contains the types to export.">Eine <see cref="T:System.Collections.Generic.ICollection`1" /> (von <see cref="T:System.Reflection.Assembly" />), die die zu exportierenden Typen enthält.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assemblies&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Das <paramref name="assemblies" />-Argument lautet <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; in the collection is &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Reflection.Assembly" /> in der Auflistung ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Transforms the types contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; passed to this method.">Transformiert die im <see cref="T:System.Collections.Generic.ICollection`1" /> enthaltenen, an diese Methode übergebenen Typen.</summary>
      <param name="types" vsli:raw="A  &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Type&quot; /&gt;) that contains the types to export.">Eine <see cref="T:System.Collections.Generic.ICollection`1" /> (von <see cref="T:System.Type" />), die die zu exportierenden Typen enthält.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;types&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Das <paramref name="types" />-Argument lautet <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A type in the collection is &lt;see langword=&quot;null&quot; /&gt;.">Ein Typ in der Auflistung ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
      <summary vsli:raw="Transforms the specified .NET Framework type into an XML schema definition language (XSD) schema.">Transformiert den angegebenen .NET Framework-Typ in ein XSD-Schema (XML Schema Definition Language).</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to transform into an XML schema.">Der in ein XML-Schema zu transformierende <see cref="T:System.Type" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Das <paramref name="type" />-Argument lautet <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
      <summary vsli:raw="Returns the top-level name and namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Gibt den Namen und Namespace der obersten Ebene für den <see cref="T:System.Type" /> zurück.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to query.">Der abzufragende <see cref="T:System.Type" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the top-level name and namespace for this &lt;see cref=&quot;T:System.Type&quot; /&gt;, which is written to the stream when writing this object.">Der <see cref="T:System.Xml.XmlQualifiedName" />, der den Namen und Namespace der obersten Ebene für diesen  <see cref="T:System.Type" />darstellt, der beim Schreiben des Objekts in den Stream geschrieben wird.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Das <paramref name="type" />-Argument lautet <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
      <summary vsli:raw="Returns the XML schema type for the specified type.">Gibt den XML-Schematyp für den angegebenen Typ zurück.</summary>
      <param name="type" vsli:raw="The type to return a schema for.">Der Typ, für den ein Schema zurückgegeben wird.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; that contains the XML schema.">Ein <see cref="T:System.Xml.Schema.XmlSchemaType" />, der das XML-Schema enthält.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Das <paramref name="type" />-Argument lautet <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
      <summary vsli:raw="Returns the contract name and contract namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Gibt den Vertragsnamen und den Vertragsnamespace für den <see cref="T:System.Type" /> zurück.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that was exported.">Der <see cref="T:System.Type" />, der exportiert wurde.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the contract name of the type and its namespace.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Vertragsnamen des Typs und dessen Namespace darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Das <paramref name="type" />-Argument lautet <see langword="null" />.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options that can be set for the export operation.">Ruft einen <see cref="T:System.Runtime.Serialization.ExportOptions" /> ab, der Optionen enthält, die für die Exportoperation festgelegt werden können, oder legt diesen fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options used to customize how types are exported to schemas.">Ein <see cref="T:System.Runtime.Serialization.ExportOptions" />, der Optionen enthält, die verwendet werden, um einzustellen, wie die Typen in Schemas exportiert werden.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
      <summary vsli:raw="Gets the collection of exported XML schemas.">Ruft die Auflistung exportierter XML-Schemas ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas transformed from the set of common language runtime (CLR) types after calling the &lt;see cref=&quot;Overload:System.Runtime.Serialization.XsdDataContractExporter.Export&quot; /&gt; method.">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />, der die Schemas enthält, die nach Aufrufen der <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" />-Methode von dem Common Language Runtime (CLR)-Typensatz transformiert wurden.</returns>
    </member>
    <member name="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
      <summary vsli:raw="Contains properties and methods that when implemented by a &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, allows processing of XML fragments.">Enthält Eigenschaften und Methoden, die die Verarbeitung von XML-Fragmenten ermöglichen, wenn sie von <see cref="T:System.Xml.XmlDictionaryWriter" /> implementiert werden.</summary>
    </member>
    <member name="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments.">Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.XmlDictionaryWriter" /> XML-Fragmente verarbeiten kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Xml.XmlDictionaryWriter" /> XML-Fragmente verarbeiten kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
      <summary vsli:raw="Ends the processing of an XML fragment.">Beendet die Verarbeitung eines XML-Fragments.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Starts the processing of an XML fragment.">Startet die Verarbeitung eines XML-Fragments.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Der Stream, in den geschrieben werden soll.</param>
      <param name="generateSelfContainedTextFragment" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, any namespaces declared outside the fragment is declared again if used inside of it; if &lt;see langword=&quot;false&quot; /&gt; the namespaces are not declared again.">Wenn <see langword="true" />, wird jeder Namespace, der außerhalb des Fragments deklariert wurde, bei Verwendung innerhalb des Fragments erneut deklariert. Wenn <see langword="false" />, wird der Namespace nicht erneut deklariert.</param>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes an XML fragment to the underlying stream of the writer.">Schreibt ein XML-Fragment in den zugrunde liegenden Stream des Writers.</summary>
      <param name="buffer" vsli:raw="The buffer to write to.">Der Puffer, in den geschrieben wird.</param>
      <param name="offset" vsli:raw="The starting position from which to write in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der aus in <paramref name="buffer" /> geschrieben wird.</param>
      <param name="count" vsli:raw="The number of bytes to be written to the &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anzahl der Bytes, die in <paramref name="buffer" /> geschrieben werden.</param>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary vsli:raw="Represents an interface that can be implemented by classes providing streams.">Stellt eine Schnittstelle, die von Klassen implementiert werden kann, die Streams bereitstellen.</summary>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary vsli:raw="Gets a stream.">Ruft einen Stream ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Ein <see cref="T:System.IO.Stream" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary vsli:raw="Releases a stream to output.">Gibt einen Stream frei, der ausgegeben werden soll.</summary>
      <param name="stream" vsli:raw="The stream being released.">Der Stream, der freigegeben wird.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryReaderInitializer">
      <summary vsli:raw="Provides methods for reinitializing a binary reader to read a new document.">Stellt Methoden zur erneuten Initialisierung eines binären Readers bereit, um ein neues Dokument zu lesen.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input buffer.">Initialisiert den binären Reader mit dem gegebenen Eingabepuffer erneut.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Das zu verwendende <see cref="T:System.Xml.XmlDictionary" />.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Die anzuwendenden <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Das zu verwendende <see cref="T:System.Xml.XmlBinaryReaderSession" />.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">Der aufzurufende Delegat, wenn der Reader geschlossen wird.</param>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input stream.">Initialisiert den binären Reader mit dem gegebenen Eingabestream erneut.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Der Stream, aus dem gelesen wird.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Das zu verwendende <see cref="T:System.Xml.XmlDictionary" />.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Die anzuwendenden <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Das zu verwendende <see cref="T:System.Xml.XmlBinaryReaderSession" />.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">Der aufzurufende Delegat, wenn der Reader geschlossen wird.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML binary writers that derive from this interface.">Gibt Implementierungsanforderungen für binäre XML-Writer an, die sich von dieser Schnittstelle ableiten.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryWriterInitializer.SetOutput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML binary writers that implement this method.">Gibt Initialisierungsanforderungen für binäre XML-Writer an, die diese Methode implementieren.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Der Stream, in den geschrieben werden soll.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Xml.XmlDictionary" />.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Xml.XmlBinaryWriterSession" />.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass der Stream nach Abschluss des Vorgangs vom Writer geschlossen wird, andernfalls <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary vsli:raw="An &lt;see langword=&quot;interface&quot; /&gt; that defines the contract that an Xml dictionary must implement to be used by &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; implementations.">Eine <see langword="interface" />, die den Vertrag definiert, den ein XML-Wörterbuch implementieren muss, um von <see cref="T:System.Xml.XmlDictionaryReader" />-Implementierungen und <see cref="T:System.Xml.XmlDictionaryWriter" />-Implementierungen genutzt zu werden.</summary>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">Es wurde versucht, einen Eintrag im Wörterbuch nachzuschlagen.</summary>
      <param name="key" vsli:raw="Key to look up.">Zu suchender Schlüssel.</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Wenn <paramref name="key" /> definiert ist, die dem Schlüssel zugeordnete <see cref="T:System.Xml.XmlDictionaryString" />, andernfalls <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Schlüssel im Wörterbuch vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">Überprüft das Wörterbuch auf einen bestimmten Zeichenfolgenwert.</summary>
      <param name="value" vsli:raw="String value being checked for.">Zeichenfolgenwert, auf den überprüft wird.</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Die entsprechende <see cref="T:System.Xml.XmlDictionaryString" />, wenn sie gefunden wird, andernfalls <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert im Wörterbuch vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Überprüft das Wörterbuch auf eine bestimmte <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">Die <see cref="T:System.Xml.XmlDictionaryString" />, auf die überprüft wird.</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Die passende <see cref="T:System.Xml.XmlDictionaryString" />, wenn sie gefunden wird, andernfalls <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich die <see cref="T:System.Xml.XmlDictionaryString" /> im Wörterbuch befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.IXmlTextReaderInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text readers that derive from this interface.">Gibt Implementierungsanforderungen für XML-Textreader an, die sich von dieser Schnittstelle ableiten.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a buffer.">Gibt Initialisierungsanforderungen für XML-Textreader an, die einen Puffer lesen.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Die Zeichencodierung des Streams.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Das anzuwendende <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Der Delegat, der aufzurufen ist, wenn der Reader geschlossen wird.</param>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a stream.">Gibt Initialisierungsanforderungen für XML-Textreader an, die einen Stream lesen.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Der Stream, aus dem gelesen wird.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Die Zeichencodierung des Streams.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Das anzuwendende <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Der Delegat, der aufzurufen ist, wenn der Reader geschlossen wird.</param>
    </member>
    <member name="T:System.Xml.IXmlTextWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text writers that derive from this interface.">Gibt Implementierungsanforderungen für XML-Textwriter an, die sich von dieser Schnittstelle ableiten.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML text writers that implement this method.">Gibt Initialisierungsanforderungen für XML-Textwriter an, die diese Methode implementieren.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Der Stream, in den geschrieben werden soll.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Die Zeichencodierung des Streams.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass der Stream nach Abschluss des Vorgangs vom Writer geschlossen wird, andernfalls <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.OnXmlDictionaryReaderClose">
      <summary vsli:raw="&lt;see langword=&quot;delegate&quot; /&gt; for a callback method when closing the reader.">
        <see langword="delegate" /> für eine Rückrufmethode beim Schließen des Readers.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that fires the &lt;c&gt;OnClose&lt;/c&gt; event.">Der <see cref="T:System.Xml.XmlDictionaryReader" />, der das <c>OnClose</c>-Ereignis auslöst.</param>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary vsli:raw="A unique identifier optimized for Guids.">Ein für GUIDs optimierter eindeutiger Bezeichner.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary vsli:raw="Creates a new instance of this class with a new, unique Guid.">Erstellt eine neue Instanz dieser Klasse mit einer neuen, eindeutigen GUID.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary vsli:raw="Creates a new instance of this class using a byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Erstellt eine neue Instanz dieser Klasse mit einem Bytearray, das <see cref="T:System.Guid" /> darstellt.</summary>
      <param name="guid" vsli:raw="A byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Ein Bytearray, das <see cref="T:System.Guid" /> darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; provides less than 16 valid bytes.">
        <paramref name="guid" /> stellt weniger als 16 gültige Bytes bereit.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Erstellt eine neue Instanz dieser Klasse und beginnt dabei bei einem Offset innerhalb eines <see langword="byte" />-Arrays, das <see cref="T:System.Guid" /> darstellt.</summary>
      <param name="guid" vsli:raw="A &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Ein <see langword="byte" />-Array, das <see cref="T:System.Guid" /> darstellt.</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Offsetposition innerhalb des <see langword="byte" />-Arrays, das <see cref="T:System.Guid" /> darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> ist kleiner als 0 (null) oder größer als die Länge des Arrays.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> und <paramref name="offset" /> stellen weniger als 16 gültige Bytes bereit.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;char&quot; /&gt; using a specified number of entries.">Erstellt eine neue Instanz dieser Klasse und beginnt dabei bei einem Offset innerhalb von <see langword="char" /> mit einer bestimmten Anzahl Einträge.</summary>
      <param name="chars" vsli:raw="A &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Ein <see langword="char" />-Array, das <see cref="T:System.Guid" /> darstellt.</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Offsetposition innerhalb des <see langword="char" />-Arrays, das <see cref="T:System.Guid" /> darstellt.</param>
      <param name="count" vsli:raw="Number of array entries to use, starting from &lt;paramref name=&quot;offset&quot; /&gt;.">Anzahl von zu verwendenden Arrayeinträgen, beginnend bei <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; less than zero or greater than the length of the array minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist kleiner als 0 (null) oder größer als die Länge des Arrays.
- oder -
<paramref name="count" /> ist kleiner als 0 (null) oder größer als die Länge des Arrays minus <paramref name="offset" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; equals zero.">
        <paramref name="count" /> entspricht 0 (null).</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary vsli:raw="Creates a new instance of this class using a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Erstellt mit <see cref="T:System.Guid" /> eine neue Instanz dieser Klasse.</summary>
      <param name="guid" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Ein <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of this class using a string.">Erstellt mit einer Zeichenfolge eine neue Instanz dieser Klasse.</summary>
      <param name="value" vsli:raw="A string used to generate the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Eine Zeichenfolge, die zur Generierung von <see cref="T:System.Xml.UniqueId" /> verwendet wird.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="Length of &lt;paramref name=&quot;value&quot; /&gt; is zero.">Die Länge von <paramref name="value" /> ist 0 (null).</exception>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary vsli:raw="Gets the length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Ruft die Länge der Zeichenfolgendarstellung von <see cref="T:System.Xml.UniqueId" /> ab.</summary>
      <returns vsli:raw="The length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Die Länge der Zeichenfolgendarstellung von <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary vsli:raw="Tests whether an object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Testet, ob ein Objekt <see cref="T:System.Xml.UniqueId" /> entspricht.</summary>
      <param name="obj" vsli:raw="The object to compare.">Das zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt <see cref="T:System.Xml.UniqueId" /> entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary vsli:raw="Creates a hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Erstellt eine Hashcodedarstellung von <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns vsli:raw="An integer hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Eine ganzzahlige Hashcodedarstellung von <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Gibt an, ob <see cref="T:System.Xml.UniqueId" /><see cref="T:System.Guid" /> ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Xml.UniqueId" /><see cref="T:System.Guid" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for equality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">Überschreibt den Gleichheitsoperator, um auf die Gleichheit von zwei <see cref="T:System.Xml.UniqueId" />s zu testen.</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Die erste <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Das zweite <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s are equal, or are both &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if they are not equal, or if only one of them is &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="true" />, wenn beide <see cref="T:System.Xml.UniqueId" />s gleich oder <see langword="null" /> sind; <see langword="false" />, wenn sie nicht gleich sind oder nur eine <see langword="null" /> ist.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for inequality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">Überschreibt den Gleichheitsoperator, um auf die Ungleichheit von zwei <see cref="T:System.Xml.UniqueId" />s zu testen.</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Die erste <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Das zweite <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the overridden equality operator returns &lt;see langword=&quot;false&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der überschriebene Gleichheitsoperator <see langword="false" /> zurückgibt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary vsli:raw="Puts the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value into a &lt;see langword=&quot;char&quot; /&gt; array.">Legt den <see cref="T:System.Xml.UniqueId" />-Wert in ein <see langword="char" />-Array ab.</summary>
      <param name="chars" vsli:raw="The &lt;see langword=&quot;char&quot; /&gt; array.">Das <see langword="char" />-Array.</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;char&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Position im <see langword="char" />-Array, um mit dem Einfügen des <see cref="T:System.Xml.UniqueId" />-Werts zu beginnen.</param>
      <returns vsli:raw="Number of entries in the &lt;see langword=&quot;char&quot; /&gt; array filled by the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Anzahl der Einträge im <see langword="char" />-Array, die vom <see cref="T:System.Xml.UniqueId" />-Wert gefüllt wurden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> ist kleiner als 0 (null) oder größer als die Länge des Arrays.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> und <paramref name="offset" /> stellen weniger als 16 gültige Bytes bereit.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary vsli:raw="Displays the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value in string format.">Zeigt den <see cref="T:System.Xml.UniqueId" />-Wert im Zeichenfolgenformat an.</summary>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Eine Zeichenfolgendarstellung des <see cref="T:System.Xml.UniqueId" />-Werts.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt; and store it in the given byte array at the specified offset.">Versucht, den Wert von <see cref="T:System.Xml.UniqueId" /> als <see cref="T:System.Guid" /> abzurufen und im gegebenen Bytearray beim entsprechenden Offset zu speichern.</summary>
      <param name="buffer" vsli:raw="&lt;see langword=&quot;byte&quot; /&gt; array that will contain the &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see langword="byte" />-Array, das <see cref="T:System.Guid" /> enthält.</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;byte&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">Position im <see langword="byte" />-Array, um mit dem Einfügen des <see cref="T:System.Guid" />-Werts zu beginnen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value stored in this instance of &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert, der in dieser Instanz von <see cref="T:System.Xml.UniqueId" /> gespeichert ist, <see cref="T:System.Guid" /> ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> ist kleiner als 0 (null) oder größer als die Länge des Arrays.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> und <paramref name="offset" /> stellen weniger als 16 gültige Bytes bereit.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Versucht, den Wert von <see cref="T:System.Xml.UniqueId" /> als <see cref="T:System.Guid" /> abzurufen.</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; if successful; otherwise &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">
        <see cref="T:System.Guid" />, wenn erfolgreich, andernfalls <see cref="F:System.Guid.Empty" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UniqueId represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn UniqueId <see cref="T:System.Guid" /> darstellt, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> und <paramref name="offset" /> stellen weniger als 16 gültige Bytes bereit.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary vsli:raw="Enables optimized strings to be managed in a dynamic way.">Aktiviert optimierte Zeichenfolgen, die auf dynamische Weise verwaltet werden sollen.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlBinaryReaderSession" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; from the input parameters and adds it to an internal collection.">Erstellt eine <see cref="T:System.Xml.XmlDictionaryString" /> aus den Eingabeparametern und fügt sie einer internen Sammlung hinzu.</summary>
      <param name="id" vsli:raw="The key value.">Der Schlüsselwert.</param>
      <param name="value" vsli:raw="The value.">Der Wert.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is added to an internal collection.">Die neu erstellte <see cref="T:System.Xml.XmlDictionaryString" />, die einer internen Auflistung hinzugefügt wird.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is less than zero.">
        <paramref name="id" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;id&quot; /&gt; already exists.">Es ist bereits ein Eintrag mit Schlüssel = <paramref name="id" /> vorhanden.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary vsli:raw="Clears the internal collection of all contents.">Löscht die interne Auflistung aller Inhalte.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a key.">Überprüft, ob die interne Auflistung einen Eintrag enthält, der zu einem Schlüssel passt.</summary>
      <param name="key" vsli:raw="The key to search on.">Der Schlüssel, nach dem gesucht wird.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Enthält nach dem Beenden dieser Methode eine Zeichenfolge, wenn ein Eintrag gefunden wird; andernfalls <see langword="null" />. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;key&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Eintrag gefunden wird, der zu <paramref name="key" /> passt, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">Überprüft, ob die interne Auflistung einen Eintrag enthält, der zu einem Wert passt.</summary>
      <param name="value" vsli:raw="The value to search for.">Der zu suchende Wert.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Enthält nach dem Beenden dieser Methode eine Zeichenfolge, wenn ein Eintrag gefunden wird; andernfalls <see langword="null" />. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Eintrag gefunden wird, der zu <paramref name="value" /> passt, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">Überprüft, ob die interne Auflistung einen Eintrag enthält, der zu einem Wert passt.</summary>
      <param name="value" vsli:raw="The value to search for.">Der zu suchende Wert.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Enthält nach dem Beenden dieser Methode eine Zeichenfolge, wenn ein Eintrag gefunden wird; andernfalls <see langword="null" />. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Eintrag gefunden wird, der zu <paramref name="value" /> passt, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary vsli:raw="Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.">Ermöglicht die Komprimierung allgemeiner Zeichenfolgen, die in einer Nachricht erscheinen und den Zustand beibehalten, unter Verwendung eines dynamischen Wörterbuchs.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary vsli:raw="Creates an instance of this class.">Erstellt eine Instanz dieser Klasse.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary vsli:raw="Clears out the internal collections.">Löscht die internen Auflistungen.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary vsli:raw="Tries to add an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to the internal collection.">Versucht, <see cref="T:System.Xml.XmlDictionaryString" /> zur internen Auflistung hinzuzufügen.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to add.">Das hinzuzufügende <see cref="T:System.Xml.XmlDictionaryString" />.</param>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was successfully added.">Der Schlüssel der <see cref="T:System.Xml.XmlDictionaryString" />, die erfolgreich hinzugefügt wurde.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the string could be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Zeichenfolge hinzugefügt werden konnte; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;key&quot; /&gt; already exists.">Es ist bereits ein Eintrag mit Schlüssel = <paramref name="key" /> vorhanden.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary vsli:raw="Implements a dictionary used to optimize Windows Communication Foundation (WCF)'s XML reader/writer implementations.">Implementiert ein Wörterbuch, mit dem die XML-Reader-/Writerimplementierungen der Windows Communication Foundation (WCF) optimiert werden.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Erstellt ein leeres <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; with an initial capacity.">Erstellt ein <see cref="T:System.Xml.XmlDictionary" /> mit einer Anfangskapazität.</summary>
      <param name="capacity" vsli:raw="The initial size of the dictionary.">Die Anfangsgröße des Wörterbuchs.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary vsli:raw="Adds a string to the &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Fügt <see cref="T:System.Xml.XmlDictionary" /> eine Zeichenfolge hinzu.</summary>
      <param name="value" vsli:raw="String to add to the dictionary.">Zeichenfolge, die dem Wörterbuch hinzugefügt wird.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was added.">Die <see cref="T:System.Xml.XmlDictionaryString" />, die hinzugefügt wurde.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary vsli:raw="Gets a &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">Erhält ein leeres <see langword="static" />-<see cref="T:System.Xml.IXmlDictionary" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">Ein leeres <see langword="static" />-<see cref="T:System.Xml.IXmlDictionary" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">Es wurde versucht, einen Eintrag im Wörterbuch nachzuschlagen.</summary>
      <param name="key" vsli:raw="Key to look up.">Zu suchender Schlüssel.</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Wenn <paramref name="key" /> definiert ist, die dem Schlüssel zugeordnete <see cref="T:System.Xml.XmlDictionaryString" />, andernfalls <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Schlüssel im Wörterbuch vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">Überprüft das Wörterbuch auf einen bestimmten Zeichenfolgenwert.</summary>
      <param name="value" vsli:raw="String value being checked for.">Zeichenfolgenwert, auf den überprüft wird.</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Die entsprechende <see cref="T:System.Xml.XmlDictionaryString" />, wenn sie gefunden wird, andernfalls <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert im Wörterbuch vorhanden ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Überprüft das Wörterbuch auf eine bestimmte <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">Die <see cref="T:System.Xml.XmlDictionaryString" />, auf die überprüft wird.</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Die passende <see cref="T:System.Xml.XmlDictionaryString" />, wenn sie gefunden wird, andernfalls <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich die <see cref="T:System.Xml.XmlDictionaryString" /> im Wörterbuch befindet, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary vsli:raw="An &lt;see langword=&quot;abstract&quot; /&gt; class that the Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to do serialization and deserialization.">Eine <see langword="abstract" />-Klasse, die die Windows Communication Foundation (WCF) von <see cref="T:System.Xml.XmlReader" /> ableitet, um Serialisierung und Deserialisierung durchzuführen.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary vsli:raw="Creates an instance of this class.  Invoked only by its derived classes.">Erstellt eine Instanz dieser Klasse.  Wird nur von seinen abgeleiteten Klassen aufgerufen.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">Diese Eigenschaft gibt immer <see langword="false" /> zurück. Die abgeleiteten Klassen können überschreiben, um <see langword="true" /> zurückzugeben, wenn sie Kanonisierung unterstützen.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;false&quot; /&gt;.">Gibt <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die .NET Binary XML Format lesen kann.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Das zu verwendende <see cref="T:System.Xml.XmlDictionary" />.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Das Kontingent für diesen Vorgang.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="buffer" /> ist <see langword="null" />.
- oder -
<paramref name="offset" /> ist kleiner als 0 (null) oder größer als die Pufferlänge.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.">
        <paramref name="count" /> ist kleiner als 0 (null) oder größer als die Länge minus Offset.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die .NET Binary XML Format lesen kann.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Xml.XmlDictionary" />.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Der anzuwendende <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Xml.XmlBinaryReaderSession" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> ist kleiner als 0 (null) oder größer als die Länge minus Offset.
- oder -
<paramref name="offset" /> ist kleiner als 0 (null) oder größer als die Pufferlänge.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die .NET Binary XML Format lesen kann.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Xml.XmlDictionary" />.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Der anzuwendende <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Xml.XmlBinaryReaderSession" />.</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">Der bei geschlossenem Reader aufzurufende Delegat.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> ist kleiner als 0 (null) oder größer als die Länge minus Offset.
- oder -
<paramref name="offset" /> ist kleiner als 0 (null) oder größer als die Pufferlänge.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die .NET Binary XML Format lesen kann.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Das Kontingent für diesen Vorgang.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> ist kleiner als 0 (null) oder größer als die Länge minus Offset.
- oder -
<paramref name="offset" /> ist kleiner als 0 (null) oder größer als die Pufferlänge.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die .NET Binary XML Format lesen kann.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Die Kontingente für diesen Vorgang.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die .NET Binary XML Format lesen kann.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Der Stream, aus dem gelesen wird.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> verwenden kann.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Das Kontingent für diesen Vorgang.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> oder <paramref name="quotas" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die .NET Binary XML Format lesen kann.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Der Stream, aus dem gelesen wird.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> verwenden kann.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Das Kontingent für diesen Vorgang.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Das zu verwendende <see cref="T:System.Xml.XmlBinaryReaderSession" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die .NET Binary XML Format lesen kann.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Der Stream, aus dem gelesen wird.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Das zu verwendende <see cref="T:System.Xml.XmlDictionary" />.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Die anzuwendenden <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Das zu verwendende <see cref="T:System.Xml.XmlBinaryReaderSession" />.</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">Der bei geschlossenem Reader aufzurufende Delegat.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die .NET Binary XML Format lesen kann.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Der Stream, aus dem gelesen wird.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Das Kontingent für diesen Vorgang.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" /> aus einem bestehenden <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die XML im MTOM-Format liest.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="encoding" vsli:raw="The possible character encoding of the input.">Die mögliche Zeichencodierung der Eingabe.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Die Kontingente für diesen Reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die XML im MTOM-Format liest.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Die möglichen Zeichencodierungen der Eingabe.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Der Content-Type der MIME-Nachricht.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Das Kontingent für diesen Reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die XML im MTOM-Format liest.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Die möglichen Zeichencodierungen der Eingabe.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Der Content-Type der MIME-Nachricht.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">Die <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, die auf den Reader angewendet werden sollen.</param>
      <param name="maxBufferSize" vsli:raw="The maximum allowed size of the buffer.">Die maximal zulässige Größe des Puffers.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Der Delegat, der aufzurufen ist, wenn der Reader geschlossen wird.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die XML im MTOM-Format liest.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Die möglichen Zeichencodierungen der Eingabe.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Das Kontingent für diesen Reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die XML im MTOM-Format liest.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Der Stream, aus dem gelesen wird.</param>
      <param name="encoding" vsli:raw="The possible character encoding of the stream.">Die mögliche Zeichencodierung des Streams.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Das Kontingent für diesen Reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die XML im MTOM-Format liest.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Der Stream, aus dem gelesen wird.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Die möglichen Zeichencodierungen des Streams.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Der Content-Type der MIME-Nachricht.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Das Kontingent für diesen Reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die XML im MTOM-Format liest.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Der Stream, aus dem gelesen wird.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Die möglichen Zeichencodierungen des Streams.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Der Content-Type der MIME-Nachricht.</param>
      <param name="quotas" vsli:raw="The MIME type of the message.">Der MIME-Typ der Nachricht.</param>
      <param name="maxBufferSize" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">Die <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, die auf den Reader angewendet werden sollen.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Der Delegat, der aufzurufen ist, wenn der Reader geschlossen wird.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, die XML im MTOM-Format liest.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Der Stream, aus dem gelesen wird.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Die möglichen Zeichencodierungen des Streams.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Das Kontingent für diesen Reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">Ein <see cref="T:System.Text.Encoding" />-Objekt, das die anzuwendenden Codierungseigenschaften angibt.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Das anzuwendende <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Der Delegat, der aufzurufen ist, wenn der Reader geschlossen wird.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Die Kontingente für diesen Reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Die Kontingente für diesen Reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Der Stream, aus dem gelesen wird.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">Ein <see cref="T:System.Text.Encoding" />-Objekt, das die anzuwendenden Codierungseigenschaften angibt.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Das anzuwendende <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Der Delegat, der aufzurufen ist, wenn der Reader geschlossen wird.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Der Stream, aus dem gelesen wird.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Die Kontingente für diesen Reader.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary vsli:raw="This method is not yet implemented.">Diese Methode ist noch nicht implementiert.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Immer.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="When overridden in a derived class, gets the value of an attribute.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert eines Attributs ab.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">Eine <see cref="T:System.Xml.XmlDictionaryString" />, die den lokalen Namen des Attributs angibt.</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">Eine <see cref="T:System.Xml.XmlDictionaryString" />, die den Namespace des Attributs darstellt.</param>
      <returns vsli:raw="The value of the attribute.">Der Wert des Attributs.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)">
      <summary vsli:raw="Gets non-atomized names.">Ruft nicht atomisierte Namen ab.</summary>
      <param name="localName" vsli:raw="The local name.">Der lokale Name.</param>
      <param name="namespaceUri" vsli:raw="The namespace for the local &lt;paramref name=&quot;localName&quot; /&gt;.">Der Namespace für den lokalen <paramref name="localName" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">Ruft den Index des lokalen Namens des aktuellen Knotens innerhalb eines Namensarrays ab.</summary>
      <param name="localNames" vsli:raw="The string array of local names to be searched.">Zeichenfolgenarray lokaler Namen, das durchsucht werden soll.</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">Der Namespace des aktuellen Knotens.</param>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">Der Index des lokalen Namens des aktuellen Knotens innerhalb eines Namensarrays.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> oder ein beliebiger Name im Array ist <see langword="null" />.
- oder -
<paramref name="namespaceUri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">Ruft den Index des lokalen Namens des aktuellen Knotens innerhalb eines Namensarrays ab.</summary>
      <param name="localNames" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; array of local names to be searched.">Das <see cref="T:System.Xml.XmlDictionaryString" />-Array lokaler Namen, das durchsucht werden soll.</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">Der Namespace des aktuellen Knotens.</param>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">Der Index des lokalen Namens des aktuellen Knotens innerhalb eines Namensarrays.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> oder ein beliebiger Name im Array ist <see langword="null" />.
- oder -
<paramref name="namespaceUri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">Prüft, ob der Parameter <paramref name="localName" /> der lokale Name des aktuellen Knotens ist.</summary>
      <param name="localName" vsli:raw="The local name of the current node.">Der lokale Name des aktuellen Knotens.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der aktuelle Knoten dem <paramref name="localName" /> dem lokalen Namen des aktuellen Knotens entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">Prüft, ob der Parameter <paramref name="localName" /> der lokale Name des aktuellen Knotens ist.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the current node.">Eine <see cref="T:System.Xml.XmlDictionaryString" />, die den lokalen Namen des aktuellen Knotens darstellt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der aktuelle Knoten dem <paramref name="localName" /> dem lokalen Namen des aktuellen Knotens entspricht, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">Prüft, ob der Parameter <paramref name="namespaceUri" /> der Namespace des aktuellen Knotens ist.</summary>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">Der Namespace des aktuellen Knotens.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="namespaceUri" /> dem Namespace des aktuellen Knotens entspricht, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">Prüft, ob der Parameter <paramref name="namespaceUri" /> der Namespace des aktuellen Knotens ist.</summary>
      <param name="namespaceUri" vsli:raw="Namespace of current node.">Namespace des aktuellen Knotens.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="namespaceUri" /> dem Namespace des aktuellen Knotens entspricht, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary vsli:raw="Checks whether the reader is positioned at the start of an array. This class returns &lt;see langword=&quot;false&quot; /&gt;, but derived classes that have the concept of arrays might return &lt;see langword=&quot;true&quot; /&gt;.">Prüft, ob sich der Reader am Anfang eines Arrays befindet. Diese Klasse gibt <see langword="false" />, abgeleitete Klassen, die über Arraykonzept verfügen, geben jedoch möglicherweise <see langword="true" /> zurück.</summary>
      <param name="type" vsli:raw="Type of the node, if a valid node; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Knotentyp, wenn es sich um einen gültigen Knoten handelt, andernfalls <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the start of an array node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Reader am Anfang eines Arrayknotens positioniert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the first tag is a start tag or empty element tag and if the local name and namespace URI match those of the current node.">Testet, oder das erste Tag ein Starttag oder ein leeres Elementtag ist und ob der lokale Name und der Namespace-URI mit den Namen des aktuellen Knotens übereinstimmen.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">Eine <see cref="T:System.Xml.XmlDictionaryString" />, die den lokalen Namen des Attributs darstellt.</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">Eine <see cref="T:System.Xml.XmlDictionaryString" />, die den Namespace des Attributs angibt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the first tag in the array is a start tag or empty element tag and matches &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das erste Tag des Arrays ein Starttag oder ein leeres Elementtag ist und mit <paramref name="localName" /> und <paramref name="namespaceUri" /> übereinstimmt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary vsli:raw="Tests whether the current node is a text node.">Testet, ob es sich bei dem aktuellen Knoten um einen Textknoten handelt.</summary>
      <param name="nodeType" vsli:raw="Type of the node being tested.">Typ des getesteten Knotens.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node type is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.Whitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.SignificantWhitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;, or &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Knotentyp <see cref="F:System.Xml.XmlNodeType.Text" />, <see cref="F:System.Xml.XmlNodeType.Whitespace" />, <see cref="F:System.Xml.XmlNodeType.SignificantWhitespace" />, <see cref="F:System.Xml.XmlNodeType.CDATA" /> oder <see cref="F:System.Xml.XmlNodeType.Attribute" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element.">Testet, ob der aktuelle Inhaltsknoten ein Startelement oder ein leeres Element ist.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element matches the given argument.">Testet, ob der aktuelle Inhaltsknoten ein Startelement oder ein leeres Element ist und ob die <see cref="P:System.Xml.XmlReader.Name" />-Eigenschaft des Elements dem angegebenen Argument entspricht.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element.">Die <see cref="P:System.Xml.XmlReader.Name" />-Eigenschaft des Elements.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given arguments.">Testet, ob der aktuelle Inhaltsknoten ein Startelement oder ein leeres Element ist und ob die <see cref="P:System.Xml.XmlReader.LocalName" />-Eigenschaft und die <see cref="P:System.Xml.XmlReader.NamespaceURI" />-Eigenschaft des Elements den angegebenen Argumenten entsprechen.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given argument.">Testet, ob der aktuelle Inhaltsknoten ein Startelement oder ein leeres Element ist und ob die <see cref="P:System.Xml.XmlReader.LocalName" />-Eigenschaft und die <see cref="P:System.Xml.XmlReader.NamespaceURI" />-Eigenschaft des Elements den angegebenen Argumenten entsprechen.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary vsli:raw="Gets the quota values that apply to the current instance of this class.">Ruft die Kontingentwerte für die aktuelle Instanz dieser Klasse ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; that applies to the current instance of this class.">Die <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> für die aktuelle Instanz dieser Klasse.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.Boolean" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Das Array, in dem die Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Die Anzahl der in das Array einzufügenden Knoten.</param>
      <returns vsli:raw="The number of nodes put in the array.">Die Anzahl der in das Array eingefügten Knoten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.DateTime" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Das Array, in dem die Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Die Anzahl der in das Array einzufügenden Knoten.</param>
      <returns vsli:raw="The number of nodes put in the array.">Die Anzahl der in das Array eingefügten Knoten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.Decimal" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Das Array, in dem die Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Die Anzahl der in das Array einzufügenden Knoten.</param>
      <returns vsli:raw="The number of nodes put in the array.">Die Anzahl der in das Array eingefügten Knoten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.Double" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Das Array, in dem die Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Die Anzahl der in das Array einzufügenden Knoten.</param>
      <returns vsli:raw="The number of nodes put in the array.">Die Anzahl der in das Array eingefügten Knoten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.Guid" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Das Array, in dem die Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Die Anzahl der in das Array einzufügenden Knoten.</param>
      <returns vsli:raw="The number of nodes put in the array.">Die Anzahl der in das Array eingefügten Knoten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">Liest wiederholte Vorkommen von ganzen Zahlen vom Typ <see langword="short" /> ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Das Array, in dem die ganzen Zahlen Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Die Anzahl der in das Array einzufügenden ganzen Zahlen.</param>
      <returns vsli:raw="The number of integers put in the array.">Die Anzahl der in das Array eingefügten ganzen Zahlen.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">Liest wiederholte Vorkommen von ganzen Zahlen in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Das Array, in dem die ganzen Zahlen Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Die Anzahl der in das Array einzufügenden ganzen Zahlen.</param>
      <returns vsli:raw="The number of integers put in the array.">Die Anzahl der in das Array eingefügten ganzen Zahlen.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">Liest wiederholte Vorkommen von ganzen Zahlen vom Typ <see langword="long" /> ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Das Array, in dem die ganzen Zahlen Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Die Anzahl der in das Array einzufügenden ganzen Zahlen.</param>
      <returns vsli:raw="The number of integers put in the array.">Die Anzahl der in das Array eingefügten ganzen Zahlen.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">Liest wiederholte Vorkommen von Zahlen vom Typ <see langword="float" /> in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">Das Array, in dem Float-Zahlen abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">Die Anzahl der in das Array einzufügenden Float-Zahlen.</param>
      <returns vsli:raw="The umber of float numbers put in the array.">Die Anzahl der in das Array eingefügten Float-Zahlen.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.TimeSpan" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Das Array, in dem die Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Die Anzahl der in das Array einzufügenden Knoten.</param>
      <returns vsli:raw="The number of nodes put in the array.">Die Anzahl der in das Array eingefügten Knoten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.Boolean" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Das Array, in dem die Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Die Anzahl der in das Array einzufügenden Knoten.</param>
      <returns vsli:raw="The number of nodes put in the array.">Die Anzahl der in das Array eingefügten Knoten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.DateTime" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Das Array, in dem die Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Die Anzahl der in das Array einzufügenden Knoten.</param>
      <returns vsli:raw="The number of nodes put in the array.">Die Anzahl der in das Array eingefügten Knoten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.Decimal" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Das Array, in dem die Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Die Anzahl der in das Array einzufügenden Knoten.</param>
      <returns vsli:raw="The number of nodes put in the array.">Die Anzahl der in das Array eingefügten Knoten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes type into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.Double" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Das Array, in dem die Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Die Anzahl der in das Array einzufügenden Knoten.</param>
      <returns vsli:raw="The number of nodes put in the array.">Die Anzahl der in das Array eingefügten Knoten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.Guid" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Das Array, in dem die Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Die Anzahl der in das Array einzufügenden Knoten.</param>
      <returns vsli:raw="The number of nodes put in the array.">Die Anzahl der in das Array eingefügten Knoten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">Liest wiederholte Vorkommen von ganzen Zahlen vom Typ <see langword="short" /> ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Das Array, in dem die ganzen Zahlen Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Die Anzahl der in das Array einzufügenden ganzen Zahlen.</param>
      <returns vsli:raw="The number of integers put in the array.">Die Anzahl der in das Array eingefügten ganzen Zahlen.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">Liest wiederholte Vorkommen von ganzen Zahlen in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Das Array, in dem die ganzen Zahlen Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Die Anzahl der in das Array einzufügenden ganzen Zahlen.</param>
      <returns vsli:raw="The number of integers put in the array.">Die Anzahl der in das Array eingefügten ganzen Zahlen.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">Liest wiederholte Vorkommen von ganzen Zahlen vom Typ <see langword="long" /> ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Das Array, in dem die ganzen Zahlen Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Die Anzahl der in das Array einzufügenden ganzen Zahlen.</param>
      <returns vsli:raw="The number of integers put in the array.">Die Anzahl der in das Array eingefügten ganzen Zahlen.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">Liest wiederholte Vorkommen von Zahlen vom Typ <see langword="float" /> in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">Das Array, in dem Float-Zahlen abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">Die Anzahl der in das Array einzufügenden Float-Zahlen.</param>
      <returns vsli:raw="The number of float numbers put in the array.">Die Anzahl der in das Array eingefügten Float-Zahlen.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.TimeSpan" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Das Array, in dem die Knoten abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Die Anzahl der in das Array einzufügenden Knoten.</param>
      <returns vsli:raw="The number of nodes put in the array.">Die Anzahl der in das Array eingefügten Knoten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.Boolean" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">Ein <see cref="T:System.Boolean" />-Array der <see cref="T:System.Boolean" />-Knoten.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Liest wiederholte Vorkommen von <see cref="T:System.Boolean" />-Knoten in ein typisiertes Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">Ein <see cref="T:System.Boolean" />-Array der <see cref="T:System.Boolean" />-Knoten.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Converts a node's content to a specified type.">Konvertiert den Inhalt eines Knotens in einen angegebenen Typ.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the value to be returned.">Der <see cref="T:System.Type" /> des zurückzugebenden Werts.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object to an &lt;c&gt;xs:string&lt;/c&gt;. This value can be a null reference.">Ein <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt, das für die Auflösung von Präfixen von Namespaces verwendet wird, die im Zusammenhang mit der Typkonvertierung stehen. Dieses kann zum Beispiel beim Konvertieren eines <see cref="T:System.Xml.XmlQualifiedName" />-Objekts in einen <c>xs:string</c> verwendet werden. Dieser Wert kann ein NULL-Verweis sein.</param>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">Der verkettete Textinhalt oder Attributwert, der in den angeforderten Typ konvertiert wurde.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">Liest den Inhalt und gibt die Base64-decodierten binären Bytes zurück.</summary>
      <returns vsli:raw="A byte array that contains the Base64 decoded binary bytes.">Ein Byte-Array, das die Base64-decodierten binären Bytes zurückgibt.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than the MaxArrayLength quota for this reader.">Die Array-Größe ist größer als das MaxArrayLength-Kontingent für diesen Reader.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Liest den Inhalt und gibt die <see langword="BinHex" />-decodierten binären Bytes zurück.</summary>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Ein Byte-Array, das die <see langword="BinHex" />-decodierten binären Bytes enthält.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Die Arraygröße ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Liest den Inhalt und gibt die <see langword="BinHex" />-decodierten binären Bytes zurück.</summary>
      <param name="maxByteArrayContentLength" vsli:raw="The maximum array length.">Die maximal zulässige Arraylänge.</param>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Ein Byte-Array, das die <see langword="BinHex" />-decodierten binären Bytes enthält.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;paramref name=&quot;maxByteArrayContentLength&quot; /&gt;.">Die Arraygröße ist größer als <paramref name="maxByteArrayContentLength" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content into a &lt;see langword=&quot;char&quot; /&gt; array.">Liest den Inhalt in ein <see langword="char" />-Array ein.</summary>
      <param name="chars" vsli:raw="The array into which the characters are put.">Das Array, in dem die Zeichen abgelegt werden.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of characters to put in the array.">Die Anzahl der in das Array einzufügenden Zeichen.</param>
      <returns vsli:raw="Number of characters read.">Anzahl der gelesenen Zeichen.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;decimal&quot; /&gt;.">Konvertiert den Inhalt eines Knotens in <see langword="decimal" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; representation of node's content.">Die <see langword="decimal" />-Darstellung eines Knoteninhalts.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;float&quot; /&gt;.">Konvertiert den Inhalt eines Knotens in <see langword="float" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;float&quot; /&gt; representation of node's content.">Die <see langword="float" />-Darstellung eines Knoteninhalts.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;guid&quot; /&gt;.">Konvertiert den Inhalt eines Knotens in <see langword="guid" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;guid&quot; /&gt; representation of node's content.">Die <see langword="guid" />-Darstellung eines Knoteninhalts.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary vsli:raw="Converts a node's content to a qualified name representation.">Konvertiert den Inhalt eines Knotens in eine qualifizierte Namensdarstellung.</summary>
      <param name="localName" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">Der <see cref="P:System.Xml.XmlReader.LocalName" />-Teil des qualifizierten Namens (<see langword="out" />-Parameter).</param>
      <param name="namespaceUri" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">Der <see cref="P:System.Xml.XmlReader.NamespaceURI" />-Teil des qualifizierten Namens (<see langword="out" />-Parameter).</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary vsli:raw="Converts a node's content to a string.">Konvertiert den Inhalt eines Knotens in eine Zeichenfolge.</summary>
      <returns vsli:raw="The node content in a string representation.">Der Knoteninhalt in einer Zeichenfolgendarstellung.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary vsli:raw="Converts a node's content to a string.">Konvertiert den Inhalt eines Knotens in eine Zeichenfolge.</summary>
      <param name="maxStringContentLength" vsli:raw="The maximum string length.">Die maximal zulässige Zeichenfolgenlänge.</param>
      <returns vsli:raw="Node content in string representation.">Knoteninhalt in einer Zeichenfolgendarstellung.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">Konvertiert den Inhalt eines Knotens in eine Zeichenfolge.</summary>
      <param name="strings" vsli:raw="The array of strings to match content against.">Das Zeichenfolgenarray, mit dem der Inhalt übereinstimmen muss.</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">Der Index des Eintrags in <paramref name="strings" />, der mit dem Inhalt übereinstimmt.</param>
      <returns vsli:raw="The node content in a string representation.">Der Knoteninhalt in einer Zeichenfolgendarstellung.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> ist <see langword="null" />.
- oder -
Ein Eintrag in <paramref name="strings" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">Konvertiert den Inhalt eines Knotens in eine Zeichenfolge.</summary>
      <param name="strings" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; objects to match content against.">Das Array von <see cref="T:System.Xml.XmlDictionaryString" />-Objekten, mit dem der Inhalt übereinstimmen muss.</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">Der Index des Eintrags in <paramref name="strings" />, der mit dem Inhalt übereinstimmt.</param>
      <returns vsli:raw="The node content in a string representation.">Der Knoteninhalt in einer Zeichenfolgendarstellung.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> ist <see langword="null" />.
- oder -
Ein Eintrag in <paramref name="strings" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary vsli:raw="Converts a node's content to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Konvertiert den Inhalt eines Knotens in <see cref="T:System.TimeSpan" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representation of node's content.">Die <see cref="T:System.TimeSpan" />-Darstellung eines Knoteninhalts.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary vsli:raw="Converts a node's content to a unique identifier.">Konvertiert den Inhalt eines Knotens in einen eindeutigen Bezeichner.</summary>
      <returns vsli:raw="The node's content represented as a unique identifier.">Der als eindeutiger Bezeichner dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Konvertiert den Inhalt eines Knotens in ein <see cref="T:System.DateTime" />-Array.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Der als <see cref="T:System.DateTime" />-Array dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Konvertiert den Inhalt eines Knotens in ein <see cref="T:System.DateTime" />-Array.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Der als <see cref="T:System.DateTime" />-Array dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Konvertiert den Inhalt eines Knotens in ein <see cref="T:System.Decimal" />-Array.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Der als <see cref="T:System.Decimal" />-Array dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Konvertiert den Inhalt eines Knotens in ein <see cref="T:System.Decimal" />-Array.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Der als <see cref="T:System.Decimal" />-Array dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Konvertiert den Inhalt eines Knotens in ein <see cref="T:System.Double" />-Array.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Der als <see cref="T:System.Double" />-Array dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Konvertiert den Inhalt eines Knotens in ein <see cref="T:System.Double" />-Array.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Der als <see cref="T:System.Double" />-Array dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary vsli:raw="Converts a node's content to a array of Base64 bytes.">Konvertiert den Inhalt eines Knotens in ein Base64-Bytearray.</summary>
      <returns vsli:raw="The node's content represented as an array of Base64 bytes.">Der als Base64-Bytearray dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary vsli:raw="Converts a node's content to an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">Konvertiert den Inhalt eines Knotens in ein <see langword="BinHex" />-Bytearray.</summary>
      <returns vsli:raw="The node's content represented as an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">Der als <see langword="BinHex" />-Bytearray dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Konvertiert den Inhalt eines Elements in einen <see cref="T:System.Boolean" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Der als <see cref="T:System.Boolean" /> dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Konvertiert den Inhalt eines Elements in einen <see cref="T:System.DateTime" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Der als <see cref="T:System.DateTime" /> dargestellte Inhalt des Knotens.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">Der Format des Elements ist ungültig.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">Der Format des Elements ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Konvertiert den Inhalt eines Elements in einen <see cref="T:System.Decimal" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Der als <see cref="T:System.Decimal" /> dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Konvertiert den Inhalt eines Elements in einen <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Der als <see cref="T:System.Double" /> dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary vsli:raw="Converts an element's content to a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Konvertiert den Inhalt eines Elements in eine Gleitkommazahl (<see cref="T:System.Single" />).</summary>
      <returns vsli:raw="The node's content represented as a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Der als Gleitkommazahl <see cref="T:System.Single" /> dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Konvertiert den Inhalt eines Elements in einen <see cref="T:System.Guid" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Der als <see cref="T:System.Guid" /> dargestellte Inhalt des Knotens.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">Der Format des Elements ist ungültig.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">Der Format des Elements ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary vsli:raw="Converts an element's content to an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Konvertiert den Inhalt eines Elements in ein ganze Zahl (<see cref="T:System.Int32" />).</summary>
      <returns vsli:raw="The node's content represented as an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Der als ganze Zahl (<see cref="T:System.Int32" />) dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary vsli:raw="Converts an element's content to a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Konvertiert den Inhalt eines Elements in ein lange ganze Zahl (<see cref="T:System.Int64" />).</summary>
      <returns vsli:raw="The node's content represented as a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Der als lange ganze Zahl (<see cref="T:System.Int64" />) dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert den Inhalt eines Elements in ein <see cref="T:System.String" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Der als <see cref="T:System.String" /> dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Konvertiert den Inhalt eines Elements in einen <see cref="T:System.TimeSpan" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Der als <see cref="T:System.TimeSpan" /> dargestellte Inhalt des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary vsli:raw="Converts an element's content to a unique identifier.">Konvertiert den Inhalt eines Elements in einen eindeutigen Bezeichner.</summary>
      <returns vsli:raw="The node's content represented as a unique identifier.">Der als eindeutiger Bezeichner dargestellte Inhalt des Knotens.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">Der Format des Elements ist ungültig.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">Der Format des Elements ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary vsli:raw="Checks whether the current node is an element and advances the reader to the next node.">Überprüft, ob der aktuelle Knoten ein Element ist, und verschiebt den Reader auf den nächsten Knoten.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> gibt <see langword="false" /> zurück.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;name&quot; /&gt; and advances the reader to the next node.">Überprüft, ob der aktuelle Knoten ein Element mit dem angegebenen <paramref name="name" /> ist, und verschiebt den Reader auf den nächsten Knoten.</summary>
      <param name="name" vsli:raw="The qualified name of the element.">Der qualifizierte Name des Elements.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> gibt <see langword="false" /> zurück.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Überprüft, ob der aktuelle Knoten ein Element mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> ist, und verschiebt den Reader auf den nächsten Knoten.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> gibt <see langword="false" /> zurück.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Überprüft, ob der aktuelle Knoten ein Element mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> ist, und verschiebt den Reader auf den nächsten Knoten.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> gibt <see langword="false" /> zurück.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Liest den Inhalt einer Reihe von Knoten mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> in ein <see cref="T:System.Guid" />-Array.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Ein Array von <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Liest den Inhalt einer Reihe von Knoten mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> in ein <see cref="T:System.Guid" />-Array.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Ein Array von <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Liest den Inhalt einer Reihe von Knoten mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> in ein Array aus <see langword="short" /> ganzen Zahlen (<see cref="T:System.Int16" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Ein Array aus <see langword="short" /> ganzen Zahlen (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Liest den Inhalt einer Reihe von Knoten mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> in ein Array aus <see langword="short" /> ganzen Zahlen (<see cref="T:System.Int16" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Ein Array aus <see langword="short" /> ganzen Zahlen (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Liest den Inhalt einer Reihe von Knoten mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> in ein Array aus ganzen Zahlen (<see cref="T:System.Int32" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Ein Array aus ganzen Zahlen (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Liest den Inhalt einer Reihe von Knoten mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> in ein Array aus ganzen Zahlen (<see cref="T:System.Int32" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Ein Array aus ganzen Zahlen (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Liest den Inhalt einer Reihe von Knoten mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> in ein Array aus <see langword="long" /> ganzen Zahlen (<see cref="T:System.Int64" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Ein Array aus <see langword="long" /> ganzen Zahlen (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Liest den Inhalt einer Reihe von Knoten mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> in ein Array aus <see langword="long" /> ganzen Zahlen (<see cref="T:System.Int64" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Ein Array aus <see langword="long" /> ganzen Zahlen (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Liest den Inhalt einer Reihe von Knoten mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> in ein Array aus <see langword="float" />-Zahlen (<see cref="T:System.Single" />) ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Ein Array aus <see langword="float" />-Zahlen (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Liest den Inhalt einer Reihe von Knoten mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> in ein Array aus <see langword="float" />-Zahlen (<see cref="T:System.Single" />) ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Ein Array aus <see langword="float" />-Zahlen (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Überprüft, ob der aktuelle Knoten ein Element mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> ist, und verschiebt den Reader auf den nächsten Knoten.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString">
      <summary vsli:raw="Reads the contents of the current node into a string.">Liest den Inhalt des aktuellen Knotens in eine Zeichenfolge.</summary>
      <returns vsli:raw="A string that contains the contents of the current node.">Eine Zeichenfolge, die den Inhalt des aktuellen Knotens enthält.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">Der Inhalt des aktuellen Knotens kann nicht gelesen werden.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">Die maximal zulässige Zeichenfolgenlänge ist überschritten.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)">
      <summary vsli:raw="Reads the contents of the current node into a string with a given maximum length.">Liest den Inhalt des aktuellen Knotens in eine Zeichenfolge mit der vorgegebenen maximalen Länge ein.</summary>
      <param name="maxStringContentLength" vsli:raw="Maximum allowed string length.">Die maximal zulässige Zeichenfolgenlänge ist überschritten.</param>
      <returns vsli:raw="A string that contains the contents of the current node.">Eine Zeichenfolge, die den Inhalt des aktuellen Knotens enthält.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">Der Inhalt des aktuellen Knotens kann nicht gelesen werden.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">Die maximal zulässige Zeichenfolgenlänge ist überschritten.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Liest den Inhalt einer Reihe von Knoten mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> in ein <see cref="T:System.TimeSpan" />-Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Ein <see cref="T:System.TimeSpan" />-Array.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Liest den Inhalt einer Reihe von Knoten mit dem angegebenen <paramref name="localName" /> und <paramref name="namespaceUri" /> in ein <see cref="T:System.TimeSpan" />-Array ein.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Ein <see cref="T:System.TimeSpan" />-Array.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Not implemented.">Nicht implementiert.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Der Puffer, von dem gelesen wird.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <returns vsli:raw="Not implemented.">Nicht implementiert.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Immer</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="This method is not yet implemented.">Diese Methode ist noch nicht implementiert.</summary>
      <param name="stream" vsli:raw="The stream to read from.">Der Datenstrom, aus dem gelesen wird.</param>
      <param name="includeComments" vsli:raw="Determines whether comments are included.">Bestimmt, ob Kommentare eingeschlossen werden.</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">Die Präfixe, die eingeschlossen werden sollen.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Immer</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Nicht in dieser Klasse implementiert (es wird immer <see langword="false" /> zurückgegeben). Kann in abgeleiteten Klassen überschrieben werden.</summary>
      <param name="count" vsli:raw="Returns 0, unless overridden in a derived class.">Gibt 0 zurück, es sei denn, es wurde in einer abgeleiteten Klasse überschrieben.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, es sei denn, es wurde in einer abgeleiteten Klasse überschrieben.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Nicht in dieser Klasse implementiert (es wird immer <see langword="false" /> zurückgegeben). Kann in abgeleiteten Klassen überschrieben werden.</summary>
      <param name="length" vsli:raw="Returns 0, unless overridden in a derived class.">Gibt 0 zurück, es sei denn, es wurde in einer abgeleiteten Klasse überschrieben.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, es sei denn, es wurde in einer abgeleiteten Klasse überschrieben.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Nicht in dieser Klasse implementiert (es wird immer <see langword="false" /> zurückgegeben). Kann in abgeleiteten Klassen überschrieben werden.</summary>
      <param name="localName" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class. .">Gibt <see langword="null" /> zurück, es sei denn, es wurde in einer abgeleiteten Klasse überschrieben. .</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, es sei denn, es wurde in einer abgeleiteten Klasse überschrieben.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Nicht in dieser Klasse implementiert (es wird immer <see langword="false" /> zurückgegeben). Kann in abgeleiteten Klassen überschrieben werden.</summary>
      <param name="namespaceUri" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">Gibt <see langword="null" /> zurück, es sei denn, es wurde in einer abgeleiteten Klasse überschrieben.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, es sei denn, es wurde in einer abgeleiteten Klasse überschrieben.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Nicht in dieser Klasse implementiert (es wird immer <see langword="false" /> zurückgegeben). Kann in abgeleiteten Klassen überschrieben werden.</summary>
      <param name="value" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">Gibt <see langword="null" /> zurück, es sei denn, es wurde in einer abgeleiteten Klasse überschrieben.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, es sei denn, es wurde in einer abgeleiteten Klasse überschrieben.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary vsli:raw="Contains configurable quota values for XmlDictionaryReaders.">Enthält konfigurierbare Kontingentwerte für XmlDictionaryReaders.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary vsli:raw="Creates a new instance of this class.">Erstellt eine neue Instanz dieser Klasse.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Sets the properties on a passed-in quotas instance, based on the values in this instance.">Legt die Eigenschaften für eine übergebene Kontingenteninstanz auf Grundlage der Werte in dieser Instanz fest.</summary>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; instance to which to copy values.">Die <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Instanz, in die die Werte kopiert werden.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for the passed in instance.">Mit <see langword="set" /> wird versucht, den Wert festzulegen, doch Kontingentwerte sind für diese übergebene Instanz schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Passed in target &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Die übergebenen Ziel-<paramref name="quotas" /> sind <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary vsli:raw="Gets an instance of this class with all properties set to maximum values.">Ruft eine Instanz dieser Klasse mit allen auf maximale Werte festgelegten Eigenschaften ab.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; with properties set to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> mit Eigenschaften, die auf <see cref="F:System.Int32.MaxValue" /> eingestellt sind.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary vsli:raw="Gets or sets the maximum allowed array length.">Ruft die maximal zulässige Arraylänge ab oder legt sie fest.</summary>
      <returns vsli:raw="The maximum allowed array length. The default is 16384.">Die maximal zulässige Arraylänge. Der Standardwert ist "16384".</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Mit <see langword="set" /> wird versucht, den Wert festzulegen, aber Kontingentwerte sind für diese Instanz schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Mit <see langword="set" /> wird versucht, den Wert auf einen kleineren Wert als 0 (null) festzulegen.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary vsli:raw="Gets or sets the maximum allowed bytes returned for each read.">Ruft die bei jedem Lesevorgang zurückgegebenen maximal zulässigen Bytes ab oder legt sie fest.</summary>
      <returns vsli:raw="The maximum allowed bytes returned for each read. The default is 4096.">Die maximal zulässigen Bytes, die bei jedem Lesevorgang zurückgegeben werden. Der Standard ist 4096.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Mit <see langword="set" /> wird versucht, den Wert festzulegen, aber Kontingentwerte sind für diese Instanz schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Mit <see langword="set" /> wird versucht, den Wert auf einen kleineren Wert als 0 (null) festzulegen.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary vsli:raw="Gets or sets the maximum nested node depth.">Ruft die maximale Tiefe geschachtelter Knoten ab oder legt sie fest.</summary>
      <returns vsli:raw="The maximum nested node depth. The default is 32.">Die maximale Tiefe geschachtelter Knoten. Der Standardwert ist 32.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value and quota values are read-only for this instance.">Mit <see langword="set" /> wird versucht, den Wert festzulegen. Kontingentwerte sind für diese Instanz schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value is less than zero.">Mit <see langword="set" /> wird versucht, den Wert auf kleiner als 0 (null) festzulegen.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary vsli:raw="Gets or sets the maximum characters allowed in a table name.">Ruft die maximal in einem Tabellennamen zulässigen Zeichen ab oder legt sie fest.</summary>
      <returns vsli:raw="The maximum characters allowed in a table name. The default is 16384.">Die maximal zulässigen Zeichen in einem Tabellennamen. Der Standardwert ist "16384".</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Mit <see langword="set" /> wird versucht, den Wert festzulegen, aber Kontingentwerte sind für diese Instanz schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Mit <see langword="set" /> wird versucht, den Wert auf einen kleineren Wert als 0 (null) festzulegen.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary vsli:raw="Gets or sets the maximum string length returned by the reader.">Ruft die maximale vom Reader zurückgegebene Zeichenfolgenlänge ab oder legt sie fest.</summary>
      <returns vsli:raw="The maximum string length returned by the reader. The default is 8192.">Die maximale Zeichenfolgenlänge, die vom Reader zurückgegeben wird. Der Standard ist 8192.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Mit <see langword="set" /> wird versucht, den Wert festzulegen, aber Kontingentwerte sind für diese Instanz schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Mit <see langword="set" /> wird versucht, den Wert auf einen kleineren Wert als 0 (null) festzulegen.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas">
      <summary vsli:raw="Gets the modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">Ruft die geänderten Kontingente für die <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> ab.</summary>
      <returns vsli:raw="The modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">Die geänderten Kontingente für <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotaTypes">
      <summary vsli:raw="Enumerates the configurable quota values for XmlDictionaryReaders.">Enthält konfigurierbare Kontingentwerte für XmlDictionaryReader.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxArrayLength">
      <summary vsli:raw="Specifies the maximum allowed array length.">Gibt die maximal zulässige Arraylänge an.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxBytesPerRead">
      <summary vsli:raw="Specifies the maximum allowed bytes returned for each read.">Gibt die maximal zulässigen Bytes an, die bei jedem Lesevorgang zurückgegeben werden.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxDepth">
      <summary vsli:raw="Specifies the maximum nested node depth.">Gibt die maximale Tiefe geschachtelter Knoten an.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxNameTableCharCount">
      <summary vsli:raw="Specifies the maximum characters allowed in a table name.">Gibt die maximal zulässigen Zeichen in einem Tabellennamen an.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxStringContentLength">
      <summary vsli:raw="Specifies the maximum string length returned by the reader.">Gibt die maximale Zeichenfolgenlänge an, die vom Reader zurückgegeben wird.</summary>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary vsli:raw="Represents an entry stored in a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Stellt einen in <see cref="T:System.Xml.XmlDictionary" /> gespeicherten Eintrag dar.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary vsli:raw="Creates an instance of this class.">Erstellt eine Instanz dieser Klasse.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; containing this instance.">Das diese Instanz enthaltende <see cref="T:System.Xml.IXmlDictionary" />.</param>
      <param name="value" vsli:raw="The string that is the value of the dictionary entry.">Die Zeichenfolge, die der Wert des Wörterbucheintrags ist.</param>
      <param name="key" vsli:raw="The integer that is the key of the dictionary entry.">Die ganze Zahl, die der Schlüssel des Wörterbucheintrags ist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; / 4.">
        <paramref name="key" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.Int32.MaxValue" /> / 4.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; passed to the constructor of this instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Stellt das <see cref="T:System.Xml.IXmlDictionary" /> dar, das an den Konstruktor für diese Instanz von <see cref="T:System.Xml.XmlDictionaryString" /> übergeben wurde.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; for this dictionary entry.">Das <see cref="T:System.Xml.IXmlDictionary" /> für diesen Wörterbucheintrag.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">Ruft <see cref="T:System.Xml.XmlDictionaryString" /> ab, die die leere Zeichenfolge darstellt.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">
        <see cref="T:System.Xml.XmlDictionaryString" />, die die leere Zeichenfolge darstellt.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary vsli:raw="Gets the integer key for this instance of the class.">Ruft den ganzzahligen Schlüssel für diese Instanz der Klasse ab.</summary>
      <returns vsli:raw="The integer key for this instance of the class.">Der ganzzahlige Schlüssel für diese Instanz der Klasse.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary vsli:raw="Displays a text representation of this object.">Zeigt eine Textdarstellung dieses Objekts an.</summary>
      <returns vsli:raw="The string value for this instance of the class.">Der Zeichenfolgenwert dieser Instanz der Klasse.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary vsli:raw="Gets the string value for this instance of the class.">Ruft den Zeichenfolgenwert dieser Instanz der Klasse ab.</summary>
      <returns vsli:raw="The string value for this instance of the class.">Der Zeichenfolgenwert dieser Instanz der Klasse.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary vsli:raw="Represents an abstract class that Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to do serialization and deserialization.">Stellt eine abstrakte Klasse dar, die die Windows Communication Foundation (WCF) von <see cref="T:System.Xml.XmlWriter" /> ableitet, um Serialisierung und Deserialisierung durchzuführen.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlDictionaryWriter" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">Diese Eigenschaft gibt immer <see langword="false" /> zurück. Die abgeleiteten Klassen können überschreiben, um <see langword="true" /> zurückzugeben, wenn sie Kanonisierung unterstützen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> in allen Fällen.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />, die binäres WCF-XML-Format schreibt.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Der Stream, in den geschrieben werden soll.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />, die binäres WCF-XML-Format schreibt.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Der Stream, in den geschrieben werden soll.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">
        <see cref="T:System.Xml.XmlDictionary" />, das als freigegebenes Wörterbuch verwendet werden soll.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />, die binäres WCF-XML-Format schreibt.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Der Stream, in den geschrieben werden soll.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">
        <see cref="T:System.Xml.XmlDictionary" />, das als freigegebenes Wörterbuch verwendet werden soll.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">Die zu verwendende <see cref="T:System.Xml.XmlBinaryWriterSession" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />, die binäres WCF-XML-Format schreibt.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Der Stream, aus dem gelesen wird.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">
        <see cref="T:System.Xml.XmlDictionary" />, das als freigegebenes Wörterbuch verwendet werden soll.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Xml.XmlBinaryWriterSession" />.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass der Stream nach Abschluss des Vorgangs vom Writer geschlossen wird, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" /> aus einem bestehenden <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlWriter" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />, die XML im MTOM-Format schreibt.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Der Stream, in den geschrieben werden soll.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Die Zeichencodierung des Streams.</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">Die maximale Byteanzahl, die im Writer gepuffert wird.</param>
      <param name="startInfo" vsli:raw="An attribute in the ContentType SOAP header.">Ein Attribut im ContentType-SOAP-Header.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />, die XML im MTOM-Format schreibt.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Der Stream, in den geschrieben werden soll.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Die Zeichencodierung des Streams.</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">Die maximale Byteanzahl, die im Writer gepuffert wird.</param>
      <param name="startInfo" vsli:raw="The content-type of the MIME part that contains the Infoset.">Der Inhaltstyp des MIME-Teils, der das Infoset enthält.</param>
      <param name="boundary" vsli:raw="The MIME boundary in the message.">Die MIME-Begrenzung in der Nachricht.</param>
      <param name="startUri" vsli:raw="The content-id URI of the MIME part that contains the Infoset.">Der Inhalts-ID-URI des MIME-Teils, der das Infoset enthält.</param>
      <param name="writeMessageHeaders" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write message headers.">
        <see langword="true" />, um Nachrichtenheader zu schreiben.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass der Stream nach Abschluss des Vorgangs vom Writer geschlossen wird, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />, die Text-XML schreibt.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Der Stream, in den geschrieben werden soll.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />, die Text-XML schreibt.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Der Stream, in den geschrieben werden soll.</param>
      <param name="encoding" vsli:raw="The character encoding of the output.">Die Zeichencodierung der Ausgabe.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Erstellt eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />, die Text-XML schreibt.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Der Stream, in den geschrieben werden soll.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Die Zeichencodierung des Streams.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass der Stream nach Abschluss des Vorgangs vom Writer geschlossen wird, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Eine Instanz von <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary vsli:raw="When implemented by a derived class, it stops the canonicalization started by the matching &lt;see cref=&quot;M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])&quot; /&gt; call.">Bei der Implementierung durch eine abgeleitete Klasse wird die Kanonisierung beendet, die vom entsprechenden <see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" />-Aufruf gestartet wurde.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">Methode ist noch nicht implementiert.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="When implemented by a derived class, it starts the canonicalization.">Startet die Kanonisierung bei Implementierung durch eine abgeleitete Klasse.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Der Stream, in den geschrieben werden soll.</param>
      <param name="includeComments" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include comments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Kommentare eingeschlossen werden sollen, andernfalls <see langword="false" />.</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">Die Präfixe, die eingeschlossen werden sollen.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">Methode ist noch nicht implementiert.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Boolean" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the data.">Das Array, das die Daten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of values to write from the array.">Die Anzahl der aus dem Array zu schreibenden Werte.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.DateTime" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Decimal" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Double" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Guid" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Int16" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Int32" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Int64" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Single" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.TimeSpan" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Boolean" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.DateTime" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Decimal" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Double" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Guid" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Int16" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Int32" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Int64" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.Single" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Schreibt Knoten von einem <see cref="T:System.TimeSpan" />-Array.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Das Array, das die Knoten enthält.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Der Anfangsindex im Array.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Die Anzahl an Knoten, die vom Array abzurufen sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge.
- oder -
<paramref name="count" /> ist &lt; 0 oder &gt; <paramref name="array" />-Länge minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">Schreibt einen durch Attribute qualifizierten Namen und Wert.</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute.">Das Präfix des Attributs.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Der lokale Name des Attributs.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">Der Namespace-URI dieses Attributs.</param>
      <param name="value" vsli:raw="The attribute.">Das Attribut.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">Schreibt einen durch Attribute qualifizierten Namen und Wert.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Der lokale Name des Attributs.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">Der Namespace-URI dieses Attributs.</param>
      <param name="value" vsli:raw="The attribute.">Das Attribut.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.">Codiert die angegebenen binären Bytes asynchron als Base64 und schreibt den resultierenden Text.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Zu codierendes Bytearray.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Die Position innerhalb des Puffers, die den Anfang der zu schreibenden Bytes kennzeichnet.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Die Anzahl der zu schreibenden Bytes.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBase64&quot; /&gt; operation.">Die Aufgabe, die den asynchronen <see langword="WriteBase64" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Eine <see cref="T:System.Xml.XmlDictionaryWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlDictionaryWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">Schreibt ein Element mit Textinhalt.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Das Präfix des Elements.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="value" vsli:raw="The element content.">Der Elementinhalt.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">Schreibt ein Element mit Textinhalt.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <param name="value" vsli:raw="The element content.">Der Elementinhalt.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Schreibt den aktuellen XML-Knoten von einem <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Die <see cref="T:System.Xml.XmlDictionaryReader" />.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um die Standardattribute aus dem <see langword="XmlReader" /> zu kopieren, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Schreibt den aktuellen XML-Knoten von einem <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Die <see cref="T:System.Xml.XmlReader" />.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um die Standardattribute aus dem <see cref="T:System.Xml.XmlReader" /> zu kopieren, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">Schreibt den durch Namespace gekennzeichneten Namen. Diese Methode sucht das Präfix im Gültigkeitsbereich des Namespaces.</summary>
      <param name="localName" vsli:raw="The local name of the qualified name.">Der lokale Name des qualifizierten Namens.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the qualified name.">Der Namespace-URI des qualifizierten Namens.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified prefix, local name, and namespace URI.">Schreibt den Anfang eines Attributs mit dem angegebenen Präfix, dem angegebenen lokalen Namen und der angegebenen Namespace-URI.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Das Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Der lokale Name des Attributs.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">Der Namespace-URI dieses Attributs.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name, and namespace URI.">Schreibt den Anfang eines Attributs mit dem angegebenen lokalen Namen und der angegebenen Namespace-URI.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Der lokale Name des Attributs.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">Der Namespace-URI dieses Attributs.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace and prefix.">Schreibt das angegebene Starttag und ordnet dieses dem angegebenen Namespace und Präfix zu.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Das Präfix des Elements.</param>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">Der Writer ist geschlossen.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace.">Schreibt das angegebene Starttag und ordnet dieses dem angegebenen Namespace zu.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Der lokale Name des Elements.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Der Namespace-URI des Elements.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">Der Writer ist geschlossen.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the given text content.">Schreibt den angegebenen Textinhalt.</summary>
      <param name="value" vsli:raw="The text to write.">Der zu schreibende Text.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the text node that an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is currently positioned on.">Schreibt den Textknoten, an dem <see cref="T:System.Xml.XmlDictionaryReader" /> positioniert ist.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; to get the text value from.">
        <see cref="T:System.Xml.XmlDictionaryReader" />, von dem der Textwert abgerufen wird.</param>
      <param name="isAttribute" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the reader is positioned on an attribute value or element content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass der Reader auf einem Attributwert oder Elementinhalt positioniert wird; andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">Schreibt einen <see cref="T:System.Guid" />-Wert.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; value to write.">Der zu schreibende <see cref="T:System.Guid" />-Wert.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Schreibt einen <see cref="T:System.TimeSpan" />-Wert.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value to write.">Der zu schreibende <see cref="T:System.TimeSpan" />-Wert.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary vsli:raw="Writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">Schreibt einen Wert von <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">Der zu schreibende <see cref="T:System.Xml.IStreamProvider" />-Wert.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; returns a &lt;see langword=&quot;null&quot; /&gt; stream object.">
        <paramref name="value" /> gibt ein <see langword="null" />-Streamobjekt zurück.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Eine <see cref="T:System.Xml.XmlDictionaryWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary vsli:raw="Writes a Unique Id value.">Schreibt einen UniqueID-Wert.</summary>
      <param name="value" vsli:raw="The Unique Id value to write.">Der zu schreibende UniqueID-Wert.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">Schreibt einen <see cref="T:System.Xml.XmlDictionaryString" />-Wert.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">Der <see cref="T:System.Xml.XmlDictionaryString" />-Wert.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)">
      <summary vsli:raw="Asynchronously writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">Schreibt asynchron einen Wert aus einem <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">Der zu schreibende <see cref="T:System.Xml.IStreamProvider" />-Wert.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteValue&quot; /&gt; operation.">Die Aufgabe, die den asynchronen <see langword="WriteValue" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Eine <see cref="T:System.Xml.XmlDictionaryWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlDictionaryWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a standard XML attribute in the current node.">Schreibt ein Standard-XML-Attribut in den aktuellen Knoten.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Der lokale Name des Attributs.</param>
      <param name="value" vsli:raw="The value of the attribute.">Der Wert des Attributs.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes an XML attribute in the current node.">Schreibt ein XML-Attribut in den aktuellen Knoten.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Der lokale Name des Attributs.</param>
      <param name="value" vsli:raw="The value of the attribute.">Der Wert des Attributs.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a namespace declaration attribute.">Schreibt ein Attribut für die Namespacedeklaration.</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">Das Präfix, das an den angegebenen Namespace gebunden ist.</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">Der Namespace, an den das Präfix gebunden ist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a namespace declaration attribute.">Schreibt ein Attribut für die Namespacedeklaration.</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">Das Präfix, das an den angegebenen Namespace gebunden ist.</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">Der Namespace, an den das Präfix gebunden ist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> ist <see langword="null" />.</exception>
    </member>
  </members>
</doc>