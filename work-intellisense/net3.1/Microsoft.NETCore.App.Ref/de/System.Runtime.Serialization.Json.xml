<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Json</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DateTimeFormat">
      <summary vsli:raw="Specifies date-time format options.">Gibt Datum/Zeit-Formatoptionen an.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DateTimeFormat&quot; /&gt; class using the format string.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DateTimeFormat" />-Klasse unter Verwendung der Formatzeichenfolge.</summary>
      <param name="formatString" vsli:raw="The format string.">Die Formatzeichenfolge.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DateTimeFormat&quot; /&gt; class using the format string and format provider.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DateTimeFormat" />-Klasse unter Verwendung der Formatzeichenfolge und Formatanbieters.</summary>
      <param name="formatString" vsli:raw="The format sting.">Die Formatzeichenfolge.</param>
      <param name="formatProvider" vsli:raw="The format provider.">Der Formatanbieter.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.DateTimeStyles">
      <summary vsli:raw="Gets or sets the formatting options that customize string parsing for some date and time parsing methods.">Ruft die Formatierungsoptionen ab bzw. legt diese fest, mit denen die Art der Analyse einer Zeichenfolge für eine Reihe von Datums- und Uhrzeit-Analysemethoden angepasst wird.</summary>
      <returns vsli:raw="The formatting options that customize string parsing for some date and time parsing methods.">Die Formatierungsoptionen, mit denen die Art der Analyse einer Zeichenfolge für eine Reihe von Datums- und Uhrzeit-Analysemethoden angepasst wird.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatProvider">
      <summary vsli:raw="Gets an object that controls formatting.">Ruft ein Objekt zum Steuern der Formatierung ab.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatString">
      <summary vsli:raw="Gets the format strings to control the formatting produced when a date or time is represented as a string.">Ruft die Formatzeichenfolgen zur Festlegung des Formatierungsergebnisses ab, wenn ein Datums- oder Zeitwert als Zeichenfolge dargestellt werden soll.</summary>
      <returns vsli:raw="The format strings to control the formatting produced when a date or time is represented as a string.">Die Formatzeichenfolgen zur Festlegung des Formatierungsergebnisses, wenn ein Datums- oder Zeitwert als Zeichenfolge dargestellt werden soll.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EmitTypeInformation">
      <summary vsli:raw="Specifies how often to emit type information.">Gibt an, wie oft Typinformationen ausgegeben werden.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Always">
      <summary vsli:raw="Always to emit type information.">immer Typinformationen ausgeben.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.AsNeeded">
      <summary vsli:raw="As needed emit type information.">Bei Bedarf Typinformationen ausgeben.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Never">
      <summary vsli:raw="Never to emit type information.">Typinformationen sollen niemals ausgeben werden.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary vsli:raw="Serializes objects to the JavaScript Object Notation (JSON) and deserializes JSON data to objects. This class cannot be inherited.">Serialisiert Objekte in die JavaScript Object Notation (JSON) und deserialisiert JSON-Daten zu Objekten. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, with a collection of known types that may be present in the object graph.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs mit einer Auflistung bekannter Typen, die ggf. im Objektdiagramm vorhanden sind, zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt des Typs <see cref="T:System.Type" />, das die in dem Objektdiagramm enthaltenen Typen angibt (falls vorhanden).</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and serializer settings.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs und Serialisierungsprogrammeinstellungen zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="settings" vsli:raw="The serializer settings for the JSON serializer.">Die Serialisierungsprogrammeinstellungen für das JSON-Serialisierungsprogramm.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs mithilfe des durch einen Parameter angegebenen XML-Stammelements zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">Der Name des XML-Elements, das den zu serialisierenden bzw. zu deserialisierenden Inhalt enthält.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter, with a collection of known types that may be present in the object graph.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs mithilfe des durch einen Parameter angegebenen XML-Stammelements und mit einer Auflistung bekannter Typen, die ggf. im Objektdiagramm vorhanden sind, zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize. The default is &quot;root&quot;.">Der Name des XML-Elements, das den zu serialisierenden bzw. zu deserialisierenden Inhalt enthält. Die Standardeinstellung ist "root".</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt des Typs <see cref="T:System.Type" />, das die in dem Objektdiagramm enthaltenen Typen angibt (falls vorhanden).</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs mithilfe des durch einen <see cref="T:System.Xml.XmlDictionaryString" />-Parameter angegebenen XML-Stammelements zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Ein <see cref="T:System.Xml.XmlDictionaryString" />-Objekt, das den Namen des Stammelements für den Inhalt enthält.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, with a collection of known types that may be present in the object graph.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs mithilfe des durch einen <see cref="T:System.Xml.XmlDictionaryString" />-Parameter angegebenen XML-Stammelements und mit einer Auflistung bekannter Typen, die ggf. im Objektdiagramm vorhanden sind, zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Ein <see cref="T:System.Xml.XmlDictionaryString" />-Objekt, das den Namen des Stammelements für den Inhalt enthält.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt des Typs <see cref="T:System.Type" />, das die in dem Objektdiagramm enthaltenen Typen angibt (falls vorhanden).</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
      <summary vsli:raw="Gets the format of the date and time type items in object graph.">Ruft das Format der Elemente des Typs Datum/Zeit im Objektdiagramm ab.</summary>
      <returns vsli:raw="The format of the date and time type items in object graph.">Das Format der Elemente des Typs Datum/Zeit im Objektdiagramm.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
      <summary vsli:raw="Gets or sets the data contract JSON serializer settings to emit type information.">Ruft die JSON-Serialisierungseinstellungen für den Datenvertrag zum Ausgeben von Typinformationen ab oder legt diese fest.</summary>
      <returns vsli:raw="The data contract JSON serializer settings to emit type information.">Die Einstellungen der JSON-Serialisierungseinstellungen für den Datenvertrag zum Ausgeben von Typinformationen.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether unknown data is ignored on deserialization and whether the &lt;see cref=&quot;T:System.Runtime.Serialization.IExtensibleDataObject&quot; /&gt; interface is ignored on serialization.">Ruft einen Wert ab, der angibt, ob bei der Deserialisierung unbekannte Daten ignoriert werden und ob bei der Serialisierung die <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />-Schnittstelle ignoriert wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore unknown data and &lt;see cref=&quot;T:System.Runtime.Serialization.IExtensibleDataObject&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um unbekannte Daten und die <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />-Schnittstelle zu ignorieren, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that represents an object the serializer can deserialize from.">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Xml.XmlDictionaryReader" /> auf einem XML-Element positioniert ist und ob es sich dabei um ein Objekt handelt, von dem aus das Serialisierungsprogramm deserialisieren kann.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream mapped from JSON.">Das <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt, das zum Lesen des aus JSON zugeordneten XML-Streams verwendet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned correctly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Reader korrekt positioniert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">Bestimmt, ob der <see cref="T:System.Xml.XmlReader" /> auf einem Objekt positioniert ist, das deserialisiert werden kann.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">Das <see cref="T:System.Xml.XmlReader" />-Objekt, das zum Lesen des XML-Streams verwendet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned correctly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Reader korrekt positioniert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt;.">Ruft eine Auflistung der Typen in einem Objektdiagramm ab, die mithilfe einer Instanz des <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Objekts serialisiert werden.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; constructor.">Ein <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Objekt, das die erwarteten Typen enthält, die als bekannte Typen an den <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Konstruktor übergeben werden.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph that the serializer serializes or deserializes in one read or write call.">Ruft die maximale Anzahl von Elementen in einem Objektdiagramm ab, die das Serialisierungsprogramm bei einem Lese- oder Schreibaufruf serialisieren oder deserialisieren kann.</summary>
      <returns vsli:raw="The maximum number of items to serialize or deserialize.">Die maximale Anzahl von Elementen, die serialisiert oder deserialisiert werden sollen.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">Die Anzahl der Elemente ist größer als der Maximalwert.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads a document stream in the JSON (JavaScript Object Notation) format and returns the deserialized object.">Liest einen Dokumentstream im JSON-Format (JavaScript Object Notation) und gibt das deserialisierte Objekt zurück.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to be read.">Das <see cref="T:System.IO.Stream" />-Objekt, das gelesen werden soll.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document mapped from JSON (JavaScript Object Notation) with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">Liest das aus JSON (JavaScript Object Notation) zugeordnete XML-Dokument mit einem <see cref="T:System.Xml.XmlDictionaryReader" /> und gibt das deserialisierte Objekt zurück.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document mapped from JSON.">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der zum Lesen des aus JSON zugeordneten XML-Dokuments verwendet wird.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document mapped from JSON with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.">Liest das aus JSON zugeordnete XML-Dokument mit einem <see cref="T:System.Xml.XmlDictionaryReader" /> und gibt das deserialisierte Objekt zurück. Sie können zudem angeben, ob das Serialisierungsprogramm vor der Deserialisierung überprüfen soll, ob der Reader auf einem geeigneten Element positioniert ist.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document mapped from JSON.">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der zum Lesen des aus JSON zugeordneten XML-Dokuments verwendet wird.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, um zu überprüfen, ob der Name und der Namespace des einschließenden XML-Elements mit dem erwarteten Namen und Namespace übereinstimmen, andernfalls <see langword="false" />, um die Überprüfung zu überspringen. Die Standardeinstellung ist <see langword="true" />.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document mapped from JSON (JavaScript Object Notation) with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Liest das aus JSON (JavaScript Object Notation) zugeordnete XML-Dokument mit einem <see cref="T:System.Xml.XmlReader" /> und gibt das deserialisierte Objekt zurück.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document mapped from JSON.">Ein <see cref="T:System.Xml.XmlReader" />, der zum Lesen des aus JSON zugeordneten XML-Dokuments verwendet wird.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads an XML document mapped from JSON with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.">Liest ein aus JSON zugeordnetes XML-Dokument mit einem <see cref="T:System.Xml.XmlReader" /> und gibt das deserialisierte Objekt zurück. Sie können zudem angeben, ob das Serialisierungsprogramm vor der Deserialisierung überprüfen soll, ob der Reader auf einem geeigneten Element positioniert ist.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document mapped from JSON.">Ein <see cref="T:System.Xml.XmlReader" />, der zum Lesen des aus JSON zugeordneten XML-Dokuments verwendet wird.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;, which skips the verification. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, um zu überprüfen, ob der Name und der Namespace des einschließenden XML-Elements mit dem erwarteten Namen und Namespace übereinstimmen, andernfalls <see langword="false" />, um die Überprüfung zu überspringen. Die Standardeinstellung ist <see langword="true" />.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob schreibgeschützte Typen serialisiert werden sollen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um schreibgeschützte Typen zu serialisieren; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
      <summary vsli:raw="Gets a value that specifies whether to use a simple dictionary format.">Ruft einen Wert ab, der angibt, ob ein einfaches Wörterbuchformat verwendet werden soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use a simple dictionary format; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um ein einfaches Wörterbuchformat zu verwenden; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element to an XML document, using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, which can be mapped to JavaScript Object Notation (JSON).">Schreibt das abschließende XML-Element mithilfe eines <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekts in ein XML-Dokument, das JSON (JavaScript Object Notation) zugeordnet werden kann.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document to map to JSON.">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das zum Schreiben des XML-Dokuments verwendet wird, das JSON zugeordnet wird.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element to an XML document, using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, which can be mapped to JavaScript Object Notation (JSON).">Schreibt das abschließende XML-Element mithilfe eines <see cref="T:System.Xml.XmlWriter" />-Objekts in ein XML-Dokument, das JSON (JavaScript Object Notation) zugeordnet werden kann.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document mapped to JSON.">Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, das zum Schreiben des XML-Dokuments verwendet wird, das JSON zugeordnet wird.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes a specified object to JavaScript Object Notation (JSON) data and writes the resulting JSON to a stream.">Serialisiert ein angegebenes Objekt in JSON-Daten (JavaScript Object Notation) und schreibt die resultierenden JSON-Daten in einen Stream.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that is written to.">Das <see cref="T:System.IO.Stream" />-Objekt, in das geschrieben wird.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">Das Objekt, das die in den Stream zu schreibenden Daten enthält.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">Die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Serialisiert ein Objekt in XML, das JSON (JavaScript Object Notation) zugeordnet werden kann. Schreibt alle Objektdaten, einschließlich des XML-Startelements, des Inhalts und des abschließenden Elements mit einem <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream to map to JSON.">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das zum Schreiben des XML-Dokuments oder XML-Streams verwendet wird, das/der JSON zugeordnet wird.</param>
      <param name="graph" vsli:raw="The object that contains the data to write.">Das Objekt, das die zu schreibenden Daten enthält.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">Die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serialisiert ein Objekt in XML, das JSON (JavaScript Object Notation) zugeordnet werden kann. Schreibt alle Objektdaten, einschließlich des XML-Startelements, des Inhalts und des abschließenden Elements mit einem <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document to map to JSON.">Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, das zum Schreiben des XML-Dokuments verwendet wird, das JSON zugeordnet wird.</param>
      <param name="graph" vsli:raw="The object that contains the data to write.">Das Objekt, das die zu schreibenden Daten enthält.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">Die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Schreibt den XML-Inhalt, der JSON (JavaScript Object Notation) zugeordnet werden kann, mit einem <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; to write to.">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, in den geschrieben werden soll.</param>
      <param name="graph" vsli:raw="The object to write.">Das zu schreibende Objekt.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">Die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt den XML-Inhalt, der JSON (JavaScript Object Notation) zugeordnet werden kann, mit einem <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write to.">Das <see cref="T:System.Xml.XmlWriter" />-Objekt, das zum Schreiben verwendet wird.</param>
      <param name="graph" vsli:raw="The object to write.">Das zu schreibende Objekt.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">Die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Schreibt mit einem <see cref="T:System.Xml.XmlDictionaryWriter" /> das öffnende XML-Element für die Serialisierung eines Objekts in XML, das JSON (JavaScript Object Notation) zugeordnet werden kann.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">Das <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das zum Schreiben des XML-Startelements verwendet wird.</param>
      <param name="graph" vsli:raw="The object to write.">Das zu schreibende Objekt.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Schreibt mit einem <see cref="T:System.Xml.XmlWriter" /> das öffnende XML-Element für die Serialisierung eines Objekts in XML, das JSON (JavaScript Object Notation) zugeordnet werden kann.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">Das <see cref="T:System.Xml.XmlWriter" />-Objekt, das zum Schreiben des XML-Startelements verwendet wird.</param>
      <param name="graph" vsli:raw="The object to write.">Das zu schreibende Objekt.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings">
      <summary vsli:raw="Specifies &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; settings.">Gibt <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Einstellungen an.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings" />-Klasse.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat">
      <summary vsli:raw="Gets or sets a DateTimeFormat that defines the culturally appropriate format of displaying dates and times.">Ruft ein DateTimeFormat ab, das das für die Kultur spezifische Format zum Anzeigen von Datumsangaben und Uhrzeiten definiert, oder legt es fest.</summary>
      <returns vsli:raw="The DateTimeFormat that defines the culturally appropriate format of displaying dates and times.">Das Datums- und Zeitformat, das für die Kultur spezifische Format zum Anzeigen von Datumsangaben und Uhrzeiten definiert, oder legt diese fest.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation">
      <summary vsli:raw="Gets or sets the data contract JSON serializer settings to emit type information.">Ruft die JSON-Serialisierungseinstellungen für den Datenvertrag zum Ausgeben von Typinformationen ab oder legt diese fest.</summary>
      <returns vsli:raw="The data contract JSON serializer settings to emit type information.">Die Einstellungen der JSON-Serialisierungseinstellungen für den Datenvertrag zum Ausgeben von Typinformationen.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Ruft einen Wert ab bzw. legt diesen fest, der angibt, ob die Daten ignoriert werden sollen, die von einer Erweiterung dieser Klasse bereitgestellt werden, wenn die Klasse serialisiert oder deserialisiert wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um Daten zu ignorieren, die von einer Erweiterung dieser Klasse bereitgestellt werden, wenn die Klasse serialisiert oder deserialisiert wird; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.">Ruft eine Auflistung der Typen im Objektdiagramm ab, die mithilfe dieser Instanz von DataContractJsonSerializerSettings serialisiert wurden, oder legt sie fest.</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.">Eine Sammlung der Typen im Objektdiagramm ab, die mithilfe dieser Instanz von DataContractJsonSerializerSettings serialisiert wurden.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">Ruft die maximale Anzahl von Elementen in einem Objektdiagramm ab oder legt sie fest, die serialisiert oder deserialisiert werden.</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">Die maximale Anzahl von Elementen in einem Objektdiagramm, die serialisiert oder deserialisiert werden.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">Übernimmt oder bestimmt den Stammnamen des ausgewählten Objekts.</summary>
      <returns vsli:raw="The root name of the selected object.">Der Stammname des ausgewählten Objekts.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob schreibgeschützte Typen serialisiert werden sollen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um schreibgeschützte Typen zu serialisieren; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat">
      <summary vsli:raw="Gets or sets a value that specifies whether to use a simple dictionary format.">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob ein einfaches Wörterbuchformat verwendet werden soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use a simple dictionary format; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um ein einfaches Wörterbuchformat zu verwenden; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary vsli:raw="Specifies the interface for initializing a JavaScript Object Notation (JSON) reader when reusing them to read from a particular stream or buffer.">Gibt die Schnittstelle für die Initialisierung eines JSON-Readers (JavaScript Object Notation) an, wenn dieser zum Lesen aus einem bestimmten Stream oder Puffer wiederverwendet wird.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified buffer that contains JSON-encoded data.">Reinitialisiert einen JSON-kompatiblen Reader (JavaScript Object Notation) für einen angegebenen Puffer, der JSON-codierte Daten enthält.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; used by the reader.">Das <see cref="T:System.Text.Encoding" />-Objekt, das von dem Reader verwendet wird.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Das anzuwendende <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> .</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed.">Der <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />-Delegat, der beim Schließen des Readers aufgerufen wird.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified stream that contains JSON-encoded data.">Reinitialisiert einen JSON-kompatiblen Reader (JavaScript Object Notation) für einen angegebenen Stream, der JSON-codierte Daten enthält.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">Der Eingabe-<see cref="T:System.IO.Stream" />, aus dem gelesen wird.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; used by the reader.">Das <see cref="T:System.Text.Encoding" />-Objekt, das von dem Reader verwendet wird.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Die anzuwendenden<see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> .</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">Der aufzurufende Delegat, wenn der Reader geschlossen wird.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary vsli:raw="Specifies the interface for initializing a JavaScript Object Notation (JSON) writer when reusing them to write to a particular output stream.">Gibt die Schnittstelle für die Initialisierung eines JSON-Writers (JavaScript Object Notation) an, wenn dieser zum Schreiben in einen bestimmten Ausgabestream wiederverwendet wird.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes (or reinitializes) a JavaScript Object Notation (JSON) writer to a specified output stream with specified character encoding.">Initialisiert (oder reinitialisiert) einen JSON-Writer (JavaScript Object Notation) für einen bestimmten Ausgabestream mit der angegebenen Zeichencodierung.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to which the writer writes.">Der Ausgabe-<see cref="T:System.IO.Stream" />, in den der Writer schreibt.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding of the output stream.">Das <see cref="T:System.Text.Encoding" />-Objekt, das die Zeichencodierung des Ausgabestreams angibt.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary vsli:raw="Produces instances of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that can map an XML Infoset to JSON and write JSON-encoded data to a stream.">Erzeugt Instanzen von <see cref="T:System.Xml.XmlDictionaryReader" />, die mit JSON (JavaScript Object Notation) codierte Daten aus einem Stream oder Puffer lesen und diese einem XML-Infoset zuordnen können, sowie Instanzen von <see cref="T:System.Xml.XmlDictionaryWriter" />, die ein XML-Infoset zu JSON zuordnen und JSON-codierte Daten in einen Stream schreiben können.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Puffer mit einer festen Größe, einem festen Offset und einer spezifischen Zeichencodierung einem XML-Infoset zuordnen kann.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the reader. If &lt;see langword=&quot;null&quot; /&gt; is specified as the value, the reader attempts to auto-detect the encoding.">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Reader verwendete Zeichencodierung angibt. Wenn als Wert <see langword="null" /> angegeben wird, versucht der Reader, die Codierung automatisch zu erkennen.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed. The default value is &lt;see langword=&quot;null&quot; /&gt;.">Der <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> -Delegat, der beim Schließen des Readers aufgerufen wird. Der Standardwert ist <see langword="null" />sein.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Puffer mit einer festen Größe und einem festen Offset einem XML-Infoset zuordnen kann.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Puffer einem XML-Infoset zuordnen kann.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can process JavaScript Object Notation (JSON) data.">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON-Daten (JavaScript Object Notation) verarbeiten kann.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Streams mit einer festen Größe und einem festen Offset einem XML-Infoset zuordnen kann.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">Der Eingabe-<see cref="T:System.IO.Stream" />, aus dem gelesen wird.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the reader. If &lt;see langword=&quot;null&quot; /&gt; is specified as the value, the reader attempts to auto-detect the encoding.">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Reader verwendete Zeichencodierung angibt. Wenn als Wert <see langword="null" /> angegeben wird, versucht der Reader, die Codierung automatisch zu erkennen.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed.">Der <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />-Delegat, der beim Schließen des Readers aufgerufen wird.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Streams einem XML-Infoset zuordnen kann.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">Der Eingabe-<see cref="T:System.IO.Stream" />, aus dem gelesen wird.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream.">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten in einen Stream schreibt.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character encoding.">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einer spezifischen Zeichencodierung in einen Stream schreibt.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt. Die Standardcodierung ist UTF-8.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character encoding.">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einer spezifischen Zeichencodierung in einen Stream schreibt.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt. Die Standardcodierung ist UTF-8.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character.">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einem spezifischen Zeichen in einen Stream schreibt.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt. Die Standardcodierung ist UTF-8.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</param>
      <param name="indent" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output uses multiline format, indenting each level properly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Wenn <see langword="true" />, wird für die Ausgabe das mehrzeilige Format verwendet, wobei jede Ebene korrekt eingezogen wird; andernfalls <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character.">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einem spezifischen Zeichen in einen Stream schreibt.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt. Die Standardcodierung ist UTF-8.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</param>
      <param name="indent" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output uses multiline format, indenting each level properly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Wenn <see langword="true" />, wird für die Ausgabe das mehrzeilige Format verwendet, wobei jede Ebene korrekt eingezogen wird; andernfalls <see langword="false" />.</param>
      <param name="indentChars" vsli:raw="The string used to indent each level.">Die Zeichenfolge, die für den Einzug jeder Ebene verwendet wird.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</returns>
    </member>
  </members>
</doc>