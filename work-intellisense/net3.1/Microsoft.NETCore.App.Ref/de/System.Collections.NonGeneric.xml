<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Collections.NonGeneric</name>
  </assembly>
  <members>
    <member name="T:System.Collections.CaseInsensitiveComparer">
      <summary>Vergleicht zwei Objekte auf Äquivalenz und ignoriert dabei die Groß- und Kleinschreibung in Zeichenfolgen.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.CaseInsensitiveComparer" />-Klasse mit der <see cref="P:System.Threading.Thread.CurrentCulture" /> des aktuellen Threads.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.CaseInsensitiveComparer" />-Klasse mit dem angegebenen <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" />, die für den neuen <see cref="T:System.Collections.CaseInsensitiveComparer" /> verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)">
      <summary>Führt einen Vergleich zweier Objekte gleichen Typs ohne Berücksichtigung der Groß- und Kleinschreibung durch und gibt über den zurückgegebenen Wert an, ob das eine Objekt kleiner, größer oder gleich dem anderen Objekt ist.</summary>
      <param name="a">Das erste zu vergleichende Objekt.</param>
      <param name="b">Das zweite zu vergleichende Objekt.</param>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="a" /> und <paramref name="b" /> angibt, wie in der folgenden Tabelle veranschaulicht.
  Wert 
  Bedeutung 
  Kleiner als 0 (null) 
 <paramref name="a" /> ist kleiner als <paramref name="b" />, wobei die Groß- und Kleinschreibung ignoriert wird.  
  
  Zero 
 <paramref name="a" /> ist gleich <paramref name="b" />, wobei die Groß- und Kleinschreibung ignoriert wird.  
  
  Größer als 0 (null) 
 <paramref name="a" /> ist größer als <paramref name="b" />, wobei die Groß- und Kleinschreibung ignoriert wird.</returns>
      <exception cref="T:System.ArgumentException">Weder <paramref name="a" /> noch <paramref name="b" /> implementieren die <see cref="T:System.IComparable" />-Schnittstelle.
- oder -
<paramref name="a" /> und <paramref name="b" /> sind nicht vom gleichen Typ.</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.Default">
      <summary>Ruft eine Instanz von <see cref="T:System.Collections.CaseInsensitiveComparer" /> ab, die der <see cref="P:System.Threading.Thread.CurrentCulture" /> des aktuellen Threads zugeordnet und jederzeit verfügbar ist.</summary>
      <returns>Eine Instanz von <see cref="T:System.Collections.CaseInsensitiveComparer" />, die der <see cref="P:System.Threading.Thread.CurrentCulture" /> des aktuellen Threads zugeordnet ist.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant">
      <summary>Ruft eine Instanz von <see cref="T:System.Collections.CaseInsensitiveComparer" /> ab, die <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> zugeordnet und jederzeit verfügbar ist.</summary>
      <returns>Eine Instanz von <see cref="T:System.Collections.CaseInsensitiveComparer" />, die <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> zugeordnet ist.</returns>
    </member>
    <member name="T:System.Collections.CaseInsensitiveHashCodeProvider">
      <summary>Stellt einen Hashcode für ein Objekt bereit, wobei im verwendeten Hashalgorithmus die Groß- und Kleinschreibung von Zeichenfolgen ignoriert wird.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />-Klasse mit der <see cref="P:System.Threading.Thread.CurrentCulture" /> des aktuellen Threads.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />-Klasse mit dem angegebenen <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" />, die für den neuen <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
      <summary>Ruft eine Instanz von <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> ab, die der <see cref="P:System.Threading.Thread.CurrentCulture" /> des aktuellen Threads zugeordnet und jederzeit verfügbar ist.</summary>
      <returns>Eine Instanz von <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />, die der <see cref="P:System.Threading.Thread.CurrentCulture" /> des aktuellen Threads zugeordnet ist.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
      <summary>Ruft eine Instanz von <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> ab, die <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> zugeordnet und jederzeit verfügbar ist.</summary>
      <returns>Eine Instanz von <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />, die <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> zugeordnet ist.</returns>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
      <summary>Gibt einen Hashcode für das angegebene Objekt zurück, wobei im verwendeten Hashalgorithmus die Groß- und Kleinschreibung von Zeichenfolgen ignoriert wird.</summary>
      <param name="obj">Das <see cref="T:System.Object" />, für das ein Hashcode zurückgegeben werden soll.</param>
      <returns>Ein Hashcode für das angegebene Objekt, wobei im verwendeten Hashalgorithmus die Groß- und Kleinschreibung von Zeichenfolgen ignoriert wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.CollectionBase">
      <summary>Stellt die <see langword="abstract" /> Basisklasse für eine stark typisierte Auflistung bereit.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.CollectionBase" />-Klasse mit der angegebenen anfänglichen Kapazität.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.CollectionBase" />-Klasse mit der angegebenen Kapazität.</summary>
      <param name="capacity">Die Anzahl von Elementen, die anfänglich in der neuen Liste gespeichert werden können.</param>
    </member>
    <member name="P:System.Collections.CollectionBase.Capacity">
      <summary>Ruft die Anzahl der Elemente ab, die die <see cref="T:System.Collections.CollectionBase" /> enthalten kann, oder legt diese fest.</summary>
      <returns>Die anfängliche Anzahl von Elementen, die die <see cref="T:System.Collections.CollectionBase" /> enthalten kann.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Collections.CollectionBase.Capacity" /> ist auf einen Wert festgelegt, der kleiner als <see cref="P:System.Collections.CollectionBase.Count" /> ist.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher im System verfügbar.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.Clear">
      <summary>Entfernt alle Objekte aus der <see cref="T:System.Collections.CollectionBase" />-Instanz. Diese Methode kann nicht überschrieben werden.</summary>
    </member>
    <member name="P:System.Collections.CollectionBase.Count">
      <summary>Ruft die Anzahl der Elemente ab, die in der <see cref="T:System.Collections.CollectionBase" />-Instanz enthalten sind. Diese Eigenschaft kann nicht überschrieben werden.</summary>
      <returns>Die Anzahl der in der <see cref="T:System.Collections.CollectionBase" />-Instanz enthaltenen Elemente. Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.CollectionBase" /> durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für die <see cref="T:System.Collections.CollectionBase" />-Instanz.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.InnerList">
      <summary>Ruft eine <see cref="T:System.Collections.ArrayList" /> mit der Liste der Elemente in der <see cref="T:System.Collections.CollectionBase" />-Instanz ab.</summary>
      <returns>Eine <see cref="T:System.Collections.ArrayList" />, die die <see cref="T:System.Collections.CollectionBase" />-Instanz selbst darstellt. Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.List">
      <summary>Ruft eine <see cref="T:System.Collections.IList" /> mit der Liste der Elemente in der <see cref="T:System.Collections.CollectionBase" />-Instanz ab.</summary>
      <returns>Eine <see cref="T:System.Collections.IList" />, die die <see cref="T:System.Collections.CollectionBase" />-Instanz selbst darstellt.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClear">
      <summary>Führt beim Löschen des Inhalts der <see cref="T:System.Collections.CollectionBase" />-Instanz zusätzliche benutzerdefinierte Prozesse aus.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClearComplete">
      <summary>Führt nach dem Löschen des Inhalts der <see cref="T:System.Collections.CollectionBase" />-Instanz zusätzliche benutzerdefinierte Prozesse aus.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse vor dem Einfügen eines neuen Elements in die <see cref="T:System.Collections.CollectionBase" />-Instanz aus.</summary>
      <param name="index">Der nullbasierte Index, an dem der <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Der neue Wert des Elements an <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse nach dem Einfügen eines neuen Elements in die <see cref="T:System.Collections.CollectionBase" />-Instanz aus.</summary>
      <param name="index">Der nullbasierte Index, an dem der <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Der neue Wert des Elements an <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse beim Entfernen eines Elements aus der <see cref="T:System.Collections.CollectionBase" />-Instanz aus.</summary>
      <param name="index">Der nullbasierte Index, an dem sich <paramref name="value" /> befindet.</param>
      <param name="value">Der Wert des Elements, das an <paramref name="index" /> entfernt wird.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse nach dem Entfernen eines Elements aus der <see cref="T:System.Collections.CollectionBase" />-Instanz aus.</summary>
      <param name="index">Der nullbasierte Index, an dem sich <paramref name="value" /> befindet.</param>
      <param name="value">Der Wert des Elements, das an <paramref name="index" /> entfernt wird.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse vor dem Festlegen eines Werts in der <see cref="T:System.Collections.CollectionBase" />-Instanz aus.</summary>
      <param name="index">Der nullbasierte Index, an dem sich <paramref name="oldValue" /> befindet.</param>
      <param name="oldValue">Der Wert, der durch <paramref name="newValue" /> ersetzt werden soll.</param>
      <param name="newValue">Der neue Wert des Elements an <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse nach dem Festlegen eines Werts in der <see cref="T:System.Collections.CollectionBase" />-Instanz aus.</summary>
      <param name="index">Der nullbasierte Index, an dem sich <paramref name="oldValue" /> befindet.</param>
      <param name="oldValue">Der Wert, der durch <paramref name="newValue" /> ersetzt werden soll.</param>
      <param name="newValue">Der neue Wert des Elements an <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnValidate(System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse beim Validieren eines Werts aus.</summary>
      <param name="value">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
      <summary>Entfernt das Element am angegebenen Index aus der <see cref="T:System.Collections.CollectionBase" />-Instanz. Diese Methode kann nicht überschrieben werden.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.
- oder -
<paramref name="index" /> ist größer oder gleich <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die gesamte <see cref="T:System.Collections.CollectionBase" />-Instanz in ein kompatibles eindimensionales <see cref="T:System.Array" />, beginnend am angegebenen Index des Zielarrays.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.CollectionBase" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.
- oder -
Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.CollectionBase" /> ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />s.</exception>
      <exception cref="T:System.InvalidCastException">Der Typ der Quell-<see cref="T:System.Collections.CollectionBase" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.CollectionBase" /> synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="true" /> , wenn der Zugriff auf das <see cref="T:System.Collections.CollectionBase" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.CollectionBase" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.CollectionBase" /> synchronisiert werden kann.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
      <summary>Fügt am Ende der <see cref="T:System.Collections.CollectionBase" /> ein Objekt hinzu.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das am Ende der <see cref="T:System.Collections.CollectionBase" />-Auflistung hinzugefügt werden soll.</param>
      <returns>Der <see cref="T:System.Collections.CollectionBase" />-Index, an dem der <paramref name="value" /> hinzugefügt wurde.</returns>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.CollectionBase" /> ist schreibgeschützt.
- oder -
<see cref="T:System.Collections.CollectionBase" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
      <summary>Ermittelt, ob <see cref="T:System.Collections.CollectionBase" /> ein bestimmtes Element enthält.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.CollectionBase" /> gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Collections.CollectionBase" /> das angegebene <paramref name="value" /> enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
      <summary>Sucht nach dem angegebenen <see cref="T:System.Object" /> und gibt den nullbasierten Index des ersten Vorkommens innerhalb der gesamten <see cref="T:System.Collections.CollectionBase" /> zurück.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.CollectionBase" /> gesucht werden soll.</param>
      <returns>Der nullbasierte Index des ggf. ersten Vorkommens von <paramref name="value" /> in der gesamten <see cref="T:System.Collections.CollectionBase" />, andernfalls -1.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Fügt am angegebenen Index ein Element in die <see cref="T:System.Collections.CollectionBase" /> ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Der einzufügende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.
- oder -
<paramref name="index" /> ist größer als <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.CollectionBase" /> ist schreibgeschützt.
- oder -
<see cref="T:System.Collections.CollectionBase" /> hat eine feste Größe.</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.CollectionBase" /> eine feste Größe aufweist.</summary>
      <returns>
        <see langword="true" /> , wenn das <see cref="T:System.Collections.CollectionBase" /> eine feste Größe aufweist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.CollectionBase" /> schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.CollectionBase" /> schreibgeschützt ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns>Das Element am angegebenen Index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.
- oder -
<paramref name="index" /> ist größer oder gleich <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
      <summary>Entfernt das erste Vorkommen eines angegebenen Objekts aus der <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value">Der <see cref="T:System.Object" />, der aus der <see cref="T:System.Collections.CollectionBase" /> entfernt werden soll.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="value" />-Parameter wurde im <see cref="T:System.Collections.CollectionBase" />-Objekt nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.CollectionBase" /> ist schreibgeschützt.
- oder -
<see cref="T:System.Collections.CollectionBase" /> hat eine feste Größe.</exception>
    </member>
    <member name="T:System.Collections.DictionaryBase">
      <summary>Stellt die <see langword="abstract" />-Basisklasse für eine stark typisierte Auflistung von Schlüssel-Wert-Paaren bereit.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.DictionaryBase" />-Klasse.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.Clear">
      <summary>Löscht den Inhalt der <see cref="T:System.Collections.DictionaryBase" />-Instanz.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die <see cref="T:System.Collections.DictionaryBase" />-Elemente am angegebenen Index in ein eindimensionales <see cref="T:System.Array" />.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, in das die <see cref="T:System.Collections.DictionaryEntry" />-Objekte aus der <see cref="T:System.Collections.DictionaryBase" />-Instanz kopiert werden. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.

oder -
Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.DictionaryBase" /> ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException">Der Typ des Quell-<see cref="T:System.Collections.DictionaryBase" />s kann nicht automatisch in den Typ des Ziel<paramref name="array" />s umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.Count">
      <summary>Ruft die Anzahl der Elemente ab, die in der <see cref="T:System.Collections.DictionaryBase" />-Instanz enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die in der <see cref="T:System.Collections.DictionaryBase" />-Instanz enthalten sind.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.Dictionary">
      <summary>Ruft die Liste der in der <see cref="T:System.Collections.DictionaryBase" />-Instanz enthaltenen Elemente ab.</summary>
      <returns>Eine <see cref="T:System.Collections.IDictionary" />, die die <see cref="T:System.Collections.DictionaryBase" />-Instanz selbst darstellt.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.GetEnumerator">
      <summary>Gibt einen <see cref="T:System.Collections.IDictionaryEnumerator" /> zurück, der die <see cref="T:System.Collections.DictionaryBase" />-Instanz durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IDictionaryEnumerator" /> für die <see cref="T:System.Collections.DictionaryBase" />-Instanz.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.InnerHashtable">
      <summary>Ruft die Liste der in der <see cref="T:System.Collections.DictionaryBase" />-Instanz enthaltenen Elemente ab.</summary>
      <returns>Eine <see cref="T:System.Collections.Hashtable" />, die die <see cref="T:System.Collections.DictionaryBase" />-Instanz selbst darstellt.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClear">
      <summary>Führt vor dem Löschen des Inhalts der <see cref="T:System.Collections.DictionaryBase" />-Instanz zusätzliche benutzerdefinierte Prozesse aus.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClearComplete">
      <summary>Führt nach dem Löschen des Inhalts der <see cref="T:System.Collections.DictionaryBase" />-Instanz zusätzliche benutzerdefinierte Prozesse aus.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
      <summary>Ruft das Element mit dem angegebenen Schlüssel und Wert aus der <see cref="T:System.Collections.DictionaryBase" />-Instanz ab.</summary>
      <param name="key">Der Schlüssel des abzurufenden Elements.</param>
      <param name="currentValue">Der aktuelle Wert des Elements, das <paramref name="key" /> zugeordnet ist.</param>
      <returns>Ein <see cref="T:System.Object" />, das das Element mit dem angegebenen Schlüssel und Wert enthält.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse vor dem Einfügen eines neuen Elements in die <see cref="T:System.Collections.DictionaryBase" />-Instanz aus.</summary>
      <param name="key">Der Schlüssel des einzufügenden Elements.</param>
      <param name="value">Der Wert des einzufügenden Elements.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse nach dem Einfügen eines neuen Elements in die <see cref="T:System.Collections.DictionaryBase" />-Instanz aus.</summary>
      <param name="key">Der Schlüssel des einzufügenden Elements.</param>
      <param name="value">Der Wert des einzufügenden Elements.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse vor dem Entfernen eines Elements aus der <see cref="T:System.Collections.DictionaryBase" />-Instanz aus.</summary>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
      <param name="value">Der Wert des zu entfernenden Elements.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse nach dem Entfernen eines Elements aus der <see cref="T:System.Collections.DictionaryBase" />-Instanz aus.</summary>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
      <param name="value">Der Wert des zu entfernenden Elements.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse vor dem Festlegen eines Werts in der <see cref="T:System.Collections.DictionaryBase" />-Instanz aus.</summary>
      <param name="key">Der Schlüssel des zu suchenden Elements.</param>
      <param name="oldValue">Der alte Wert des Elements, das <paramref name="key" /> zugeordnet ist.</param>
      <param name="newValue">Der neue Wert des Elements, das <paramref name="key" /> zugeordnet ist.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse nach dem Festlegen eines Werts in der <see cref="T:System.Collections.DictionaryBase" />-Instanz aus.</summary>
      <param name="key">Der Schlüssel des zu suchenden Elements.</param>
      <param name="oldValue">Der alte Wert des Elements, das <paramref name="key" /> zugeordnet ist.</param>
      <param name="newValue">Der neue Wert des Elements, das <paramref name="key" /> zugeordnet ist.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
      <summary>Führt bei der Überprüfung des Elements mit dem angegebenen Schlüssel und Wert zusätzliche benutzerdefinierte Aktionen aus.</summary>
      <param name="key">Der Schlüssel des zu überprüfenden Elements.</param>
      <param name="value">Der Wert des zu überprüfenden Elements.</param>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf ein <see cref="T:System.Collections.DictionaryBase" />-Objekt synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.DictionaryBase" />-Objekt synchronisiert (threadsicher) ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf ein <see cref="T:System.Collections.DictionaryBase" />-Objekt synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf das <see cref="T:System.Collections.DictionaryBase" />-Objekt synchronisiert werden kann.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Fügt dem <see cref="T:System.Collections.DictionaryBase" /> ein Element mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="key">Der Schlüssel des hinzuzufügenden Elements.</param>
      <param name="value">Der Wert des hinzuzufügenden Elements.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">In <see cref="T:System.Collections.DictionaryBase" /> ist bereits ein Element mit demselben Schlüssel enthalten.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.DictionaryBase" /> ist schreibgeschützt.

oder -
<see cref="T:System.Collections.DictionaryBase" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Stellt fest, ob der <see cref="T:System.Collections.DictionaryBase" /> einen bestimmten Schlüssel enthält.</summary>
      <param name="key">Der im <see cref="T:System.Collections.DictionaryBase" /> zu suchende Schlüssel.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.DictionaryBase" /> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Collections.DictionaryBase" />-Objekt eine feste Größe hat.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.DictionaryBase" />-Objekt eine feste Größe hat, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Collections.DictionaryBase" />-Objekt schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.DictionaryBase" />-Objekt schreibgeschützt ist. Andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
      <summary>Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist, oder legt diesen fest.</summary>
      <param name="key">Der Schlüssel, dessen Wert abgerufen oder festgelegt werden soll.</param>
      <returns>Der dem angegebenen Schlüssel zugeordnete Wert. Wenn der angegebene Schlüssel nicht gefunden werden kann, wird beim Abrufen dieses Schlüssels <see langword="null" /> zurückgegeben. Beim Festlegen wird ein neues Element mit dem angegebenen Schlüssel erstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Eigenschaft wird festgelegt, und <see cref="T:System.Collections.DictionaryBase" /> ist schreibgeschützt.

oder -
Die Eigenschaft wird festgelegt, <paramref name="key" /> ist in der Auflistung nicht vorhanden, und der <see cref="T:System.Collections.DictionaryBase" /> hat eine feste Größe.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
      <summary>Ruft ein <see cref="T:System.Collections.ICollection" />-Objekt ab, das die Schlüssel im <see cref="T:System.Collections.DictionaryBase" />-Objekt enthält.</summary>
      <returns>Ein <see cref="T:System.Collections.ICollection" />-Objekt, das die Schlüssel im <see cref="T:System.Collections.DictionaryBase" />-Objekt enthält.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.DictionaryBase" /> ist schreibgeschützt.

oder -
<see cref="T:System.Collections.DictionaryBase" /> hat eine feste Größe.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
      <summary>Ruft ein <see cref="T:System.Collections.ICollection" />-Objekt ab, das die Werte des <see cref="T:System.Collections.DictionaryBase" />-Objekts enthält.</summary>
      <returns>Ein <see cref="T:System.Collections.ICollection" />-Objekt, das die Werte des <see cref="T:System.Collections.DictionaryBase" />-Objekts enthält.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen <see cref="T:System.Collections.IEnumerator" /> zurück, der <see cref="T:System.Collections.DictionaryBase" /> durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="T:System.Collections.Queue">
      <summary>Stellt eine FIFO-Auflistung (First-In-First-Out) von Objekten dar.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Queue" />-Klasse, die anfänglich über die Standardkapazität verfügt und den Standardzuwachsfaktor verwendet.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Queue" />-Klasse, die aus der angegebenen Auflistung kopierte Elemente enthält und über eine der Anzahl der kopierten Elemente entsprechende anfängliche Kapazität verfügt sowie den Standardzuwachsfaktor verwendet.</summary>
      <param name="col">Die <see cref="T:System.Collections.ICollection" />, aus der Elemente kopiert werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="col" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32)">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Queue" />-Klasse mit der angegebenen anfänglichen Kapazität und dem Standardzuwachsfaktor.</summary>
      <param name="capacity">Die anfängliche Anzahl von Elementen, die das <see cref="T:System.Collections.Queue" /> enthalten kann.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Queue" />-Klasse mit den angegebenen Werten für die anfängliche Kapazität und den Zuwachsfaktor.</summary>
      <param name="capacity">Die anfängliche Anzahl von Elementen, die das <see cref="T:System.Collections.Queue" /> enthalten kann.</param>
      <param name="growFactor">Der Faktor, um den die Kapazität von <see cref="T:System.Collections.Queue" /> erweitert wird.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als Null.
- oder -
<paramref name="growFactor" /> ist kleiner als 1.0 (null) oder größer als 10.0.</exception>
    </member>
    <member name="M:System.Collections.Queue.Clear">
      <summary>Entfernt alle Objekte aus dem <see cref="T:System.Collections.Queue" />.</summary>
    </member>
    <member name="M:System.Collections.Queue.Clone">
      <summary>Erstellt eine flache Kopie von <see cref="T:System.Collections.Queue" />.</summary>
      <returns>Eine flache Kopie von <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Contains(System.Object)">
      <summary>Bestimmt, ob sich ein Element in <see cref="T:System.Collections.Queue" /> befindet.</summary>
      <param name="obj">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.Queue" /> gesucht werden soll. Der Wert kann <see langword="null" /> sein.</param>
      <returns>
        <see langword="true" />, wenn das <paramref name="obj" /> in der <see cref="T:System.Collections.Queue" /> gefunden wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die <see cref="T:System.Collections.Queue" />-Elemente in ein vorhandenes eindimensionales <see cref="T:System.Array" />, beginnend beim angegebenen Arrayindex.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Queue" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.
- oder -
Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Queue" /> ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />s.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Der Typ der Quell-<see cref="T:System.Collections.Queue" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.Queue.Count">
      <summary>Ruft die Anzahl der Elemente ab, die in <see cref="T:System.Collections.Queue" /> enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die in <see cref="T:System.Collections.Queue" /> enthalten sind.</returns>
    </member>
    <member name="M:System.Collections.Queue.Dequeue">
      <summary>Entfernt das Objekt am Anfang der <see cref="T:System.Collections.Queue" /> und gibt es zurück.</summary>
      <returns>Das Objekt, das vom Anfang der <see cref="T:System.Collections.Queue" /> entfernt wird.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Collections.Queue" /> ist leer.</exception>
    </member>
    <member name="M:System.Collections.Queue.Enqueue(System.Object)">
      <summary>Fügt am Ende der <see cref="T:System.Collections.Queue" /> ein Objekt hinzu.</summary>
      <param name="obj">Das Objekt, das <see cref="T:System.Collections.Queue" /> hinzugefügt werden soll. Der Wert kann <see langword="null" /> sein.</param>
    </member>
    <member name="M:System.Collections.Queue.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.Queue" /> durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="P:System.Collections.Queue.IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.Queue" /> synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="true" /> , wenn der Zugriff auf das <see cref="T:System.Collections.Queue" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Peek">
      <summary>Gibt das Objekt am Anfang der <see cref="T:System.Collections.Queue" /> zurück, ohne es zu entfernen.</summary>
      <returns>Das Objekt am Anfang der <see cref="T:System.Collections.Queue" />.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Collections.Queue" /> ist leer.</exception>
    </member>
    <member name="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
      <summary>Gibt eine neue <see cref="T:System.Collections.Queue" /> zurück, die die ursprüngliche Warteschlange umschließt und threadsicher ist.</summary>
      <param name="queue">Die <see cref="T:System.Collections.Queue" />, die synchronisiert werden soll.</param>
      <returns>Ein <see cref="T:System.Collections.Queue" />-Wrapper, der synchronisiert (threadsicher) ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="queue" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Queue.SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.Queue" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.Queue" /> synchronisiert werden kann.</returns>
    </member>
    <member name="M:System.Collections.Queue.ToArray">
      <summary>Kopiert die <see cref="T:System.Collections.Queue" />-Elemente in ein neues Array.</summary>
      <returns>Ein neues Array mit Elementen, die aus <see cref="T:System.Collections.Queue" /> kopiert werden.</returns>
    </member>
    <member name="M:System.Collections.Queue.TrimToSize">
      <summary>Legt die Kapazität auf die Anzahl der tatsächlich in der <see cref="T:System.Collections.Queue" /> enthaltenen Elemente fest.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Queue" /> ist schreibgeschützt.</exception>
    </member>
    <member name="T:System.Collections.ReadOnlyCollectionBase">
      <summary>Stellt die <see langword="abstract" /> Basisklasse für eine stark typisierte, nicht-generische, schreibgeschützte Auflistung bereit.</summary>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.ReadOnlyCollectionBase" />-Klasse.</summary>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.Count">
      <summary>Ruft die Anzahl der Elemente ab, die in der <see cref="T:System.Collections.ReadOnlyCollectionBase" />-Instanz enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die in der <see cref="T:System.Collections.ReadOnlyCollectionBase" />-Instanz enthalten sind. Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.ReadOnlyCollectionBase" /> durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für die <see cref="T:System.Collections.ReadOnlyCollectionBase" />-Instanz.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.InnerList">
      <summary>Ruft die Liste der in der <see cref="T:System.Collections.ReadOnlyCollectionBase" />-Instanz enthaltenen Elemente ab.</summary>
      <returns>Eine <see cref="T:System.Collections.ArrayList" />, die die <see cref="T:System.Collections.ReadOnlyCollectionBase" />-Instanz selbst darstellt.</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die gesamte <see cref="T:System.Collections.ReadOnlyCollectionBase" />-Instanz in ein kompatibles eindimensionales <see cref="T:System.Array" />, beginnend am angegebenen Index des Zielarrays.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ReadOnlyCollectionBase" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.
- oder -
Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ReadOnlyCollectionBase" /> ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />s.</exception>
      <exception cref="T:System.InvalidCastException">Der Typ der Quell-<see cref="T:System.Collections.ReadOnlyCollectionBase" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf ein <see cref="T:System.Collections.ReadOnlyCollectionBase" />-Objekt synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ReadOnlyCollectionBase" />-Objekt synchronisiert (threadsicher) ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf ein <see cref="T:System.Collections.ReadOnlyCollectionBase" />-Objekt synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf das <see cref="T:System.Collections.ReadOnlyCollectionBase" />-Objekt synchronisiert werden kann.</returns>
    </member>
    <member name="T:System.Collections.SortedList">
      <summary>Stellt eine Auflistung von Schlüssel-Wert-Paaren dar, die nach Schlüsseln sortiert sind und auf die sowohl über Schlüssel als auch über Indizes zugegriffen werden kann.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.SortedList" />-Klasse, die über die anfängliche Standardkapazität verfügt und entsprechend der <see cref="T:System.IComparable" />-Schnittstelle sortiert wird, die von jedem zum <see cref="T:System.Collections.SortedList" />-Objekt hinzugefügten Schlüssel implementiert wird.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.SortedList" />-Klasse, die über die anfängliche Standardkapazität verfügt und entsprechend der angegebenen <see cref="T:System.Collections.IComparer" />-Schnittstelle sortiert wird.</summary>
      <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.
- oder -
<see langword="null" />, wenn die <see cref="T:System.IComparable" />-Implementierung des jeweiligen Schlüssels verwendet werden soll.</param>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.SortedList" />-Klasse, die über die angegebene anfängliche Kapazität verfügt und entsprechend der angegebenen <see cref="T:System.Collections.IComparer" />-Schnittstelle sortiert wird.</summary>
      <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.
- oder -
<see langword="null" />, wenn die <see cref="T:System.IComparable" />-Implementierung des jeweiligen Schlüssels verwendet werden soll.</param>
      <param name="capacity">Die anfängliche Anzahl an Elementen, die das <see cref="T:System.Collections.SortedList" />-Objekt enthalten kann.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als Null.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher verfügbar, um ein <see cref="T:System.Collections.SortedList" />-Objekt mit der angegebenen <paramref name="capacity" /> zu erstellen.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.SortedList" />-Klasse mit Elementen, die aus dem angegebenen Wörterbuch kopiert werden. Die anfängliche Kapazität entspricht der Anzahl der kopierten Elemente, und die Sortierung erfolgt entsprechend der <see cref="T:System.IComparable" />-Schnittstelle, die von den einzelnen Schlüsseln implementiert wird.</summary>
      <param name="d">Die <see cref="T:System.Collections.IDictionary" />-Implementierung, die in ein neues <see cref="T:System.Collections.SortedList" />-Objekt kopiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">In einem oder mehreren Elementen in <paramref name="d" /> ist die <see cref="T:System.IComparable" />-Schnittstelle nicht implementiert.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.SortedList" />-Klasse, die aus dem angegebenen Wörterbuch kopierte Elemente enthält. Die anfängliche Kapazität entspricht der Anzahl der kopierten Elemente, und die Sortierung erfolgt nach der angegebenen <see cref="T:System.Collections.IComparer" />-Schnittstelle.</summary>
      <param name="d">Die <see cref="T:System.Collections.IDictionary" />-Implementierung, die in ein neues <see cref="T:System.Collections.SortedList" />-Objekt kopiert werden soll.</param>
      <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.
- oder -
<see langword="null" />, wenn die <see cref="T:System.IComparable" />-Implementierung des jeweiligen Schlüssels verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="comparer" /> ist <see langword="null" />, und mindestens ein Element in <paramref name="d" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Int32)">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.SortedList" />-Klasse, die über die angegebene anfängliche Standardkapazität verfügt und entsprechend der <see cref="T:System.IComparable" />-Schnittstelle sortiert wird, die von jedem zum <see cref="T:System.Collections.SortedList" />-Objekt hinzugefügten Schlüssel implementiert wird.</summary>
      <param name="initialCapacity">Die anfängliche Anzahl an Elementen, die das <see cref="T:System.Collections.SortedList" />-Objekt enthalten kann.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="initialCapacity" /> ist kleiner als Null.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher verfügbar, um ein <see cref="T:System.Collections.SortedList" />-Objekt mit der angegebenen <paramref name="initialCapacity" /> zu erstellen.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Add(System.Object,System.Object)">
      <summary>Fügt einem <see cref="T:System.Collections.SortedList" />-Objekt ein Element mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="key">Der Schlüssel des hinzuzufügenden Elements.</param>
      <param name="value">Der Wert des hinzuzufügenden Elements. Der Wert kann <see langword="null" /> sein.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Ein Element mit dem angegebenen <paramref name="key" /> ist bereits im <see cref="T:System.Collections.SortedList" />-Objekt vorhanden.
- oder -
<see cref="T:System.Collections.SortedList" /> ist auf die Verwendung der <see cref="T:System.IComparable" />-Schnittstelle festgelegt, und <paramref name="key" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle nicht.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.SortedList" /> ist schreibgeschützt.
- oder -
<see cref="T:System.Collections.SortedList" /> hat eine feste Größe.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher verfügbar, um das Element zu <see cref="T:System.Collections.SortedList" /> hinzuzufügen.</exception>
      <exception cref="T:System.InvalidOperationException">Der Vergleich löst eine Ausnahme aus.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Capacity">
      <summary>Ruft die Kapazität eines <see cref="T:System.Collections.SortedList" />-Objekts ab oder legt diese fest.</summary>
      <returns>Die Anzahl von Elementen, die das <see cref="T:System.Collections.SortedList" />-Objekt enthalten kann.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der zugewiesene Wert ist kleiner als die derzeitige Anzahl der Elemente im <see cref="T:System.Collections.SortedList" />-Objekt.</exception>
      <exception cref="T:System.OutOfMemoryException">Im System ist nicht genügend Arbeitsspeicher verfügbar.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clear">
      <summary>Entfernt alle Elemente aus einem <see cref="T:System.Collections.SortedList" />-Objekt.</summary>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.SortedList" />-Objekt ist schreibgeschützt.
- oder -
<see cref="T:System.Collections.SortedList" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clone">
      <summary>Erstellt eine flache Kopie eines <see cref="T:System.Collections.SortedList" />-Objekts.</summary>
      <returns>Eine flache Kopie des <see cref="T:System.Collections.SortedList" />-Objekts.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Contains(System.Object)">
      <summary>Ermittelt, ob ein <see cref="T:System.Collections.SortedList" />-Objekt einen bestimmten Schlüssel enthält.</summary>
      <param name="key">Der im <see cref="T:System.Collections.SortedList" />-Objekt zu suchende Schlüssel.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.SortedList" />-Objekt ein Element mit dem angegebenen <paramref name="key" /> enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Vergleich löst eine Ausnahme aus.</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsKey(System.Object)">
      <summary>Ermittelt, ob ein <see cref="T:System.Collections.SortedList" />-Objekt einen bestimmten Schlüssel enthält.</summary>
      <param name="key">Der im <see cref="T:System.Collections.SortedList" />-Objekt zu suchende Schlüssel.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.SortedList" />-Objekt ein Element mit dem angegebenen <paramref name="key" /> enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Vergleich löst eine Ausnahme aus.</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsValue(System.Object)">
      <summary>Ermittelt, ob ein <see cref="T:System.Collections.SortedList" />-Objekt einen bestimmten Wert enthält.</summary>
      <param name="value">Der im <see cref="T:System.Collections.SortedList" />-Objekt zu suchende Wert. Der Wert kann <see langword="null" /> sein.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.SortedList" />-Objekt ein Element mit dem angegebenen <paramref name="value" /> enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert <see cref="T:System.Collections.SortedList" />-Elemente in ein eindimensionales <see cref="T:System.Array" />-Objekt, beginnend mit dem angegebenen Index im Array.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />-Objekt, das das Ziel der aus <see cref="T:System.Collections.DictionaryEntry" /> kopierten <see cref="T:System.Collections.SortedList" />-Objekte darstellt. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.
- oder -
Die Anzahl der aus dem <see cref="T:System.Collections.SortedList" />-Quellobjekt zu kopierenden Elemente ist größer als der verfügbare Platz von <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException">Der Typ der Quell-<see cref="T:System.Collections.SortedList" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Count">
      <summary>Ruft die Anzahl der Elemente ab, die in einem <see cref="T:System.Collections.SortedList" />-Objekt enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die im <see cref="T:System.Collections.SortedList" />-Objekt enthalten sind.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetByIndex(System.Int32)">
      <summary>Ruft den Wert am angegebenen Index in einem <see cref="T:System.Collections.SortedList" />-Objekt ab.</summary>
      <param name="index">Der nullbasierte Index des abzurufenden Werts.</param>
      <returns>Der Wert am angegebenen Index im <see cref="T:System.Collections.SortedList" />-Objekt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für das <see cref="T:System.Collections.SortedList" />-Objekt.</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetEnumerator">
      <summary>Gibt ein <see cref="T:System.Collections.IDictionaryEnumerator" />-Objekt zurück, das ein <see cref="T:System.Collections.SortedList" />-Objekt durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IDictionaryEnumerator" />-Objekt für das <see cref="T:System.Collections.SortedList" />-Objekt.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetKey(System.Int32)">
      <summary>Ruft den Schlüssel am angegebenen Index in einem <see cref="T:System.Collections.SortedList" />-Objekt ab.</summary>
      <param name="index">Der nullbasierte Index des abzurufenden Schlüssels.</param>
      <returns>Der Schlüssel am angegebenen Index im <see cref="T:System.Collections.SortedList" />-Objekt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für das <see cref="T:System.Collections.SortedList" />-Objekt.</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetKeyList">
      <summary>Ruft die Schlüssel in einem <see cref="T:System.Collections.SortedList" />-Objekt ab.</summary>
      <returns>Ein <see cref="T:System.Collections.IList" />-Objekt, das die Schlüssel im <see cref="T:System.Collections.SortedList" />-Objekt enthält.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetValueList">
      <summary>Ruft die Werte in einem <see cref="T:System.Collections.SortedList" />-Objekt ab.</summary>
      <returns>Ein <see cref="T:System.Collections.IList" />-Objekt, das die Werte des <see cref="T:System.Collections.SortedList" />-Objekts enthält.</returns>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfKey(System.Object)">
      <summary>Gibt den nullbasierten Index des angegebenen Schlüssels in einem <see cref="T:System.Collections.SortedList" />-Objekt zurück.</summary>
      <param name="key">Der im <see cref="T:System.Collections.SortedList" />-Objekt zu suchende Schlüssel.</param>
      <returns>Der nullbasierte Index des <paramref name="key" />-Parameters, wenn <paramref name="key" /> im <see cref="T:System.Collections.SortedList" />-Objekt gefunden wurde, andernfalls -1.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Vergleich löst eine Ausnahme aus.</exception>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfValue(System.Object)">
      <summary>Gibt den nullbasierten Index des ersten Vorkommens des angegebenen Werts in einem <see cref="T:System.Collections.SortedList" />-Objekt zurück.</summary>
      <param name="value">Der im <see cref="T:System.Collections.SortedList" />-Objekt zu suchende Wert. Der Wert kann <see langword="null" /> sein.</param>
      <returns>Der nullbasierte Index des ersten Vorkommens des <paramref name="value" />-Parameters in der Auflistung, sofern <paramref name="value" /> im <see cref="T:System.Collections.SortedList" />-Objekt gefunden wurde, andernfalls -1.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Collections.SortedList" />-Objekt eine feste Größe hat.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.SortedList" />-Objekt eine feste Größe hat, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Collections.SortedList" />-Objekt schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.SortedList" />-Objekt schreibgeschützt ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf ein <see cref="T:System.Collections.SortedList" />-Objekt synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.SortedList" />-Objekt synchronisiert (threadsicher) ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.Item(System.Object)">
      <summary>Ruft den Wert ab, der einem bestimmten Schlüssel in einem <see cref="T:System.Collections.SortedList" />-Objekt zugeordnet ist, oder legt diesen fest.</summary>
      <param name="key">Der Schlüssel, der dem abzurufenden oder festzulegenden Wert zugeordnet ist.</param>
      <returns>Wenn <paramref name="key" /> gefunden wird, der dem <see cref="T:System.Collections.SortedList" />-Parameter zugeordnete Wert im <paramref name="key" />-Objekt, andernfalls <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Collections.SortedList" />-Objekt ist schreibgeschützt.
- oder -
Die Eigenschaft wird festgelegt, <paramref name="key" /> ist in der Auflistung nicht vorhanden, und der <see cref="T:System.Collections.SortedList" /> hat eine feste Größe.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher verfügbar, um das Element zu <see cref="T:System.Collections.SortedList" /> hinzuzufügen.</exception>
      <exception cref="T:System.InvalidOperationException">Der Vergleich löst eine Ausnahme aus.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Keys">
      <summary>Ruft die Schlüssel in einem <see cref="T:System.Collections.SortedList" />-Objekt ab.</summary>
      <returns>Ein <see cref="T:System.Collections.ICollection" />-Objekt, das die Schlüssel im <see cref="T:System.Collections.SortedList" />-Objekt enthält.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Remove(System.Object)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus einem <see cref="T:System.Collections.SortedList" />-Objekt.</summary>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.SortedList" />-Objekt ist schreibgeschützt.
- oder -
<see cref="T:System.Collections.SortedList" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.SortedList.RemoveAt(System.Int32)">
      <summary>Entfernt das Element am angegebenen Index aus einem <see cref="T:System.Collections.SortedList" />-Objekt.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für das <see cref="T:System.Collections.SortedList" />-Objekt.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.SortedList" /> ist schreibgeschützt.
- oder -
<see cref="T:System.Collections.SortedList" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
      <summary>Ersetzt den Wert an einem bestimmten Index in einem <see cref="T:System.Collections.SortedList" />-Objekt.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> gespeichert werden soll.</param>
      <param name="value">Das <see cref="T:System.Object" />, das im <see cref="T:System.Collections.SortedList" />-Objekt gespeichert werden soll. Der Wert kann <see langword="null" /> sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für das <see cref="T:System.Collections.SortedList" />-Objekt.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
      <summary>Gibt einen synchronisierten (threadsicheren) Wrapper für ein <see cref="T:System.Collections.SortedList" />-Objekt zurück.</summary>
      <param name="list">Das <see cref="T:System.Collections.SortedList" />-Objekt, das synchronisiert werden soll.</param>
      <returns>Ein synchronisierter (threadsicherer) Wrapper das <see cref="T:System.Collections.SortedList" />-Objekt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.SortedList.SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf ein <see cref="T:System.Collections.SortedList" />-Objekt synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf das <see cref="T:System.Collections.SortedList" />-Objekt synchronisiert werden kann.</returns>
    </member>
    <member name="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen <see cref="T:System.Collections.IEnumerator" /> zurück, der <see cref="T:System.Collections.SortedList" /> durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.TrimToSize">
      <summary>Legt die Kapazität auf die tatsächliche Anzahl der in einem <see cref="T:System.Collections.SortedList" />-Objekt enthaltenen Elemente fest.</summary>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.SortedList" />-Objekt ist schreibgeschützt.
- oder -
<see cref="T:System.Collections.SortedList" /> hat eine feste Größe.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Values">
      <summary>Ruft die Werte in einem <see cref="T:System.Collections.SortedList" />-Objekt ab.</summary>
      <returns>Ein <see cref="T:System.Collections.ICollection" />-Objekt, das die Werte des <see cref="T:System.Collections.SortedList" />-Objekts enthält.</returns>
    </member>
    <member name="T:System.Collections.Specialized.CollectionsUtil">
      <summary>Erstellt Auflistungen, die die Groß-und Kleinschreibung in Zeichenfolgen ignoriert.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Specialized.CollectionsUtil" />-Klasse.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <summary>Erstellt eine neue, die Groß- und Kleinschreibung nicht berücksichtigende Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse mit der anfänglichen Standardkapazität.</summary>
      <returns>Eine neue, die Groß- und Kleinschreibung nicht berücksichtigende Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse mit der anfänglichen Standardkapazität.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)">
      <summary>Kopiert die Einträge aus dem angegebenen Wörterbuch in eine neue, die Groß- und Kleinschreibung nicht berücksichtigende Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse mit einer Anfangskapazität, die der Anzahl der kopierten Einträge entspricht.</summary>
      <param name="d">Das <see cref="T:System.Collections.IDictionary" />, das in eine neue, die Groß- und Kleinschreibung nicht berücksichtigende <see cref="T:System.Collections.Hashtable" /> kopiert werden soll.</param>
      <returns>Eine neue, die Groß- und Kleinschreibung nicht berücksichtigende Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse mit den Einträgen aus dem angegebenen <see cref="T:System.Collections.IDictionary" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)">
      <summary>Erstellt eine neue, die Groß- und Kleinschreibung nicht berücksichtigende Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse mit der angegebenen Anfangskapazität.</summary>
      <param name="capacity">Die ungefähre Anzahl von Einträgen, die die <see cref="T:System.Collections.Hashtable" /> anfänglich enthalten kann.</param>
      <returns>Eine neue, die Groß- und Kleinschreibung nicht berücksichtigende Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse mit der angegebenen Anfangskapazität.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Collections.SortedList" />-Klasse, die die Groß- und Kleinschreibung von Zeichenfolgen nicht berücksichtigt.</summary>
      <returns>Eine neue Instanz der <see cref="T:System.Collections.SortedList" />-Klasse, die die Groß- und Kleinschreibung von Zeichenfolgen nicht berücksichtigt.</returns>
    </member>
    <member name="T:System.Collections.Stack">
      <summary>Stellt eine einfache Last-in-First-out-Auflistung (LIFO) von Objekten dar.</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Stack" />-Klasse, die die Standardanfangskapazität aufweist.</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Stack" />-Klasse, die aus der angegebenen Auflistung kopierte Elemente enthält und deren anfängliche Kapazität der Anzahl der kopierten Elemente entspricht.</summary>
      <param name="col">Die <see cref="T:System.Collections.ICollection" />, aus der Elemente kopiert werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="col" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Int32)">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Stack" />-Klasse, die über die angegebene anfängliche Kapazität, mindestens aber über die anfängliche Standardkapazität verfügt.</summary>
      <param name="initialCapacity">Die anfängliche Anzahl von Elementen, die das <see cref="T:System.Collections.Stack" /> enthalten kann.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="initialCapacity" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Collections.Stack.Clear">
      <summary>Entfernt alle Objekte aus dem <see cref="T:System.Collections.Stack" />.</summary>
    </member>
    <member name="M:System.Collections.Stack.Clone">
      <summary>Erstellt eine flache Kopie von <see cref="T:System.Collections.Stack" />.</summary>
      <returns>Eine flache Kopie von <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Contains(System.Object)">
      <summary>Bestimmt, ob sich ein Element in <see cref="T:System.Collections.Stack" /> befindet.</summary>
      <param name="obj">Das im <see cref="T:System.Collections.Stack" /> zu suchende Objekt. Der Wert kann <see langword="null" /> sein.</param>
      <returns>
        <see langword="true" />, wenn das <paramref name="obj" /> in der <see cref="T:System.Collections.Stack" /> gefunden wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert <see cref="T:System.Collections.Stack" /> in ein vorhandenes eindimensionales <see cref="T:System.Array" />, beginnend beim angegebenen Arrayindex.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Stack" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.
- oder -
Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Stack" /> ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />s.</exception>
      <exception cref="T:System.InvalidCastException">Der Typ der Quell-<see cref="T:System.Collections.Stack" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.Stack.Count">
      <summary>Ruft die Anzahl der Elemente ab, die in <see cref="T:System.Collections.Stack" /> enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die in <see cref="T:System.Collections.Stack" /> enthalten sind.</returns>
    </member>
    <member name="M:System.Collections.Stack.GetEnumerator">
      <summary>Gibt einen <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Collections.Stack" /> zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="P:System.Collections.Stack.IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.Stack" /> synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="true" />, wenn der Zugriff auf die <see cref="T:System.Collections.Stack" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Peek">
      <summary>Gibt das oberste Objekt von <see cref="T:System.Collections.Stack" /> zurück, ohne es zu entfernen.</summary>
      <returns>Das oberste <see cref="T:System.Object" /> von <see cref="T:System.Collections.Stack" />.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Collections.Stack" /> ist leer.</exception>
    </member>
    <member name="M:System.Collections.Stack.Pop">
      <summary>Entfernt das oberste Objekt aus <see cref="T:System.Collections.Stack" /> und gibt es zurück.</summary>
      <returns>Das <see cref="T:System.Object" />, das von der obersten Position im <see cref="T:System.Collections.Stack" /> entfernt wurde.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Collections.Stack" /> ist leer.</exception>
    </member>
    <member name="M:System.Collections.Stack.Push(System.Object)">
      <summary>Fügt ein Objekt am Anfang des <see cref="T:System.Collections.Stack" /> ein.</summary>
      <param name="obj">Das <see cref="T:System.Object" />, das auf dem <see cref="T:System.Collections.Stack" /> abgelegt werden soll. Der Wert kann <see langword="null" /> sein.</param>
    </member>
    <member name="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
      <summary>Gibt einen synchronisierten (threadsicheren) Wrapper für <see cref="T:System.Collections.Stack" /> zurück.</summary>
      <param name="stack">Die <see cref="T:System.Collections.Stack" />, die synchronisiert werden soll.</param>
      <returns>Ein synchronisierter Wrapper um <see cref="T:System.Collections.Stack" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stack" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Stack.SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.Stack" /> synchronisiert werden kann.</summary>
      <returns>Ein <see cref="T:System.Object" />, mit dem der Zugriff auf die <see cref="T:System.Collections.Stack" />-Auflistung synchronisiert werden kann.</returns>
    </member>
    <member name="M:System.Collections.Stack.ToArray">
      <summary>Kopiert <see cref="T:System.Collections.Stack" /> in ein neues Array.</summary>
      <returns>Ein neues Array, das Kopien der Elemente aus <see cref="T:System.Collections.Stack" /> enthält.</returns>
    </member>
  </members>
</doc>