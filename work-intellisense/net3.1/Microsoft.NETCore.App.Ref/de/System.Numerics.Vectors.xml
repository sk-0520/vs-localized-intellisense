<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Numerics.Vectors</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.Matrix3x2">
      <summary vsli:raw="Represents a 3x2 matrix.">Stellt eine 3 x 2-Matrix dar.</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 3x2 matrix from the specified components.">Erstellt eine 4 x 2-Matrix aus den angegebenen Komponenten.</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">Der Wert, der dem ersten Element in der ersten Zeile zugewiesen wird.</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">Der Wert, der dem zweiten Element in der ersten Zeile zugewiesen wird.</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">Der Wert, der dem ersten Element in der zweiten Zeile zugewiesen wird.</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">Der Wert, der dem zweiten Element in der zweiten Zeile zugewiesen wird.</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">Der Wert, der dem ersten Element in der dritten Zeile zugewiesen wird.</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">Der Wert, der dem zweiten Element in der dritten Zeile zugewiesen wird.</param>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">Addiert zu jedem Element in einer Matrix das entsprechende Element in einer zweiten Matrix.</summary>
      <param name="value1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="value2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">Die Matrix, die die addierten Werte von <paramref name="value1" /> und <paramref name="value2" /> enthält.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single)">
      <summary vsli:raw="Creates a rotation matrix using the given rotation in radians.">Erstellt eine Rotationsmatrix mithilfe der angegebenen Drehung im Bogenmaß.</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">Das Ausmaß der Rotation im Bogenmaß.</param>
      <returns vsli:raw="The rotation matrix.">Die Rotationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a rotation matrix using the specified rotation in radians and a center point.">Erstellt eine Rotationsmatrix und verwendet dazu die angegebene Rotation im Bogenmaß und einen Mittelpunkt.</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">Das Ausmaß der Rotation im Bogenmaß.</param>
      <param name="centerPoint" vsli:raw="The center point.">Der Mittelpunkt.</param>
      <returns vsli:raw="The rotation matrix.">Die Rotationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">Erstellt eine Skalierungsmatrix aus der angegebenen Vektorskala.</summary>
      <param name="scales" vsli:raw="The scale to use.">Die zu verwendende Skala.</param>
      <returns vsli:raw="The scaling matrix.">Die Skalierungsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale with an offset from the specified center point.">Erstellt eine Skalierungsmatrix aus dem angegebenen Vektormaßstab mit einem Versatz gegenüber dem angegebenen Mittelpunkt.</summary>
      <param name="scales" vsli:raw="The scale to use.">Die zu verwendende Skala.</param>
      <param name="centerPoint" vsli:raw="The center offset.">Der Mittelpunktversatz.</param>
      <returns vsli:raw="The scaling matrix.">Die Skalierungsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the given scale.">Erstellt eine Skalierungsmatrix, die gleichmäßig mit dem angegebenen Maßstab skaliert.</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">Der zu verwendende einheitliche Maßstab.</param>
      <returns vsli:raw="The scaling matrix.">Die Skalierungsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified center.">Erstellt eine Skalierungsmatrix, die mit dem angegebenen Maßstab mit einem Versatz gegenüber dem angegebenen Mittelpunkt gleichmäßig skaliert.</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">Der zu verwendende einheitliche Maßstab.</param>
      <param name="centerPoint" vsli:raw="The center offset.">Der Mittelpunktversatz.</param>
      <returns vsli:raw="The scaling matrix.">Die Skalierungsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X and Y components.">Erstellt eine Skalierungsmatrix aus den angegebenen X- und Y-Komponenten.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">Der Wert für die Skalierung auf der X-Achse.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Der Wert für die Skalierung auf der Y-Achse.</param>
      <returns vsli:raw="The scaling matrix.">Die Skalierungsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">Erstellt eine Skalierung Matrix, die um einen angegebenen Mittelpunkt versetzt ist.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">Der Wert für die Skalierung auf der X-Achse.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Der Wert für die Skalierung auf der Y-Achse.</param>
      <param name="centerPoint" vsli:raw="The center point.">Der Mittelpunkt.</param>
      <returns vsli:raw="The scaling matrix.">Die Skalierungsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians.">Erstellt eine schiefsymmetrische Matrix aus den angegebenen Winkeln im Bogenmaß.</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">Der X-Winkel im Bogenmaß.</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">Der Y-Winkel im Bogenmaß.</param>
      <returns vsli:raw="The skew matrix.">Die schiefsymmetrische Matrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians and a center point.">Erstellt eine schiefsymmetrische Matrix aus den angegebenen Winkeln im Bogenmaß und einem Mittelpunkt.</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">Der X-Winkel im Bogenmaß.</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">Der Y-Winkel im Bogenmaß.</param>
      <param name="centerPoint" vsli:raw="The center point.">Der Mittelpunkt.</param>
      <returns vsli:raw="The skew matrix.">Die schiefsymmetrische Matrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a translation matrix from the specified 2-dimensional vector.">Erstellt eine Translationsmatrix aus dem angegebenen zweidimensionalen Vektor.</summary>
      <param name="position" vsli:raw="The translation position.">Die Translationsposition.</param>
      <returns vsli:raw="The translation matrix.">Die Translationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X and Y components.">Erstellt eine Translationsmatrix aus den angegebenen X- und Y-Komponenten.</summary>
      <param name="xPosition" vsli:raw="The X position.">Die X-Position.</param>
      <param name="yPosition" vsli:raw="The Y position.">Die Y-Position.</param>
      <returns vsli:raw="The translation matrix.">Die Translationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 3x2 matrix are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und eine andere 3 x 2-Matrix gleich sind.</summary>
      <param name="other" vsli:raw="The other matrix.">Die andere Matrix.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Matrizen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und ein angegebenes Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Instanz und <paramref name="obj" /> gleich sind, andernfalls <see langword="false" />. Wenn <paramref name="obj" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetDeterminant">
      <summary vsli:raw="Calculates the determinant for this matrix.">Berechnet die Determinante für diese Matrix.</summary>
      <returns vsli:raw="The determinant.">Die Determinante.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="The hash code.">Der Hashcode.</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">Ruft die multiplikative Identitätsmatrix ab.</summary>
      <returns vsli:raw="The multiplicative identify matrix.">Ruft die multiplikative Identitätsmatrix ab.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">Invertiert die angegebene Matrix. Der Rückgabewert gibt an, ob der Vorgang erfolgreich abgeschlossen wurde.</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">Die zu invertierende Matrix.</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">Der Rückgabewert dieser Methode enthält die invertierte Matrix, wenn der Vorgang erfolgreich abgeschlossen wurde.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">Wenn <see langword="true" /> erfolgreich konvertiert wurde: <paramref name="matrix" />, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">Gibt an, ob die aktuelle Matrix die Identitätsmatrix ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die aktuelle Matrix Identitätsmatrix ist, anderenfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">Führt eine lineare Interpolation zwischen einer Matrix und einer zweiten Matrix basierend auf einem Wert durch, der die Gewichtung er zweiten Matrix angibt.</summary>
      <param name="matrix1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="matrix2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">Die relative Gewichtung der <paramref name="matrix2" />.</param>
      <returns vsli:raw="The interpolated matrix.">Die interpolierte Matrix.</returns>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M11">
      <summary vsli:raw="The first element of the first row.">Das erste Element der ersten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M12">
      <summary vsli:raw="The second element of the first row.">Das zweite Element der ersten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M21">
      <summary vsli:raw="The first element of the second row.">Das erste Element der zweiten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M22">
      <summary vsli:raw="The second element of the second row.">Das zweite Element der zweiten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M31">
      <summary vsli:raw="The first element of the third row.">Das erste Element der dritten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M32">
      <summary vsli:raw="The second element of the third row.">Das zweite Element der dritten Zeile.</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">Gibt die Matrix zurück, die sich aus der Multiplikation zwei Matrizen ergibt.</summary>
      <param name="value1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="value2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <returns vsli:raw="The product matrix.">Die Produktmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">Gibt die Matrix zurück, die sich aus der Skalierung aller Elemente einer angegebenen Matrix um einen skalaren Faktor ergibt.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">Die zu skalierende Matrix.</param>
      <param name="value2" vsli:raw="The scaling value to use.">Der zu verwendende Skalierungswert.</param>
      <returns vsli:raw="The scaled matrix.">Die skalierte Matrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">Negiert die angegebene Matrix durch Multiplikation aller ihrer Werte mit -1.</summary>
      <param name="value" vsli:raw="The matrix to negate.">Die zu negierende Matrix.</param>
      <returns vsli:raw="The negated matrix.">Die negierte Matrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">Addiert zu jedem Element in einer Matrix das entsprechende Element in einer zweiten Matrix.</summary>
      <param name="value1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="value2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <returns vsli:raw="The matrix that contains the summed values.">Die Matrix, die die addierten Werte enthält.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">Gibt einen Wert zurück, der angibt, ob die angegebenen Matrizen gleich sind.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">Die erste zu vergleichende Matrix.</param>
      <param name="value2" vsli:raw="The second matrix to compare.">Die zweite zu vergleichende Matrix.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value1" /> und <paramref name="value2" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">Gibt einen Wert zurück, der angibt, ob die angegebenen Matrizen ungleich sind.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">Die erste zu vergleichende Matrix.</param>
      <param name="value2" vsli:raw="The second matrix to compare.">Die zweite zu vergleichende Matrix.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value1" /> und <paramref name="value2" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">Gibt die Matrix zurück, die sich aus der Multiplikation zwei Matrizen ergibt.</summary>
      <param name="value1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="value2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <returns vsli:raw="The product matrix.">Die Produktmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">Gibt die Matrix zurück, die sich aus der Skalierung aller Elemente einer angegebenen Matrix um einen skalaren Faktor ergibt.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">Die zu skalierende Matrix.</param>
      <param name="value2" vsli:raw="The scaling value to use.">Der zu verwendende Skalierungswert.</param>
      <returns vsli:raw="The scaled matrix.">Die skalierte Matrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">Subtrahiert jedes Element aus einer zweiten Matrix von seinem entsprechenden Element in einer ersten Matrix.</summary>
      <param name="value1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="value2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">Die Matrix, die die Werte enthält, die sich aus der Subtraktion jedes Elements in <paramref name="value2" /> von seinem entsprechenden Element in <paramref name="value1" /> ergeben.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">Negiert die angegebene Matrix durch Multiplikation aller ihrer Werte mit -1.</summary>
      <param name="value" vsli:raw="The matrix to negate.">Die zu negierende Matrix.</param>
      <returns vsli:raw="The negated matrix.">Die negierte Matrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">Subtrahiert jedes Element aus einer zweiten Matrix von seinem entsprechenden Element in einer ersten Matrix.</summary>
      <param name="value1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="value2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">Die Matrix, die die Werte enthält, die sich aus der Subtraktion jedes Elements in <paramref name="value2" /> von seinem entsprechenden Element in <paramref name="value1" /> ergeben.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">Gibt eine Zeichenfolge zurück, die diese Matrix darstellt.</summary>
      <returns vsli:raw="The string representation of this matrix.">Die Zeichenfolgendarstellung dieser Matrix.</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">Ruft die Verschiebekomponente dieser Matrix ab oder legt sie fest.</summary>
      <returns vsli:raw="The translation component of the current instance.">Die Verschiebekomponente der aktuellen Instanz.</returns>
    </member>
    <member name="T:System.Numerics.Matrix4x4">
      <summary vsli:raw="Represents a 4x4 matrix.">Stellt eine 4 x 4-Matrix dar.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Matrix4x4&quot; /&gt; object from a specified &lt;see cref=&quot;T:System.Numerics.Matrix3x2&quot; /&gt; object.">Initialisiert ein <see cref="T:System.Numerics.Matrix4x4" />-Objekt aus einem angegebenen <see cref="T:System.Numerics.Matrix3x2" />-Objekt.</summary>
      <param name="value" vsli:raw="A 3x2 matrix.">Eine 3 x 2-Matrix.</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 4x4 matrix from the specified components.">Erstellt eine 4 x 4-Matrix aus den angegebenen Komponenten.</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">Der Wert, der dem ersten Element in der ersten Zeile zugewiesen wird.</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">Der Wert, der dem zweiten Element in der ersten Zeile zugewiesen wird.</param>
      <param name="m33" vsli:raw="The value to assign to the third element in the third row.">Der Wert, der dem dritten Element in der dritten Zeile zugewiesen wird.</param>
      <param name="m34" vsli:raw="The value to assign to the fourth element in the third row.">Der Wert, der dem vierten Element in der dritten Zeile zugewiesen wird.</param>
      <param name="m41" vsli:raw="The value to assign to the first element in the fourth row.">Der Wert, der dem ersten Element in der vierten Zeile zugewiesen wird.</param>
      <param name="m42" vsli:raw="The value to assign to the second element in the fourth row.">Der Wert, der dem zweiten Element in der vierten Zeile zugewiesen wird.</param>
      <param name="m43" vsli:raw="The value to assign to the third element in the fourth row.">Der Wert, der dem dritten Element in der vierten Zeile zugewiesen wird.</param>
      <param name="m44" vsli:raw="The value to assign to the fourth element in the fourth row.">Der Wert, der dem vierten Element in der vierten Zeile zugewiesen wird.</param>
      <param name="m13" vsli:raw="The value to assign to the third element in the first row.">Der Wert, der dem dritten Element in der ersten Zeile zugewiesen wird.</param>
      <param name="m14" vsli:raw="The value to assign to the fourth element in the first row.">Der Wert, der dem vierten Element in der ersten Zeile zugewiesen wird.</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">Der Wert, der dem ersten Element in der zweiten Zeile zugewiesen wird.</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">Der Wert, der dem zweiten Element in der zweiten Zeile zugewiesen wird.</param>
      <param name="m23" vsli:raw="The value to assign to the third element in the second row.">Der Wert, der dem vierten Element in der zweiten Zeile zugewiesen wird.</param>
      <param name="m24" vsli:raw="The value to assign to the fourth element in the second row.">Der Wert, der dem vierten Element in der zweiten Zeile zugewiesen wird.</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">Der Wert, der dem ersten Element in der dritten Zeile zugewiesen wird.</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">Der Wert, der dem zweiten Element in der dritten Zeile zugewiesen wird.</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Add(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">Addiert zu jedem Element in einer Matrix das entsprechende Element in einer zweiten Matrix.</summary>
      <param name="value1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="value2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">Die Matrix, die die addierten Werte von <paramref name="value1" /> und <paramref name="value2" /> enthält.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a spherical billboard that rotates around a specified object position.">Erstellt ein sphärisches Billboard, das um eine angegebene Objektposition rotiert.</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">Die Position des Objekts, um das das Billboard rotiert.</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">Die Kameraposition.</param>
      <param name="cameraUpVector" vsli:raw="The up vector of the camera.">Der Aufwärtsvektor der Kamera.</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">Der Vorwärtsvektor der Kamera.</param>
      <returns vsli:raw="The created billboard.">Das erstellte Billboard.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateConstrainedBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a cylindrical billboard that rotates around a specified axis.">Erstellt ein zylindrisches Billboard, das um eine angegebene Achse rotiert.</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">Die Position des Objekts, um das das Billboard rotiert.</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">Die Kameraposition.</param>
      <param name="rotateAxis" vsli:raw="The axis to rotate the billboard around.">Die Rotationsachse des Billboards.</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">Der Vorwärtsvektor der Kamera.</param>
      <param name="objectForwardVector" vsli:raw="The forward vector of the object.">Der Vorwärtsvektor des Objekts.</param>
      <returns vsli:raw="The billboard matrix.">Die Billboardmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a matrix that rotates around an arbitrary vector.">Erstellt eine Matrix, die um einen beliebigen Vektor rotiert.</summary>
      <param name="axis" vsli:raw="The axis to rotate around.">Die Rotationsachse.</param>
      <param name="angle" vsli:raw="The angle to rotate around &lt;paramref name=&quot;axis&quot; /&gt;, in radians.">Der Winkel der Drehung um <paramref name="axis" /> im Bogenmaß.</param>
      <returns vsli:raw="The rotation matrix.">Die Rotationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromQuaternion(System.Numerics.Quaternion)">
      <summary vsli:raw="Creates a rotation matrix from the specified Quaternion rotation value.">Erstellt eine Rotationsmatrix aus dem angegebenen Quaternionrotationswert.</summary>
      <param name="quaternion" vsli:raw="The source Quaternion.">Die Quellquaternion.</param>
      <returns vsli:raw="The rotation matrix.">Die Rotationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a rotation matrix from the specified yaw, pitch, and roll.">Erstellt eine Rotationsmatrix mit den angegebenen Werten für Gieren, Nicken und Rollen.</summary>
      <param name="yaw" vsli:raw="The angle of rotation, in radians, around the Y axis.">Der Drehwinkel um die Y-Achse im Bogenmaß.</param>
      <param name="pitch" vsli:raw="The angle of rotation, in radians, around the X axis.">Der Drehwinkel um die X-Achse im Bogenmaß.</param>
      <param name="roll" vsli:raw="The angle of rotation, in radians, around the Z axis.">Der Drehwinkel um die Z-Achse im Bogenmaß.</param>
      <returns vsli:raw="The rotation matrix.">Die Rotationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateLookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a view matrix.">Erstellt eine Ansichtsmatrix.</summary>
      <param name="cameraPosition" vsli:raw="The position of the camera.">Die Kameraposition.</param>
      <param name="cameraTarget" vsli:raw="The target towards which the camera is pointing.">Das Ziel, auf das die Kamera zeigt.</param>
      <param name="cameraUpVector" vsli:raw="The direction that is &quot;up&quot; from the camera's point of view.">Die Richtung, die aus der Sicht der Kamera "oben" ist.</param>
      <returns vsli:raw="The view matrix.">Die Ansichtsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates an orthographic perspective matrix from the given view volume dimensions.">Erstellt eine orthogonale Perspektivmatrix aus den angegebenen Abmessungen des Bildraums (View Volume).</summary>
      <param name="width" vsli:raw="The width of the view volume.">Die Breite des Bildraums.</param>
      <param name="height" vsli:raw="The height of the view volume.">Die Höhe des Bildraums.</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">Der kleinste Z-Wert des Bildraums.</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">Der größte Z-Wert des Bildraums.</param>
      <returns vsli:raw="The orthographic projection matrix.">Die orthogonale Projektionsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized orthographic projection matrix.">Erstellt eine angepasste orthogonale Projektionsmatrix.</summary>
      <param name="left" vsli:raw="The minimum X-value of the view volume.">Der kleinste X-Wert des Bildraums.</param>
      <param name="right" vsli:raw="The maximum X-value of the view volume.">Der größte X-Wert des Bildraums.</param>
      <param name="bottom" vsli:raw="The minimum Y-value of the view volume.">Der kleinste Y-Wert des Bildraums.</param>
      <param name="top" vsli:raw="The maximum Y-value of the view volume.">Der größte Y-Wert des Bildraums.</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">Der kleinste Z-Wert des Bildraums.</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">Der größte Z-Wert des Bildraums.</param>
      <returns vsli:raw="The orthographic projection matrix.">Die orthogonale Projektionsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix from the given view volume dimensions.">Erstellt eine perspektivische Projektionsmatrix aus den angegebenen Abmessungen des Bildraums (View Volume).</summary>
      <param name="width" vsli:raw="The width of the view volume at the near view plane.">Die Breite des Bildraums auf der Nahsichtebene.</param>
      <param name="height" vsli:raw="The height of the view volume at the near view plane.">Die Höhe des Bildraums auf der Nahsichtebene.</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">Der Abstand zur Nahsichtebene.</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">Der Abstand zur Fernsichtebene.</param>
      <returns vsli:raw="The perspective projection matrix.">Die perspektivische Projektionsmatrix.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" /> ist kleiner gleich 0 (null).

oder -
<paramref name="farPlaneDistance" /> ist kleiner gleich 0 (null).

oder -
<paramref name="nearPlaneDistance" /> ist größer gleich <paramref name="farPlaneDistance" />.</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix based on a field of view, aspect ratio, and near and far view plane distances.">Erstellt eine perspektivische Projektionsmatrix basierend auf einem Sichtfeld, einem Seitenverhältnis und den Abständen für die Nah- und Fernsichtebene.</summary>
      <param name="fieldOfView" vsli:raw="The field of view in the y direction, in radians.">Das Blickfeld in Y-Richtung im Bogenmaß.</param>
      <param name="aspectRatio" vsli:raw="The aspect ratio, defined as view space width divided by height.">Das Seitenverhältnis, definiert als Breite des Bildraums geteilt durch die Höhe.</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">Der Abstand zur Nahsichtebene.</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">Der Abstand zur Fernsichtebene.</param>
      <returns vsli:raw="The perspective projection matrix.">Die perspektivische Projektionsmatrix.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;fieldOfView&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fieldOfView&quot; /&gt; is greater than or equal to &lt;see cref=&quot;F:System.Math.PI&quot; /&gt;.  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="fieldOfView" /> ist kleiner gleich 0 (null).

oder -
<paramref name="fieldOfView" /> ist größer gleich <see cref="F:System.Math.PI" />.

<paramref name="nearPlaneDistance" /> ist kleiner gleich 0 (null).

oder -
<paramref name="farPlaneDistance" /> ist kleiner gleich 0 (null).

oder -
<paramref name="nearPlaneDistance" /> ist größer gleich <paramref name="farPlaneDistance" />.</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized perspective projection matrix.">Erstellt eine angepasste perspektivische Projektionsmatrix.</summary>
      <param name="left" vsli:raw="The minimum x-value of the view volume at the near view plane.">Der kleinste X-Wert des Bildraums auf der Nahsichtebene.</param>
      <param name="right" vsli:raw="The maximum x-value of the view volume at the near view plane.">Der größte X-Wert des Bildraums auf der Nahsichtebene.</param>
      <param name="bottom" vsli:raw="The minimum y-value of the view volume at the near view plane.">Der kleinste Y-Wert des Bildraums auf der Nahsichtebene.</param>
      <param name="top" vsli:raw="The maximum y-value of the view volume at the near view plane.">Der größte Y-Wert des Bildraums auf der Nahsichtebene.</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">Der Abstand zur Nahsichtebene.</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">Der Abstand zur Fernsichtebene.</param>
      <returns vsli:raw="The perspective projection matrix.">Die perspektivische Projektionsmatrix.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" /> ist kleiner gleich 0 (null).

oder -
<paramref name="farPlaneDistance" /> ist kleiner gleich 0 (null).

oder -
<paramref name="nearPlaneDistance" /> ist größer gleich <paramref name="farPlaneDistance" />.</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateReflection(System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that reflects the coordinate system about a specified plane.">Erstellt eine Matrix, die das Koordinatensystem auf einer angegebenen Ebene wiedergibt.</summary>
      <param name="value" vsli:raw="The plane about which to create a reflection.">Die Ebene, zu der eine Reflektion erstellt werden soll.</param>
      <returns vsli:raw="A new matrix expressing the reflection.">Eine neue Matrix, die die Reflektion ausdrückt.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis.">Erstellt eine Matrix für das Drehen von Punkten um die X-Achse.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">Das Ausmaß der Drehung um die X-Achse im Bogenmaß.</param>
      <returns vsli:raw="The rotation matrix.">Die Rotationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis from a center point.">Erstellt eine Matrix für das Drehen von Punkten um die X-Achse von einem Mittelpunkt aus.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">Das Ausmaß der Drehung um die X-Achse im Bogenmaß.</param>
      <param name="centerPoint" vsli:raw="The center point.">Der Mittelpunkt.</param>
      <returns vsli:raw="The rotation matrix.">Die Rotationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Y axis.">Erstellt eine Matrix für das Drehen von Punkten um die Y-Achse.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">Das Ausmaß der Drehung um die Y-Achse im Bogenmaß.</param>
      <returns vsli:raw="The rotation matrix.">Die Rotationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="The amount, in radians, by which to rotate around the Y axis from a center point.">Das Ausmaß der Drehung um die Y-Achse im Bogenmaß, von einem Mittelpunkt aus.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">Das Ausmaß der Drehung um die Y-Achse im Bogenmaß.</param>
      <param name="centerPoint" vsli:raw="The center point.">Der Mittelpunkt.</param>
      <returns vsli:raw="The rotation matrix.">Die Rotationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis.">Erstellt eine Matrix für das Drehen von Punkten um die Z-Achse.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">Das Ausmaß der Drehung um die Z-Achse im Bogenmaß.</param>
      <returns vsli:raw="The rotation matrix.">Die Rotationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis from a center point.">Erstellt eine Matrix für das Drehen von Punkten um die Z-Achse von einem Mittelpunkt aus.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">Das Ausmaß der Drehung um die Z-Achse im Bogenmaß.</param>
      <param name="centerPoint" vsli:raw="The center point.">Der Mittelpunkt.</param>
      <returns vsli:raw="The rotation matrix.">Die Rotationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">Erstellt eine Skalierungsmatrix aus der angegebenen Vektorskala.</summary>
      <param name="scales" vsli:raw="The scale to use.">Die zu verwendende Skala.</param>
      <returns vsli:raw="The scaling matrix.">Die Skalierungsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix with a center point.">Erstellt eine Skalierungsmatrix mit einem Mittelpunkt.</summary>
      <param name="scales" vsli:raw="The vector that contains the amount to scale on each axis.">Der Vektor, der den Betrag der Skalierung für die einzelnen Achsen enthält.</param>
      <param name="centerPoint" vsli:raw="The center point.">Der Mittelpunkt.</param>
      <returns vsli:raw="The scaling matrix.">Die Skalierungsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single)">
      <summary vsli:raw="Creates a uniform scaling matrix that scale equally on each axis.">Erstellt eine einheitliche Skalierungsmatrix, die gleichmäßig auf allen Achsen skaliert.</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">Der einheitliche Skalierungsfaktor.</param>
      <returns vsli:raw="The scaling matrix.">Die Skalierungsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a uniform scaling matrix that scales equally on each axis with a center point.">Erstellt eine einheitliche Skalierungsmatrix mit einem Mittelpunkt, die gleichmäßig auf allen Achsen skaliert.</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">Der einheitliche Skalierungsfaktor.</param>
      <param name="centerPoint" vsli:raw="The center point.">Der Mittelpunkt.</param>
      <returns vsli:raw="The scaling matrix.">Die Skalierungsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X, Y, and Z components.">Erstellt eine Skalierungsmatrix aus den angegebenen X-, Y- und Z-Komponenten.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">Der Wert für die Skalierung auf der X-Achse.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Der Wert für die Skalierung auf der Y-Achse.</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">Der Wert für die Skalierung auf der Z-Achse.</param>
      <returns vsli:raw="The scaling matrix.">Die Skalierungsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">Erstellt eine Skalierung Matrix, die um einen angegebenen Mittelpunkt versetzt ist.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">Der Wert für die Skalierung auf der X-Achse.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Der Wert für die Skalierung auf der Y-Achse.</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">Der Wert für die Skalierung auf der Z-Achse.</param>
      <param name="centerPoint" vsli:raw="The center point.">Der Mittelpunkt.</param>
      <returns vsli:raw="The scaling matrix.">Die Skalierungsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateShadow(System.Numerics.Vector3,System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that flattens geometry into a specified plane as if casting a shadow from a specified light source.">Erstellt eine Matrix, die Geometrie auf einer angegebenen Ebene flach darstellt, als ob eine angegebene Lichtquelle einen Schatten wirft.</summary>
      <param name="lightDirection" vsli:raw="The direction from which the light that will cast the shadow is coming.">Die Richtung, aus der das Licht kommt, das den Schatten wirft.</param>
      <param name="plane" vsli:raw="The plane onto which the new matrix should flatten geometry so as to cast a shadow.">Die Ebene, auf der die neue Matrix die Geometrie flach darstellen soll, als ob ein Schatten geworfen wird.</param>
      <returns vsli:raw="A new matrix that can be used to flatten geometry onto the specified plane from the specified direction.">Eine neue Matrix, die zur flachen Darstellung von Geometrie auf der angegebenen Ebene aus der angegebenen Richtung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a translation matrix from the specified 3-dimensional vector.">Erstellt eine Translationsmatrix aus dem angegebenen dreidimensionalen Vektor.</summary>
      <param name="position" vsli:raw="The amount to translate in each axis.">Der Betrag der Verschiebung auf den einzelnen Achsen.</param>
      <returns vsli:raw="The translation matrix.">Die Translationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X, Y, and Z components.">Erstellt eine Translationsmatrix aus den angegebenen X-, Y- und Z-Komponenten.</summary>
      <param name="xPosition" vsli:raw="The amount to translate on the X axis.">Der Betrag der Verschiebung auf der X-Achse.</param>
      <param name="yPosition" vsli:raw="The amount to translate on the Y axis.">Der Betrag der Verschiebung auf der Y-Achse.</param>
      <param name="zPosition" vsli:raw="The amount to translate on the Z axis.">Der Betrag der Verschiebung auf der Z-Achse.</param>
      <returns vsli:raw="The translation matrix.">Die Translationsmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateWorld(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a world matrix with the specified parameters.">Erstellt eine Weltmatrix mit den angegebenen Parametern.</summary>
      <param name="position" vsli:raw="The position of the object.">Die Position des Objekts.</param>
      <param name="forward" vsli:raw="The forward direction of the object.">Die Vorwärtsrichtung des Objekts.</param>
      <param name="up" vsli:raw="The upward direction of the object. Its value is usually &lt;c&gt;[0, 1, 0]&lt;/c&gt;.">Die Aufwärtsrichtung des Objekts. Ihr Wert ist in der Regel <c>[0, 1, 0]</c>.</param>
      <returns vsli:raw="The world matrix.">Die Weltmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Decompose(System.Numerics.Matrix4x4,System.Numerics.Vector3@,System.Numerics.Quaternion@,System.Numerics.Vector3@)">
      <summary vsli:raw="Attempts to extract the scale, translation, and rotation components from the given scale, rotation, or translation matrix. The return value indicates whether the operation succeeded.">Versucht, die Skalierung, Verschiebung und Drehung aus der angegebenen Skalierungs-, Rotations- oder Translationsmatrix zu extrahieren. Der Rückgabewert gibt an, ob der Vorgang erfolgreich abgeschlossen wurde.</summary>
      <param name="matrix" vsli:raw="The source matrix.">Die Quellmatrix.</param>
      <param name="scale" vsli:raw="When this method returns, contains the scaling component of the transformation matrix if the operation succeeded.">Der Rückgabewert dieser Methode enthält die Skalierungskomponente der Transformationsmatrix, wenn der Vorgang erfolgreich abgeschlossen wird.</param>
      <param name="rotation" vsli:raw="When this method returns, contains the rotation component of the transformation matrix if the operation succeeded.">Der Rückgabewert dieser Methode enthält die Drehungskomponente der Transformationsmatrix, wenn der Vorgang erfolgreich abgeschlossen wird.</param>
      <param name="translation" vsli:raw="When the method returns, contains the translation component of the transformation matrix if the operation succeeded.">Der Rückgabewert dieser Methode enthält die Verschiebungskomponente der Transformationsmatrix, wenn der Vorgang erfolgreich abgeschlossen wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was decomposed successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="matrix" /> erfolgreich zerlegt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 4x4 matrix are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und eine andere 4 x 4-Matrix gleich sind.</summary>
      <param name="other" vsli:raw="The other matrix.">Die andere Matrix.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Matrizen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und ein angegebenes Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Instanz und <paramref name="obj" /> gleich sind, andernfalls <see langword="false" />. Wenn <paramref name="obj" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetDeterminant">
      <summary vsli:raw="Calculates the determinant of the current 4x4 matrix.">Berechnet die Determinante der aktuellen 4 x 4-Matrix.</summary>
      <returns vsli:raw="The determinant.">Die Determinante.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="The hash code.">Der Hashcode.</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">Ruft die multiplikative Identitätsmatrix ab.</summary>
      <returns vsli:raw="Gets the multiplicative identity matrix.">Ruft die multiplikative Identitätsmatrix ab.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Invert(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">Invertiert die angegebene Matrix. Der Rückgabewert gibt an, ob der Vorgang erfolgreich abgeschlossen wurde.</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">Die zu invertierende Matrix.</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">Der Rückgabewert dieser Methode enthält die invertierte Matrix, wenn der Vorgang erfolgreich abgeschlossen wurde.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">Wenn <see langword="true" /> erfolgreich konvertiert wurde: <paramref name="matrix" />, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">Gibt an, ob die aktuelle Matrix die Identitätsmatrix ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die aktuelle Matrix Identitätsmatrix ist, anderenfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Lerp(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">Führt eine lineare Interpolation zwischen einer Matrix und einer zweiten Matrix basierend auf einem Wert durch, der die Gewichtung er zweiten Matrix angibt.</summary>
      <param name="matrix1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="matrix2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">Die relative Gewichtung der <paramref name="matrix2" />.</param>
      <returns vsli:raw="The interpolated matrix.">Die interpolierte Matrix.</returns>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M11">
      <summary vsli:raw="The first element of the first row.">Das erste Element der ersten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M12">
      <summary vsli:raw="The second element of the first row.">Das zweite Element der ersten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M13">
      <summary vsli:raw="The third element of the first row.">Das dritte Element der ersten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M14">
      <summary vsli:raw="The fourth element of the first row.">Das vierte Element der ersten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M21">
      <summary vsli:raw="The first element of the second row.">Das erste Element der zweiten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M22">
      <summary vsli:raw="The second element of the second row.">Das zweite Element der zweiten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M23">
      <summary vsli:raw="The third element of the second row.">Das dritte Element der zweiten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M24">
      <summary vsli:raw="The fourth element of the second row.">Das vierte Element der zweiten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M31">
      <summary vsli:raw="The first element of the third row.">Das erste Element der dritten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M32">
      <summary vsli:raw="The second element of the third row.">Das zweite Element der dritten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M33">
      <summary vsli:raw="The third element of the third row.">Das dritte Element der dritten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M34">
      <summary vsli:raw="The fourth element of the third row.">Das vierte Element der dritten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M41">
      <summary vsli:raw="The first element of the fourth row.">Das erste Element der vierten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M42">
      <summary vsli:raw="The second element of the fourth row.">Das zweite Element der vierten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M43">
      <summary vsli:raw="The third element of the fourth row.">Das dritte Element der vierten Zeile.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M44">
      <summary vsli:raw="The fourth element of the fourth row.">Das vierte Element der vierten Zeile.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">Gibt die Matrix zurück, die sich aus der Multiplikation zwei Matrizen ergibt.</summary>
      <param name="value1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="value2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <returns vsli:raw="The product matrix.">Die Produktmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">Gibt die Matrix zurück, die sich aus der Skalierung aller Elemente einer angegebenen Matrix um einen skalaren Faktor ergibt.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">Die zu skalierende Matrix.</param>
      <param name="value2" vsli:raw="The scaling value to use.">Der zu verwendende Skalierungswert.</param>
      <returns vsli:raw="The scaled matrix.">Die skalierte Matrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Negate(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">Negiert die angegebene Matrix durch Multiplikation aller ihrer Werte mit -1.</summary>
      <param name="value" vsli:raw="The matrix to negate.">Die zu negierende Matrix.</param>
      <returns vsli:raw="The negated matrix.">Die negierte Matrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Addition(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">Addiert zu jedem Element in einer Matrix das entsprechende Element in einer zweiten Matrix.</summary>
      <param name="value1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="value2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <returns vsli:raw="The matrix that contains the summed values.">Die Matrix, die die addierten Werte enthält.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Equality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">Gibt einen Wert zurück, der angibt, ob die angegebenen Matrizen gleich sind.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">Die erste zu vergleichende Matrix.</param>
      <param name="value2" vsli:raw="The second matrix to care.">Die zweite zu vergleichende Matrix.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value1" /> und <paramref name="value2" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Inequality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">Gibt einen Wert zurück, der angibt, ob die angegebenen Matrizen ungleich sind.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">Die erste zu vergleichende Matrix.</param>
      <param name="value2" vsli:raw="The second matrix to compare.">Die zweite zu vergleichende Matrix.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value1" /> und <paramref name="value2" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">Gibt die Matrix zurück, die sich aus der Multiplikation zwei Matrizen ergibt.</summary>
      <param name="value1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="value2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <returns vsli:raw="The product matrix.">Die Produktmatrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">Gibt die Matrix zurück, die sich aus der Skalierung aller Elemente einer angegebenen Matrix um einen skalaren Faktor ergibt.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">Die zu skalierende Matrix.</param>
      <param name="value2" vsli:raw="The scaling value to use.">Der zu verwendende Skalierungswert.</param>
      <returns vsli:raw="The scaled matrix.">Die skalierte Matrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Subtraction(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">Subtrahiert jedes Element aus einer zweiten Matrix von seinem entsprechenden Element in einer ersten Matrix.</summary>
      <param name="value1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="value2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">Die Matrix, die die Werte enthält, die sich aus der Subtraktion jedes Elements in <paramref name="value2" /> von seinem entsprechenden Element in <paramref name="value1" /> ergeben.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_UnaryNegation(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">Negiert die angegebene Matrix durch Multiplikation aller ihrer Werte mit -1.</summary>
      <param name="value" vsli:raw="The matrix to negate.">Die zu negierende Matrix.</param>
      <returns vsli:raw="The negated matrix.">Die negierte Matrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Subtract(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">Subtrahiert jedes Element aus einer zweiten Matrix von seinem entsprechenden Element in einer ersten Matrix.</summary>
      <param name="value1" vsli:raw="The first matrix.">Die erste Matrix.</param>
      <param name="value2" vsli:raw="The second matrix.">Die zweite Matrix.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">Die Matrix, die die Werte enthält, die sich aus der Subtraktion jedes Elements in <paramref name="value2" /> von seinem entsprechenden Element in <paramref name="value1" /> ergeben.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">Gibt eine Zeichenfolge zurück, die diese Matrix darstellt.</summary>
      <returns vsli:raw="The string representation of this matrix.">Die Zeichenfolgendarstellung dieser Matrix.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transform(System.Numerics.Matrix4x4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms the specified matrix by applying the specified Quaternion rotation.">Transformiert die angegebene Matrix durch Anwenden der angegebenen Quaternionrotation.</summary>
      <param name="value" vsli:raw="The matrix to transform.">Die zu transformierende Matrix.</param>
      <param name="rotation" vsli:raw="The rotation t apply.">Die anzuwendende Drehung.</param>
      <returns vsli:raw="The transformed matrix.">Die transformierte Matrix.</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">Ruft die Verschiebekomponente dieser Matrix ab oder legt sie fest.</summary>
      <returns vsli:raw="The translation component of the current instance.">Die Verschiebekomponente der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transpose(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transposes the rows and columns of a matrix.">Vertauscht die Zeilen und Spalten einer Matrix.</summary>
      <param name="matrix" vsli:raw="The matrix to transpose.">Die zu transponierende Matrix.</param>
      <returns vsli:raw="The transposed matrix.">Die transponierte Matrix.</returns>
    </member>
    <member name="T:System.Numerics.Plane">
      <summary vsli:raw="Represents a plane in three-dimensional space.">Stellt eine Ebene im dreidimensionalen Raum dar.</summary>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified normal and the distance along the normal from the origin.">Erstellt ein <see cref="T:System.Numerics.Plane" />-Objekt aus einer angegebenen Normalen und dem Abstand entlang der Normalen vom Ursprung.</summary>
      <param name="normal" vsli:raw="The plane's normal vector.">Der Normalenvektor der Ebene.</param>
      <param name="d" vsli:raw="The plane's distance from the origin along its normal vector.">Der Abstand der Ebene vom Ursprung entlang des Normalenvektors.</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector4)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified four-dimensional vector.">Erstellt ein <see cref="T:System.Numerics.Plane" />-Objekt aus einem angegebenen vierdimensionalen Vektor.</summary>
      <param name="value" vsli:raw="A vector whose first three elements describe the normal vector, and whose &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; defines the distance along that normal from the origin.">Ein Vektor, dessen erste drei Elemente den normalen Vektor beschreiben und dessen <see cref="F:System.Numerics.Vector4.W" /> die Entfernung entlang der Normalen vom Ursprung definiert.</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from the X, Y, and Z components of its normal, and its distance from the origin on that normal.">Erstellt ein <see cref="T:System.Numerics.Plane" />-Objekt aus den X-, Y- und Z-Komponenten der Normalen und der Entfernung dieser Normalen vom Ursprung.</summary>
      <param name="x" vsli:raw="The X component of the normal.">Die X-Komponente der Normalen.</param>
      <param name="y" vsli:raw="The Y component of the normal.">Die Y-Komponente der Normalen.</param>
      <param name="z" vsli:raw="The Z component of the normal.">Die Z-Komponente der Normalen.</param>
      <param name="d" vsli:raw="The distance of the plane along its normal from the origin.">Der Abstand der Ebene entlang der Normalen vom Ursprung.</param>
    </member>
    <member name="M:System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object that contains three specified points.">Erstellt ein <see cref="T:System.Numerics.Plane" />-Objekt, das drei angegebene Punkte enthält.</summary>
      <param name="point1" vsli:raw="The first point defining the plane.">Der erste Punkt, der die Ebene definiert.</param>
      <param name="point2" vsli:raw="The second point defining the plane.">Der zweite Punkt, der die Ebene definiert.</param>
      <param name="point3" vsli:raw="The third point defining the plane.">Der dritte Punkt, der die Ebene definiert.</param>
      <returns vsli:raw="The plane containing the three points.">Die Ebene mit den drei Punkten.</returns>
    </member>
    <member name="F:System.Numerics.Plane.D">
      <summary vsli:raw="The distance of the plane along its normal from the origin.">Der Abstand der Ebene entlang der Normalen vom Ursprung.</summary>
    </member>
    <member name="M:System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)">
      <summary vsli:raw="Calculates the dot product of a plane and a 4-dimensional vector.">Berechnet das Skalarprodukt aus einer Ebene und einem vierdimensionalen Vektor.</summary>
      <param name="plane" vsli:raw="The plane.">Die Ebene.</param>
      <param name="value" vsli:raw="The four-dimensional vector.">Der vierdimensionale Vektor.</param>
      <returns vsli:raw="The dot product.">Das Skalarprodukt.</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the normal vector of this plane plus the distance (&lt;see cref=&quot;F:System.Numerics.Plane.D&quot; /&gt;) value of the plane.">Gibt das Skalarprodukt aus einem angegebenen dreidimensionalen Vektor und dem Normalenvektor dieser Ebene plus den Abstandswert (<see cref="F:System.Numerics.Plane.D" />) der Ebene zurück.</summary>
      <param name="plane" vsli:raw="The plane.">Die Ebene.</param>
      <param name="value" vsli:raw="The 3-dimensional vector.">Der dreidimensionale Vektor.</param>
      <returns vsli:raw="The dot product.">Das Skalarprodukt.</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the &lt;see cref=&quot;F:System.Numerics.Plane.Normal&quot; /&gt; vector of this plane.">Gibt das Skalarprodukt aus einem angegebenen dreidimensionalen Vektor und dem <see cref="F:System.Numerics.Plane.Normal" />-Vektor dieser Ebene zurück.</summary>
      <param name="plane" vsli:raw="The plane.">Die Ebene.</param>
      <param name="value" vsli:raw="The three-dimensional vector.">Der dreidimensionale Vektor.</param>
      <returns vsli:raw="The dot product.">Das Skalarprodukt.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another plane object are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und ein anderes Ebenenobjekt gleich sind.</summary>
      <param name="other" vsli:raw="The other plane.">Die andere Ebene.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two planes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Ebenen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und ein angegebenes Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Instanz und <paramref name="obj" /> gleich sind, andernfalls <see langword="false" />. Wenn <paramref name="obj" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Numerics.Plane.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="The hash code.">Der Hashcode.</returns>
    </member>
    <member name="F:System.Numerics.Plane.Normal">
      <summary vsli:raw="The normal vector of the plane.">Der Normalenvektor der Ebene.</summary>
    </member>
    <member name="M:System.Numerics.Plane.Normalize(System.Numerics.Plane)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object whose normal vector is the source plane's normal vector normalized.">Erstellt ein neues <see cref="T:System.Numerics.Plane" />-Objekt, dessen Normalenvektor dem normalisierten Normalenvektor der Quellebene entspricht.</summary>
      <param name="value" vsli:raw="The source plane.">Die Quellebene.</param>
      <returns vsli:raw="The normalized plane.">Die normalisierte Ebene.</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are equal.">Gibt einen Wert zurück, der angibt, ob zwei Ebenen gleich sind.</summary>
      <param name="value1" vsli:raw="The first plane to compare.">Die erste zu vergleichende Ebene.</param>
      <param name="value2" vsli:raw="The second plane to compare.">Die zweite zu vergleichende Ebene.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value1" /> und <paramref name="value2" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are not equal.">Gibt einen Wert zurück, der angibt, ob zwei Ebenen ungleich sind.</summary>
      <param name="value1" vsli:raw="The first plane to compare.">Die erste zu vergleichende Ebene.</param>
      <param name="value2" vsli:raw="The second plane to compare.">Die zweite zu vergleichende Ebene.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value1" /> und <paramref name="value2" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Plane.ToString">
      <summary vsli:raw="Returns the string representation of this plane object.">Gibt die Zeichenfolgendarstellung dieses Ebenenobjekts zurück.</summary>
      <returns vsli:raw="A string that represents this &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object.">Eine Zeichenfolge, die dieses <see cref="T:System.Numerics.Plane" />-Objekt darstellt.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a normalized plane by a 4x4 matrix.">Transformiert eine normalisierte Ebene anhand einer 4x4-Matrix.</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">Die normalisierte Ebene, die transformiert werden soll.</param>
      <param name="matrix" vsli:raw="The transformation matrix to apply to &lt;paramref name=&quot;plane&quot; /&gt;.">Die Transformationsmatrix, die auf <paramref name="plane" /> angewendet werden soll.</param>
      <returns vsli:raw="The transformed plane.">Die transformierte Ebene.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a normalized plane by a Quaternion rotation.">Transformiert eine normalisierte Ebene anhand einer Quaterniondrehung.</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">Die normalisierte Ebene, die transformiert werden soll.</param>
      <param name="rotation" vsli:raw="The Quaternion rotation to apply to the plane.">Die Quaterniondrehung, die der Ebene zugewiesen werden soll.</param>
      <returns vsli:raw="A new plane that results from applying the Quaternion rotation.">Eine neue Ebene, die sich aus dem Anwenden der Quaterniondrehung ergibt.</returns>
    </member>
    <member name="T:System.Numerics.Quaternion">
      <summary vsli:raw="Represents a vector that is used to encode three-dimensional physical rotations.">Stellt einen Vektor dar, der zum Codieren von dreidimensionalen physischen Drehungen verwendet wird.</summary>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from the specified vector and rotation parts.">Erstellt eine Quaternion aus dem angegebenen Vektorteil und den Drehungsteilen.</summary>
      <param name="vectorPart" vsli:raw="The vector part of the quaternion.">Der Vektorteil der Quaternion.</param>
      <param name="scalarPart" vsli:raw="The rotation part of the quaternion.">Der Drehungsteil der Quaternion.</param>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Constructs a quaternion from the specified components.">Erzeugt eine Quaternion aus den angegebenen Komponenten.</summary>
      <param name="x" vsli:raw="The value to assign to the X component of the quaternion.">Der Wert, der der X-Komponente der Quaternion zugewiesen werden soll.</param>
      <param name="y" vsli:raw="The value to assign to the Y component of the quaternion.">Der Wert, der der Y-Komponente der Quaternion zugewiesen werden soll.</param>
      <param name="z" vsli:raw="The value to assign to the Z component of the quaternion.">Der Wert, der der Z-Komponente der Quaternion zugewiesen werden soll.</param>
      <param name="w" vsli:raw="The value to assign to the W component of the quaternion.">Der Wert, der der W-Komponente der Quaternion zugewiesen werden soll.</param>
    </member>
    <member name="M:System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">Addiert zu jedem Element in einer Quaternion das entsprechende Element in einer zweiten Quaternion.</summary>
      <param name="value1" vsli:raw="The first quaternion.">Die erste Quaternion.</param>
      <param name="value2" vsli:raw="The second quaternion.">Die zweite Quaternion.</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">Die Quaternion, die die addierten Werte von <paramref name="value1" /> und <paramref name="value2" /> enthält.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Concatenates two quaternions.">Verkettet zwei Quaternionen.</summary>
      <param name="value1" vsli:raw="The first quaternion rotation in the series.">Die erste Quaterniondrehung in der Reihe.</param>
      <param name="value2" vsli:raw="The second quaternion rotation in the series.">Die zweite Quaterniondrehung in der Reihe.</param>
      <returns vsli:raw="A new quaternion representing the concatenation of the &lt;paramref name=&quot;value1&quot; /&gt; rotation followed by the &lt;paramref name=&quot;value2&quot; /&gt; rotation.">Eine neue Quaternion, die die Verkettung der <paramref name="value1" />-Drehung, gefolgt von der <paramref name="value2" />-Drehung, darstellt.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the conjugate of a specified quaternion.">Gibt das Konjugat einer angegebenen Quaternion zurück.</summary>
      <param name="value" vsli:raw="The quaternion.">Die Quaternion.</param>
      <returns vsli:raw="A new quaternion that is the conjugate of &lt;see langword=&quot;value&quot; /&gt;.">Eine neue Quaternion, die das Konjugat von <see langword="value" /> ist.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from a unit vector and an angle to rotate around the vector.">Erstellt eine Quaternion aus einem Einheitsvektor und einen Winkel für die Drehung um den Vektor.</summary>
      <param name="axis" vsli:raw="The unit vector to rotate around.">Der Einheitsvektor, um den die Drehung erfolgt.</param>
      <param name="angle" vsli:raw="The angle, in radians, to rotate around the vector.">Der Winkel im Bogenmaß für die Drehung um den Vektor.</param>
      <returns vsli:raw="The newly created quaternion.">Die neu erstellte Quaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Creates a quaternion from the specified rotation matrix.">Erstellt eine Quaternion aus der angegebenen Rotationsmatrix.</summary>
      <param name="matrix" vsli:raw="The rotation matrix.">Die Rotationsmatrix.</param>
      <returns vsli:raw="The newly created quaternion.">Die neu erstellte Quaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a new quaternion from the given yaw, pitch, and roll.">Erstellt eine neue Quaternion aus den angegebenen Werten für Gieren, Nicken und Rollen.</summary>
      <param name="yaw" vsli:raw="The yaw angle, in radians, around the Y axis.">Der Gierwinkel im Bogenmaß um die Y-Achse.</param>
      <param name="pitch" vsli:raw="The pitch angle, in radians, around the X axis.">Der Nickwinkel im Bogenmaß um die X-Achse.</param>
      <param name="roll" vsli:raw="The roll angle, in radians, around the Z axis.">Der Rollwinkel im Bogenmaß um die Z-Achse.</param>
      <returns vsli:raw="The resulting quaternion.">Die resultierende Quaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">Dividiert eine Quaternion durch eine zweite Quaternion.</summary>
      <param name="value1" vsli:raw="The dividend.">Der Dividend.</param>
      <param name="value2" vsli:raw="The divisor.">Der Divisor.</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">Die Quaternion, die aus der Division von <paramref name="value1" /> durch <paramref name="value2" /> resultiert.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Calculates the dot product of two quaternions.">Berechnet das Skalarprodukt von zwei Quaternionen.</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">Die erste Quaternion.</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">Die zweite Quaternion.</param>
      <returns vsli:raw="The dot product.">Das Skalarprodukt.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another quaternion are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und eine andere Quaternion gleich sind.</summary>
      <param name="other" vsli:raw="The other quaternion.">Die andere Quaternion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Quaternionen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und ein angegebenes Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Instanz und <paramref name="obj" /> gleich sind, andernfalls <see langword="false" />. Wenn <paramref name="obj" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="The hash code.">Der Hashcode.</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.Identity">
      <summary vsli:raw="Gets a quaternion that represents no rotation.">Ruft eine Quaternion ab, die keine Drehung darstellt.</summary>
      <returns vsli:raw="A quaternion whose values are &lt;c&gt;(0, 0, 0, 1)&lt;/c&gt;.">Eine Quaternion, deren Werte <c>(0, 0, 0, 1)</c>sind.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the inverse of a quaternion.">Gibt die Inverse einer Quaternion zurück.</summary>
      <param name="value" vsli:raw="The quaternion.">Die Quaternion.</param>
      <returns vsli:raw="The inverted quaternion.">Die inverse Quaternion.</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether the current instance is the identity quaternion.">Ruft einen Wert ab, der angibt, ob die aktuelle Instanz die Identitätsquaternion ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance is the identity quaternion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die aktuelle Instanz die Identitätsquaternion ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Length">
      <summary vsli:raw="Calculates the length of the quaternion.">Berechnet die Länge der Quaternion.</summary>
      <returns vsli:raw="The computed length of the quaternion.">Die berechnete Länge der Quaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.LengthSquared">
      <summary vsli:raw="Calculates the squared length of the quaternion.">Berechnet das Quadrat der Länge der Quaternion.</summary>
      <returns vsli:raw="The length squared of the quaternion.">Das Quadrat der Länge der Quaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two quaternions based on a value that specifies the weighting of the second quaternion.">Führt eine lineare Interpolation zwischen zwei Quaternionen basierend auf einem Wert durch, der die Gewichtung der zweiten Quaternion angibt.</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">Die erste Quaternion.</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">Die zweite Quaternion.</param>
      <param name="amount" vsli:raw="The relative weight of &lt;paramref name=&quot;quaternion2&quot; /&gt; in the interpolation.">Die relative Gewichtung von <paramref name="quaternion2" /> in der Interpolation.</param>
      <returns vsli:raw="The interpolated quaternion.">Die interpolierte Quaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">Gibt die Quaternion zurück, die aus der Multiplikation zweier Quaternionen resultiert.</summary>
      <param name="value1" vsli:raw="The first quaternion.">Die erste Quaternion.</param>
      <param name="value2" vsli:raw="The second quaternion.">Die zweite Quaternion.</param>
      <returns vsli:raw="The product quaternion.">Die Produktquaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">Gibt die Quaternion zurück, die sich aus der Skalierung aller Komponenten einer angegebenen Quaternion um einen skalaren Faktor ergibt.</summary>
      <param name="value1" vsli:raw="The source quaternion.">Die Quellquaternion.</param>
      <param name="value2" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The scaled quaternion.">Die skalierte Quaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">Kehrt das Vorzeichen jeder Komponente der Quaternion um.</summary>
      <param name="value" vsli:raw="The quaternion to negate.">Die zu negierende Quaternion.</param>
      <returns vsli:raw="The negated quaternion.">Die negierte Quaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)">
      <summary vsli:raw="Divides each component of a specified &lt;see cref=&quot;T:System.Numerics.Quaternion&quot; /&gt; by its length.">Teilt jede Komponente einer angegebenen <see cref="T:System.Numerics.Quaternion" /> durch ihre Länge.</summary>
      <param name="value" vsli:raw="The quaternion to normalize.">Die zu normalisierende Quaternion.</param>
      <returns vsli:raw="The normalized quaternion.">Die normalisierte Quaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">Addiert zu jedem Element in einer Quaternion das entsprechende Element in einer zweiten Quaternion.</summary>
      <param name="value1" vsli:raw="The first quaternion.">Die erste Quaternion.</param>
      <param name="value2" vsli:raw="The second quaternion.">Die zweite Quaternion.</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">Die Quaternion, die die addierten Werte von <paramref name="value1" /> und <paramref name="value2" /> enthält.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">Dividiert eine Quaternion durch eine zweite Quaternion.</summary>
      <param name="value1" vsli:raw="The dividend.">Der Dividend.</param>
      <param name="value2" vsli:raw="The divisor.">Der Divisor.</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">Die Quaternion, die aus der Division von <paramref name="value1" /> durch <paramref name="value2" /> resultiert.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are equal.">Gibt einen Wert zurück, der angibt, ob zwei Quaternionen gleich sind.</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">Die erste zu vergleichende Quaternion.</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">Die zweite zu vergleichende Quaternion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Quaternionen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are not equal.">Gibt einen Wert zurück, der angibt, ob zwei Quaternionen ungleich sind.</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">Die erste zu vergleichende Quaternion.</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">Die zweite zu vergleichende Quaternion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value1" /> und <paramref name="value2" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">Gibt die Quaternion zurück, die aus der Multiplikation zweier Quaternionen resultiert.</summary>
      <param name="value1" vsli:raw="The first quaternion.">Die erste Quaternion.</param>
      <param name="value2" vsli:raw="The second quaternion.">Die zweite Quaternion.</param>
      <returns vsli:raw="The product quaternion.">Die Produktquaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">Gibt die Quaternion zurück, die sich aus der Skalierung aller Komponenten einer angegebenen Quaternion um einen skalaren Faktor ergibt.</summary>
      <param name="value1" vsli:raw="The source quaternion.">Die Quellquaternion.</param>
      <param name="value2" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The scaled quaternion.">Die skalierte Quaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">Subtrahiert jedes Element aus einer zweiten Quaternion von seinem entsprechenden Element in einer ersten Quaternion.</summary>
      <param name="value1" vsli:raw="The first quaternion.">Die erste Quaternion.</param>
      <param name="value2" vsli:raw="The second quaternion.">Die zweite Quaternion.</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">Die Quaternion, die die Werte enthält, die sich aus der Subtraktion jedes Elements in <paramref name="value2" /> von seinem entsprechenden Element in <paramref name="value1" /> ergeben.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">Kehrt das Vorzeichen jeder Komponente der Quaternion um.</summary>
      <param name="value" vsli:raw="The quaternion to negate.">Die zu negierende Quaternion.</param>
      <returns vsli:raw="The negated quaternion.">Die negierte Quaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Interpolates between two quaternions, using spherical linear interpolation.">Interpoliert zwischen zwei Quaternionen mit der Methode der sphärischen linearen Interpolation.</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">Die erste Quaternion.</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">Die zweite Quaternion.</param>
      <param name="amount" vsli:raw="The relative weight of the second quaternion in the interpolation.">Die relative Gewichtung der zweiten Quaternion in der Interpolation.</param>
      <returns vsli:raw="The interpolated quaternion.">Die interpolierte Quaternion.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">Subtrahiert jedes Element aus einer zweiten Quaternion von seinem entsprechenden Element in einer ersten Quaternion.</summary>
      <param name="value1" vsli:raw="The first quaternion.">Die erste Quaternion.</param>
      <param name="value2" vsli:raw="The second quaternion.">Die zweite Quaternion.</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">Die Quaternion, die die Werte enthält, die sich aus der Subtraktion jedes Elements in <paramref name="value2" /> von seinem entsprechenden Element in <paramref name="value1" /> ergeben.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.ToString">
      <summary vsli:raw="Returns a string that represents this quaternion.">Gibt eine Zeichenfolge zurück, die diese Quaternion darstellt.</summary>
      <returns vsli:raw="The string representation of this quaternion.">Die Zeichenfolgendarstellung dieser Quaternion.</returns>
    </member>
    <member name="F:System.Numerics.Quaternion.W">
      <summary vsli:raw="The rotation component of the quaternion.">Die Rotationskomponente der Quaternion.</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.X">
      <summary vsli:raw="The X value of the vector component of the quaternion.">Der X-Wert der Vektorkomponente der Quaternion.</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Y">
      <summary vsli:raw="The Y value of the vector component of the quaternion.">Der Y-Wert der Vektorkomponente der Quaternion.</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Z">
      <summary vsli:raw="The Z value of the vector component of the quaternion.">Der Z-Wert der Vektorkomponente der Quaternion.</summary>
    </member>
    <member name="T:System.Numerics.Vector">
      <summary vsli:raw="Provides a collection of static methods for creating, manipulating, and otherwise operating on generic vectors.">Stellt eine Auflistung statischer Hilfsmethoden zum Erstellen, Bearbeiten, Kombinieren und Konvertieren generischer Vektoren bereit.</summary>
    </member>
    <member name="M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the absolute values of the given vector's elements.">Gibt einen neuen Vektor zurück, dessen Elemente die absoluten Werte der Elemente des angegebenen Vektors sind.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The absolute value vector.">Der Absolutwertvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the sum of each pair of elements from two given vectors.">Gibt einen neuen Vektor zurück, dessen Werte der Summe der einzelnen Elementpaare aus zwei angegebenen Vektoren entsprechen.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The summed vector.">Der Summenvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise And Not operation on each pair of corresponding elements in two vectors.">Gibt einen neuen Vektor zurück, indem für jedes Paar entsprechender Elemente in zwei Vektoren eine bitweise "Und nicht"-Operation durchgeführt wird.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The resulting vector.">Der Ergebnisvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned bytes.">Interpretiert die Bits eines angegebenen Vektors in die eines Vektors von Bytes ohne Vorzeichen um.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a double-precision floating-point vector.">Interpretiert die Bits eines angegebenen Vektors in die eines Vektors mit Gleitkomma und doppelter Genauigkeit um.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of 16-bit integers.">Interpretiert die Bits eines angegebenen Vektors in die eines Vektors von ganzen 16-Bit-Zahlen um.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of integers.">Interpretiert die Bits eines angegebenen Vektors in die eines Vektors von ganzen Zahlen um.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of long integers.">Interpretiert die Bits eines angegebenen Vektors in die eines Vektors von langen ganzen Zahlen um.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of signed bytes.">Interpretiert die Bits eines angegebenen Vektors in die eines Vektors von Bytes mit Vorzeichen um.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a single-precision floating-point vector.">Interpretiert die Bits eines angegebenen Vektors in die eines Vektors mit Gleitkomma und einfacher Genauigkeit um.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned 16-bit integers.">Interpretiert die Bits eines angegebenen Vektors in die eines Vektors von ganzen 16-Bit-Zahlen ohne Vorzeichen um.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned integers.">Interpretiert die Bits eines angegebenen Vektors in die eines Vektors von ganzen Zahlen ohne Vorzeichen um.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned long integers.">Interpretiert die Bits eines angegebenen Vektors in die eines Vektors von langen ganzen Zahlen ohne Vorzeichen um.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each pair of elements in two vectors.">Gibt einen neuen Vektor zurück, indem für jedes Elementpaar in zwei Vektoren eine bitweise <see langword="And" />-Operation durchgeführt wird.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The resulting vector.">Der Ergebnisvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each pair of elements in two vectors.">Gibt einen neuen Vektor zurück, indem für jedes Elementpaar in zwei Vektoren eine bitweise <see langword="Or" />-Operation durchgeführt wird.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The resulting vector.">Der Ergebnisvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Creates a new single-precision vector with elements selected between two specified single-precision source vectors based on an integral mask vector.">Erstellt einen neuen Vektor mit einfacher Genauigkeit mit Elementen, die zwischen zwei angegebenen Quellvektoren mit einfacher Genauigkeit basierend auf einem integralen Maskierungsvektor ausgewählt wurden.</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">Der zum Steuern der Auswahl verwendete integrale Maskierungsvektor.</param>
      <param name="left" vsli:raw="The first source vector.">Der erste Quellvektor.</param>
      <param name="right" vsli:raw="The second source vector.">Der zweite Quellvektor.</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">Der neue Vektor mit Elementen, die basierend auf der Maske ausgewählt wurden.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Creates a new double-precision vector with elements selected between two specified double-precision source vectors based on an integral mask vector.">Erstellt einen neuen Vektor mit doppelter Genauigkeit mit Elementen, die zwischen zwei angegebenen Quellvektoren mit doppelter Genauigkeit basierend auf einem integralen Maskierungsvektor ausgewählt wurden.</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">Der zum Steuern der Auswahl verwendete integrale Maskierungsvektor.</param>
      <param name="left" vsli:raw="The first source vector.">Der erste Quellvektor.</param>
      <param name="right" vsli:raw="The second source vector.">Der zweite Quellvektor.</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">Der neue Vektor mit Elementen, die basierend auf der Maske ausgewählt wurden.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Creates a new vector of a specified type with elements selected between two specified source vectors of the same type based on an integral mask vector.">Erstellt einen neuen Vektor eines angegebenen Typs mit Elementen, die zwischen zwei angegebenen Quellvektoren desselben Typs basierend auf einem integralen Maskierungsvektor ausgewählt wurden.</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">Der zum Steuern der Auswahl verwendete integrale Maskierungsvektor.</param>
      <param name="left" vsli:raw="The first source vector.">Der erste Quellvektor.</param>
      <param name="right" vsli:raw="The second source vector.">Der zweite Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The new vector with elements selected based on the mask.">Der neue Vektor mit Elementen, die basierend auf der Maske ausgewählt wurden.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">Konvertiert einen <c>Vector&lt;Int64&gt;</c> in einen <c>Vector&lt;Double&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <returns vsli:raw="The converted vector.">Der konvertierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">Konvertiert einen <c>Vector&lt;UInt64&gt;</c> in einen <c>Vector&lt;Double&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <returns vsli:raw="The converted vector.">Der konvertierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">Konvertiert einen <c>Vector&lt;Single&gt;</c> in einen <c>Vector&lt;Int32&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <returns vsli:raw="The converted vector.">Der konvertierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt;.">Konvertiert einen <c>Vector&lt;Double&gt;</c> in einen <c>Vector&lt;Int64&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <returns vsli:raw="The converted vector.">Der konvertierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">Konvertiert einen <c>Vector&lt;Int32&gt;</c> in einen <c>Vector&lt;Single&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <returns vsli:raw="The converted vector.">Der konvertierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">Konvertiert einen <c>Vector&lt;UInt32&gt;</c> in einen <c>Vector&lt;Single&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <returns vsli:raw="The converted vector.">Der konvertierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">Konvertiert einen <c>Vector&lt;Single&gt;</c> in einen <c>Vector&lt;UInt32&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <returns vsli:raw="The converted vector.">Der konvertierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt;.">Konvertiert einen <c>Vector&lt;Double&gt;</c> in einen <c>Vector&lt;UInt64&gt;</c>.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <returns vsli:raw="The converted vector.">Der konvertierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the result of dividing the first vector's elements by the corresponding elements in the second vector.">Gibt einen neuen Vektor zurück, dessen Werte sich aus der Division der Elemente des ersten Vektors durch die entsprechenden Elemente im zweiten Vektor ergeben.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The divided vector.">Der geteilte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns the dot product of two vectors.">Gibt das Skalarprodukt zweier Vektoren zurück.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The dot product.">Das Skalarprodukt.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified double-precision vectors are equal.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in zwei angegebenen Vektoren mit doppelter Genauigkeit gleich sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified integral vectors are equal.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in zwei angegebenen integralen Vektoren gleich sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in two specified long integer vectors are equal.">Gibt einen neuen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in zwei angegebenen langen ganzzahligen Vektoren gleich sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting long integer vector.">Der resultierende lange ganzzahlige Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified single-precision vectors are equal.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in zwei angegebenen Vektoren mit einfacher Genauigkeit gleich sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in two specified vectors of the same type are equal.">Gibt einen neuen Vektor eines angegebenen Typs zurück, dessen Elemente darauf hinweisen, ob die Elemente in zwei angegebenen Vektoren desselben Typs gleich sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The resulting vector.">Der Ergebnisvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in the given vectors is equal.">Gibt einen Wert zurück, der angibt, ob jedes Elementpaar in den angegebenen Vektoren gleich ist.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn alle Elemente in <paramref name="left" /> und <paramref name="right" /> sind gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the given vectors is equal.">Gibt einen Wert zurück, der angibt, ob jedes einzelne Elementpaar in den angegebenen Vektoren gleich ist.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pair in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; is equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein beliebiges Elementpaar in <paramref name="left" /> und <paramref name="right" /> gleich ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are greater than their corresponding elements in a second double-precision floating-point vector.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem Vektor mit Gleitkomma und doppelter Genauigkeit größer sind als die entsprechenden Elemente in einem zweiten Vektor mit Gleitkomma und doppelter Genauigkeit.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than their corresponding elements in a second integral vector.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem integralen Vektor größer sind als die entsprechenden Elemente in einem zweiten integralen Vektor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than their corresponding elements in a second long integer vector.">Gibt einen neuen langen ganzzahligen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem langen ganzzahligen Vektor größer sind als die entsprechenden Elemente in einem zweiten langen ganzzahligen Vektor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting long integer vector.">Der resultierende lange ganzzahlige Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are greater than their corresponding elements in a second single-precision floating-point vector.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem Vektor mit Gleitkomma und einfacher Genauigkeit größer sind als die entsprechenden Elemente in einem zweiten Vektor mit Gleitkomma und einfacher Genauigkeit.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than their corresponding elements in the second vector of the same time.">Gibt einen neuen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem Vektor eines angegebenen Typs größer sind als die entsprechenden Elemente im zweiten Vektor desselben Typs.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The resulting vector.">Der Ergebnisvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than the corresponding elements in the second vector.">Gibt einen Wert zurück, der angibt, ob alle Elemente im ersten Vektor größer sind als die entsprechenden Elemente im zweiten Vektor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn alle Elemente in <paramref name="left" /> größer sind als die entsprechenden Elemente in <paramref name="right" />; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than the corresponding element in the second vector.">Gibt einen Wert zurück, der angibt, ob ein beliebiges Element im ersten Vektor größer ist als das entsprechende Element im zweiten Vektor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Element in <paramref name="left" /> größer ist als das entsprechende Element in <paramref name="right" />; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the second double-precision floating-point vector.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem Vektor größer oder gleich den entsprechenden Elementen im zweiten Vektor mit Gleitkomma und doppelter Genauigkeit sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than or equal to their corresponding elements in the second integral vector.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem integralen Vektor größer oder gleich den entsprechenden Elementen im zweiten integralen Vektor sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than or equal to their corresponding elements in the second long integer vector.">Gibt einen neuen langen ganzzahligen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem langen ganzzahligen Vektor größer oder gleich den entsprechenden Elementen in einem zweiten langen ganzzahligen Vektor sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting long integer vector.">Der resultierende lange ganzzahlige Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the single-precision floating-point second vector.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem Vektor größer oder gleich den entsprechenden Elementen im zweiten Vektor mit Gleitkomma und einfacher Genauigkeit sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than or equal to their corresponding elements in the second vector of the same type.">Gibt einen neuen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem Vektor eines angegebenen Typs größer oder gleich den entsprechenden Elementen im zweiten Vektor desselben Typs sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The resulting vector.">Der Ergebnisvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than or equal to all the corresponding elements in the second vector.">Gibt einen Wert zurück, der angibt, ob alle Elemente im ersten Vektor größer oder gleich allen entsprechenden Elementen im zweiten Vektor sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn alle Elemente in <paramref name="left" /> größer oder gleich den entsprechenden Elementen in <paramref name="right" /> sind; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than or equal to the corresponding element in the second vector.">Gibt einen Wert zurück, der angibt, ob ein beliebiges Element im ersten Vektor größer oder gleich dem entsprechenden Element im zweiten Vektor ist.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Element in <paramref name="left" /> größer oder gleich dem entsprechenden Element in <paramref name="right" /> ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.Vector.IsHardwareAccelerated">
      <summary vsli:raw="Gets a value that indicates whether vector operations are subject to hardware acceleration through JIT intrinsic support.">Ruft einen Wert ab, der angibt, ob die Vektoroperationen einer Hardwarebeschleunigung durch systeminterne JIT-Unterstützung unterliegen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if vector operations are subject to hardware acceleration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Vektoroperationen der Hardwarebeschleunigung unterliegen; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than their corresponding elements in a second double-precision floating-point vector.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem Vektor mit Gleitkomma und doppelter Genauigkeit kleiner sind als die entsprechenden Elemente in einem zweiten Vektor mit Gleitkomma und doppelter Genauigkeit.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than their corresponding elements in a second integral vector.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem integralen Vektor kleiner sind als die entsprechenden Elemente in einem zweiten integralen Vektor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less than their corresponding elements in a second long integer vector.">Gibt einen neuen langen ganzzahligen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem langen ganzzahligen Vektor kleiner sind als die entsprechenden Elemente in einem zweiten langen ganzzahligen Vektor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting long integer vector.">Der resultierende lange ganzzahlige Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision vector are less than their corresponding elements in a second single-precision vector.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem Vektor mit einfacher Genauigkeit kleiner sind als die entsprechenden Elemente in einem zweiten Vektor mit einfacher Genauigkeit.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in one vector are less than their corresponding elements in the second vector.">Gibt einen neuen Vektor eines angegebenen Typs zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem Vektor kleiner sind als die entsprechenden Elemente im zweiten Vektor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The resulting vector.">Der Ergebnisvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all of the elements in the first vector are less than their corresponding elements in the second vector.">Gibt einen Wert zurück, der angibt, ob alle Elemente im ersten Vektor kleiner sind als die entsprechenden Elemente im zweiten Vektor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn alle Elemente in <paramref name="left" /> kleiner sind als die entsprechenden Elemente in <paramref name="right" />; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than the corresponding element in the second vector.">Gibt einen Wert zurück, der angibt, ob ein beliebiges Element im ersten Vektor kleiner ist als das entsprechende Element im zweiten Vektor.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Element in <paramref name="left" /> kleiner ist als das entsprechende Element in <paramref name="right" />; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than or equal to their corresponding elements in a second double-precision floating-point vector.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem Vektor mit Gleitkomma und doppelter Genauigkeit kleiner oder gleich den entsprechenden Elementen in einem zweiten Vektor mit Gleitkomma und doppelter Genauigkeit sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than or equal to their corresponding elements in a second integral vector.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem integralen Vektor kleiner oder gleich den entsprechenden Elementen in einem zweiten integralen Vektor sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less or equal to their corresponding elements in a second long integer vector.">Gibt einen neuen langen ganzzahligen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem langen ganzzahligen Vektor kleiner oder gleich den entsprechenden Elementen in einem zweiten langen ganzzahligen Vektor sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting long integer vector.">Der resultierende lange ganzzahlige Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are less than or equal to their corresponding elements in a second single-precision floating-point vector.">Gibt einen neuen integralen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem Vektor mit Gleitkomma und einfacher Genauigkeit kleiner oder gleich den entsprechenden Elementen in einem zweiten Vektor mit Gleitkomma und einfacher Genauigkeit sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="The resulting integral vector.">Der resultierende integrale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector are less than or equal to their corresponding elements in the second vector.">Gibt einen neuen Vektor zurück, dessen Elemente darauf hinweisen, ob die Elemente in einem Vektor kleiner oder gleich den entsprechenden Elementen im zweiten Vektor sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The resulting vector.">Der Ergebnisvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are less than or equal to their corresponding elements in the second vector.">Gibt einen Wert zurück, der angibt, ob alle Elemente im ersten Vektor kleiner oder gleich den entsprechenden Elementen im zweiten Vektor sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn alle Elemente in <paramref name="left" /> kleiner oder gleich den entsprechenden Elementen in <paramref name="right" /> sind; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than or equal to the corresponding element in the second vector.">Gibt einen Wert zurück, der angibt, ob ein beliebiges Element im ersten Vektor kleiner oder gleich dem entsprechenden Element im zweiten Vektor ist.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Element in <paramref name="left" /> kleiner oder gleich dem entsprechenden Element in <paramref name="right" /> ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the maximum of each pair of elements in the two given vectors.">Gibt einen neuen Vektor zurück, dessen Elemente dem Höchstwert der einzelnen Elementpaare in den beiden angegebenen Vektoren entsprechen.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The maximum vector.">Der maximale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the minimum of each pair of elements in the two given vectors.">Gibt einen neuen Vektor zurück, dessen Elemente dem Mindestwert der einzelnen Elementpaare in den beiden angegebenen Vektoren entsprechen.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The minimum vector.">Der minimale Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are a scalar value multiplied by each of the values of a specified vector.">Gibt einen neuen Vektor zurück, dessen Werte sich aus der Multiplikation eines Skalarwerts mit jedem der Werte eines angegebenen Vektors ergeben.</summary>
      <param name="left" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <param name="right" vsli:raw="The vector.">Der Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
      <summary vsli:raw="Returns a new vector whose values are the values of a specified vector each multiplied by a scalar value.">Gibt einen neuen Vektor zurück, dessen Werte den jeweils mit einem Skalarwert multiplizierten Werten eines angegebenen Vektors entsprechen.</summary>
      <param name="left" vsli:raw="The vector.">Der Vektor.</param>
      <param name="right" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Gibt einen neuen Vektor zurück, dessen Werte dem Produkt der einzelnen Elementpaare in zwei angegebenen Vektoren entsprechen.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The element-wise product vector.">Der elementweise Produktvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">Schränkt zwei <c>Vector&lt;Double&gt;</c>-Instanzen auf einen <c>Vector&lt;Single&gt;</c> ein.</summary>
      <param name="source1">Der erste Quellvektor, dessen Elemente zu den Elementen mit niedrigerem Indexwerten des Rückgabewerts werden.</param>
      <param name="source2">Der zweite Quellvektor, dessen Elemente zu den Elementen mit höheren Indexwerten des Rückgabewerts werden.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Ein <c>Vector&lt;Single&gt;</c> mit Elementen, die von den Quellvektoren eingeschränkt wurden.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt;.">Schränkt zwei <c>Vector&lt;Int16&gt;</c>-Instanzen auf einen <c>Vector&lt;SByte&gt;</c> ein.</summary>
      <param name="source1">Der erste Quellvektor, dessen Elemente zu den Elementen mit niedrigerem Indexwerten des Rückgabewerts werden.</param>
      <param name="source2">Der zweite Quellvektor, dessen Elemente zu den Elementen mit höheren Indexwerten des Rückgabewerts werden.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Ein <c>Vector&lt;SByte&gt;</c> mit Elementen, die von den Quellvektoren eingeschränkt wurden.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt;.">Schränkt zwei <c>Vector&lt;Int32&gt;</c>-Instanzen auf einen <c>Vector&lt;Int16&gt;</c> ein.</summary>
      <param name="source1">Der erste Quellvektor, dessen Elemente zu den Elementen mit niedrigerem Indexwerten des Rückgabewerts werden.</param>
      <param name="source2">Der zweite Quellvektor, dessen Elemente zu den Elementen mit höheren Indexwerten des Rückgabewerts werden.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Ein <c>Vector&lt;Int16&gt;</c> mit Elementen, die von den Quellvektoren eingeschränkt wurden.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">Schränkt zwei <c>Vector&lt;Int64&gt;</c>-Instanzen auf einen <c>Vector&lt;Int32&gt;</c> ein.</summary>
      <param name="source1">Der erste Quellvektor, dessen Elemente zu den Elementen mit niedrigerem Indexwerten des Rückgabewerts werden.</param>
      <param name="source2">Der zweite Quellvektor, dessen Elemente zu den Elementen mit höheren Indexwerten des Rückgabewerts werden.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Ein <c>Vector&lt;Int32&gt;</c> mit Elementen, die von den Quellvektoren eingeschränkt wurden.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt;.">Schränkt zwei <c>Vector&lt;UInt16&gt;</c>-Instanzen auf einen <c>Vector&lt;Byte&gt;</c> ein.</summary>
      <param name="source1">Der erste Quellvektor, dessen Elemente zu den Elementen mit niedrigerem Indexwerten des Rückgabewerts werden.</param>
      <param name="source2">Der zweite Quellvektor, dessen Elemente zu den Elementen mit höheren Indexwerten des Rückgabewerts werden.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Ein <c>Vector&lt;Byte&gt;</c> mit Elementen, die von den Quellvektoren eingeschränkt wurden.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt;.">Schränkt zwei <c>Vector&lt;UInt32&gt;</c>-Instanzen auf einen <c>Vector&lt;UInt16&gt;</c> ein.</summary>
      <param name="source1">Der erste Quellvektor, dessen Elemente zu den Elementen mit niedrigerem Indexwerten des Rückgabewerts werden.</param>
      <param name="source2">Der zweite Quellvektor, dessen Elemente zu den Elementen mit höheren Indexwerten des Rückgabewerts werden.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Ein <c>Vector&lt;UInt16&gt;</c> mit Elementen, die von den Quellvektoren eingeschränkt wurden.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">Schränkt zwei <c>Vector&lt;UInt64&gt;</c>-Instanzen auf einen <c>Vector&lt;UInt32&gt;</c> ein.</summary>
      <param name="source1">Der erste Quellvektor, dessen Elemente zu den Elementen mit niedrigerem Indexwerten des Rückgabewerts werden.</param>
      <param name="source2">Der zweite Quellvektor, dessen Elemente zu den Elementen mit höheren Indexwerten des Rückgabewerts werden.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">Ein <c>Vector&lt;UInt32&gt;</c> mit Elementen, die von den Quellvektoren eingeschränkt wurden.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the negation of the corresponding element in the specified vector.">Gibt einen neuen Vektor zurück, dessen Elemente die Negation des entsprechenden Elements im angegebenen Vektor sind.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The negated vector.">Der negierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">Gibt einen neuen Vektor zurück, dessen Elemente sich aus dem Einerkomplement der Elemente eines angegebenen Vektors ergeben.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The resulting vector.">Der Ergebnisvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the square roots of a specified vector's elements.">Gibt einen neuen Vektor zurück, dessen Elemente die Quadratwurzeln der Elemente eines angegebenen Vektors sind.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The square root vector.">Der Quadratwurzelvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the difference between the elements in the second vector and their corresponding elements in the first vector.">Gibt einen neuen Vektor zurück, dessen Werte sich aus der Differenz zwischen den Elementen im zweiten Vektor und den entsprechenden Elementen im ersten Vektor ergeben.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The difference vector.">Der Differenzvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt16}@,System.Numerics.Vector{System.UInt16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances.">Erweitert einen <c>Vector&lt;Byte&gt;</c> auf zwei <c>Vector&lt;UInt16&gt;</c>-Instanzen.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Der Quellvektor, dessen Elemente in die Ausgaben erweitert werden.</param>
      <param name="dest1">Der erste Ausgabevektor, dessen Elemente die erweiterten Elemente aus den unteren Indizes im Quellvektor enthalten.</param>
      <param name="dest2">Der zweite Ausgabevektor, dessen Elemente die erweiterten Elemente aus den oberen Indizes im Quellvektor enthalten.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int32}@,System.Numerics.Vector{System.Int32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances.">Erweitert einen <c>Vector&lt;Int16&gt;</c> auf zwei <c>Vector&lt;Int32&gt;</c>-Instanzen.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Der Quellvektor, dessen Elemente in die Ausgaben erweitert werden.</param>
      <param name="dest1">Der erste Ausgabevektor, dessen Elemente die erweiterten Elemente aus den unteren Indizes im Quellvektor enthalten.</param>
      <param name="dest2">Der zweite Ausgabevektor, dessen Elemente die erweiterten Elemente aus den oberen Indizes im Quellvektor enthalten.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64}@,System.Numerics.Vector{System.Int64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances.">Erweitert einen <c>Vector&lt;Int32&gt;</c> auf zwei <c>Vector&lt;Int64&gt;</c>-Instanzen.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Der Quellvektor, dessen Elemente in die Ausgaben erweitert werden.</param>
      <param name="dest1">Der erste Ausgabevektor, dessen Elemente die erweiterten Elemente aus den unteren Indizes im Quellvektor enthalten.</param>
      <param name="dest2">Der zweite Ausgabevektor, dessen Elemente die erweiterten Elemente aus den oberen Indizes im Quellvektor enthalten.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int16}@,System.Numerics.Vector{System.Int16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances.">Erweitert einen <c>Vector&lt;SByte&gt;</c> auf zwei <c>Vector&lt;Int16&gt;</c>-Instanzen.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Der Quellvektor, dessen Elemente in die Ausgaben erweitert werden.</param>
      <param name="dest1">Der erste Ausgabevektor, dessen Elemente die erweiterten Elemente aus den unteren Indizes im Quellvektor enthalten.</param>
      <param name="dest2">Der zweite Ausgabevektor, dessen Elemente die erweiterten Elemente aus den oberen Indizes im Quellvektor enthalten.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Double}@,System.Numerics.Vector{System.Double}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances.">Erweitert einen <c>Vector&lt;Single&gt;</c> auf zwei <c>Vector&lt;Double&gt;</c>-Instanzen.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Der Quellvektor, dessen Elemente in die Ausgaben erweitert werden.</param>
      <param name="dest1">Der erste Ausgabevektor, dessen Elemente die erweiterten Elemente aus den unteren Indizes im Quellvektor enthalten.</param>
      <param name="dest2">Der zweite Ausgabevektor, dessen Elemente die erweiterten Elemente aus den oberen Indizes im Quellvektor enthalten.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt32}@,System.Numerics.Vector{System.UInt32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances.">Erweitert einen <c>Vector&lt;UInt16&gt;</c> auf zwei <c>Vector&lt;UInt32&gt;</c>-Instanzen.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Der Quellvektor, dessen Elemente in die Ausgaben erweitert werden.</param>
      <param name="dest1">Der erste Ausgabevektor, dessen Elemente die erweiterten Elemente aus den unteren Indizes im Quellvektor enthalten.</param>
      <param name="dest2">Der zweite Ausgabevektor, dessen Elemente die erweiterten Elemente aus den oberen Indizes im Quellvektor enthalten.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64}@,System.Numerics.Vector{System.UInt64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances.">Erweitert einen <c>Vector&lt;UInt32&gt;</c> auf zwei <c>Vector&lt;UInt64&gt;</c>-Instanzen.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">Der Quellvektor, dessen Elemente in die Ausgaben erweitert werden.</param>
      <param name="dest1">Der erste Ausgabevektor, dessen Elemente die erweiterten Elemente aus den unteren Indizes im Quellvektor enthalten.</param>
      <param name="dest2">Der zweite Ausgabevektor, dessen Elemente die erweiterten Elemente aus den oberen Indizes im Quellvektor enthalten.</param>
    </member>
    <member name="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise exclusive Or (&lt;see langword=&quot;XOr&quot; /&gt;) operation on each pair of elements in two vectors.">Gibt einen neuen Vektor zurück, indem für jedes Elementpaar in zwei Vektoren eine bitweise exklusive Oder-Operation (<see langword="XOr" />) durchgeführt wird.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
      <returns vsli:raw="The resulting vector.">Der Ergebnisvektor.</returns>
    </member>
    <member name="T:System.Numerics.Vector`1">
      <summary vsli:raw="Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.">Stellt einen einzelnen Vektor eines angegebenen numerischen Typs bereit, der für die Low-Level-Optimierung paralleler Algorithmen geeignet ist.</summary>
      <typeparam name="T" vsli:raw="The type of the elements in the vector. &lt;typeparamref name=&quot;T&quot; /&gt; can be any primitive numeric type.">Der Vektortyp. <c>T</c> kann ein beliebiger primitiver numerischer Typ sein.</typeparam>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0)">
      <summary vsli:raw="Creates a vector whose components are of a specified type.">Erstellt einen Vektor, dessen Komponenten einem bestimmten Typ entsprechen.</summary>
      <param name="value" vsli:raw="The numeric type that defines the type of the components in the vector.">Der numerische Typ, der den Typ der Komponenten im Vektor definiert.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[])">
      <summary vsli:raw="Creates a vector from a specified array.">Erstellt einen Vektor aus einem angegebenen Array.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Ein numerisches Array.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
      <summary vsli:raw="Creates a vector from a specified array starting at a specified index position.">Erstellt einen Vektor aus einem Array beginnend bei einer angegebenen Indexposition.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements from the specified index and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Ein numerisches Array.</param>
      <param name="index" vsli:raw="The starting index position from which to create the vector.">Die Indexanfangsposition, ab der der Vektor erstellt wird.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The length of &lt;paramref name=&quot;values&quot; /&gt; minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" /> ist kleiner als Null.

oder -
Die Länge von <paramref name="values" /> minus <paramref name="index" /> ist kleiner als <see cref="P:System.Numerics.Vector`1.Count" />.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.ReadOnlySpan`1&quot; /&gt;.">Erstellt einen Vektor aus dem angegebenen <see cref="T:System.ReadOnlySpan`1" />.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a read-only span of objects of type &lt;see langword=&quot;T&quot; /&gt;. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Die Werte, die dem Vektor als schreibgeschützte Spanne von Objekten vom Typ T hinzugefügt werden sollen. Die Spanne muss mindestens <see cref="P:System.Numerics.Vector`1.Count" /> Elemente enthalten.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Constructs a vector from the given read-only span of bytes.">Erstellt einen Vektor aus der angegebenen schreibgeschützten Spanne von Bytes.</summary>
      <param name="values" vsli:raw="A read-only span of bytes that contains the values to add to the vector. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Eine schreibgeschützte Spanne von Bytes, die die Werte enthält, die dem Vektor hinzugefügt werden sollen. Die Spanne muss mindestens <see cref="P:System.Numerics.Vector`1.Count" /> Elemente enthalten.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.Span{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">Erstellt einen Vektor aus dem angegebenen <see cref="T:System.Span`1" />.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a span of objects of type T. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">Die Werte, die dem Vektor als Spanne von Objekten vom Typ T hinzugefügt werden sollen. Die Spanne muss mindestens <see cref="P:System.Numerics.Vector`1.Count" /> Elemente enthalten.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[])">
      <summary vsli:raw="Copies the vector instance to a specified destination array.">Kopiert die Vektorinstanz in ein angegebenes Zielarray.</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">Das Array, das eine Kopie der Vektorwerte erhalten soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current vector is greater than the number of elements available in the &lt;paramref name=&quot;destination&quot; /&gt; array.">Die Anzahl von Elementen im aktuellen Vektor ist größer als die Anzahl von Elementen, die im <paramref name="destination" />-Array verfügbar sind.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the vector instance to a specified destination array starting at a specified index position.">Kopiert die Vektorinstanz ab einer angegebenen Indexposition in ein angegebenes Zielarray.</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">Das Array, das eine Kopie der Vektorwerte erhalten soll.</param>
      <param name="startIndex" vsli:raw="The starting index in &lt;paramref name=&quot;destination&quot; /&gt; at which to begin the copy operation.">Der Startindex in <paramref name="destination" />, bei dem der Kopiervorgang beginnen soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than the number of elements available from &lt;paramref name=&quot;startIndex&quot; /&gt; to the end of the &lt;paramref name=&quot;destination&quot; /&gt; array.">Die Anzahl von Elementen in der aktuellen Instanz ist größer als die Anzahl von Elementen, die ab <paramref name="startIndex" /> bis zum Ende des <paramref name="destination" />-Arrays verfügbar sind.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero or greater than the last index in &lt;paramref name=&quot;destination&quot; /&gt;.">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als der letzte Index in <paramref name="destination" />.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{`0})">
      <summary vsli:raw="Copies the vector to the given span. .">Kopiert den Vektor zur angegebenen Spanne. .</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">Die Zielspanne, in die die Werte kopiert werden. Die Zielspanne muss mindestens die Größe <see cref="P:System.Numerics.Vector`1.Count" /> aufweisen.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">Die Anzahl der Elemente im Quellvektor ist größer als die in der Zielspanne verfügbare Anzahl.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">Kopiert den Vektor zum angegebenen <see cref="T:System.Span`1" />.</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">Die Zielspanne, in die die Werte kopiert werden. Die Zielspanne muss mindestens die Größe <see cref="P:System.Numerics.Vector`1.Count" /> aufweisen.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">Die Anzahl der Elemente im Quellvektor ist größer als die in der Zielspanne verfügbare Anzahl.</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.Count">
      <summary vsli:raw="Returns the number of elements stored in the vector.">Gibt die Anzahl der im Vektor gespeicherten Elemente zurück.</summary>
      <returns vsli:raw="The number of elements stored in the vector.">Die Anzahl der im Vektor gespeicherten Elemente.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Access to the property getter via reflection is not supported.&#xA;        &#xA;-or-&#xA;        &#xA;.NET 5 and later: Type &lt;see langword=&quot;T&quot; /&gt; is not supported.">Zugriff auf den Eigenschaftengetter über Reflektion wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified vector.">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Vektor ist.</summary>
      <param name="other" vsli:raw="The vector to compare with this instance.">Der mit dieser Instanz zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;other&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Instanz und <paramref name="other" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The method returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is null, or if &lt;paramref name=&quot;obj&quot; /&gt; is a vector of a different type than the current instance.">
        <see langword="true" />, wenn die angegebene Instanz und <paramref name="obj" /> gleich sind, andernfalls <see langword="false" />. Die Methode gibt <see langword="false" /> zurück, wenn <paramref name="obj" /> null ist oder wenn <paramref name="obj" /> ein Vektor eines anderen Typs als die aktuelle Instanz ist.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="The hash code.">Der Hashcode.</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Item(System.Int32)">
      <summary vsli:raw="Gets the element at a specified index.">Ruft das Element bei einem angegebenen Index ab.</summary>
      <param name="index" vsli:raw="The index of the element to return.">Der Index des zurückzugebenden Elements.</param>
      <returns vsli:raw="The element at index &lt;paramref name=&quot;index&quot; /&gt;.">Das Element bei Index <paramref name="index" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" /> ist kleiner als Null.

oder -
<paramref name="index" /> ist größer gleich <see cref="P:System.Numerics.Vector`1.Count" />.</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.One">
      <summary vsli:raw="Returns a vector containing all ones.">Gibt einen Vektor zurück, der ausschließlich Einsen enthält.</summary>
      <returns vsli:raw="A vector containing all ones.">Ein Vektor, der ausschließlich Einsen enthält.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Adds two vectors together.">Addiert zwei Vektoren.</summary>
      <param name="left" vsli:raw="The first vector to add.">Der erste zu addierende Vektor.</param>
      <param name="right" vsli:raw="The second vector to add.">Der zweite zu addierende Vektor.</param>
      <returns vsli:raw="The summed vector.">Der Summenvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each of the elements in two vectors.">Gibt einen neuen Vektor zurück, indem für jedes Element in zwei Vektoren eine bitweise <see langword="And" />-Operation durchgeführt wird.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;And&quot; /&gt; of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Der Vektor, der sich aus der bitweisen <see langword="And" />-Operation von <paramref name="left" /> und <paramref name="right" /> ergibt.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each of the elements in two vectors.">Gibt einen neuen Vektor zurück, indem für jedes Element in zwei Vektoren eine bitweise <see langword="Or" />-Operation durchgeführt wird.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;Or&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Der Vektor, der sich aus der bitweisen <see langword="Or" />-Operation der Elemente in <paramref name="left" /> und <paramref name="right" /> ergibt.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Divides the first vector by the second.">Dividiert den ersten Vektor durch den zweiten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">Der Vektor, der aus der Division von <paramref name="left" /> durch <paramref name="right" /> resultiert.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors are equal.">Gibt einen Wert zurück, der angibt, ob jedes Elementpaar in zwei angegebenen Vektoren gleich ist.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;XOr&quot; /&gt; operation on each of the elements in two vectors.">Gibt einen neuen Vektor zurück, indem für jedes Element in zwei Vektoren eine bitweise <see langword="XOr" />-Operation durchgeführt wird.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;XOr&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Der Vektor, der sich aus der bitweisen <see langword="XOr" />-Operation der Elemente in <paramref name="left" /> und <paramref name="right" /> ergibt.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;.">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <see cref="T:System.Byte" /> um.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Der Vektor, der neu interpretiert werden soll.</param>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <see cref="T:System.Double" /> um.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Der Vektor, der neu interpretiert werden soll.</param>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <see cref="T:System.Int16" /> um.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Der Vektor, der neu interpretiert werden soll.</param>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <see cref="T:System.Int32" /> um.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Der Vektor, der neu interpretiert werden soll.</param>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <see cref="T:System.Int64" /> um.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Der Vektor, der neu interpretiert werden soll.</param>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.SByte&quot; /&gt;.">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <see cref="T:System.SByte" /> um.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Der Vektor, der neu interpretiert werden soll.</param>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <see cref="T:System.Single" /> um.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Der Vektor, der neu interpretiert werden soll.</param>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt16&quot; /&gt;.">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <see cref="T:System.UInt16" /> um.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Der Vektor, der neu interpretiert werden soll.</param>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <see cref="T:System.UInt32" /> um.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Der Vektor, der neu interpretiert werden soll.</param>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <see cref="T:System.UInt64" /> um.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">Der Vektor, der neu interpretiert werden soll.</param>
      <returns vsli:raw="The reinterpreted vector.">Der neu interpretierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the specified vectors is equal.">Gibt einen Wert zurück, der angibt, ob jedes Elementpaar in den angegebenen Vektoren gleich ist.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pairs in left and right are equal. &lt;see langword=&quot;false&quot; /&gt; if no element pairs are equal.">
        <see langword="true" />, wenn alle Elementpaare in "left" und "right" gleich sind. <see langword="false" />, wenn keine Elementpaare gleich sind.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">Multipliziert einen Vektor mit einem angegebenen Skalarwert.</summary>
      <param name="factor" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">Multipliziert einen Vektor mit einem angegebenen Skalarwert.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <param name="factor" vsli:raw="A scalar value.">Ein Skalarwert.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Gibt einen neuen Vektor zurück, dessen Werte dem Produkt der einzelnen Elementpaare in zwei angegebenen Vektoren entsprechen.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The element-wise product vector.">Der elementweise Produktvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">Gibt einen neuen Vektor zurück, dessen Elemente sich aus dem Einerkomplement der Elemente eines angegebenen Vektors ergeben.</summary>
      <param name="value" vsli:raw="The source vector.">Der Quellvektor.</param>
      <returns vsli:raw="The one's complement vector.">Der Einerkomplementvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrahiert den zweiten Vektor vom ersten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Der Vektor, der aus der Subtraktion von <paramref name="right" /> von <paramref name="left" /> resultiert.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
      <summary vsli:raw="Negates a given vector.">Negiert einen angegebenen Vektor.</summary>
      <param name="value" vsli:raw="The vector to negate.">Der zu negierende Vektor.</param>
      <returns vsli:raw="The negated vector.">Der negierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString">
      <summary vsli:raw="Returns the string representation of this vector using default formatting.">Gibt die Zeichenfolgendarstellung dieses Vektors in Standardformatierung zurück.</summary>
      <returns vsli:raw="The string representation of this vector.">Die Zeichenfolgendarstellung dieses Vektors.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements.">Gibt die Zeichenfolgendarstellung dieses Vektors zurück und verwendet dazu die angegebene Formatierungszeichenfolge, um einzelne Elemente zu formatieren.</summary>
      <param name="format" vsli:raw="The format of individual elements.">Eine  oder , die das Format einzelner Elemente definiert.</param>
      <returns vsli:raw="The string representation of the current instance.">Die Zeichenfolgendarstellung der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">Gibt die Zeichenfolgendarstellung dieses Vektors zurück und verwendet dazu die angegebene Formatierungszeichenfolge, um einzelne Elemente zu formatieren, sowie den angegebenen Formatanbieter, um kulturspezifische Formatierung zu definieren.</summary>
      <param name="format" vsli:raw="The format of individual elements.">Eine  oder , die das Format einzelner Elemente definiert.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">Ein Formatanbieter, der kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns vsli:raw="The string representation of the current instance.">Die Zeichenfolgendarstellung der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{`0})">
      <summary vsli:raw="Attempts to copy the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">Versucht, den Vektor in die angegebene <see cref="T:System.Span`1" /> zu kopieren.</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">Die Zielspanne, in die die Werte kopiert werden. Die Zielspanne muss mindestens die Größe <see cref="P:System.Numerics.Vector`1.Count" /> aufweisen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">
        <see langword="true" />, wenn der Quellvektor erfolgreich nach <paramref name="destination" /> kopiert wurde. <see langword="false" />, wenn <paramref name="destination" /> nicht groß genug ist, um den Quellvektor aufzunehmen.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Attempts to copy the vector to the given byte span.">Versucht, den Vektor in die angegebene Bytespanne zu kopieren.</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">Die Zielspanne, in die die Werte kopiert werden. Die Zielspanne muss mindestens die Größe <see cref="P:System.Numerics.Vector`1.Count" /> aufweisen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">
        <see langword="true" />, wenn der Quellvektor erfolgreich nach <paramref name="destination" /> kopiert wurde. <see langword="false" />, wenn <paramref name="destination" /> nicht groß genug ist, um den Quellvektor aufzunehmen.</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Zero">
      <summary vsli:raw="Returns a vector containing all zeroes.">Gibt einen Vektor zurück, der ausschließlich Nullen enthält.</summary>
      <returns vsli:raw="A vector containing all zeroes.">Ein Vektor, der ausschließlich Nullen enthält.</returns>
    </member>
    <member name="T:System.Numerics.Vector2">
      <summary vsli:raw="Represents a vector with two single-precision floating-point values.">Stellt einen Vektor mit zwei Gleitkommawerten mit einfacher Genauigkeit dar.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object whose two elements have the same value.">Erstellt ein neues <see cref="T:System.Numerics.Vector2" />-Objekt, dessen zwei Elemente den gleichen Wert aufweisen.</summary>
      <param name="value" vsli:raw="The value to assign to both elements.">Der beiden Elementen zuzuweisende Wert.</param>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">Erstellt einen Vektor, dessen Elemente die angegebenen Werte aufweisen.</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.X&quot; /&gt; field.">Der Wert, der dem <see cref="F:System.Numerics.Vector2.X" />-Feld zugewiesen werden soll.</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.Y&quot; /&gt; field.">Der Wert, der dem <see cref="F:System.Numerics.Vector2.Y" />-Feld zugewiesen werden soll.</param>
    </member>
    <member name="M:System.Numerics.Vector2.Abs(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">Gibt einen Vektor zurück, dessen Elemente die absoluten Werte jedes der Elemente des angegebenen Vektors sind.</summary>
      <param name="value" vsli:raw="A vector.">Ein Vektor.</param>
      <returns vsli:raw="The absolute value vector.">Der Absolutwertvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">Addiert zwei Vektoren.</summary>
      <param name="left" vsli:raw="The first vector to add.">Der erste zu addierende Vektor.</param>
      <param name="right" vsli:raw="The second vector to add.">Der zweite zu addierende Vektor.</param>
      <returns vsli:raw="The summed vector.">Der Summenvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">Schränkt einen Vektor zwischen einem Minimal- und einem Maximalwert ein.</summary>
      <param name="value1" vsli:raw="The vector to restrict.">Der einzuschränkende Vektor.</param>
      <param name="min" vsli:raw="The minimum value.">Der Minimalwert.</param>
      <param name="max" vsli:raw="The maximum value.">Der Maximalwert.</param>
      <returns vsli:raw="The restricted vector.">Der eingeschränkte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">Kopiert die Elemente des Vektors in ein angegebenes Array.</summary>
      <param name="array" vsli:raw="The destination array.">Das Zielarray.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">Die Anzahl von Elementen in der aktuellen Instanz ist größer als im Array.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> ist mehrdimensional.</exception>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">Kopiert die Elemente des Vektors ab der angegebenen Indexposition in das angegebene Array.</summary>
      <param name="array" vsli:raw="The destination array.">Das Zielarray.</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">Der Index, an dem das erste Element des Vektors kopiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">Die Anzahl von Elementen in der aktuellen Instanz ist größer als im Array.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> ist kleiner als Null.

oder -
<paramref name="index" /> ist größer gleich der Arraylänge.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> ist mehrdimensional.</exception>
    </member>
    <member name="M:System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">Berechnet den euklidischen Abstand zwischen den zwei angegebenen Punkten.</summary>
      <param name="value1" vsli:raw="The first point.">Der erste Punkt.</param>
      <param name="value2" vsli:raw="The second point.">Der zweite Punkt.</param>
      <returns vsli:raw="The distance.">Der Abstand.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">Gibt den euklidischen Abstand zwischen zwei bestimmten Punkten im Quadrat zurück.</summary>
      <param name="value1" vsli:raw="The first point.">Der erste Punkt.</param>
      <param name="value2" vsli:raw="The second point.">Der zweite Punkt.</param>
      <returns vsli:raw="The distance squared.">Das Quadrat des Abstands.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">Dividiert den ersten Vektor durch den zweiten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector resulting from the division.">Der Vektor, der sich aus der Division ergibt.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Dividiert den angegebenen Vektor durch einen angegebenen Skalarwert.</summary>
      <param name="left" vsli:raw="The vector.">Der Vektor.</param>
      <param name="divisor" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The vector that results from the division.">Der Vektor, der aus der Division resultiert.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the dot product of two vectors.">Gibt das Skalarprodukt zweier Vektoren zurück.</summary>
      <param name="value1" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="value2" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The dot product.">Das Skalarprodukt.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und ein anderer Vektor gleich sind.</summary>
      <param name="other" vsli:raw="The other vector.">Der andere Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Vektoren gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und ein angegebenes Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Instanz und <paramref name="obj" /> gleich sind, andernfalls <see langword="false" />. Wenn <paramref name="obj" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="The hash code.">Der Hashcode.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Length">
      <summary vsli:raw="Returns the length of the vector.">Gibt die Länge des Vektors zurück.</summary>
      <returns vsli:raw="The vector's length.">Die Länge des Vektors.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">Gibt das Quadrat der Länge des Vektors zurück.</summary>
      <returns vsli:raw="The vector's length squared.">Das Quadrat der Länge des Vektors.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">Führt eine lineare Interpolation zwischen beiden Vektoren aus, basierend auf der angegebenen Gewichtung.</summary>
      <param name="value1" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="value2" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">Ein Wert zwischen 0 und 1, der die Gewichtung von <paramref name="value2" /> angibt.</param>
      <returns vsli:raw="The interpolated vector.">Der interpolierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">Gibt einen Vektor zurück, dessen Elemente das Maximum jedes der Elementpaare in zwei angegebenen Vektoren sind.</summary>
      <param name="value1" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="value2" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The maximized vector.">Der maximierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">Gibt einen Vektor zurück, dessen Elemente das Minimum jedes der Elementpaare in zwei angegebenen Vektoren sind.</summary>
      <param name="value1" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="value2" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The minimized vector.">Der minimierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Gibt einen neuen Vektor zurück, dessen Werte dem Produkt der einzelnen Elementpaare in zwei angegebenen Vektoren entsprechen.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The element-wise product vector.">Der elementweise Produktvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">Multipliziert einen Vektor mit einem angegebenen Skalarwert.</summary>
      <param name="left" vsli:raw="The vector to multiply.">Der zu multiplizierende Vektor.</param>
      <param name="right" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">Multipliziert einen Skalarwert mit einem angegebenen Vektor.</summary>
      <param name="left" vsli:raw="The scaled value.">Der Skalarwert.</param>
      <param name="right" vsli:raw="The vector.">Der Vektor.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Negate(System.Numerics.Vector2)">
      <summary vsli:raw="Negates a specified vector.">Negiert einen angegebenen Vektor.</summary>
      <param name="value" vsli:raw="The vector to negate.">Der zu negierende Vektor.</param>
      <returns vsli:raw="The negated vector.">Der negierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Normalize(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">Gibt einen Vektor mit der gleichen Richtung wie der angegebene Vektor zurück, jedoch mit der Länge 1.</summary>
      <param name="value" vsli:raw="The vector to normalize.">Der zu normalisierende Vektor.</param>
      <returns vsli:raw="The normalized vector.">Der normalisierte Vektor.</returns>
    </member>
    <member name="P:System.Numerics.Vector2.One">
      <summary vsli:raw="Gets a vector whose 2 elements are equal to one.">Ruft einen Vektor ab, dessen 2 Elemente gleich eins sind.</summary>
      <returns vsli:raw="A vector whose two elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1)&lt;/c&gt;).">Ein Vektor, dessen zwei Elemente gleich eins sind (d. h., er gibt den Vektor zurück <c>(1, 1)</c>.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">Addiert zwei Vektoren.</summary>
      <param name="left" vsli:raw="The first vector to add.">Der erste zu addierende Vektor.</param>
      <param name="right" vsli:raw="The second vector to add.">Der zweite zu addierende Vektor.</param>
      <returns vsli:raw="The summed vector.">Der Summenvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">Dividiert den ersten Vektor durch den zweiten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">Der Vektor, der aus der Division von <paramref name="left" /> durch <paramref name="right" /> resultiert.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Dividiert den angegebenen Vektor durch einen angegebenen Skalarwert.</summary>
      <param name="value1" vsli:raw="The vector.">Der Vektor.</param>
      <param name="value2" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The result of the division.">Das Ergebnis der Division.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">Gibt einen Wert zurück, der angibt, ob jedes Elementpaar in zwei angegebenen Vektoren gleich ist.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">Gibt einen Wert zurück, der angibt, ob zwei angegebene Vektoren ungleich sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Gibt einen neuen Vektor zurück, dessen Werte dem Produkt der einzelnen Elementpaare in zwei angegebenen Vektoren entsprechen.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The element-wise product vector.">Der elementweise Produktvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">Dividiert den angegebenen Vektor durch den angegebenen Skalarwert.</summary>
      <param name="left" vsli:raw="The vector.">Der Vektor.</param>
      <param name="right" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">Multipliziert den Skalarwert mit dem angegebenen Vektor.</summary>
      <param name="left" vsli:raw="The vector.">Der Vektor.</param>
      <param name="right" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrahiert den zweiten Vektor vom ersten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Der Vektor, der aus der Subtraktion von <paramref name="right" /> von <paramref name="left" /> resultiert.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)">
      <summary vsli:raw="Negates the specified vector.">Negiert den angegebenen Vektor.</summary>
      <param name="value" vsli:raw="The vector to negate.">Der zu negierende Vektor.</param>
      <returns vsli:raw="The negated vector.">Der negierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">Gibt die Reflektion eines Vektors an einer Oberfläche an, die das angegebene Normal aufweist.</summary>
      <param name="vector" vsli:raw="The source vector.">Der Quellvektor.</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">Das Normal der Fläche, von der reflektiert wird.</param>
      <returns vsli:raw="The reflected vector.">Der reflektierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">Gibt einen Vektor zurück, dessen Elemente die Quadratwurzel jedes der Elemente eines angegebenen Vektors sind.</summary>
      <param name="value" vsli:raw="A vector.">Ein Vektor.</param>
      <returns vsli:raw="The square root vector.">Der Quadratwurzelvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrahiert den zweiten Vektor vom ersten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The difference vector.">Der Differenzvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">Gibt die Zeichenfolgendarstellung der aktuellen Instanz in Standardformatierung zurück.</summary>
      <returns vsli:raw="The string representation of the current instance.">Die Zeichenfolgendarstellung der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">Gibt die Zeichenfolgendarstellung der aktuellen Instanz zurück und verwendet dazu die angegebene Formatierungszeichenfolge, um einzelne Elemente zu formatieren.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Eine standardmäßige oder benutzerdefinierte numerische Formatzeichenfolge, die das Format einzelner Elemente definiert.</param>
      <returns vsli:raw="The string representation of the current instance.">Die Zeichenfolgendarstellung der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">Gibt die Zeichenfolgendarstellung der aktuellen Instanz zurück und verwendet dazu die angegebene Formatierungszeichenfolge, um einzelne Elemente zu formatieren, sowie den angegebenen Formatanbieter, um kulturspezifische Formatierung zu definieren.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Eine standardmäßige oder benutzerdefinierte numerische Formatzeichenfolge, die das Format einzelner Elemente definiert.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">Ein Formatanbieter, der kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns vsli:raw="The string representation of the current instance.">Die Zeichenfolgendarstellung der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector by a specified 3x2 matrix.">Transformiert einen Vektor mit einer angegebenen 3 x 2-Matrix.</summary>
      <param name="position" vsli:raw="The vector to transform.">Der zu transformierende Vektor.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Die Transformationsmatrix.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">Transformiert einen Vektor mit einer angegebenen 4 x 4-Matrix.</summary>
      <param name="position" vsli:raw="The vector to transform.">Der zu transformierende Vektor.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Die Transformationsmatrix.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">Transformiert einen Vektor um den angegebenen Quaternionrotationswert.</summary>
      <param name="value" vsli:raw="The vector to rotate.">Der zu drehende Vektor.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">Die anzuwendende Drehung.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector normal by the given 3x2 matrix.">Transformiert ein Vektornormal mit der angegebenen 3 x 2-Matrix.</summary>
      <param name="normal" vsli:raw="The source vector.">Der Quellvektor.</param>
      <param name="matrix" vsli:raw="The matrix.">Die Matrix.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">Transformiert ein Vektornormal mit der angegebenen 4 x 4-Matrix.</summary>
      <param name="normal" vsli:raw="The source vector.">Der Quellvektor.</param>
      <param name="matrix" vsli:raw="The matrix.">Die Matrix.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitX">
      <summary vsli:raw="Gets the vector (1,0).">Ruft den Vektor (1,0) ab.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0)&lt;/c&gt;.">Der Vektor <c>(1, 0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitY">
      <summary vsli:raw="Gets the vector (0,1).">Ruft den Vektor (0,1) ab.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1)&lt;/c&gt;.">Der Vektor <c>(0,0)</c>.</returns>
    </member>
    <member name="F:System.Numerics.Vector2.X">
      <summary vsli:raw="The X component of the vector.">Die X-Komponente des Vektors.</summary>
    </member>
    <member name="F:System.Numerics.Vector2.Y">
      <summary vsli:raw="The Y component of the vector.">Die Y-Komponente des Vektors.</summary>
    </member>
    <member name="P:System.Numerics.Vector2.Zero">
      <summary vsli:raw="Returns a vector whose 2 elements are equal to zero.">Gibt einen Vektor zurück, dessen 2 Elemente gleich null sind.</summary>
      <returns vsli:raw="A vector whose two elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0)&lt;/c&gt;).">Ein Vektor, dessen zwei Elemente gleich NULL sind (d. h., er gibt den Vektor zurück <c>(0,0)</c>.</returns>
    </member>
    <member name="T:System.Numerics.Vector3">
      <summary vsli:raw="Represents a vector with three  single-precision floating-point values.">Stellt einen Vektor mit drei Gleitkommawerten mit einfacher Genauigkeit dar.</summary>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and the specified value.">Erstellt ein neues <see cref="T:System.Numerics.Vector3" />-Objekt aus dem angegebenen <see cref="T:System.Numerics.Vector2" />-Objekt und dem angegebenen Wert.</summary>
      <param name="value" vsli:raw="The vector with two elements.">Der Vektor mit zwei Elementen.</param>
      <param name="z" vsli:raw="The additional value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">Der zusätzliche Wert, der dem <see cref="F:System.Numerics.Vector3.Z" />-Feld zugewiesen werden soll.</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object whose three elements have the same value.">Erstellt ein neues <see cref="T:System.Numerics.Vector3" />-Objekt, dessen drei Elemente den gleichen Wert aufweisen.</summary>
      <param name="value" vsli:raw="The value to assign to all three elements.">Der allen drei Elementen zuzuweisende Wert.</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">Erstellt einen Vektor, dessen Elemente die angegebenen Werte aufweisen.</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.X&quot; /&gt; field.">Der Wert, der dem <see cref="F:System.Numerics.Vector3.X" />-Feld zugewiesen werden soll.</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Y&quot; /&gt; field.">Der Wert, der dem <see cref="F:System.Numerics.Vector3.Y" />-Feld zugewiesen werden soll.</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">Der Wert, der dem <see cref="F:System.Numerics.Vector3.Z" />-Feld zugewiesen werden soll.</param>
    </member>
    <member name="M:System.Numerics.Vector3.Abs(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">Gibt einen Vektor zurück, dessen Elemente die absoluten Werte jedes der Elemente des angegebenen Vektors sind.</summary>
      <param name="value" vsli:raw="A vector.">Ein Vektor.</param>
      <returns vsli:raw="The absolute value vector.">Der Absolutwertvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">Addiert zwei Vektoren.</summary>
      <param name="left" vsli:raw="The first vector to add.">Der erste zu addierende Vektor.</param>
      <param name="right" vsli:raw="The second vector to add.">Der zweite zu addierende Vektor.</param>
      <returns vsli:raw="The summed vector.">Der Summenvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">Schränkt einen Vektor zwischen einem Minimal- und einem Maximalwert ein.</summary>
      <param name="value1" vsli:raw="The vector to restrict.">Der einzuschränkende Vektor.</param>
      <param name="min" vsli:raw="The minimum value.">Der Minimalwert.</param>
      <param name="max" vsli:raw="The maximum value.">Der Maximalwert.</param>
      <returns vsli:raw="The restricted vector.">Der eingeschränkte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">Kopiert die Elemente des Vektors in ein angegebenes Array.</summary>
      <param name="array" vsli:raw="The destination array.">Das Zielarray.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">Die Anzahl von Elementen in der aktuellen Instanz ist größer als im Array.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> ist mehrdimensional.</exception>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">Kopiert die Elemente des Vektors ab der angegebenen Indexposition in das angegebene Array.</summary>
      <param name="array" vsli:raw="The destination array.">Das Zielarray.</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">Der Index, an dem das erste Element des Vektors kopiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">Die Anzahl von Elementen in der aktuellen Instanz ist größer als im Array.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> ist kleiner als Null.

oder -
<paramref name="index" /> ist größer gleich der Arraylänge.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> ist mehrdimensional.</exception>
    </member>
    <member name="M:System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the cross product of two vectors.">Berechnet das Kreuzprodukt zweier Vektoren.</summary>
      <param name="vector1" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="vector2" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The cross product.">Das Kreuzprodukt.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">Berechnet den euklidischen Abstand zwischen den zwei angegebenen Punkten.</summary>
      <param name="value1" vsli:raw="The first point.">Der erste Punkt.</param>
      <param name="value2" vsli:raw="The second point.">Der zweite Punkt.</param>
      <returns vsli:raw="The distance.">Der Abstand.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">Gibt den euklidischen Abstand zwischen zwei bestimmten Punkten im Quadrat zurück.</summary>
      <param name="value1" vsli:raw="The first point.">Der erste Punkt.</param>
      <param name="value2" vsli:raw="The second point.">Der zweite Punkt.</param>
      <returns vsli:raw="The distance squared.">Das Quadrat des Abstands.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">Dividiert den ersten Vektor durch den zweiten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector resulting from the division.">Der Vektor, der sich aus der Division ergibt.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Dividiert den angegebenen Vektor durch einen angegebenen Skalarwert.</summary>
      <param name="left" vsli:raw="The vector.">Der Vektor.</param>
      <param name="divisor" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The vector that results from the division.">Der Vektor, der aus der Division resultiert.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of two vectors.">Gibt das Skalarprodukt zweier Vektoren zurück.</summary>
      <param name="vector1" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="vector2" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The dot product.">Das Skalarprodukt.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und ein anderer Vektor gleich sind.</summary>
      <param name="other" vsli:raw="The other vector.">Der andere Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Vektoren gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und ein angegebenes Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Instanz und <paramref name="obj" /> gleich sind, andernfalls <see langword="false" />. Wenn <paramref name="obj" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="The hash code.">Der Hashcode.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Length">
      <summary vsli:raw="Returns the length of this vector object.">Gibt die Länge dieses Vektorobjekts zurück.</summary>
      <returns vsli:raw="The vector's length.">Die Länge des Vektors.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">Gibt das Quadrat der Länge des Vektors zurück.</summary>
      <returns vsli:raw="The vector's length squared.">Das Quadrat der Länge des Vektors.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">Führt eine lineare Interpolation zwischen beiden Vektoren aus, basierend auf der angegebenen Gewichtung.</summary>
      <param name="value1" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="value2" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">Ein Wert zwischen 0 und 1, der die Gewichtung von <paramref name="value2" /> angibt.</param>
      <returns vsli:raw="The interpolated vector.">Der interpolierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">Gibt einen Vektor zurück, dessen Elemente das Maximum jedes der Elementpaare in zwei angegebenen Vektoren sind.</summary>
      <param name="value1" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="value2" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The maximized vector.">Der maximierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">Gibt einen Vektor zurück, dessen Elemente das Minimum jedes der Elementpaare in zwei angegebenen Vektoren sind.</summary>
      <param name="value1" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="value2" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The minimized vector.">Der minimierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Gibt einen neuen Vektor zurück, dessen Werte dem Produkt der einzelnen Elementpaare in zwei angegebenen Vektoren entsprechen.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The element-wise product vector.">Der elementweise Produktvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">Multipliziert einen Vektor mit einem angegebenen Skalarwert.</summary>
      <param name="left" vsli:raw="The vector to multiply.">Der zu multiplizierende Vektor.</param>
      <param name="right" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">Multipliziert einen Skalarwert mit einem angegebenen Vektor.</summary>
      <param name="left" vsli:raw="The scaled value.">Der Skalarwert.</param>
      <param name="right" vsli:raw="The vector.">Der Vektor.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Negate(System.Numerics.Vector3)">
      <summary vsli:raw="Negates a specified vector.">Negiert einen angegebenen Vektor.</summary>
      <param name="value" vsli:raw="The vector to negate.">Der zu negierende Vektor.</param>
      <returns vsli:raw="The negated vector.">Der negierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Normalize(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">Gibt einen Vektor mit der gleichen Richtung wie der angegebene Vektor zurück, jedoch mit der Länge 1.</summary>
      <param name="value" vsli:raw="The vector to normalize.">Der zu normalisierende Vektor.</param>
      <returns vsli:raw="The normalized vector.">Der normalisierte Vektor.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.One">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to one.">Ruft einen Vektor ab, dessen 3 Elemente gleich eins sind.</summary>
      <returns vsli:raw="A vector whose three elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1,1)&lt;/c&gt;).">Ein Vektor, dessen drei Elemente gleich eins sind (d. h., er gibt den Vektor zurück <c>(1, 1, 1)</c>.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">Addiert zwei Vektoren.</summary>
      <param name="left" vsli:raw="The first vector to add.">Der erste zu addierende Vektor.</param>
      <param name="right" vsli:raw="The second vector to add.">Der zweite zu addierende Vektor.</param>
      <returns vsli:raw="The summed vector.">Der Summenvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">Dividiert den ersten Vektor durch den zweiten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">Der Vektor, der aus der Division von <paramref name="left" /> durch <paramref name="right" /> resultiert.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Dividiert den angegebenen Vektor durch einen angegebenen Skalarwert.</summary>
      <param name="value1" vsli:raw="The vector.">Der Vektor.</param>
      <param name="value2" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The result of the division.">Das Ergebnis der Division.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">Gibt einen Wert zurück, der angibt, ob jedes Elementpaar in zwei angegebenen Vektoren gleich ist.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">Gibt einen Wert zurück, der angibt, ob zwei angegebene Vektoren ungleich sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Gibt einen neuen Vektor zurück, dessen Werte dem Produkt der einzelnen Elementpaare in zwei angegebenen Vektoren entsprechen.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The element-wise product vector.">Der elementweise Produktvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">Dividiert den angegebenen Vektor durch den angegebenen Skalarwert.</summary>
      <param name="left" vsli:raw="The vector.">Der Vektor.</param>
      <param name="right" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">Multipliziert den Skalarwert mit dem angegebenen Vektor.</summary>
      <param name="left" vsli:raw="The vector.">Der Vektor.</param>
      <param name="right" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrahiert den zweiten Vektor vom ersten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Der Vektor, der aus der Subtraktion von <paramref name="right" /> von <paramref name="left" /> resultiert.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)">
      <summary vsli:raw="Negates the specified vector.">Negiert den angegebenen Vektor.</summary>
      <param name="value" vsli:raw="The vector to negate.">Der zu negierende Vektor.</param>
      <returns vsli:raw="The negated vector.">Der negierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">Gibt die Reflektion eines Vektors an einer Oberfläche an, die das angegebene Normal aufweist.</summary>
      <param name="vector" vsli:raw="The source vector.">Der Quellvektor.</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">Das Normal der Fläche, von der reflektiert wird.</param>
      <returns vsli:raw="The reflected vector.">Der reflektierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">Gibt einen Vektor zurück, dessen Elemente die Quadratwurzel jedes der Elemente eines angegebenen Vektors sind.</summary>
      <param name="value" vsli:raw="A vector.">Ein Vektor.</param>
      <returns vsli:raw="The square root vector.">Der Quadratwurzelvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrahiert den zweiten Vektor vom ersten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The difference vector.">Der Differenzvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">Gibt die Zeichenfolgendarstellung der aktuellen Instanz in Standardformatierung zurück.</summary>
      <returns vsli:raw="The string representation of the current instance.">Die Zeichenfolgendarstellung der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">Gibt die Zeichenfolgendarstellung der aktuellen Instanz zurück und verwendet dazu die angegebene Formatierungszeichenfolge, um einzelne Elemente zu formatieren.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Eine standardmäßige oder benutzerdefinierte numerische Formatzeichenfolge, die das Format einzelner Elemente definiert.</param>
      <returns vsli:raw="The string representation of the current instance.">Die Zeichenfolgendarstellung der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">Gibt die Zeichenfolgendarstellung der aktuellen Instanz zurück und verwendet dazu die angegebene Formatierungszeichenfolge, um einzelne Elemente zu formatieren, sowie den angegebenen Formatanbieter, um kulturspezifische Formatierung zu definieren.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Eine standardmäßige oder benutzerdefinierte numerische Formatzeichenfolge, die das Format einzelner Elemente definiert.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">Ein Formatanbieter, der kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns vsli:raw="The string representation of the current instance.">Die Zeichenfolgendarstellung der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">Transformiert einen Vektor mit einer angegebenen 4 x 4-Matrix.</summary>
      <param name="position" vsli:raw="The vector to transform.">Der zu transformierende Vektor.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Die Transformationsmatrix.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">Transformiert einen Vektor um den angegebenen Quaternionrotationswert.</summary>
      <param name="value" vsli:raw="The vector to rotate.">Der zu drehende Vektor.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">Die anzuwendende Drehung.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">Transformiert ein Vektornormal mit der angegebenen 4 x 4-Matrix.</summary>
      <param name="normal" vsli:raw="The source vector.">Der Quellvektor.</param>
      <param name="matrix" vsli:raw="The matrix.">Die Matrix.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0).">Ruft den Vektor (1,0,0) ab.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0)&lt;/c&gt;.">Der Vektor <c>(1, 0, 0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0).">Ruft den Vektor (0,1,0) ab.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0)&lt;/c&gt;.">Der Vektor <c>(0, 1, 0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1).">Ruft den Vektor (0,0,1) ab.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1)&lt;/c&gt;.">Der Vektor <c>(0, 0, 1)</c>.</returns>
    </member>
    <member name="F:System.Numerics.Vector3.X">
      <summary vsli:raw="The X component of the vector.">Die X-Komponente des Vektors.</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Y">
      <summary vsli:raw="The Y component of the vector.">Die Y-Komponente des Vektors.</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Z">
      <summary vsli:raw="The Z component of the vector.">Die Z-Komponente des Vektors.</summary>
    </member>
    <member name="P:System.Numerics.Vector3.Zero">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to zero.">Ruft einen Vektor ab, dessen 3 Elemente gleich null sind.</summary>
      <returns vsli:raw="A vector whose three elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0)&lt;/c&gt;).">Ein Vektor, dessen drei Elemente gleich NULL sind (d. h., er gibt den Vektor <c>(0, 0, 0)</c>zurück.</returns>
    </member>
    <member name="T:System.Numerics.Vector4">
      <summary vsli:raw="Represents a vector with four single-precision floating-point values.">Stellt einen Vektor mit vier Gleitkommawerten mit einfacher Genauigkeit dar.</summary>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and a Z and a W component.">Erstellt ein neues <see cref="T:System.Numerics.Vector4" />-Objekt aus dem angegebenen <see cref="T:System.Numerics.Vector2" />-Objekt sowie eine Z- und eine W-Komponente.</summary>
      <param name="value" vsli:raw="The vector to use for the X and Y components.">Der für die X- und Y-Komponente zu verwendende Vektor.</param>
      <param name="z" vsli:raw="The Z component.">Die Z-Komponente.</param>
      <param name="w" vsli:raw="The W component.">Die W-Komponente.</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object and a W component.">Erzeugt ein neues <see cref="T:System.Numerics.Vector4" />-Objekt aus dem angegebenen <see cref="T:System.Numerics.Vector3" />-Objekt sowie eine W-Komponente.</summary>
      <param name="value" vsli:raw="The vector to use for the X, Y, and Z components.">Der für die X-, Y- und Z-Komponente zu verwendende Vektor.</param>
      <param name="w" vsli:raw="The W component.">Die W-Komponente.</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object whose four elements have the same value.">Erstellt ein neues <see cref="T:System.Numerics.Vector4" />-Objekt, dessen vier Elemente den gleichen Wert aufweisen.</summary>
      <param name="value" vsli:raw="The value to assign to all four elements.">Der allen vier Elementen zuzuweisende Wert.</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">Erstellt einen Vektor, dessen Elemente die angegebenen Werte aufweisen.</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.X&quot; /&gt; field.">Der Wert, der dem <see cref="F:System.Numerics.Vector4.X" />-Feld zugewiesen werden soll.</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Y&quot; /&gt; field.">Der Wert, der dem <see cref="F:System.Numerics.Vector4.Y" />-Feld zugewiesen werden soll.</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Z&quot; /&gt; field.">Der Wert, der dem <see cref="F:System.Numerics.Vector4.Z" />-Feld zugewiesen werden soll.</param>
      <param name="w" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; field.">Der Wert, der dem <see cref="F:System.Numerics.Vector4.W" />-Feld zugewiesen werden soll.</param>
    </member>
    <member name="M:System.Numerics.Vector4.Abs(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">Gibt einen Vektor zurück, dessen Elemente die absoluten Werte jedes der Elemente des angegebenen Vektors sind.</summary>
      <param name="value" vsli:raw="A vector.">Ein Vektor.</param>
      <returns vsli:raw="The absolute value vector.">Der Absolutwertvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">Addiert zwei Vektoren.</summary>
      <param name="left" vsli:raw="The first vector to add.">Der erste zu addierende Vektor.</param>
      <param name="right" vsli:raw="The second vector to add.">Der zweite zu addierende Vektor.</param>
      <returns vsli:raw="The summed vector.">Der Summenvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">Schränkt einen Vektor zwischen einem Minimal- und einem Maximalwert ein.</summary>
      <param name="value1" vsli:raw="The vector to restrict.">Der einzuschränkende Vektor.</param>
      <param name="min" vsli:raw="The minimum value.">Der Minimalwert.</param>
      <param name="max" vsli:raw="The maximum value.">Der Maximalwert.</param>
      <returns vsli:raw="The restricted vector.">Der eingeschränkte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">Kopiert die Elemente des Vektors in ein angegebenes Array.</summary>
      <param name="array" vsli:raw="The destination array.">Das Zielarray.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">Die Anzahl von Elementen in der aktuellen Instanz ist größer als im Array.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> ist mehrdimensional.</exception>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">Kopiert die Elemente des Vektors ab der angegebenen Indexposition in das angegebene Array.</summary>
      <param name="array" vsli:raw="The destination array.">Das Zielarray.</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">Der Index, an dem das erste Element des Vektors kopiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">Die Anzahl von Elementen in der aktuellen Instanz ist größer als im Array.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> ist kleiner als Null.

oder -
<paramref name="index" /> ist größer gleich der Arraylänge.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> ist mehrdimensional.</exception>
    </member>
    <member name="M:System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">Berechnet den euklidischen Abstand zwischen den zwei angegebenen Punkten.</summary>
      <param name="value1" vsli:raw="The first point.">Der erste Punkt.</param>
      <param name="value2" vsli:raw="The second point.">Der zweite Punkt.</param>
      <returns vsli:raw="The distance.">Der Abstand.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">Gibt den euklidischen Abstand zwischen zwei bestimmten Punkten im Quadrat zurück.</summary>
      <param name="value1" vsli:raw="The first point.">Der erste Punkt.</param>
      <param name="value2" vsli:raw="The second point.">Der zweite Punkt.</param>
      <returns vsli:raw="The distance squared.">Das Quadrat des Abstands.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">Dividiert den ersten Vektor durch den zweiten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector resulting from the division.">Der Vektor, der sich aus der Division ergibt.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Dividiert den angegebenen Vektor durch einen angegebenen Skalarwert.</summary>
      <param name="left" vsli:raw="The vector.">Der Vektor.</param>
      <param name="divisor" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The vector that results from the division.">Der Vektor, der aus der Division resultiert.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the dot product of two vectors.">Gibt das Skalarprodukt zweier Vektoren zurück.</summary>
      <param name="vector1" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="vector2" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The dot product.">Das Skalarprodukt.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und ein anderer Vektor gleich sind.</summary>
      <param name="other" vsli:raw="The other vector.">Der andere Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Vektoren gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">Gibt einen Wert zurück, der angibt, ob diese Instanz und ein angegebenes Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Instanz und <paramref name="obj" /> gleich sind, andernfalls <see langword="false" />. Wenn <paramref name="obj" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="The hash code.">Der Hashcode.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Length">
      <summary vsli:raw="Returns the length of this vector object.">Gibt die Länge dieses Vektorobjekts zurück.</summary>
      <returns vsli:raw="The vector's length.">Die Länge des Vektors.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">Gibt das Quadrat der Länge des Vektors zurück.</summary>
      <returns vsli:raw="The vector's length squared.">Das Quadrat der Länge des Vektors.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">Führt eine lineare Interpolation zwischen beiden Vektoren aus, basierend auf der angegebenen Gewichtung.</summary>
      <param name="value1" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="value2" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">Ein Wert zwischen 0 und 1, der die Gewichtung von <paramref name="value2" /> angibt.</param>
      <returns vsli:raw="The interpolated vector.">Der interpolierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">Gibt einen Vektor zurück, dessen Elemente das Maximum jedes der Elementpaare in zwei angegebenen Vektoren sind.</summary>
      <param name="value1" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="value2" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The maximized vector.">Der maximierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">Gibt einen Vektor zurück, dessen Elemente das Minimum jedes der Elementpaare in zwei angegebenen Vektoren sind.</summary>
      <param name="value1" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="value2" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The minimized vector.">Der minimierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Gibt einen neuen Vektor zurück, dessen Werte dem Produkt der einzelnen Elementpaare in zwei angegebenen Vektoren entsprechen.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The element-wise product vector.">Der elementweise Produktvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">Multipliziert einen Vektor mit einem angegebenen Skalarwert.</summary>
      <param name="left" vsli:raw="The vector to multiply.">Der zu multiplizierende Vektor.</param>
      <param name="right" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">Multipliziert einen Skalarwert mit einem angegebenen Vektor.</summary>
      <param name="left" vsli:raw="The scaled value.">Der Skalarwert.</param>
      <param name="right" vsli:raw="The vector.">Der Vektor.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Negate(System.Numerics.Vector4)">
      <summary vsli:raw="Negates a specified vector.">Negiert einen angegebenen Vektor.</summary>
      <param name="value" vsli:raw="The vector to negate.">Der zu negierende Vektor.</param>
      <returns vsli:raw="The negated vector.">Der negierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Normalize(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">Gibt einen Vektor mit der gleichen Richtung wie der angegebene Vektor zurück, jedoch mit der Länge 1.</summary>
      <param name="vector" vsli:raw="The vector to normalize.">Der zu normalisierende Vektor.</param>
      <returns vsli:raw="The normalized vector.">Der normalisierte Vektor.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.One">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to one.">Ruft einen Vektor ab, dessen 4 Elemente gleich eins sind.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt;.">Gibt <see cref="T:System.Numerics.Vector4" />zurück.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">Addiert zwei Vektoren.</summary>
      <param name="left" vsli:raw="The first vector to add.">Der erste zu addierende Vektor.</param>
      <param name="right" vsli:raw="The second vector to add.">Der zweite zu addierende Vektor.</param>
      <returns vsli:raw="The summed vector.">Der Summenvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">Dividiert den ersten Vektor durch den zweiten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">Der Vektor, der aus der Division von <paramref name="left" /> durch <paramref name="right" /> resultiert.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">Dividiert den angegebenen Vektor durch einen angegebenen Skalarwert.</summary>
      <param name="value1" vsli:raw="The vector.">Der Vektor.</param>
      <param name="value2" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The result of the division.">Das Ergebnis der Division.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">Gibt einen Wert zurück, der angibt, ob jedes Elementpaar in zwei angegebenen Vektoren gleich ist.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">Gibt einen Wert zurück, der angibt, ob zwei angegebene Vektoren ungleich sind.</summary>
      <param name="left" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="right" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">Gibt einen neuen Vektor zurück, dessen Werte dem Produkt der einzelnen Elementpaare in zwei angegebenen Vektoren entsprechen.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The element-wise product vector.">Der elementweise Produktvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">Dividiert den angegebenen Vektor durch den angegebenen Skalarwert.</summary>
      <param name="left" vsli:raw="The vector.">Der Vektor.</param>
      <param name="right" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">Multipliziert den Skalarwert mit dem angegebenen Vektor.</summary>
      <param name="left" vsli:raw="The vector.">Der Vektor.</param>
      <param name="right" vsli:raw="The scalar value.">Der Skalarwert.</param>
      <returns vsli:raw="The scaled vector.">Der skalierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrahiert den zweiten Vektor vom ersten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Der Vektor, der aus der Subtraktion von <paramref name="right" /> von <paramref name="left" /> resultiert.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)">
      <summary vsli:raw="Negates the specified vector.">Negiert den angegebenen Vektor.</summary>
      <param name="value" vsli:raw="The vector to negate.">Der zu negierende Vektor.</param>
      <returns vsli:raw="The negated vector.">Der negierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">Gibt einen Vektor zurück, dessen Elemente die Quadratwurzel jedes der Elemente eines angegebenen Vektors sind.</summary>
      <param name="value" vsli:raw="A vector.">Ein Vektor.</param>
      <returns vsli:raw="The square root vector.">Der Quadratwurzelvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">Subtrahiert den zweiten Vektor vom ersten.</summary>
      <param name="left" vsli:raw="The first vector.">Der erste Vektor.</param>
      <param name="right" vsli:raw="The second vector.">Der zweite Vektor.</param>
      <returns vsli:raw="The difference vector.">Der Differenzvektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">Gibt die Zeichenfolgendarstellung der aktuellen Instanz in Standardformatierung zurück.</summary>
      <returns vsli:raw="The string representation of the current instance.">Die Zeichenfolgendarstellung der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">Gibt die Zeichenfolgendarstellung der aktuellen Instanz zurück und verwendet dazu die angegebene Formatierungszeichenfolge, um einzelne Elemente zu formatieren.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Eine standardmäßige oder benutzerdefinierte numerische Formatzeichenfolge, die das Format einzelner Elemente definiert.</param>
      <returns vsli:raw="The string representation of the current instance.">Die Zeichenfolgendarstellung der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">Gibt die Zeichenfolgendarstellung der aktuellen Instanz zurück und verwendet dazu die angegebene Formatierungszeichenfolge, um einzelne Elemente zu formatieren, sowie den angegebenen Formatanbieter, um kulturspezifische Formatierung zu definieren.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">Eine standardmäßige oder benutzerdefinierte numerische Formatzeichenfolge, die das Format einzelner Elemente definiert.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">Ein Formatanbieter, der kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns vsli:raw="The string representation of the current instance.">Die Zeichenfolgendarstellung der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a two-dimensional vector by a specified 4x4 matrix.">Transformiert einen zweidimensionalen Vektor mit einer angegebenen 4 x 4-Matrix.</summary>
      <param name="position" vsli:raw="The vector to transform.">Der zu transformierende Vektor.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Die Transformationsmatrix.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a two-dimensional vector by the specified Quaternion rotation value.">Transformiert einen zweidimensionalen Vektor um den angegebenen Quaternionrotationswert.</summary>
      <param name="value" vsli:raw="The vector to rotate.">Der zu drehende Vektor.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">Die anzuwendende Drehung.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a three-dimensional vector by a specified 4x4 matrix.">Transformiert einen dreidimensionalen Vektor mit einer angegebenen 4 x 4-Matrix.</summary>
      <param name="position" vsli:raw="The vector to transform.">Der zu transformierende Vektor.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Die Transformationsmatrix.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a three-dimensional vector by the specified Quaternion rotation value.">Transformiert einen dreidimensionalen Vektor um den angegebenen Quaternionrotationswert.</summary>
      <param name="value" vsli:raw="The vector to rotate.">Der zu drehende Vektor.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">Die anzuwendende Drehung.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a four-dimensional vector by a specified 4x4 matrix.">Transformiert einen vierdimensionalen Vektor mit einer angegebenen 4 x 4-Matrix.</summary>
      <param name="vector" vsli:raw="The vector to transform.">Der zu transformierende Vektor.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Die Transformationsmatrix.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a four-dimensional vector by the specified Quaternion rotation value.">Transformiert einen vierdimensionalen Vektor um den angegebenen Quaternionrotationswert.</summary>
      <param name="value" vsli:raw="The vector to rotate.">Der zu drehende Vektor.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">Die anzuwendende Drehung.</param>
      <returns vsli:raw="The transformed vector.">Der transformierte Vektor.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitW">
      <summary vsli:raw="Gets the vector (0,0,0,1).">Ruft den Vektor (0,0,0,1) ab.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,0,1)&lt;/c&gt;.">Der Vektor <c>(0,0,0,1)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0,0).">Ruft den Vektor (1,0,0,0) ab.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0,0)&lt;/c&gt;.">Der Vektor <c>(1,0,0,0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0,0).">Ruft den Vektor (0,1,0,0) ab.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0,0)&lt;/c&gt;.">Der Vektor <c>(0, 1, 0, 0)</c>.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1,0).">Ruft den Vektor (0,0,1,0) ab.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1,0)&lt;/c&gt;.">Der Vektor <c>(0,0,1,0)</c>.</returns>
    </member>
    <member name="F:System.Numerics.Vector4.W">
      <summary vsli:raw="The W component of the vector.">Die W-Komponente des Vektors.</summary>
    </member>
    <member name="F:System.Numerics.Vector4.X">
      <summary vsli:raw="The X component of the vector.">Die X-Komponente des Vektors.</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Y">
      <summary vsli:raw="The Y component of the vector.">Die Y-Komponente des Vektors.</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Z">
      <summary vsli:raw="The Z component of the vector.">Die Z-Komponente des Vektors.</summary>
    </member>
    <member name="P:System.Numerics.Vector4.Zero">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to zero.">Ruft einen Vektor ab, dessen 4 Elemente gleich null sind.</summary>
      <returns vsli:raw="A vector whose four elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0,0)&lt;/c&gt;).">Ein Vektor, dessen vier Elemente gleich null (gibt also den Vektor zurück <c>(0,0,0,0)</c>.</returns>
    </member>
  </members>
</doc>