<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Sockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.Sockets.IOControlCode">
      <summary>Gibt die von der <see cref="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])" />-Methode unterstützten EA-Steuerungscodes an.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AbsorbRouterAlert">
      <summary>Dieser Wert entspricht der SIO_ABSORB_RTRALERT-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface">
      <summary>Verknüpfen Sie eine Multicastgruppe mithilfe einer durch diesen Index angegebenen Schnittstelle. Dieser Steuerungscode wird von Windows 2000 und höher unterstützt. Dieser Wert entspricht der SIO_INDEX_ADD_MCAST-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListChange">
      <summary>Aktiviert das Empfangen einer Benachrichtigung, wenn sich die Liste lokaler Schnittstellen für die Protokollfamilie des Sockets ändern. Dieser Steuerungscode wird von Windows 2000 und höher unterstützt. Dieser Wert entspricht der SIO_ADDRESS_LIST_CHANGE-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListQuery">
      <summary>Gibt die Liste der lokalen Schnittstellen zurück, an die der Socket gebunden werden kann. Dieser Steuerungscode wird von Windows 2000 und höher unterstützt. Dieser Wert entspricht der SIO_ADDRESS_LIST_QUERY-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListSort">
      <summary>Sortiert die vom <see cref="F:System.Net.Sockets.IOControlCode.AddressListQuery" />-Feld zurückgegebene Struktur, und fügt für IPv6-Adressen Bereichs-ID-Informationen hinzu. Dieser Steuerungscode wird von Windows XP und höher unterstützt. Dieser Wert entspricht der SIO_ADDRESS_LIST_SORT-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AssociateHandle">
      <summary>Ordnet diesen Socket dem angegebenen Handle einer Begleitschnittstelle zu. Weitere Informationen finden Sie im entsprechenden protokollspezifischen Annex der Winsock 2-Referenz oder -Dokumentation zur jeweiligen Begleitschnittstelle. Es empfiehlt sich, COM (Component Object Model) anstelle von IOCTL zu verwenden, um weitere Schnittstellen zu ermitteln und nachzuverfolgen, die möglicherweise von einem Socket unterstützt werden. Dieser Steuerungscode ist für die Abwärtskompatibilität mit Systemen vorhanden, in denen COM nicht verfügbar ist oder aus einem anderen Grund nicht verwendet werden kann. Dieser Wert entspricht der SIO_ASSOCIATE_HANDLE-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AsyncIO">
      <summary>Aktiviert die Benachrichtigung, wenn der Empfang von Daten aussteht. Dieser Wert entspricht der FIOASYNC-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.BindToInterface">
      <summary>Bindet den Socket an einen angegebenen Schnittstellenindex. Dieser Steuerungscode wird von Windows 2000 und höher unterstützt. Dieser Wert entspricht der SIO_INDEX_BIND-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DataToRead">
      <summary>Gibt die Anzahl der zum Lesen verfügbaren Bytes zurück. Dieser Wert entspricht der FIONREAD-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface">
      <summary>Entfernt den Socket aus einer Multicastgruppe. Dieser Steuerungscode wird von Windows 2000 und höher unterstützt. Dieser Wert entspricht der SIO_INDEX_ADD_MCAST-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.EnableCircularQueuing">
      <summary>Ersetzt das älteste Datagramm in der Warteschlange durch ein eingehendes Datagramm, wenn die Warteschlangen für eingehende Meldungen voll sind. Dieser Wert entspricht der SIO_ENABLE_CIRCULAR_QUEUEING-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.Flush">
      <summary>Verwirft den Inhalt der Sendewarteschlange. Dieser Wert entspricht der SIO_FLUSH-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetBroadcastAddress">
      <summary>Gibt eine SOCKADDR-Struktur zurück, die die Broadcastadresse für die Adressfamilie des aktuellen Sockets enthält. Die zurückgegebene Adresse kann mit der <see cref="Overload:System.Net.Sockets.Socket.SendTo" />-Methode verwendet werden. Dieser Wert entspricht der SIO_GET_BROADCAST_ADDRESS-Konstante von Winsock 2. Dieser Wert kann nur für UDP (User Datagram Protocol)-Sockets verwendet werden.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer">
      <summary>Ruft anbieterspezifische Funktionen ab, die nicht in der Winsock-Spezifikation enthalten sind. Funktionen werden mit ihrer vom Anbieter zugewiesenen GUID angegeben. Dieser Wert entspricht der SIO_GET_EXTENSION_FUNCTION_POINTER-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetGroupQos">
      <summary>Gibt die QOS (Quality of Service)-Attribute für die Socketgruppe zurück. Dieser Wert ist für eine zukünftige Verwendung reserviert und entspricht der SIO_GET_GROUP_QOS-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetQos">
      <summary>Ruft die dem Socket zugeordnete QOS-Struktur ab. Dieser Steuerungscode wird nur auf Plattformen unterstützt, die eine QOS-fähige Übertragung (Windows Me, Windows 2000 und höher) bereitstellen. Dieser Wert entspricht der SIO_GET_QOS-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.KeepAliveValues">
      <summary>Steuerungscode, der TCP-Keep-alive-Pakete sendet, und das Intervall, in dem die Pakete gesendet werden. Dieser Steuerungscode wird von Windows 2000 und höher unterstützt. Weitere Informationen finden Sie in RFC 1122, Abschnitt 4.2.3.6. Dieser Wert entspricht der SIO_KEEPALIVE_VALS-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.LimitBroadcasts">
      <summary>Dieser Wert entspricht der SIO_LIMIT_BROADCASTS-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastInterface">
      <summary>Legt die Schnittstelle für ausgehende Multicastpakete fest. Die Schnittstelle wird durch ihren Index angegeben. Dieser Steuerungscode wird von Windows 2000 und höher unterstützt.  Dieser Wert entspricht der SIO_INDEX_MCASTIF-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastScope">
      <summary>Steuert die Anzahl der Weiterleitungen eines Multicastpakets durch einen Router, auch als Gültigkeitsdauer (TTL) oder Hop Count bezeichnet. Dieser Wert entspricht der SIO_MULTICAST_SCOPE-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MultipointLoopback">
      <summary>Steuert, ob vom Socket gesendete Multicastdaten in der Empfangswarteschlange für Sockets als eingehende Daten behandelt werden. Dieser Wert entspricht der SIO_MULTIPOINT_LOOPBACK-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NamespaceChange">
      <summary>Steuert, ob der Socket eine Benachrichtigung empfängt, wenn eine Namespaceabfrage ungültig wird. Dieser Steuerungscode wird von Windows XP und höher unterstützt. Dieser Wert entspricht der SIO_NSP_NOTIFY_CHANGE-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NonBlockingIO">
      <summary>Steuert das Blockierungsverhalten des Sockets. Wenn das mit diesem Steuerungscode angegebene Argument 0 (null) ist, wird der Socket in den blockierenden Modus versetzt. Wenn das Argument ungleich 0 (null) ist, wird der Socket in den nicht blockierenden Modus versetzt. Dieser Wert entspricht der FIONBIO-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.OobDataRead">
      <summary>Gibt Informationen über Out-of-Band-Daten zurück, deren Empfang aussteht. Bei Verwendung dieses Steuerungscodes für Streamsockets gibt der Rückgabewert die Anzahl der verfügbaren Bytes an.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.QueryTargetPnpHandle">
      <summary>Ruft das SOCKET-Handle des zugrunde liegenden Anbieters ab. Dieses Handle kann zum Empfangen von Plug-and-Play-Ereignisbenachrichtigungen verwendet werden. Dieser Steuerungscode wird von Windows 2000 und höher unterstützt. Dieser Wert entspricht der SIO_QUERY_TARGET_PNP_HANDLE-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAll">
      <summary>Aktiviert das Empfangen aller IPv4-Pakete im Netzwerk. Der Socket muss über die Adressfamilie <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> verfügen, der Sockettyp muss <see cref="F:System.Net.Sockets.SocketType.Raw" /> und der Protokolltyp <see cref="F:System.Net.Sockets.ProtocolType.IP" /> sein. Der aktuelle Benutzer muss der Gruppe Administratoren auf dem lokalen Computer angehören, und der Socket muss an einen bestimmten Anschluss gebunden sein. Dieser Steuerungscode wird von Windows 2000 und höher unterstützt. Dieser Wert entspricht der SIO_RCVALL-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast">
      <summary>Aktiviert das Empfangen aller IGMP (Internet Group Management Protocol)-Pakete im Netzwerk. Der Socket muss über die Adressfamilie <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> verfügen, der Sockettyp muss <see cref="F:System.Net.Sockets.SocketType.Raw" /> und der Protokolltyp <see cref="F:System.Net.Sockets.ProtocolType.Igmp" /> sein. Der aktuelle Benutzer muss der Gruppe Administratoren auf dem lokalen Computer angehören, und der Socket muss an einen bestimmten Anschluss gebunden sein. Dieser Steuerungscode wird von Windows 2000 und höher unterstützt. Dieser Wert entspricht der SIO_RCVALL_IGMPMCAST-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllMulticast">
      <summary>Aktiviert das Empfangen aller IPv4-Multicastpakete im Netzwerk. Dies sind Pakete mit Zieladressen im Bereich 224.0.0.0 bis 239.255.255.255. Der Socket muss über die Adressfamilie <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> verfügen, der Sockettyp muss <see cref="F:System.Net.Sockets.SocketType.Raw" /> und der Protokolltyp <see cref="F:System.Net.Sockets.ProtocolType.Udp" /> sein. Der aktuelle Benutzer muss der Gruppe Administratoren auf dem lokalen Computer angehören, und der Socket muss an einen bestimmten Anschluss gebunden sein. Dieser Steuerungscode wird von Windows 2000 und höher unterstützt. Dieser Wert entspricht der SIO_RCVALL_MCAST-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceChange">
      <summary>Aktiviert das Empfangen einer Benachrichtigung, wenn sich die für den Zugriff auf einen Remoteendpunkt verwendete lokale Schnittstelle ändert. Dieser Wert entspricht der SIO_ROUTING_INTERFACE_CHANGE-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceQuery">
      <summary>Gibt die Schnittstellenadressen zurück, die zum Herstellen einer Verbindung mit der angegebenen Remoteadresse verwendet werden können. Dieser Wert entspricht der SIO_ROUTING_INTERFACE_QUERY-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetGroupQos">
      <summary>Legt die QOS (Quality of Service)-Attribute für die Socketgruppe fest. Dieser Wert ist für eine zukünftige Verwendung reserviert und entspricht der SIO_SET_GROUP_QOS-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetQos">
      <summary>Legt die QOS (Quality of Service)-Attribute für den Socket fest. Mit QOS werden die Bandbreitenanforderungen für den Socket definiert. Dieser Steuerungscode wird von Windows Me, Windows 2000 und höher unterstützt. Dieser Wert entspricht der SIO_SET_QOS-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.TranslateHandle">
      <summary>Gibt ein Handle für den Socket zurück, das im Kontext einer Begleitschnittstelle gültig ist. Dieser Wert entspricht der SIO_TRANSLATE_HANDLE-Konstante von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.UnicastInterface">
      <summary>Legt die Schnittstelle für ausgehende Unicastpakete fest. Dieser Wert entspricht der SIO_UCAST_IF-Konstante von Winsock 2.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPPacketInformation">
      <summary>Präsentiert die Paketinformationen aus einem Aufruf von <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> oder <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Address">
      <summary>Ruft die Ursprungsinformationen des Pakets ab, das als Ergebnis eines Aufrufs der <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />-Methode oder der <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />-Methode empfangen wurde.</summary>
      <returns>Eine <see cref="T:System.Net.IPAddress" />, die die Ursprungsinformationen des Pakets angibt, das als Ergebnis eines Aufrufs der <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />-Methode oder der <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />-Methode empfangen wurde. Für Pakete, die von einer Unicastadresse gesendet wurden, gibt die <see cref="P:System.Net.Sockets.IPPacketInformation.Address" />-Eigenschaft die <see cref="T:System.Net.IPAddress" /> des Absenders zurück. Für Multicast- oder Broadcastpakete, gibt die <see cref="P:System.Net.Sockets.IPPacketInformation.Address" />-Eigenschaft die Multicast- oder Broadcast-<see cref="T:System.Net.IPAddress" /> zurück.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <param name="comparand">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="comparand" /> eine Instanz von <see cref="T:System.Net.Sockets.IPPacketInformation" /> ist, deren Wert gleich dem Wert der Instanz ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein Int32-Hashcode.</returns>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Interface">
      <summary>Ruft die Netzwerkschnittstelleninformationen ab, die einem Aufruf von <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> oder <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> zugeordnet sind.</summary>
      <returns>Ein <see cref="T:System.Int32" />-Wert, der den Index der Netzwerkschnittstelle darstellt. Sie können diesen Index mit <see cref="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" /> verwenden, um weitere Informationen über die relevante Schnittstelle abzurufen.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>Überprüft, ob zwei angegebene <see cref="T:System.Net.Sockets.IPPacketInformation" />-Instanzen äquivalent sind.</summary>
      <param name="packetInformation1">Die <see cref="T:System.Net.Sockets.IPPacketInformation" />-Instanz auf der linken Seite des Gleichheitsoperators.</param>
      <param name="packetInformation2">Die <see cref="T:System.Net.Sockets.IPPacketInformation" />-Instanz auf der rechten Seite des Gleichheitsoperators.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="packetInformation1" /> und <paramref name="packetInformation2" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>Überprüft, ob zwei angegebene <see cref="T:System.Net.Sockets.IPPacketInformation" />-Instanzen tatsächlich nicht gleich sind.</summary>
      <param name="packetInformation1">Die <see cref="T:System.Net.Sockets.IPPacketInformation" />-Instanz auf der linken Seite des Ungleichheitsoperators.</param>
      <param name="packetInformation2">Die <see cref="T:System.Net.Sockets.IPPacketInformation" />-Instanz auf der rechten Seite des Ungleichheitsoperators.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="packetInformation1" /> und <paramref name="packetInformation2" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.IPProtectionLevel">
      <summary>Ein Wert, der die Einschränkung eines IPv6-Sockets auf einen angegebenen Bereich ermöglicht, z. B. Adressen mit demselben linklokalen oder standortlokalen Präfix.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.EdgeRestricted">
      <summary>Die IP-Schutzebene ist auf den Netzwerk-Edge beschränkt. Dieser Wert wird von Anwendungen verwendet, die für den Betrieb über das Internet konzipiert sind. Diese Einstellung lässt die NAT-Überquerung (Netzwerkadressenübersetzung) mithilfe der Windows Teredo-Implementierung nicht zu. Diese Anwendungen können IPv4-Firewalls umgehen und müssen daher vor Internetangriffen auf den geöffneten Anschluss geschützt werden. Unter Windows Server 2003 und Windows XP ist der Standardwert für die IP-Schutzebene für einen Socket "EdgeRestricted".</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Restricted">
      <summary>Die IP-Schutzebene ist eingeschränkt. Dieser Wert wird von Intranetanwendungen verwendet, die keine Internetszenarios implementieren. Diese Anwendungen werden im Allgemeinen nicht getestet oder vor Internetangriffen geschützt. Diese Einstellung beschränkt den empfangenen Datenverkehr auf linklokalen Datenverkehr.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unrestricted">
      <summary>Die IP-Schutzebene ist nicht eingeschränkt. Dieser Wert wird von Anwendungen verwendet, die für den Betrieb über das Internet konzipiert sind. Dazu zählen Anwendungen, die in Windows integrierte IPv6-NAT-Überquerungsfunktionen nutzen (z. B. Teredo). Diese Anwendungen können IPv4-Firewalls umgehen und müssen daher vor Internetangriffen auf den geöffneten Anschluss geschützt werden. Unter Windows Server 2008 R2 und Windows Vista ist der Standardwert für die IP-Schutzebene für einen Socket "Unrestricted".</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unspecified">
      <summary>Die IP-Schutzebene ist nicht angegeben. Unter Windows 7 und Windows Server 2008 R2 ist der Standardwert für die IP-Schutzebene für einen Socket "Unspecified".</summary>
    </member>
    <member name="T:System.Net.Sockets.IPv6MulticastOption">
      <summary>Enthält Optionswerte für den Beitritt zu einer IPv6-Multicast-Gruppe.</summary>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>Initialisiert eine neue Version der <see cref="T:System.Net.Sockets.IPv6MulticastOption" />-Klasse für die angegebene IP-Multicast-Gruppe.</summary>
      <param name="group">Die <see cref="T:System.Net.IPAddress" /> der Multicastgruppe.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.IPv6MulticastOption" />-Klasse mit der angegebenen IP-Multicastgruppe und der angegebenen Schnittstellenadresse.</summary>
      <param name="group">Die Gruppen-<see cref="T:System.Net.IPAddress" />.</param>
      <param name="ifindex">Die lokale Schnittstellenadresse.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ifindex" /> ist kleiner als 0.

oder -
<paramref name="ifindex" /> ist größer als 0x00000000FFFFFFFF.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.Group">
      <summary>Ruft die IP-Adresse einer Multicastgruppe ab oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Net.IPAddress" />, die die Internetadresse einer Multicastgruppe enthält.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.InterfaceIndex">
      <summary>Ruft den einer Multicastgruppe zugeordneten Schnittstellenindex ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.UInt64" />-Wert, der die Adresse der Schnittstelle angibt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert ist kleiner als 0 oder größer als 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="T:System.Net.Sockets.LingerOption">
      <summary>Gibt an, ob und wie lange ein <see cref="T:System.Net.Sockets.Socket" /> nach dem Aufrufen der <see cref="M:System.Net.Sockets.Socket.Close" />- oder <see cref="M:System.Net.Sockets.TcpClient.Close" />-Methode die Verbindung aufrecht erhält, wenn noch zu sendende Daten vorhanden sind.</summary>
    </member>
    <member name="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.LingerOption" />-Klasse.</summary>
      <param name="enable">
        <see langword="true" />, um die Verbindung nach dem Aufruf der <see cref="M:System.Net.Sockets.Socket.Close" />-Methode aufrechtzuerhalten, andernfalls <see langword="false" />.</param>
      <param name="seconds">Die Anzahl der Sekunden, für die die Verbindung nach dem Aufruf der <see cref="M:System.Net.Sockets.Socket.Close" />-Methode aufrechterhalten werden soll.</param>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.Enabled">
      <summary>Ruft einen Wert ab, der angibt, ob der Nachlauf verwendet werden soll, nachdem der <see cref="T:System.Net.Sockets.Socket" /> geschlossen wurde, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.Socket" /> nach Aufruf von <see cref="M:System.Net.Sockets.Socket.Close" /> den Nachlauf verwenden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.LingerTime">
      <summary>Ruft die Zeitspanne ab, für die die Verbindung nach Aufruf der <see cref="M:System.Net.Sockets.Socket.Close" />-Methode aufrechterhalten werden soll, wenn noch Daten zu senden sind, oder legt diese fest.</summary>
      <returns>Die Zeitspanne in Sekunden, für die die Verbindung nach dem Aufruf von <see cref="M:System.Net.Sockets.Socket.Close" /> beibehalten werden soll.</returns>
    </member>
    <member name="T:System.Net.Sockets.MulticastOption">
      <summary>Enthält <see cref="T:System.Net.IPAddress" />-Werte, die verwendet werden, um Multicastgruppen beizutreten oder diese zu verlassen.</summary>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>Initialisiert eine neue Version der <see cref="T:System.Net.Sockets.MulticastOption" />-Klasse für die angegebene IP-Multicast-Gruppe.</summary>
      <param name="group">Die <see cref="T:System.Net.IPAddress" /> der Multicastgruppe.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.MulticastOption" />-Klasse mit der angegebenen IP-Adresse der Multicastgruppe und dem angegebenen Schnittstellenindex.</summary>
      <param name="group">Die <see cref="T:System.Net.IPAddress" /> der Multicastgruppe.</param>
      <param name="interfaceIndex">Der Index der Schnittstelle, die zum Senden und Empfangen von Multicastpaketen verwendet wird.</param>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.MulticastOption" />-Klasse mit der Adresse der angegebenen IP-Multicast-Gruppe und der angegebenen lokalen IP-Adresse, die einer Netzwerkschnittstelle zugeordnet ist.</summary>
      <param name="group">Die Gruppen-<see cref="T:System.Net.IPAddress" />.</param>
      <param name="mcint">Die lokale <see cref="T:System.Net.IPAddress" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> ist <see langword="null" />.
- oder -
<paramref name="mcint" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.Group">
      <summary>Ruft die IP-Adresse einer Multicastgruppe ab oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Net.IPAddress" />, die die Internetadresse einer Multicastgruppe enthält.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.InterfaceIndex">
      <summary>Ruft den Index der Schnittstelle ab, die zum Senden und Empfangen von Multicastpaketen verwendet wird, oder legt diesen fest.</summary>
      <returns>Eine ganze Zahl, die den Index eines <see cref="T:System.Net.NetworkInformation.NetworkInterface" />-Arrayelements darstellt.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.LocalAddress">
      <summary>Ruft die einer Multicastgruppe zugeordnete lokale Adresse ab oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Net.IPAddress" />, die die einer Multicastgruppe zugeordnete lokale Adresse enthält.</returns>
    </member>
    <member name="T:System.Net.Sockets.NetworkStream">
      <summary>Stellt den zugrunde liegenden Datenstrom für den Netzwerkzugriff bereit.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Sockets.NetworkStream" />-Klasse für den angegebenen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="socket">Der <see cref="T:System.Net.Sockets.Socket" />, den der <see cref="T:System.Net.Sockets.NetworkStream" /> zum Senden und Empfangen von Daten verwendet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="socket" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Der <paramref name="socket" />-Parameter ist nicht verbunden.
- oder -
Die <see cref="P:System.Net.Sockets.Socket.SocketType" />-Eigenschaft des <paramref name="socket" />-Parameters ist nicht <see cref="F:System.Net.Sockets.SocketType.Stream" />.
- oder -
Der <paramref name="socket" />-Parameter befindet sich in einem nicht blockierenden Zustand.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.NetworkStream" />-Klasse für den angegebenen <see cref="T:System.Net.Sockets.Socket" /> mit dem angegebenen Besitz von <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="socket">Der <see cref="T:System.Net.Sockets.Socket" />, den der <see cref="T:System.Net.Sockets.NetworkStream" /> zum Senden und Empfangen von Daten verwendet.</param>
      <param name="ownsSocket">Legen Sie den Wert <see langword="true" /> fest, um anzugeben, dass der <see cref="T:System.Net.Sockets.NetworkStream" /> den Besitz des <see cref="T:System.Net.Sockets.Socket" /> übernimmt, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="socket" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Der <paramref name="socket" />-Parameter ist nicht verbunden.
- oder -
Der Wert der <see cref="P:System.Net.Sockets.Socket.SocketType" />-Eigenschaft des <paramref name="socket" />-Parameters ist nicht <see cref="F:System.Net.Sockets.SocketType.Stream" />.
- oder -
Der <paramref name="socket" />-Parameter befindet sich in einem nicht blockierenden Zustand.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Sockets.NetworkStream" />-Klasse für den angegebenen <see cref="T:System.Net.Sockets.Socket" /> mit den angegebenen Zugriffsrechten.</summary>
      <param name="socket">Der <see cref="T:System.Net.Sockets.Socket" />, den der <see cref="T:System.Net.Sockets.NetworkStream" /> zum Senden und Empfangen von Daten verwendet.</param>
      <param name="access">Eine bitweise Kombination der <see cref="T:System.IO.FileAccess" />-Werte, die den gewährten Zugriffstyp für <see cref="T:System.Net.Sockets.NetworkStream" /> über den angegebenen <see cref="T:System.Net.Sockets.Socket" /> angeben.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="socket" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Der <paramref name="socket" />-Parameter ist nicht verbunden.
- oder -
Die <see cref="P:System.Net.Sockets.Socket.SocketType" />-Eigenschaft des <paramref name="socket" />-Parameters ist nicht <see cref="F:System.Net.Sockets.SocketType.Stream" />.
- oder -
Der <paramref name="socket" />-Parameter befindet sich in einem nicht blockierenden Zustand.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Sockets.NetworkStream" />-Klasse für den angegebenen <see cref="T:System.Net.Sockets.Socket" /> mit den angegebenen Zugriffsrechten und dem angegebenen Besitz von <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="socket">Der <see cref="T:System.Net.Sockets.Socket" />, den der <see cref="T:System.Net.Sockets.NetworkStream" /> zum Senden und Empfangen von Daten verwendet.</param>
      <param name="access">Eine bitweise Kombination der <see cref="T:System.IO.FileAccess" />-Werte, die den gewährten Zugriffstyp für <see cref="T:System.Net.Sockets.NetworkStream" /> über den bereitgestellten <see cref="T:System.Net.Sockets.Socket" /> angibt.</param>
      <param name="ownsSocket">Legen Sie den Wert <see langword="true" /> fest, um anzugeben, dass der <see cref="T:System.Net.Sockets.NetworkStream" /> den Besitz des <see cref="T:System.Net.Sockets.Socket" /> übernimmt, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="socket" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Der <paramref name="socket" />-Parameter ist nicht verbunden.
- oder -
Die <see cref="P:System.Net.Sockets.Socket.SocketType" />-Eigenschaft des <paramref name="socket" />-Parameters ist nicht <see cref="F:System.Net.Sockets.SocketType.Stream" />.
- oder -
Der <paramref name="socket" />-Parameter befindet sich in einem nicht blockierenden Zustand.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Lesevorgang aus dem <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das dem Speicherort entspricht, an dem aus dem <see cref="T:System.Net.Sockets.NetworkStream" /> gelesene Daten gespeichert werden.</param>
      <param name="offset">Die Position in <paramref name="buffer" />, an der mit dem Speichern der Daten begonnen werden soll.</param>
      <param name="size">Die Anzahl der aus dem <see cref="T:System.Net.Sockets.NetworkStream" /> zu lesenden Bytes.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der nach Abschluss von <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> ausgeführt wird.</param>
      <param name="state">Ein Objekt, das zusätzliche, benutzerdefinierte Daten enthält.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das den asynchronen Aufruf darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="offset" />-Parameter ist kleiner als 0.
- oder -
Der <paramref name="offset" />-Parameter ist größer als die Länge des <paramref name="buffer" />-Parameters.
- oder -
Die <paramref name="size" /> ist kleiner als 0.
- oder -
Der <paramref name="size" />-Parameter ist größer als die Länge von <paramref name="buffer" /> abzüglich des Werts des <paramref name="offset" />-Parameters.</exception>
      <exception cref="T:System.IO.IOException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wird geschlossen.
- oder -
Beim Lesen aus dem Netzwerk ist ein Fehler aufgetreten.
- oder -
Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Schreibvorgang in einen Stream.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die Daten enthält, die in den <see cref="T:System.Net.Sockets.NetworkStream" /> geschrieben werden sollen.</param>
      <param name="offset">Die Position im <paramref name="buffer" />, an der mit dem Senden der Daten begonnen werden soll.</param>
      <param name="size">Die Anzahl der Bytes, die in den <see cref="T:System.Net.Sockets.NetworkStream" /> geschrieben werden sollen.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der nach Abschluss von <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> ausgeführt wird.</param>
      <param name="state">Ein Objekt, das zusätzliche, benutzerdefinierte Daten enthält.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das den asynchronen Aufruf darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="offset" />-Parameter ist kleiner als 0.
- oder -
Der <paramref name="offset" />-Parameter ist größer als die Länge von <paramref name="buffer" />.
- oder -
Der <paramref name="size" />-Parameter ist kleiner als 0.
- oder -
Der <paramref name="size" />-Parameter ist größer als die Länge von <paramref name="buffer" /> abzüglich des Werts des <paramref name="offset" />-Parameters.</exception>
      <exception cref="T:System.IO.IOException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wird geschlossen.
- oder -
Beim Schreiben in das Netzwerk ist ein Fehler aufgetreten.
- oder -
Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanRead">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.NetworkStream" /> Lesevorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn Daten aus dem Stream gelesen werden können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanSeek">
      <summary>Ruft einen Wert ab, der angibt, ob der Stream Suchvorgänge unterstützt. Diese Eigenschaft wird gegenwärtig nicht unterstützt. Sie gibt immer <see langword="false" /> zurück.</summary>
      <returns>In allen Fällen <see langword="false" />, um anzugeben, dass <see cref="T:System.Net.Sockets.NetworkStream" /> nicht eine bestimmte Position im Stream suchen kann.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanTimeout">
      <summary>Gibt an, ob Timeouteigenschaften für <see cref="T:System.Net.Sockets.NetworkStream" /> verwendet werden können.</summary>
      <returns>
        <see langword="true" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanWrite">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.NetworkStream" /> Schreibvorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn Daten in den <see cref="T:System.Net.Sockets.NetworkStream" /> geschrieben werden können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Close(System.Int32)">
      <summary>Schließt den <see cref="T:System.Net.Sockets.NetworkStream" /> nach der angegebenen Zeitspanne, in der Daten gesendet werden können.</summary>
      <param name="timeout">Eine 32-Bit-Ganzzahl mit Vorzeichen, mit der die Zeitspanne (Anzahl der Millisekunden) angegeben wird, in der ggf. restliche Daten vor dem Schließen gesendet werden können.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="timeout" />-Parameter ist kleiner als -1.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.DataAvailable">
      <summary>Ruft einen Wert ab, der angibt, ob im <see cref="T:System.Net.Sockets.NetworkStream" /> Daten für einen Lesevorgang verfügbar sind.</summary>
      <returns>
        <see langword="true" />, wenn im Stream Daten für den Lesevorgang verfügbar sind, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wird geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Verwenden Sie die <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />-Eigenschaft, um den spezifischen Fehlercode abzurufen. In der Dokumentation zu API-Fehlercodes unter Windows Sockets, Version 2 finden Sie eine ausführliche Beschreibung des Fehlers.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Net.Sockets.NetworkStream" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)">
      <summary>Behandelt das Ende eines asynchronen Lesevorgangs.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das einen asynchronen Aufruf darstellt.</param>
      <returns>Die Anzahl der aus dem <see cref="T:System.Net.Sockets.NetworkStream" /> gelesenen Bytes.</returns>
      <exception cref="T:System.ArgumentException">Der <paramref name="asyncResult" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wird geschlossen.
- oder -
Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)">
      <summary>Behandelt das Ende eines asynchronen Schreibvorgangs.</summary>
      <param name="asyncResult">Das <see cref="T:System.IAsyncResult" />, das den asynchronen Aufruf darstellt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="asyncResult" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wird geschlossen.
- oder -
Beim Schreiben in das Netzwerk ist ein Fehler aufgetreten.
- oder -
Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Finalize">
      <summary>Gibt alle vom <see cref="T:System.Net.Sockets.NetworkStream" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Flush">
      <summary>Schreibt Daten aus dem Stream weg. Diese Methode ist für eine spätere Verwendung vorgesehen.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Leert Daten aus dem Stream als asynchroner Vorgang.</summary>
      <param name="cancellationToken">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass dieser Vorgang abgebrochen werden muss.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Length">
      <summary>Gibt die Länge der im Stream verfügbaren Daten an. Diese Eigenschaft wird gegenwärtig nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns>Die Länge der im Stream verfügbaren Daten.</returns>
      <exception cref="T:System.NotSupportedException">Jede Verwendung dieser Eigenschaft.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Position">
      <summary>Ruft die aktuelle Position im Stream ab oder legt diese fest. Diese Eigenschaft wird gegenwärtig nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns>Die aktuelle Position in dem Stream.</returns>
      <exception cref="T:System.NotSupportedException">Jede Verwendung dieser Eigenschaft.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest Daten aus <see cref="T:System.Net.Sockets.NetworkStream" /> und speichert sie in einem Bytearray.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das dem Speicherort entspricht, an dem aus dem <see cref="T:System.Net.Sockets.NetworkStream" /> gelesene Daten gespeichert werden.</param>
      <param name="offset">Die Position im <paramref name="buffer" />, an der mit dem Speichern der Daten begonnen werden soll.</param>
      <param name="size">Die Anzahl der aus dem <see cref="T:System.Net.Sockets.NetworkStream" /> zu lesenden Bytes.</param>
      <returns>Die Anzahl der aus dem <see cref="T:System.Net.Sockets.NetworkStream" /> gelesenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.

oder -
<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.

- oder -
<paramref name="size" /> ist kleiner als 0.
- oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus <paramref name="offset" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.IO.IOException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.
- oder -
Beim Lesen aus dem Netzwerk tritt ein Fehler auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Span{System.Byte})">
      <summary>Liest Daten aus <see cref="T:System.Net.Sockets.NetworkStream" /> und speichert sie in eine Bytespanne im Speicher.</summary>
      <param name="buffer">Ein Speicherbereich, in dem aus <see cref="T:System.Net.Sockets.NetworkStream" /> gelesene Daten gespeichert werden.</param>
      <returns>Die Anzahl der aus dem <see cref="T:System.Net.Sockets.NetworkStream" /> gelesenen Bytes.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.IO.IOException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.
- oder -
Beim Lesen aus dem Netzwerk tritt ein Fehler auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Readable">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.NetworkStream" /> gelesen werden kann, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, um anzugeben, dass der <see cref="T:System.Net.Sockets.NetworkStream" /> gelesen werden kann, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Liest Daten aus <see cref="T:System.Net.Sockets.NetworkStream" /> und speichert sie als asynchronen Vorgang in einen festgelegten Bereich eines Bytearrays.</summary>
      <param name="buffer">Der Puffer, in den die Daten geschrieben werden sollen.</param>
      <param name="offset">Die Position im <paramref name="buffer" />, an der mit dem Speichern der Daten begonnen werden soll.</param>
      <param name="size">Die Anzahl der aus dem <see cref="T:System.Net.Sockets.NetworkStream" /> zu lesenden Bytes.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert seiner <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft enthält die Gesamtzahl der Bytes, die in <paramref name="buffer" /> gelesen werden.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.IO.IOException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.
- oder -
Beim Lesen aus dem Netzwerk tritt ein Fehler auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Liest Daten aus <see cref="T:System.Net.Sockets.NetworkStream" /> und speichert sie als asynchronen Vorgang in einem Bytespeicherbereich.</summary>
      <param name="buffer">Der Puffer, in den die Daten geschrieben werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns>Eine <see cref="T:System.Threading.Tasks.ValueTask`1" />, die den asynchronen Lesevorgang darstellt. Der Wert seiner <see cref="P:System.Threading.Tasks.ValueTask`1.Result" />-Eigenschaft enthält die Gesamtzahl der Bytes, die in <paramref name="buffer" /> gelesen werden.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.IO.IOException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.
- oder -
Beim Lesen aus dem Netzwerk tritt ein Fehler auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadByte">
      <summary>Liest ein Byte aus <see cref="T:System.Net.Sockets.NetworkStream" /> und erhöht die Position im Datenstrom um ein Byte, oder gibt „-1“ zurück, wenn das Ende des Datenstroms erreicht ist.</summary>
      <returns>Das Byte ohne Vorzeichen, umgewandelt in <see langword="Int32" />, oder -1, wenn das Ende des Streams erreicht ist.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.IO.IOException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.
- oder -
Beim Lesen aus dem Netzwerk tritt ein Fehler auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.ReadTimeout">
      <summary>Ruft die Zeitspanne ab, in der ein Lesevorgang während des Wartens auf Daten blockiert wird, oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Int32" />, das die Zeitspanne in Millisekunden angibt, nach deren Ablauf ein Lesevorgang fehlschlägt. Der Standardwert <see cref="F:System.Threading.Timeout.Infinite" /> gibt an, dass der Lesevorgang über kein Timeout verfügt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner oder gleich 0 (null) und nicht <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Legt die aktuelle Position des Streams auf den angegebenen Wert fest. Diese Methode wird gegenwärtig nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="offset">Dieser Parameter wird nicht verwendet.</param>
      <param name="origin">Dieser Parameter wird nicht verwendet.</param>
      <returns>Die Position im Stream.</returns>
      <exception cref="T:System.NotSupportedException">Jede Verwendung dieser Eigenschaft.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)">
      <summary>Legt die Länge des Streams fest. Diese Methode löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="value">Dieser Parameter wird nicht verwendet.</param>
      <exception cref="T:System.NotSupportedException">Jede Verwendung dieser Eigenschaft.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Socket">
      <summary>Ruft die zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> ab.</summary>
      <returns>Ein <see cref="T:System.Net.Sockets.Socket" />, der die zugrunde liegende Netzwerkverbindung darstellt.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Schreibt Daten aus einem festgelegten Bereich eines Bytearrays in <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die Daten enthält, die in den <see cref="T:System.Net.Sockets.NetworkStream" /> geschrieben werden sollen.</param>
      <param name="offset">Die Position im <paramref name="buffer" />, an der mit dem Schreiben von Daten begonnen werden soll.</param>
      <param name="size">Die Anzahl der Bytes, die in den <see cref="T:System.Net.Sockets.NetworkStream" /> geschrieben werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="offset" />-Parameter ist kleiner als 0.
- oder -
Der <paramref name="offset" />-Parameter ist größer als die Länge von <paramref name="buffer" />.
- oder -
Der <paramref name="size" />-Parameter ist kleiner als 0.
- oder -
Der <paramref name="size" />-Parameter ist größer als die Länge von <paramref name="buffer" /> abzüglich des Werts des <paramref name="offset" />-Parameters.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.IO.IOException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.
- oder -
Beim Schreiben in das Netzwerk ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Schreibt Daten aus einer schreibgeschützten Bytespanne in<see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <param name="buffer">Die Daten, die in <see cref="T:System.Net.Sockets.NetworkStream" /> geschrieben werden sollen.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.IO.IOException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.
- oder -
Beim Schreiben in das Netzwerk ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Writeable">
      <summary>Ruft einen Wert ab, der angibt, ob in den <see cref="T:System.Net.Sockets.NetworkStream" /> geschrieben werden kann.</summary>
      <returns>
        <see langword="true" />, wenn Daten in den Stream geschrieben werden können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Schreibt Daten aus dem angegebenen Bereich eines Bytearrays als asynchronen Vorgang in <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <param name="buffer">Ein Bytearray, das die Daten enthält, die in <see cref="T:System.Net.Sockets.NetworkStream" /> geschrieben werden sollen.</param>
      <param name="offset">Die Position im <paramref name="buffer" />, an der mit dem Schreiben von Daten begonnen werden soll.</param>
      <param name="size">Die Anzahl der Bytes, die in den <see cref="T:System.Net.Sockets.NetworkStream" /> geschrieben werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="offset" />-Parameter ist kleiner als 0.
- oder -
Der <paramref name="offset" />-Parameter ist größer als die Länge von <paramref name="buffer" />.
- oder -
Der <paramref name="size" />-Parameter ist kleiner als 0.
- oder -
Der <paramref name="size" />-Parameter ist größer als die Länge von <paramref name="buffer" /> abzüglich des Werts des <paramref name="offset" />-Parameters.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.IO.IOException">Beim Schreiben in das Netzwerk ist ein Fehler aufgetreten.
- oder -
Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Schreibt Daten aus einem schreibgeschützten Bytespeicherbereich als asynchronen Vorgang in <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <param name="buffer">Ein Speicherbereich, der die Daten enthält, die in <see cref="T:System.Net.Sockets.NetworkStream" /> geschrieben werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.IO.IOException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.
- oder -
Beim Schreiben in das Netzwerk ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteByte(System.Byte)">
      <summary>Schreibt ein Byte an die aktuellen Position in <see cref="T:System.Net.Sockets.NetworkStream" /> und erhöht die aktuelle Position im Datenstrom um ein Byte.</summary>
      <param name="value">Das Byte, das in den Stream geschrieben werden soll.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.IO.IOException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.
- oder -
Beim Schreiben in das Netzwerk ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.NetworkStream" /> ist geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.WriteTimeout">
      <summary>Ruft die Zeitspanne ab, in der ein Schreibvorgang während des Wartens auf Daten blockiert wird, oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Int32" />, das die Zeitspanne in Millisekunden angibt, nach deren Ablauf ein Schreibvorgang fehlschlägt. Der Standardwert <see cref="F:System.Threading.Timeout.Infinite" /> gibt an, dass der Schreibvorgang über kein Timeout verfügt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner oder gleich 0 (null) und nicht <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="T:System.Net.Sockets.ProtocolFamily">
      <summary>Gibt den Protokolltyp an, den eine Instanz der <see cref="T:System.Net.Sockets.Socket" />-Klasse verwenden kann.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.AppleTalk">
      <summary>AppleTalk-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Atm">
      <summary>Systemeigenes Protokoll für ATM-Dienste.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Banyan">
      <summary>Banyan-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ccitt">
      <summary>CCITT-Protokoll, z. B. X.25.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Chaos">
      <summary>MIT CHAOS-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Cluster">
      <summary>Microsoft Cluster-Produkte-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ControllerAreaNetwork">
      <summary>Protokoll des Controllerbereichsnetzwerks.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataKit">
      <summary>DataKit-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataLink">
      <summary>Direct Data Link-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DecNet">
      <summary>DECNet-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ecma">
      <summary>ECMA (European Computer Manufacturers Association)-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.FireFox">
      <summary>FireFox-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.HyperChannel">
      <summary>NSC HyperChannel-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ieee12844">
      <summary>Protokoll der IEEE 1284.4-Arbeitsgruppe.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ImpLink">
      <summary>ARPANET IMP-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetwork">
      <summary>IP-Protokoll, Version 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetworkV6">
      <summary>IP-Protokoll, Version 6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ipx">
      <summary>IPX- oder SPX-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Irda">
      <summary>IrDA-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Iso">
      <summary>ISO-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Lat">
      <summary>LAT-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Max">
      <summary>MAX-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetBios">
      <summary>NetBIOS-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetworkDesigners">
      <summary>Network Designers OSI-Gateway-fähiges Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NS">
      <summary>Xerox NS-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Osi">
      <summary>OSI-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Packet">
      <summary>Protokoll für Low-Level-Pakete.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Pup">
      <summary>PUP-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Sna">
      <summary>IBM SNA-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unix">
      <summary>UNIX-Hostadressprotokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unknown">
      <summary>Unbekanntes Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unspecified">
      <summary>Nicht angegebenes Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.VoiceView">
      <summary>VoiceView-Protokoll.</summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary>Gibt die Protokolle an, die von der <see cref="T:System.Net.Sockets.Socket" />-Klasse unterstützt werden.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ggp">
      <summary>Gateway To Gateway-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Icmp">
      <summary>Internet Control Message-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IcmpV6">
      <summary>Internet Control Message Protocol für IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Idp">
      <summary>Internet Datagram Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Igmp">
      <summary>Internet Group Management-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IP">
      <summary>Internetprotokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecAuthenticationHeader">
      <summary>IPv6-Authentifizierungsheader. Weitere Informationen finden Sie unter RFC 2292, Abschnitt 2.2.1, verfügbar unter https://www.ietf.org.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecEncapsulatingSecurityPayload">
      <summary>IPv6-Encapsulating Security Payload-Header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv4">
      <summary>Internetprotokoll, Version 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6">
      <summary>Internet Protocol, Version 6 (IPv6).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6DestinationOptions">
      <summary>IPv6-Destination Options-Header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6FragmentHeader">
      <summary>IPv6-Fragment-Header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6HopByHopOptions">
      <summary>IPv6-Hop by Hop Options-Header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6NoNextHeader">
      <summary>IPv6-No next-Header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6RoutingHeader">
      <summary>IPv6-Routing-Header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ipx">
      <summary>Internet Packet Exchange-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.ND">
      <summary>Net Disk-Protokoll (inoffiziell).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Pup">
      <summary>PARC Universal Packet Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Raw">
      <summary>Unformatiertes IP-Paketprotokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Spx">
      <summary>Sequenced Packet Exchange-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.SpxII">
      <summary>Sequenced Packet Exchange-Protokoll, Version 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary>Transmission Control Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Udp">
      <summary>User Datagram-Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary>Unbekanntes Protokoll.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary>Nicht definiertes Protokoll.</summary>
    </member>
    <member name="T:System.Net.Sockets.SafeSocketHandle">
      <summary>Stellt eine Wrapperklasse für ein Sockethandle dar.</summary>
    </member>
    <member name="M:System.Net.Sockets.SafeSocketHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SafeSocketHandle" />-Klasse.</summary>
      <param name="preexistingHandle">Das bereits vorhandene Handle, das verwendet werden soll.</param>
      <param name="ownsHandle">
        <see langword="true" />, um das Handle während der Abschlussphase zuverlässig freizugeben. <see langword="false" />, um eine zuverlässige Freigabe zu verhindern (dies wird nicht empfohlen).</param>
    </member>
    <member name="T:System.Net.Sockets.SelectMode">
      <summary>Definiert die Abrufmodi für die <see cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" />-Methode.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectError">
      <summary>Fehlerstatusmodus.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectRead">
      <summary>Lesestatusmodus.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectWrite">
      <summary>Schreibstatusmodus.</summary>
    </member>
    <member name="T:System.Net.Sockets.SendPacketsElement">
      <summary>Stellt ein Element in einem <see cref="T:System.Net.Sockets.SendPacketsElement" />-Array dar.</summary>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SendPacketsElement" />-Klasse unter Verwendung des angegebenen Puffers.</summary>
      <param name="buffer">Ein Bytearray, das Daten enthält, die mit der <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode gesendet werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Parameter darf nicht NULL sein.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SendPacketsElement" />-Klasse mit dem angegebenen Bereich des Puffers.</summary>
      <param name="buffer">Ein Bytearray, das Daten enthält, die mit der <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode gesendet werden sollen.</param>
      <param name="offset">Der Offset in Bytes vom Anfang des <paramref name="buffer" /> zur Position im <paramref name="buffer" /> zum Beginnen des Sendevorgangs für die im <paramref name="buffer" />-Parameter angegebenen Daten.</param>
      <param name="count">Die Anzahl der zu sendenden Bytes, beginnend beim <paramref name="offset" />-Parameter. Wenn <paramref name="count" /> 0 (null) ist, werden keine Bytes gesendet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Parameter darf nicht NULL sein.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="offset" />-Parameter und der <paramref name="count" />-Parameter müssen größer oder gleich 0 (null) sein.
<paramref name="offset" /> und <paramref name="count" /> müssen kleiner als die Größe des Puffers sein.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SendPacketsElement" />-Klasse unter Verwendung des angegebenen Bereichs des Puffers mit einer Option zum Kombinieren dieses Elements mit dem nächsten Element in einer einzelnen Sendeanforderung von der Socketsebene zur Übertragung.</summary>
      <param name="buffer">Ein Bytearray, das Daten enthält, die mit der <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode gesendet werden sollen.</param>
      <param name="offset">Der Offset in Bytes vom Anfang des <paramref name="buffer" /> zur Position im <paramref name="buffer" /> zum Beginnen des Sendevorgangs für die im <paramref name="buffer" />-Parameter angegebenen Daten.</param>
      <param name="count">Die Anzahl der zu sendenden Bytes, beginnend beim <paramref name="offset" />-Parameter. Wenn <paramref name="count" /> 0 (null) ist, werden keine Bytes gesendet.</param>
      <param name="endOfPacket">Ein boolescher Wert, der angibt, dass dieses Element nicht mit dem nächsten Element in einer Sendeanforderung von der Socketsebene zum Transport kombiniert werden soll. Dieses Flag wird zum genaueren Steuern des Inhalts der einzelnen Nachrichten bei einem datagramm- oder nachrichtenorientierten Socket verwendet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Parameter darf nicht NULL sein.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="offset" />-Parameter und der <paramref name="count" />-Parameter müssen größer oder gleich 0 (null) sein.
<paramref name="offset" /> und <paramref name="count" /> müssen kleiner als die Größe des Puffers sein.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SendPacketsElement" />-Klasse mit dem angegebenen <see cref="T:System.IO.FileStream" />-Objekt.</summary>
      <param name="fileStream">Die Datei, die mit der <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode übertragen werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileStream" /> ist nicht für asynchrone Lese- und Schreibvorgänge geöffnet.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> darf nicht NULL sein.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SendPacketsElement" />-Klasse mithilfe des angegebenen Bereichs eines <see cref="T:System.IO.FileStream" />-Objekts.</summary>
      <param name="fileStream">Die Datei, die mit der <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode übertragen werden soll.</param>
      <param name="offset">Der Offset in Bytes vom Anfang der Datei zur Position in der Datei zum Beginnen des Sendevorgangs für die Bytes in der Datei.</param>
      <param name="count">Die Anzahl der zu sendenden Bytes, beginnend bei <paramref name="offset" />. Wenn <paramref name="count" /> 0 (null) ist, wird die ganze Datei gesendet.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="fileStream" />-Parameter muss für asynchrone Lese- und Schreibvorgänge geöffnet worden sein.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="fileStream" />-Parameter darf nicht <see langword="null" /> sein.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="offset" />-Parameter und der <paramref name="count" />-Parameter müssen größer oder gleich 0 (null) sein.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SendPacketsElement" />-Klasse unter Verwendung des angegebenen Bereichs eines <see cref="T:System.IO.FileStream" />-Objekts mit einer Option zum Kombinieren dieses Elements mit dem nächsten Element in einer einzelnen Sendeanforderung von der Socketsebene zur Übertragung.</summary>
      <param name="fileStream">Die Datei, die mit der <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode übertragen werden soll.</param>
      <param name="offset">Der Offset in Bytes vom Anfang der Datei zur Position in der Datei zum Beginnen des Sendevorgangs für die Bytes in der Datei.</param>
      <param name="count">Die Anzahl der zu sendenden Bytes, beginnend beim offset-Parameter. Wenn der count-Wert 0 (null) ist, wird die ganze Datei gesendet.</param>
      <param name="endOfPacket">Gibt an, dass dieses Element nicht mit dem nächsten Element in einer Sendeanforderung von der Socketsebene zum Transport kombiniert werden soll. Dieses Flag wird zum genaueren Steuern des Inhalts der einzelnen Nachrichten bei einem datagramm- oder nachrichtenorientierten Socket verwendet.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="fileStream" />-Parameter muss für asynchrone Lese- und Schreibvorgänge geöffnet worden sein.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="fileStream" />-Parameter darf nicht <see langword="null" /> sein.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="offset" />-Parameter und der <paramref name="count" />-Parameter müssen größer oder gleich 0 (null) sein.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SendPacketsElement" />-Klasse unter Verwendung der angegebenen Datei.</summary>
      <param name="filepath">Der Dateiname der Datei, die mit der <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode übertragen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="filepath" />-Parameter darf nicht NULL sein.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SendPacketsElement" />-Klasse mit dem angegebenen Bereich der Datei.</summary>
      <param name="filepath">Der Dateiname der Datei, die mit der <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode übertragen werden soll.</param>
      <param name="offset">Der Offset in Bytes vom Anfang der Datei zur Position in der Datei zum Beginnen des Sendevorgangs für die im <paramref name="filepath" />-Parameter angegebene Datei.</param>
      <param name="count">Die Anzahl der zu sendenden Bytes, beginnend beim <paramref name="offset" />-Parameter. Wenn <paramref name="count" /> 0 (null) ist, wird die ganze Datei gesendet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="filepath" />-Parameter darf nicht NULL sein.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="offset" />-Parameter und der <paramref name="count" />-Parameter müssen größer oder gleich 0 (null) sein.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SendPacketsElement" />-Klasse unter Verwendung des angegebenen Bereichs der Datei mit einer Option zum Kombinieren dieses Elements mit dem nächsten Element in einer einzelnen Sendeanforderung von der Socketsebene zur Übertragung.</summary>
      <param name="filepath">Der Dateiname der Datei, die mit der <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode übertragen werden soll.</param>
      <param name="offset">Der Offset in Bytes vom Anfang der Datei zur Position in der Datei zum Beginnen des Sendevorgangs für die im <paramref name="filepath" />-Parameter angegebene Datei.</param>
      <param name="count">Die Anzahl der zu sendenden Bytes, beginnend beim <paramref name="offset" />-Parameter. Wenn <paramref name="count" /> 0 (null) ist, wird die ganze Datei gesendet.</param>
      <param name="endOfPacket">Ein boolescher Wert, der angibt, dass dieses Element nicht mit dem nächsten Element in einer Sendeanforderung von der Socketsebene zum Transport kombiniert werden soll. Dieses Flag wird zum genaueren Steuern des Inhalts der einzelnen Nachrichten bei einem datagramm- oder nachrichtenorientierten Socket verwendet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="filepath" />-Parameter darf nicht NULL sein.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="offset" />-Parameter und der <paramref name="count" />-Parameter müssen größer oder gleich 0 (null) sein.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SendPacketsElement" />-Klasse mit dem angegebenen Bereich der Datei.</summary>
      <param name="filepath">Der Dateiname der Datei, die mit der <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode übertragen werden soll.</param>
      <param name="offset">Der Offset in Bytes vom Anfang der Datei zur Position in der Datei zum Beginnen des Sendevorgangs für die im <paramref name="filepath" />-Parameter angegebene Datei.</param>
      <param name="count">Die Anzahl der zu sendenden Bytes, beginnend bei <paramref name="offset" />. Wenn <paramref name="count" /> 0 (null) ist, wird die ganze Datei gesendet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="filepath" />-Parameter darf nicht <see langword="null" /> sein.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="offset" />-Parameter und der <paramref name="count" />-Parameter müssen größer oder gleich 0 (null) sein.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SendPacketsElement" />-Klasse unter Verwendung des angegebenen Bereichs der Datei mit einer Option zum Kombinieren dieses Elements mit dem nächsten Element in einer einzelnen Sendeanforderung von der Socketsebene zur Übertragung.</summary>
      <param name="filepath">Der Dateiname der Datei, die mit der <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode übertragen werden soll.</param>
      <param name="offset">Der Offset in Bytes vom Anfang der Datei zur Position in der Datei zum Beginnen des Sendevorgangs für die im <paramref name="filepath" />-Parameter angegebene Datei.</param>
      <param name="count">Die Anzahl der zu sendenden Bytes, beginnend beim <paramref name="offset" />-Parameter. Wenn <paramref name="count" /> 0 (null) ist, wird die ganze Datei gesendet.</param>
      <param name="endOfPacket">Gibt an, dass dieses Element nicht mit dem nächsten Element in einer Sendeanforderung von der Socketsebene zum Transport kombiniert werden soll. Dieses Flag wird zum genaueren Steuern des Inhalts der einzelnen Nachrichten bei einem datagramm- oder nachrichtenorientierten Socket verwendet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="filepath" />-Parameter darf nicht <see langword="null" /> sein.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="offset" />-Parameter und der <paramref name="count" />-Parameter müssen größer oder gleich 0 (null) sein.</exception>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Buffer">
      <summary>Ruft den Puffer ab, der gesendet werden soll, wenn das <see cref="T:System.Net.Sockets.SendPacketsElement" />-Objekt mit einem <paramref name="buffer" />-Parameter initialisiert wurde.</summary>
      <returns>Der Byte Puffer, der gesendet werden <see cref="T:System.Net.Sockets.SendPacketsElement" /> soll, wenn das Objekt mit <paramref name="buffer" /> einem-Parameter initialisiert wurde.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Count">
      <summary>Ruft die Anzahl der zu sendenden Bytes ab.</summary>
      <returns>Der Anzahl der zu sendenden Bytes, wenn die <see cref="T:System.Net.Sockets.SendPacketsElement" />-Klasse mit einem <paramref name="count" />-Parameter initialisiert wurde.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.EndOfPacket">
      <summary>Ruft einen booleschen Wert ab, der angibt, ob dieses Element nicht mit dem nächsten Element in einer Sendeanforderung von der Socketsebene zum Transport kombiniert werden soll.</summary>
      <returns>Ein boolescher Wert, der angibt, ob dieses Element nicht mit dem nächsten Element in einer Sendeanforderung kombiniert werden soll.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FilePath">
      <summary>Ruft den Dateinamen der zu sendenden Datei ab, wenn das <see cref="T:System.Net.Sockets.SendPacketsElement" />-Objekt mit einem <paramref name="filepath" />-Parameter initialisiert wurde.</summary>
      <returns>Der Dateiname der Datei, die gesendet <see cref="T:System.Net.Sockets.SendPacketsElement" /> werden soll, wenn das- <paramref name="filepath" /> Objekt mit einem-Parameter initialisiert wurde.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FileStream">
      <summary>Ruft die Objektdarstellung der zu sendenden Datei ab, wenn das <see cref="T:System.Net.Sockets.SendPacketsElement" />-Objekt mit einem <see cref="T:System.IO.FileStream" />-Parameter initialisiert wurde.</summary>
      <returns>Eine Objektdarstellung der Datei, die gesendet werden soll <see cref="T:System.Net.Sockets.SendPacketsElement" /> , wenn das-Objekt mit <see cref="T:System.IO.FileStream" /> einem-Parameter initialisiert wurde.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Offset">
      <summary>Ruft den Offset in Bytes vom Anfang des Datenpuffers oder der Datei zur Position im Puffer oder in der Datei zum Beginnen des Sendevorgangs für die Daten ab.</summary>
      <returns>Der Offset in Bytes vom Anfang des Datenpuffers oder der Datei zur Position im Puffer oder in der Datei zum Beginnen des Sendevorgangs für die Daten.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.OffsetLong">
      <summary>Ruft den Offset in Bytes vom Anfang des Datenpuffers oder der Datei zur Position im Puffer oder in der Datei zum Beginnen des Sendevorgangs für die Daten ab.</summary>
      <returns>Der Offset in Bytes vom Anfang des Datenpuffers oder der Datei zur Position im Puffer oder in der Datei zum Beginnen des Sendevorgangs für die Daten.</returns>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary>Implementiert die Berkeley-Sockets-Schnittstelle.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.Socket" />-Klasse unter Verwendung der angegebenen Adressfamilie sowie des angegebenen Sockettyps und Protokolls.</summary>
      <param name="addressFamily">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte.</param>
      <param name="socketType">Einer der <see cref="T:System.Net.Sockets.SocketType" />-Werte.</param>
      <param name="protocolType">Einer der <see cref="T:System.Net.Sockets.ProtocolType" />-Werte.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Die Kombination von <paramref name="addressFamily" />, <paramref name="socketType" /> und <paramref name="protocolType" /> führt zu einem ungültigen Socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketInformation)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.Socket" />-Klasse mit dem angegebenen Wert, der von <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" /> zurückgegeben wird.</summary>
      <param name="socketInformation">Die von <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" /> zurückgegebenen Socketinformationen.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.Socket" />-Klasse unter Verwendung der angegebenen Sockettyps und Protokolls.</summary>
      <param name="socketType">Einer der <see cref="T:System.Net.Sockets.SocketType" />-Werte.</param>
      <param name="protocolType">Einer der <see cref="T:System.Net.Sockets.ProtocolType" />-Werte.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Die Kombination von <paramref name="socketType" /> und <paramref name="protocolType" /> führt zu einem ungültigen Socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Accept">
      <summary>Erstellt einen neuen <see cref="T:System.Net.Sockets.Socket" /> für eine neu erstellte Verbindung.</summary>
      <returns>Ein <see cref="T:System.Net.Sockets.Socket" /> für eine neu erstellte Verbindung.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Der annehmende Socket überwacht keine Verbindungen. Vor dem Aufruf von <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> müssen Sie <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> und <see cref="M:System.Net.Sockets.Socket.Accept" /> aufrufen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Beginnt einen asynchronen Vorgang, um eine eingehende Verbindung anzunehmen.</summary>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter wird nach dem Abschluss des Vorgangs ausgelöst.
<see langword="false" />, wenn der E/A-Vorgang synchron abgeschlossen wurde. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter wird nicht ausgelöst, und das als Parameter übergebene <paramref name="e" />-Objekt kann direkt nach der Rückgabe des Methodenaufrufs untersucht werden, um die Ergebnisse des Vorgangs abzurufen.</returns>
      <exception cref="T:System.ArgumentException">Ein Argument ist ungültig. Diese Ausnahme tritt auf, wenn der bereitgestellte Puffer nicht groß genug ist. Der Puffer muss wenigstens 2 * (sizeof(SOCKADDR_STORAGE + 16) Bytes betragen.
Diese Ausnahme tritt auch auf, wenn mehrere Puffer angegeben werden und die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />-Eigenschaft nicht NULL ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Argument liegt außerhalb des gültigen Bereichs. Die Ausnahme tritt auf, wenn <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> kleiner als 0 ist.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde eine ungültige Operation angefordert. Diese Ausnahme tritt auf, wenn der annehmende <see cref="T:System.Net.Sockets.Socket" /> keine Verbindungen überwacht oder der angenommene Socket gebunden ist.
Sie müssen die <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />-Methode und die <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />-Methode aufrufen, bevor Sie die <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode aufrufen.
Diese Ausnahme tritt auch auf, wenn der Socket bereits verbunden ist oder bereits ein Socketvorgang mit dem angegebenen <paramref name="e" />-Parameter ausgeführt wird.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary>Ruft die Adressfamilie des <see cref="T:System.Net.Sockets.Socket" /> ab.</summary>
      <returns>Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Available">
      <summary>Ruft die Datenmenge ab, die über das Netzwerk empfangen wurde und gelesen werden kann.</summary>
      <returns>Die Anzahl der Datenbytes, die vom Netzwerk empfangen wurden und zum Lesen zur Verfügung stehen.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Vorgang, um eine eingehende Verbindung anzunehmen.</summary>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone <see cref="T:System.Net.Sockets.Socket" />-Erstellung verweist.</returns>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows NT erforderlich.</exception>
      <exception cref="T:System.InvalidOperationException">Der annehmende Socket überwacht keine Verbindungen. Vor dem Aufruf von <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> müssen Sie <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> und <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> aufrufen.
- oder -
Der angenommene Socket ist gebunden.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> ist kleiner als 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Vorgang, um eine eingehende Verbindung anzunehmen, und empfängt den ersten von der Clientanwendung gesendeten Datenblock.</summary>
      <param name="receiveSize">Die Anzahl der Bytes vom Absender, die angenommen werden sollen.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone <see cref="T:System.Net.Sockets.Socket" />-Erstellung verweist.</returns>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows NT erforderlich.</exception>
      <exception cref="T:System.InvalidOperationException">Der annehmende Socket überwacht keine Verbindungen. Vor dem Aufruf von <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> müssen Sie <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> und <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> aufrufen.
- oder -
Der angenommene Socket ist gebunden.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> ist kleiner als 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Vorgang, um eine eingehende Verbindung von einem angegebenen Socket anzunehmen, und empfängt den ersten von der Clientanwendung gesendeten Datenblock.</summary>
      <param name="acceptSocket">Das angenommene <see cref="T:System.Net.Sockets.Socket" />-Objekt. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="receiveSize">Die maximale Anzahl der zu empfangenden Bytes.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone <see cref="T:System.Net.Sockets.Socket" />-Objekterstellung verweist.</returns>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows NT erforderlich.</exception>
      <exception cref="T:System.InvalidOperationException">Der annehmende Socket überwacht keine Verbindungen. Vor dem Aufruf von <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> müssen Sie <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> und <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> aufrufen.
- oder -
Der angenommene Socket ist gebunden.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> ist kleiner als 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>Beginnt eine asynchrone Anforderung einer Remotehostverbindung.</summary>
      <param name="remoteEP">Ein <see cref="T:System.Net.EndPoint" />, der den Remotehost darstellt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Verbindung verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein höher in der Aufrufliste befindlicher Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde durch den Aufruf von <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> in einem Wartezustand platziert, oder ein asynchroner Vorgang wird bereits ausgeführt.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt eine asynchrone Anforderung einer Remotehostverbindung. Der Host wird durch eine <see cref="T:System.Net.IPAddress" /> und eine Anschlussnummer angegeben.</summary>
      <param name="address">Die <see cref="T:System.Net.IPAddress" /> des Remotehosts.</param>
      <param name="port">Die Portnummer des Remotehosts.</param>
      <param name="requestCallback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Verbindungsvorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Verbindungsvorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Verbindung verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Net.Sockets.Socket" /> ist kein Mitglied der Socketfamilie.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Portnummer ist ungültig.</exception>
      <exception cref="T:System.ArgumentException">Die Länge von <paramref name="address" /> ist 0 (null).</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde durch den Aufruf von <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> in einem Wartezustand platziert, oder ein asynchroner Vorgang wird bereits ausgeführt.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt eine asynchrone Anforderung einer Remotehostverbindung. Der Host wird durch ein <see cref="T:System.Net.IPAddress" />-Array und eine Anschlussnummer angegeben.</summary>
      <param name="addresses">Mindestens eine <see cref="T:System.Net.IPAddress" />, die den Remotehost angibt.</param>
      <param name="port">Die Portnummer des Remotehosts.</param>
      <param name="requestCallback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Verbindungsvorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Verbindungsvorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchronen Verbindungen verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Diese Methode ist für Sockets gültig, die <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> verwenden.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Portnummer ist ungültig.</exception>
      <exception cref="T:System.ArgumentException">Die Länge von <paramref name="address" /> ist 0 (null).</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde durch den Aufruf von <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> in einem Wartezustand platziert, oder ein asynchroner Vorgang wird bereits ausgeführt.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt eine asynchrone Anforderung einer Remotehostverbindung. Der Host wird durch einen Hostnamen und eine Portnummer angegeben.</summary>
      <param name="host">Der Name des Remotehosts.</param>
      <param name="port">Die Portnummer des Remotehosts.</param>
      <param name="requestCallback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Verbindungsvorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Verbindungsvorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Verbindung verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Diese Methode gilt für Sockets der Familie <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Portnummer ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde durch den Aufruf von <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> in einem Wartezustand platziert, oder ein asynchroner Vorgang wird bereits ausgeführt.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)">
      <summary>Beginnt eine asynchrone Anforderung zum Trennen der Verbindung mit einem Remoteendunkt.</summary>
      <param name="reuseSocket">
        <see langword="true" />, wenn dieser Socket wiederverwendet werden kann, nachdem die Verbindung geschlossen wurde, andernfalls <see langword="false" />.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />-Objekt, das auf den asynchronen Vorgang verweist.</returns>
      <exception cref="T:System.NotSupportedException">Das Betriebssystem ist Windows 2000 oder früher, für diese Methode ist jedoch Windows XP erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Beginnt den asynchronen Datenempfang aus dem verbundenen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das der Speicherort für die empfangenen Daten ist.</param>
      <param name="offset">Die nullbasierte Position im <paramref name="buffer" />-Parameter, an der die empfangenen Daten gespeichert werden.</param>
      <param name="size">Die Anzahl der zu empfangenden Bytes.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="callback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Empfangsvorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Lesevorgang verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.

oder -
<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.

- oder -
<paramref name="size" /> ist kleiner als 0.

oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des <paramref name="offset" />-Parameters.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Beginnt den asynchronen Datenempfang aus dem verbundenen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das der Speicherort für die empfangenen Daten ist.</param>
      <param name="offset">Die Position im <paramref name="buffer" />, an der die empfangenen Daten gespeichert werden sollen.</param>
      <param name="size">Die Anzahl der zu empfangenden Bytes.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="errorCode">Ein <see cref="T:System.Net.Sockets.SocketError" />-Objekt, in dem der Socketfehler gespeichert wird.</param>
      <param name="callback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Empfangsvorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Lesevorgang verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.

oder -
<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.

- oder -
<paramref name="size" /> ist kleiner als 0.

oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des <paramref name="offset" />-Parameters.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Beginnt den asynchronen Datenempfang aus dem verbundenen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="buffers">Ein Array vom Typ <see cref="T:System.Byte" />, das der Speicherort für die empfangenen Daten ist.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="callback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Empfangsvorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Lesevorgang verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Beginnt den asynchronen Datenempfang aus dem verbundenen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="buffers">Ein Array vom Typ <see cref="T:System.Byte" />, das der Speicherort für die empfangenen Daten ist.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="errorCode">Ein <see cref="T:System.Net.Sockets.SocketError" />-Objekt, in dem der Socketfehler gespeichert wird.</param>
      <param name="callback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Empfangsvorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Lesevorgang verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>Beginnt den asynchronen Datenempfang aus dem angegebenen Netzwerkgerät.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das der Speicherort für die empfangenen Daten ist.</param>
      <param name="offset">Die nullbasierte Position im <paramref name="buffer" />-Parameter, an der die Daten gespeichert werden.</param>
      <param name="size">Die Anzahl der zu empfangenden Bytes.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="remoteEP">Ein <see cref="T:System.Net.EndPoint" />, der die Datenquelle darstellt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Lesevorgang verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.
- oder -
<paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.

oder -
<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.

- oder -
<paramref name="size" /> ist kleiner als 0.

oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des <paramref name="offset" /> -Parameters.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein höher in der Aufrufliste befindlicher Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>Beginnt unter Verwendung der angegebenen <see cref="T:System.Net.Sockets.SocketFlags" />-Klassen den asynchronen Empfang der angegebenen Anzahl von Datenbytes an der angegebenen Position im Datenpuffer und speichert die Endpunkt- und Paketinformationen.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das der Speicherort für die empfangenen Daten ist.</param>
      <param name="offset">Die nullbasierte Position im <paramref name="buffer" />-Parameter, an der die Daten gespeichert werden.</param>
      <param name="size">Die Anzahl der zu empfangenden Bytes.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="remoteEP">Ein <see cref="T:System.Net.EndPoint" />, der die Datenquelle darstellt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Lesevorgang verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.
- oder -
<paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.

oder -
<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.

- oder -
<paramref name="size" /> ist kleiner als 0.

oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des <paramref name="offset" /> -Parameters.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Das Betriebssystem ist Windows 2000 oder früher, für diese Methode ist jedoch Windows XP erforderlich.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Sendet Daten asynchron an einen verbundenen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <param name="offset">Die nullbasierte Position im <paramref name="buffer" />-Parameter, an der mit dem Senden der Daten begonnen werden soll.</param>
      <param name="size">Die Anzahl von Bytes, die gesendet werden sollen.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen. Weitere Informationen finden Sie unten im Abschnitt Hinweise.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.
- oder -
<paramref name="offset" /> ist kleiner als die Länge von <paramref name="buffer" />.
- oder -
<paramref name="size" /> ist kleiner als 0.

oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des <paramref name="offset" /> -Parameters.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Sendet Daten asynchron an einen verbundenen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <param name="offset">Die nullbasierte Position im <paramref name="buffer" />-Parameter, an der mit dem Senden der Daten begonnen werden soll.</param>
      <param name="size">Die Anzahl von Bytes, die gesendet werden sollen.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="errorCode">Ein <see cref="T:System.Net.Sockets.SocketError" />-Objekt, in dem der Socketfehler gespeichert wird.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen. Weitere Informationen finden Sie unten im Abschnitt Hinweise.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.
- oder -
<paramref name="offset" /> ist kleiner als die Länge von <paramref name="buffer" />.
- oder -
<paramref name="size" /> ist kleiner als 0.

oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des <paramref name="offset" /> -Parameters.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Sendet Daten asynchron an einen verbundenen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="buffers">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> ist leer.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen. Weitere Informationen finden Sie unten im Abschnitt Hinweise.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Sendet Daten asynchron an einen verbundenen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="buffers">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="errorCode">Ein <see cref="T:System.Net.Sockets.SocketError" />-Objekt, in dem der Socketfehler gespeichert wird.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> ist leer.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen. Weitere Informationen finden Sie unten im Abschnitt Hinweise.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)">
      <summary>Sendet die Datei <paramref name="fileName" /> unter Verwendung des <see cref="T:System.Net.Sockets.Socket" />-Flags an ein verbundenes <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />-Objekt.</summary>
      <param name="fileName">Eine Zeichenfolge, die den Pfad und Namen der zu sendenden Datei enthält. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" /> -Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />-Objekt, das den asynchronen Sendevorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Der Socket ist nicht mit einem Remotehost verbunden.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei <paramref name="fileName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen. Weitere Informationen finden Sie unten im Abschnitt Hinweise.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)">
      <summary>Sendet eine Datei und Datenpuffer asynchron an ein verbundenes <see cref="T:System.Net.Sockets.Socket" />-Objekt.</summary>
      <param name="fileName">Eine Zeichenfolge, die den Pfad und Namen der zu sendenden Datei enthält. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="preBuffer">Ein <see cref="T:System.Byte" />-Array, das Daten enthält, die gesendet werden sollen, bevor die Datei gesendet wird. Dieser Parameter kann <see langword="null" />sein.</param>
      <param name="postBuffer">Ein <see cref="T:System.Byte" />-Array, das Daten enthält, die gesendet werden sollen, nachdem die Datei gesendet wurde. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="flags">Eine bitweise Kombination von <see cref="T:System.Net.Sockets.TransmitFileOptions" />-Werten.</param>
      <param name="callback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der nach Abschluss dieses Vorgangs aufgerufen werden soll. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="state">Ein benutzerdefiniertes Objekt mit Zustandsinformationen für diese Anforderung. Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />-Objekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen. Weitere Informationen finden Sie unten im Abschnitt Hinweise.</exception>
      <exception cref="T:System.NotSupportedException">Das Betriebssystem ist nicht Windows NT oder höher.
- oder -
Der Socket ist nicht mit einem Remotehost verbunden.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei <paramref name="fileName" /> wurde nicht gefunden.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>Sendet asynchron Daten an einen angegebenen Remotehost.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <param name="offset">Die nullbasierte Position im <paramref name="buffer" />, an der mit dem Senden der Daten begonnen werden soll.</param>
      <param name="size">Die Anzahl von Bytes, die gesendet werden sollen.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="remoteEP">Ein <see cref="T:System.Net.EndPoint" />, der das Remotegerät darstellt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.
- oder -
<paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.

oder -
<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.

- oder -
<paramref name="size" /> ist kleiner als 0.

oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des <paramref name="offset" /> -Parameters.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein höher in der Aufrufliste befindlicher Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
      <summary>Ordnet einem <see cref="T:System.Net.Sockets.Socket" /> einen lokalen Endpunkt zu.</summary>
      <param name="localEP">Der lokale <see cref="T:System.Net.EndPoint" />, der dem <see cref="T:System.Net.Sockets.Socket" /> zugeordnet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein höher in der Aufrufliste befindlicher Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Blocking">
      <summary>Ruft einen Wert ab, der angibt, ob sich der <see cref="T:System.Net.Sockets.Socket" /> im blockierenden Modus befindet.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.Socket" /> blockiert wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Bricht eine asynchrone Anforderung einer Remotehostverbindung ab.</summary>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das verwendet wurde, um die Verbindung mit dem Remotehost durch Aufrufen einer der <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" />-Methoden anzufordern.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="e" />-Parameter kann nicht NULL und der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> kann nicht NULL sein.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein höher in der Aufrufliste befindlicher Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary>Schließt die <see cref="T:System.Net.Sockets.Socket" />-Verbindung und gibt alle zugeordneten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary>Schließt die <see cref="T:System.Net.Sockets.Socket" />-Verbindung und gibt alle zugeordneten Ressourcen mit einem angegebenen Timeout frei, damit in der Warteschlange befindliche Daten gesendet werden können.</summary>
      <param name="timeout">Warten Sie bis zu <paramref name="timeout" /> Sekunden, damit alle verbleibenden Daten gesendet werden, und schließen Sie dann den Socket.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)">
      <summary>Stellt eine Verbindung mit einem Remotehost her.</summary>
      <param name="remoteEP">Ein <see cref="T:System.Net.EndPoint" />, der das Remotegerät darstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein höher in der Aufrufliste befindlicher Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde durch den Aufruf von <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> in einem Wartezustand platziert.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Stellt eine Verbindung mit einem Remotehost her. Der Host wird mit einer IP-Adresse und einer Portnummer angegeben.</summary>
      <param name="address">Die IP-Adresse des Remotehosts.</param>
      <param name="port">Die Portnummer des Remotehosts.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Portnummer ist ungültig.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Diese Methode gilt für Sockets der Familie <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentException">Die Länge von <paramref name="address" /> ist 0 (null).</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde durch den Aufruf von <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> in einem Wartezustand platziert.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>Stellt eine Verbindung mit einem Remotehost her. Der Host wird durch ein Array von IP-Adressen und eine Portnummer angegeben.</summary>
      <param name="addresses">Die IP-Adressen des Remotehosts.</param>
      <param name="port">Die Portnummer des Remotehosts.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Portnummer ist ungültig.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Diese Methode gilt für Sockets der Familie <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentException">Die Länge von <paramref name="address" /> ist 0 (null).</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde durch den Aufruf von <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> in einem Wartezustand platziert.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)">
      <summary>Stellt eine Verbindung mit einem Remotehost her. Der Host wird durch einen Hostnamen und eine Portnummer angegeben.</summary>
      <param name="host">Der Name des Remotehosts.</param>
      <param name="port">Die Portnummer des Remotehosts.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Portnummer ist ungültig.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Diese Methode gilt für Sockets der Familie <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde durch den Aufruf von <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> in einem Wartezustand platziert.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Beginnt eine asynchrone Anforderung einer Verbindung mit einem Remotehost.</summary>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter wird nach dem Abschluss des Vorgangs ausgelöst.
<see langword="false" />, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter nicht ausgelöst, und das als Parameter übergebene <paramref name="e" />-Objekt kann direkt nach der Rückgabe des Methodenaufrufs untersucht werden, um die Ergebnisse des Vorgangs abzurufen.</returns>
      <exception cref="T:System.ArgumentException">Ein Argument ist ungültig. Diese Ausnahme tritt auf, wenn mehrere Puffer angegeben werden und die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />-Eigenschaft nicht NULL ist.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="e" />-Parameter kann nicht NULL und der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> kann nicht NULL sein.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.Socket" /> führt eine Überwachung durch, oder ein Socketvorgang wird bereits mit dem im <paramref name="e" />-Parameter angegebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich. Diese Ausnahme tritt auch auf, wenn der lokale Endpunkt und der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> nicht die gleiche Adressfamilie aufweisen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein höher in der Aufrufliste befindlicher Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Beginnt eine asynchrone Anforderung einer Verbindung mit einem Remotehost.</summary>
      <param name="socketType">Einer der <see cref="T:System.Net.Sockets.SocketType" />-Werte.</param>
      <param name="protocolType">Einer der <see cref="T:System.Net.Sockets.ProtocolType" />-Werte.</param>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter wird nach dem Abschluss des Vorgangs ausgelöst.
<see langword="false" />, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter nicht ausgelöst, und das als Parameter übergebene <paramref name="e" />-Objekt kann direkt nach der Rückgabe des Methodenaufrufs untersucht werden, um die Ergebnisse des Vorgangs abzurufen.</returns>
      <exception cref="T:System.ArgumentException">Ein Argument ist ungültig. Diese Ausnahme tritt auf, wenn mehrere Puffer angegeben werden und die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />-Eigenschaft nicht NULL ist.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="e" />-Parameter kann nicht NULL und der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> kann nicht NULL sein.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.Socket" /> führt eine Überwachung durch, oder ein Socketvorgang wird bereits mit dem im <paramref name="e" />-Parameter angegebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich. Diese Ausnahme tritt auch auf, wenn der lokale Endpunkt und der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> nicht die gleiche Adressfamilie aufweisen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein höher in der Aufrufliste befindlicher Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Net.Sockets.Socket" /> mit dem Remotehost des letzten <see cref="Overload:System.Net.Sockets.Socket.Send" />-Vorgangs oder <see cref="Overload:System.Net.Sockets.Socket.Receive" />-Vorgangs verbunden ist.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Net.Sockets.Socket" /> beim letzten Vorgang mit einer Remoteressource verbunden war, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Disconnect(System.Boolean)">
      <summary>Schließt die Socketverbindung und ermöglicht die Wiederverwendung des Sockets.</summary>
      <param name="reuseSocket">
        <see langword="true" />, wenn dieser Socket wiederverwendet werden kann, nachdem die aktuelle Verbindung geschlossen wurde, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.PlatformNotSupportedException">Für diese Methode wird Windows 2000 oder früher benötigt, andernfalls wird eine Ausnahme ausgelöst.</exception>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Beginnt eine asynchrone Anforderung zum Trennen der Verbindung mit einem Remoteendunkt.</summary>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter wird nach dem Abschluss des Vorgangs ausgelöst.
<see langword="false" />, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter nicht ausgelöst, und das als Parameter übergebene <paramref name="e" />-Objekt kann direkt nach der Rückgabe des Methodenaufrufs untersucht werden, um die Ergebnisse des Vorgangs abzurufen.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="e" />-Parameter darf nicht NULL sein.</exception>
      <exception cref="T:System.InvalidOperationException">Es wird bereits ein Socketvorgang mit dem im <paramref name="e" />-Parameter angegebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.Net.Sockets.Socket" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.Sockets.Socket" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="P:System.Net.Sockets.Socket.DontFragment">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.Socket" /> die Fragmentierung von IP (Internet Protocol)-Datagrammen zulässt, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.Socket" /> die Datagrammfragmentierung zulässt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
      <exception cref="T:System.NotSupportedException">Diese Eigenschaft kann nur für Sockets in der <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />-Familie oder der <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />-Familie festgelegt werden.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.DualMode">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.Socket" /> ein für IPv4 und IPv6 verwendeter Dualmodussocket ist, oder legt ihn fest.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.Socket" /> ein Dualmodussocket ist; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)">
      <summary>Dupliziert den Socketverweis für den Zielprozess und schließt den Socket für diesen Prozess.</summary>
      <param name="targetProcessId">Die ID des Zielprozesses, in dem ein Duplikat des Socketverweises erstellt wird.</param>
      <returns>Der Socketverweis, der an den Zielprozess übergeben werden soll.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="targetProcessID" /> ist keine gültige Prozess-ID.
- oder -
Die Duplizierung des Socketverweises ist fehlgeschlagen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.EnableBroadcast">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.Socket" /> Broadcastpakete senden oder empfangen kann, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.Socket" /> Broadcastpakete zulässt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Diese Option ist nur für Datagrammsockets gültig.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)">
      <summary>Nimmt asynchron einen eingehenden Verbindungsversuch an und erstellt ein neues <see cref="T:System.Net.Sockets.Socket" />-Objekt zum Behandeln der Remotehostkommunikation. Diese Methode gibt einen Puffer zurück, der die ersten übertragenen Daten enthält.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die übertragenen Bytes enthält.</param>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />-Objekt, das Zustandsinformationen über diesen asynchronen Vorgang sowie ggf. vorhandene benutzerdefinierte Daten speichert.</param>
      <returns>Ein <see cref="T:System.Net.Sockets.Socket" />-Objekt zum Behandeln der Kommunikation mit dem Remotehost.</returns>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows NT erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist leer.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf von <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> erstellt.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />-Methode wurde bereits zuvor aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)">
      <summary>Nimmt asynchron einen eingehenden Verbindungsversuch an und erstellt ein neues <see cref="T:System.Net.Sockets.Socket" />-Objekt zum Behandeln der Remotehostkommunikation. Diese Methode gibt einen Puffer zurück, der die ersten Daten und die Anzahl der übertragenen Bytes enthält.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die übertragenen Bytes enthält.</param>
      <param name="bytesTransferred">Die Anzahl der übertragenen Bytes.</param>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />-Objekt, das Zustandsinformationen über diesen asynchronen Vorgang sowie ggf. vorhandene benutzerdefinierte Daten speichert.</param>
      <returns>Ein <see cref="T:System.Net.Sockets.Socket" />-Objekt zum Behandeln der Kommunikation mit dem Remotehost.</returns>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows NT erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist leer.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf von <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> erstellt.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />-Methode wurde bereits zuvor aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)">
      <summary>Nimmt asynchron einen eingehenden Verbindungsversuch an und erstellt einen neuen <see cref="T:System.Net.Sockets.Socket" /> zum Behandeln der Remotehostkommunikation.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das Zustandsinformationen über diesen asynchronen Vorgang sowie ggf. vorhandene benutzerdefinierte Daten speichert.</param>
      <returns>Ein <see cref="T:System.Net.Sockets.Socket" /> zum Behandeln der Kommunikation mit dem Remotehost.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf von <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> erstellt.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen. Weitere Informationen finden Sie im Abschnitt Hinweise.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />-Methode wurde bereits zuvor aufgerufen.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows NT erforderlich.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)">
      <summary>Beendet eine ausstehende asynchrone Verbindungsanforderung.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das Zustandsinformationen über diesen asynchronen Vorgang sowie ggf. vorhandene benutzerdefinierte Daten speichert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" /> wurde bereits für die asynchrone Verbindung aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)">
      <summary>Beendet eine ausstehende asynchrone Anforderung zur Trennung der Verbindung.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />-Objekt, das Zustandsinformationen über diesen asynchronen Vorgang sowie ggf. vorhandene benutzerdefinierte Daten speichert.</param>
      <exception cref="T:System.NotSupportedException">Das Betriebssystem ist Windows 2000 oder früher, für diese Methode ist jedoch Windows XP erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" /> wurde bereits für die asynchrone Verbindung aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.Net.WebException">Das Timeout der Anforderung zum Trennen der Verbindung wurde überschritten.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)">
      <summary>Beendet einen ausstehenden asynchronen Lesevorgang.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das Zustandsinformationen über diesen asynchronen Vorgang sowie ggf. vorhandene benutzerdefinierte Daten speichert.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> wurde bereits für den asynchronen Lesevorgang aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>Beendet einen ausstehenden asynchronen Lesevorgang.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das Zustandsinformationen über diesen asynchronen Vorgang sowie ggf. vorhandene benutzerdefinierte Daten speichert.</param>
      <param name="errorCode">Ein <see cref="T:System.Net.Sockets.SocketError" />-Objekt, in dem der Socketfehler gespeichert wird.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> wurde bereits für den asynchronen Lesevorgang aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)">
      <summary>Beendet einen ausstehenden asynchronen Lesevorgang von einem bestimmten Endpunkt.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das Zustandsinformationen über diesen asynchronen Vorgang sowie ggf. vorhandene benutzerdefinierte Daten speichert.</param>
      <param name="endPoint">Der Quell-<see cref="T:System.Net.EndPoint" />.</param>
      <returns>Wenn erfolgreich, die Anzahl der empfangenen Bytes. Wenn die Ausführung nicht erfolgreich ist, wird 0 zurückgegeben.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> wurde bereits für den asynchronen Lesevorgang aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>Beendet einen ausstehenden asynchronen Lesevorgang von einem bestimmten Endpunkt. Diese Methode stellt außerdem mehr Informationen über das Paket als <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> bereit.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das Zustandsinformationen über diesen asynchronen Vorgang sowie ggf. vorhandene benutzerdefinierte Daten speichert.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte für das empfangene Paket.</param>
      <param name="endPoint">Der Quell-<see cref="T:System.Net.EndPoint" />.</param>
      <param name="ipPacketInformation">Die <see cref="T:System.Net.IPAddress" /> und die Schnittstelle des empfangenen Pakets.</param>
      <returns>Wenn erfolgreich, die Anzahl der empfangenen Bytes. Wenn die Ausführung nicht erfolgreich ist, wird 0 zurückgegeben.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist gleich <see langword="null" />.

oder -
<paramref name="endPoint" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> wurde bereits für den asynchronen Lesevorgang aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)">
      <summary>Beendet einen ausstehenden asynchronen Sendevorgang.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das Zustandsinformation für den asynchronen Vorgang speichert.</param>
      <returns>Wenn erfolgreich, die Anzahl der an den <see cref="T:System.Net.Sockets.Socket" /> gesendeten Bytes, andernfalls ein Fehler aufgrund eines ungültigen <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> wurde bereits für den asynchronen Sendevorgang aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>Beendet einen ausstehenden asynchronen Sendevorgang.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das Zustandsinformation für den asynchronen Vorgang speichert.</param>
      <param name="errorCode">Ein <see cref="T:System.Net.Sockets.SocketError" />-Objekt, in dem der Socketfehler gespeichert wird.</param>
      <returns>Wenn erfolgreich, die Anzahl der an den <see cref="T:System.Net.Sockets.Socket" /> gesendeten Bytes, andernfalls ein Fehler aufgrund eines ungültigen <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> wurde bereits für den asynchronen Sendevorgang aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)">
      <summary>Beendet ein ausstehendes asynchrones Senden einer Datei.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />-Objekt, das Zustandsinformation für den asynchronen Vorgang speichert.</param>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows NT erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist leer.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> wurde bereits für das asynchrone <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen. Weitere Informationen finden Sie unten im Abschnitt Hinweise.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)">
      <summary>Beendet einen ausstehenden asynchronen Sendevorgang an einen bestimmten Zielort.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das Zustandsinformationen über diesen asynchronen Vorgang sowie ggf. vorhandene benutzerdefinierte Daten speichert.</param>
      <returns>Wenn erfolgreich, die Anzahl der gesendeten Bytes, andernfalls ein Fehler aufgrund eines ungültigen <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" /> wurde bereits für den asynchronen Sendevorgang aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ExclusiveAddressUse">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.Socket" /> das Binden nur eines einzigen Prozesses an einen Anschluss zulässt, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.Socket" /> das Binden nur eines einzigen Sockets an einen bestimmten Anschluss zulässt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" /> für Windows Server 2003 und Windows XP Service Pack 2 und <see langword="false" /> für alle anderen Versionen.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Für diesen <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> wurde <see cref="T:System.Net.Sockets.Socket" /> aufgerufen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary>Gibt von der <see cref="T:System.Net.Sockets.Socket" />-Klasse verwendete Ressourcen frei.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)">
      <summary>Gibt den Wert einer angegebenen, als Objekt dargestellten <see cref="T:System.Net.Sockets.Socket" />-Option zurück.</summary>
      <param name="optionLevel">Einer der <see cref="T:System.Net.Sockets.SocketOptionLevel" />-Werte.</param>
      <param name="optionName">Einer der <see cref="T:System.Net.Sockets.SocketOptionName" />-Werte.</param>
      <returns>Ein Objekt, das den Wert der Option darstellt. Wenn der <paramref name="optionName" />-Parameter auf <see cref="F:System.Net.Sockets.SocketOptionName.Linger" /> festgelegt ist, ist der Rückgabewert eine Instanz der <see cref="T:System.Net.Sockets.LingerOption" />-Klasse. Wenn <paramref name="optionName" /> auf <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> oder <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" /> festgelegt ist, ist der Rückgabewert eine Instanz der <see cref="T:System.Net.Sockets.MulticastOption" />-Klasse. Wenn <paramref name="optionName" /> einen anderen Wert hat, ist der Rückgabewert eine ganze Zahl.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.
- oder -
<paramref name="optionName" /> wurde auf den nicht unterstützten Wert <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" /> festgelegt.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>Gibt die angegebene <see cref="T:System.Net.Sockets.Socket" />-Optionseinstellung als Bytearray dargestellt zurück.</summary>
      <param name="optionLevel">Einer der <see cref="T:System.Net.Sockets.SocketOptionLevel" />-Werte.</param>
      <param name="optionName">Einer der <see cref="T:System.Net.Sockets.SocketOptionName" />-Werte.</param>
      <param name="optionValue">Ein Array vom Typ <see cref="T:System.Byte" />, das die Optionseinstellung erhalten soll.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.
- oder -
In .NET Compact Framework-Anwendungen ist der Standardpufferspeicher für Windows CE auf 32768 Bytes festgelegt. Sie können den Pufferspeicher pro Socket durch den Aufruf von <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" /> ändern.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>Gibt den Wert der angegebenen <see cref="T:System.Net.Sockets.Socket" />-Option in einem Array zurück.</summary>
      <param name="optionLevel">Einer der <see cref="T:System.Net.Sockets.SocketOptionLevel" />-Werte.</param>
      <param name="optionName">Einer der <see cref="T:System.Net.Sockets.SocketOptionName" />-Werte.</param>
      <param name="optionLength">Die Länge des erwarteten Rückgabewerts in Bytes.</param>
      <returns>Ein Array vom Typ <see cref="T:System.Byte" />, das den Wert der Socketoption enthält.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.
- oder -
In .NET Compact Framework-Anwendungen ist der Standardpufferspeicher für Windows CE auf 32768 Bytes festgelegt. Sie können den Pufferspeicher pro Socket durch den Aufruf von <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" /> ändern.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Handle">
      <summary>Ruft das Betriebssystemhandle für den <see cref="T:System.Net.Sockets.Socket" /> ab.</summary>
      <returns>Ein <see cref="T:System.IntPtr" />, der das Betriebssystemhandle für den <see cref="T:System.Net.Sockets.Socket" /> darstellt.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])">
      <summary>Legt mit numerischen Steuerungscodes die Betriebsmodi niedriger Ebene für den <see cref="T:System.Net.Sockets.Socket" /> fest.</summary>
      <param name="ioControlCode">Ein <see cref="T:System.Int32" />-Wert, der den Steuerungscode des auszuführenden Vorgangs angibt.</param>
      <param name="optionInValue">Ein <see cref="T:System.Byte" />-Array, das die für den Vorgang erforderlichen Eingabedaten enthält.</param>
      <param name="optionOutValue">Ein <see cref="T:System.Byte" />-Array, das die durch den Vorgang zurückgegebenen Ausgabedaten enthält.</param>
      <returns>Die Anzahl der Bytes im <paramref name="optionOutValue" />-Parameter.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, den blockierenden Modus ohne Verwendung der <see cref="P:System.Net.Sockets.Socket.Blocking" />-Eigenschaft zu ändern.</exception>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufliste verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])">
      <summary>Legt mithilfe der <see cref="T:System.Net.Sockets.Socket" />-Enumeration zum Angeben von Steuerungscodes Betriebsmodi niedriger Ebene für den <see cref="T:System.Net.Sockets.IOControlCode" /> fest.</summary>
      <param name="ioControlCode">Ein <see cref="T:System.Net.Sockets.IOControlCode" />-Wert, der den Steuerungscode des auszuführenden Vorgangs angibt.</param>
      <param name="optionInValue">Ein Array vom Typ <see cref="T:System.Byte" />, das die für den Vorgang erforderlichen Eingabedaten enthält.</param>
      <param name="optionOutValue">Ein Array vom Typ <see cref="T:System.Byte" />, das die von dem Vorgang zurückgegebenen Ausgabedaten enthält.</param>
      <returns>Die Anzahl der Bytes im <paramref name="optionOutValue" />-Parameter.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, den blockierenden Modus ohne Verwendung der <see cref="P:System.Net.Sockets.Socket.Blocking" />-Eigenschaft zu ändern.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.IsBound">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.Socket" /> an einen bestimmten lokalen Anschluss gebunden ist.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.Socket" /> an einen lokalen Anschluss gebunden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.LingerState">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.Socket" /> bei einem Versuch, alle ausstehenden Daten zu senden, das Schließen eines Sockets verzögert, oder legt diesen fest.</summary>
      <returns>Eine <see cref="T:System.Net.Sockets.LingerOption" />, die angibt, wie der Nachlauf während des Schließens eines Sockets erfolgen soll.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen(System.Int32)">
      <summary>Versetzt einen <see cref="T:System.Net.Sockets.Socket" /> in den Überwachungszustand.</summary>
      <param name="backlog">Die maximale Länge der Warteschlange für ausstehende Verbindungen.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.LocalEndPoint">
      <summary>Ruft den lokalen Endpunkt ab.</summary>
      <returns>Der <see cref="T:System.Net.EndPoint" />, den der <see cref="T:System.Net.Sockets.Socket" /> für die Kommunikation verwendet.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.MulticastLoopback">
      <summary>Ruft einen Wert ab, der angibt, ob ausgehende Multicastpakete an die sendende Anwendung übermittelt werden, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.Socket" /> ausgehende Multicastpakete empfängt, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der Stream-<see cref="T:System.Net.Sockets.Socket" /> den Nagle-Algorithmus verwendet, oder legt diesen fest.</summary>
      <returns>
        <see langword="false" />, wenn der <see cref="T:System.Net.Sockets.Socket" /> den Nagle-Algorithmus verwendet, andernfalls <see langword="true" />. Die Standardeinstellung ist <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary>Gibt an, ob das zugrunde liegende Betriebssystem und die Netzwerkkarten IPv4 (Internet Protocol, Version 4) unterstützen.</summary>
      <returns>
        <see langword="true" />, wenn das Betriebssystem und die Netzwerkkarten das IPv4-Protokoll unterstützen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary>Gibt an, ob das zugrunde liegende Betriebssystem und die Netzwerkkarten IPv6 (Internet Protocol, Version 6) unterstützen.</summary>
      <returns>
        <see langword="true" />, wenn das Betriebssystem und die Netzwerkkarten das Protokoll IPv6 unterstützen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)">
      <summary>Bestimmt den Status des <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="microSeconds">Die Zeit in Mikrosekunden, die auf eine Antwort gewartet werden soll.</param>
      <param name="mode">Einer der <see cref="T:System.Net.Sockets.SelectMode" />-Werte.</param>
      <returns>Der Status des <see cref="T:System.Net.Sockets.Socket" /> basierend auf dem im <paramref name="mode" />-Parameter übergebenen Abfragemoduswert.
  Modus 
  Rückgabewert 
 <see cref="F:System.Net.Sockets.SelectMode.SelectRead" /><see langword="true" />, wenn <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> aufgerufen wurde und eine Verbindung aussteht. 
- oder - 
 <see langword="true" />, wenn Daten zum Lesen verfügbar sind. 
- oder - 
 <see langword="true" />, wenn die Verbindung geschlossen, zurückgesetzt oder beendet wurde. 
Andernfalls wird <see langword="false" /> zurückgegeben.  
  
 <see cref="F:System.Net.Sockets.SelectMode.SelectWrite" /><see langword="true" />, wenn ein <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> verarbeitet wird und die Verbindung erfolgreich war. 
- oder - 
 <see langword="true" />, wenn Daten gesendet werden können. 
Andernfalls wird <see langword="false" /> zurückgegeben.  
  
 <see cref="F:System.Net.Sockets.SelectMode.SelectError" /><see langword="true" />, wenn ein <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> ohne Blockierung verarbeitet wird und der Verbindungsaufbau fehlgeschlagen ist. 
- oder - 
 <see langword="true" />, wenn <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> nicht festgelegt ist und Out-of-Band-Daten verfügbar sind. 
Andernfalls wird <see langword="false" /> zurückgegeben.</returns>
      <exception cref="T:System.NotSupportedException">Der <paramref name="mode" />-Parameter ist keiner der <see cref="T:System.Net.Sockets.SelectMode" />-Werte.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen. Weitere Informationen finden Sie weiter unten im Abschnitt "Hinweise".</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary>Ruft den Protokolltyp des <see cref="T:System.Net.Sockets.Socket" /> ab.</summary>
      <returns>Einer der <see cref="T:System.Net.Sockets.ProtocolType" />-Werte.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[])">
      <summary>Empfängt Daten von einem gebundenen <see cref="T:System.Net.Sockets.Socket" /> in einem Empfangspuffer.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das der Speicherort für die empfangenen Daten ist.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufliste verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Empfängt die angegebene Anzahl von Bytes aus einem gebundenen <see cref="T:System.Net.Sockets.Socket" /> an der angegebenen Offsetposition des Empfangspuffers, wobei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> verwendet werden.</summary>
      <param name="buffer">Ein Array des Typs <see cref="T:System.Byte" />, bei dem es sich um den Speicherort für empfangene Daten handelt.</param>
      <param name="offset">Die Position im <paramref name="buffer" />, an der die empfangenen Daten gespeichert werden sollen.</param>
      <param name="size">Die Anzahl der zu empfangenden Bytes.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.

oder -
<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.

- oder -
<paramref name="size" /> ist kleiner als 0.

oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des <paramref name="offset" />-Parameters.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> ist keine gültige Kombination von Werten.
- oder -
Die <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" />-Eigenschaft wurde nicht festgelegt.
- oder -
Beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" /> tritt ein Betriebssystemfehler auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufliste verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Empfängt Daten von einem gebundenen <see cref="T:System.Net.Sockets.Socket" /> in einem Empfangspuffer, wobei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> verwendet werden.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das der Speicherort für die empfangenen Daten ist.</param>
      <param name="offset">Die Position im <paramref name="buffer" />-Parameter, an der die empfangenen Daten gespeichert werden sollen.</param>
      <param name="size">Die Anzahl der zu empfangenden Bytes.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="errorCode">Ein <see cref="T:System.Net.Sockets.SocketError" />-Objekt, in dem der Socketfehler gespeichert wird.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.

oder -
<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.

- oder -
<paramref name="size" /> ist kleiner als 0.

oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des <paramref name="offset" />-Parameters.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> ist keine gültige Kombination von Werten.
- oder -
Die <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" />-Eigenschaft ist nicht festgelegt.
- oder -
Beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" /> tritt ein Betriebssystemfehler auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufliste verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Empfängt die angegebene Anzahl von Datenbytes aus einem gebundenen <see cref="T:System.Net.Sockets.Socket" /> in einem Empfangspuffer, wobei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> verwendet werden.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das der Speicherort für die empfangenen Daten ist.</param>
      <param name="size">Die Anzahl der zu empfangenden Bytes.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> ist größer als <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufliste verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>Empfängt Daten von einem gebundenen <see cref="T:System.Net.Sockets.Socket" /> in einem Empfangspuffer, wobei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> verwendet werden.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das der Speicherort für die empfangenen Daten ist.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufliste verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Empfängt Daten von einem gebundenen <see cref="T:System.Net.Sockets.Socket" /> und fügt sie in die Liste der Empfangspuffer ein.</summary>
      <param name="buffers">Eine Liste mit <see cref="T:System.ArraySegment`1" />s vom Typ <see cref="T:System.Byte" />, die die empfangenen Daten enthält.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugriff auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Empfängt Daten von einem gebundenen <see cref="T:System.Net.Sockets.Socket" /> in der Liste der Empfangspuffer, wobei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> verwendet werden.</summary>
      <param name="buffers">Eine Liste mit <see cref="T:System.ArraySegment`1" />s vom Typ <see cref="T:System.Byte" />, die die empfangenen Daten enthält.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> ist <see langword="null" />.
- oder -
<paramref name="buffers" />.Count ist 0 (null).</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugriff auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Empfängt Daten von einem gebundenen <see cref="T:System.Net.Sockets.Socket" /> in der Liste der Empfangspuffer, wobei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> verwendet werden.</summary>
      <param name="buffers">Eine Liste mit <see cref="T:System.ArraySegment`1" />s vom Typ <see cref="T:System.Byte" />, die die empfangenen Daten enthält.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="errorCode">Ein <see cref="T:System.Net.Sockets.SocketError" />-Objekt, in dem der Socketfehler gespeichert wird.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> ist <see langword="null" />.
- oder -
<paramref name="buffers" />.Count ist 0 (null).</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugriff auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte})">
      <summary>Empfängt Daten von einem gebundenen <see cref="T:System.Net.Sockets.Socket" /> in einem Empfangspuffer.</summary>
      <param name="buffer">Eine Spanne von Bytes, die der Speicherort für die empfangenen Daten ist.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufliste verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>Empfängt Daten von einem gebundenen <see cref="T:System.Net.Sockets.Socket" /> in einem Empfangspuffer, wobei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> verwendet werden.</summary>
      <param name="buffer">Eine Spanne von Bytes, die der Speicherort für die empfangenen Daten ist.</param>
      <param name="socketFlags">Eine bitweise Kombination der Enumerationswerte, die das Sende- und Empfangsverhalten angeben.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufliste verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Empfängt Daten von einem gebundenen <see cref="T:System.Net.Sockets.Socket" /> in einem Empfangspuffer, wobei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> verwendet werden.</summary>
      <param name="buffer">Eine Spanne von Bytes, die der Speicherort für die empfangenen Daten ist.</param>
      <param name="socketFlags">Eine bitweise Kombination der Enumerationswerte, die das Sende- und Empfangsverhalten angeben.</param>
      <param name="errorCode">Diese Methode gibt einen der Enumerationswerte zurück, der Fehlercodes für den Socket definiert.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufliste verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Startet eine asynchrone Anforderung, um Daten von einem verbundenen <see cref="T:System.Net.Sockets.Socket" />-Objekt zu empfangen.</summary>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter wird nach dem Abschluss des Vorgangs ausgelöst.
<see langword="false" />, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter nicht ausgelöst, und das als Parameter übergebene <paramref name="e" />-Objekt kann direkt nach der Rückgabe des Methodenaufrufs untersucht werden, um die Ergebnisse des Vorgangs abzurufen.</returns>
      <exception cref="T:System.ArgumentException">Ein Argument war ungültig. Die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft oder <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />-Eigenschaft des <paramref name="e" />-Parameters muss auf gültige Puffer verweisen. Eine dieser Eigenschaften kann festgelegt werden, nicht jedoch beide gleichzeitig.</exception>
      <exception cref="T:System.InvalidOperationException">Es wird bereits ein Socketvorgang mit dem im <paramref name="e" />-Parameter angegebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary>Ruft einen Wert ab, der die Größe des Empfangspuffers des <see cref="T:System.Net.Sockets.Socket" /> angibt, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Int32" />, das die Größe des Empfangspuffer in Bytes enthält. Der Standard ist 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert ist kleiner als 0.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Empfängt die angegebene Anzahl von Datenbytes an der angegebenen Position im Datenpuffer, verwendet dabei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> und speichert den Endpunkt.</summary>
      <param name="buffer">Ein Array des Typs <see cref="T:System.Byte" />, bei dem es sich um den Speicherort für empfangene Daten handelt.</param>
      <param name="offset">Die Position im <paramref name="buffer" />-Parameter, an der die empfangenen Daten gespeichert werden sollen.</param>
      <param name="size">Die Anzahl der zu empfangenden Bytes.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="remoteEP">Ein als Verweis übergebener <see cref="T:System.Net.EndPoint" />, der den Remoteserver darstellt.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.
- oder -
<paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.

oder -
<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.

- oder -
<paramref name="size" /> ist kleiner als 0.
- oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des offset-Parameters.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> ist keine gültige Kombination von Werten.
- oder -
Die <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" />-Eigenschaft wurde nicht festgelegt.
- oder -
Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Empfängt mithilfe der angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> die angegebene Anzahl von Bytes im Datenpuffer und speichert den Endpunkt.</summary>
      <param name="buffer">Ein Array des Typs <see cref="T:System.Byte" />, bei dem es sich um den Speicherort für empfangene Daten handelt.</param>
      <param name="size">Die Anzahl der zu empfangenden Bytes.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="remoteEP">Ein als Verweis übergebener <see cref="T:System.Net.EndPoint" />, der den Remoteserver darstellt.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.
- oder -
<paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> ist kleiner als 0.

oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> ist keine gültige Kombination von Werten.
- oder -
Die <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" />-Eigenschaft wurde nicht festgelegt.
- oder -
Beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" /> tritt ein Betriebssystemfehler auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufliste verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)">
      <summary>Empfängt ein Datagramm im Datenpuffer und speichert den Endpunkt.</summary>
      <param name="buffer">Ein Array des Typs <see cref="T:System.Byte" />, bei dem es sich um den Speicherort für empfangene Daten handelt.</param>
      <param name="remoteEP">Ein als Verweis übergebener <see cref="T:System.Net.EndPoint" />, der den Remoteserver darstellt.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.
- oder -
<paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufliste verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Empfängt mithilfe der angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> ein Datagramm im Datenpuffer und speichert den Endpunkt.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das der Speicherort für die empfangenen Daten ist.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="remoteEP">Ein als Verweis übergebener <see cref="T:System.Net.EndPoint" />, der den Remoteserver darstellt.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.
- oder -
<paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufliste verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Beginnt den asynchronen Datenempfang aus dem angegebenen Netzwerkgerät.</summary>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter wird nach dem Abschluss des Vorgangs ausgelöst.
<see langword="false" />, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter nicht ausgelöst, und das als Parameter übergebene <paramref name="e" />-Objekt kann direkt nach der Rückgabe des Methodenaufrufs untersucht werden, um die Ergebnisse des Vorgangs abzurufen.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> darf nicht NULL sein.</exception>
      <exception cref="T:System.InvalidOperationException">Es wird bereits ein Socketvorgang mit dem im <paramref name="e" />-Parameter angegebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>Empfängt die angegebene Anzahl von Datenbytes an der angegebenen Position im Datenpuffer, verwendet dabei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> und speichert die Endpunkt- und Paketinformationen.</summary>
      <param name="buffer">Ein Array des Typs <see cref="T:System.Byte" />, bei dem es sich um den Speicherort für empfangene Daten handelt.</param>
      <param name="offset">Die Position im <paramref name="buffer" />-Parameter, an der die empfangenen Daten gespeichert werden sollen.</param>
      <param name="size">Die Anzahl der zu empfangenden Bytes.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="remoteEP">Ein als Verweis übergebener <see cref="T:System.Net.EndPoint" />, der den Remoteserver darstellt.</param>
      <param name="ipPacketInformation">Ein <see cref="T:System.Net.Sockets.IPPacketInformation" />-Objekt, das Adress- und Schnittstelleninformationen enthält.</param>
      <returns>Die Anzahl der empfangenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.
- oder -
<paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.

oder -
<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.

- oder -
<paramref name="size" /> ist kleiner als 0.
- oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des offset-Parameters.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> ist keine gültige Kombination von Werten.
- oder -
Die <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" />-Eigenschaft wurde nicht festgelegt.
- oder -
.NET Framework wird mit einem AMD 64 Bit-Prozessor ausgeführt.
- oder -
Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Das Betriebssystem ist Windows 2000 oder früher, für diese Methode ist jedoch Windows XP erforderlich.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Beginnt unter Verwendung der angegebenen <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" /> den asynchronen Empfang der angegebenen Anzahl von Datenbytes an der angegebenen Position im Datenpuffer und speichert die Endpunkt- und Paketinformationen.</summary>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter wird nach dem Abschluss des Vorgangs ausgelöst.
<see langword="false" />, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter nicht ausgelöst, und das als Parameter übergebene <paramref name="e" />-Objekt kann direkt nach der Rückgabe des Methodenaufrufs untersucht werden, um die Ergebnisse des Vorgangs abzurufen.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> darf nicht NULL sein.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveTimeout">
      <summary>Ruft einen Wert ab, der die Zeitspanne bis zum Timeout eines synchronen <see cref="Overload:System.Net.Sockets.Socket.Receive" />-Aufrufs angibt, oder legt diesen fest.</summary>
      <returns>Der Timeoutwert in Millisekunden. Der Standardwert ist 0 und gibt ein unendliches Timeoutintervall an. Durch die Angabe von -1 wird ebenfalls ein unendliches Timeoutintervall angegeben.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert ist kleiner als -1.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary>Ruft den Remoteendpunkt ab.</summary>
      <returns>Der <see cref="T:System.Net.EndPoint" />, mit dem der <see cref="T:System.Net.Sockets.Socket" /> kommuniziert.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SafeHandle">
      <summary>Ruft ein <see cref="T:System.Net.Sockets.SafeSocketHandle" /> ab, das den Sockethandle darstellt, der vom aktuellen <see cref="T:System.Net.Sockets.Socket" />-Objekt gekapselt wird.</summary>
      <returns>Ein Sockethandle, das auf sichere Weise für den Socket verfügbar gemacht wird, der vom aktuellen <see cref="T:System.Net.Sockets.Socket" />-Objekt gekapselt wird.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary>Bestimmt den Status von einem oder mehreren Sockets.</summary>
      <param name="checkRead">Eine <see cref="T:System.Collections.IList" /> von <see cref="T:System.Net.Sockets.Socket" />-Instanzen, bei denen geprüft werden soll, ob sie gelesen werden können.</param>
      <param name="checkWrite">Eine <see cref="T:System.Collections.IList" /> von <see cref="T:System.Net.Sockets.Socket" />-Instanzen, bei denen geprüft werden soll, ob in sie geschrieben werden kann.</param>
      <param name="checkError">Eine <see cref="T:System.Collections.IList" /> von <see cref="T:System.Net.Sockets.Socket" />-Instanzen, die auf Fehler überprüft werden sollen.</param>
      <param name="microSeconds">Der Timeoutwert in Mikrosekunden. Ein Wert von -1 gibt ein unendliches Timeout an.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="checkRead" />-Parameter ist <see langword="null" /> oder leer.
- und -
Der <paramref name="checkWrite" />-Parameter ist <see langword="null" /> oder leer.
- und -
Der <paramref name="checkError" />-Parameter ist <see langword="null" /> oder leer.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[])">
      <summary>Sendet Daten an einen verbundenen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <returns>Die Anzahl der an den <see cref="T:System.Net.Sockets.Socket" /> gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Sendet die angegebene Anzahl von Datenbytes an einen verbundenen <see cref="T:System.Net.Sockets.Socket" />, beginnend bei einem angegebenen Offset und unter Verwendung der angegebenen <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <param name="offset">Die Position im Datenpuffer, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="size">Die Anzahl von Bytes, die gesendet werden sollen.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <returns>Die Anzahl der an den <see cref="T:System.Net.Sockets.Socket" /> gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.

oder -
<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.

- oder -
<paramref name="size" /> ist kleiner als 0.

oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des <paramref name="offset" />-Parameters.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> ist keine gültige Kombination von Werten.

oder -
Beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" /> tritt ein Betriebssystemfehler auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Sendet unter Verwendung der angegebenen <see cref="T:System.Net.Sockets.Socket" /> die angegebene Anzahl von Datenbytes an einen verbundenen <see cref="T:System.Net.Sockets.SocketFlags" />, beginnend beim angegebenen Offset.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <param name="offset">Die Position im Datenpuffer, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="size">Die Anzahl von Bytes, die gesendet werden sollen.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="errorCode">Ein <see cref="T:System.Net.Sockets.SocketError" />-Objekt, in dem der Socketfehler gespeichert wird.</param>
      <returns>Die Anzahl der an den <see cref="T:System.Net.Sockets.Socket" /> gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.

oder -
<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.

- oder -
<paramref name="size" /> ist kleiner als 0.

oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des <paramref name="offset" />-Parameters.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> ist keine gültige Kombination von Werten.

oder -
Beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" /> tritt ein Betriebssystemfehler auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Sendet die angegebene Anzahl von Datenbytes an einen verbundenen <see cref="T:System.Net.Sockets.Socket" />, wobei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> verwendet werden.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <param name="size">Die Anzahl von Bytes, die gesendet werden sollen.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <returns>Die Anzahl der an den <see cref="T:System.Net.Sockets.Socket" /> gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> ist größer als 0 oder übersteigt die Puffergröße.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> ist keine gültige Kombination von Werten.
- oder -
Beim Zugriff auf den Socket ist ein Fehler auf Betriebssystemebene aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>Sendet Daten mithilfe der angegebenen <see cref="T:System.Net.Sockets.Socket" /> an einen verbundenen <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <returns>Die Anzahl der an den <see cref="T:System.Net.Sockets.Socket" /> gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Sendet den Satz der Puffer in der Liste an einen verbundenen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="buffers">Eine Liste von <see cref="T:System.ArraySegment`1" /> vom Typ <see cref="T:System.Byte" /> mit den zu sendenden Daten.</param>
      <returns>Die Anzahl der an den <see cref="T:System.Net.Sockets.Socket" /> gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> ist leer.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen. Weitere Informationen finden Sie unten im Abschnitt Hinweise.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Sendet den Satz von Puffern in der Liste unter Verwendung der angegebenen <see cref="T:System.Net.Sockets.Socket" /> an einen verbundenen <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <param name="buffers">Eine Liste von <see cref="T:System.ArraySegment`1" /> vom Typ <see cref="T:System.Byte" /> mit den zu sendenden Daten.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <returns>Die Anzahl der an den <see cref="T:System.Net.Sockets.Socket" /> gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> ist leer.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Sendet den Satz von Puffern in der Liste unter Verwendung der angegebenen <see cref="T:System.Net.Sockets.Socket" /> an einen verbundenen <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <param name="buffers">Eine Liste von <see cref="T:System.ArraySegment`1" /> vom Typ <see cref="T:System.Byte" /> mit den zu sendenden Daten.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="errorCode">Ein <see cref="T:System.Net.Sockets.SocketError" />-Objekt, in dem der Socketfehler gespeichert wird.</param>
      <returns>Die Anzahl der an den <see cref="T:System.Net.Sockets.Socket" /> gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> ist leer.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte})">
      <summary>Sendet Daten an einen verbundenen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="buffer">Eins Spanne von Bytes, die die zu sendenden Daten enthält.</param>
      <returns>Die Anzahl der an den <see cref="T:System.Net.Sockets.Socket" /> gesendeten Bytes.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>Sendet Daten mithilfe der angegebenen <see cref="T:System.Net.Sockets.Socket" /> an einen verbundenen <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <param name="buffer">Eins Spanne von Bytes, die die zu sendenden Daten enthält.</param>
      <param name="socketFlags">Eine bitweise Kombination der Enumerationswerte, die das Sende- und Empfangsverhalten angeben.</param>
      <returns>Die Anzahl der an den <see cref="T:System.Net.Sockets.Socket" /> gesendeten Bytes.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Sendet Daten mithilfe der angegebenen <see cref="T:System.Net.Sockets.Socket" /> an einen verbundenen <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <param name="buffer">Eins Spanne von Bytes, die die zu sendenden Daten enthält.</param>
      <param name="socketFlags">Eine bitweise Kombination der Enumerationswerte, die das Sende- und Empfangsverhalten angeben.</param>
      <param name="errorCode">Diese Methode gibt einen der Enumerationswerte zurück, der Fehlercodes für den Socket definiert.</param>
      <returns>Die Anzahl der an den <see cref="T:System.Net.Sockets.Socket" /> gesendeten Bytes.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Sendet Daten asynchron an ein verbundenes <see cref="T:System.Net.Sockets.Socket" />-Objekt.</summary>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter wird nach dem Abschluss des Vorgangs ausgelöst.
<see langword="false" />, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter nicht ausgelöst, und das als Parameter übergebene <paramref name="e" />-Objekt kann direkt nach der Rückgabe des Methodenaufrufs untersucht werden, um die Ergebnisse des Vorgangs abzurufen.</returns>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft oder <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />-Eigenschaft des <paramref name="e" />-Parameters muss auf gültige Puffer verweisen. Eine dieser Eigenschaften kann festgelegt werden, nicht jedoch beide gleichzeitig.</exception>
      <exception cref="T:System.InvalidOperationException">Es wird bereits ein Socketvorgang mit dem im <paramref name="e" />-Parameter angegebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Der <see cref="T:System.Net.Sockets.Socket" /> ist noch nicht verbunden oder wurde nicht über eine <see cref="M:System.Net.Sockets.Socket.Accept" />-<see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />- oder <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" />-Methode abgerufen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary>Ruft einen Wert ab, der die Größe des Sendepuffers für den <see cref="T:System.Net.Sockets.Socket" /> angibt, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Int32" />, das die Größe des Sendepuffer in Bytes enthält. Der Standard ist 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert ist kleiner als 0.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String)">
      <summary>Sendet die Datei <paramref name="fileName" /> mit dem <see cref="T:System.Net.Sockets.Socket" />-Übertragungsflag an ein verbundenes <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />-Objekt.</summary>
      <param name="fileName">Ein <see cref="T:System.String" />, der den Pfad und Namen der Datei enthält, die gesendet werden soll. Dieser Parameter kann <see langword="null" /> sein.</param>
      <exception cref="T:System.NotSupportedException">Der Socket ist nicht mit einem Remotehost verbunden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt ist nicht im Blockierungsmodus und kann diesen synchronen Aufruf nicht annehmen.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei <paramref name="fileName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions)">
      <summary>Sendet die Datei <paramref name="fileName" /> und puffert Daten mit dem angegebenen <see cref="T:System.Net.Sockets.TransmitFileOptions" />-Wert in einem verbundenen <see cref="T:System.Net.Sockets.Socket" />-Objekt.</summary>
      <param name="fileName">Ein <see cref="T:System.String" />, der den Pfad und Namen der Datei enthält, die gesendet werden soll. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="preBuffer">Ein <see cref="T:System.Byte" />-Array, das Daten enthält, die gesendet werden sollen, bevor die Datei gesendet wird. Dieser Parameter kann <see langword="null" />sein.</param>
      <param name="postBuffer">Ein <see cref="T:System.Byte" />-Array, das Daten enthält, die gesendet werden sollen, nachdem die Datei gesendet wurde. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="flags">Mindestens ein <see cref="T:System.Net.Sockets.TransmitFileOptions" />-Wert.</param>
      <exception cref="T:System.NotSupportedException">Das Betriebssystem ist nicht Windows NT oder höher.
- oder -
Der Socket ist nicht mit einem Remotehost verbunden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt ist nicht im Blockierungsmodus und kann diesen synchronen Aufruf nicht annehmen.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei <paramref name="fileName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Sendet eine Auflistung von Dateien oder Datenpuffern im Speicher asynchron an ein verbundenes <see cref="T:System.Net.Sockets.Socket" />-Objekt.</summary>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter wird nach dem Abschluss des Vorgangs ausgelöst.
<see langword="false" />, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter nicht ausgelöst, und das als Parameter übergebene <paramref name="e" />-Objekt kann direkt nach der Rückgabe des Methodenaufrufs untersucht werden, um die Ergebnisse des Vorgangs abzurufen.</returns>
      <exception cref="T:System.IO.FileNotFoundException">Die in der <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" />-Eigenschaft angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.InvalidOperationException">Es wird bereits ein Socketvorgang mit dem im <paramref name="e" />-Parameter angegebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich. Diese Ausnahme tritt auch auf, wenn <see cref="T:System.Net.Sockets.Socket" /> nicht mit einem Remotehost verbunden ist.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ein verbindungsloser <see cref="T:System.Net.Sockets.Socket" /> wird verwendet, und die verwendete Datei überschreitet die maximale Paketgröße des zugrunde liegenden Transports.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendTimeout">
      <summary>Ruft einen Wert ab, der die Zeitspanne bis zum Timeout eines synchronen <see cref="Overload:System.Net.Sockets.Socket.Send" />-Aufrufs angibt, oder legt diesen fest.</summary>
      <returns>Der Timeoutwert in Millisekunden. Wenn Sie die Eigenschaft auf einen Wert zwischen 1 und 499 festlegen, wird der Wert in 500 geändert. Der Standardwert ist 0 und gibt ein unendliches Timeoutintervall an. Durch die Angabe von -1 wird ebenfalls ein unendliches Timeoutintervall angegeben.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert ist kleiner als -1.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Sendet die angegebene Anzahl von Datenbytes an den angegebenen Endpunkt und beginnt dabei an der angegebenen Position im Puffer, wobei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> verwendet werden.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <param name="offset">Die Position im Datenpuffer, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="size">Die Anzahl von Bytes, die gesendet werden sollen.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="remoteEP">Der <see cref="T:System.Net.EndPoint" />, der den Zielort der Daten darstellt.</param>
      <returns>Die Anzahl der gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.
- oder -
<paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.

oder -
<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.

- oder -
<paramref name="size" /> ist kleiner als 0.

oder -
<paramref name="size" /> ist größer als die Länge von <paramref name="buffer" /> minus dem Wert des <paramref name="offset" />-Parameters.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> ist keine gültige Kombination von Werten.

oder -
Beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" /> tritt ein Betriebssystemfehler auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufliste verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Sendet die angegebene Anzahl von Datenbytes an den angegebenen Endpunkt, wobei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> verwendet werden.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <param name="size">Die Anzahl von Bytes, die gesendet werden sollen.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="remoteEP">Der <see cref="T:System.Net.EndPoint" />, der den Zielort der Daten darstellt.</param>
      <returns>Die Anzahl der gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.
- oder -
<paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene <paramref name="size" /> ist größer als <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)">
      <summary>Sendet Daten an den angegebenen Endpunkt.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <param name="remoteEP">Der <see cref="T:System.Net.EndPoint" />, der das Ziel der Daten darstellt.</param>
      <returns>Die Anzahl der gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.
- oder -
<paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Sendet Daten an einen bestimmten Endpunkt unter Verwendung der angegebenen <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <param name="buffer">Ein Array vom Typ <see cref="T:System.Byte" />, das die zu sendenden Daten enthält.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="remoteEP">Der <see cref="T:System.Net.EndPoint" />, der den Zielort der Daten darstellt.</param>
      <returns>Die Anzahl der gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.
- oder -
<paramref name="remoteEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Sendet asynchron Daten an einen angegebenen Remotehost.</summary>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter wird nach dem Abschluss des Vorgangs ausgelöst.
<see langword="false" />, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter nicht ausgelöst, und das als Parameter übergebene <paramref name="e" />-Objekt kann direkt nach der Rückgabe des Methodenaufrufs untersucht werden, um die Ergebnisse des Vorgangs abzurufen.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> darf nicht NULL sein.</exception>
      <exception cref="T:System.InvalidOperationException">Es wird bereits ein Socketvorgang mit dem im <paramref name="e" />-Parameter angegebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Das angegebene Protokoll ist verbindungsorientiert, aber der <see cref="T:System.Net.Sockets.Socket" /> wurde noch nicht verbunden.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)">
      <summary>Legt die IP-Schutzebene für einen Socket fest.</summary>
      <param name="level">Die für diesen Socket festzulegende IP-Schutzebene.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="level" />-Parameter darf nicht <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" /> sein. Die IP-Schutzebene kann nicht auf nicht angegeben festgelegt werden.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Net.Sockets.AddressFamily" /> des Sockets muss <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> sein.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)">
      <summary>Legt die angegebene <see cref="T:System.Net.Sockets.Socket" />-Option auf den angegebenen <see cref="T:System.Boolean" />-Wert fest.</summary>
      <param name="optionLevel">Einer der <see cref="T:System.Net.Sockets.SocketOptionLevel" />-Werte.</param>
      <param name="optionName">Einer der <see cref="T:System.Net.Sockets.SocketOptionName" />-Werte.</param>
      <param name="optionValue">Der als <see cref="T:System.Boolean" />-Wert dargestellte Wert der Option.</param>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Net.Sockets.Socket" />-Objekt wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>Legt die angegebene <see cref="T:System.Net.Sockets.Socket" />-Option auf den angegebenen, als Bytearray dargestellten Wert fest.</summary>
      <param name="optionLevel">Einer der <see cref="T:System.Net.Sockets.SocketOptionLevel" />-Werte.</param>
      <param name="optionName">Einer der <see cref="T:System.Net.Sockets.SocketOptionName" />-Werte.</param>
      <param name="optionValue">Ein Array vom Typ <see cref="T:System.Byte" />, das den Wert der Option darstellt.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>Legt die angegebene <see cref="T:System.Net.Sockets.Socket" />-Option auf den angegebenen ganzzahligen Wert fest.</summary>
      <param name="optionLevel">Einer der <see cref="T:System.Net.Sockets.SocketOptionLevel" />-Werte.</param>
      <param name="optionName">Einer der <see cref="T:System.Net.Sockets.SocketOptionName" />-Werte.</param>
      <param name="optionValue">Ein Wert der Option.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)">
      <summary>Legt die angegebene <see cref="T:System.Net.Sockets.Socket" />-Option auf den angegebenen, als Objekt dargestellten Wert fest.</summary>
      <param name="optionLevel">Einer der <see cref="T:System.Net.Sockets.SocketOptionLevel" />-Werte.</param>
      <param name="optionName">Einer der <see cref="T:System.Net.Sockets.SocketOptionName" />-Werte.</param>
      <param name="optionValue">Eine <see cref="T:System.Net.Sockets.LingerOption" /> oder <see cref="T:System.Net.Sockets.MulticastOption" /> mit dem Wert der Option.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="optionValue" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary>Deaktiviert Senden und Empfangen für einen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="how">Einer der <see cref="T:System.Net.Sockets.SocketShutdown" />-Werte, der den Vorgang angibt, der nicht mehr zulässig ist.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SocketType">
      <summary>Ruft den Typ des <see cref="T:System.Net.Sockets.Socket" /> ab.</summary>
      <returns>Einer der <see cref="T:System.Net.Sockets.SocketType" />-Werte.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv4">
      <summary>Ruft einen Wert ab, der angibt, ob IPv4-Unterstützung verfügbar und auf dem aktuellen Host aktiviert ist.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Host das Protokoll IPv4 unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv6">
      <summary>Ruft einen Wert ab, der angibt, ob das Framework IPv6 für bestimmte veraltete <see cref="T:System.Net.Dns" />-Member unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn das Framework IPv6 für bestimmte veraltete <see cref="T:System.Net.Dns" />-Methoden unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary>Ruft einen Wert ab, der die Gültigkeitsdauer (TTL) von IP (Internet Protocol)-Paketen angibt, die vom <see cref="T:System.Net.Sockets.Socket" /> gesendet werden.</summary>
      <returns>Der TTL-Wert.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Für den TTL-Wert kann keine negative Zahl festgelegt werden.</exception>
      <exception cref="T:System.NotSupportedException">Diese Eigenschaft kann nur für Sockets in der <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />-Familie oder der <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />-Familie festgelegt werden.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen. Dieser Fehler wird auch zurückgegeben, wenn versucht wird, TTL auf einen höheren Wert als 255 festzulegen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.UseOnlyOverlappedIO">
      <summary>Gibt an, ob der Socket nur den Modus für überlappende E/A-Vorgänge verwenden soll.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.Socket" /> nur überlappende E/A-Vorgänge verwendet, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Der Socket wurde an einen Abschlussanschluss gebunden.</exception>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary>Stellt einen asynchronen Socketvorgang dar.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary>Erstellt eine leere <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Instanz.</summary>
      <exception cref="T:System.NotSupportedException">Die Plattform wird nicht unterstützt.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
      <summary>Ruft den Socket ab, der zum Akzeptieren einer Verbindung mit einer asynchronen Socketmethode erstellt wird, oder legt ihn fest.</summary>
      <returns>Der zu verwendende <see cref="T:System.Net.Sockets.Socket" /> oder der Socket, der zum Akzeptieren einer Verbindung mit einer asynchronen Socketmethode erstellt wird.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary>Ruft den Datenpuffer ab, der mit einer asynchronen Socketmethode verwendet werden soll.</summary>
      <returns>Ein <see cref="T:System.Byte" />-Array, das den Datenpuffer darstellt, der mit einer asynchronen Socketmethode verwendet werden soll.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary>Ruft ein Array von Datenpuffern ab, die mit einer asynchronen Socketmethode verwendet werden sollen, oder legt es fest.</summary>
      <returns>Eine <see cref="T:System.Collections.IList" />, die ein Array von Datenpuffern darstellt, die mit einer asynchronen Socketmethode verwendet werden sollen.</returns>
      <exception cref="T:System.ArgumentException">Für einen set-Vorgang wurden mehrdeutige Puffer angegeben. Diese Ausnahme tritt auf, wenn die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft auf einen Wert ungleich NULL festgelegt wurde und versucht wurde, die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />-Eigenschaft auf einen Wert ungleich NULL festzulegen.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary>Ruft die Anzahl der im Socketvorgang übertragenen Bytes ab.</summary>
      <returns>Ein <see cref="T:System.Int32" /> mit der Anzahl der im Socketvorgang übertragenen Bytes.</returns>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary>Das Ereignis, das zum Abschließen eines asynchronen Vorgangs verwendet wird.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary>Ruft die Ausnahme im Fall eines Verbindungsfehlers ab, wenn <see cref="T:System.Net.DnsEndPoint" /> verwendet wurde.</summary>
      <returns>Ein <see cref="T:System.Exception" />, das die Ursache des Verbindungsfehlers angibt, wenn ein <see cref="T:System.Net.DnsEndPoint" /> für die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />-Eigenschaft angegeben wurde.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary>Das erstellte und verbundene <see cref="T:System.Net.Sockets.Socket" />-Objekt nach dem erfolgreichen Beenden der <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />-Methode.</summary>
      <returns>Das verbundene <see cref="T:System.Net.Sockets.Socket" />-Objekt.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary>Ruft die maximale Datenmenge in Bytes ab, die in einem asynchronen Vorgang gesendet oder empfangen wird.</summary>
      <returns>Ein <see cref="T:System.Int32" /> mit der maximalen Datenmenge in Bytes, die gesendet oder empfangen werden soll.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
      <summary>Ruft einen Wert ab, der angibt, ob ein Socket nach einem Trennvorgang wiederverwendet werden kann, oder legt ihn fest.</summary>
      <returns>Ein <see cref="T:System.Boolean" />, der angibt, ob ein Socket nach einem Trennvorgang wiederverwendet werden kann.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary>Gibt die von der <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Instanz verwendeten nicht verwalteten Ressourcen zurück und verwirft optional die verwalteten Ressourcen.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary>Gibt von der <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Klasse verwendete Ressourcen frei.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary>Ruft den Typ des Socketvorgangs ab, der zuletzt mit diesem Kontextobjekt ausgeführt wurde.</summary>
      <returns>Eine <see cref="T:System.Net.Sockets.SocketAsyncOperation" />-Instanz, die den Typ des Socketvorgangs angibt, der zuletzt mit diesem Kontextobjekt ausgeführt wurde.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer">
      <summary>Ruft den Arbeitsspeicherbereich ab, der als Puffer mit einer asynchronen Socketmethode verwendet werden soll.</summary>
      <returns>Ein Arbeitsspeicher Bereich, der den Datenpuffer darstellt, der mit einer asynchronen Socketmethode verwendet werden soll.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary>Ruft den Offset in Bytes im Datenpuffer ab, auf den von der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft verwiesen wird.</summary>
      <returns>Ein <see cref="T:System.Int32" /> mit dem Offset in Bytes im Datenpuffer, auf den von der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft verwiesen wird.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Stellt eine Methode dar, die beim Abschluss eines asynchronen Vorgangs aufgerufen wird.</summary>
      <param name="e">Das signalisierte Ereignis.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
      <summary>Ruft die IP-Adresse und Schnittstelle eines empfangenen Pakets ab.</summary>
      <returns>Eine <see cref="T:System.Net.Sockets.IPPacketInformation" />-Instanz, die die IP-Zieladresse und Schnittstelle eines empfangenen Pakets enthält.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary>Ruft den Remote-IP-Endpunkt für einen asynchronen Vorgang ab oder legt ihn fest.</summary>
      <returns>Ein <see cref="T:System.Net.EndPoint" />, der den Remote-IP-Endpunkt für einen asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
      <summary>Ruft ein Array von Puffern ab, die für einen von der <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode verwendeten asynchronen Vorgang gesendet werden sollen, oder legt es fest.</summary>
      <returns>Ein Array von <see cref="T:System.Net.Sockets.SendPacketsElement" />-Objekten, das ein Array von zu sendenden Puffern darstellt.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
      <summary>Ruft eine bitweise Kombination von <see cref="T:System.Net.Sockets.TransmitFileOptions" />-Werten für einen asynchronen Vorgang ab, der von der <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode verwendet wird, oder legt sie fest.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.TransmitFileOptions" /> mit einer bitweisen Kombination von Werten, die mit einem asynchronen Vorgang verwendet werden.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
      <summary>Ruft die Größe des im Sendevorgang verwendeten Datenblocks in Bytes ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Int32" /> mit der Größe des im Sendevorgang verwendeten Datenblocks in Bytes.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary>Legt den Datenpuffer fest, der mit einer asynchronen Socketmethode verwendet werden soll.</summary>
      <param name="buffer">Der Datenpuffer, der mit einer asynchronen Socketmethode verwendet werden soll.</param>
      <param name="offset">Der Offset (in Bytes) im Datenpuffer, in dem der Vorgang beginnt.</param>
      <param name="count">Die maximale Datenmenge in Bytes, die im Puffer gesendet oder empfangen werden soll.</param>
      <exception cref="T:System.ArgumentException">Es wurden mehrdeutige Puffer angegeben. Diese Ausnahme tritt auf, wenn die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft nicht NULL ist und die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />-Eigenschaft ebenfalls nicht NULL ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Argument lag außerhalb des gültigen Bereichs. Diese Ausnahme tritt auf, wenn der <paramref name="offset" />-Parameter kleiner als 0 (null) oder größer als die Länge des Arrays in der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft ist. Diese Ausnahme tritt außerdem auf, wenn der <paramref name="count" />-Parameter kleiner als 0 (null) oder größer als die Länge des Arrays in der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft abzüglich des <paramref name="offset" />-Parameters ist.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary>Legt den Datenpuffer fest, der mit einer asynchronen Socketmethode verwendet werden soll.</summary>
      <param name="offset">Der Offset (in Bytes) im Datenpuffer, in dem der Vorgang beginnt.</param>
      <param name="count">Die maximale Datenmenge in Bytes, die im Puffer gesendet oder empfangen werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Argument lag außerhalb des gültigen Bereichs. Diese Ausnahme tritt auf, wenn der <paramref name="offset" />-Parameter kleiner als 0 (null) oder größer als die Länge des Arrays in der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft ist. Diese Ausnahme tritt außerdem auf, wenn der <paramref name="count" />-Parameter kleiner als 0 (null) oder größer als die Länge des Arrays in der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft abzüglich des <paramref name="offset" />-Parameters ist.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Memory{System.Byte})">
      <summary>Legt den Arbeitsspeicherbereich fest, der als Puffer mit einer asynchronen Socketmethode verwendet werden soll.</summary>
      <param name="buffer">Der Arbeitsspeicherbereich, der als Puffer mit einer asynchronen Socketmethode verwendet werden soll.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary>Ruft das Ergebnis des asynchronen Socketvorgangs ab oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Net.Sockets.SocketError" />, der das Ergebnis des asynchronen Socketvorgangs darstellt.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
      <summary>Ruft die Ergebnisse eines asynchronen Socketvorgangs ab oder legt das Verhalten eines asynchronen Vorgangs fest.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.SocketFlags" />, die die Ergebnisse eines asynchronen Socketvorgangs darstellen.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary>Ruft ein Benutzer- oder Anwendungsobjekt ab, das diesem asynchronen Socketvorgang zugeordnet ist, oder legt es fest.</summary>
      <returns>Ein Objekt, das das Benutzer- oder Anwendungsobjekt darstellt, das diesem asynchronen Socketvorgang zugeordnet ist.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary>Der Typ des asynchronen Socketvorgangs, der zuletzt mit diesem Kontextobjekt ausgeführt wurde.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Accept">
      <summary>Ein Accept-Socketvorgang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary>Ein Connect-Socketvorgang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Disconnect">
      <summary>Ein Disconnect-Socketvorgang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary>Keiner der Socketvorgänge.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary>Ein Receive-Socketvorgang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveFrom">
      <summary>Ein ReceiveFrom-Socketvorgang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveMessageFrom">
      <summary>Ein ReceiveMessageFrom-Socketvorgang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary>Ein Send-Socketvorgang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendPackets">
      <summary>Ein SendPackets-Socketvorgang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendTo">
      <summary>Ein SendTo-Socketvorgang.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketFlags">
      <summary>Gibt das Verhalten beim Senden und Empfangen von Sockets an.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Broadcast">
      <summary>Gibt ein Broadcastpaket an.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.ControlDataTruncated">
      <summary>Gibt an, dass die Steuerelementdaten nicht in einen internen 64-KB-Puffer passten und abgeschnitten wurden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.DontRoute">
      <summary>Ohne Verwendung von Routingtabellen senden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Multicast">
      <summary>Gibt ein Multicastpaket an.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.None">
      <summary>Für diesen Aufruf keine Flags verwenden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.OutOfBand">
      <summary>Out-of-Band-Daten verarbeiten.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Partial">
      <summary>Partielles Senden oder Empfangen für Nachricht.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Peek">
      <summary>Die eingehende Nachricht einsehen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Truncated">
      <summary>Die Nachricht war zu groß für den angegebenen Puffer und wurde abgeschnitten.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketInformation">
      <summary>Kapselt die Informationen, die zum Duplizieren von <see cref="T:System.Net.Sockets.Socket" /> erforderlich sind.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.Options">
      <summary>Ruft die Optionen für <see cref="T:System.Net.Sockets.Socket" /> ab oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Net.Sockets.SocketInformationOptions" />-Instanz.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.ProtocolInformation">
      <summary>Ruft die Protokollinformationen für <see cref="T:System.Net.Sockets.Socket" /> ab oder legt diese fest.</summary>
      <returns>Ein Array vom Typ <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketInformationOptions">
      <summary>Beschreibt Zustände für <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Connected">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> ist verbunden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Listening">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> überwacht neue Verbindungen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.NonBlocking">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> ist nicht blockierend.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.UseOnlyOverlappedIO">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> verwendet überlappende E/A.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionLevel">
      <summary>Definiert Socketoptionsebenen für die <see cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />-Methode und die <see cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" />-Methode.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IP">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />-Optionen gelten nur auf IP-Sockets angewendet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IPv6">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />-Optionen werden nur auf IPv6-Sockets angewendet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Socket">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />-Optionen werden auf alle Sockets angewendet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Tcp">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />-Optionen werden nur auf TCP-Sockets angewendet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Udp">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />-Optionen werden nur auf UDP-Sockets angewendet.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionName">
      <summary>Definiert die Konfigurationsoptionsnamen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AcceptConnection">
      <summary>Der Socket überwacht.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddMembership">
      <summary>Fügt eine IP-Gruppenmitgliedschaft hinzu.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddSourceMembership">
      <summary>Verknüpft eine Quellgruppe.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BlockSource">
      <summary>Blockiert Daten aus einer Quelle.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Broadcast">
      <summary>Lässt das Senden von Broadcastmeldungen für den Socket zu.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BsdUrgent">
      <summary>Verwenden Sie dringende Daten wie in RFC-1222 definiert. Diese Option kann nur einmal festgelegt werden. Nachdem sie festgelegt wurde, kann sie nicht deaktiviert werden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ChecksumCoverage">
      <summary>Legt die UDP-Prüfsummenabdeckung fest oder ruft diese ab.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Debug">
      <summary>Zeichnet Debuginformationen auf.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontFragment">
      <summary>Keine Fragmentierung von IP-Datengrammen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontLinger">
      <summary>Ordnungsgemäßes, unverzügliches Schließen des Sockets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontRoute">
      <summary>Keine Weiterleitung. Das Paket wird direkt an die Schnittstellenadressen gesendet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropMembership">
      <summary>Legt eine IP-Gruppenmitgliedschaft ab.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropSourceMembership">
      <summary>Legt eine Quellgruppe ab.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Error">
      <summary>Ruft den Fehlerstatus ab und löscht ihn.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ExclusiveAddressUse">
      <summary>Ermöglicht das Binden eines Sockets für den exklusiven Zugriff.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Expedited">
      <summary>Verwenden Sie beschleunigte Daten wie in RFC-1222 definiert. Diese Option kann nur einmal festgelegt werden. Nachdem sie festgelegt wurde, kann sie nicht deaktiviert werden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HeaderIncluded">
      <summary>Gibt an, dass die Anwendung den IP-Header für ausgehende Datagramme bereitstellt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HopLimit">
      <summary>Gibt die maximale Anzahl von Routerweiterleitungen für ein IPv6 (Internet Protocol, Version 6)-Paket an. Dies entspricht der Gültigkeitsdauer (TTL) für Internet Protocol, Version 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPOptions">
      <summary>Gibt die IP-Optionen an, die in ausgehende Datagramme eingefügt werden sollen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel">
      <summary>Ermöglicht die Einschränkung eines IPv6-Sockets auf einen angegebenen Bereich, z. B. Adressen mit demselben linklokalen oder standortlokalen Präfix. Mithilfe dieser Socketoption können in Anwendungen Zugriffseinschränkungen für IPv6-Sockets festgelegt werden. Mit solchen Einschränkungen kann sich eine im privaten LAN ausgeführte Anwendung selbst einfach und stabil vor externen Angriffen schützen. Diese Socketoption erweitert oder beschränkt den Bereich eines empfangsbereiten Sockets und ermöglicht so bei Bedarf den uneingeschränkten Zugriff von öffentlichen und privaten Benutzern oder beschränkt den Zugriff nur auf denselben Standort. Für diese Socketoption sind in der <see cref="T:System.Net.Sockets.IPProtectionLevel" />-Enumeration angegebene Schutzebenen definiert.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IpTimeToLive">
      <summary>Legt das Time-To-Live-Feld für die Gültigkeitsdauer im IP-Header fest.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPv6Only">
      <summary>Gibt an, ob ein für die AF_INET6-Adressfamilie erstellter Socket auf IPv6-Kommunikation beschränkt ist. Für die AF_INET6-Adressfamilie erstellte Sockets können sowohl für IPv6- als auch für IPv4-Kommunikation verwendet werden. In einigen Anwendungen kann es erforderlich sein, die Verwendung eines für die AF_INET6-Adressfamilie erstellten Sockets auf die IPv6-Kommunikation zu beschränken. Wenn dieser Wert ungleich 0 ist (Standardwert unter Windows), kann ein für die AF_INET6-Adressfamilie erstellter Socket verwendet werden, um nur IPv6-Pakete zu senden und zu empfangen. Wenn dieser Wert 0 ist, kann ein für die AF_INET6-Adressfamilie erstellter Socket zum Senden und Empfangen von IPv6- oder IPv4-Paketen verwendet werden. Die Möglichkeit der Interaktion mit einer IPv4-Adresse setzt die Verwendung von IPv4-zugeordneten Adressen voraus. Diese Socketoption wird unter Windows Vista oder höher unterstützt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.KeepAlive">
      <summary>Verwendet Keep-Alives.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Linger">
      <summary>Das Schließen wird verzögert, wenn nicht gesendete Daten vorhanden sind.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MaxConnections">
      <summary>Wird nicht unterstützt. Löst bei Verwendung eine <see cref="T:System.Net.Sockets.SocketException" /> aus.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastInterface">
      <summary>Legt die Schnittstelle für ausgehende Multicastpakete fest.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastLoopback">
      <summary>Ein IP-Multicast-Loopback.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastTimeToLive">
      <summary>Eine IP-Multicast-Gültigkeitsdauer.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoChecksum">
      <summary>Sendet UDP-Datagramme mit auf 0 festgelegter Prüfsumme.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoDelay">
      <summary>Deaktiviert den Nagle-Algorithmus für Sammelsendungen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.OutOfBandInline">
      <summary>Empfängt Out-Of-Band-Daten im normalen Datenstream.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.PacketInformation">
      <summary>Gibt Informationen über empfangene Pakete zurück.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveBuffer">
      <summary>Gibt den Gesamtpufferspeicher pro Socket an, der für Empfangsvorgänge reserviert ist. Dies hängt nicht von der maximalen Meldungsgröße oder der Größe eines TCP-Fensters ab.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveLowWater">
      <summary>Gibt die untere Grenze für <see cref="Overload:System.Net.Sockets.Socket.Receive" />-Vorgänge an.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveTimeout">
      <summary>Empfängt ein Timeout. Diese Option gilt nur für synchrone Methoden, sie wirkt sich nicht auf asynchrone Methoden wie die <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />-Methode aus.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseAddress">
      <summary>Ermöglicht, dass der Socket an eine bereits verwendete Adresse gebunden wird.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseUnicastPort">
      <summary>Gibt an, dass das System die Portzuordnung für ausgehende Verbindungen verzögern soll. Dies entspricht der Verwendung der SO_REUSE_UNICASTPORT-Socketoption von Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendBuffer">
      <summary>Gibt den Gesamtpufferspeicher pro Socket an, der für Sendevorgänge reserviert ist. Dies hängt nicht von der maximalen Meldungsgröße oder der Größe eines TCP-Fensters ab.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendLowWater">
      <summary>Gibt die untere Grenze für <see cref="Overload:System.Net.Sockets.Socket.Send" />-Vorgänge an.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendTimeout">
      <summary>Sendet ein Timeout. Diese Option gilt nur für synchrone Methoden, sie wirkt sich nicht auf asynchrone Methoden wie die <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />-Methode aus.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveInterval">
      <summary>Die Anzahl der Sekunden, die eine TCP-Verbindung auf eine Keep-Alive-Antwort wartet, bevor ein weiterer Keep-Alive-Test gesendet wird.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveRetryCount">
      <summary>Die Anzahl der TCP-Keep-Alive-Tests, die vor dem Beenden der Verbindung gesendet werden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveTime">
      <summary>Die Anzahl der Sekunden, die eine TCP-Verbindung aktiv/im Leerlauf bleibt, bevor Keep-Alive-Tests an den Remotecomputer gesendet werden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Type">
      <summary>Ruft den Sockettyp ab.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TypeOfService">
      <summary>Ändert den Dienstfeldtyp des IP-Headers.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UnblockSource">
      <summary>Hebt die Sperre einer zuvor blockierten Quelle auf.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateAcceptContext">
      <summary>Aktualisiert die Eigenschaften eines angenommenen Sockets mit den Eigenschaften eines vorhandenen Sockets. Dies entspricht der Verwendung der SO_UPDATE_ACCEPT_CONTEXT-Socketoption von Winsock 2 und wird nur für verbindungsorientierte Sockets unterstützt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateConnectContext">
      <summary>Aktualisiert die Eigenschaften eines verbundenen Sockets mit den Eigenschaften eines vorhandenen Sockets. Dies entspricht der Verwendung der SO_UPDATE_CONNECT_CONTEXT-Socketoption von Winsock 2 und wird nur für verbindungsorientierte Sockets unterstützt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UseLoopback">
      <summary>Umgeht die Hardware nach Möglichkeit.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveFromResult">
      <summary>Das Ergebnis eines <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />-Vorgangs.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.ReceivedBytes">
      <summary>Die Anzahl der empfangenen Bytes. Wenn der <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />-Vorgang nicht erfolgreich war, dann 0 (null).</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.RemoteEndPoint">
      <summary>Der Quell-<see cref="T:System.Net.EndPoint" />.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveMessageFromResult">
      <summary>Das Ergebnis eines <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />-Vorgangs.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.PacketInformation">
      <summary>Eine <see cref="T:System.Net.Sockets.IPPacketInformation" /> mit den Adress- und Schnittstelleninformationen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.ReceivedBytes">
      <summary>Die Anzahl der empfangenen Bytes. Wenn der <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />-Vorgang nicht erfolgreich ist, ist dieser Wert 0 (null).</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.RemoteEndPoint">
      <summary>Die Quell-<see cref="T:System.Net.EndPoint" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.SocketFlags">
      <summary>Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte für das empfangene Paket.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary>Definiert Konstanten, die von der <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />-Methode verwendet werden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary>Deaktiviert das Senden und Empfangen für einen <see cref="T:System.Net.Sockets.Socket" />. Dieses Feld ist konstant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary>Deaktiviert das Empfangen für einen <see cref="T:System.Net.Sockets.Socket" />. Dieses Feld ist konstant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary>Deaktiviert das Senden für einen <see cref="T:System.Net.Sockets.Socket" />. Dieses Feld ist konstant.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketTaskExtensions">
      <summary>Diese Klasse enthält Erweiterungsmethoden der Klasse <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)">
      <summary>Führt einen asynchronen Vorgang aus, um einen eingehenden Verbindungsversuch auf dem Socket anzunehmen.</summary>
      <param name="socket">Der Socket, der auf eingehende Verbindungen lauscht.</param>
      <returns>Ein asynchroner Task, der mit einem <see cref="T:System.Net.Sockets.Socket" /> abschließt, um die Kommunikation mit dem Remotehost zu verarbeiten.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
      <summary>Führt einen asynchronen Vorgang aus, um einen eingehenden Verbindungsversuch auf dem Socket anzunehmen.</summary>
      <param name="socket">Der Socket, der eingehende Verbindungen anhört.</param>
      <param name="acceptSocket">Das angenommene <see cref="T:System.Net.Sockets.Socket" />-Objekt. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Ein asynchroner Task, der mit einem <see cref="T:System.Net.Sockets.Socket" /> abschließt, um die Kommunikation mit dem Remotehost zu verarbeiten.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
      <summary>Stellt eine Verbindung mit einem Remotehost her.</summary>
      <param name="socket">Der Socket, der zum Herstellen einer Verbindung verwendet wird.</param>
      <param name="remoteEP">Ein Endpunkt, der das Remotegerät darstellt.</param>
      <returns>Ein asynchroner Task.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
      <summary>Stellt eine Verbindung mit einem Remotehost her. Der Host wird mit einer IP-Adresse und einer Portnummer angegeben.</summary>
      <param name="socket">Der Socket, auf dem der Verbindungsvorgang ausgeführt wird.</param>
      <param name="address">Die IP-Adresse des Remotehosts.</param>
      <param name="port">Die Portnummer des Remotehosts.</param>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
      <summary>Stellt eine Verbindung mit einem Remotehost her. Der Host wird durch ein Array von IP-Adressen und eine Portnummer angegeben.</summary>
      <param name="socket">Der Socket, auf dem der verbundene Vorgang ausgeführt wird.</param>
      <param name="addresses">Die IP-Adressen des Remotehosts.</param>
      <param name="port">Die Portnummer des Remotehosts.</param>
      <returns>Eine Aufgabe, die den asynchronen Verbindungsvorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
      <summary>Stellt eine Verbindung mit einem Remotehost her. Der Host wird durch einen Hostnamen und eine Portnummer angegeben.</summary>
      <param name="socket">Der Socket, auf dem der Verbindungsvorgang ausgeführt wird.</param>
      <param name="host">Der Name des Remotehosts.</param>
      <param name="port">Die Portnummer des Remotehosts.</param>
      <returns>Ein asynchroner Task.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>Empfängt Daten aus einem verbundenen Socket.</summary>
      <param name="socket">Der Socket, auf dem der Empfangsvorgang (Receive) ausgeführt wird.</param>
      <param name="buffer">Ein Array, bei dem es sich um den Speicherort für empfangene Daten handelt.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <returns>Eine Aufgabe, die den asynchronen Empfangsvorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält die Anzahl der Bytes, die empfangen werden.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Empfängt Daten aus einem verbundenen Socket.</summary>
      <param name="socket">Der Socket, auf dem der Empfangsvorgang (Receive) ausgeführt wird.</param>
      <param name="buffers">Ein Array, bei dem es sich um den Speicherort für empfangene Daten handelt.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <returns>Eine Aufgabe, die den asynchronen Empfangsvorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält die Anzahl der Bytes, die empfangen werden.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Memory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <summary>Empfängt Daten aus einem verbundenen Socket.</summary>
      <param name="socket">Der Socket, auf dem der Empfangsvorgang (Receive) ausgeführt wird.</param>
      <param name="buffer">Ein Speicherbereich, der der Speicherort für die empfangenen Daten ist.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das verwendet werden kann, um zu signalisieren, dass der asynchrone Vorgang abgebrochen werden sollte.</param>
      <returns>Ein Task, der mit der Anzahl der empfangenen Bytes abgeschlossen wird, oder 0, wenn das Ende des Datenstroms erreicht wurde.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Empfängt Daten von einem angegebenen Netzwerkgerät.</summary>
      <param name="socket">Der Socket, auf dem der ReceiveFrom-Vorgang ausgeführt wird.</param>
      <param name="buffer">Ein Array des Typs „Byte“, bei dem es sich um den Speicherort für empfangene Daten handelt.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="remoteEndPoint">Ein Endpunkt, der die Datenquelle darstellt.</param>
      <returns>Eine asynchrone Aufgabe, die mit einer SocketReceiveFromResult-Struktur beendet wird.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Empfängt die angegebene Anzahl von Datenbytes an der angegebenen Position im Datenpuffer, verwendet dabei die angegebenen <see cref="T:System.Net.Sockets.SocketFlags" /> und speichert die Endpunkt- und Paketinformationen.</summary>
      <param name="socket">Der Socket, auf dem der Vorgang ausgeführt wird.</param>
      <param name="buffer">Ein Array, bei dem es sich um den Speicherort für empfangene Daten handelt.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="remoteEndPoint">Ein <see cref="T:System.Net.EndPoint" />, der den Remoteserver darstellt.</param>
      <returns>Eine asynchrone Aufgabe, die mit einer <see cref="T:System.Net.Sockets.SocketReceiveMessageFromResult" />-Struktur beendet wird.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>Sendet Daten an einen verbundenen Socket.</summary>
      <param name="socket">Der Socket, auf dem der Vorgang ausgeführt wird.</param>
      <param name="buffer">Ein Array vom Typ „Byte“, das die zu sendenden Daten enthält.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <returns>Ein asynchroner Task, der mit einer Anzahl von Bytes endet, die an den Socket gesendet werden, wenn der Vorgang erfolgreich ausgeführt wurde. Andernfalls wird der Task mit einem Fehler für einen ungültigen Socket abgeschlossen.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Sendet Daten an einen verbundenen Socket.</summary>
      <param name="socket">Der Socket, auf dem der Vorgang ausgeführt wird.</param>
      <param name="buffers">Ein Array, das die zu sendenden Daten enthält.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <returns>Ein asynchroner Task, der mit einer Anzahl von Bytes endet, die an den Socket gesendet werden, wenn der Vorgang erfolgreich ausgeführt wurde. Andernfalls wird der Task mit einem Fehler für einen ungültigen Socket abgeschlossen.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ReadOnlyMemory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <summary>Sendet Daten an einen verbundenen Socket.</summary>
      <param name="socket">Der Socket, auf dem der Vorgang ausgeführt wird.</param>
      <param name="buffer">Ein Speicherbereich, der die zu sendenden Daten enthält.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das verwendet werden kann, um zu signalisieren, dass der asynchrone Vorgang abgebrochen werden sollte.</param>
      <returns>Ein Task, der mit der Anzahl von Bytes endet, die an den Socket gesendet werden, wenn der Vorgang erfolgreich ausgeführt wurde. Andernfalls wird der Task mit einem Fehler für einen ungültigen Socket abgeschlossen.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Sendet asynchron Daten an einen angegebenen Remotehost.</summary>
      <param name="socket">Der Socket, auf dem der Vorgang ausgeführt wird.</param>
      <param name="buffer">Ein Array, das die zu sendenden Daten enthält.</param>
      <param name="socketFlags">Eine bitweise Kombination der <see cref="T:System.Net.Sockets.SocketFlags" />-Werte.</param>
      <param name="remoteEP">Ein <see cref="T:System.Net.EndPoint" />, der das Remotegerät darstellt.</param>
      <returns>Eine asynchrone Aufgabe, die mit der Zahl von Bytes endet, die gesendet werden, wenn der Vorgang erfolgreich war. Andernfalls wird der Task mit einem Fehler für einen ungültigen Socket abgeschlossen.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary>Gibt den Sockettyp an, der von einer Instanz der <see cref="T:System.Net.Sockets.Socket" />-Klasse dargestellt wird.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Dgram">
      <summary>Unterstützt Datagramme, die verbindungslose, unzuverlässige Meldungen mit einer festen (i. d. R. kleinen) maximalen Länge sind. Meldungen können verloren gehen, doppelt oder in der falschen Reihenfolge empfangen werden. Ein <see cref="T:System.Net.Sockets.Socket" /> vom Typ <see cref="F:System.Net.Sockets.SocketType.Dgram" /> benötigt vor dem Senden und Empfangen von Daten keine Verbindung und kann mit mehreren Peers kommunizieren. <see cref="F:System.Net.Sockets.SocketType.Dgram" /> verwendet das Datagram-Protokoll (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) und die <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />- -Adressenfamilie.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Raw">
      <summary>Unterstützt den Zugriff auf das zugrunde liegende Übertragungsprotokoll. Wenn Sie <see cref="F:System.Net.Sockets.SocketType.Raw" /> verwenden, können Sie für die Kommunikation Protokolle wie das Internet Control Message Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) und das Internet Group Management Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />) verwenden. Die Anwendung muss beim Senden einen vollständigen IP-Header bereitstellen. Bei der Rückgabe empfangener Datagramme bleiben IP-Header und Optionen erhalten.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Rdm">
      <summary>Unterstützt verbindungslose, meldungsorientierte, zuverlässig übermittelte Meldungen und behält die Meldungsbegrenzungen innerhalb der Daten bei. Rdm (Reliably-Delivered Messages)-Meldungen werden nicht dupliziert und in der richtigen Reihenfolge empfangen. Darüber hinaus wird der Absender über verloren gegangene Meldungen benachrichtigt. Wenn Sie einen <see cref="T:System.Net.Sockets.Socket" /> mit <see cref="F:System.Net.Sockets.SocketType.Rdm" /> initialisieren, benötigen Sie vor dem Senden und Empfangen von Daten keine Verbindung mit einem Remotehost. Mit <see cref="F:System.Net.Sockets.SocketType.Rdm" /> können Sie mit mehreren Peers kommunizieren.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Seqpacket">
      <summary>Ermöglicht die verbindungsorientierte und zuverlässige bidirektionale Übertragung von geordneten Bytestreams über ein Netzwerk. <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> dupliziert keine Daten und behält die Begrenzungen innerhalb des Datenstreams bei. Ein <see cref="T:System.Net.Sockets.Socket" /> vom Typ <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> kommuniziert mit einem einzigen Peer und benötigt vor dem Beginn der Kommunikation eine Verbindung mit einem Remotehost.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary>Unterstützt zuverlässige, bidirektionale, verbindungsbasierte Bytestreams, bei denen keine Daten dupliziert und die Begrenzungen nicht beibehalten werden. Ein <see cref="T:System.Net.Sockets.Socket" /> dieses Typs kommuniziert mit einem einzigen Peer und benötigt vor dem Beginn der Kommunikation eine Verbindung mit einem Remotehost. <see cref="F:System.Net.Sockets.SocketType.Stream" /> verwendet das Transmission Control Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) und die <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> -Adressenfamilie.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary>Gibt einen unbekannten <see cref="T:System.Net.Sockets.Socket" />-Typ an.</summary>
    </member>
    <member name="T:System.Net.Sockets.TcpClient">
      <summary>Stellt Clientverbindungen für TCP-Netzwerkdienste bereit.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.TcpClient" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.TcpClient" />-Klasse und bindet sie an den angegebenen lokalen Endpunkt.</summary>
      <param name="localEP">Der <see cref="T:System.Net.IPEndPoint" />, an den der TCP-<see cref="T:System.Net.Sockets.Socket" /> gebunden wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="localEP" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.TcpClient" />-Klasse mit der angegebenen Familie.</summary>
      <param name="family">Die <see cref="P:System.Net.IPAddress.AddressFamily" /> des IP-Protokolls.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="family" />-Parameter entspricht nicht AddressFamily.InterNetwork.
- oder -
Der <paramref name="family" />-Parameter entspricht nicht AddressFamily.InterNetworkV6.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.TcpClient" />-Klasse und stellt eine Verbindung mit dem angegebenen Port am angegebenen Host her.</summary>
      <param name="hostname">Der DNS-Name des Remotehosts, mit dem eine Verbindung hergestellt werden soll.</param>
      <param name="port">Die Portnummer des Remotehosts, mit dem eine Verbindung hergestellt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="hostname" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="port" />-Parameter liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Active">
      <summary>Ruft einen Wert ab, der angibt, ob eine Verbindung hergestellt wurde, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Verbindung hergestellt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Available">
      <summary>Ruft die Datenmenge ab, die über das Netzwerk empfangen wurde und gelesen werden kann.</summary>
      <returns>Die Anzahl der Datenbytes, die vom Netzwerk empfangen wurden und zum Lesen zur Verfügung stehen.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt eine asynchrone Anforderung einer Remotehostverbindung. Der Remotehost wird durch eine <see cref="T:System.Net.IPAddress" /> und eine Anschlussnummer (<see cref="T:System.Int32" />) angegeben.</summary>
      <param name="address">Die <see cref="T:System.Net.IPAddress" /> des Remotehosts.</param>
      <param name="port">Die Portnummer des Remotehosts.</param>
      <param name="requestCallback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Verbindungsvorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />-Objekt, das auf die asynchrone Verbindung verweist.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein höher in der Aufrufliste befindlicher Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Portnummer ist ungültig.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt eine asynchrone Anforderung einer Remotehostverbindung. Der Remotehost wird durch ein <see cref="T:System.Net.IPAddress" />-Array und eine Portnummer (<see cref="T:System.Int32" />) angegeben.</summary>
      <param name="addresses">Mindestens eine <see cref="T:System.Net.IPAddress" />, die die Remotehosts bezeichnet.</param>
      <param name="port">Die Portnummer des Remotehosts.</param>
      <param name="requestCallback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Verbindungsvorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />-Objekt, das auf die asynchrone Verbindung verweist.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="addresses" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein höher in der Aufrufliste befindlicher Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Portnummer ist ungültig.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt eine asynchrone Anforderung einer Remotehostverbindung. Der Remotehost wird durch einen Hostnamen (<see cref="T:System.String" />) und eine Anschlussnummer (<see cref="T:System.Int32" />) angegeben.</summary>
      <param name="host">Der Name des Remotehosts.</param>
      <param name="port">Die Portnummer des Remotehosts.</param>
      <param name="requestCallback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Verbindungsvorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />-Objekt, das auf die asynchrone Verbindung verweist.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="host" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein höher in der Aufrufliste befindlicher Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Portnummer ist ungültig.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Client">
      <summary>Ruft den zugrunde liegenden <see cref="T:System.Net.Sockets.Socket" /> ab oder legt diesen fest.</summary>
      <returns>Der zugrundeliegende Netzwerk-<see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Close">
      <summary>Gibt diese <see cref="T:System.Net.Sockets.TcpClient" />-Instanz frei und fordert an, dass die zugrundeliegende TCP-Verbindung geschlossen wird.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Verbindet unter Verwendung der angegebenen IP-Adresse und Portnummer den Client mit einem TCP-Remotehost.</summary>
      <param name="address">Die <see cref="T:System.Net.IPAddress" /> des Hosts, mit dem eine Verbindung hergestellt werden soll.</param>
      <param name="port">Die Portnummer, mit der eine Verbindung hergestellt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="port" />-Parameter liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.TcpClient" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>Verbindet unter Verwendung der angegebenen IP-Adressen und Portnummer den Client mit einem TCP-Remotehost.</summary>
      <param name="ipAddresses">Die <see cref="T:System.Net.IPAddress" /> des Hosts, mit dem eine Verbindung hergestellt werden soll.</param>
      <param name="port">Die Anschlussnummer, mit der eine Verbindung hergestellt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="ipAddresses" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Portnummer ist ungültig.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein höher in der Aufrufliste befindlicher Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
      <exception cref="T:System.NotSupportedException">Diese Methode ist für Sockets gültig, die das <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />-Flag oder das <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />-Flag verwenden.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
      <summary>Verbindet unter Verwendung des angegebenen Endpunkts des Remotenetzwerks den Client mit einem TCP-Remotehost.</summary>
      <param name="remoteEP">Der <see cref="T:System.Net.IPEndPoint" />, mit dem eine Verbindung hergestellt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="remoteEp" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.TcpClient" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
      <summary>Verbindet den Client mit dem angegebenen Port auf dem angegebenen Host.</summary>
      <param name="hostname">Der DNS-Name des Remotehosts, mit dem eine Verbindung hergestellt werden soll.</param>
      <param name="port">Die Portnummer des Remotehosts, mit dem eine Verbindung hergestellt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="hostname" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="port" />-Parameter liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.TcpClient" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
      <summary>Stellt mit dem angegebenen IP-Adresse und der angegebenen Anschlussnummer als asynchroner Vorgang eine Verbindung zwischen dem Client und einem TCP-Remotehost her.</summary>
      <param name="address">Die <see cref="T:System.Net.IPAddress" /> des Hosts, mit dem eine Verbindung hergestellt werden soll.</param>
      <param name="port">Die Portnummer, mit der eine Verbindung hergestellt werden soll.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="port" />-Parameter liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.TcpClient" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
      <summary>Verbindet unter Verwendung der angegebenen IP-Adressen und Anschlussnummer als asynchroner Vorgang den Client mit einem TCP-Remotehost.</summary>
      <param name="addresses">Die <see cref="T:System.Net.IPAddress" /> des Hosts, mit dem eine Verbindung hergestellt werden soll.</param>
      <param name="port">Die Portnummer, mit der eine Verbindung hergestellt werden soll.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="ipAddresses" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Portnummer ist ungültig.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Security.SecurityException">Ein höher in der Aufrufliste befindlicher Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
      <exception cref="T:System.NotSupportedException">Diese Methode ist für Sockets gültig, die das <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />-Flag oder das <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />-Flag verwenden.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
      <summary>Verbindet den Client mit dem angegebene TCP-Port auf dem angegebenen Host als asynchroner Vorgang.</summary>
      <param name="host">Der DNS-Name des Remotehosts, mit dem eine Verbindung hergestellt werden soll.</param>
      <param name="port">Die Portnummer des Remotehosts, mit dem eine Verbindung hergestellt werden soll.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="hostname" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="port" />-Parameter liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.TcpClient" /> ist geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Connected">
      <summary>Ruft einen Wert ab, der angibt, ob der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> für einen <see cref="T:System.Net.Sockets.TcpClient" /> mit einem Remotehost verbunden ist.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="P:System.Net.Sockets.TcpClient.Client" />-Socket beim letzten Vorgang mit einer Remoteressource verbunden war, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose">
      <summary>Gibt die vom <see cref="T:System.Net.Sockets.TcpClient" /> verwendeten verwalteten und nicht verwalteten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Net.Sockets.TcpClient" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">Auf <see langword="true" /> festgelegt, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
      <summary>Beendet einen ausstehenden asynchronen Verbindungsversuch.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />-Objekt, das durch einen Aufruf von <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> zurückgegeben wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="asyncResult" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="asyncResult" />-Parameter wurde nicht durch einen Aufruf der <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />-Methode zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />-Methode wurde bereits für die asynchrone Verbindung aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.TcpClient" /> nur die Verwendung eines Port durch einen einzigen Client zulässt, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.TcpClient" /> die Verwendung eines bestimmten Anschlusses durch nur einen einzigen Client zulässt, andernfalls <see langword="false" />. Für Windows Server 2003 und Windows XP Service Pack 2 oder höher ist der Standardwert <see langword="true" />, für alle anderen Versionen <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den zugrunde liegenden Socket.</exception>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Finalize">
      <summary>Gibt von der <see cref="T:System.Net.Sockets.TcpClient" />-Klasse verwendete Ressourcen frei.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.GetStream">
      <summary>Gibt den für das Senden und Empfangen von Daten verwendeten <see cref="T:System.Net.Sockets.NetworkStream" /> zurück.</summary>
      <returns>Der zugrundeliegende <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.TcpClient" /> ist mit keinem Remotehost verbunden.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.TcpClient" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.LingerState">
      <summary>Ruft Informationen zum Nachlaufzustand des zugeordneten Sockets ab oder legt sie fest.</summary>
      <returns>Ein <see cref="T:System.Net.Sockets.LingerOption" />. In der Standardeinstellung ist der Nachlauf deaktiviert.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.NoDelay">
      <summary>Ruft einen Wert ab, der eine Verzögerung deaktiviert, wenn Sende- oder Empfangspuffer nicht voll sind, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Verzögerung deaktiviert ist. Andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
      <summary>Ruft die Größe des Empfangspuffers ab oder legt diese fest.</summary>
      <returns>Die Größe des Empfangspuffers in Bytes. Der Standardwert ist 8192 Bytes.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Festlegen der Puffergröße ist ein Fehler aufgetreten.
- oder -
In .NET Compact Framework-Anwendungen können Sie diese Eigenschaft nicht festlegen. Eine Problemumgehung finden Sie im Abschnitt Hinweise unter dem Hinweis zur Plattform.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
      <summary>Ruft den Zeitraum ab, den ein <see cref="T:System.Net.Sockets.TcpClient" /> nach dem Initiieren eines Lesevorgangs auf den Datenempfang wartet, oder legt diesen fest.</summary>
      <returns>Der Timeoutwert der Verbindung in Millisekunden. Der Standardwert ist 0.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendBufferSize">
      <summary>Ruft die Größe des Sendepuffers ab oder legt diese fest.</summary>
      <returns>Die Größe des Sendepuffers in Bytes. Der Standardwert ist 8192 Bytes.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendTimeout">
      <summary>Ruft die Zeitspanne ab, die ein <see cref="T:System.Net.Sockets.TcpClient" /> auf den erfolgreichen Abschluss eines Sendevorgangs wartet, oder legt diese fest.</summary>
      <returns>Der Timeoutwert für den Sendevorgang in Millisekunden. Der Standard ist 0.</returns>
    </member>
    <member name="T:System.Net.Sockets.TcpListener">
      <summary>Überwacht Verbindungen von TCP-Netzwerkclients.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.TcpListener" />-Klasse, die den angegebenen Anschluss überwacht.</summary>
      <param name="port">Der Anschluss, der auf eingehende Verbindungsversuche überwacht werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.TcpListener" />-Klasse, die die eingehenden Verbindungsversuche mit der angegebenen lokalen IP-Adresse und Anschlussnummer überwacht.</summary>
      <param name="localaddr">Eine <see cref="T:System.Net.IPAddress" />, die die lokale IP-Adresse darstellt.</param>
      <param name="port">Der Anschluss, der auf eingehende Verbindungsversuche überwacht werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localaddr" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.TcpListener" />-Klasse mit dem angegebenen lokalen Endpunkt.</summary>
      <param name="localEP">Ein <see cref="T:System.Net.IPEndPoint" />, der den lokalen Endpunkt darstellt, an den der Listener-<see cref="T:System.Net.Sockets.Socket" /> gebunden werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocket">
      <summary>Nimmt eine ausstehende Verbindungsanforderung an.</summary>
      <returns>Ein <see cref="T:System.Net.Sockets.Socket" /> zum Senden und Empfangen von Daten.</returns>
      <exception cref="T:System.InvalidOperationException">Der Listener wurde nicht mit einem Aufruf von <see cref="M:System.Net.Sockets.TcpListener.Start" /> gestartet.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
      <summary>Nimmt eine ausstehende Aufforderung zum Aufbau einer Verbindung als asynchroner Vorgang an.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt <see cref="T:System.Net.Sockets.Socket" /> zurück, das verwendet wird, um Daten zu senden und zu empfangen.</returns>
      <exception cref="T:System.InvalidOperationException">Der Listener wurde nicht mit einem Aufruf von <see cref="M:System.Net.Sockets.TcpListener.Start" /> gestartet.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
      <summary>Nimmt eine ausstehende Verbindungsanforderung an.</summary>
      <returns>Ein <see cref="T:System.Net.Sockets.TcpClient" /> zum Senden und Empfangen von Daten.</returns>
      <exception cref="T:System.InvalidOperationException">Der Listener wurde nicht mit einem Aufruf von <see cref="M:System.Net.Sockets.TcpListener.Start" /> gestartet.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Mit der <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />-Eigenschaft können Sie den spezifischen Fehlercode abrufen. Wenn Sie diesen Code abgerufen haben, finden Sie in der Dokumentation zu API-Fehlercodes unter Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
      <summary>Nimmt eine ausstehende Aufforderung zum Aufbau einer Verbindung als asynchroner Vorgang an.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt <see cref="T:System.Net.Sockets.TcpClient" /> zurück, das verwendet wird, um Daten zu senden und zu empfangen.</returns>
      <exception cref="T:System.InvalidOperationException">Der Listener wurde nicht mit einem Aufruf von <see cref="M:System.Net.Sockets.TcpListener.Start" /> gestartet.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Mit der <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />-Eigenschaft können Sie den spezifischen Fehlercode abrufen. Wenn Sie diesen Code abgerufen haben, finden Sie in der Dokumentation zu API-Fehlercodes unter Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Active">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Net.Sockets.TcpListener" /> Clientverbindungen aktiv überwacht.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Net.Sockets.TcpListener" /> aktiv überwacht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
      <summary>Aktiviert oder deaktiviert die NAT-Überquerung (Netzwerkadressenübersetzung) für eine <see cref="T:System.Net.Sockets.TcpListener" />-Instanz.</summary>
      <param name="allowed">Ein boolescher Wert, der angibt, ob die NAT-Überquerung aktiviert oder deaktiviert werden soll.</param>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />-Methode wird nach dem Aufruf der <see cref="M:System.Net.Sockets.TcpListener.Start" />-Methode aufgerufen.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Vorgang, um eine eingehende Verbindung anzunehmen.</summary>
      <param name="callback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Annahmevorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="callback" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Erstellung des <see cref="T:System.Net.Sockets.Socket" /> verweist.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugriff auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Vorgang, um eine eingehende Verbindung anzunehmen.</summary>
      <param name="callback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Annahmevorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="callback" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Erstellung des <see cref="T:System.Net.Sockets.TcpClient" /> verweist.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugriff auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
      <summary>Erstellt eine neue auf dem angegebenen Port lauschende <see cref="T:System.Net.Sockets.TcpListener" />-Instanz.</summary>
      <param name="port">Der Anschluss, der auf eingehende Verbindungsversuche überwacht werden soll.</param>
      <returns>Eine neue auf dem angegebenen Port lauschende <see cref="T:System.Net.Sockets.TcpListener" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
      <summary>Nimmt asynchron einen eingehenden Verbindungsversuch an und erstellt einen neuen <see cref="T:System.Net.Sockets.Socket" /> zum Behandeln der Remotehostkommunikation.</summary>
      <param name="asyncResult">Ein durch einen Aufruf der <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />-Methode zurückgegebenes <see cref="T:System.IAsyncResult" />.</param>
      <returns>Ein <see cref="T:System.Net.Sockets.Socket" />.
Ein <see cref="T:System.Net.Sockets.Socket" /> zum Senden und Empfangen von Daten.</returns>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="asyncResult" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="asyncResult" />-Parameter wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />-Methode erstellt.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" />-Methode wurde bereits zuvor aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
      <summary>Nimmt asynchron einen eingehenden Verbindungsversuch an und erstellt einen neuen <see cref="T:System.Net.Sockets.TcpClient" /> zum Behandeln der Remotehostkommunikation.</summary>
      <param name="asyncResult">Ein durch einen Aufruf der <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />-Methode zurückgegebenes <see cref="T:System.IAsyncResult" />.</param>
      <returns>Ein <see cref="T:System.Net.Sockets.TcpClient" />.
Ein <see cref="T:System.Net.Sockets.TcpClient" /> zum Senden und Empfangen von Daten.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.TcpListener" /> das Überwachen eines bestimmten Anschlusses durch nur einen einzigen zugrunde liegenden Socket zulässt, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.TcpListener" /> das Überwachen eines bestimmten Anschlusses durch nur einen einzigen <see cref="T:System.Net.Sockets.TcpListener" /> zulässt, andernfalls <see langword="false" />. . Für Windows Server 2003 und Windows XP Service Pack 2 oder höher ist der Standardwert <see langword="true" />, für alle anderen Versionen <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.TcpListener" /> wurde gestartet. Rufen Sie die <see cref="M:System.Net.Sockets.TcpListener.Stop" />-Methode auf, und legen Sie anschließend die <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" />-Eigenschaft fest.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den zugrunde liegenden Socket.</exception>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.LocalEndpoint">
      <summary>Ruft den zugrunde liegenden <see cref="T:System.Net.EndPoint" /> des aktuellen <see cref="T:System.Net.Sockets.TcpListener" /> ab.</summary>
      <returns>Der <see cref="T:System.Net.EndPoint" />, an den der <see cref="T:System.Net.Sockets.Socket" /> gebunden ist.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Pending">
      <summary>Bestimmt, ob ausstehende Verbindungsanforderungen vorliegen.</summary>
      <returns>
        <see langword="true" />, wenn Verbindungen ausstehen, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Der Listener wurde nicht mit einem Aufruf von <see cref="M:System.Net.Sockets.TcpListener.Start" /> gestartet.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Server">
      <summary>Ruft den zugrunde liegenden Netzwerk-<see cref="T:System.Net.Sockets.Socket" /> ab.</summary>
      <returns>Der zugrundeliegende <see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start">
      <summary>Beginnt die Überwachung von eingehenden Verbindungsanforderungen.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Mit der <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />-Eigenschaft können Sie den spezifischen Fehlercode abrufen. Wenn Sie diesen Code abgerufen haben, finden Sie in der Dokumentation zu API-Fehlercodes unter Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
      <summary>Beginnt die Überwachung eingehender Verbindungsanforderungen mit einer maximalen Anzahl ausstehender Verbindungen.</summary>
      <param name="backlog">Die maximale Länge der Warteschlange für ausstehende Verbindungen.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="backlog" />-Parameter ist kleiner als 0 (null) oder übersteigt die maximale Anzahl zulässiger Verbindungen.</exception>
      <exception cref="T:System.InvalidOperationException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> ist NULL.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Stop">
      <summary>Schließt den Listener.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Mit der <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />-Eigenschaft können Sie den spezifischen Fehlercode abrufen. Wenn Sie diesen Code abgerufen haben, finden Sie in der Dokumentation zu API-Fehlercodes unter Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</exception>
    </member>
    <member name="T:System.Net.Sockets.TransmitFileOptions">
      <summary>Die <see cref="T:System.Net.Sockets.TransmitFileOptions" />-Enumeration definiert Werte, die in Dateiübertragungsanforderungen verwendet werden.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.Disconnect">
      <summary>Beginnt, die Verbindung auf Transportebene zu trennen, nachdem alle Dateidaten in die Übertragungswarteschlange gestellt wurden. Bei Verwendung mit <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" /> setzen diese Flags den Socket in einen getrennten, wiederverwendbaren Zustand zurück, nachdem die Datei übertragen wurde.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket">
      <summary>Das Sockethandle kann nach Abschluss der Anforderung wiederverwendet werden. Dieses Flag ist nur gültig, wenn auch <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> angegeben wird. Bei Verwendung mit <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> setzen diese Flags den Socket in einen getrennten, wiederverwendbaren Zustand zurück, nachdem die Datei übertragen wurde.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread">
      <summary>Verwendet den Standardthread, um umfangreiche Dateiübertragungsanforderungen zu verarbeiten.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseKernelApc">
      <summary>Verwendet zum Verarbeiten umfangreicher Dateiübertragungsanforderungen Kernel-APCs (Asynchronous Procedure Calls, asynchrone Prozeduraufrufe) anstelle von Arbeitsthreads. Umfangreiche Anforderungen sind als Anforderungen definiert, die mehrere Lesevorgänge aus der Datei oder einem Cache erfordern. Die Anforderung hängt daher von der Dateigröße und der angegebenen Länge des zu sendenden Pakets ab.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseSystemThread">
      <summary>Verwendet Systemthreads, um umfangreiche Dateiübertragungsanforderungen zu verarbeiten.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.WriteBehind">
      <summary>Führt die Dateiübertragungsanforderung unverzüglich aus. Wenn dieses Flag angegeben und die Dateiübertragung erfolgreich ausgeführt wurde, wurden die Daten vom System akzeptiert, jedoch nicht unbedingt durch die Remoteseite bestätigt. Verwenden Sie dieses Flag nicht zusammen mit dem <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />-Flag und dem <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />-Flag.</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpClient">
      <summary>Stellt die UDP-Netzwerkdienste (User Datagram Protocol) bereit.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse und bindet sie an die angegebene lokale Anschlussnummer.</summary>
      <param name="port">Die Nummer des lokalen Anschlusses, über den die Kommunikation stattfinden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="port" />-Parameter ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" /> oder kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse und bindet sie an die angegebene lokale Anschlussnummer.</summary>
      <param name="port">Der Anschluss, der auf eingehende Verbindungsversuche überwacht werden soll.</param>
      <param name="family">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte, der das Adressierungsschema für den Socket angibt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> ist nicht <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" /> oder kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse und bindet sie an den angegebenen lokalen Endpunkt.</summary>
      <param name="localEP">Ein <see cref="T:System.Net.IPEndPoint" />, der den lokalen Endpunkt darstellt, an den Sie die UDP-Verbindung binden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse.</summary>
      <param name="family">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte, der das Adressierungsschema für den Socket angibt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> ist nicht <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse und richtet einen Standardremotehost ein.</summary>
      <param name="hostname">Der Name des Remote-DNS-Hosts, zu dem die Verbindung hergestellt werden soll.</param>
      <param name="port">Die Nummer des Remoteanschlusses, mit dem die Verbindung hergestellt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Active">
      <summary>Ruft einen Wert ab, der angibt, ob ein Standardremotehost eingerichtet wurde, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Verbindung aktiviert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
      <summary>Aktiviert oder deaktiviert die NAT-Überquerung (Netzwerkadressenübersetzung) für eine <see cref="T:System.Net.Sockets.UdpClient" />-Instanz.</summary>
      <param name="allowed">Ein boolescher Wert, der angibt, ob die NAT-Überquerung aktiviert oder deaktiviert werden soll.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Available">
      <summary>Ruft die vom Netzwerk empfangene Datenmenge ab, die gelesen werden kann.</summary>
      <returns>Die Anzahl der vom Netzwerk empfangenen Datenbytes.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugriff auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Empfängt asynchron ein Datagramm von einem Remotehost.</summary>
      <param name="requestCallback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Empfangsvorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />-Objekt, das auf den asynchronen Empfang verweist.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Sendet asynchron ein Datagramm an einen Remotehost. Das Ziel wurde zuvor durch Aufruf von <see cref="Overload:System.Net.Sockets.UdpClient.Connect" /> angegeben.</summary>
      <param name="datagram">Ein <see cref="T:System.Byte" />-Array, das die zu sendenden Daten enthält.</param>
      <param name="bytes">Die Anzahl von Bytes, die gesendet werden sollen.</param>
      <param name="requestCallback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen zum Sendevorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>Sendet asynchron ein Datagramm an ein Ziel. Das Ziel wird durch einen <see cref="T:System.Net.EndPoint" />angegeben.</summary>
      <param name="datagram">Ein <see cref="T:System.Byte" />-Array, das die zu sendenden Daten enthält.</param>
      <param name="bytes">Die Anzahl von Bytes, die gesendet werden sollen.</param>
      <param name="endPoint">Der <see cref="T:System.Net.EndPoint" />, der das Ziel der Daten darstellt.</param>
      <param name="requestCallback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen zum Sendevorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Sendet asynchron ein Datagramm an ein Ziel. Das Ziel wird durch einen Hostnamen und eine Anschlussnummer angegeben.</summary>
      <param name="datagram">Ein <see cref="T:System.Byte" />-Array, das die zu sendenden Daten enthält.</param>
      <param name="bytes">Die Anzahl von Bytes, die gesendet werden sollen.</param>
      <param name="hostname">Der Zielhost.</param>
      <param name="port">Die Zielanschlussnummer.</param>
      <param name="requestCallback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen zum Sendevorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Client">
      <summary>Ruft den zugrunde liegenden Netzwerk-<see cref="T:System.Net.Sockets.Socket" /> ab oder legt diesen fest.</summary>
      <returns>Der zugrunde liegende Netzwerk-<see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Close">
      <summary>Schließt die UDP-Verbindung.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Richtet einen Standardremotehost mithilfe der angegebenen IP-Adresse und Anschlussnummer ein.</summary>
      <param name="addr">Die <see cref="T:System.Net.IPAddress" /> des Remotehosts, an die Daten gesendet werden sollen.</param>
      <param name="port">Die Anschlussnummer, an die Daten gesendet werden sollen.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addr" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
      <summary>Richtet mit dem angegebenen Netzwerkendpunkt einen Standardremotehost ein.</summary>
      <param name="endPoint">Ein <see cref="T:System.Net.IPEndPoint" />, der den Netzwerkendpunkt angibt, an den Daten gesendet werden sollen.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endPoint" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
      <summary>Richtet einen Standardremotehost mit dem angegebenen Hostnamen und der Anschlussnummer ein.</summary>
      <param name="hostname">Der DNS-Name des Remotehosts, an den Daten gesendet werden sollen.</param>
      <param name="port">Die Anschlussnummer auf dem Remotehost, an den Daten gesendet werden sollen.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose">
      <summary>Gibt die vom <see cref="T:System.Net.Sockets.UdpClient" /> verwendeten verwalteten und nicht verwalteten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Net.Sockets.UdpClient" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.DontFragment">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.UdpClient" /> die Fragmentierung von IP (Internet Protocol)-Datagrammen zulässt, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.UdpClient" /> die Datagrammfragmentierung zulässt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
      <exception cref="T:System.NotSupportedException">Diese Eigenschaft kann nur für Sockets festgelegt werden, die das <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />-Flag oder das <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />-Flag verwenden.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
      <summary>Verlässt eine Multicastgruppe.</summary>
      <param name="multicastAddr">Die <see cref="T:System.Net.IPAddress" /> der zu verlassenden Multicastgruppe.</param>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentException">Die IP-Adresse ist nicht mit dem <see cref="T:System.Net.Sockets.AddressFamily" />-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>Verlässt eine Multicastgruppe.</summary>
      <param name="multicastAddr">Die <see cref="T:System.Net.IPAddress" /> der zu verlassenden Multicastgruppe.</param>
      <param name="ifindex">Die lokale Adresse der zu verlassenden Multicastgruppe.</param>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentException">Die IP-Adresse ist nicht mit dem <see cref="T:System.Net.Sockets.AddressFamily" />-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.EnableBroadcast">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.UdpClient" /> Broadcastpakete senden oder empfangen darf, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.UdpClient" /> Broadcastpakete zulässt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>Beendet einen ausstehenden asynchronen Empfang.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />-Objekt, das durch einen Aufruf von <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> zurückgegeben wird.</param>
      <param name="remoteEP">Der angegebene Remoteendpunkt.</param>
      <returns>Bei Erfolg wird ein Array von Bytes zurückgegeben, dass Datagrammdaten enthält.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> wurde bereits für den asynchronen Lesevorgang aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
      <summary>Beendet einen ausstehenden asynchronen Sendevorgang.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />-Objekt, das durch einen Aufruf von <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /> zurückgegeben wird.</param>
      <returns>Wenn erfolgreich, die Anzahl der an den <see cref="T:System.Net.Sockets.UdpClient" /> gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> wurde bereits für den asynchronen Lesevorgang aufgerufen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den zugrunde liegenden Socket.</exception>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.UdpClient" /> nur die Verwendung eines Port durch einen einzigen Client zulässt, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.UdpClient" /> die Verwendung eines bestimmten Anschlusses durch nur einen einzigen Client zulässt, andernfalls <see langword="false" />. Für Windows Server 2003 und Windows XP Service Pack 2 oder höher ist der Standardwert <see langword="true" />, für alle anderen Versionen <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den zugrunde liegenden Socket.</exception>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
      <summary>Fügt einer Multicastgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> hinzu.</summary>
      <param name="ifindex">Der Schnittstellenindex, der der lokale IP-Adresse zugeordnet ist, an der die Multicastgruppe herzustellen ist.</param>
      <param name="multicastAddr">Die Multicast-<see cref="T:System.Net.IPAddress" /> der Gruppe, der Sie beitreten möchten.</param>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
      <summary>Fügt einer Multicastgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> hinzu.</summary>
      <param name="multicastAddr">Die Multicast-<see cref="T:System.Net.IPAddress" /> der Gruppe, der Sie beitreten möchten.</param>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentException">Die IP-Adresse ist nicht mit dem <see cref="T:System.Net.Sockets.AddressFamily" />-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>Fügt einer Multicasgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> mit angegebener Gültigkeitsdauer (TTL – Time To Live) hinzu.</summary>
      <param name="multicastAddr">Die <see cref="T:System.Net.IPAddress" /> der Multicastgruppe, der Sie beitreten möchten.</param>
      <param name="timeToLive">Die TTL, gemessen in Routerhops.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Die bereitgestellte TTL liegt nicht zwischen 0 und 255</exception>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die IP-Adresse ist nicht mit dem <see cref="T:System.Net.Sockets.AddressFamily" />-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>Fügt einer Multicastgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> hinzu.</summary>
      <param name="multicastAddr">Die Multicast-<see cref="T:System.Net.IPAddress" /> der Gruppe, der Sie beitreten möchten.</param>
      <param name="localAddress">Die lokale <see cref="T:System.Net.IPAddress" />.</param>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.MulticastLoopback">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob ausgehende Multicastpakete an die sendende Anwendung übermittelt werden, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.UdpClient" /> ausgehende Multicastpakete empfängt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
      <summary>Gibt ein von einem Remotehost gesendetes UDP-Datagramm zurück.</summary>
      <param name="remoteEP">Ein <see cref="T:System.Net.IPEndPoint" />, der den Remotehost darstellt, von dem die Daten gesendet wurden.</param>
      <returns>Ein Array vom Typ <see cref="T:System.Byte" />, das Datagrammdaten enthält.</returns>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.ReceiveAsync">
      <summary>Gibt ein von einem Remotehost gesendetes UDP-Datagramm asynchron zurück.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
      <summary>Sendet ein UDP-Datagramm an einen Remotehost.</summary>
      <param name="dgram">Ein Array vom Typ <see cref="T:System.Byte" />, das das zu sendende UDP-Datagramm angibt, dargestellt als Bytearray.</param>
      <param name="bytes">Die Anzahl von Bytes im Datagramm.</param>
      <returns>Die Anzahl der gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>Sendet ein UDP-Datagramm an den Host am angegebenen Remoteendpunkt.</summary>
      <param name="dgram">Ein Array vom Typ <see cref="T:System.Byte" />, das das zu sendende UDP-Datagramm angibt, dargestellt als Bytearray.</param>
      <param name="bytes">Die Anzahl von Bytes im Datagramm.</param>
      <param name="endPoint">Ein <see cref="T:System.Net.IPEndPoint" />, der den Host und den Anschluss darstellt, an die das Datagramm gesendet werden soll.</param>
      <returns>Die Anzahl der gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der<see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</exception>
      <exception cref="T:System.ObjectDisposedException">Der<see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>Sendet ein UDP-Datagramm an einen angegebenen Anschluss auf einem angegebenen Remotehost.</summary>
      <param name="dgram">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</param>
      <param name="bytes">Die Anzahl von Bytes im Datagramm.</param>
      <param name="hostname">Der Name des Remotehosts, an den das Datagramm gesendet werden soll.</param>
      <param name="port">Die Nummer des Remoteanschlusses, mit dem die Verbindung hergestellt werden soll.</param>
      <returns>Die Anzahl der gesendeten Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
      <summary>Sendet asynchron ein UPD-Datagramm an einen Remotehost.</summary>
      <param name="datagram">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</param>
      <param name="bytes">Die Anzahl von Bytes im Datagramm.</param>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" /> zurück.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>Sendet asynchron ein UPD-Datagramm an einen Remotehost.</summary>
      <param name="datagram">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</param>
      <param name="bytes">Die Anzahl von Bytes im Datagramm.</param>
      <param name="endPoint">Ein <see cref="T:System.Net.IPEndPoint" />, der den Host und Port darstellt, an die das Datagramm gesendet werden soll.</param>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" /> zurück.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der<see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</exception>
      <exception cref="T:System.ObjectDisposedException">Der<see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>Sendet asynchron ein UPD-Datagramm an einen Remotehost.</summary>
      <param name="datagram">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</param>
      <param name="bytes">Die Anzahl von Bytes im Datagramm.</param>
      <param name="hostname">Der Name des Remotehosts, an den das Datagramm gesendet werden soll.</param>
      <param name="port">Die Nummer des Remoteports, mit dem kommuniziert werden soll.</param>
      <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" /> zurück.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Ttl">
      <summary>Ruft einen Wert ab, der die Gültigkeitsdauer (TTL – Time to Live) von IP (Internet Protocol)-Paketen angibt, die vom <see cref="T:System.Net.Sockets.UdpClient" /> gesendet werden.</summary>
      <returns>Der TTL-Wert.</returns>
    </member>
    <member name="T:System.Net.Sockets.UdpReceiveResult">
      <summary>Zeigt Ergebnisinformationen für erhaltene UDP von einem Aufruf der <see cref="M:System.Net.Sockets.UdpClient.ReceiveAsync" />- Methode.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpReceiveResult" />-Klasse.</summary>
      <param name="buffer">Ein Puffer, zum Empfangen von Daten im UDP-Paket.</param>
      <param name="remoteEndPoint">Der Remote-Endpunkt des UDP-Pakets.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.Buffer">
      <summary>Einen Puffer mit den Daten abrufen, die im UDP-Paket empfangen werden.</summary>
      <returns>Ein <see cref="T:System.Byte" /> Array mit den Daten im UDP-Paket empfangen werden.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <param name="other">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="other" /> eine Instanz von <see cref="T:System.Net.Sockets.UdpReceiveResult" /> ist, deren Wert gleich dem Wert der Instanz ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <param name="obj">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.Net.Sockets.UdpReceiveResult" /> ist, deren Wert gleich dem Wert der Instanz ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Der Hashcode.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>Überprüft, ob zwei angegebene <see cref="T:System.Net.Sockets.UdpReceiveResult" />-Instanzen äquivalent sind.</summary>
      <param name="left">Die <see cref="T:System.Net.Sockets.UdpReceiveResult" />-Instanz auf der linken Seite des Gleichheitsoperators.</param>
      <param name="right">Die <see cref="T:System.Net.Sockets.UdpReceiveResult" />-Instanz auf der rechten Seite des Gleichheitsoperators.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>Überprüft, ob zwei angegebene <see cref="T:System.Net.Sockets.UdpReceiveResult" />-Instanzen tatsächlich nicht gleich sind.</summary>
      <param name="left">Die <see cref="T:System.Net.Sockets.UdpReceiveResult" />-Instanz auf der linken Seite des Ungleichheitsoperators.</param>
      <param name="right">Die <see cref="T:System.Net.Sockets.UdpReceiveResult" />-Instanz auf der rechten Seite des Ungleichheitsoperators.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.RemoteEndPoint">
      <summary>Ruft den entfernte Endpunkt ab, von dem das UDP Paket empfangen wurde.</summary>
      <returns>Der entfernte Endpunkt, von dem das UDP Paket empfangen wurde.</returns>
    </member>
    <member name="T:System.Net.Sockets.UnixDomainSocketEndPoint">
      <summary>Stellt einen Unix Domain Socket-Endpunkt als Pfad dar.</summary>
    </member>
    <member name="M:System.Net.Sockets.UnixDomainSocketEndPoint.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz des <see cref="T:System.Net.Sockets.UnixDomainSocketEndPoint" /> mit dem Dateipfad, über den ein Unix-Domänensocket verbunden werden soll.</summary>
      <param name="path">Der Pfad, über den ein Unix-Domänensocket verbunden werden soll.</param>
    </member>
  </members>
</doc>