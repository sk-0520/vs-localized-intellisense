<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Compression</name>
  </assembly>
  <members>
    <member name="T:System.IO.Compression.CompressionLevel">
      <summary>Gibt Werte an, die angeben, ob ein Komprimierungsvorgang die Geschwindigkeit oder den Komprimierungsumfang hervorhebt.</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionLevel.Fastest">
      <summary>Der Komprimierungsvorgang soll so schnell wie möglich beendet werden, auch wenn die resultierende Datei nicht optimal komprimiert wird.</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionLevel.NoCompression">
      <summary>Bei der Datei sollte keine Komprimierung erfolgen.</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionLevel.Optimal">
      <summary>Der Komprimierungsvorgang soll optimal ausgeführt werden, auch wenn der Vorgang eine längere Zeit in Anspruch nimmt.</summary>
    </member>
    <member name="T:System.IO.Compression.CompressionMode">
      <summary>Gibt an, ob der zugrunde liegende Stream komprimiert oder dekomprimiert werden soll.</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionMode.Compress">
      <summary>Komprimiert den zugrunde liegenden Stream.</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionMode.Decompress">
      <summary>Dekomprimiert den zugrunde liegenden Stream.</summary>
    </member>
    <member name="T:System.IO.Compression.DeflateStream">
      <summary>Stellt Methoden und Eigenschaften zum Komprimieren und Dekomprimieren von Streams mithilfe des Deflate-Algorithmus bereit.</summary>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.DeflateStream" />-Klasse mithilfe des angegebenen Stream- und Komprimierungsgrads.</summary>
      <param name="stream">Der zu komprimierende Stream.</param>
      <param name="compressionLevel">Einer der Enumerationswerte, der angibt, ob die Geschwindigkeit oder Komprimierungsleistungsfähigkeit priorisiert wird, wenn der Stream komprimiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der Stream unterstützt keine Schreibvorgänge wie die Komprimierung. (Die <see cref="P:System.IO.Stream.CanWrite" />-Eigenschaft für das Streamobjekt ist <see langword="false" />).</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.DeflateStream" />-Klasse unter Verwendung des angegebenen Streams und der Komprimierungsebene und lässt den Stream optional geöffnet.</summary>
      <param name="stream">Der zu komprimierende Stream.</param>
      <param name="compressionLevel">Einer der Enumerationswerte, der angibt, ob die Geschwindigkeit oder Komprimierungsleistungsfähigkeit priorisiert wird, wenn der Stream komprimiert wird.</param>
      <param name="leaveOpen">
        <see langword="true" />, um das Streamobjekt offen zu lassen, nachdem das <see cref="T:System.IO.Compression.DeflateStream" />-Objekt freigegeben wurde, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der Stream unterstützt keine Schreibvorgänge wie die Komprimierung. (Die <see cref="P:System.IO.Stream.CanWrite" />-Eigenschaft für das Streamobjekt ist <see langword="false" />).</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.DeflateStream" />-Klasse mithilfe des angegebenen Stream- und Komprimierungsmodus.</summary>
      <param name="stream">Der zu komprimierende oder zu dekomprimierende Stream.</param>
      <param name="mode">Einer der Enumerationswerte, der angibt, ob der Stream gelesen oder geschrieben wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> ist kein gültiger <see cref="T:System.IO.Compression.CompressionMode" />-Wert.
- oder -
<see cref="T:System.IO.Compression.CompressionMode" /> ist <see cref="F:System.IO.Compression.CompressionMode.Compress" />, und <see cref="P:System.IO.Stream.CanWrite" /> ist <see langword="false" />.
- oder -
<see cref="T:System.IO.Compression.CompressionMode" /> ist <see cref="F:System.IO.Compression.CompressionMode.Decompress" />, und <see cref="P:System.IO.Stream.CanRead" /> ist <see langword="false" />.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.DeflateStream" />-Klasse unter Verwendung des angegebenen Streams und des Komprimierungsmodus und lässt den Stream optional geöffnet.</summary>
      <param name="stream">Der zu komprimierende oder zu dekomprimierende Stream.</param>
      <param name="mode">Einer der Enumerationswerte, der angibt, ob der Stream gelesen oder geschrieben wird.</param>
      <param name="leaveOpen">
        <see langword="true" />, um den Stream offen zu lassen, nachdem das <see cref="T:System.IO.Compression.DeflateStream" />-Objekt freigegeben wurde, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> ist kein gültiger <see cref="T:System.IO.Compression.CompressionMode" />-Wert.
- oder -
<see cref="T:System.IO.Compression.CompressionMode" /> ist <see cref="F:System.IO.Compression.CompressionMode.Compress" />, und <see cref="P:System.IO.Stream.CanWrite" /> ist <see langword="false" />.
- oder -
<see cref="T:System.IO.Compression.CompressionMode" /> ist <see cref="F:System.IO.Compression.CompressionMode.Decompress" />, und <see cref="P:System.IO.Stream.CanRead" /> ist <see langword="false" />.</exception>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.BaseStream">
      <summary>Ruft einen Verweis auf den zugrunde liegenden Stream ab.</summary>
      <returns>Ein Streamobjekt, das den zugrunde liegenden Stream darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Lesevorgang. (Verwenden Sie stattdessen die <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />-Methode.)</summary>
      <param name="buffer">Das Bytearray, in das die Daten gelesen werden sollen.</param>
      <param name="offset">Der Byteoffset im <paramref name="array" />, ab dem aus dem Stream gelesene Daten gelesen werden.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Bytes.</param>
      <param name="asyncCallback">Ein optionaler asynchroner Rückruf, der nach Abschluss des Lesevorgangs aufgerufen werden soll.</param>
      <param name="asyncState">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Leseanforderung von anderen Anforderungen unterscheidet.</param>
      <returns>Ein Objekt, das den asynchronen Lesevorgang darstellt, der möglicherweise noch aussteht.</returns>
      <exception cref="T:System.IO.IOException">Die Methode hat versucht, asynchron über das Ende des Streams hinaus zu lesen, oder ein Plattenfehler ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentException">Mindestens eines der Argumente ist ungültig.</exception>
      <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</exception>
      <exception cref="T:System.NotSupportedException">Die aktuelle <see cref="T:System.IO.Compression.DeflateStream" />-Implementierung unterstützt den Lesevorgang nicht.</exception>
      <exception cref="T:System.InvalidOperationException">Dieser Aufruf kann nicht abgeschlossen werden.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Schreibvorgang. (Verwenden Sie stattdessen die <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />-Methode.)</summary>
      <param name="array">Der Puffer, aus dem Daten geschrieben werden sollen.</param>
      <param name="offset">Der Byteoffset im <paramref name="buffer" />, ab dem geschrieben werden soll.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <param name="asyncCallback">Ein optionaler asynchroner Rückruf, der nach Abschluss des Schreibvorgangs aufgerufen wird.</param>
      <param name="asyncState">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Schreibanforderung von anderen Anforderungen unterscheidet.</param>
      <returns>Ein Objekt, das den asynchronen Schreibvorgang darstellt, der möglicherweise noch aussteht.</returns>
      <exception cref="T:System.IO.IOException">Die Methode hat versucht, asynchron über das Ende des Streams hinaus zu schreiben, oder ein Plattenfehler ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentException">Mindestens eines der Argumente ist ungültig.</exception>
      <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</exception>
      <exception cref="T:System.NotSupportedException">Die aktuelle <see cref="T:System.IO.Compression.DeflateStream" />-Implementierung unterstützt den Schreibvorgang nicht.</exception>
      <exception cref="T:System.InvalidOperationException">Der Schreibvorgang kann nicht ausgeführt werden, da der Stream geschlossen ist.</exception>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.CanRead">
      <summary>Ruft einen Wert ab, der angibt, ob der Stream Lesevorgänge unterstützt, während eine Datei dekomprimiert wird.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.IO.Compression.CompressionMode" />-Wert <see langword="Decompress" /> ist und der zugrunde liegende Stream geöffnet ist und Lesevorgänge unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.CanSeek">
      <summary>Ruft einen Wert, der angibt, ob der Stream Suchvorgänge unterstützt.</summary>
      <returns>
        <see langword="false" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.CanWrite">
      <summary>Ruft einen Wert, der angibt, ob der Stream Schreibvorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.IO.Compression.CompressionMode" />-Wert gleich <see langword="Compress" /> ist und der zugrunde liegende Stream Schreibvorgänge unterstützt und nicht geschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.CopyTo(System.IO.Stream,System.Int32)">
      <summary>Liest alles Bytes aus dem aktuellen Deflate-Datenstrom und schreibt sie unter Verwendung einer angegebenen Puffergröße in einen anderen Datenstrom.</summary>
      <param name="destination">Der Datenstrom, in den der Inhalt des aktuellen Deflate-Datenstroms kopiert wird.</param>
      <param name="bufferSize">Die Größe des Puffers. Dieser Wert muss größer als 0 sein. Die Standardgröße ist 81920.</param>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>Liest die Bytes asynchron aus dem aktuellen Deflate-Datenstrom und schreibt sie unter Verwendung einer angegebenen Puffergröße in einen anderen Datenstrom.</summary>
      <param name="destination">Der Datenstrom, in den der Inhalt des aktuellen Deflate-Datenstroms kopiert wird.</param>
      <param name="bufferSize">Die Größe des Cookies in Bytes. Dieser Wert muss größer als 0 sein. Die Standardgröße ist 81920.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Kopiervorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.IO.Compression.DeflateStream" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.DisposeAsync">
      <summary>Gibt die nicht verwalteten Ressourcen, die von der <see cref="T:System.IO.Compression.DeflateStream" /> verwendet werden, asynchron frei.</summary>
      <returns>Eine Aufgabe, die den asynchronen Löschvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
      <summary>Wartet, bis der ausstehende asynchrone Lesevorgang abgeschlossen ist. (Verwenden Sie stattdessen die <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />-Methode.)</summary>
      <param name="asyncResult">Der Verweis auf die ausstehende asynchrone Anforderung, die beendet werden soll.</param>
      <returns>Die Anzahl der aus dem Stream gelesenen Bytes. Diese Anzahl kann zwischen 0 und der Anzahl der angeforderten Bytes liegen. <see cref="T:System.IO.Compression.DeflateStream" /> gibt null (0) nur am Ende des Streams zurück, andernfalls wird er blockiert, bis mindestens ein Byte verfügbar ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> basiert nicht auf einer <see cref="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />-Methode im aktuellen Stream.</exception>
      <exception cref="T:System.SystemException">Während eines Aufrufs von <see cref="M:System.Threading.WaitHandle.WaitOne" /> wurde eine Ausnahme ausgelöst.</exception>
      <exception cref="T:System.InvalidOperationException">Der Abschlussaufruf ist ungültig, da für diesen Stream asynchrone Lesevorgänge noch nicht beendet wurden.
- oder -
Der Stream ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Schreibvorgang. (Verwenden Sie stattdessen die <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />-Methode.)</summary>
      <param name="asyncResult">Ein Verweis auf die ausstehende asynchrone E/A-Anforderung.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> basiert nicht auf einer <see cref="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />-Methode im aktuellen Stream.</exception>
      <exception cref="T:System.Exception">Während eines Aufrufs von <see cref="M:System.Threading.WaitHandle.WaitOne" /> wurde eine Ausnahme ausgelöst.</exception>
      <exception cref="T:System.InvalidOperationException">Der Stream ist <see langword="null" />.
- oder -
Der Schreibaufruf für das Ende ist ungültig.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Flush">
      <summary>Die aktuelle Implementierung dieser Methode hat keine Funktion.</summary>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Löscht alle Puffer für diesen Deflate-Datenstrom asynchron, veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät und überwacht Abbruchanforderungen.</summary>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die die asynchrone Leerung darstellt.</returns>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.Length">
      <summary>Diese Eigenschaft wird nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns>Ein Long-Wert.</returns>
      <exception cref="T:System.NotSupportedException">Diese Eigenschaft wird für diesen Stream nicht unterstützt.</exception>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.Position">
      <summary>Diese Eigenschaft wird nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns>Ein Long-Wert.</returns>
      <exception cref="T:System.NotSupportedException">Diese Eigenschaft wird für diesen Stream nicht unterstützt.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest eine Anzahl von dekomprimierten Bytes in das angegebene Bytearray.</summary>
      <param name="array">Das Array zum Speichern von dekomprimierten Bytes.</param>
      <param name="offset">Das Byteoffset in <paramref name="array" />, an dem die gelesenen Bytes platziert werden.</param>
      <param name="count">Die maximale Anzahl der zu lesenden dekomprimierten Bytes.</param>
      <returns>Die Anzahl von Bytes, die in das Bytearray gelesen wurden.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.IO.Compression.CompressionMode" />-Wert war <see langword="Compress" />, als das Objekt erstellt wurde.
- oder -
Der zugrunde liegende Stream unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist kleiner als 0.
- oder -
Die <paramref name="array" />-Länge minus des Indexausgangspunkts ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.IO.InvalidDataException">Die Daten haben ein ungültiges Format.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Read(System.Span{System.Byte})">
      <summary>Liest eine Bytesequenz aus dem aktuellen Deflate-Datenstrom in eine Bytespanne und erhöht die Position innerhalb des Deflate-Datenstroms um die Anzahl der gelesen Bytes.</summary>
      <param name="buffer">Ein Bereich im Arbeitsspeicher. Bei der Rückgabe dieser Methode werden die Inhalte dieses Bereichs durch die aus der aktuellen Quelle gelesenen Bytes ersetzt.</param>
      <returns>Die Gesamtanzahl der in den Puffer gelesenen Bytes. Dies kann weniger als die Anzahl der im Puffer zugeordneten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder 0 (null), wenn das Ende des Streams erreicht ist.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Liest eine Folge von Bytes asynchron aus dem aktuellen Deflate-Datenstrom, schreibt diese in einen Bytearray, erhöht die Position im Deflate-Datenstrom um die Anzahl der gelesenen Bytes und überwacht Abbruchsanforderungen.</summary>
      <param name="array">Der Puffer, in den die Daten geschrieben werden sollen.</param>
      <param name="offset">Der Byteoffset im <paramref name="array" />, ab dem Daten aus dem Deflate-Datenstrom geschrieben werden.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Bytes.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt, der die Gesamtanzahl der in <paramref name="array" /> gelesenen Bytes umschließt. Der Ergebniswert kann niedriger als die Anzahl der angeforderten Bytes sein, wenn die Anzahl an derzeit verfügbaren Bytes kleiner ist als die angeforderte Anzahl, oder sie kann 0 (null) sein, wenn das Ende des Deflate-Datenstroms erreicht ist.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Liest eine Folge von Bytes asynchron aus dem aktuellen Deflate-Datenstrom, schreibt diese in einen Bytespeicherbereich, erhöht die Position im Deflate-Datenstrom um die Anzahl der gelesenen Bytes und überwacht Abbruchsanforderungen.</summary>
      <param name="buffer">Der Bereich im Arbeitsspeicher, in den die Daten geschrieben werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt, der die Gesamtanzahl der in den Puffer gelesenen Bytes umschließt. Der Ergebniswert kann geringer als die Anzahl der im Puffer zugeordneten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder er kann 0 (null) sein, wenn das Ende des Deflate-Datenstroms erreicht ist.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.ReadByte">
      <summary>Liest ein Byte aus dem Deflate-Datenstrom und erhöht die Position im Datenstrom um ein Byte, oder gibt „-1“ zurück, wenn das Ende des Deflate-Datenstroms erreicht ist.</summary>
      <returns>Das Byte ohne Vorzeichen, umgewandelt in <see langword="Int32" />, oder -1, wenn das Ende des Streams erreicht ist.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Dieser Vorgang wird nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="offset">Die Position im Stream.</param>
      <param name="origin">Einer der <see cref="T:System.IO.SeekOrigin" />-Werte.</param>
      <returns>Ein Long-Wert.</returns>
      <exception cref="T:System.NotSupportedException">Diese Eigenschaft wird für diesen Stream nicht unterstützt.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.SetLength(System.Int64)">
      <summary>Dieser Vorgang wird nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="value">Die Länge des Streams.</param>
      <exception cref="T:System.NotSupportedException">Diese Eigenschaft wird für diesen Stream nicht unterstützt.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Schreibt komprimierte Bytes aus dem angegebenen Bytearray in den zugrunde liegenden Stream.</summary>
      <param name="array">Der Puffer, der die zu komprimierenden Daten enthält.</param>
      <param name="offset">Das Byteoffset in <paramref name="array" />, aus dem die Bytes gelesen werden.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Bytes.</param>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Schreibt eine Bytesequenz in den aktuellen Deflate-Datenstrom und setzt die aktuelle Position in diesem Deflate-Datenstrom um die Anzahl der geschriebenen Bytes nach vorn.</summary>
      <param name="buffer">Ein Bereich im Arbeitsspeicher. Diese Methode kopiert den Inhalt dieses Bereichs in den aktuellen Deflate-Datenstrom.</param>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Schreibt komprimierte Bytes aus dem angegebenen Bytearray asynchron in den zugrunde liegenden Deflate-Datenstrom.</summary>
      <param name="array">Der Puffer, der die zu komprimierenden Daten enthält.</param>
      <param name="offset">Der nullbasierte Byteoffset in <paramref name="array" />, ab dem Bytes in den Deflate-Datenstrom kopiert werden.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Schreibt komprimierte Bytes aus dem angegebenen schreibgeschützten Speicherbereich asynchron in den zugrunde liegenden Deflate-Datenstrom.</summary>
      <param name="buffer">Die Region im Arbeitsspeicher, aus der die Daten für das Schreiben gelesen werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="T:System.IO.Compression.GZipStream">
      <summary>Stellt Methoden und Eigenschaften bereit, die zum Komprimieren und Dekomprimieren von Streams über die GZip-Datenformatspezifikation verwendet werden.</summary>
    </member>
    <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.GZipStream" />-Klasse mithilfe des angegebenen Stream- und Komprimierungsgrads.</summary>
      <param name="stream">Der zu komprimierende Stream.</param>
      <param name="compressionLevel">Einer der Enumerationswerte, der angibt, ob die Geschwindigkeit oder Komprimierungsleistungsfähigkeit priorisiert wird, wenn der Stream komprimiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der Stream unterstützt keine Schreibvorgänge wie die Komprimierung. (Die <see cref="P:System.IO.Stream.CanWrite" />-Eigenschaft für das Streamobjekt ist <see langword="false" />).</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.GZipStream" />-Klasse unter Verwendung des angegebenen Streams und der Komprimierungsebene und lässt den Stream optional geöffnet.</summary>
      <param name="stream">Der Stream, in den die komprimierten Daten geschrieben werden.</param>
      <param name="compressionLevel">Einer der Enumerationswerte, der angibt, ob die Geschwindigkeit oder Komprimierungsleistungsfähigkeit priorisiert wird, wenn der Stream komprimiert wird.</param>
      <param name="leaveOpen">
        <see langword="true" />, um das Streamobjekt offen zu lassen, nachdem das <see cref="T:System.IO.Compression.GZipStream" />-Objekt freigegeben wurde, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der Stream unterstützt keine Schreibvorgänge wie die Komprimierung. (Die <see cref="P:System.IO.Stream.CanWrite" />-Eigenschaft für das Streamobjekt ist <see langword="false" />).</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.GZipStream" />-Klasse mithilfe des angegebenen Stream- und Komprimierungsmodus.</summary>
      <param name="stream">Der Stream, in den die komprimierten oder dekomprimierten Daten geschrieben werden.</param>
      <param name="mode">Einer der Enumerationswerte, der angibt, ob der Stream gelesen oder geschrieben wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> ist kein gültiger <see cref="T:System.IO.Compression.CompressionMode" />-Enumerationswert.
- oder -
<see cref="T:System.IO.Compression.CompressionMode" /> ist <see cref="F:System.IO.Compression.CompressionMode.Compress" />, und <see cref="P:System.IO.Stream.CanWrite" /> ist <see langword="false" />.
- oder -
<see cref="T:System.IO.Compression.CompressionMode" /> ist <see cref="F:System.IO.Compression.CompressionMode.Decompress" />, und <see cref="P:System.IO.Stream.CanRead" /> ist <see langword="false" />.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.GZipStream" />-Klasse unter Verwendung des angegebenen Streams und des Komprimierungsmodus und lässt den Stream optional geöffnet.</summary>
      <param name="stream">Der zu komprimierende Stream.</param>
      <param name="mode">Einer der Enumerationswerte, der angibt, ob der Stream gelesen oder geschrieben wird.</param>
      <param name="leaveOpen">
        <see langword="true" />, um den Stream offen zu lassen, nachdem das <see cref="T:System.IO.Compression.GZipStream" />-Objekt freigegeben wurde, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> ist kein gültiger <see cref="T:System.IO.Compression.CompressionMode" />-Wert.
- oder -
<see cref="T:System.IO.Compression.CompressionMode" /> ist <see cref="F:System.IO.Compression.CompressionMode.Compress" />, und <see cref="P:System.IO.Stream.CanWrite" /> ist <see langword="false" />.
- oder -
<see cref="T:System.IO.Compression.CompressionMode" /> ist <see cref="F:System.IO.Compression.CompressionMode.Decompress" />, und <see cref="P:System.IO.Stream.CanRead" /> ist <see langword="false" />.</exception>
    </member>
    <member name="P:System.IO.Compression.GZipStream.BaseStream">
      <summary>Ruft einen Verweis auf den zugrunde liegenden Stream ab.</summary>
      <returns>Ein Streamobjekt, das den zugrunde liegenden Stream darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Lesevorgang. (Verwenden Sie stattdessen die <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />-Methode.)</summary>
      <param name="array">Das Bytearray, in das die Daten gelesen werden sollen.</param>
      <param name="offset">Der Byteoffset im <paramref name="array" />, ab dem aus dem Stream gelesene Daten gelesen werden.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Bytes.</param>
      <param name="asyncCallback">Ein optionaler asynchroner Rückruf, der nach Abschluss des Lesevorgangs aufgerufen werden soll.</param>
      <param name="asyncState">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Leseanforderung von anderen Anforderungen unterscheidet.</param>
      <returns>Ein Objekt, das den asynchronen Lesevorgang darstellt, der möglicherweise noch aussteht.</returns>
      <exception cref="T:System.IO.IOException">Die Methode hat versucht, asynchron über das Ende des Streams hinaus zu lesen, oder ein Datenträgerfehler ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentException">Mindestens eines der Argumente ist ungültig.</exception>
      <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</exception>
      <exception cref="T:System.NotSupportedException">Die aktuelle <see cref="T:System.IO.Compression.GZipStream" />-Implementierung unterstützt den Lesevorgang nicht.</exception>
      <exception cref="T:System.InvalidOperationException">Ein Lesevorgang kann nicht ausgeführt werden, da der Stream geschlossen ist.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Schreibvorgang. (Verwenden Sie stattdessen die <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />-Methode.)</summary>
      <param name="array">Der Puffer mit den Daten, die in den aktuellen Stream geschrieben werden sollen.</param>
      <param name="offset">Der Byteoffset im <paramref name="array" />, ab dem geschrieben werden soll.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <param name="asyncCallback">Ein optionaler asynchroner Rückruf, der nach Abschluss des Schreibvorgangs aufgerufen wird.</param>
      <param name="asyncState">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Schreibanforderung von anderen Anforderungen unterscheidet.</param>
      <returns>Ein Objekt, das den asynchronen Schreibvorgang darstellt, der möglicherweise noch aussteht.</returns>
      <exception cref="T:System.InvalidOperationException">Der zugrunde liegende Stream ist <see langword="null" />.
- oder -
Der zugrunde liegende Stream ist geschlossen.</exception>
    </member>
    <member name="P:System.IO.Compression.GZipStream.CanRead">
      <summary>Ruft einen Wert ab, der angibt, ob der Stream Lesevorgänge unterstützt, während eine Datei dekomprimiert wird.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.IO.Compression.CompressionMode" />-Wert gleich <see langword="Decompress," /> ist und der zugrunde liegende Stream Lesevorgänge unterstützt und nicht geschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Compression.GZipStream.CanSeek">
      <summary>Ruft einen Wert, der angibt, ob der Stream Suchvorgänge unterstützt.</summary>
      <returns>
        <see langword="false" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.IO.Compression.GZipStream.CanWrite">
      <summary>Ruft einen Wert, der angibt, ob der Stream Schreibvorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.IO.Compression.CompressionMode" />-Wert gleich <see langword="Compress" /> ist und der zugrunde liegende Stream Schreibvorgänge unterstützt und nicht geschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.CopyTo(System.IO.Stream,System.Int32)">
      <summary>Liest alles Bytes aus dem aktuellen GZip-Datenstrom und schreibt sie unter Verwendung einer angegebenen Puffergröße in einen anderen Datenstrom.</summary>
      <param name="destination">Der Datenstrom, in den der Inhalt des aktuellen GZip-Datenstroms kopiert wird.</param>
      <param name="bufferSize">Die Größe des Puffers. Dieser Wert muss größer als 0 sein. Die Standardgröße ist 81920.</param>
    </member>
    <member name="M:System.IO.Compression.GZipStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>Liest die Bytes asynchron aus dem aktuellen GZip-Datenstrom und schreibt sie unter Verwendung einer angegebenen Puffergröße in einen anderen Datenstrom.</summary>
      <param name="destination">Der Datenstrom, in den der Inhalt des aktuellen GZip-Datenstroms kopiert wird.</param>
      <param name="bufferSize">Die Größe des Cookies in Bytes. Dieser Wert muss größer als 0 sein. Die Standardgröße ist 81920.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Kopiervorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.IO.Compression.GZipStream" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.IO.Compression.GZipStream.DisposeAsync">
      <summary>Gibt die nicht verwalteten Ressourcen, die von der <see cref="T:System.IO.Compression.GZipStream" /> verwendet werden, asynchron frei.</summary>
      <returns>Eine Aufgabe, die den asynchronen Löschvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
      <summary>Wartet, bis der ausstehende asynchrone Lesevorgang abgeschlossen ist. (Verwenden Sie stattdessen die <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />-Methode.)</summary>
      <param name="asyncResult">Der Verweis auf die ausstehende asynchrone Anforderung, die beendet werden soll.</param>
      <returns>Die Anzahl der aus dem Stream gelesenen Bytes. Diese Anzahl kann zwischen 0 und der Anzahl der angeforderten Bytes liegen. <see cref="T:System.IO.Compression.GZipStream" /> gibt null (0) nur am Ende des Streams zurück, andernfalls wird er blockiert, bis mindestens ein Byte verfügbar ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> basiert nicht auf einer <see cref="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />-Methode im aktuellen Stream.</exception>
      <exception cref="T:System.InvalidOperationException">Der Abschlussvorgang kann nicht ausgeführt werden, da der Stream geschlossen ist.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
      <summary>Behandelt das Ende eines asynchronen Schreibvorgangs. (Verwenden Sie stattdessen die <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />-Methode.)</summary>
      <param name="asyncResult">Das -Objekt, das den asynchronen Aufruf darstellt.</param>
      <exception cref="T:System.InvalidOperationException">Der zugrunde liegende Stream ist <see langword="null" />.
- oder -
Der zugrunde liegende Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Flush">
      <summary>Die aktuelle Implementierung dieser Methode hat keine Funktion.</summary>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Löscht alle Puffer für diesen GZip-Datenstrom asynchron und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät und überwacht Abbruchanforderungen.</summary>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die die asynchrone Leerung darstellt.</returns>
    </member>
    <member name="P:System.IO.Compression.GZipStream.Length">
      <summary>Diese Eigenschaft wird nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns>Ein Long-Wert.</returns>
      <exception cref="T:System.NotSupportedException">Diese Eigenschaft wird für diesen Stream nicht unterstützt.</exception>
    </member>
    <member name="P:System.IO.Compression.GZipStream.Position">
      <summary>Diese Eigenschaft wird nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns>Ein Long-Wert.</returns>
      <exception cref="T:System.NotSupportedException">Diese Eigenschaft wird für diesen Stream nicht unterstützt.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest eine Anzahl von dekomprimierten Bytes in das angegebene Bytearray.</summary>
      <param name="array">Das Array, das zum Speichern von dekomprimierten Bytes verwendet wird.</param>
      <param name="offset">Das Byteoffset in <paramref name="array" />, an dem die gelesenen Bytes platziert werden.</param>
      <param name="count">Die maximale Anzahl der zu lesenden dekomprimierten Bytes.</param>
      <returns>Die Anzahl der Bytes, die im Bytearray dekomprimiert wurden. Wenn das Ende des Streams erreicht worden ist, wird 0 oder die Anzahl der gelesenen Bytes zurückgegeben.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.IO.Compression.CompressionMode" />-Wert war <see langword="Compress" />, als das Objekt erstellt wurde.
- oder -
Der zugrunde liegende Stream unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist kleiner als 0.
- oder -
Die <paramref name="array" />-Länge minus des Indexausgangspunkts ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.IO.InvalidDataException">Die Daten haben ein ungültiges Format.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Read(System.Span{System.Byte})">
      <summary>Liest eine Bytesequenz aus dem aktuellen GZip-Datenstrom in eine Bytespanne und erhöht die Position innerhalb des GZip-Datenstroms um die Anzahl der gelesen Bytes.</summary>
      <param name="buffer">Ein Bereich im Arbeitsspeicher. Bei der Rückgabe dieser Methode werden die Inhalte dieses Bereichs durch die aus der aktuellen Quelle gelesenen Bytes ersetzt.</param>
      <returns>Die Gesamtanzahl der in den Puffer gelesenen Bytes. Dies kann weniger als die Anzahl der im Puffer zugeordneten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder 0 (null), wenn das Ende des Streams erreicht ist.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Liest eine Bytesequenz asynchron aus dem aktuellen GZip-Datenstrom in ein Bytearray, erhöht die Position im GZip-Datenstrom um die Anzahl der gelesenen Bytes und überwacht Abbruchsanforderungen.</summary>
      <param name="array">Der Puffer, in den die Daten geschrieben werden sollen.</param>
      <param name="offset">Der Byteoffset in <paramref name="array" />, ab dem Daten aus dem GZip-Datenstrom geschrieben werden.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Bytes.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt, der die Gesamtanzahl der in <paramref name="array" /> gelesenen Bytes umschließt. Der Ergebniswert kann niedriger als die Anzahl der angeforderten Bytes sein, wenn die Anzahl an derzeit verfügbaren Bytes kleiner ist als die angeforderte Anzahl, oder sie kann 0 (null) sein, wenn das Ende des GZip-Datenstroms erreicht ist.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Liest eine Bytesequenz asynchron aus dem aktuellen GZip-Datenstrom in einen Bytebereich, erhöht die Position im GZip-Datenstrom um die Anzahl der gelesenen Bytes und überwacht Abbruchsanforderungen.</summary>
      <param name="buffer">Der Bereich im Arbeitsspeicher, in den die Daten geschrieben werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt, der die Gesamtanzahl der in den Puffer gelesenen Bytes umschließt. Der Ergebniswert kann geringer als die Anzahl der im Puffer zugeordneten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder er kann 0 (null) sein, wenn das Ende des GZip-Datenstroms erreicht ist.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.ReadByte">
      <summary>Liest ein Byte aus dem GZip-Datenstrom und erhöht die Position im Datenstrom um ein Byte, oder gibt „-1“ zurück, wenn das Ende des GZip-Datenstroms erreicht ist.</summary>
      <returns>Das Byte ohne Vorzeichen, umgewandelt in <see langword="Int32" />, oder -1, wenn das Ende des Streams erreicht ist.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Diese Eigenschaft wird nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="offset">Die Position im Stream.</param>
      <param name="origin">Einer der <see cref="T:System.IO.SeekOrigin" />-Werte.</param>
      <returns>Ein Long-Wert.</returns>
      <exception cref="T:System.NotSupportedException">Diese Eigenschaft wird für diesen Stream nicht unterstützt.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.SetLength(System.Int64)">
      <summary>Diese Eigenschaft wird nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="value">Die Länge des Streams.</param>
      <exception cref="T:System.NotSupportedException">Diese Eigenschaft wird für diesen Stream nicht unterstützt.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Schreibt komprimierte Bytes aus dem angegebenen Bytearray in den zugrunde liegenden GZip-Datenstrom.</summary>
      <param name="array">Der Puffer, der die zu komprimierenden Daten enthält.</param>
      <param name="offset">Das Byteoffset in <paramref name="array" />, aus dem die Bytes gelesen werden.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <exception cref="T:System.ObjectDisposedException">Der Schreibvorgang kann nicht ausgeführt werden, da der Stream geschlossen ist.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Schreibt eine Bytesequenz aus einer schreibgeschützten Bytespanne in den aktuellen GZip-Datenstrom und erhöht die aktuelle Position in diesem GZip-Datenstrom um die Anzahl der geschriebenen Bytes.</summary>
      <param name="buffer">Ein Bereich im Arbeitsspeicher. Diese Methode kopiert den Inhalt dieses Bereichs in den aktuellen GZip-Datenstrom.</param>
    </member>
    <member name="M:System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Schreibt komprimierte Bytes aus dem angegebenen Bytearray asynchron in den zugrunde liegenden GZip-Datenstrom.</summary>
      <param name="array">Der Puffer, der die zu komprimierenden Daten enthält.</param>
      <param name="offset">Der nullbasierte Byteoffset in <paramref name="array" />, ab dem Bytes in den GZip-Datenstrom kopiert werden.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Schreibt komprimierte Bytes aus dem angegebenen schreibgeschützten Bytespeicherbereich asynchron in den zugrunde liegenden GZip-Datenstrom.</summary>
      <param name="buffer">Die Region im Arbeitsspeicher, aus der die Daten für das Schreiben gelesen werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="T:System.IO.Compression.ZipArchive">
      <summary>Stellt ein Paket komprimierter Dateien im Zip-Archiv-Format dar.</summary>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.ZipArchive" />-Klasse aus dem angegebenen Stream.</summary>
      <param name="stream">Ein Stream, der das zu lesende Archiv enthält.</param>
      <exception cref="T:System.ArgumentException">Der Stream wurde bereits geschlossen oder unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.InvalidDataException">Die Inhalte des Streams haben nicht das ZIP-Archivformat.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.ZipArchive" />-Klasse aus dem angegebenen Stream und mit dem angegebenen Modus.</summary>
      <param name="stream">Der Eingabe- oder Ausgabestream.</param>
      <param name="mode">Einer der Enumerationswerte, der angibt, ob das Zip-Archiv verwendet wird, um Einträge zu lesen, zu erstellen oder zu aktualisieren.</param>
      <exception cref="T:System.ArgumentException">Der Stream ist bereits geschlossen oder die Funktionen des Streams stimmen nicht mit dem Modus überein.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> ist ein ungültiger Wert.</exception>
      <exception cref="T:System.IO.InvalidDataException">Die Inhalte des Streams konnten nicht als ZIP-Archiv interpretiert werden.
- oder -
<paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag im Archiv fehlt oder ist beschädigt und kann nicht gelesen werden.

oder -
<paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag ist zu groß, um in den Arbeitsspeicher zu passen.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.ZipArchive" />-Klasse für den angegebenen Stream und den angegebenen Modus und lässt den Stream optional geöffnet.</summary>
      <param name="stream">Der Eingabe- oder Ausgabestream.</param>
      <param name="mode">Einer der Enumerationswerte, der angibt, ob das Zip-Archiv verwendet wird, um Einträge zu lesen, zu erstellen oder zu aktualisieren.</param>
      <param name="leaveOpen">
        <see langword="true" />, um den Datenstrom geöffnet zu lassen, nach dem das <see cref="T:System.IO.Compression.ZipArchive" />-Objekt freigegeben wurde; andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Der Stream ist bereits geschlossen oder die Funktionen des Streams stimmen nicht mit dem Modus überein.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> ist ein ungültiger Wert.</exception>
      <exception cref="T:System.IO.InvalidDataException">Die Inhalte des Streams konnten nicht als ZIP-Archiv interpretiert werden.

oder -
<paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag im Archiv fehlt oder ist beschädigt und kann nicht gelesen werden.

- oder -
<paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag ist zu groß, um in den Arbeitsspeicher zu passen.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.ZipArchive" />-Klasse für den angegebenen Stream und den angegebenen Modus und verwendet dabei die angegebene Codierung für Eintragsnamen und lässt den Stream optional geöffnet.</summary>
      <param name="stream">Der Eingabe- oder Ausgabestream.</param>
      <param name="mode">Einer der Enumerationswerte, der angibt, ob das Zip-Archiv verwendet wird, um Einträge zu lesen, zu erstellen oder zu aktualisieren.</param>
      <param name="leaveOpen">
        <see langword="true" />, um den Datenstrom geöffnet zu lassen, nach dem das <see cref="T:System.IO.Compression.ZipArchive" />-Objekt freigegeben wurde; andernfalls <see langword="false" />.</param>
      <param name="entryNameEncoding">Die Codierung, die beim Lesen oder Schreiben von Eintragsnamen in diesem Archiv verwendet werden soll. Geben Sie einen Wert für diesen Parameter nur an, wenn eine Codierung für die Interoperabilität mit ZIP-Archiv-Tools und -Bibliotheken erforderlich ist, die die UTF-8-Codierung für Eintragsnamen nicht unterstützen.</param>
      <exception cref="T:System.ArgumentException">Der Stream ist bereits geschlossen oder die Funktionen des Streams stimmen nicht mit dem Modus überein.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> ist ein ungültiger Wert.</exception>
      <exception cref="T:System.IO.InvalidDataException">Die Inhalte des Streams konnten nicht als ZIP-Archiv interpretiert werden.
- oder -
<paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag im Archiv fehlt oder ist beschädigt und kann nicht gelesen werden.

oder -
<paramref name="mode" /> ist <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> und ein Eintrag ist zu groß, um in den Arbeitsspeicher zu passen.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.CreateEntry(System.String)">
      <summary>Erstellt einen leeren Eintrag, der den angegebenen Pfad und Eintragsnamen im ZIP-Archiv Ebene verwendet.</summary>
      <param name="entryName">Ein Pfad relativ zum Stamm des Archivs, der den Namen des Eintrags angibt, der erstellt werden soll.</param>
      <returns>Ein leerer Eintrag im ZIP-Archiv.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="entryName" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entryName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Das ZIP-Archiv unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Die ZIP-Archiv wurde freigegeben.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)">
      <summary>Erstellt einen leeren Eintrag, der den angegebenen Eintragsnamen und die Komprimierung im ZIP-Archiv Ebene verwendet.</summary>
      <param name="entryName">Ein Pfad relativ zum Stamm des Archivs, der den Namen des Eintrags angibt, der erstellt werden soll.</param>
      <param name="compressionLevel">Einer der Enumerationswerte, der angibt, ob Geschwindigkeit oder Komprimierungseffektivität priorisiert wird, wenn der Eintrag erstellt.</param>
      <returns>Ein leerer Eintrag im ZIP-Archiv.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="entryName" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entryName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Das ZIP-Archiv unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Die ZIP-Archiv wurde freigegeben.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.IO.Compression.ZipArchive" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.Dispose(System.Boolean)">
      <summary>Wird von den <see cref="M:System.IO.Compression.ZipArchive.Dispose" /> und <see cref="M:System.Object.Finalize" />-Methoden aufgerufen, um die nicht verwalteten Ressourcen freizugeben, die von der aktuellen Instanz der <see cref="T:System.IO.Compression.ZipArchive" />-Klasse verwendet werden, und beendet optional das Schreiben ins Archiv und gibt die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um das Schreiben des Archivs abzuschließen und sowohl nicht verwaltete als auch verwaltete Ressourcen freizugeben; <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.IO.Compression.ZipArchive.Entries">
      <summary>Ruft die Auflistung von Einträgen ab, die das ZIP-Archiv momentan enthält.</summary>
      <returns>Die Auflistung von Einträgen, die das ZIP-Archiv momentan enthält.</returns>
      <exception cref="T:System.NotSupportedException">Das Zip-Archiv unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Die ZIP-Archiv wurde freigegeben.</exception>
      <exception cref="T:System.IO.InvalidDataException">Das Zip-Archiv ist beschädigt, und seine Einträge konnten nicht abgerufen werden.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.GetEntry(System.String)">
      <summary>Ruft einen Wrapper für den angegebenen Eintrag im Zip-Archiv ab.</summary>
      <param name="entryName">Ein Pfad relativ zum Stamm des Archivs, das den Eintrag identifiziert, der abgerufen werden soll.</param>
      <returns>Ein Wrapper für den angegebenen Eintrag im Archiv. <see langword="null" />, wenn der Eintrag nicht im Archiv vorhanden ist.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="entryName" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entryName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Das Zip-Archiv unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Die ZIP-Archiv wurde freigegeben.</exception>
      <exception cref="T:System.IO.InvalidDataException">Das Zip-Archiv ist beschädigt, und seine Einträge konnten nicht abgerufen werden.</exception>
    </member>
    <member name="P:System.IO.Compression.ZipArchive.Mode">
      <summary>Ruft einen Wert ab, der den Typ der Aktion beschreibt, die das ZIP-Archiv für Einträge ausführen kann.</summary>
      <returns>Einer der Enumerationswerte, der den Typ der Aktion (Lesen, Erstellen oder Update) beschreibt, die das Zip-Archiv bei Einträgen ausführen kann.</returns>
    </member>
    <member name="T:System.IO.Compression.ZipArchiveEntry">
      <summary>Stellt eine komprimierte Datei in einem Zip-Archiv dar.</summary>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.Archive">
      <summary>Ruft das Zip-Archiv ab, zu dem der Eintrag gehört.</summary>
      <returns>Das Zip-Archiv, zu dem der Eintrag gehört, oder <see langword="null" />, wenn der Eintrag gelöscht wurde.</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.CompressedLength">
      <summary>Ruft die komprimierte Größe des unkomprimierten Eintrags im ZIP-Archiv ab.</summary>
      <returns>Die Größe des komprimierten Eintrags im ZIP-Archiv.</returns>
      <exception cref="T:System.InvalidOperationException">Der Wert der Eigenschaft ist nicht verfügbar, da der Eintrag geändert wurde.</exception>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.Crc32">
      <summary>Die zyklische 32-Bit-Redundanzprüfung (Cyclic Redundant Check, CRC).</summary>
      <returns>Eine Ganzzahl ohne Vorzeichen (4 Bytes), die das CRC-32-Feld darstellt.</returns>
    </member>
    <member name="M:System.IO.Compression.ZipArchiveEntry.Delete">
      <summary>Löscht den Eintrag aus dem Zip-Archiv.</summary>
      <exception cref="T:System.IO.IOException">Der Eintrag ist bereits für das Lesen oder Schreiben geöffnet.</exception>
      <exception cref="T:System.NotSupportedException">Das Zip-Archiv für diesen Eintrag wurde in einem anderen Modus als <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> geöffnet.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Zip-Archiv für diesen Eintrag wurde freigegeben.</exception>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.ExternalAttributes">
      <summary>Betriebssystem- und anwendungsspezifische Dateiattribute.</summary>
      <returns>Die externen Attribute, die von der Anwendung geschrieben wurden, als dieser Eintrag geschrieben wurde. Sie sind sowohl vom Hostbetriebssystem als auch von der Anwendung abhängig.</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.FullName">
      <summary>Ruft den relativen Pfad des Eintrags im ZIP-Archiv ab.</summary>
      <returns>Der relative Pfad des Eintrags im Zip-Archiv.</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.LastWriteTime">
      <summary>Ruft den letzten Zeitpunkt ab, zu dem der Eintrag im Zip-Archiv geändert wurde, oder legt diesen fest.</summary>
      <returns>Der letzte Zeitpunkt, an dem der Eintrag im ZIP-Archiv geändert wurde.</returns>
      <exception cref="T:System.NotSupportedException">Der Versuch, diese Eigenschaft festzulegen, ist fehlgeschlagen, da sich das Zip-Archiv für den Eintrag im <see cref="F:System.IO.Compression.ZipArchiveMode.Read" />-Modus befindet.</exception>
      <exception cref="T:System.IO.IOException">Der Archivmodus ist auf <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> festgelegt.
- oder -
Der Archivmodus ist auf <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> festgelegt, und der Eintrag wurde geöffnet.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Es wurde versucht, diese Eigenschaft auf einen Wert festzulegen, der entweder älter als 1980 am 1. Januar 0:00:00 (Mitternacht) ist oder höher als 2107 am 31. Dezember 23:59:58 (eine Sekunde vor Mitternacht).</exception>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.Length">
      <summary>Ruft die Größe des unkomprimierten Eintrags im ZIP-Archiv ab.</summary>
      <returns>Die Größe des unkomprimierten Eintrags im ZIP-Archiv.</returns>
      <exception cref="T:System.InvalidOperationException">Der Wert der Eigenschaft ist nicht verfügbar, da der Eintrag geändert wurde.</exception>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.Name">
      <summary>Ruft den Dateinamen des Eintrags im ZIP-Archiv ab.</summary>
      <returns>Der Dateiname des Eintrags im ZIP-Archiv.</returns>
    </member>
    <member name="M:System.IO.Compression.ZipArchiveEntry.Open">
      <summary>Öffnet den Eintrag aus dem Zip-Archiv.</summary>
      <returns>Der Stream, der den Inhalt des Eintrags darstellt.</returns>
      <exception cref="T:System.IO.IOException">Der Eintrag ist derzeit aktuell für das Schreiben geöffnet.
- oder -
Das Element wurde aus dem Archiv gelöscht.
- oder -
Das Archiv für diesen Eintrag wurde mit dem <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />-Modus geöffnet. Dieser Eintrag wurde bereits geschrieben.</exception>
      <exception cref="T:System.IO.InvalidDataException">Der Eintrag fehlt entweder im Archiv, oder er ist beschädigt und kann nicht gelesen werden.
- oder -
Der Eintrag wurde mit einer nicht unterstützten Komprimierungsmethode komprimiert.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Zip-Archiv für diesen Eintrag wurde freigegeben.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchiveEntry.ToString">
      <summary>Ruft den relativen Pfad des Eintrags im Zip-Archiv ab.</summary>
      <returns>Der relative Pfad des Eintrags, der in der <see cref="P:System.IO.Compression.ZipArchiveEntry.FullName" />-Eigenschaft gespeichert ist.</returns>
    </member>
    <member name="T:System.IO.Compression.ZipArchiveMode">
      <summary>Gibt Werte für die Interaktion mit Zip-Archiveinträgen an.</summary>
    </member>
    <member name="F:System.IO.Compression.ZipArchiveMode.Create">
      <summary>Nur das Erstellen neuer Archiveinträge ist zulässig.</summary>
    </member>
    <member name="F:System.IO.Compression.ZipArchiveMode.Read">
      <summary>Nur das Lesen von Archiveinträgen ist zulässig.</summary>
    </member>
    <member name="F:System.IO.Compression.ZipArchiveMode.Update">
      <summary>Lese- und Schreibvorgänge sind für die Archiveinträge zulässig.</summary>
    </member>
  </members>
</doc>