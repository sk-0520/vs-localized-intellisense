<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets.Client</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ClientWebSocket">
      <summary>Stellt einen Client zum Verbinden mit WebSocket-Diensten bereit.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.#ctor">
      <summary>Erstellt eine Instanz der <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Abort">
      <summary>Unterbricht die Verbindung und bricht alle ausstehenden E/A-Vorgänge ab.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Schließt die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz als asynchronen Vorgang.</summary>
      <param name="closeStatus">Der WebSocket-Schließstatus.</param>
      <param name="statusDescription">Eine Beschreibung des Schließstatus.</param>
      <param name="cancellationToken">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass dieser Vorgang abgebrochen werden muss.</param>
      <returns>Das Taskobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Schließt die Ausgabe für die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz in einem asynchronen Vorgang.</summary>
      <param name="closeStatus">Der WebSocket-Schließstatus.</param>
      <param name="statusDescription">Eine Beschreibung des Schließstatus.</param>
      <param name="cancellationToken">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass dieser Vorgang abgebrochen werden muss.</param>
      <returns>Das Taskobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatus">
      <summary>Ruft den Grund ab, warum der Schließen-Handshake für die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz ausgelöst wurde.</summary>
      <returns>Der Grund, warum der Schließen-Handshake ausgelöst wurde.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription">
      <summary>Ruft ab eine Beschreibung des Grunds ab, warum die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz geschlossen wurde.</summary>
      <returns>Die Beschreibung des Grunds, warum die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz geschlossen wurde.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Wird verwendet, um eine Verbindung mit einem WebSocket-Server als asynchronen Vorgang herzustellen.</summary>
      <param name="uri">Der URI des WebSocket-Servers, mit dem eine Verbindung hergestellt werden soll.</param>
      <param name="cancellationToken">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass der Vorgang abgebrochen werden muss.</param>
      <returns>Das Taskobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Dispose">
      <summary>Gibt die von der <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz verwendeten nicht verwalteten Ressourcen frei.</summary>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.Options">
      <summary>Ruft die „WebSocket“-Optionen für die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz ab.</summary>
      <returns>Die „WebSocket“-Optionen für die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>Empfängt Daten auf <see cref="T:System.Net.WebSockets.ClientWebSocket" /> in einem asynchronen Vorgang.</summary>
      <param name="buffer">Der Puffer zum Empfangen der Antwort.</param>
      <param name="cancellationToken">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass dieser Vorgang abgebrochen werden muss.</param>
      <returns>Das Taskobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse ist nicht verbunden.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Empfängt Daten auf <see cref="T:System.Net.WebSockets.ClientWebSocket" /> in einem asynchronen Vorgang.</summary>
      <param name="buffer">Der Speicherbereich, in dem die Antwort empfangen werden soll.</param>
      <param name="cancellationToken">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass dieser Vorgang abgebrochen werden muss.</param>
      <returns>Das Taskobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse ist nicht verbunden.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Sendet Daten in der <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse als asynchronen Vorgang.</summary>
      <param name="buffer">Der Puffer mit der zu sendenden Nachricht.</param>
      <param name="messageType">Einer der Enumerationswerte, der angibt, ob der Puffer Klartext enthält oder auf ein binäres Format hinweist.</param>
      <param name="endOfMessage">
        <see langword="true" />, um anzugeben, dass dies der letzte asynchrone Sendevorgang ist; sonst <see langword="false" />.</param>
      <param name="cancellationToken">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass dieser Vorgang abgebrochen werden muss.</param>
      <returns>Das Taskobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse ist nicht verbunden.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wurde geschlossen.</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Sendet Daten in der <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse eines schreibgeschützten Bytespeicherbereichs als asynchronen Vorgang.</summary>
      <param name="buffer">Der Speicherbereich, der die zu sendende Nachricht enthält.</param>
      <param name="messageType">Einer der Enumerationswerte, der angibt, ob der Puffer Klartext enthält oder auf ein binäres Format hinweist.</param>
      <param name="endOfMessage">
        <see langword="true" />, um anzugeben, dass dies der letzte asynchrone Sendevorgang ist; sonst <see langword="false" />.</param>
      <param name="cancellationToken">Ein Abbruchtoken, mit dem die Benachrichtigung verteilt wird, dass dieser Vorgang abgebrochen werden muss.</param>
      <returns>Das Taskobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Klasse ist nicht verbunden.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wurde geschlossen.</exception>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.State">
      <summary>Ruft den WebSocket-Zustand der <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz ab.</summary>
      <returns>Der WebSocket-Zustand der <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.SubProtocol">
      <summary>Ruft das unterstützte WebSocket-Unterprotokoll für die <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Instanz ab.</summary>
      <returns>Das unterstützte WebSocket-Unterprotokoll.</returns>
    </member>
    <member name="T:System.Net.WebSockets.ClientWebSocketOptions">
      <summary>Optionen, die mit einem <see cref="T:System.Net.WebSockets.ClientWebSocket" />-Objekt verwendet werden.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)">
      <summary>Fügt ein Unterprotokoll hinzu, das während des WebSocket-Verbindungshandshakes ausgehandelt werden soll.</summary>
      <param name="subProtocol">Das hinzuzufügende WebSocketunterprotokoll.</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates">
      <summary>Ruft eine Auflistung der clientseitige Zertifikate ab oder legt sie fest.</summary>
      <returns>Eine Auflistung clientseitiger Zertifikate.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Cookies">
      <summary>Ruft die der Anforderung zugeordneten Cookies ab oder legt diese fest.</summary>
      <returns>Die mit dieser Anforderung verknüpften Cookies.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Credentials">
      <summary>Ruft die Anmeldungsinformationen für den Client ab oder legt diese fest.</summary>
      <returns>Die Anmeldeinformationen für den Client.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval">
      <summary>Ruft das Keep-Alive-Intervall des WebSocket-Protokolls ab oder legt es fest.</summary>
      <returns>Das Keep-Alive-Intervall des WebSocket-Protokolls.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Proxy">
      <summary>Ruft den Proxy für WebSocket-Anforderungen ab oder legt diesen fest.</summary>
      <returns>Der Proxy für WebSocket-Anforderungen.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.RemoteCertificateValidationCallback">
      <summary>Ruft den Rückruf zum Überprüfen eines Serverzertifikats ab oder legt diesen fest.</summary>
      <returns>Eine Rückruffunktion zur Überprüfung des Serverzertifikats.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)">
      <summary>Legt die Clientpufferparameter fest.</summary>
      <param name="receiveBufferSize">Die Größe (in Bytes) des Client-Empfangspuffers.</param>
      <param name="sendBufferSize">Die Größe (in Bytes) des Client-Sendepuffers.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})">
      <summary>Legt Clientpufferparameter fest.</summary>
      <param name="receiveBufferSize">Die Größe (in Bytes) des Client-Empfangspuffers.</param>
      <param name="sendBufferSize">Die Größe (in Bytes) des Client-Sendepuffers.</param>
      <param name="buffer">Die zu verwendende Empfangspuffergröße.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)">
      <summary>Erstellt einen HTTP-Anforderungsheader und seinen Wert.</summary>
      <param name="headerName">Der Name des HTTP-Headers.</param>
      <param name="headerValue">Der Wert des HTTP-Headers.</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab oder legt ihn fest, der angibt, ob die Anmeldeinformationen während WebSocket-Handshakes verwendet werden.</summary>
      <returns>
        <see langword="true" />, wenn während des WebSocket-Handshakes Standard Anmelde Informationen verwendet werden sollen. Andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
  </members>
</doc>